Registered instructions: #{code_atom code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_pop string_substring integer_mult code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger vector_float_pushall char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq vector_float_butlast exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot vector_string_concat vector_float_indexof code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot print_char vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_rot float_yankdup vector_string_rot zip_replace_fromexec vector_string_take integer_add vector_integer_occurrencesof integer_shove genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec string_take zip_left zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot float_fromchar float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop float_eq vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat print_integer code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt return_integer_pop float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_integer_pop vector_boolean_last exec_do*times zip_pop zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace integer_dup vector_boolean_nth vector_string_length string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete code_empty float_inc zip_right vector_float_length float_rand integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains vector_boolean_occurrencesof genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 2.0.53-SNAPSHOT
Hash of last Git commit = 6ba041d0425e6a2dd7ccbefee64fd2e0649f4f33
GitHub link = https://github.com/lspector/Clojush/commit/6ba041d0425e6a2dd7ccbefee64fd2e0649f4f33
alignment-deviation = 10
alternation-rate = 0.01
atom-generators = (integer_sub integer_inc boolean_stackdepth autoconstructive_integer_rand boolean_pop genome_close_inc genome_new exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq genome_silence genome_pop integer_mult boolean_or boolean_empty exec_do*while genome_gene_randomize exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte genome_yankdup boolean_shove boolean_rot integer_div integer_lte integer_mod genome_swap exec_do*count integer_rot integer_add integer_shove genome_dup integer_max genome_yank integer_stackdepth genome_eq boolean_dup genome_rot exec_eq integer_yank exec_while integer_min exec_swap genome_rotate genome_parent2 exec_do*range exec_if boolean_invert_first_then_and genome_flush integer_fromboolean boolean_frominteger genome_gene_dup boolean_eq genome_gene_copy integer_flush integer_gt boolean_not genome_unsilence exec_do*times genome_gene_copy_range exec_pop genome_parent1 exec_s integer_lt genome_stackdepth exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty genome_gene_delete integer_dec genome_shove genome_empty genome_toggle_silent exec_stackdepth boolean_and exec_flush exec_when genome_close_dec boolean_invert_second_then_and boolean_yankdup autoconstructive_integer_rand)
autoconstructive = true
autoconstructive-boolean-rand-enrichment = -1
autoconstructive-integer-rand-enrichment = 1
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
epigenetic-markers = [:close :silent]
error-function = #object[clojush.problems.synthetic.smallvariant$smallvariant_error 0x1c98290c clojush.problems.synthetic.smallvariant$smallvariant_error@1c98290c]
error-threshold = 0
evalpush-limit = 1000
evalpush-time-limit = 0
final-report-simplifications = 1000
genetic-operator-probabilities = {:autoconstruction 1.0}
json-log-filename = log.json
json-log-program-strings = false
lexicase-leakage = 0.1
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1000
max-generations = 1001
max-genome-size-in-initial-program = 50
max-point-evaluations = 1.0E101
max-points = 500
meta-error-categories = []
normalization = :none
parent-reversion-probability = 1.0
parent-selection = :lexicase
pass-individual-to-error-function = true
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-behavioral-diversity = false
print-cosmos-data = false
print-csv-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = false
problem-specific-report = #object[clojush.pushgp.report$default_problem_specific_report 0x5e8f9e2d clojush.pushgp.report$default_problem_specific_report@5e8f9e2d]
random-seed = 116 23 -100 53 50 92 -57 -90 -39 52 81 68 59 -69 83 3
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
save-initial-population = false
silent-instruction-probability = 0.2
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
trivial-geography-radius = 0
uniform-close-mutation-rate = 0.1
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent true, :instruction exec_yank} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction integer_inc} {:close 2, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction exec_stackdepth} {:close 0, :silent true, :instruction integer_sub} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent true, :instruction exec_y} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 1, :silent true, :instruction integer_lte} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_swap} {:close 2, :silent true, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction integer_dup} {:close 2, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_dup})
Lexicase best program: (genome_dup exec_dup (boolean_frominteger) exec_when (exec_dup () integer_yank genome_gene_copy integer_empty genome_close_inc exec_noop integer_inc genome_gene_delete) integer_dup exec_do*range () integer_flush genome_new genome_close_dec integer_fromboolean genome_parent2 genome_flush genome_gene_copy_range genome_stackdepth integer_lte integer_min integer_mod integer_lte integer_swap genome_close_dec exec_swap (boolean_pop) (integer_shove) integer_dup exec_dup ())
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 41
Percent parens: 0.195
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent true, :instruction exec_yank} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction integer_inc} {:close 2, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction exec_stackdepth} {:close 0, :silent true, :instruction integer_sub} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent true, :instruction exec_y} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 1, :silent true, :instruction integer_lte} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_swap} {:close 2, :silent true, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction integer_dup} {:close 2, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_dup})
Zero cases best program: (genome_dup exec_dup (boolean_frominteger) exec_when (exec_dup () integer_yank genome_gene_copy integer_empty genome_close_inc exec_noop integer_inc genome_gene_delete) integer_dup exec_do*range () integer_flush genome_new genome_close_dec integer_fromboolean genome_parent2 genome_flush genome_gene_copy_range genome_stackdepth integer_lte integer_min integer_mod integer_lte integer_swap genome_close_dec exec_swap (boolean_pop) (integer_shove) integer_dup exec_dup ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 41
Percent parens: 0.195
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent false, :instruction genome_empty} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent true, :instruction exec_swap} {:close 0, :silent true, :instruction integer_fromboolean} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent true, :instruction integer_div} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent true, :instruction genome_flush} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_silence} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction exec_when} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction exec_y} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_do*times} {:close 1, :silent true, :instruction genome_gene_copy} {:close 0, :silent true, :instruction genome_flush} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_frominteger} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_fromboolean})
Best program: (genome_empty boolean_shove integer_div exec_stackdepth genome_close_dec exec_eq boolean_and exec_shove (exec_empty integer_mod genome_rotate integer_flush) integer_pop boolean_frominteger boolean_flush exec_empty exec_y (boolean_stackdepth) genome_toggle_silent exec_noop exec_stackdepth exec_dup (integer_stackdepth) genome_rotate genome_eq exec_do*times (integer_min exec_swap (boolean_stackdepth genome_stackdepth) (boolean_swap integer_eq exec_dup (genome_yank boolean_frominteger genome_gene_randomize) integer_fromboolean)))
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 47
Size: 45
Percent parens: 0.178
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.041
Average program size in population (points): 25.924
Average percent parens in population: 0.235
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 0
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 344945
--- Timings ---
Current time: 1451159151992 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction integer_yankdup} {:close 1, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction integer_yank})
Lexicase best program: (exec_do*times (boolean_invert_first_then_and exec_dup (integer_yankdup integer_min) integer_shove exec_pop () integer_yank))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 12
Percent parens: 0.333
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction integer_yankdup} {:close 1, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction integer_yank})
Zero cases best program: (exec_do*times (boolean_invert_first_then_and exec_dup (integer_yankdup integer_min) integer_shove exec_pop () integer_yank))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 12
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction genome_silence} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent true, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent true, :instruction boolean_yankdup} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent true, :instruction exec_if} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent true, :instruction exec_shove} {:close 1, :silent true, :instruction boolean_eq} {:close 1, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent true, :instruction genome_gene_copy} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_gte})
Best program: (genome_gene_copy exec_while (exec_swap (integer_yank) (exec_rot (exec_yankdup) (exec_y (boolean_invert_second_then_and genome_yankdup genome_rot boolean_rot) integer_swap exec_stackdepth boolean_invert_second_then_and genome_eq genome_unsilence) (exec_rot (integer_mult exec_shove (integer_gte)) () ()))))
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 34
Size: 32
Percent parens: 0.375
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 26.005
Average program size in population (points): 26.561
Average percent parens in population: 0.227
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1086687
--- Timings ---
Current time: 1451159154779 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction genome_gene_delete} {:close 0, :silent true, :instruction genome_rot} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent true, :instruction integer_yank} {:close 0, :silent true, :instruction genome_shove} {:close 1, :silent false, :instruction exec_swap} {:close 1, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 1, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent true, :instruction exec_stackdepth} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent true, :instruction integer_add} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_eq})
Lexicase best program: (integer_eq exec_when (exec_yank boolean_eq boolean_rot exec_swap () (genome_new) integer_yankdup boolean_empty exec_shove (exec_stackdepth genome_gene_copy_range genome_gene_randomize integer_inc integer_eq genome_swap) boolean_invert_first_then_and genome_toggle_silent exec_do*times () genome_swap boolean_stackdepth) exec_eq genome_parent1 boolean_yankdup boolean_shove genome_dup integer_lte integer_inc integer_gt genome_eq genome_swap genome_close_inc exec_shove (boolean_dup genome_parent1 exec_empty genome_swap boolean_pop) genome_eq)
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 46
Percent parens: 0.152
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction genome_gene_delete} {:close 0, :silent true, :instruction genome_rot} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent true, :instruction integer_yank} {:close 0, :silent true, :instruction genome_shove} {:close 1, :silent false, :instruction exec_swap} {:close 1, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 1, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent true, :instruction exec_stackdepth} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent true, :instruction integer_add} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_eq})
Zero cases best program: (integer_eq exec_when (exec_yank boolean_eq boolean_rot exec_swap () (genome_new) integer_yankdup boolean_empty exec_shove (exec_stackdepth genome_gene_copy_range genome_gene_randomize integer_inc integer_eq genome_swap) boolean_invert_first_then_and genome_toggle_silent exec_do*times () genome_swap boolean_stackdepth) exec_eq genome_parent1 boolean_yankdup boolean_shove genome_dup integer_lte integer_inc integer_gt genome_eq genome_swap genome_close_inc exec_shove (boolean_dup genome_parent1 exec_empty genome_swap boolean_pop) genome_eq)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 46
Percent parens: 0.152
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction genome_shove})
Best program: (integer_mult exec_do*range (boolean_and integer_lte genome_shove))
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 5
Size: 7
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.644
Average program size in population (points): 26.398
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1932355
--- Timings ---
Current time: 1451159157152 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_close_dec})
Lexicase best program: (exec_if (genome_eq) (exec_empty genome_gene_dup genome_close_dec))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 8
Percent parens: 0.375
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_close_dec})
Zero cases best program: (exec_if (genome_eq) (exec_empty genome_gene_dup genome_close_dec))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 8
Percent parens: 0.375
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_yank} {:close 1, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction genome_gene_copy_range} {:close 1, :silent false, :instruction integer_yank} {:close 0, :silent true, :instruction exec_shove} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction exec_rot} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction genome_gene_copy} {:close 1, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction exec_do*count} {:close 2, :silent false, :instruction boolean_frominteger} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction integer_mod})
Best program: (exec_yank integer_mod exec_eq integer_min boolean_empty exec_stackdepth genome_new exec_k (integer_yank) (genome_close_dec) boolean_pop exec_rot () (genome_gene_copy genome_swap) (genome_gene_copy integer_dec integer_add boolean_xor exec_k (genome_yank exec_do*while (genome_stackdepth genome_parent1 boolean_shove integer_dup integer_sub boolean_frominteger)) (genome_rotate) integer_dec integer_mod))
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 39
Size: 39
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 26.17
Average program size in population (points): 27.064
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2795542
--- Timings ---
Current time: 1451159159528 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction integer_mod} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_yankdup} {:close 2, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction genome_close_dec} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction exec_rot} {:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent true, :instruction exec_flush})
Lexicase best program: (exec_pop (genome_gene_delete genome_dup exec_s (genome_empty exec_yankdup genome_close_inc) () (boolean_invert_first_then_and boolean_invert_second_then_and exec_eq) integer_shove exec_rot () (boolean_flush exec_k (exec_empty boolean_shove autoconstructive_integer_rand) (exec_swap (integer_inc) ())) ()))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 31
Percent parens: 0.387
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction integer_mod} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_yankdup} {:close 2, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction genome_close_dec} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction exec_rot} {:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent true, :instruction exec_flush})
Zero cases best program: (exec_pop (genome_gene_delete genome_dup exec_s (genome_empty exec_yankdup genome_close_inc) () (boolean_invert_first_then_and boolean_invert_second_then_and exec_eq) integer_shove exec_rot () (boolean_flush exec_k (exec_empty boolean_shove autoconstructive_integer_rand) (exec_swap (integer_inc) ())) ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 31
Percent parens: 0.387
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent true, :instruction integer_pop} {:close 1, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction integer_min} {:close 0, :silent false, :instruction exec_flush} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent true, :instruction boolean_swap} {:close 2, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction exec_do*while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction exec_flush} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction exec_pop} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_gene_dup} {:close 1, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction boolean_or} {:close 1, :silent false, :instruction integer_yankdup} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent true, :instruction integer_inc} {:close 1, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_flush} {:close 1, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction integer_yankdup})
Best program: (integer_add integer_dup exec_do*count (genome_unsilence) exec_flush exec_s () (genome_yankdup exec_eq boolean_yank) () autoconstructive_integer_rand boolean_frominteger genome_yank exec_do*range (integer_sub) boolean_shove exec_pop (exec_empty) exec_do*while (exec_flush) integer_fromboolean boolean_yankdup boolean_dup boolean_dup exec_do*while (genome_parent2 genome_empty) integer_mod genome_gene_dup integer_gt exec_when (boolean_or integer_yankdup) integer_div genome_rot genome_silence boolean_yankdup genome_flush exec_shove () genome_flush integer_yankdup)
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 49
Size: 51
Percent parens: 0.216
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.534
Average program size in population (points): 26.636
Average percent parens in population: 0.236
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.993
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 3712647
--- Timings ---
Current time: 1451159161921 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_shove} {:close 0, :silent true, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent true, :instruction integer_empty} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_gt})
Lexicase best program: (integer_shove integer_gte integer_pop exec_yankdup boolean_dup integer_stackdepth integer_empty exec_pop (exec_noop boolean_rot autoconstructive_integer_rand genome_unsilence genome_stackdepth) integer_fromboolean exec_dup (exec_do*range (integer_gt)))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 21
Percent parens: 0.190
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_shove} {:close 0, :silent true, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent true, :instruction integer_empty} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_gt})
Zero cases best program: (integer_shove integer_gte integer_pop exec_yankdup boolean_dup integer_stackdepth integer_empty exec_pop (exec_noop boolean_rot autoconstructive_integer_rand genome_unsilence genome_stackdepth) integer_fromboolean exec_dup (exec_do*range (integer_gt)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 21
Percent parens: 0.190
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction integer_add} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent true, :instruction exec_yankdup} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction genome_rotate} {:close 1, :silent false, :instruction integer_yankdup} {:close 1, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent true, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction exec_swap})
Best program: (exec_dup (genome_flush boolean_eq genome_gene_copy boolean_or boolean_stackdepth boolean_invert_first_then_and integer_inc integer_eq exec_y (genome_unsilence integer_mult integer_dup exec_y (integer_fromboolean integer_yankdup) exec_if () (genome_gene_delete) genome_shove boolean_frominteger genome_unsilence boolean_not) genome_yankdup) integer_div genome_gene_randomize boolean_shove integer_max boolean_invert_first_then_and exec_yank boolean_yankdup integer_mult integer_inc exec_noop exec_flush exec_do*range (genome_yankdup exec_shove (exec_swap () ())))
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 47
Size: 48
Percent parens: 0.208
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 24.992
Average program size in population (points): 25.746
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.993
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 4564601
--- Timings ---
Current time: 1451159164263 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction exec_yank} {:close 1, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction genome_gene_dup} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent true, :instruction integer_fromboolean} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction integer_gte} {:close 2, :silent true, :instruction integer_pop} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction genome_empty} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction integer_empty})
Lexicase best program: (boolean_pop integer_div exec_shove (exec_yank) integer_inc genome_gene_dup genome_empty integer_shove genome_dup autoconstructive_integer_rand exec_if (integer_div) (exec_when (genome_gene_copy) integer_empty integer_sub) integer_lt exec_while () boolean_not genome_silence integer_dup genome_parent1 exec_while (genome_stackdepth exec_if (integer_max) (integer_empty)))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 36
Percent parens: 0.250
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction exec_yank} {:close 1, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction genome_gene_dup} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent true, :instruction integer_fromboolean} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction integer_gte} {:close 2, :silent true, :instruction integer_pop} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction genome_empty} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction integer_empty})
Zero cases best program: (boolean_pop integer_div exec_shove (exec_yank) integer_inc genome_gene_dup genome_empty integer_shove genome_dup autoconstructive_integer_rand exec_if (integer_div) (exec_when (genome_gene_copy) integer_empty integer_sub) integer_lt exec_while () boolean_not genome_silence integer_dup genome_parent1 exec_while (genome_stackdepth exec_if (integer_max) (integer_empty)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 36
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_dup} {:close 1, :silent true, :instruction exec_yankdup} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 1, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent true, :instruction integer_sub} {:close 0, :silent false, :instruction exec_stackdepth})
Best program: (boolean_dup exec_if (genome_toggle_silent) (genome_shove) genome_toggle_silent genome_gene_randomize integer_fromboolean exec_stackdepth integer_div integer_gt boolean_frominteger integer_yank exec_stackdepth)
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 16
Size: 16
Percent parens: 0.188
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.092
Average program size in population (points): 25.988
Average percent parens in population: 0.240
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 5328294
--- Timings ---
Current time: 1451159166538 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent true, :instruction genome_rot} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction genome_flush})
Lexicase best program: (boolean_flush boolean_rot exec_shove (integer_rot genome_flush))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 7
Percent parens: 0.286
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent true, :instruction genome_rot} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction genome_flush})
Zero cases best program: (boolean_flush boolean_rot exec_shove (integer_rot genome_flush))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 7
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction boolean_rot} {:close 1, :silent true, :instruction integer_mod} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent true, :instruction genome_parent2} {:close 0, :silent true, :instruction integer_div} {:close 1, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent true, :instruction exec_s} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent false, :instruction genome_empty})
Best program: (exec_do*while (integer_dup boolean_empty integer_sub integer_add genome_gene_randomize genome_shove boolean_invert_second_then_and boolean_rot) genome_pop genome_stackdepth genome_eq genome_close_dec integer_yank genome_silence genome_rot genome_dup genome_unsilence boolean_invert_second_then_and boolean_pop integer_flush exec_stackdepth integer_fromboolean integer_fromboolean integer_eq boolean_frominteger genome_gene_delete integer_mult genome_gene_delete exec_yankdup integer_lt exec_rot (boolean_xor genome_empty) () ())
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 44
Size: 39
Percent parens: 0.128
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.236
Average program size in population (points): 25.886
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.993
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 6237989
--- Timings ---
Current time: 1451159168930 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent true, :instruction genome_swap} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction exec_y})
Zero cases best program: (integer_yank integer_shove integer_mult exec_y ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 999000.051
Median total errors in population: 1000000
Error averages by case: (999000.051)
Error minima by case: (51)
Average genome size in population (length): 25.381
Average program size in population (points): 25.92
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 7129404
--- Timings ---
Current time: 1451159171408 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent true, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction boolean_rot} {:close 1, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_new} {:close 1, :silent false, :instruction genome_pop} {:close 1, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_dup} {:close 1, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction exec_s} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction boolean_empty})
Zero cases best program: (exec_yank genome_gene_copy exec_when () genome_new genome_pop genome_silence boolean_dup exec_do*range () boolean_invert_first_then_and genome_rot genome_rotate exec_yankdup genome_parent1 boolean_empty)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 17
Percent parens: 0.176
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 994000.306
Median total errors in population: 1000000
Error averages by case: (994000.306)
Error minima by case: (51)
Average genome size in population (length): 26.522
Average program size in population (points): 27.701
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 943
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 7607031
--- Timings ---
Current time: 1451159177629 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_dec})
Zero cases best program: (genome_gene_copy integer_dec)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 3
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (8)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent true, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range})
Best program: (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) integer_gte boolean_pop exec_do*range ()) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 58
Percent parens: 0.293
--- Population Statistics ---
Average total errors in population: 992000.408
Median total errors in population: 1000000
Error averages by case: (992000.408)
Error minima by case: (51)
Average genome size in population (length): 26.65
Average program size in population (points): 28.118
Average percent parens in population: 0.237
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.952
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 927
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 8058545
--- Timings ---
Current time: 1451159183707 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction integer_div} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction integer_div} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction integer_add} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_if} {:close 0, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction boolean_yankdup} {:close 2, :silent false, :instruction integer_swap} {:close 1, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction integer_yank} {:close 1, :silent true, :instruction genome_shove})
Zero cases best program: (exec_s () (genome_gene_copy_range boolean_frominteger boolean_invert_second_then_and genome_close_inc boolean_yank) (integer_div exec_yankdup) genome_flush genome_flush boolean_not boolean_not integer_add boolean_invert_first_then_and genome_parent1 integer_swap genome_gene_randomize boolean_invert_second_then_and exec_do*times (genome_gene_copy boolean_yankdup integer_swap) exec_if () (integer_yank))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 31
Percent parens: 0.226
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 996000.204
Median total errors in population: 1000000
Error averages by case: (996000.204)
Error minima by case: (51)
Average genome size in population (length): 26.089
Average program size in population (points): 27.139
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 958
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 8538644
--- Timings ---
Current time: 1451159189007 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent true, :instruction integer_gte} {:close 1, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction genome_parent2} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction boolean_swap} {:close 1, :silent true, :instruction integer_eq} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction boolean_flush} {:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction boolean_flush})
Zero cases best program: (boolean_and genome_gene_copy_range integer_mod genome_silence boolean_swap exec_when (exec_if () (integer_eq boolean_frominteger exec_if (autoconstructive_integer_rand integer_mod exec_empty boolean_flush integer_pop genome_flush genome_toggle_silent boolean_invert_first_then_and boolean_swap autoconstructive_integer_rand exec_k (genome_gene_randomize) (boolean_flush) integer_sub boolean_flush) ())))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 33
Percent parens: 0.242
--- Lexicase Population Statistics ---
Count of elite individuals by case: (9)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 991000.459
Median total errors in population: 1000000
Error averages by case: (991000.459)
Error minima by case: (51)
Average genome size in population (length): 27.06
Average program size in population (points): 28.569
Average percent parens in population: 0.242
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.954
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 925
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 9029659
--- Timings ---
Current time: 1451159195992 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction exec_y} {:close 0, :silent true, :instruction boolean_and})
Zero cases best program: (genome_gene_randomize genome_swap boolean_and genome_silence genome_rotate boolean_eq genome_pop integer_min exec_shove ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 998000.102
Median total errors in population: 1000000
Error averages by case: (998000.102)
Error minima by case: (51)
Average genome size in population (length): 26.926
Average program size in population (points): 28.057
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.968
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 943
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 9535984
--- Timings ---
Current time: 1451159201230 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent false, :instruction genome_eq})
Zero cases best program: (genome_empty genome_eq)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 3
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (13)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 987000.663
Median total errors in population: 1000000
Error averages by case: (987000.663)
Error minima by case: (51)
Average genome size in population (length): 27.929
Average program size in population (points): 29.171
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 929
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 10037768
--- Timings ---
Current time: 1451159208093 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range})
Lexicase best program: (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) exec_rot (integer_gte boolean_pop exec_do*range ()) () ()) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 62
Percent parens: 0.323
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction exec_swap} {:close 1, :silent true, :instruction integer_add} {:close 1, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_div} {:close 1, :silent true, :instruction boolean_and} {:close 2, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_yank})
Zero cases best program: (exec_pop (boolean_swap autoconstructive_integer_rand exec_yank integer_mult autoconstructive_integer_rand boolean_rot integer_yank) integer_yank exec_swap (integer_dec) (integer_yankdup integer_div exec_if () () genome_shove integer_lte boolean_and integer_lte exec_yank boolean_shove integer_empty exec_do*range (integer_sub) boolean_yankdup genome_parent1 genome_close_dec exec_swap (integer_sub boolean_shove exec_eq exec_yank) ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 40
Percent parens: 0.225
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range})
Best program: (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) boolean_stackdepth integer_gte boolean_pop exec_do*range ()) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 995000.255
Median total errors in population: 1000000
Error averages by case: (995000.255)
Error minima by case: (51)
Average genome size in population (length): 27.264
Average program size in population (points): 28.544
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 943
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 10539744
--- Timings ---
Current time: 1451159214364 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction integer_max} {:close 0, :silent true, :instruction boolean_xor} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_swap} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_yank} {:close 1, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction boolean_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent true, :instruction integer_min} {:close 0, :silent false, :instruction genome_shove} {:close 1, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction genome_silence} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent true, :instruction exec_y} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_dup})
Zero cases best program: (genome_parent2 genome_gene_copy_range integer_max integer_gte boolean_frominteger exec_while (integer_swap boolean_stackdepth) exec_do*while (integer_pop exec_yank boolean_empty) exec_while () integer_lt genome_flush integer_empty genome_empty exec_flush genome_gene_copy integer_mod exec_rot (genome_shove exec_shove () boolean_invert_first_then_and integer_max genome_gene_delete exec_noop genome_rotate) (exec_swap (exec_do*count (integer_lt exec_eq exec_do*times (boolean_not genome_gene_dup))) ()) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 47
Percent parens: 0.255
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range})
Best program: (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) integer_mod integer_gte boolean_pop exec_do*range ()) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 996000.204
Median total errors in population: 1000000
Error averages by case: (996000.204)
Error minima by case: (51)
Average genome size in population (length): 26.242
Average program size in population (points): 27.379
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 961
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 10972361
--- Timings ---
Current time: 1451159219131 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction genome_new} {:close 1, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent true, :instruction integer_max} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction exec_rot} {:close 1, :silent true, :instruction genome_yankdup} {:close 0, :silent false, :instruction genome_yank})
Zero cases best program: (integer_swap integer_sub genome_parent1 genome_rotate boolean_invert_second_then_and genome_new genome_swap boolean_invert_second_then_and exec_empty genome_stackdepth autoconstructive_integer_rand integer_max integer_yankdup genome_flush boolean_empty genome_close_inc integer_min boolean_not genome_parent1 autoconstructive_integer_rand boolean_invert_second_then_and exec_if (exec_rot (genome_yank) () ()) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 30
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 998000.102
Median total errors in population: 1000000
Error averages by case: (998000.102)
Error minima by case: (51)
Average genome size in population (length): 26.678
Average program size in population (points): 27.982
Average percent parens in population: 0.240
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 955
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 11445080
--- Timings ---
Current time: 1451159224171 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range})
Lexicase best program: (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) integer_gt integer_gte boolean_pop exec_do*range ()) ()) ())
Lexicase best errors: [51]
Lexicase best number of elite cases: 1
Lexicase best total error: 51
Lexicase best mean error: 51.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_shove} {:close 1, :silent false, :instruction integer_empty} {:close 1, :silent true, :instruction exec_yankdup} {:close 0, :silent true, :instruction boolean_not} {:close 1, :silent true, :instruction genome_swap} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent true, :instruction integer_dup} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction genome_yank} {:close 1, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_new})
Zero cases best program: (genome_shove integer_empty integer_min boolean_and exec_yankdup genome_unsilence boolean_frominteger exec_when (exec_shove (genome_yank exec_swap () (exec_yankdup boolean_stackdepth) boolean_dup genome_new)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 20
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (14)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_stackdepth} {:close 2, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction integer_shove} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction boolean_yank} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_empty})
Best program: (exec_k (integer_fromboolean) (boolean_shove) exec_do*range (boolean_yank) genome_gene_dup integer_gte boolean_pop exec_do*range (exec_s (integer_yank exec_pop () boolean_rot genome_gene_dup) (boolean_frominteger exec_stackdepth genome_gene_copy_range) () exec_swap (genome_dup genome_gene_randomize genome_rotate boolean_invert_second_then_and integer_shove) (exec_stackdepth)) genome_yank exec_rot (exec_flush integer_flush exec_pop (boolean_not integer_yankdup exec_noop boolean_or boolean_invert_second_then_and) genome_gene_copy) (integer_flush boolean_invert_second_then_and boolean_yankdup genome_parent1 genome_eq exec_if (genome_empty) ()) ())
Errors: [51]
Total: 51
Mean: 51.0
Genome size: 50
Size: 59
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 986000.714
Median total errors in population: 1000000
Error averages by case: (986000.714)
Error minima by case: (51)
Average genome size in population (length): 27.405
Average program size in population (points): 28.933
Average percent parens in population: 0.246
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.968
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.953
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 920
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 11926106
--- Timings ---
Current time: 1451159231003 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent false, :instruction integer_gte} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction integer_lt} {:close 1, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction integer_add} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction genome_shove} {:close 1, :silent true, :instruction integer_gt})
Lexicase best program: (boolean_shove exec_k () (integer_mod) exec_yank genome_empty integer_gte integer_gte genome_rotate integer_lt integer_flush genome_rot boolean_empty genome_gene_randomize genome_empty boolean_frominteger genome_rot integer_stackdepth integer_gte boolean_eq genome_gene_randomize exec_eq genome_eq integer_add integer_min integer_yank integer_lt integer_sub exec_if (genome_shove) ())
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 34
Percent parens: 0.147
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction exec_pop} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent false, :instruction exec_do*while} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 1, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent true, :instruction integer_mod} {:close 1, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction boolean_pop})
Zero cases best program: (genome_silence autoconstructive_integer_rand boolean_invert_first_then_and genome_gene_randomize genome_unsilence integer_inc integer_inc genome_dup exec_do*while () genome_gene_copy_range genome_stackdepth boolean_yankdup exec_swap () (exec_dup (boolean_swap genome_yank integer_mult) boolean_pop))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 23
Percent parens: 0.217
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent false, :instruction integer_gte} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction integer_lt} {:close 1, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction integer_add} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction genome_shove} {:close 1, :silent true, :instruction integer_gt})
Best program: (boolean_shove exec_k () (integer_mod) exec_yank genome_empty integer_gte integer_gte genome_rotate integer_lt integer_flush genome_rot boolean_empty genome_gene_randomize genome_empty boolean_frominteger genome_rot integer_stackdepth integer_gte boolean_eq genome_gene_randomize exec_eq genome_eq integer_add integer_min integer_yank integer_lt integer_sub exec_if (genome_shove) ())
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 34
Percent parens: 0.147
--- Population Statistics ---
Average total errors in population: 993000.343
Median total errors in population: 1000000
Error averages by case: (993000.343)
Error minima by case: (37)
Average genome size in population (length): 26.714
Average program size in population (points): 27.919
Average percent parens in population: 0.238
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 951
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 12440408
--- Timings ---
Current time: 1451159236743 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_flush} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction boolean_flush} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction exec_do*range})
Lexicase best program: (genome_gene_copy integer_pop integer_yankdup genome_gene_dup integer_max boolean_not genome_yank genome_rotate boolean_flush exec_pop () genome_parent1 exec_do*range (integer_div) integer_lt boolean_flush boolean_invert_second_then_and integer_lte exec_do*range ())
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 22
Percent parens: 0.182
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_flush} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction boolean_flush} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction exec_do*range})
Zero cases best program: (genome_gene_copy integer_pop integer_yankdup genome_gene_dup integer_max boolean_not genome_yank genome_rotate boolean_flush exec_pop () genome_parent1 exec_do*range (integer_div) integer_lt boolean_flush boolean_invert_second_then_and integer_lte exec_do*range ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 22
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent true, :instruction exec_eq} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction exec_empty} {:close 1, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent false, :instruction genome_close_dec} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction genome_gene_dup} {:close 1, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent true, :instruction genome_empty} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction genome_gene_dup} {:close 1, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction genome_pop} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction genome_pop} {:close 2, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 1, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction genome_unsilence} {:close 2, :silent false, :instruction integer_flush} {:close 1, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction boolean_frominteger} {:close 2, :silent false, :instruction exec_do*range})
Best program: (integer_mult boolean_stackdepth boolean_not exec_empty integer_rot integer_dup genome_close_dec genome_close_dec genome_gene_dup integer_dup integer_add integer_inc genome_rotate integer_pop genome_gene_dup integer_mult exec_s (boolean_flush) (genome_pop genome_close_dec) (genome_pop genome_empty) integer_eq exec_swap (integer_flush genome_stackdepth genome_unsilence integer_flush) () boolean_invert_first_then_and boolean_or integer_flush boolean_not exec_dup () boolean_shove integer_mult genome_rot boolean_shove integer_add genome_gene_copy boolean_frominteger exec_do*range ())
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 48
Size: 49
Percent parens: 0.163
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 24.581
Average program size in population (points): 25.396
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 997
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 13049037
--- Timings ---
Current time: 1451159240176 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent true, :instruction exec_flush})
Lexicase best program: (exec_when (exec_noop genome_toggle_silent genome_toggle_silent boolean_xor exec_when (boolean_shove exec_yank genome_yankdup)))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 12
Percent parens: 0.250
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent true, :instruction exec_flush})
Zero cases best program: (exec_when (exec_noop genome_toggle_silent genome_toggle_silent boolean_xor exec_when (boolean_shove exec_yank genome_yankdup)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 12
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_new} {:close 2, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_swap} {:close 1, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent true, :instruction boolean_not})
Best program: (integer_pop genome_close_inc genome_swap genome_gene_dup genome_new exec_pop () exec_if (exec_yank integer_eq integer_mod integer_lte integer_swap exec_shove () integer_empty) (boolean_frominteger genome_silence integer_dec boolean_empty integer_lt) boolean_not exec_stackdepth genome_empty exec_pop (boolean_stackdepth) exec_swap () ())
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 28
Size: 33
Percent parens: 0.242
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.394
Average program size in population (points): 25.875
Average percent parens in population: 0.226
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 13860299
--- Timings ---
Current time: 1451159242814 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction genome_swap} {:close 0, :silent true, :instruction exec_stackdepth} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent true, :instruction exec_flush} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent true, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction integer_add})
Lexicase best program: (exec_while (genome_swap) exec_pop () genome_silence integer_gte integer_mod genome_parent2 genome_rotate)
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 11
Percent parens: 0.273
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction genome_swap} {:close 0, :silent true, :instruction exec_stackdepth} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent true, :instruction exec_flush} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent true, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction integer_add})
Zero cases best program: (exec_while (genome_swap) exec_pop () genome_silence integer_gte integer_mod genome_parent2 genome_rotate)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 11
Percent parens: 0.273
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction genome_yankdup} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent true, :instruction genome_swap} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent true, :instruction genome_empty} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent true, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_delete})
Best program: (autoconstructive_integer_rand exec_yank integer_pop boolean_swap integer_div exec_rot (autoconstructive_integer_rand exec_y (exec_eq genome_yankdup exec_eq exec_yank exec_dup (boolean_yankdup boolean_not genome_parent1 boolean_empty boolean_or) genome_swap integer_min genome_gene_delete)) () ())
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 27
Size: 27
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.353
Average program size in population (points): 26.162
Average percent parens in population: 0.227
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 14609434
--- Timings ---
Current time: 1451159245504 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent false, :instruction exec_do*times} {:close 1, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction exec_noop} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction integer_flush} {:close 1, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction genome_yankdup} {:close 1, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_yankdup} {:close 1, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_unsilence})
Lexicase best program: (exec_do*times () genome_unsilence boolean_empty autoconstructive_integer_rand boolean_invert_second_then_and exec_rot (boolean_yankdup integer_eq exec_rot (integer_dup) (boolean_empty) (integer_mult integer_div) integer_add genome_close_dec exec_empty integer_stackdepth genome_stackdepth integer_flush) (integer_inc) (genome_toggle_silent exec_rot (exec_k (exec_yankdup boolean_invert_second_then_and exec_flush boolean_pop) (exec_when (exec_eq genome_silence genome_yankdup genome_rot) genome_unsilence)) () ()))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 47
Percent parens: 0.298
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction exec_do*times} {:close 1, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction exec_noop} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction integer_flush} {:close 1, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction genome_yankdup} {:close 1, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_yankdup} {:close 1, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_unsilence})
Zero cases best program: (exec_do*times () genome_unsilence boolean_empty autoconstructive_integer_rand boolean_invert_second_then_and exec_rot (boolean_yankdup integer_eq exec_rot (integer_dup) (boolean_empty) (integer_mult integer_div) integer_add genome_close_dec exec_empty integer_stackdepth genome_stackdepth integer_flush) (integer_inc) (genome_toggle_silent exec_rot (exec_k (exec_yankdup boolean_invert_second_then_and exec_flush boolean_pop) (exec_when (exec_eq genome_silence genome_yankdup genome_rot) genome_unsilence)) () ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 47
Percent parens: 0.298
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction exec_do*count})
Best program: integer_dup
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 2
Size: 1
Percent parens: 0.000
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.737
Average program size in population (points): 26.298
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 15450878
--- Timings ---
Current time: 1451159248194 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent true, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_swap} {:close 1, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 1, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent true, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_rot})
Lexicase best program: (integer_gt genome_gene_dup exec_yank boolean_empty boolean_invert_second_then_and autoconstructive_integer_rand genome_gene_dup boolean_swap boolean_invert_first_then_and genome_empty genome_pop genome_toggle_silent boolean_eq exec_when (integer_shove integer_add genome_rot exec_if (integer_rot) ()))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 23
Percent parens: 0.174
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent true, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_swap} {:close 1, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 1, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent true, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_rot})
Zero cases best program: (integer_gt genome_gene_dup exec_yank boolean_empty boolean_invert_second_then_and autoconstructive_integer_rand genome_gene_dup boolean_swap boolean_invert_first_then_and genome_empty genome_pop genome_toggle_silent boolean_eq exec_when (integer_shove integer_add genome_rot exec_if (integer_rot) ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 23
Percent parens: 0.174
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_div} {:close 1, :silent true, :instruction genome_flush} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent true, :instruction integer_stackdepth} {:close 0, :silent true, :instruction exec_shove} {:close 0, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent true, :instruction exec_when} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent true, :instruction integer_add} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction boolean_eq} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction boolean_dup} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 2, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction genome_gene_copy})
Best program: (integer_div genome_gene_copy integer_pop boolean_shove integer_gte integer_rot integer_mult genome_gene_randomize integer_dup genome_gene_copy_range integer_mult boolean_stackdepth autoconstructive_integer_rand boolean_eq boolean_dup integer_gte boolean_invert_second_then_and integer_dec genome_gene_copy)
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 28
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.63
Average program size in population (points): 26.587
Average percent parens in population: 0.239
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 999
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 16289452
--- Timings ---
Current time: 1451159250887 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_swap} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent true, :instruction boolean_dup} {:close 1, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent true, :instruction integer_stackdepth})
Lexicase best program: (integer_swap exec_do*times (boolean_flush integer_sub genome_close_inc integer_min boolean_stackdepth boolean_yank exec_shove (exec_yank genome_empty integer_gt boolean_invert_second_then_and integer_empty integer_flush genome_close_inc integer_inc)))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 20
Percent parens: 0.150
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_swap} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent true, :instruction boolean_dup} {:close 1, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent true, :instruction integer_stackdepth})
Zero cases best program: (integer_swap exec_do*times (boolean_flush integer_sub genome_close_inc integer_min boolean_stackdepth boolean_yank exec_shove (exec_yank genome_empty integer_gt boolean_invert_second_then_and integer_empty integer_flush genome_close_inc integer_inc)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 20
Percent parens: 0.150
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_if} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent true, :instruction exec_flush} {:close 0, :silent true, :instruction boolean_dup} {:close 1, :silent true, :instruction boolean_eq})
Best program: (boolean_swap integer_stackdepth genome_gene_randomize exec_empty genome_gene_delete exec_rot (integer_fromboolean exec_shove (exec_when () exec_do*times (integer_yankdup boolean_eq boolean_not))) () ())
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 19
Size: 20
Percent parens: 0.350
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 26.488
Average program size in population (points): 27.317
Average percent parens in population: 0.228
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 17123621
--- Timings ---
Current time: 1451159253572 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times})
Lexicase best program: (integer_gt integer_shove integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times ())
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 32
Percent parens: 0.094
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction exec_do*range} {:close 0, :silent false, :instruction genome_unsilence})
Zero cases best program: (genome_shove genome_swap exec_pop (genome_unsilence))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times})
Best program: (integer_gt integer_shove integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times ())
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 32
Percent parens: 0.094
--- Population Statistics ---
Average total errors in population: 999000.04
Median total errors in population: 1000000
Error averages by case: (999000.04)
Error minima by case: (40)
Average genome size in population (length): 25.443
Average program size in population (points): 26.153
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.993
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 1000
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 18000157
--- Timings ---
Current time: 1451159256655 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_if})
Lexicase best program: (integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt integer_shove) integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt exec_if () ())
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 35
Percent parens: 0.143
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction boolean_frominteger} {:close 1, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent true, :instruction integer_dec} {:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_swap} {:close 0, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction boolean_yankdup})
Zero cases best program: (exec_rot (boolean_frominteger) (genome_pop) (boolean_flush integer_dup integer_lt autoconstructive_integer_rand) exec_noop exec_k (genome_parent1 exec_noop) (exec_do*while (integer_gte boolean_yankdup)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 21
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq})
Best program: (integer_max exec_do*while (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt integer_shove) integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt)
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 32
Percent parens: 0.094
--- Population Statistics ---
Average total errors in population: 997000.12
Median total errors in population: 1000000
Error averages by case: (997000.12)
Error minima by case: (40)
Average genome size in population (length): 25.105
Average program size in population (points): 25.481
Average percent parens in population: 0.229
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.993
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 982
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 18551527
--- Timings ---
Current time: 1451159259399 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_flush} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty})
Lexicase best program: (integer_mod genome_parent2 exec_do*times (integer_gt integer_flush integer_shove) integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt integer_max exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty)
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 33
Percent parens: 0.091
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_do*while} {:close 1, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction genome_silence} {:close 0, :silent true, :instruction boolean_yankdup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction exec_y} {:close 2, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_new})
Zero cases best program: (integer_add integer_gte exec_do*while (boolean_yankdup) autoconstructive_integer_rand integer_sub exec_swap (genome_eq integer_yank exec_y (boolean_eq exec_pop (genome_unsilence integer_rot boolean_not integer_yankdup) exec_s (integer_eq genome_new) () ())) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 28
Percent parens: 0.321
--- Lexicase Population Statistics ---
Count of elite individuals by case: (50)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty})
Best program: (integer_mod genome_parent2 integer_lte integer_gt integer_shove integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt integer_max exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty)
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 31
Percent parens: 0.065
--- Population Statistics ---
Average total errors in population: 950002.0
Median total errors in population: 1000000
Error averages by case: (950002.0)
Error minima by case: (40)
Average genome size in population (length): 27.954
Average program size in population (points): 27.684
Average percent parens in population: 0.209
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.963
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.946
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 819
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 19059755
--- Timings ---
Current time: 1451159263006 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent true, :instruction integer_inc})
Lexicase best program: (integer_inc boolean_yankdup genome_rot integer_gte genome_gene_randomize genome_yank integer_gt integer_max exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt))
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 32
Percent parens: 0.094
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction exec_s} {:close 1, :silent true, :instruction boolean_xor} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction exec_swap} {:close 0, :silent true, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction boolean_eq} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction exec_do*range})
Zero cases best program: (genome_gene_copy_range integer_dup integer_gte exec_swap () (exec_flush integer_sub genome_unsilence boolean_rot) exec_stackdepth boolean_empty genome_gene_copy_range boolean_dup integer_stackdepth boolean_empty exec_do*range ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 19
Percent parens: 0.211
--- Lexicase Population Statistics ---
Count of elite individuals by case: (82)
Population mean number of elite cases: 0.08
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2})
Best program: (exec_do*times (integer_gt integer_shove) integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt exec_if (integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty) (integer_rot boolean_stackdepth) boolean_eq genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2)
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 35
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 918003.28
Median total errors in population: 1000000
Error averages by case: (918003.28)
Error minima by case: (40)
Average genome size in population (length): 29.226
Average program size in population (points): 28.47
Average percent parens in population: 0.201
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.97
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 757
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 19590185
--- Timings ---
Current time: 1451159267008 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove})
Lexicase best program: (integer_inc boolean_yankdup integer_eq integer_gte genome_gene_randomize genome_yank integer_gt integer_max exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 boolean_pop integer_gt integer_shove)
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 32
Percent parens: 0.063
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent true, :instruction boolean_invert_first_then_and} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove})
Zero cases best program: (boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt integer_inc boolean_yankdup genome_rot integer_gte genome_gene_randomize) genome_yank integer_gt integer_max exec_when (genome_parent1) integer_shove)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 31
Percent parens: 0.097
--- Lexicase Population Statistics ---
Count of elite individuals by case: (118)
Population mean number of elite cases: 0.12
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent true, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent true, :instruction exec_if} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction integer_flush} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1})
Best program: (integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty genome_parent2 exec_do*times (integer_shove) integer_inc boolean_yankdup integer_gte integer_flush genome_yank integer_gt integer_max exec_when (genome_parent1))
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 30
Percent parens: 0.100
--- Population Statistics ---
Average total errors in population: 882004.72
Median total errors in population: 1000000
Error averages by case: (882004.72)
Error minima by case: (40)
Average genome size in population (length): 29.457
Average program size in population (points): 28.341
Average percent parens in population: 0.198
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 715
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 20061466
--- Timings ---
Current time: 1451159271215 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction integer_sub} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent true, :instruction boolean_pop})
Lexicase best program: (integer_shove integer_inc boolean_yankdup integer_gte integer_empty genome_yank integer_gt integer_max exec_when (integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt integer_rot))
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 32
Percent parens: 0.094
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*count} {:close 1, :silent false, :instruction genome_flush} {:close 1, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_gene_copy} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction genome_rotate} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction exec_noop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction boolean_dup} {:close 1, :silent false, :instruction genome_dup} {:close 1, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent true, :instruction genome_flush} {:close 1, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_parent1})
Zero cases best program: (exec_do*count (genome_flush) genome_unsilence exec_empty exec_rot (exec_s (genome_swap genome_gene_randomize genome_gene_delete) (integer_min boolean_not) (genome_rotate exec_shove (boolean_dup genome_dup) integer_max) genome_close_dec) (boolean_dup integer_yankdup integer_pop integer_shove genome_gene_dup genome_close_inc) (genome_close_dec) integer_gte autoconstructive_integer_rand genome_new boolean_or integer_gt genome_silence genome_parent1)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 40
Percent parens: 0.225
--- Lexicase Population Statistics ---
Count of elite individuals by case: (98)
Population mean number of elite cases: 0.10
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush})
Best program: (integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt exec_while (integer_shove) integer_inc boolean_yankdup integer_shove integer_gte genome_gene_randomize) genome_yank integer_gt exec_if (integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor)) ())
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 38
Percent parens: 0.158
--- Population Statistics ---
Average total errors in population: 902003.92
Median total errors in population: 1000000
Error averages by case: (902003.92)
Error minima by case: (40)
Average genome size in population (length): 28.78
Average program size in population (points): 27.534
Average percent parens in population: 0.201
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 743
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 20550158
--- Timings ---
Current time: 1451159275268 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 2, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction genome_parent1})
Lexicase best program: (integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_rot integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt integer_pop integer_shove) integer_inc boolean_yankdup integer_gte genome_gene_randomize exec_do*times (integer_gt integer_max genome_swap) genome_parent1)
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 33
Percent parens: 0.091
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_flush} {:close 1, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction boolean_dup} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_do*while})
Zero cases best program: (integer_stackdepth exec_noop exec_flush boolean_swap integer_lt integer_sub exec_pop (genome_gene_delete genome_gene_randomize genome_dup integer_dup integer_flush genome_yankdup exec_s (genome_yankdup) (integer_eq exec_when () exec_k () (integer_rot exec_do*while () integer_gt integer_dup genome_pop boolean_dup integer_gte) boolean_xor integer_yankdup exec_do*while ()) ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 38
Percent parens: 0.263
--- Lexicase Population Statistics ---
Count of elite individuals by case: (136)
Population mean number of elite cases: 0.14
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction exec_noop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction integer_sub})
Best program: (genome_stackdepth integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_pop exec_if (integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty) (integer_rot boolean_stackdepth) autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod integer_add exec_do*times (integer_gt))
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 35
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 864005.44
Median total errors in population: 1000000
Error averages by case: (864005.44)
Error minima by case: (40)
Average genome size in population (length): 29.495
Average program size in population (points): 28.323
Average percent parens in population: 0.198
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.993
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 702
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 21179117
--- Timings ---
Current time: 1451159279623 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush})
Lexicase best program: (integer_gte integer_dup integer_mod genome_parent2 exec_do*times (integer_gt integer_inc boolean_yankdup genome_rot integer_gte genome_gene_randomize) boolean_flush integer_gt integer_max exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate integer_yank integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush)
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 33
Percent parens: 0.091
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_yank} {:close 2, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction integer_yank})
Zero cases best program: (boolean_yank integer_lt genome_gene_dup integer_mod genome_dup genome_rotate genome_rot integer_yank)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 9
Percent parens: 0.111
--- Lexicase Population Statistics ---
Count of elite individuals by case: (130)
Population mean number of elite cases: 0.13
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction integer_sub} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction exec_noop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush})
Best program: (genome_empty integer_mod integer_add genome_parent1 exec_do*times (integer_gt genome_stackdepth boolean_yank boolean_yankdup integer_gte genome_gene_randomize) genome_yank integer_pop boolean_and integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush)
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 34
Percent parens: 0.088
--- Population Statistics ---
Average total errors in population: 870005.2
Median total errors in population: 1000000
Error averages by case: (870005.2)
Error minima by case: (40)
Average genome size in population (length): 29.287
Average program size in population (points): 28.067
Average percent parens in population: 0.201
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 707
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 21807749
--- Timings ---
Current time: 1451159283896 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction genome_parent1} {:close 0, :silent true, :instruction genome_new} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 1, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_shove})
Lexicase best program: (genome_yank integer_gt integer_max exec_k (exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) (boolean_empty) integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_mod genome_parent2 genome_silence exec_do*times (integer_gt boolean_flush integer_inc genome_shove))
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 34
Percent parens: 0.147
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent true, :instruction exec_do*count} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_or} {:close 1, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent true, :instruction genome_swap} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction exec_dup})
Zero cases best program: (integer_lte genome_close_dec integer_dup integer_max genome_yank boolean_or integer_gte genome_dup genome_stackdepth integer_gt genome_yankdup boolean_shove genome_gene_dup exec_k (boolean_shove exec_dup ()) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 20
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (121)
Population mean number of elite cases: 0.12
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent true, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent true, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq})
Best program: (integer_max exec_when (genome_parent1) boolean_invert_first_then_and boolean_xor exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush integer_eq genome_parent2 exec_do*times (integer_gt genome_stackdepth integer_shove) integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt)
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 30
Percent parens: 0.100
--- Population Statistics ---
Average total errors in population: 879004.84
Median total errors in population: 1000000
Error averages by case: (879004.84)
Error minima by case: (40)
Average genome size in population (length): 29.222
Average program size in population (points): 28.178
Average percent parens in population: 0.201
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 713
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 22345950
--- Timings ---
Current time: 1451159288101 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction integer_sub} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_or} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 1, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_do*times})
Lexicase best program: (integer_gt integer_shove integer_inc boolean_yankdup integer_dec genome_gene_randomize genome_yank boolean_dup exec_if (exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_or integer_shove exec_stackdepth genome_rotate) boolean_empty) (integer_rot boolean_stackdepth) autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty integer_max integer_mod genome_parent2 exec_do*times ())
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 35
Percent parens: 0.143
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent true, :instruction boolean_swap} {:close 2, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent true, :instruction exec_noop} {:close 0, :silent false, :instruction genome_pop} {:close 1, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_empty} {:close 2, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_rot} {:close 2, :silent false, :instruction exec_do*times} {:close 2, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction integer_div} {:close 1, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_close_dec} {:close 2, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent true, :instruction exec_do*range} {:close 0, :silent true, :instruction exec_rot} {:close 2, :silent false, :instruction genome_stackdepth})
Zero cases best program: (genome_gene_copy boolean_dup genome_pop exec_do*count (integer_gte genome_empty boolean_rot) integer_mult integer_mod genome_rot exec_do*times () boolean_frominteger genome_pop boolean_or integer_div boolean_eq genome_close_dec integer_stackdepth exec_yank exec_yankdup integer_empty genome_gene_delete exec_do*range (integer_gte) integer_inc genome_gene_copy integer_dup boolean_yankdup integer_gt boolean_rot genome_gene_delete genome_close_dec exec_pop (integer_empty) exec_do*times (integer_empty genome_stackdepth))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 43
Percent parens: 0.140
--- Lexicase Population Statistics ---
Count of elite individuals by case: (121)
Population mean number of elite cases: 0.12
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_flush} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times})
Best program: (exec_yankdup integer_shove integer_inc boolean_yankdup integer_gte genome_gene_randomize genome_yank integer_gt integer_max exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate genome_gene_dup integer_flush boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush integer_eq integer_mod exec_do*times ())
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 31
Percent parens: 0.097
--- Population Statistics ---
Average total errors in population: 876004.963
Median total errors in population: 1000000
Error averages by case: (876004.963)
Error minima by case: (40)
Average genome size in population (length): 29.691
Average program size in population (points): 28.718
Average percent parens in population: 0.195
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 715
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 22917645
--- Timings ---
Current time: 1451159292447 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent true, :instruction exec_when} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_yank} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand})
Lexicase best program: (integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty genome_unsilence autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty exec_y (integer_mod genome_parent2 integer_gt genome_toggle_silent genome_yank integer_shove) integer_inc boolean_yankdup exec_when (genome_yank) integer_gt exec_if (integer_max genome_gene_randomize) (exec_when (autoconstructive_integer_rand)))
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 37
Percent parens: 0.162
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_dup} {:close 0, :silent true, :instruction boolean_pop})
Zero cases best program: (integer_gte genome_gene_randomize exec_k (integer_swap autoconstructive_integer_rand integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty) (integer_rot boolean_stackdepth) autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush integer_add integer_mod genome_parent2 exec_do*times (integer_gt exec_do*range (integer_shove) integer_inc boolean_yankdup genome_dup))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 37
Percent parens: 0.162
--- Lexicase Population Statistics ---
Count of elite individuals by case: (112)
Population mean number of elite cases: 0.11
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent true, :instruction exec_when} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_yank} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction integer_mult} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and})
Best program: (boolean_xor integer_shove exec_stackdepth genome_rotate boolean_empty genome_unsilence autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty exec_y (integer_mod genome_parent2 integer_gt genome_toggle_silent genome_yank integer_shove) integer_inc boolean_yankdup genome_gene_randomize boolean_flush integer_gt exec_if (integer_max exec_while () integer_gt autoconstructive_integer_rand integer_shove boolean_invert_first_then_and) ())
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 36
Percent parens: 0.139
--- Population Statistics ---
Average total errors in population: 887004.521
Median total errors in population: 1000000
Error averages by case: (887004.521)
Error minima by case: (40)
Average genome size in population (length): 29.523
Average program size in population (points): 28.743
Average percent parens in population: 0.201
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 690
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 23416664
--- Timings ---
Current time: 1451159296709 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent true, :instruction boolean_invert_second_then_and})
Lexicase best program: (integer_min integer_shove integer_inc boolean_yankdup genome_rot genome_gene_randomize genome_yank integer_yankdup integer_max exec_when (genome_gene_randomize integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) genome_gene_dup integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and integer_gt integer_eq integer_mod exec_do*times ())
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 31
Percent parens: 0.097
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent true, :instruction boolean_invert_second_then_and})
Zero cases best program: (integer_min integer_shove integer_inc boolean_yankdup genome_rot genome_gene_randomize genome_yank integer_yankdup integer_max exec_when (genome_gene_randomize integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) genome_gene_dup integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and integer_gt integer_eq integer_mod exec_do*times ())
Zero cases best errors: [40]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 40
Zero cases best mean error: 40.0
Zero cases best size: 31
Percent parens: 0.097
--- Lexicase Population Statistics ---
Count of elite individuals by case: (133)
Population mean number of elite cases: 0.13
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent true, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 1, :silent true, :instruction genome_gene_copy_range} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent true, :instruction exec_do*count})
Best program: (genome_parent2 exec_do*times (integer_gt integer_rot genome_yank integer_inc boolean_or autoconstructive_integer_rand integer_gte genome_gene_randomize) integer_flush integer_gt integer_max exec_when (genome_parent1) integer_shove boolean_invert_first_then_and boolean_xor exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush integer_eq)
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 31
Percent parens: 0.097
--- Population Statistics ---
Average total errors in population: 867005.32
Median total errors in population: 1000000
Error averages by case: (867005.32)
Error minima by case: (40)
Average genome size in population (length): 28.843
Average program size in population (points): 28.154
Average percent parens in population: 0.204
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 706
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 23923473
--- Timings ---
Current time: 1451159301020 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction exec_noop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush})
Lexicase best program: (genome_empty boolean_shove boolean_shove integer_add exec_do*times (integer_gt boolean_empty genome_stackdepth boolean_yank boolean_yankdup integer_gte genome_gene_randomize) genome_yank integer_pop boolean_and integer_max exec_when (autoconstructive_integer_rand integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) boolean_empty integer_rot integer_max autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush)
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 35
Percent parens: 0.086
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup})
Zero cases best program: (exec_do*times (integer_gt integer_pop boolean_swap integer_inc genome_empty integer_gte genome_gene_randomize) integer_stackdepth integer_gt integer_rot genome_parent1 integer_shove boolean_invert_first_then_and boolean_xor boolean_swap integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty genome_parent2)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 31
Percent parens: 0.065
--- Lexicase Population Statistics ---
Count of elite individuals by case: (128)
Population mean number of elite cases: 0.13
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction integer_sub} {:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction exec_swap} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent true, :instruction genome_gene_copy} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush})
Best program: (genome_empty integer_mod genome_gene_randomize exec_dup (integer_gt exec_noop boolean_yankdup integer_gte genome_gene_randomize) genome_yank integer_pop exec_if (integer_max exec_when (integer_add integer_shove boolean_invert_first_then_and boolean_xor exec_stackdepth integer_shove exec_stackdepth genome_rotate) boolean_empty) (integer_rot boolean_stackdepth) autoconstructive_integer_rand genome_gene_randomize integer_yank boolean_invert_second_then_and exec_flush)
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 35
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 872005.12
Median total errors in population: 1000000
Error averages by case: (872005.12)
Error minima by case: (40)
Average genome size in population (length): 29.747
Average program size in population (points): 28.992
Average percent parens in population: 0.202
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 699
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 24417233
--- Timings ---
Current time: 1451159305158 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 2, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent true, :instruction exec_while} {:close 2, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove})
Lexicase best program: (boolean_invert_first_then_and boolean_xor boolean_swap integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add integer_add exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt integer_pop integer_inc integer_shove) integer_inc genome_empty integer_gte integer_mod exec_do*times (integer_gt integer_rot genome_swap) genome_parent1 integer_shove)
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 35
Percent parens: 0.086
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 2, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent true, :instruction exec_while} {:close 2, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction integer_shove})
Zero cases best program: (boolean_invert_first_then_and boolean_xor boolean_swap integer_shove exec_stackdepth genome_rotate boolean_empty integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add integer_add exec_flush genome_empty integer_mod genome_parent2 exec_do*times (integer_gt integer_pop integer_inc integer_shove) integer_inc genome_empty integer_gte integer_mod exec_do*times (integer_gt integer_rot genome_swap) genome_parent1 integer_shove)
Zero cases best errors: [40]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 40
Zero cases best mean error: 40.0
Zero cases best size: 35
Percent parens: 0.086
--- Lexicase Population Statistics ---
Count of elite individuals by case: (148)
Population mean number of elite cases: 0.15
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction integer_sub} {:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction boolean_invert_first_then_and} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_dup} {:close 1, :silent true, :instruction genome_rot} {:close 0, :silent false, :instruction integer_gt})
Best program: (integer_dup genome_stackdepth integer_mod boolean_swap exec_noop genome_gene_randomize genome_yank integer_pop exec_if (exec_when (integer_add exec_swap (boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) (boolean_empty) genome_silence) boolean_stackdepth) (autoconstructive_integer_rand genome_gene_randomize) integer_add boolean_invert_second_then_and exec_flush genome_empty exec_k (exec_do*while () integer_gt) ())
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 852005.92
Median total errors in population: 1000000
Error averages by case: (852005.92)
Error minima by case: (40)
Average genome size in population (length): 29.658
Average program size in population (points): 28.687
Average percent parens in population: 0.199
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 687
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 24988720
--- Timings ---
Current time: 1451159309580 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 0, :silent true, :instruction integer_rot} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent true, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction integer_yank})
Lexicase best program: (integer_min integer_shove integer_inc boolean_yankdup genome_rot genome_gene_randomize genome_yank integer_yankdup integer_max exec_when (genome_gene_randomize integer_shove boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) genome_gene_dup integer_rot boolean_stackdepth autoconstructive_integer_rand genome_gene_randomize integer_add integer_gt integer_eq boolean_yankdup integer_mod exec_do*times (integer_yank))
Lexicase best errors: [40]
Lexicase best number of elite cases: 1
Lexicase best total error: 40
Lexicase best mean error: 40.0
Lexicase best size: 32
Percent parens: 0.094
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction boolean_or} {:close 1, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent true, :instruction exec_dup} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_pop} {:close 1, :silent true, :instruction boolean_or} {:close 1, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_gene_copy} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 1, :silent true, :instruction integer_empty} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent true, :instruction boolean_xor})
Zero cases best program: (boolean_empty boolean_pop boolean_stackdepth genome_close_dec integer_mult boolean_or exec_y () genome_eq boolean_swap boolean_stackdepth integer_dup genome_gene_copy_range genome_rotate genome_gene_dup genome_pop boolean_yankdup integer_eq boolean_rot exec_do*times (exec_dup (genome_gene_copy genome_gene_copy_range) genome_shove boolean_rot integer_inc integer_mult))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 30
Percent parens: 0.133
--- Lexicase Population Statistics ---
Count of elite individuals by case: (148)
Population mean number of elite cases: 0.15
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent true, :instruction boolean_pop} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction integer_mult} {:close 1, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_parent2} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction exec_when} {:close 0, :silent false, :instruction boolean_invert_second_then_and})
Best program: (integer_shove genome_unsilence boolean_yankdup integer_mult genome_yank integer_gt exec_if (exec_stackdepth autoconstructive_integer_rand boolean_invert_first_then_and boolean_xor integer_shove exec_stackdepth genome_rotate) (boolean_empty) integer_rot autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_parent1 exec_y (integer_mod genome_parent2 exec_do*while () boolean_invert_second_then_and))
Errors: [40]
Total: 40
Mean: 40.0
Genome size: 39
Size: 32
Percent parens: 0.156
--- Population Statistics ---
Average total errors in population: 852005.92
Median total errors in population: 1000000
Error averages by case: (852005.92)
Error minima by case: (40)
Average genome size in population (length): 29.368
Average program size in population (points): 28.647
Average percent parens in population: 0.205
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 678
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 25487170
--- Timings ---
Current time: 1451159313711 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction integer_sub} {:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_gene_delete} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_when (integer_add exec_swap (boolean_invert_first_then_and boolean_xor integer_min exec_stackdepth genome_rotate) (integer_fromboolean genome_silence) boolean_stackdepth) autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty boolean_eq exec_do*while () exec_do*times (integer_gt genome_stackdepth integer_mod boolean_yankdup integer_gte genome_gene_delete genome_yank) integer_pop exec_if () ())
Lexicase best errors: [39]
Lexicase best number of elite cases: 1
Lexicase best total error: 39
Lexicase best mean error: 39.0
Lexicase best size: 37
Percent parens: 0.216
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction integer_add} {:close 3, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_gt} {:close 1, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent true, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction boolean_flush} {:close 1, :silent false, :instruction exec_rot} {:close 0, :silent true, :instruction integer_stackdepth} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_gene_copy} {:close 1, :silent true, :instruction integer_lte} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction integer_div})
Zero cases best program: (exec_pop (genome_new integer_dec genome_gene_randomize exec_when (integer_shove genome_stackdepth boolean_flush boolean_yankdup integer_dup genome_close_dec boolean_or integer_add integer_gte)) genome_empty integer_gt boolean_dup integer_flush genome_gene_copy_range boolean_frominteger exec_swap (exec_noop genome_swap exec_empty exec_rot (boolean_pop genome_dup) (exec_do*range (boolean_flush exec_rot () (exec_s (exec_rot (genome_silence genome_gene_copy integer_fromboolean exec_when (genome_close_inc) boolean_yankdup genome_swap integer_eq exec_stackdepth integer_swap exec_s (integer_div) () ()) () ()) () ()) ())) ()) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 66
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_fromboolean} {:close 1, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction integer_sub} {:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_gene_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_gene_delete} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction boolean_invert_first_then_and})
Best program: (exec_when (integer_add exec_swap (boolean_invert_first_then_and boolean_xor integer_min exec_stackdepth genome_rotate) (integer_fromboolean genome_silence) boolean_stackdepth) autoconstructive_integer_rand genome_gene_randomize integer_add boolean_invert_second_then_and exec_flush genome_empty boolean_eq exec_do*while () exec_do*times (integer_gt genome_stackdepth integer_mod boolean_yankdup integer_gte genome_gene_delete genome_yank) integer_pop exec_if () ())
Errors: [39]
Total: 39
Mean: 39.0
Genome size: 38
Size: 37
Percent parens: 0.216
--- Population Statistics ---
Average total errors in population: 865005.399
Median total errors in population: 1000000
Error averages by case: (865005.399)
Error minima by case: (39)
Average genome size in population (length): 29.432
Average program size in population (points): 28.866
Average percent parens in population: 0.200
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 687
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 26010980
--- Timings ---
Current time: 1451159318076 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction integer_lte} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq genome_yankdup integer_lte integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent true, :instruction integer_rot} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent true, :instruction integer_lt} {:close 0, :silent false, :instruction genome_flush} {:close 1, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction genome_swap})
Zero cases best program: (integer_add integer_inc integer_lt genome_flush exec_shove () integer_rot genome_close_inc integer_lte genome_swap)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction integer_lte} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq genome_yankdup integer_lte integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 964001.402
Median total errors in population: 1000000
Error averages by case: (964001.402)
Error minima by case: (37)
Average genome size in population (length): 26.166
Average program size in population (points): 26.686
Average percent parens in population: 0.227
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 61
Genome diversity (% unique Plush genomes):	 0.938
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 61
Syntactic diversity (% unique Push programs):	 0.93
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 920
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 26450237
--- Timings ---
Current time: 1451159321002 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction genome_yankdup} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq autoconstructive_integer_rand integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 39
Percent parens: 0.231
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction exec_noop} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent true, :instruction integer_yankdup} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction boolean_frominteger} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction integer_shove})
Zero cases best program: (autoconstructive_integer_rand integer_shove integer_pop exec_stackdepth integer_dec integer_dec integer_shove)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 8
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (23)
Population mean number of elite cases: 0.02
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_gt} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq boolean_pop integer_gt integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 977000.851
Median total errors in population: 1000000
Error averages by case: (977000.851)
Error minima by case: (37)
Average genome size in population (length): 26.826
Average program size in population (points): 28.018
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.966
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 858
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 27007805
--- Timings ---
Current time: 1451159325307 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction genome_dup} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_rot genome_dup integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_max} {:close 2, :silent false, :instruction integer_flush})
Zero cases best program: (integer_mod integer_gt integer_yankdup exec_if (genome_close_dec integer_max integer_flush) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 10
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (28)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_empty} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_lte) (integer_empty integer_sub) boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 972001.036
Median total errors in population: 1000000
Error averages by case: (972001.036)
Error minima by case: (37)
Average genome size in population (length): 26.747
Average program size in population (points): 27.905
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 835
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 27557309
--- Timings ---
Current time: 1451159329684 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction boolean_swap} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_yank) (integer_min boolean_swap) boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_flush})
Zero cases best program: (integer_dec boolean_flush genome_rot exec_k (integer_empty genome_eq exec_do*while () genome_flush) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 12
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (33)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_do*while () boolean_stackdepth integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 41
Percent parens: 0.244
--- Population Statistics ---
Average total errors in population: 964001.335
Median total errors in population: 1000000
Error averages by case: (964001.335)
Error minima by case: (37)
Average genome size in population (length): 26.657
Average program size in population (points): 27.882
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 859
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 28137308
--- Timings ---
Current time: 1451159333993 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_eq} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_flush exec_eq integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent true, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent true, :instruction genome_empty} {:close 0, :silent true, :instruction integer_lte} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction boolean_frominteger} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent true, :instruction integer_sub} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction integer_flush} {:close 1, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_shove} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent true, :instruction genome_swap} {:close 0, :silent false, :instruction exec_empty} {:close 1, :silent false, :instruction boolean_flush} {:close 2, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent true, :instruction genome_flush} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent true, :instruction exec_k})
Zero cases best program: (exec_yank genome_parent1 exec_stackdepth exec_do*count (exec_yankdup exec_dup (genome_toggle_silent exec_swap (exec_do*while (boolean_shove boolean_eq) boolean_frominteger integer_yank integer_flush) (genome_yank) genome_yankdup integer_lte integer_rot integer_dec integer_inc boolean_stackdepth) exec_if () (genome_gene_randomize genome_rot exec_empty boolean_flush) genome_gene_delete exec_dup (boolean_invert_first_then_and boolean_or genome_stackdepth integer_min boolean_pop genome_stackdepth genome_dup) genome_pop))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 45
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (30)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction exec_swap} {:close 0, :silent true, :instruction genome_flush} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 970001.11
Median total errors in population: 1000000
Error averages by case: (970001.11)
Error minima by case: (37)
Average genome size in population (length): 27.456
Average program size in population (points): 28.783
Average percent parens in population: 0.227
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 835
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 28717266
--- Timings ---
Current time: 1451159338399 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction genome_gene_copy} {:close 1, :silent true, :instruction genome_toggle_silent} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq genome_gene_copy) (integer_sub) boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 39
Percent parens: 0.231
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction integer_min} {:close 0, :silent true, :instruction genome_rot} {:close 1, :silent false, :instruction boolean_shove} {:close 1, :silent true, :instruction genome_empty} {:close 1, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction boolean_shove} {:close 1, :silent true, :instruction exec_swap} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction integer_eq} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent true, :instruction exec_if} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_swap})
Zero cases best program: (genome_gene_dup integer_dec autoconstructive_integer_rand boolean_shove boolean_invert_first_then_and exec_yankdup exec_flush boolean_shove genome_empty boolean_yankdup genome_gene_delete integer_pop genome_yank autoconstructive_integer_rand integer_sub genome_swap genome_pop genome_swap)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 19
Percent parens: 0.053
--- Lexicase Population Statistics ---
Count of elite individuals by case: (27)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction exec_yank} {:close 0, :silent false, :instruction boolean_flush} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq boolean_flush integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 39
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 973000.999
Median total errors in population: 1000000
Error averages by case: (973000.999)
Error minima by case: (37)
Average genome size in population (length): 27.395
Average program size in population (points): 28.735
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.981
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 838
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 29287199
--- Timings ---
Current time: 1451159342929 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction integer_stackdepth} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_add integer_stackdepth integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction integer_gt} {:close 1, :silent true, :instruction genome_pop} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Zero cases best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 38
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (35)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction boolean_empty} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq genome_yankdup boolean_empty integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 965001.295
Median total errors in population: 1000000
Error averages by case: (965001.295)
Error minima by case: (37)
Average genome size in population (length): 27.401
Average program size in population (points): 28.449
Average percent parens in population: 0.237
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 855
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 29919855
--- Timings ---
Current time: 1451159347285 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_yank} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq boolean_yank genome_yank integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent true, :instruction boolean_swap} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction integer_max})
Zero cases best program: (integer_add integer_lt genome_gene_randomize exec_dup (genome_silence exec_eq genome_shove exec_do*range (integer_fromboolean exec_yankdup exec_y (genome_eq genome_unsilence) exec_rot (exec_yankdup integer_max) () ())))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 23
Percent parens: 0.304
--- Lexicase Population Statistics ---
Count of elite individuals by case: (25)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_pop} {:close 2, :silent false, :instruction boolean_yankdup} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction boolean_empty})
Best program: (boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq boolean_pop boolean_yankdup) () integer_sub boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor boolean_empty)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 975000.925
Median total errors in population: 1000000
Error averages by case: (975000.925)
Error minima by case: (37)
Average genome size in population (length): 26.612
Average program size in population (points): 28.217
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.993
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 831
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 30545595
--- Timings ---
Current time: 1451159351908 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_stackdepth} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq genome_rot genome_stackdepth integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction genome_parent2} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction exec_pop} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_or} {:close 1, :silent true, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction exec_shove} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_yankdup} {:close 1, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent true, :instruction integer_min})
Zero cases best program: (genome_parent1 exec_shove (genome_parent1 exec_stackdepth exec_if (genome_gene_randomize integer_add exec_eq boolean_stackdepth boolean_or boolean_dup boolean_swap boolean_invert_second_then_and exec_if () (boolean_stackdepth integer_empty integer_div)) ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 23
Percent parens: 0.261
--- Lexicase Population Statistics ---
Count of elite individuals by case: (38)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction genome_yankdup} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_while (genome_yankdup integer_sub)) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 41
Percent parens: 0.244
--- Population Statistics ---
Average total errors in population: 962001.406
Median total errors in population: 1000000
Error averages by case: (962001.406)
Error minima by case: (37)
Average genome size in population (length): 26.891
Average program size in population (points): 28.166
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 851
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 31111459
--- Timings ---
Current time: 1451159356279 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_yankdup} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_yankdup integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 39
Percent parens: 0.231
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent true, :instruction integer_empty} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_rot} {:close 3, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_max} {:close 1, :silent true, :instruction integer_div} {:close 0, :silent true, :instruction exec_yank} {:close 1, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction integer_div} {:close 0, :silent false, :instruction integer_lt})
Zero cases best program: (genome_toggle_silent genome_unsilence genome_swap exec_shove () genome_close_inc genome_close_dec integer_rot integer_max genome_gene_copy_range integer_mod exec_while (integer_rot exec_s () () () exec_pop (integer_sub exec_yankdup) genome_shove integer_stackdepth) genome_silence genome_parent1 integer_lt)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 28
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (31)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction integer_flush} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq genome_silence integer_flush integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 969001.147
Median total errors in population: 1000000
Error averages by case: (969001.147)
Error minima by case: (37)
Average genome size in population (length): 27.662
Average program size in population (points): 28.867
Average percent parens in population: 0.229
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 845
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 31638382
--- Timings ---
Current time: 1451159360641 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction integer_sub} {:close 2, :silent true, :instruction integer_fromboolean} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (exec_k (integer_sub integer_sub) ()) (boolean_or) genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 41
Percent parens: 0.268
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent true, :instruction integer_empty} {:close 1, :silent false, :instruction exec_do*count} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 1, :silent true, :instruction integer_div} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_or} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_stackdepth})
Zero cases best program: (exec_do*while (genome_yankdup exec_do*count () genome_parent1 exec_eq integer_inc genome_gene_randomize genome_gene_delete genome_gene_delete boolean_dup genome_unsilence exec_do*range (integer_max exec_pop (genome_shove integer_rot exec_shove (integer_yankdup) integer_stackdepth boolean_or boolean_yank) integer_mult integer_min exec_dup ())))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 31
Percent parens: 0.226
--- Lexicase Population Statistics ---
Count of elite individuals by case: (36)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction boolean_swap} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_lt) (boolean_rot boolean_swap) boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 39
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 964001.332
Median total errors in population: 1000000
Error averages by case: (964001.332)
Error minima by case: (37)
Average genome size in population (length): 27.425
Average program size in population (points): 28.882
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 828
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 32188660
--- Timings ---
Current time: 1451159364945 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction exec_do*range} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_y (exec_do*range (integer_sub))) (boolean_or) genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 42
Percent parens: 0.262
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction integer_pop} {:close 1, :silent true, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction boolean_or} {:close 1, :silent false, :instruction genome_new} {:close 1, :silent false, :instruction boolean_pop} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction genome_gene_delete} {:close 1, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction boolean_rot} {:close 0, :silent true, :instruction genome_rotate} {:close 1, :silent false, :instruction integer_max} {:close 1, :silent true, :instruction integer_lt} {:close 1, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction integer_gt} {:close 1, :silent false, :instruction exec_while})
Zero cases best program: (integer_pop integer_shove exec_s (integer_shove genome_gene_dup genome_eq integer_pop) (boolean_frominteger exec_do*range (integer_fromboolean) boolean_and genome_gene_randomize exec_pop (boolean_or genome_new) boolean_pop) (genome_flush exec_k (boolean_yankdup exec_k (integer_dec) (genome_gene_delete integer_dup) genome_rot genome_gene_randomize exec_eq genome_close_inc exec_yank) (integer_max) genome_silence) integer_inc genome_unsilence integer_yank integer_gt exec_while ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 46
Percent parens: 0.239
--- Lexicase Population Statistics ---
Count of elite individuals by case: (26)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent true, :instruction integer_swap} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_stackdepth integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 39
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 974000.962
Median total errors in population: 1000000
Error averages by case: (974000.962)
Error minima by case: (37)
Average genome size in population (length): 27.062
Average program size in population (points): 28.367
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 849
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 32761437
--- Timings ---
Current time: 1451159369273 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_add genome_toggle_silent) (integer_sub) boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_close_inc} {:close 2, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_rot})
Zero cases best program: (genome_gene_delete boolean_dup genome_close_inc integer_yankdup exec_rot () () ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 9
Percent parens: 0.444
--- Lexicase Population Statistics ---
Count of elite individuals by case: (27)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction exec_do*range} {:close 0, :silent false, :instruction exec_do*while} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_do*while (integer_sub)) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 973000.999
Median total errors in population: 1000000
Error averages by case: (973000.999)
Error minima by case: (37)
Average genome size in population (length): 27.042
Average program size in population (points): 28.26
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.993
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 831
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 33293070
--- Timings ---
Current time: 1451159373681 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq boolean_or genome_gene_randomize integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent true, :instruction integer_eq} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent true, :instruction genome_shove} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent false, :instruction genome_close_inc} {:close 0, :silent true, :instruction boolean_yank} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction integer_gte} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent true, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_s})
Zero cases best program: (boolean_frominteger autoconstructive_integer_rand exec_rot () (genome_parent2) (integer_sub exec_do*range (genome_pop boolean_yankdup integer_shove) integer_lt) boolean_and exec_swap (exec_dup (genome_gene_dup integer_lt exec_when (integer_stackdepth genome_rot genome_close_inc) genome_close_inc integer_mult boolean_yank) boolean_rot boolean_dup integer_swap genome_yank integer_yank genome_empty) (integer_dup genome_gene_randomize autoconstructive_integer_rand boolean_dup genome_close_dec) genome_close_dec autoconstructive_integer_rand exec_s () () ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 48
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (30)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_lt} {:close 1, :silent false, :instruction exec_yankdup} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (exec_noop) (integer_lt exec_yankdup) integer_sub boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 970001.11
Median total errors in population: 1000000
Error averages by case: (970001.11)
Error minima by case: (37)
Average genome size in population (length): 27.101
Average program size in population (points): 28.343
Average percent parens in population: 0.237
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 837
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 33841054
--- Timings ---
Current time: 1451159378209 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_shove} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (exec_noop) (exec_shove (genome_gene_copy_range) integer_sub) boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 41
Percent parens: 0.244
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction genome_parent2} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction exec_yankdup} {:close 0, :silent true, :instruction exec_y} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_yank} {:close 2, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent true, :instruction integer_empty} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent true, :instruction boolean_invert_first_then_and} {:close 1, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_rot})
Zero cases best program: (genome_gene_randomize exec_s (exec_stackdepth exec_while (integer_lte genome_parent2 boolean_rot) exec_if (genome_pop genome_unsilence integer_flush integer_empty integer_add boolean_invert_first_then_and genome_swap exec_swap (genome_yank exec_rot () () (boolean_xor genome_pop exec_if (exec_yankdup) (integer_sub) exec_yankdup) integer_max genome_pop) (genome_gene_randomize genome_close_inc genome_yank boolean_rot)) ()) () ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 44
Percent parens: 0.318
--- Lexicase Population Statistics ---
Count of elite individuals by case: (28)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (exec_do*times (integer_pop genome_gene_randomize integer_sub)) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 41
Percent parens: 0.244
--- Population Statistics ---
Average total errors in population: 972001.036
Median total errors in population: 1000000
Error averages by case: (972001.036)
Error minima by case: (37)
Average genome size in population (length): 26.98
Average program size in population (points): 28.382
Average percent parens in population: 0.228
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 844
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 34422378
--- Timings ---
Current time: 1451159382530 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_shove} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_when () integer_shove integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 41
Percent parens: 0.244
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction integer_swap} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent true, :instruction genome_unsilence} {:close 2, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent true, :instruction boolean_yank} {:close 0, :silent true, :instruction exec_empty} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent true, :instruction boolean_frominteger} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent true, :instruction integer_gte} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent true, :instruction boolean_invert_second_then_and} {:close 2, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_flush} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction exec_k} {:close 1, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction integer_div} {:close 2, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction genome_empty} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction exec_eq})
Zero cases best program: (integer_swap genome_parent2 boolean_shove boolean_invert_first_then_and exec_do*count (genome_swap boolean_frominteger genome_gene_delete) genome_yankdup integer_flush exec_stackdepth integer_add boolean_swap integer_lte integer_inc exec_stackdepth genome_gene_dup integer_flush exec_flush integer_empty autoconstructive_integer_rand exec_k (boolean_swap) (integer_gte exec_pop (exec_k () (exec_rot () (integer_div) (exec_while ()) genome_gene_randomize) exec_eq)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 42
Percent parens: 0.262
--- Lexicase Population Statistics ---
Count of elite individuals by case: (35)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_yankdup} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq exec_do*times () exec_yankdup integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 41
Percent parens: 0.244
--- Population Statistics ---
Average total errors in population: 965001.295
Median total errors in population: 1000000
Error averages by case: (965001.295)
Error minima by case: (37)
Average genome size in population (length): 26.909
Average program size in population (points): 28.451
Average percent parens in population: 0.241
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 812
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 34979019
--- Timings ---
Current time: 1451159386958 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 1, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction genome_rotate} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_mod) (genome_rotate) integer_sub boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction exec_shove} {:close 0, :silent true, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction exec_s} {:close 1, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent true, :instruction integer_yankdup} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent true, :instruction exec_do*range} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction exec_rot} {:close 1, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction integer_yankdup} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction genome_swap})
Zero cases best program: (boolean_dup exec_noop genome_gene_dup integer_sub boolean_eq integer_dup integer_rot integer_swap boolean_pop boolean_and genome_pop exec_if (integer_eq genome_gene_dup exec_rot (integer_yankdup boolean_rot) (genome_parent1 boolean_invert_second_then_and genome_swap) ()) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 26
Percent parens: 0.231
--- Lexicase Population Statistics ---
Count of elite individuals by case: (35)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction genome_unsilence} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_div genome_unsilence integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 965001.295
Median total errors in population: 1000000
Error averages by case: (965001.295)
Error minima by case: (37)
Average genome size in population (length): 27.956
Average program size in population (points): 29.167
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 851
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 35547728
--- Timings ---
Current time: 1451159391385 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction boolean_empty} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Lexicase best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq genome_dup boolean_empty integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Lexicase best errors: [37]
Lexicase best number of elite cases: 1
Lexicase best total error: 37
Lexicase best mean error: 37.0
Lexicase best size: 40
Percent parens: 0.225
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent true, :instruction genome_swap} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction genome_flush} {:close 1, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_empty} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_fromboolean} {:close 1, :silent true, :instruction genome_rotate} {:close 2, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent true, :instruction exec_flush} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 2, :silent false, :instruction boolean_dup} {:close 1, :silent true, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_close_dec})
Zero cases best program: (boolean_rot integer_fromboolean genome_close_inc boolean_swap boolean_invert_first_then_and integer_mult genome_eq exec_eq genome_parent2 genome_gene_dup boolean_invert_second_then_and genome_empty genome_flush boolean_frominteger exec_noop boolean_stackdepth genome_gene_copy_range integer_mod integer_max integer_lte genome_new exec_if (genome_pop genome_empty exec_noop) (exec_noop exec_eq integer_fromboolean) integer_mod integer_add exec_while (exec_flush) genome_new exec_do*times (integer_dup boolean_not exec_yank boolean_dup) genome_close_dec)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 44
Percent parens: 0.114
--- Lexicase Population Statistics ---
Count of elite individuals by case: (27)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_yank} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction genome_unsilence} {:close 3, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_xor})
Best program: (boolean_empty boolean_or exec_dup (exec_stackdepth genome_gene_randomize) exec_s (boolean_swap) (integer_eq integer_pop genome_unsilence integer_sub) () boolean_or genome_parent2 integer_dup exec_k (integer_eq exec_stackdepth genome_shove exec_yank) (integer_lte exec_dup () exec_yank genome_rot genome_eq integer_sub genome_shove genome_gene_copy exec_y (genome_empty integer_lte boolean_xor)))
Errors: [37]
Total: 37
Mean: 37.0
Genome size: 36
Size: 40
Percent parens: 0.225
--- Population Statistics ---
Average total errors in population: 973000.999
Median total errors in population: 1000000
Error averages by case: (973000.999)
Error minima by case: (37)
Average genome size in population (length): 26.786
Average program size in population (points): 28.025
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 842
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 36071928
--- Timings ---
Current time: 1451159395543 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty})
Lexicase best program: (autoconstructive_integer_rand integer_stackdepth integer_yankdup genome_empty boolean_stackdepth boolean_flush exec_while (integer_inc integer_mult integer_stackdepth boolean_eq integer_dec) exec_dup (boolean_yankdup genome_gene_randomize) integer_empty exec_s (boolean_swap) (boolean_and exec_dup (boolean_xor) exec_stackdepth genome_unsilence integer_yankdup) (boolean_stackdepth exec_eq integer_yankdup) integer_stackdepth genome_gene_randomize genome_gene_copy_range exec_empty)
Lexicase best errors: [34]
Lexicase best number of elite cases: 1
Lexicase best total error: 34
Lexicase best mean error: 34.0
Lexicase best size: 38
Percent parens: 0.184
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction exec_yank} {:close 0, :silent false, :instruction genome_new})
Zero cases best program: (exec_pop (integer_pop genome_new))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty})
Best program: (autoconstructive_integer_rand integer_stackdepth integer_yankdup genome_empty boolean_stackdepth boolean_flush exec_while (integer_inc integer_mult integer_stackdepth boolean_eq integer_dec) exec_dup (boolean_yankdup genome_gene_randomize) integer_empty exec_s (boolean_swap) (boolean_and exec_dup (boolean_xor) exec_stackdepth genome_unsilence integer_yankdup) (boolean_stackdepth exec_eq integer_yankdup) integer_stackdepth genome_gene_randomize genome_gene_copy_range exec_empty)
Errors: [34]
Total: 34
Mean: 34.0
Genome size: 33
Size: 38
Percent parens: 0.184
--- Population Statistics ---
Average total errors in population: 964001.329
Median total errors in population: 1000000
Error averages by case: (964001.329)
Error minima by case: (34)
Average genome size in population (length): 27.564
Average program size in population (points): 28.757
Average percent parens in population: 0.229
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 845
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 36638026
--- Timings ---
Current time: 1451159399926 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty})
Lexicase best program: (autoconstructive_integer_rand integer_stackdepth integer_yankdup genome_empty boolean_stackdepth boolean_flush exec_while (integer_inc integer_mult integer_stackdepth boolean_eq integer_dec) exec_dup (boolean_yankdup genome_gene_randomize) integer_empty exec_s (boolean_swap) (boolean_and exec_dup (boolean_xor) exec_stackdepth genome_unsilence integer_yankdup) (boolean_stackdepth exec_eq integer_yankdup) integer_stackdepth genome_gene_randomize genome_gene_copy_range exec_empty)
Lexicase best errors: [34]
Lexicase best number of elite cases: 1
Lexicase best total error: 34
Lexicase best mean error: 34.0
Lexicase best size: 38
Percent parens: 0.184
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty})
Zero cases best program: (autoconstructive_integer_rand integer_stackdepth integer_yankdup genome_empty boolean_stackdepth boolean_flush exec_while (integer_inc integer_mult integer_stackdepth boolean_eq integer_dec) exec_dup (boolean_yankdup genome_gene_randomize) integer_empty exec_s (boolean_swap) (boolean_and exec_dup (boolean_xor) exec_stackdepth genome_unsilence integer_yankdup) (boolean_stackdepth exec_eq integer_yankdup) integer_stackdepth genome_gene_randomize genome_gene_copy_range exec_empty)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 38
Percent parens: 0.184
--- Lexicase Population Statistics ---
Count of elite individuals by case: (11)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty})
Best program: (autoconstructive_integer_rand integer_stackdepth integer_yankdup genome_empty boolean_stackdepth boolean_flush exec_while (integer_inc integer_mult integer_stackdepth boolean_eq integer_dec) exec_dup (boolean_yankdup genome_gene_randomize) integer_empty exec_s (boolean_swap) (boolean_and exec_dup (boolean_xor) exec_stackdepth genome_unsilence integer_yankdup) (boolean_stackdepth exec_eq integer_yankdup) integer_stackdepth genome_gene_randomize genome_gene_copy_range exec_empty)
Errors: [34]
Total: 34
Mean: 34.0
Genome size: 33
Size: 38
Percent parens: 0.184
--- Population Statistics ---
Average total errors in population: 989000.374
Median total errors in population: 1000000
Error averages by case: (989000.374)
Error minima by case: (34)
Average genome size in population (length): 25.901
Average program size in population (points): 27.198
Average percent parens in population: 0.225
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 108
Genome diversity (% unique Plush genomes):	 0.893
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 109
Syntactic diversity (% unique Push programs):	 0.884
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 883
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 37108359
--- Timings ---
Current time: 1451159404160 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty})
Lexicase best program: (autoconstructive_integer_rand integer_stackdepth integer_yankdup genome_empty boolean_stackdepth boolean_flush exec_while (integer_inc integer_mult integer_stackdepth boolean_eq integer_dec) exec_dup (boolean_yankdup genome_gene_randomize) integer_empty exec_s (boolean_swap) (boolean_and exec_dup (boolean_xor) exec_stackdepth genome_unsilence integer_yankdup) (boolean_stackdepth exec_eq integer_yankdup) integer_stackdepth genome_gene_randomize genome_gene_copy_range exec_empty)
Lexicase best errors: [34]
Lexicase best number of elite cases: 1
Lexicase best total error: 34
Lexicase best mean error: 34.0
Lexicase best size: 38
Percent parens: 0.184
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_y} {:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction exec_if} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction exec_yankdup} {:close 1, :silent true, :instruction integer_swap} {:close 1, :silent true, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction boolean_shove} {:close 1, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_yankdup} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction boolean_shove} {:close 2, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction integer_shove})
Zero cases best program: (integer_mod genome_close_inc exec_y () boolean_and integer_shove boolean_rot genome_rot genome_toggle_silent integer_lt exec_dup (exec_while (exec_pop (exec_yankdup genome_empty integer_eq genome_gene_dup boolean_frominteger integer_add integer_mod integer_dec) integer_dup) exec_y (integer_shove integer_gt genome_dup exec_do*count () genome_flush boolean_dup genome_gene_copy exec_do*range (genome_empty integer_pop genome_toggle_silent) boolean_shove integer_inc)) exec_yankdup exec_yank)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 45
Percent parens: 0.178
--- Lexicase Population Statistics ---
Count of elite individuals by case: (14)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction integer_dec} {:close 1, :silent true, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_empty})
Best program: (autoconstructive_integer_rand integer_stackdepth integer_yankdup genome_empty boolean_stackdepth boolean_flush exec_while (integer_inc integer_mult integer_stackdepth boolean_eq integer_dec) exec_dup (boolean_yankdup genome_gene_randomize) integer_empty exec_s (boolean_swap) (boolean_and exec_dup (boolean_xor) exec_stackdepth genome_unsilence integer_yankdup) (boolean_stackdepth exec_eq integer_yankdup) integer_stackdepth genome_gene_randomize genome_gene_copy_range exec_empty)
Errors: [34]
Total: 34
Mean: 34.0
Genome size: 33
Size: 38
Percent parens: 0.184
--- Population Statistics ---
Average total errors in population: 986000.476
Median total errors in population: 1000000
Error averages by case: (986000.476)
Error minima by case: (34)
Average genome size in population (length): 26.666
Average program size in population (points): 27.9
Average percent parens in population: 0.228
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 88
Genome diversity (% unique Plush genomes):	 0.897
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 88
Syntactic diversity (% unique Push programs):	 0.891
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 882
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 37706666
--- Timings ---
Current time: 1451159408640 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Lexicase best program: (integer_rot exec_stackdepth boolean_eq genome_gene_delete integer_dup integer_sub genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize boolean_eq genome_rotate exec_while (integer_gte) exec_yank)
Lexicase best errors: [21]
Lexicase best number of elite cases: 1
Lexicase best total error: 21
Lexicase best mean error: 21.0
Lexicase best size: 20
Percent parens: 0.150
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_yankdup} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction exec_do*count} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent true, :instruction exec_pop} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction genome_pop} {:close 1, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent true, :instruction genome_stackdepth} {:close 0, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction genome_dup} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent true, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent true, :instruction integer_lt} {:close 0, :silent false, :instruction boolean_or})
Zero cases best program: (genome_yankdup integer_yankdup exec_do*count (boolean_xor) integer_dup genome_swap genome_pop integer_lte exec_y (genome_parent2 exec_stackdepth genome_rotate genome_stackdepth exec_s (boolean_pop genome_dup) (genome_stackdepth) (boolean_invert_second_then_and genome_yank genome_flush exec_s (exec_yank integer_add integer_min integer_shove) (boolean_rot) (boolean_or))))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 36
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Best program: (integer_rot exec_stackdepth boolean_eq genome_gene_delete integer_dup integer_sub genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize boolean_eq genome_rotate exec_while (integer_gte) exec_yank)
Errors: [21]
Total: 21
Mean: 21.0
Genome size: 20
Size: 20
Percent parens: 0.150
--- Population Statistics ---
Average total errors in population: 987000.429
Median total errors in population: 1000000
Error averages by case: (987000.429)
Error minima by case: (21)
Average genome size in population (length): 26.49
Average program size in population (points): 27.63
Average percent parens in population: 0.228
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 60
Genome diversity (% unique Plush genomes):	 0.924
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.915
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 896
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 38285079
--- Timings ---
Current time: 1451159412792 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Lexicase best program: (integer_rot exec_stackdepth boolean_eq genome_gene_delete integer_dup integer_sub integer_lt genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize genome_rotate exec_while (integer_gte) exec_yank)
Lexicase best errors: [20]
Lexicase best number of elite cases: 1
Lexicase best total error: 20
Lexicase best mean error: 20.0
Lexicase best size: 20
Percent parens: 0.150
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction integer_max} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent true, :instruction exec_yank} {:close 1, :silent true, :instruction integer_max} {:close 0, :silent false, :instruction integer_rot} {:close 1, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction boolean_invert_first_then_and} {:close 1, :silent true, :instruction genome_eq} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent true, :instruction genome_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_flush} {:close 1, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction exec_k} {:close 1, :silent true, :instruction boolean_pop} {:close 0, :silent true, :instruction genome_parent1} {:close 0, :silent true, :instruction genome_rot})
Zero cases best program: (boolean_yank boolean_stackdepth genome_parent1 boolean_pop genome_rot integer_inc boolean_pop integer_max exec_eq integer_mod exec_s () (exec_noop boolean_not) (integer_shove integer_lt genome_close_inc exec_yankdup integer_stackdepth integer_rot genome_close_inc) integer_dup exec_noop integer_flush exec_k (boolean_invert_first_then_and genome_toggle_silent autoconstructive_integer_rand exec_flush exec_noop integer_flush exec_flush integer_lt) (integer_swap exec_k () ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 42
Percent parens: 0.190
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Best program: (integer_rot exec_stackdepth boolean_eq genome_gene_delete integer_dup integer_sub integer_lt genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize genome_rotate exec_while (integer_gte) exec_yank)
Errors: [20]
Total: 20
Mean: 20.0
Genome size: 19
Size: 20
Percent parens: 0.150
--- Population Statistics ---
Average total errors in population: 998000.071
Median total errors in population: 1000000
Error averages by case: (998000.071)
Error minima by case: (20)
Average genome size in population (length): 25.174
Average program size in population (points): 26.015
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 979
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 38820367
--- Timings ---
Current time: 1451159415350 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Lexicase best program: (integer_rot exec_stackdepth exec_dup (genome_gene_delete integer_dup integer_sub integer_lt genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize) exec_while (integer_gte) exec_yank)
Lexicase best errors: [19]
Lexicase best number of elite cases: 1
Lexicase best total error: 19
Lexicase best mean error: 19.0
Lexicase best size: 20
Percent parens: 0.200
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_min} {:close 0, :silent true, :instruction integer_inc} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent true, :instruction boolean_frominteger} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction integer_swap})
Zero cases best program: (integer_min boolean_stackdepth boolean_yankdup integer_min integer_gt boolean_or autoconstructive_integer_rand genome_silence genome_swap integer_swap)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 11
Percent parens: 0.091
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Best program: (integer_rot exec_stackdepth exec_dup (genome_gene_delete integer_dup integer_sub integer_lt genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize) exec_while (integer_gte) exec_yank)
Errors: [19]
Total: 19
Mean: 19.0
Genome size: 18
Size: 20
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 999000.019
Median total errors in population: 1000000
Error averages by case: (999000.019)
Error minima by case: (19)
Average genome size in population (length): 25.917
Average program size in population (points): 26.755
Average percent parens in population: 0.224
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 982
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 39457078
--- Timings ---
Current time: 1451159418107 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Lexicase best program: (integer_rot exec_stackdepth exec_dup (genome_gene_delete integer_dup integer_sub integer_lt genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize) exec_while (integer_gte) exec_yank)
Lexicase best errors: [19]
Lexicase best number of elite cases: 1
Lexicase best total error: 19
Lexicase best mean error: 19.0
Lexicase best size: 20
Percent parens: 0.200
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction genome_toggle_silent} {:close 1, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction exec_y} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent true, :instruction integer_gt} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent true, :instruction genome_yankdup} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction integer_dec} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_eq} {:close 1, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent true, :instruction exec_swap} {:close 0, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction exec_swap} {:close 2, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction genome_empty} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent true, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 1, :silent true, :instruction integer_flush} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent true, :instruction genome_rot} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_dup})
Zero cases best program: (genome_toggle_silent genome_gene_copy integer_fromboolean boolean_or genome_pop boolean_empty integer_lte exec_y (integer_shove) exec_s () (exec_do*times (genome_yank genome_close_inc boolean_not genome_stackdepth integer_dec exec_do*while () exec_noop boolean_eq exec_rot () (integer_lte integer_add exec_swap (exec_pop ()) (genome_dup genome_close_inc exec_if (boolean_invert_first_then_and exec_while (genome_eq) integer_yankdup integer_swap genome_close_inc genome_empty) (boolean_dup))) ())) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 51
Percent parens: 0.314
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Best program: (integer_rot exec_stackdepth exec_dup (genome_gene_delete integer_dup integer_sub integer_lt genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize) exec_while (integer_gte) exec_yank)
Errors: [19]
Total: 19
Mean: 19.0
Genome size: 18
Size: 20
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 997000.057
Median total errors in population: 1000000
Error averages by case: (997000.057)
Error minima by case: (19)
Average genome size in population (length): 25.67
Average program size in population (points): 26.443
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 978
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 40108576
--- Timings ---
Current time: 1451159420794 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_yank})
Lexicase best program: (integer_rot exec_stackdepth exec_dup (genome_gene_delete integer_sub integer_lt integer_stackdepth boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize) exec_while (integer_gte) exec_yank)
Lexicase best errors: [18]
Lexicase best number of elite cases: 1
Lexicase best total error: 18
Lexicase best mean error: 18.0
Lexicase best size: 19
Percent parens: 0.211
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_do*count} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction genome_unsilence} {:close 1, :silent true, :instruction exec_if} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction boolean_dup} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent true, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction integer_div} {:close 1, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction genome_flush} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction exec_while} {:close 1, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction boolean_empty})
Zero cases best program: (exec_while (genome_unsilence boolean_rot boolean_flush genome_parent2) integer_rot exec_do*count (integer_gte) genome_close_dec genome_toggle_silent genome_rotate integer_shove genome_unsilence boolean_and boolean_dup exec_noop boolean_invert_second_then_and genome_pop genome_close_dec integer_gte genome_gene_copy_range genome_toggle_silent integer_lt integer_div exec_while () genome_parent2 genome_close_inc exec_do*while () boolean_or boolean_empty)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 35
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction integer_max})
Best program: (integer_rot exec_stackdepth exec_dup (genome_gene_delete integer_sub exec_shove (genome_silence boolean_invert_second_then_and exec_while (exec_flush) autoconstructive_integer_rand genome_gene_randomize) exec_while (integer_gte) integer_max))
Errors: [18]
Total: 18
Mean: 18.0
Genome size: 17
Size: 20
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 997000.078
Median total errors in population: 1000000
Error averages by case: (997000.078)
Error minima by case: (18)
Average genome size in population (length): 25.857
Average program size in population (points): 26.816
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 963
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 40623210
--- Timings ---
Current time: 1451159423374 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent true, :instruction integer_yank} {:close 1, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction genome_stackdepth})
Lexicase best program: (exec_if () (genome_pop boolean_yankdup exec_do*count () genome_stackdepth))
Lexicase best errors: [1000000]
Lexicase best number of elite cases: 1
Lexicase best total error: 1000000
Lexicase best mean error: 1000000.0
Lexicase best size: 9
Percent parens: 0.444
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction integer_yank} {:close 1, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction genome_stackdepth})
Zero cases best program: (exec_if () (genome_pop boolean_yankdup exec_do*count () genome_stackdepth))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 9
Percent parens: 0.444
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000)
Population mean number of elite cases: 1.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction exec_noop} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent false, :instruction boolean_xor} {:close 1, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction integer_add} {:close 1, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction integer_max} {:close 0, :silent true, :instruction genome_silence} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_empty} {:close 1, :silent true, :instruction boolean_flush})
Best program: (exec_noop boolean_xor genome_dup boolean_not genome_swap integer_add genome_close_inc boolean_swap genome_swap integer_yank boolean_eq exec_eq integer_max boolean_dup)
Errors: [1000000]
Total: 1000000
Mean: 1000000.0
Genome size: 20
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 1000000.0
Median total errors in population: 1000000
Error averages by case: (1000000.0)
Error minima by case: (1000000)
Average genome size in population (length): 25.473
Average program size in population (points): 26.327
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.001
Error (vector) diversity:			 0.001
Number of random replacements for recursively invariant individuals: 972
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 41116545
--- Timings ---
Current time: 1451159425810 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction boolean_swap} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup})
Lexicase best program: (exec_stackdepth boolean_empty genome_gene_randomize exec_when (exec_yankdup genome_toggle_silent) exec_k (genome_shove boolean_rot integer_fromboolean integer_mod exec_eq) (exec_flush genome_parent2) genome_gene_copy genome_eq exec_do*while (boolean_yank genome_rot genome_rot exec_flush exec_do*range (integer_yank genome_yank boolean_yank exec_shove (genome_close_dec) exec_do*count (integer_min genome_gene_randomize) exec_stackdepth exec_s () (genome_eq genome_parent1 exec_do*while ()) ())))
Lexicase best errors: [50]
Lexicase best number of elite cases: 1
Lexicase best total error: 50
Lexicase best mean error: 50.0
Lexicase best size: 47
Percent parens: 0.255
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent true, :instruction genome_rot} {:close 1, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction genome_new} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent true, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction integer_yankdup} {:close 0, :silent true, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction exec_noop})
Zero cases best program: (boolean_not boolean_dup genome_new integer_yank genome_stackdepth integer_gt boolean_frominteger integer_lt genome_eq exec_y (genome_unsilence genome_unsilence integer_yankdup) integer_pop integer_eq exec_noop)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 18
Percent parens: 0.111
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction boolean_swap} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup})
Best program: (exec_stackdepth boolean_empty genome_gene_randomize exec_when (exec_yankdup genome_toggle_silent) exec_k (genome_shove boolean_rot integer_fromboolean integer_mod exec_eq) (exec_flush genome_parent2) genome_gene_copy genome_eq exec_do*while (boolean_yank genome_rot genome_rot exec_flush exec_do*range (integer_yank genome_yank boolean_yank exec_shove (genome_close_dec) exec_do*count (integer_min genome_gene_randomize) exec_stackdepth exec_s () (genome_eq genome_parent1 exec_do*while ()) ())))
Errors: [50]
Total: 50
Mean: 50.0
Genome size: 49
Size: 47
Percent parens: 0.255
--- Population Statistics ---
Average total errors in population: 999000.05
Median total errors in population: 1000000
Error averages by case: (999000.05)
Error minima by case: (50)
Average genome size in population (length): 25.449
Average program size in population (points): 26.204
Average percent parens in population: 0.237
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 2
Genome diversity (% unique Plush genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 999
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 41897845
--- Timings ---
Current time: 1451159428420 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction boolean_swap} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup})
Lexicase best program: (exec_stackdepth boolean_empty genome_gene_randomize exec_when (exec_yankdup genome_toggle_silent) exec_k (genome_shove boolean_rot integer_swap integer_mod exec_eq) (exec_flush genome_parent2) genome_gene_copy genome_eq exec_do*while (boolean_yank genome_rot genome_rot exec_flush exec_do*range (integer_yank genome_yank boolean_yank exec_shove (genome_close_dec) exec_do*count (integer_min genome_gene_randomize) exec_stackdepth exec_s () (genome_eq genome_parent1 exec_do*while ()) ())))
Lexicase best errors: [50]
Lexicase best number of elite cases: 1
Lexicase best total error: 50
Lexicase best mean error: 50.0
Lexicase best size: 47
Percent parens: 0.255
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction integer_stackdepth} {:close 1, :silent false, :instruction exec_while} {:close 0, :silent true, :instruction genome_silence} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_empty} {:close 2, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent true, :instruction exec_y} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent true, :instruction integer_sub} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent true, :instruction exec_noop} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_gene_dup} {:close 1, :silent false, :instruction boolean_or} {:close 1, :silent false, :instruction integer_fromboolean} {:close 3, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction genome_parent1} {:close 2, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_copy} {:close 1, :silent false, :instruction genome_pop} {:close 2, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_unsilence} {:close 1, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction integer_min})
Zero cases best program: (exec_yank integer_stackdepth exec_while () genome_yank exec_rot (boolean_empty exec_yank) () (exec_dup (exec_do*range (boolean_and boolean_stackdepth exec_s (genome_shove boolean_frominteger genome_toggle_silent genome_gene_dup boolean_or) (integer_fromboolean) (autoconstructive_integer_rand))) genome_close_inc integer_max genome_silence integer_eq integer_gte integer_flush) exec_eq integer_min exec_shove (integer_lte) integer_fromboolean genome_gene_copy genome_pop exec_eq genome_rotate integer_empty boolean_not integer_yank genome_unsilence exec_do*times () exec_do*while (integer_min))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 54
Percent parens: 0.241
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction boolean_swap} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup})
Best program: (exec_stackdepth boolean_empty genome_gene_randomize exec_when (exec_yankdup genome_toggle_silent) exec_k (genome_shove boolean_rot genome_toggle_silent integer_mod exec_eq) (exec_flush genome_parent2) genome_gene_copy genome_eq exec_do*while (boolean_yank genome_rot genome_rot exec_flush exec_do*range (integer_yank genome_yank boolean_yank exec_shove (genome_close_dec) exec_do*count (integer_min genome_gene_randomize) exec_stackdepth exec_s () (genome_eq genome_parent1 exec_do*while ()) ())))
Errors: [50]
Total: 50
Mean: 50.0
Genome size: 49
Size: 47
Percent parens: 0.255
--- Population Statistics ---
Average total errors in population: 997000.15
Median total errors in population: 1000000
Error averages by case: (997000.15)
Error minima by case: (50)
Average genome size in population (length): 26.658
Average program size in population (points): 27.304
Average percent parens in population: 0.237
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 5
Genome diversity (% unique Plush genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.978
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 959
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 42396003
--- Timings ---
Current time: 1451159432395 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction boolean_swap} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup})
Lexicase best program: (exec_stackdepth boolean_empty genome_gene_randomize exec_when (exec_yankdup genome_toggle_silent) exec_k (genome_shove boolean_rot exec_noop integer_mod exec_eq) (exec_flush genome_parent2) genome_gene_copy genome_eq exec_do*while (boolean_yank genome_rot genome_rot exec_flush exec_do*range (integer_yank genome_yank boolean_yank exec_shove (genome_close_dec) exec_do*count (integer_min genome_gene_randomize) exec_stackdepth exec_s () (genome_eq genome_parent1 exec_do*while ()) ())))
Lexicase best errors: [50]
Lexicase best number of elite cases: 1
Lexicase best total error: 50
Lexicase best mean error: 50.0
Lexicase best size: 47
Percent parens: 0.255
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction boolean_swap} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup})
Zero cases best program: (exec_stackdepth boolean_empty genome_gene_randomize exec_when (exec_yankdup genome_toggle_silent) exec_k (genome_shove boolean_rot genome_parent2 integer_mod exec_eq) (exec_flush genome_parent2) genome_gene_copy genome_eq exec_do*while (boolean_yank genome_rot genome_rot exec_flush exec_do*range (integer_yank genome_yank boolean_yank exec_shove (genome_close_dec) exec_do*count (integer_min genome_gene_randomize) exec_stackdepth exec_s () (genome_eq genome_parent1 exec_do*while ()) ())))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 47
Percent parens: 0.255
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :silent true, :instruction integer_dec} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_mod} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent true, :instruction boolean_swap} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent true, :instruction integer_dup} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent true, :instruction integer_pop} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction genome_close_inc} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction genome_dup})
Best program: (exec_stackdepth boolean_empty genome_gene_randomize exec_when (exec_yankdup genome_toggle_silent) exec_k (genome_shove boolean_rot integer_stackdepth integer_mod exec_eq) (exec_flush genome_parent2) genome_gene_copy genome_eq exec_do*while (boolean_yank genome_rot genome_rot exec_flush exec_do*range (integer_yank genome_yank boolean_yank exec_shove (genome_close_dec) exec_do*count (integer_min genome_gene_randomize) exec_stackdepth exec_s () (genome_eq genome_parent1 exec_do*while ()) ())))
Errors: [50]
Total: 50
Mean: 50.0
Genome size: 49
Size: 47
Percent parens: 0.255
--- Population Statistics ---
Average total errors in population: 998000.1
Median total errors in population: 1000000
Error averages by case: (998000.1)
Error minima by case: (50)
Average genome size in population (length): 25.72
Average program size in population (points): 26.331
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 3
Genome diversity (% unique Plush genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 962
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 42899455
--- Timings ---
Current time: 1451159436794 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_add} {:close 1, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop integer_add genome_gene_delete genome_empty genome_silence genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [35]
Lexicase best number of elite cases: 1
Lexicase best total error: 35
Lexicase best mean error: 35.0
Lexicase best size: 34
Percent parens: 0.206
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction boolean_and} {:close 1, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_min})
Zero cases best program: (genome_dup boolean_and exec_do*range () genome_swap genome_gene_copy integer_min)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 8
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_add} {:close 1, :silent true, :instruction genome_unsilence} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop integer_add genome_gene_delete genome_empty genome_silence genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [35]
Total: 35
Mean: 35.0
Genome size: 34
Size: 34
Percent parens: 0.206
--- Population Statistics ---
Average total errors in population: 997000.135
Median total errors in population: 1000000
Error averages by case: (997000.135)
Error minima by case: (35)
Average genome size in population (length): 26.166
Average program size in population (points): 26.746
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 4
Genome diversity (% unique Plush genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 963
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 43410037
--- Timings ---
Current time: 1451159440851 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_gene_delete genome_empty genome_silence genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [33]
Lexicase best number of elite cases: 1
Lexicase best total error: 33
Lexicase best mean error: 33.0
Lexicase best size: 33
Percent parens: 0.212
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 1, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction boolean_eq} {:close 2, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction integer_dup} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_flush} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_rotate} {:close 1, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent true, :instruction integer_stackdepth})
Zero cases best program: (genome_stackdepth integer_dup genome_gene_copy_range exec_k (boolean_eq integer_eq) () boolean_frominteger genome_gene_dup genome_new integer_dup integer_empty integer_gte boolean_rot integer_gt boolean_stackdepth autoconstructive_integer_rand genome_flush exec_dup () exec_dup (exec_y () genome_rotate exec_rot () (exec_do*times () exec_empty integer_pop genome_gene_delete) (exec_yankdup integer_lte exec_noop exec_s () (integer_div integer_mod genome_close_inc exec_do*times (boolean_yankdup boolean_rot)) ())))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 50
Percent parens: 0.280
--- Lexicase Population Statistics ---
Count of elite individuals by case: (7)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_gene_delete genome_empty genome_silence genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [33]
Total: 33
Mean: 33.0
Genome size: 32
Size: 33
Percent parens: 0.212
--- Population Statistics ---
Average total errors in population: 988000.406
Median total errors in population: 1000000
Error averages by case: (988000.406)
Error minima by case: (33)
Average genome size in population (length): 26.656
Average program size in population (points): 27.396
Average percent parens in population: 0.225
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 82
Genome diversity (% unique Plush genomes):	 0.901
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 82
Syntactic diversity (% unique Push programs):	 0.898
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 899
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 43989815
--- Timings ---
Current time: 1451159444815 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_silence genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [31]
Lexicase best number of elite cases: 1
Lexicase best total error: 31
Lexicase best mean error: 31.0
Lexicase best size: 31
Percent parens: 0.226
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction integer_gt} {:close 1, :silent false, :instruction boolean_swap} {:close 1, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent true, :instruction genome_gene_copy} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 2, :silent true, :instruction boolean_dup} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_dec} {:close 2, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 2, :silent false, :instruction genome_close_inc})
Zero cases best program: (genome_parent2 integer_gt boolean_swap genome_gene_dup integer_pop integer_sub boolean_not exec_dup (exec_noop genome_swap boolean_rot boolean_dup boolean_eq genome_gene_delete integer_shove integer_eq genome_parent2 genome_gene_randomize exec_dup (genome_gene_copy integer_dec genome_close_dec)) genome_eq integer_yank genome_empty integer_mod boolean_empty exec_s (integer_sub genome_yank exec_s (genome_toggle_silent genome_swap integer_empty) (genome_gene_copy_range genome_close_inc) ()) () ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 45
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (27)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_silence genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [31]
Total: 31
Mean: 31.0
Genome size: 30
Size: 31
Percent parens: 0.226
--- Population Statistics ---
Average total errors in population: 972000.87
Median total errors in population: 1000000
Error averages by case: (972000.87)
Error minima by case: (31)
Average genome size in population (length): 26.539
Average program size in population (points): 27.345
Average percent parens in population: 0.228
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 146
Genome diversity (% unique Plush genomes):	 0.845
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 146
Syntactic diversity (% unique Push programs):	 0.843
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 843
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 44469088
--- Timings ---
Current time: 1451159448610 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction integer_div} {:close 2, :silent true, :instruction integer_lt} {:close 0, :silent false, :instruction integer_gt} {:close 1, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction integer_max} {:close 0, :silent true, :instruction exec_swap} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_rot} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_flush} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_or} {:close 1, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction integer_gt} {:close 1, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_swap})
Zero cases best program: (integer_div integer_gt genome_shove exec_do*while (exec_swap (integer_shove integer_yank integer_max integer_flush exec_rot (integer_shove) (autoconstructive_integer_rand) (exec_flush boolean_yank) genome_parent2 genome_rotate boolean_or genome_new) (exec_empty integer_div boolean_empty integer_flush exec_when (exec_when () autoconstructive_integer_rand integer_swap))))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 35
Percent parens: 0.257
--- Lexicase Population Statistics ---
Count of elite individuals by case: (47)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 950001.474
Median total errors in population: 1000000
Error averages by case: (950001.474)
Error minima by case: (29)
Average genome size in population (length): 26.209
Average program size in population (points): 27.232
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 202
Genome diversity (% unique Plush genomes):	 0.785
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 202
Syntactic diversity (% unique Push programs):	 0.781
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Number of random replacements for recursively invariant individuals: 783
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 45006446
--- Timings ---
Current time: 1451159452222 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_flush} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction boolean_frominteger} {:close 1, :silent false, :instruction integer_swap} {:close 1, :silent false, :instruction integer_mult} {:close 0, :silent true, :instruction exec_swap} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction exec_y})
Zero cases best program: (exec_swap (exec_flush boolean_rot) (exec_rot (exec_empty exec_yankdup genome_rot genome_new boolean_frominteger integer_swap) (integer_mult) (exec_noop boolean_rot exec_noop integer_shove genome_stackdepth genome_gene_randomize exec_while (genome_dup integer_dup exec_do*count (exec_do*range (boolean_rot) genome_shove boolean_stackdepth exec_y ())))))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 36
Percent parens: 0.278
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 25.728
Average program size in population (points): 26.551
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 974
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 45591227
--- Timings ---
Current time: 1451159454793 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 2, :silent true, :instruction boolean_empty} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction integer_mult} {:close 0, :silent true, :instruction exec_yank} {:close 0, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction genome_yank} {:close 1, :silent true, :instruction integer_mult} {:close 0, :silent false, :instruction integer_add} {:close 2, :silent false, :instruction integer_flush} {:close 0, :silent true, :instruction boolean_not} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction integer_min} {:close 1, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_gt} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_yankdup} {:close 1, :silent true, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction integer_empty} {:close 2, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction boolean_swap} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction exec_do*times})
Zero cases best program: (autoconstructive_integer_rand boolean_yankdup integer_mult genome_gene_copy_range genome_yank integer_add integer_flush genome_close_inc genome_parent2 autoconstructive_integer_rand integer_gt genome_gene_delete boolean_invert_second_then_and genome_unsilence exec_y (genome_close_inc exec_yankdup genome_rot integer_empty exec_swap () () genome_dup boolean_swap genome_toggle_silent) exec_s (boolean_invert_first_then_and exec_if (exec_do*times ()) ()) () ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 37
Percent parens: 0.270
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 25.2
Average program size in population (points): 25.872
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 973
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 46111206
--- Timings ---
Current time: 1451159457273 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction boolean_and} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction integer_sub} {:close 2, :silent true, :instruction integer_sub} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent true, :instruction integer_max} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent true, :instruction genome_close_dec} {:close 0, :silent true, :instruction integer_gte} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent true, :instruction exec_when} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction exec_dup} {:close 1, :silent true, :instruction boolean_frominteger} {:close 1, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction integer_eq} {:close 1, :silent true, :instruction exec_y} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_stackdepth} {:close 1, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction integer_mult})
Zero cases best program: (boolean_yankdup boolean_and exec_noop exec_while (boolean_yank exec_y () integer_sub integer_div integer_min genome_stackdepth autoconstructive_integer_rand genome_parent1 genome_flush exec_dup (boolean_not genome_toggle_silent exec_eq) exec_swap (exec_pop (genome_empty boolean_shove integer_pop integer_flush exec_dup (integer_gt) integer_min integer_min boolean_frominteger) integer_inc exec_empty) (exec_s (genome_unsilence integer_stackdepth integer_yank) (genome_gene_copy_range boolean_invert_first_then_and integer_mult) ())))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 48
Percent parens: 0.229
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 997000.087
Median total errors in population: 1000000
Error averages by case: (997000.087)
Error minima by case: (29)
Average genome size in population (length): 25.462
Average program size in population (points): 26.322
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.963
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 972
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 46661026
--- Timings ---
Current time: 1451159459813 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction boolean_yankdup} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction integer_yankdup} {:close 2, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_swap})
Zero cases best program: (integer_fromboolean boolean_yankdup exec_flush genome_gene_randomize boolean_rot exec_if (exec_empty integer_yankdup boolean_frominteger) () integer_mod exec_while (exec_do*range () exec_noop boolean_swap))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 19
Percent parens: 0.263
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 995000.145
Median total errors in population: 1000000
Error averages by case: (995000.145)
Error minima by case: (29)
Average genome size in population (length): 25.573
Average program size in population (points): 26.596
Average percent parens in population: 0.236
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 984
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 47228276
--- Timings ---
Current time: 1451159462333 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction exec_eq} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent true, :instruction integer_rot} {:close 1, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction boolean_frominteger} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_flush} {:close 1, :silent true, :instruction exec_while} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction boolean_shove} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction integer_lt} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction integer_div})
Zero cases best program: (genome_empty boolean_rot boolean_xor boolean_frominteger boolean_rot genome_unsilence integer_pop boolean_yankdup genome_flush exec_shove (exec_empty integer_inc genome_rotate boolean_invert_second_then_and) boolean_shove boolean_yank integer_lt integer_div)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 20
Percent parens: 0.100
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 998000.058
Median total errors in population: 1000000
Error averages by case: (998000.058)
Error minima by case: (29)
Average genome size in population (length): 25.742
Average program size in population (points): 26.25
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 984
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 47815672
--- Timings ---
Current time: 1451159465028 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent true, :instruction genome_rot} {:close 1, :silent false, :instruction exec_stackdepth} {:close 0, :silent true, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent true, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent true, :instruction integer_gte} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction boolean_frominteger} {:close 1, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction exec_s} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction boolean_flush})
Zero cases best program: (exec_do*times (integer_stackdepth boolean_swap genome_yank exec_if (exec_shove (exec_dup (genome_close_inc exec_stackdepth) boolean_xor genome_close_inc autoconstructive_integer_rand) genome_gene_delete boolean_invert_second_then_and boolean_flush exec_s (genome_parent2 exec_rot (boolean_empty genome_pop) (genome_flush integer_shove integer_swap integer_yankdup genome_parent2 exec_do*times (genome_rotate exec_s () (boolean_and) (exec_s (boolean_xor) (boolean_flush) ()))) ()) () ()) ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 51
Percent parens: 0.373
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 996000.116
Median total errors in population: 1000000
Error averages by case: (996000.116)
Error minima by case: (29)
Average genome size in population (length): 24.839
Average program size in population (points): 25.732
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 983
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 48291436
--- Timings ---
Current time: 1451159467427 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_new} {:close 0, :silent true, :instruction exec_dup})
Zero cases best program: genome_new
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 1
Percent parens: 0.000
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 997000.087
Median total errors in population: 1000000
Error averages by case: (997000.087)
Error minima by case: (29)
Average genome size in population (length): 25.1
Average program size in population (points): 25.952
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.971
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 979
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 48807206
--- Timings ---
Current time: 1451159469904 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction boolean_yank} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_yankdup} {:close 1, :silent true, :instruction genome_yank} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 1, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction integer_gte} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction exec_empty})
Zero cases best program: (genome_flush integer_lte exec_yankdup genome_gene_randomize boolean_shove genome_new genome_unsilence)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 8
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 996000.127
Median total errors in population: 1000000
Error averages by case: (996000.127)
Error minima by case: (29)
Average genome size in population (length): 25.507
Average program size in population (points): 26.28
Average percent parens in population: 0.235
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 978
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 49370513
--- Timings ---
Current time: 1451159472552 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction genome_close_inc} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction exec_dup} {:close 1, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_while} {:close 1, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction genome_yankdup} {:close 1, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent true, :instruction exec_stackdepth} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction integer_dec} {:close 1, :silent false, :instruction integer_add} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction genome_yankdup} {:close 1, :silent false, :instruction boolean_dup} {:close 1, :silent true, :instruction exec_flush} {:close 1, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction boolean_empty} {:close 1, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_y} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction genome_gene_copy} {:close 1, :silent false, :instruction boolean_and} {:close 1, :silent true, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_yankdup} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction exec_rot} {:close 1, :silent false, :instruction genome_gene_randomize})
Zero cases best program: (integer_mod exec_stackdepth exec_while (exec_do*while () genome_yankdup genome_swap) autoconstructive_integer_rand integer_lt genome_shove integer_dup exec_shove (boolean_not integer_inc integer_yankdup integer_dec integer_add) boolean_pop boolean_dup genome_yankdup boolean_dup integer_lte boolean_empty exec_stackdepth exec_y (genome_dup) genome_gene_copy boolean_and integer_yankdup boolean_rot boolean_yankdup genome_close_inc integer_flush integer_fromboolean genome_gene_randomize)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 39
Percent parens: 0.128
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 26.271
Average program size in population (points): 26.877
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.972
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 972
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 49910795
--- Timings ---
Current time: 1451159475056 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction boolean_frominteger} {:close 1, :silent false, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction integer_yank} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction genome_parent1} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent true, :instruction integer_shove} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent true, :instruction genome_unsilence} {:close 1, :silent true, :instruction genome_swap} {:close 1, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_gt} {:close 2, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent true, :instruction genome_stackdepth} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 1, :silent false, :instruction integer_min} {:close 0, :silent true, :instruction boolean_swap} {:close 0, :silent true, :instruction boolean_pop} {:close 0, :silent false, :instruction boolean_yank} {:close 1, :silent true, :instruction exec_k} {:close 0, :silent false, :instruction genome_rotate} {:close 0, :silent true, :instruction exec_eq})
Zero cases best program: (exec_do*range (genome_close_inc) boolean_frominteger boolean_stackdepth integer_yank genome_parent1 genome_parent1 exec_noop genome_yankdup boolean_or integer_mod integer_inc boolean_yankdup genome_toggle_silent integer_gt boolean_not integer_rot boolean_invert_first_then_and exec_s (genome_close_inc integer_flush) (boolean_yankdup genome_new exec_flush genome_gene_copy_range integer_min) (boolean_yank genome_rotate))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 33
Percent parens: 0.152
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 995000.145
Median total errors in population: 1000000
Error averages by case: (995000.145)
Error minima by case: (29)
Average genome size in population (length): 25.384
Average program size in population (points): 26.2
Average percent parens in population: 0.237
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 978
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 50437688
--- Timings ---
Current time: 1451159477528 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction integer_yank} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction genome_parent1} {:close 2, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_not} {:close 2, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction integer_fromboolean})
Zero cases best program: (integer_yank genome_parent1 genome_gene_randomize boolean_not integer_div boolean_and integer_fromboolean)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 8
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 997000.087
Median total errors in population: 1000000
Error averages by case: (997000.087)
Error minima by case: (29)
Average genome size in population (length): 25.293
Average program size in population (points): 26.074
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 27
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 973
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 50983016
--- Timings ---
Current time: 1451159479992 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent true, :instruction exec_do*while} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction exec_yank} {:close 1, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction integer_inc} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent true, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_gene_copy} {:close 1, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction integer_lte} {:close 1, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction genome_dup} {:close 1, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction exec_flush} {:close 1, :silent false, :instruction genome_swap} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction exec_swap} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction boolean_dup} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction integer_eq} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction genome_unsilence})
Zero cases best program: (genome_gene_copy genome_pop integer_mult exec_yank boolean_dup exec_k (genome_gene_randomize integer_inc genome_gene_copy integer_pop) (integer_min genome_yankdup boolean_shove genome_eq exec_if () (genome_swap genome_pop) integer_lte exec_when () genome_toggle_silent) exec_yankdup exec_s (genome_dup exec_stackdepth) (integer_stackdepth exec_flush genome_swap) (exec_rot (exec_noop integer_pop) (exec_pop (exec_swap (exec_dup () boolean_dup boolean_dup integer_shove) (integer_eq) autoconstructive_integer_rand genome_yank boolean_or genome_unsilence)) ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 57
Percent parens: 0.281
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 997000.087
Median total errors in population: 1000000
Error averages by case: (997000.087)
Error minima by case: (29)
Average genome size in population (length): 25.99
Average program size in population (points): 26.934
Average percent parens in population: 0.230
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 977
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 51515725
--- Timings ---
Current time: 1451159482547 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_while} {:close 2, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction integer_swap} {:close 1, :silent true, :instruction boolean_flush} {:close 1, :silent true, :instruction exec_while} {:close 1, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction genome_rot} {:close 1, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_new} {:close 1, :silent false, :instruction integer_swap} {:close 1, :silent true, :instruction boolean_not} {:close 1, :silent true, :instruction genome_yankdup} {:close 2, :silent false, :instruction integer_lt} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_yank} {:close 1, :silent false, :instruction genome_yankdup} {:close 0, :silent false, :instruction exec_do*range} {:close 1, :silent false, :instruction genome_gene_dup} {:close 1, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_stackdepth} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent true, :instruction boolean_eq} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_xor} {:close 2, :silent false, :instruction boolean_stackdepth} {:close 0, :silent true, :instruction integer_sub} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction integer_yankdup} {:close 0, :silent false, :instruction boolean_frominteger})
Zero cases best program: (exec_k (boolean_rot boolean_xor integer_div exec_while (boolean_shove)) (exec_when (integer_swap) boolean_swap) genome_rot boolean_rot genome_gene_delete autoconstructive_integer_rand genome_new integer_swap integer_lt integer_yankdup genome_eq integer_flush integer_lte genome_close_inc integer_lt genome_yank genome_yankdup exec_do*range (genome_gene_dup) exec_y () genome_gene_copy_range exec_stackdepth exec_if (genome_flush boolean_yankdup genome_gene_delete exec_noop boolean_xor boolean_stackdepth) () integer_mod exec_yankdup exec_swap (integer_yankdup boolean_frominteger) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 52
Percent parens: 0.212
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 26.169
Average program size in population (points): 26.981
Average percent parens in population: 0.233
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 984
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 52099315
--- Timings ---
Current time: 1451159485154 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction boolean_flush} {:close 0, :silent false, :instruction genome_silence} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 1, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction exec_empty} {:close 1, :silent false, :instruction boolean_pop} {:close 1, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction genome_stackdepth} {:close 0, :silent true, :instruction boolean_stackdepth} {:close 0, :silent false, :instruction boolean_and} {:close 1, :silent true, :instruction integer_rot} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction exec_do*count} {:close 1, :silent false, :instruction boolean_invert_first_then_and} {:close 1, :silent false, :instruction genome_parent1} {:close 1, :silent true, :instruction exec_do*while} {:close 1, :silent true, :instruction exec_yankdup} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction boolean_xor} {:close 0, :silent true, :instruction integer_yank} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 2, :silent false, :instruction genome_gene_delete} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction genome_shove} {:close 0, :silent false, :instruction genome_unsilence} {:close 0, :silent true, :instruction genome_stackdepth} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent true, :instruction genome_yankdup})
Zero cases best program: (genome_silence genome_gene_copy_range genome_toggle_silent genome_stackdepth boolean_xor genome_toggle_silent integer_stackdepth exec_empty boolean_pop integer_mult boolean_or boolean_invert_second_then_and genome_stackdepth boolean_and integer_min genome_new integer_rot boolean_not exec_do*count (boolean_invert_first_then_and) genome_parent1 integer_lte integer_pop boolean_xor boolean_rot autoconstructive_integer_rand boolean_invert_first_then_and boolean_xor integer_dup integer_rot genome_shove integer_lt exec_empty genome_gene_delete integer_sub genome_unsilence boolean_rot boolean_shove)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 40
Percent parens: 0.050
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 997000.087
Median total errors in population: 1000000
Error averages by case: (997000.087)
Error minima by case: (29)
Average genome size in population (length): 26.646
Average program size in population (points): 27.447
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 982
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 52655682
--- Timings ---
Current time: 1451159487652 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_yank} {:close 1, :silent false, :instruction integer_sub} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent true, :instruction boolean_xor} {:close 1, :silent false, :instruction exec_swap} {:close 1, :silent false, :instruction genome_rot} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction integer_yank} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_flush} {:close 0, :silent true, :instruction exec_s} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction boolean_yank} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent true, :instruction integer_shove} {:close 1, :silent false, :instruction genome_empty})
Zero cases best program: (genome_stackdepth integer_dup integer_rot exec_yank integer_sub exec_y (exec_swap () (genome_rot) genome_gene_copy_range) exec_if (integer_yank) (boolean_pop exec_while (integer_flush autoconstructive_integer_rand boolean_swap genome_gene_copy genome_yank boolean_yank integer_rot genome_empty)))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 28
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 996000.116
Median total errors in population: 1000000
Error averages by case: (996000.116)
Error minima by case: (29)
Average genome size in population (length): 25.972
Average program size in population (points): 26.584
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 987
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 53218049
--- Timings ---
Current time: 1451159490243 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction exec_pop} {:close 1, :silent true, :instruction boolean_yank} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction integer_dec} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_pop} {:close 1, :silent false, :instruction exec_do*count} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction exec_swap} {:close 1, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction genome_new} {:close 0, :silent true, :instruction exec_rot} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction integer_add} {:close 0, :silent true, :instruction exec_while} {:close 1, :silent false, :instruction exec_swap})
Zero cases best program: (genome_eq exec_pop (integer_fromboolean integer_dec autoconstructive_integer_rand integer_pop exec_do*count () integer_gte) exec_if (boolean_not boolean_dup) (exec_do*count (genome_shove exec_swap (exec_flush) (boolean_not integer_gt exec_y (genome_flush exec_when (exec_swap () ()))))))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 33
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 26.041
Average program size in population (points): 26.731
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 968
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 53765324
--- Timings ---
Current time: 1451159492727 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction boolean_or} {:close 1, :silent false, :instruction genome_empty} {:close 1, :silent false, :instruction boolean_yank} {:close 0, :silent true, :instruction integer_rot} {:close 0, :silent true, :instruction integer_add} {:close 0, :silent false, :instruction integer_mod} {:close 0, :silent false, :instruction integer_min} {:close 0, :silent false, :instruction exec_yank})
Zero cases best program: (boolean_or genome_empty boolean_yank integer_mod integer_min exec_yank)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 7
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 24.606
Average program size in population (points): 25.325
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.971
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.965
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 974
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 54330077
--- Timings ---
Current time: 1451159495279 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 1, :silent true, :instruction genome_new} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 1, :silent false, :instruction integer_inc} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_dup} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent true, :instruction genome_gene_copy} {:close 1, :silent true, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent false, :instruction integer_mult} {:close 1, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_gt} {:close 2, :silent false, :instruction exec_s} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent true, :instruction genome_yankdup} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction genome_close_dec} {:close 0, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction exec_yank} {:close 1, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent true, :instruction exec_while} {:close 1, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_empty})
Zero cases best program: (exec_yankdup boolean_invert_first_then_and integer_stackdepth exec_s (boolean_not exec_noop) (integer_lt genome_gene_delete autoconstructive_integer_rand integer_inc) (exec_noop) boolean_dup autoconstructive_integer_rand integer_shove genome_gene_copy_range integer_div exec_eq genome_rot exec_pop (integer_mult boolean_invert_first_then_and) integer_rot integer_shove exec_when (integer_gt exec_s () () (exec_do*while (integer_lt genome_close_dec genome_gene_dup exec_shove (exec_yank exec_dup () boolean_rot exec_if (exec_eq integer_gte) (exec_do*count (integer_empty)))))))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 54
Percent parens: 0.278
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 995000.145
Median total errors in population: 1000000
Error averages by case: (995000.145)
Error minima by case: (29)
Average genome size in population (length): 25.499
Average program size in population (points): 26.254
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 979
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 54852566
--- Timings ---
Current time: 1451159497800 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_if} {:close 0, :silent false, :instruction integer_div} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction integer_mult} {:close 0, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_flush} {:close 0, :silent false, :instruction genome_unsilence})
Zero cases best program: (exec_if (integer_div genome_eq integer_mult boolean_not genome_parent2 boolean_frominteger genome_parent2 exec_do*while (exec_do*times (exec_flush genome_unsilence))) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 17
Percent parens: 0.294
--- Lexicase Population Statistics ---
Count of elite individuals by case: (7)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 992000.25
Median total errors in population: 1000000
Error averages by case: (992000.25)
Error minima by case: (29)
Average genome size in population (length): 25.671
Average program size in population (points): 26.343
Average percent parens in population: 0.234
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 983
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 55404829
--- Timings ---
Current time: 1451159500545 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction genome_silence} {:close 1, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_s} {:close 0, :silent true, :instruction integer_inc} {:close 1, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction boolean_stackdepth} {:close 1, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction exec_k} {:close 0, :silent false, :instruction integer_sub} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent true, :instruction integer_lte} {:close 0, :silent false, :instruction integer_shove} {:close 1, :silent false, :instruction genome_gene_randomize} {:close 0, :silent true, :instruction boolean_and} {:close 0, :silent true, :instruction genome_yankdup} {:close 0, :silent true, :instruction boolean_yank} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction boolean_flush} {:close 1, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent true, :instruction exec_if} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction boolean_swap} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction integer_inc})
Zero cases best program: (genome_silence exec_pop () exec_s (boolean_stackdepth integer_rot) (exec_eq exec_k (integer_sub integer_shove genome_gene_randomize) (integer_gte genome_gene_copy boolean_flush exec_noop) genome_gene_copy_range boolean_rot integer_stackdepth boolean_swap boolean_shove boolean_frominteger genome_close_inc genome_dup integer_inc) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 30
Percent parens: 0.233
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 996000.116
Median total errors in population: 1000000
Error averages by case: (996000.116)
Error minima by case: (29)
Average genome size in population (length): 25.556
Average program size in population (points): 26.362
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.981
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 981
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 55930365
--- Timings ---
Current time: 1451159503126 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction exec_yank} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 1, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction genome_parent2} {:close 0, :silent true, :instruction boolean_xor} {:close 1, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction genome_parent2} {:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction boolean_frominteger} {:close 1, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction genome_parent2} {:close 1, :silent false, :instruction exec_eq} {:close 0, :silent false, :instruction genome_parent1} {:close 0, :silent true, :instruction integer_dup} {:close 1, :silent false, :instruction genome_eq} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_do*while} {:close 0, :silent false, :instruction boolean_empty})
Zero cases best program: (exec_yank boolean_invert_first_then_and boolean_not genome_parent2 boolean_invert_second_then_and exec_do*range (exec_noop integer_lte genome_parent2 boolean_and) integer_gte boolean_frominteger genome_eq boolean_and boolean_eq genome_parent2 exec_eq genome_parent1 genome_eq genome_swap autoconstructive_integer_rand integer_lt exec_do*while (boolean_empty))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 27
Percent parens: 0.111
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 996000.116
Median total errors in population: 1000000
Error averages by case: (996000.116)
Error minima by case: (29)
Average genome size in population (length): 25.687
Average program size in population (points): 26.574
Average percent parens in population: 0.235
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 30
Genome diversity (% unique Plush genomes):	 0.969
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 30
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 970
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 56437047
--- Timings ---
Current time: 1451159505702 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent true, :instruction boolean_xor} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction exec_yank} {:close 1, :silent true, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction genome_eq} {:close 0, :silent true, :instruction integer_div})
Zero cases best program: (genome_gene_copy_range integer_pop autoconstructive_integer_rand exec_yank genome_eq)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 6
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 993000.214
Median total errors in population: 1000000
Error averages by case: (993000.214)
Error minima by case: (29)
Average genome size in population (length): 25.151
Average program size in population (points): 25.983
Average percent parens in population: 0.232
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.967
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 974
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 56971996
--- Timings ---
Current time: 1451159508209 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :silent false, :instruction integer_gt} {:close 0, :silent false, :instruction genome_close_inc} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction exec_do*range} {:close 0, :silent true, :instruction exec_do*times} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_toggle_silent} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 1, :silent true, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent false, :instruction integer_swap} {:close 0, :silent true, :instruction exec_do*range} {:close 1, :silent false, :instruction integer_gte} {:close 1, :silent false, :instruction boolean_and} {:close 0, :silent false, :instruction genome_pop} {:close 2, :silent false, :instruction integer_rot} {:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction genome_stackdepth} {:close 1, :silent false, :instruction boolean_not} {:close 0, :silent false, :instruction boolean_and} {:close 1, :silent true, :instruction exec_dup} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction integer_shove} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction genome_swap} {:close 1, :silent false, :instruction integer_pop} {:close 0, :silent false, :instruction exec_when} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent true, :instruction genome_flush} {:close 0, :silent true, :instruction integer_dup})
Zero cases best program: (integer_gt genome_close_inc exec_when (exec_rot () (exec_rot (exec_empty integer_dup genome_toggle_silent genome_gene_randomize boolean_invert_second_then_and genome_empty exec_empty integer_swap integer_gte) (boolean_and) (genome_pop integer_rot)) (exec_do*range (genome_stackdepth boolean_not) boolean_and boolean_rot integer_shove boolean_flush genome_swap integer_pop) exec_when (genome_stackdepth) exec_when ()))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 40
Percent parens: 0.275
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 25.55
Average program size in population (points): 26.23
Average percent parens in population: 0.226
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 980
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 57496152
--- Timings ---
Current time: 1451159510675 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*times} {:close 1, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction genome_dup} {:close 0, :silent true, :instruction integer_mod} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 1, :silent false, :instruction genome_unsilence} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_pop})
Zero cases best program: (exec_do*times (integer_dec) exec_do*times (boolean_invert_first_then_and genome_unsilence) boolean_pop boolean_empty genome_pop)
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 11
Percent parens: 0.273
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.188
Median total errors in population: 1000000
Error averages by case: (994000.188)
Error minima by case: (29)
Average genome size in population (length): 24.555
Average program size in population (points): 25.331
Average percent parens in population: 0.238
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.969
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Number of random replacements for recursively invariant individuals: 977
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 57996662
--- Timings ---
Current time: 1451159513066 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction exec_if} {:close 1, :silent false, :instruction boolean_flush} {:close 1, :silent true, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction integer_eq} {:close 0, :silent true, :instruction exec_eq} {:close 0, :silent false, :instruction integer_rot} {:close 0, :silent true, :instruction integer_swap} {:close 0, :silent false, :instruction genome_eq} {:close 1, :silent false, :instruction genome_parent2} {:close 0, :silent false, :instruction boolean_frominteger} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent false, :instruction exec_swap} {:close 0, :silent false, :instruction exec_rot} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction exec_when} {:close 2, :silent false, :instruction genome_shove} {:close 0, :silent false, :instruction genome_yank} {:close 0, :silent false, :instruction genome_pop} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent false, :instruction genome_dup} {:close 0, :silent false, :instruction exec_noop} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction exec_pop} {:close 0, :silent true, :instruction integer_inc} {:close 0, :silent true, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_empty} {:close 0, :silent false, :instruction exec_do*times} {:close 0, :silent false, :instruction exec_y} {:close 0, :silent false, :instruction genome_gene_copy} {:close 2, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_gene_copy_range} {:close 1, :silent false, :instruction integer_yank} {:close 1, :silent false, :instruction exec_k} {:close 0, :silent true, :instruction genome_pop} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction genome_gene_copy} {:close 0, :silent false, :instruction integer_lte} {:close 0, :silent false, :instruction exec_yank} {:close 0, :silent true, :instruction integer_fromboolean} {:close 0, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction boolean_yankdup} {:close 0, :silent false, :instruction genome_close_dec} {:close 1, :silent false, :instruction genome_parent1} {:close 0, :silent false, :instruction exec_y} {:close 1, :silent true, :instruction integer_flush})
Zero cases best program: (exec_yankdup exec_if (boolean_flush) (integer_eq integer_rot genome_eq genome_parent2) boolean_frominteger integer_empty genome_flush exec_swap (exec_rot (boolean_rot exec_when (genome_shove)) (genome_yank genome_pop autoconstructive_integer_rand genome_dup exec_noop boolean_flush exec_pop (integer_empty exec_do*times (exec_y (genome_gene_copy integer_dup)) genome_gene_copy_range integer_yank) exec_k () (integer_dup genome_gene_copy integer_lte exec_yank exec_yankdup exec_while (boolean_yankdup genome_close_dec genome_parent1) exec_y ())) ()) ())
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 56
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6)
Population mean number of elite cases: 0.01
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 994000.174
Median total errors in population: 1000000
Error averages by case: (994000.174)
Error minima by case: (29)
Average genome size in population (length): 25.833
Average program size in population (points): 26.428
Average percent parens in population: 0.224
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 974
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 58533010
--- Timings ---
Current time: 1451159515550 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
--- Lexicse Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Lexicase best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Lexicase best errors: [29]
Lexicase best number of elite cases: 1
Lexicase best total error: 29
Lexicase best mean error: 29.0
Lexicase best size: 30
Percent parens: 0.233
--- Lexicse Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :silent false, :instruction exec_do*range} {:close 0, :silent false, :instruction integer_sub} {:close 1, :silent false, :instruction boolean_not} {:close 1, :silent false, :instruction genome_close_inc} {:close 0, :silent true, :instruction integer_fromboolean} {:close 1, :silent false, :instruction genome_rot} {:close 0, :silent false, :instruction exec_do*count} {:close 2, :silent false, :instruction boolean_yank} {:close 0, :silent true, :instruction exec_stackdepth} {:close 0, :silent false, :instruction boolean_eq} {:close 0, :silent false, :instruction boolean_flush} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction integer_dup} {:close 0, :silent false, :instruction boolean_invert_first_then_and} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction integer_div} {:close 2, :silent false, :instruction genome_gene_dup} {:close 0, :silent false, :instruction exec_when} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction genome_close_inc} {:close 1, :silent false, :instruction boolean_or} {:close 0, :silent false, :instruction boolean_rot} {:close 0, :silent false, :instruction boolean_empty} {:close 0, :silent false, :instruction genome_gene_dup} {:close 1, :silent true, :instruction genome_empty} {:close 0, :silent false, :instruction integer_gte} {:close 0, :silent false, :instruction genome_empty} {:close 0, :silent false, :instruction integer_min} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction boolean_shove} {:close 0, :silent false, :instruction integer_fromboolean} {:close 0, :silent false, :instruction genome_flush} {:close 0, :silent true, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_new} {:close 0, :silent false, :instruction boolean_invert_second_then_and} {:close 0, :silent false, :instruction integer_gt} {:close 0, :silent true, :instruction boolean_eq} {:close 0, :silent false, :instruction integer_stackdepth} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction exec_eq} {:close 1, :silent true, :instruction exec_eq} {:close 1, :silent false, :instruction boolean_eq} {:close 0, :silent true, :instruction boolean_dup})
Zero cases best program: (exec_do*range (integer_sub boolean_not) genome_close_inc genome_rot exec_do*count (boolean_yank) boolean_eq boolean_flush integer_stackdepth integer_dup boolean_invert_first_then_and exec_when (integer_div genome_gene_dup) exec_when (exec_shove (genome_close_inc boolean_or) boolean_rot boolean_empty genome_gene_dup integer_gte genome_empty integer_min genome_gene_delete) boolean_shove integer_fromboolean genome_flush genome_new boolean_invert_second_then_and integer_gt integer_stackdepth exec_while (exec_eq boolean_eq))
Zero cases best errors: [1000000]
Zero cases best number of elite cases: 0
Zero cases best number of zero cases: 0
Zero cases best total error: 1000000
Zero cases best mean error: 1000000.0
Zero cases best size: 43
Percent parens: 0.163
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4)
Population mean number of elite cases: 0.00
Count of perfect (error zero) individuals by case: (0)
Population mean number of perfect (error zero) cases: 0.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :silent false, :instruction integer_dec} {:close 0, :silent true, :instruction boolean_or} {:close 0, :silent false, :instruction exec_noop} {:close 1, :silent false, :instruction genome_stackdepth} {:close 0, :silent false, :instruction integer_empty} {:close 1, :silent false, :instruction exec_dup} {:close 1, :silent false, :instruction exec_pop} {:close 1, :silent false, :instruction integer_fromboolean} {:close 0, :silent true, :instruction integer_flush} {:close 1, :silent false, :instruction genome_gene_copy_range} {:close 0, :silent false, :instruction exec_dup} {:close 0, :silent false, :instruction exec_while} {:close 0, :silent false, :instruction integer_pop} {:close 0, :silent true, :instruction boolean_shove} {:close 0, :silent false, :instruction autoconstructive_integer_rand} {:close 0, :silent true, :instruction genome_gene_delete} {:close 1, :silent false, :instruction exec_yankdup} {:close 0, :silent false, :instruction genome_gene_randomize} {:close 0, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_stackdepth} {:close 1, :silent false, :instruction genome_gene_delete} {:close 0, :silent false, :instruction exec_do*count} {:close 0, :silent false, :instruction integer_lt} {:close 0, :silent false, :instruction exec_empty} {:close 0, :silent true, :instruction genome_rotate} {:close 0, :silent false, :instruction boolean_pop} {:close 0, :silent false, :instruction exec_shove} {:close 0, :silent false, :instruction integer_lte})
Best program: (integer_dec exec_noop genome_stackdepth integer_empty exec_dup () exec_pop () integer_fromboolean genome_gene_copy_range exec_dup (exec_while (integer_pop autoconstructive_integer_rand exec_yankdup) genome_gene_randomize genome_gene_delete exec_stackdepth genome_gene_delete) exec_do*count (integer_lt exec_empty boolean_pop exec_shove (integer_lte)))
Errors: [29]
Total: 29
Mean: 29.0
Genome size: 28
Size: 30
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 996000.116
Median total errors in population: 1000000
Error averages by case: (996000.116)
Error minima by case: (29)
Average genome size in population (length): 25.127
Average program size in population (points): 25.856
Average percent parens in population: 0.231
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.962
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Number of random replacements for recursively invariant individuals: 975
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 59098341
--- Timings ---
Current time: 1451159518087 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
