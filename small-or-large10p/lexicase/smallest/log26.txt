Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-87 -50 -50 -50] -87] [[-19 -19 -19 18] -19] [[65 65 93 65] 65] [[-89 -89 -89 -41] -89] [[17 17 18 17] 17] [[-35 -35 -35 -66] -66] [[-26 -26 4 -26] -26] [[15 -98 15 15] -98] [[-25 -25 -25 -79] -79] [[73 12 73 73] 12] [(-78 -78 -78 -78) -78] [(-37 -37 -37 -37) -37] [(-22 -22 -22 -22) -22] [(-97 -97 -97 -97) -97] [(67 67 67 67) 67] [(96 0 82 10) 0] [(86 32 64 62) 32] [(12 96 77 24) 12] [(47 26 18 39) 18] [(1 35 12 88) 1] [(2 20 46 19) 2] [(95 27 97 0) 0] [(23 72 48 58) 23] [(77 32 16 4) 4] [(30 13 16 44) 13] [(1 73 47 96) 1] [(27 64 62 49) 27] [(35 56 57 31) 31] [(7 62 88 70) 7] [(72 31 69 79) 31] [(34 83 81 12) 12] [(69 5 22 87) 5] [(26 37 45 70) 26] [(81 67 0 16) 0] [(90 13 11 39) 11] [(-21 -25 -36 -22) -36] [(-54 -41 91 -27) -54] [(-34 -2 31 -96) -96] [(91 52 53 88) 52] [(80 70 -40 21) -40] [(-77 -30 -10 -100) -100] [(85 -86 -57 38) -86] [(58 -46 44 -33) -46] [(-53 45 -16 -63) -63] [(-70 6 52 -2) -70] [(-73 42 -27 -16) -73] [(-92 20 57 -31) -92] [(22 18 56 90) 18] [(-19 15 49 -100) -100] [(33 66 -94 18) -94] [(-55 -25 55 63) -55] [(55 31 8 -94) -94] [(-12 -79 68 50) -79] [(-89 23 -66 -66) -89] [(-100 -45 89 -13) -100] [(-32 46 91 -9) -32] [(17 63 45 49) 17] [(35 -80 83 46) -80] [(-61 46 -23 77) -61] [(-39 64 -7 56) -39] [(-63 -96 3 -51) -96] [(-16 -60 -56 94) -60] [(99 84 38 21) 21] [(51 79 34 -69) -69] [(-31 -35 15 80) -35] [(-87 3 63 44) -87] [(23 44 66 24) 23] [(92 21 -67 61) -67] [(-19 34 -7 40) -19] [(-17 78 92 90) -17] [(-40 -36 -68 -57) -68] [(-62 23 -12 18) -62] [(-14 -60 -56 91) -60] [(-77 -94 4 97) -94] [(15 -1 -52 -46) -52] [(-71 -31 96 -99) -99] [(9 82 46 93) 9] [(-37 52 -42 -66) -66] [(-7 7 -34 30) -34] [(-78 -78 70 -64) -78] [(-13 -52 90 94) -52] [(-69 93 66 -19) -69] [(50 -98 30 19) -98] [(88 -66 -29 -14) -66] [(11 65 -87 56) -87] [(-99 69 40 41) -99] [(-80 33 -37 37) -80] [(14 -87 17 23) -87] [(49 26 -86 -20) -86] [(-57 86 -96 -4) -96] [(53 -80 100 -86) -86] [(55 95 -79 80) -79] [(18 62 90 4) 4] [(-34 -27 100 64) -34] [(6 52 2 -85) -85])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-87 -50 -50 -50] -87]
Train Case:   6 | Input/Output: [[-19 -19 -19 18] -19]
Train Case:   7 | Input/Output: [[65 65 93 65] 65]
Train Case:   8 | Input/Output: [[-89 -89 -89 -41] -89]
Train Case:   9 | Input/Output: [[17 17 18 17] 17]
Train Case:  10 | Input/Output: [[-35 -35 -35 -66] -66]
Train Case:  11 | Input/Output: [[-26 -26 4 -26] -26]
Train Case:  12 | Input/Output: [[15 -98 15 15] -98]
Train Case:  13 | Input/Output: [[-25 -25 -25 -79] -79]
Train Case:  14 | Input/Output: [[73 12 73 73] 12]
Train Case:  15 | Input/Output: [(-78 -78 -78 -78) -78]
Train Case:  16 | Input/Output: [(-37 -37 -37 -37) -37]
Train Case:  17 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:  18 | Input/Output: [(-97 -97 -97 -97) -97]
Train Case:  19 | Input/Output: [(67 67 67 67) 67]
Train Case:  20 | Input/Output: [(96 0 82 10) 0]
Train Case:  21 | Input/Output: [(86 32 64 62) 32]
Train Case:  22 | Input/Output: [(12 96 77 24) 12]
Train Case:  23 | Input/Output: [(47 26 18 39) 18]
Train Case:  24 | Input/Output: [(1 35 12 88) 1]
Train Case:  25 | Input/Output: [(2 20 46 19) 2]
Train Case:  26 | Input/Output: [(95 27 97 0) 0]
Train Case:  27 | Input/Output: [(23 72 48 58) 23]
Train Case:  28 | Input/Output: [(77 32 16 4) 4]
Train Case:  29 | Input/Output: [(30 13 16 44) 13]
Train Case:  30 | Input/Output: [(1 73 47 96) 1]
Train Case:  31 | Input/Output: [(27 64 62 49) 27]
Train Case:  32 | Input/Output: [(35 56 57 31) 31]
Train Case:  33 | Input/Output: [(7 62 88 70) 7]
Train Case:  34 | Input/Output: [(72 31 69 79) 31]
Train Case:  35 | Input/Output: [(34 83 81 12) 12]
Train Case:  36 | Input/Output: [(69 5 22 87) 5]
Train Case:  37 | Input/Output: [(26 37 45 70) 26]
Train Case:  38 | Input/Output: [(81 67 0 16) 0]
Train Case:  39 | Input/Output: [(90 13 11 39) 11]
Train Case:  40 | Input/Output: [(-21 -25 -36 -22) -36]
Train Case:  41 | Input/Output: [(-54 -41 91 -27) -54]
Train Case:  42 | Input/Output: [(-34 -2 31 -96) -96]
Train Case:  43 | Input/Output: [(91 52 53 88) 52]
Train Case:  44 | Input/Output: [(80 70 -40 21) -40]
Train Case:  45 | Input/Output: [(-77 -30 -10 -100) -100]
Train Case:  46 | Input/Output: [(85 -86 -57 38) -86]
Train Case:  47 | Input/Output: [(58 -46 44 -33) -46]
Train Case:  48 | Input/Output: [(-53 45 -16 -63) -63]
Train Case:  49 | Input/Output: [(-70 6 52 -2) -70]
Train Case:  50 | Input/Output: [(-73 42 -27 -16) -73]
Train Case:  51 | Input/Output: [(-92 20 57 -31) -92]
Train Case:  52 | Input/Output: [(22 18 56 90) 18]
Train Case:  53 | Input/Output: [(-19 15 49 -100) -100]
Train Case:  54 | Input/Output: [(33 66 -94 18) -94]
Train Case:  55 | Input/Output: [(-55 -25 55 63) -55]
Train Case:  56 | Input/Output: [(55 31 8 -94) -94]
Train Case:  57 | Input/Output: [(-12 -79 68 50) -79]
Train Case:  58 | Input/Output: [(-89 23 -66 -66) -89]
Train Case:  59 | Input/Output: [(-100 -45 89 -13) -100]
Train Case:  60 | Input/Output: [(-32 46 91 -9) -32]
Train Case:  61 | Input/Output: [(17 63 45 49) 17]
Train Case:  62 | Input/Output: [(35 -80 83 46) -80]
Train Case:  63 | Input/Output: [(-61 46 -23 77) -61]
Train Case:  64 | Input/Output: [(-39 64 -7 56) -39]
Train Case:  65 | Input/Output: [(-63 -96 3 -51) -96]
Train Case:  66 | Input/Output: [(-16 -60 -56 94) -60]
Train Case:  67 | Input/Output: [(99 84 38 21) 21]
Train Case:  68 | Input/Output: [(51 79 34 -69) -69]
Train Case:  69 | Input/Output: [(-31 -35 15 80) -35]
Train Case:  70 | Input/Output: [(-87 3 63 44) -87]
Train Case:  71 | Input/Output: [(23 44 66 24) 23]
Train Case:  72 | Input/Output: [(92 21 -67 61) -67]
Train Case:  73 | Input/Output: [(-19 34 -7 40) -19]
Train Case:  74 | Input/Output: [(-17 78 92 90) -17]
Train Case:  75 | Input/Output: [(-40 -36 -68 -57) -68]
Train Case:  76 | Input/Output: [(-62 23 -12 18) -62]
Train Case:  77 | Input/Output: [(-14 -60 -56 91) -60]
Train Case:  78 | Input/Output: [(-77 -94 4 97) -94]
Train Case:  79 | Input/Output: [(15 -1 -52 -46) -52]
Train Case:  80 | Input/Output: [(-71 -31 96 -99) -99]
Train Case:  81 | Input/Output: [(9 82 46 93) 9]
Train Case:  82 | Input/Output: [(-37 52 -42 -66) -66]
Train Case:  83 | Input/Output: [(-7 7 -34 30) -34]
Train Case:  84 | Input/Output: [(-78 -78 70 -64) -78]
Train Case:  85 | Input/Output: [(-13 -52 90 94) -52]
Train Case:  86 | Input/Output: [(-69 93 66 -19) -69]
Train Case:  87 | Input/Output: [(50 -98 30 19) -98]
Train Case:  88 | Input/Output: [(88 -66 -29 -14) -66]
Train Case:  89 | Input/Output: [(11 65 -87 56) -87]
Train Case:  90 | Input/Output: [(-99 69 40 41) -99]
Train Case:  91 | Input/Output: [(-80 33 -37 37) -80]
Train Case:  92 | Input/Output: [(14 -87 17 23) -87]
Train Case:  93 | Input/Output: [(49 26 -86 -20) -86]
Train Case:  94 | Input/Output: [(-57 86 -96 -4) -96]
Train Case:  95 | Input/Output: [(53 -80 100 -86) -86]
Train Case:  96 | Input/Output: [(55 95 -79 80) -79]
Train Case:  97 | Input/Output: [(18 62 90 4) 4]
Train Case:  98 | Input/Output: [(-34 -27 100 64) -34]
Train Case:  99 | Input/Output: [(6 52 2 -85) -85]
Test Case:   0 | Input/Output: [[11 -19 -19 -19] -19]
Test Case:   1 | Input/Output: [[43 43 43 -59] -59]
Test Case:   2 | Input/Output: [[80 80 80 -5] -5]
Test Case:   3 | Input/Output: [[-36 -36 -36 46] -36]
Test Case:   4 | Input/Output: [[-48 -48 -48 -31] -48]
Test Case:   5 | Input/Output: [[-79 -79 -31 -79] -79]
Test Case:   6 | Input/Output: [[66 -78 66 66] -78]
Test Case:   7 | Input/Output: [[4 4 4 -81] -81]
Test Case:   8 | Input/Output: [[68 77 77 77] 68]
Test Case:   9 | Input/Output: [[39 -42 39 39] -42]
Test Case:  10 | Input/Output: [[-19 -19 -19 -37] -37]
Test Case:  11 | Input/Output: [[-56 -56 -56 81] -56]
Test Case:  12 | Input/Output: [[13 13 13 29] 13]
Test Case:  13 | Input/Output: [[89 89 -11 89] -11]
Test Case:  14 | Input/Output: [[-33 32 -33 -33] -33]
Test Case:  15 | Input/Output: [[91 91 -35 91] -35]
Test Case:  16 | Input/Output: [[60 60 60 -76] -76]
Test Case:  17 | Input/Output: [[-53 -53 -85 -53] -85]
Test Case:  18 | Input/Output: [[88 50 88 88] 50]
Test Case:  19 | Input/Output: [[-50 -19 -19 -19] -50]
Test Case:  20 | Input/Output: [[-51 -51 -51 -100] -100]
Test Case:  21 | Input/Output: [[26 -50 26 26] -50]
Test Case:  22 | Input/Output: [[8 -28 -28 -28] -28]
Test Case:  23 | Input/Output: [[63 63 53 63] 53]
Test Case:  24 | Input/Output: [[14 14 -16 14] -16]
Test Case:  25 | Input/Output: [[-92 -13 -92 -92] -92]
Test Case:  26 | Input/Output: [[15 -72 15 15] -72]
Test Case:  27 | Input/Output: [[55 55 85 55] 55]
Test Case:  28 | Input/Output: [[98 -1 98 98] -1]
Test Case:  29 | Input/Output: [[-61 96 96 96] -61]
Test Case:  30 | Input/Output: [[-76 12 -76 -76] -76]
Test Case:  31 | Input/Output: [[50 50 80 50] 50]
Test Case:  32 | Input/Output: [[96 96 28 96] 28]
Test Case:  33 | Input/Output: [[-10 -10 -10 76] -10]
Test Case:  34 | Input/Output: [[19 74 19 19] 19]
Test Case:  35 | Input/Output: [[-58 -58 76 -58] -58]
Test Case:  36 | Input/Output: [[-68 68 68 68] -68]
Test Case:  37 | Input/Output: [[3 54 3 3] 3]
Test Case:  38 | Input/Output: [[64 64 -86 64] -86]
Test Case:  39 | Input/Output: [[4 4 4 -50] -50]
Test Case:  40 | Input/Output: [[64 -56 64 64] -56]
Test Case:  41 | Input/Output: [[-55 -55 -55 57] -55]
Test Case:  42 | Input/Output: [[97 97 97 21] 21]
Test Case:  43 | Input/Output: [[-49 -49 -47 -49] -49]
Test Case:  44 | Input/Output: [[87 87 65 87] 65]
Test Case:  45 | Input/Output: [[-18 -20 -18 -18] -20]
Test Case:  46 | Input/Output: [[62 -60 62 62] -60]
Test Case:  47 | Input/Output: [[74 74 74 73] 73]
Test Case:  48 | Input/Output: [[63 63 63 -19] -19]
Test Case:  49 | Input/Output: [[-2 -2 -2 78] -2]
Test Case:  50 | Input/Output: [[15 46 46 46] 15]
Test Case:  51 | Input/Output: [[96 96 96 -74] -74]
Test Case:  52 | Input/Output: [[96 96 96 -74] -74]
Test Case:  53 | Input/Output: [[-78 -49 -49 -49] -78]
Test Case:  54 | Input/Output: [[2 30 30 30] 2]
Test Case:  55 | Input/Output: [[-38 -58 -58 -58] -58]
Test Case:  56 | Input/Output: [[-40 -40 0 -40] -40]
Test Case:  57 | Input/Output: [[-87 69 -87 -87] -87]
Test Case:  58 | Input/Output: [[-39 -39 -39 33] -39]
Test Case:  59 | Input/Output: [[-44 64 -44 -44] -44]
Test Case:  60 | Input/Output: [[-26 -33 -33 -33] -33]
Test Case:  61 | Input/Output: [[58 58 58 -65] -65]
Test Case:  62 | Input/Output: [[12 25 25 25] 12]
Test Case:  63 | Input/Output: [[-74 -74 -74 75] -74]
Test Case:  64 | Input/Output: [[38 3 3 3] 3]
Test Case:  65 | Input/Output: [[4 -8 4 4] -8]
Test Case:  66 | Input/Output: [[-65 -65 -65 19] -65]
Test Case:  67 | Input/Output: [[69 69 69 -10] -10]
Test Case:  68 | Input/Output: [[-10 -10 68 -10] -10]
Test Case:  69 | Input/Output: [[-27 -58 -27 -27] -58]
Test Case:  70 | Input/Output: [[-82 -82 -82 -97] -97]
Test Case:  71 | Input/Output: [[-95 -95 -59 -95] -95]
Test Case:  72 | Input/Output: [[-47 -5 -47 -47] -47]
Test Case:  73 | Input/Output: [[-88 58 -88 -88] -88]
Test Case:  74 | Input/Output: [[80 -84 80 80] -84]
Test Case:  75 | Input/Output: [[-77 -77 56 -77] -77]
Test Case:  76 | Input/Output: [[-29 42 -29 -29] -29]
Test Case:  77 | Input/Output: [[22 24 24 24] 22]
Test Case:  78 | Input/Output: [[49 79 49 49] 49]
Test Case:  79 | Input/Output: [[84 49 84 84] 49]
Test Case:  80 | Input/Output: [[39 39 39 49] 39]
Test Case:  81 | Input/Output: [[17 -88 -88 -88] -88]
Test Case:  82 | Input/Output: [[-71 -48 -71 -71] -71]
Test Case:  83 | Input/Output: [[-55 -55 -52 -55] -55]
Test Case:  84 | Input/Output: [[32 32 59 32] 32]
Test Case:  85 | Input/Output: [[62 62 62 -62] -62]
Test Case:  86 | Input/Output: [[-4 -4 -87 -4] -87]
Test Case:  87 | Input/Output: [[-80 -19 -19 -19] -80]
Test Case:  88 | Input/Output: [[-5 -5 -98 -5] -98]
Test Case:  89 | Input/Output: [[51 22 22 22] 22]
Test Case:  90 | Input/Output: [[-99 -40 -40 -40] -99]
Test Case:  91 | Input/Output: [[55 -43 55 55] -43]
Test Case:  92 | Input/Output: [[79 79 -85 79] -85]
Test Case:  93 | Input/Output: [[-6 97 97 97] -6]
Test Case:  94 | Input/Output: [[-25 76 76 76] -25]
Test Case:  95 | Input/Output: [[-80 0 0 0] -80]
Test Case:  96 | Input/Output: [[-88 -88 1 -88] -88]
Test Case:  97 | Input/Output: [[64 -57 64 64] -57]
Test Case:  98 | Input/Output: [[-60 18 18 18] -60]
Test Case:  99 | Input/Output: [[-50 -100 -50 -50] -100]
Test Case: 100 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 101 | Input/Output: [(27 27 27 27) 27]
Test Case: 102 | Input/Output: [(23 23 23 23) 23]
Test Case: 103 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 104 | Input/Output: [(47 47 47 47) 47]
Test Case: 105 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 106 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 107 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 108 | Input/Output: [(86 86 86 86) 86]
Test Case: 109 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 110 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 111 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 112 | Input/Output: [(49 49 49 49) 49]
Test Case: 113 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 114 | Input/Output: [(18 18 18 18) 18]
Test Case: 115 | Input/Output: [(11 11 11 11) 11]
Test Case: 116 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 117 | Input/Output: [(47 47 47 47) 47]
Test Case: 118 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 119 | Input/Output: [(26 26 26 26) 26]
Test Case: 120 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 121 | Input/Output: [(92 92 92 92) 92]
Test Case: 122 | Input/Output: [(89 89 89 89) 89]
Test Case: 123 | Input/Output: [(27 27 27 27) 27]
Test Case: 124 | Input/Output: [(95 95 95 95) 95]
Test Case: 125 | Input/Output: [(53 53 53 53) 53]
Test Case: 126 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 127 | Input/Output: [(26 26 26 26) 26]
Test Case: 128 | Input/Output: [(16 16 16 16) 16]
Test Case: 129 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 130 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 131 | Input/Output: [(84 84 84 84) 84]
Test Case: 132 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 133 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 134 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 135 | Input/Output: [(26 26 26 26) 26]
Test Case: 136 | Input/Output: [(85 85 85 85) 85]
Test Case: 137 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 138 | Input/Output: [(55 55 55 55) 55]
Test Case: 139 | Input/Output: [(43 43 43 43) 43]
Test Case: 140 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 141 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 142 | Input/Output: [(42 42 42 42) 42]
Test Case: 143 | Input/Output: [(29 29 29 29) 29]
Test Case: 144 | Input/Output: [(1 1 1 1) 1]
Test Case: 145 | Input/Output: [(90 90 90 90) 90]
Test Case: 146 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 147 | Input/Output: [(99 99 99 99) 99]
Test Case: 148 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 149 | Input/Output: [(83 83 83 83) 83]
Test Case: 150 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 151 | Input/Output: [(14 14 14 14) 14]
Test Case: 152 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 153 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 154 | Input/Output: [(14 14 14 14) 14]
Test Case: 155 | Input/Output: [(63 63 63 63) 63]
Test Case: 156 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 157 | Input/Output: [(57 57 57 57) 57]
Test Case: 158 | Input/Output: [(42 42 42 42) 42]
Test Case: 159 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 160 | Input/Output: [(88 88 88 88) 88]
Test Case: 161 | Input/Output: [(49 49 49 49) 49]
Test Case: 162 | Input/Output: [(23 23 23 23) 23]
Test Case: 163 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 164 | Input/Output: [(39 39 39 39) 39]
Test Case: 165 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 166 | Input/Output: [(31 31 31 31) 31]
Test Case: 167 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 168 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 169 | Input/Output: [(17 17 17 17) 17]
Test Case: 170 | Input/Output: [(28 28 28 28) 28]
Test Case: 171 | Input/Output: [(76 76 76 76) 76]
Test Case: 172 | Input/Output: [(86 86 86 86) 86]
Test Case: 173 | Input/Output: [(24 24 24 24) 24]
Test Case: 174 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 175 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 176 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 177 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 178 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 179 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 180 | Input/Output: [(70 70 70 70) 70]
Test Case: 181 | Input/Output: [(37 37 37 37) 37]
Test Case: 182 | Input/Output: [(27 27 27 27) 27]
Test Case: 183 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 184 | Input/Output: [(13 13 13 13) 13]
Test Case: 185 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 186 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 187 | Input/Output: [(19 19 19 19) 19]
Test Case: 188 | Input/Output: [(38 38 38 38) 38]
Test Case: 189 | Input/Output: [(98 98 98 98) 98]
Test Case: 190 | Input/Output: [(90 90 90 90) 90]
Test Case: 191 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 192 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 193 | Input/Output: [(49 49 49 49) 49]
Test Case: 194 | Input/Output: [(98 98 98 98) 98]
Test Case: 195 | Input/Output: [(70 70 70 70) 70]
Test Case: 196 | Input/Output: [(85 85 85 85) 85]
Test Case: 197 | Input/Output: [(84 84 84 84) 84]
Test Case: 198 | Input/Output: [(21 21 21 21) 21]
Test Case: 199 | Input/Output: [(68 68 68 68) 68]
Test Case: 200 | Input/Output: [(80 76 66 71) 66]
Test Case: 201 | Input/Output: [(93 31 88 22) 22]
Test Case: 202 | Input/Output: [(5 89 49 61) 5]
Test Case: 203 | Input/Output: [(62 88 44 62) 44]
Test Case: 204 | Input/Output: [(48 39 93 52) 39]
Test Case: 205 | Input/Output: [(16 41 51 7) 7]
Test Case: 206 | Input/Output: [(5 39 48 20) 5]
Test Case: 207 | Input/Output: [(34 86 17 50) 17]
Test Case: 208 | Input/Output: [(6 52 23 30) 6]
Test Case: 209 | Input/Output: [(0 10 44 33) 0]
Test Case: 210 | Input/Output: [(0 80 75 33) 0]
Test Case: 211 | Input/Output: [(97 29 85 46) 29]
Test Case: 212 | Input/Output: [(60 44 95 63) 44]
Test Case: 213 | Input/Output: [(56 10 27 28) 10]
Test Case: 214 | Input/Output: [(13 30 43 64) 13]
Test Case: 215 | Input/Output: [(75 86 92 44) 44]
Test Case: 216 | Input/Output: [(84 7 41 78) 7]
Test Case: 217 | Input/Output: [(41 64 64 12) 12]
Test Case: 218 | Input/Output: [(88 52 11 40) 11]
Test Case: 219 | Input/Output: [(11 92 13 10) 10]
Test Case: 220 | Input/Output: [(21 0 36 13) 0]
Test Case: 221 | Input/Output: [(98 25 31 40) 25]
Test Case: 222 | Input/Output: [(69 15 21 97) 15]
Test Case: 223 | Input/Output: [(68 37 12 31) 12]
Test Case: 224 | Input/Output: [(30 48 70 17) 17]
Test Case: 225 | Input/Output: [(95 56 64 82) 56]
Test Case: 226 | Input/Output: [(66 12 65 77) 12]
Test Case: 227 | Input/Output: [(62 14 78 7) 7]
Test Case: 228 | Input/Output: [(23 20 94 68) 20]
Test Case: 229 | Input/Output: [(82 6 19 74) 6]
Test Case: 230 | Input/Output: [(31 32 69 69) 31]
Test Case: 231 | Input/Output: [(22 5 82 21) 5]
Test Case: 232 | Input/Output: [(80 99 10 87) 10]
Test Case: 233 | Input/Output: [(69 12 94 32) 12]
Test Case: 234 | Input/Output: [(85 33 64 49) 33]
Test Case: 235 | Input/Output: [(62 37 91 49) 37]
Test Case: 236 | Input/Output: [(56 66 21 40) 21]
Test Case: 237 | Input/Output: [(67 67 51 17) 17]
Test Case: 238 | Input/Output: [(10 3 38 6) 3]
Test Case: 239 | Input/Output: [(56 50 91 38) 38]
Test Case: 240 | Input/Output: [(90 17 12 22) 12]
Test Case: 241 | Input/Output: [(72 1 72 24) 1]
Test Case: 242 | Input/Output: [(19 31 95 70) 19]
Test Case: 243 | Input/Output: [(48 35 10 66) 10]
Test Case: 244 | Input/Output: [(65 74 16 42) 16]
Test Case: 245 | Input/Output: [(36 94 96 73) 36]
Test Case: 246 | Input/Output: [(31 45 37 43) 31]
Test Case: 247 | Input/Output: [(47 58 33 7) 7]
Test Case: 248 | Input/Output: [(23 2 6 19) 2]
Test Case: 249 | Input/Output: [(23 97 15 53) 15]
Test Case: 250 | Input/Output: [(44 86 98 90) 44]
Test Case: 251 | Input/Output: [(40 32 23 50) 23]
Test Case: 252 | Input/Output: [(29 4 6 1) 1]
Test Case: 253 | Input/Output: [(95 36 16 14) 14]
Test Case: 254 | Input/Output: [(84 1 25 4) 1]
Test Case: 255 | Input/Output: [(29 18 16 79) 16]
Test Case: 256 | Input/Output: [(24 69 18 97) 18]
Test Case: 257 | Input/Output: [(93 90 7 2) 2]
Test Case: 258 | Input/Output: [(41 49 67 69) 41]
Test Case: 259 | Input/Output: [(73 39 8 73) 8]
Test Case: 260 | Input/Output: [(70 15 72 9) 9]
Test Case: 261 | Input/Output: [(62 53 38 72) 38]
Test Case: 262 | Input/Output: [(63 35 67 34) 34]
Test Case: 263 | Input/Output: [(41 15 88 76) 15]
Test Case: 264 | Input/Output: [(99 51 82 79) 51]
Test Case: 265 | Input/Output: [(94 36 26 41) 26]
Test Case: 266 | Input/Output: [(15 41 10 66) 10]
Test Case: 267 | Input/Output: [(12 65 58 56) 12]
Test Case: 268 | Input/Output: [(49 72 74 92) 49]
Test Case: 269 | Input/Output: [(31 86 35 37) 31]
Test Case: 270 | Input/Output: [(1 38 40 50) 1]
Test Case: 271 | Input/Output: [(80 45 94 19) 19]
Test Case: 272 | Input/Output: [(89 30 43 51) 30]
Test Case: 273 | Input/Output: [(87 2 59 44) 2]
Test Case: 274 | Input/Output: [(79 28 74 83) 28]
Test Case: 275 | Input/Output: [(31 98 82 67) 31]
Test Case: 276 | Input/Output: [(22 81 64 81) 22]
Test Case: 277 | Input/Output: [(60 89 89 99) 60]
Test Case: 278 | Input/Output: [(79 40 1 9) 1]
Test Case: 279 | Input/Output: [(17 64 63 87) 17]
Test Case: 280 | Input/Output: [(61 52 91 23) 23]
Test Case: 281 | Input/Output: [(7 80 31 93) 7]
Test Case: 282 | Input/Output: [(21 13 74 34) 13]
Test Case: 283 | Input/Output: [(74 38 71 68) 38]
Test Case: 284 | Input/Output: [(56 14 15 6) 6]
Test Case: 285 | Input/Output: [(13 76 68 30) 13]
Test Case: 286 | Input/Output: [(98 38 43 19) 19]
Test Case: 287 | Input/Output: [(20 95 21 51) 20]
Test Case: 288 | Input/Output: [(29 30 35 52) 29]
Test Case: 289 | Input/Output: [(15 53 80 40) 15]
Test Case: 290 | Input/Output: [(61 7 12 99) 7]
Test Case: 291 | Input/Output: [(97 68 27 60) 27]
Test Case: 292 | Input/Output: [(99 42 86 57) 42]
Test Case: 293 | Input/Output: [(11 68 52 39) 11]
Test Case: 294 | Input/Output: [(98 91 64 4) 4]
Test Case: 295 | Input/Output: [(4 75 3 5) 3]
Test Case: 296 | Input/Output: [(53 32 14 29) 14]
Test Case: 297 | Input/Output: [(12 94 15 92) 12]
Test Case: 298 | Input/Output: [(14 84 43 2) 2]
Test Case: 299 | Input/Output: [(68 57 97 95) 57]
Test Case: 300 | Input/Output: [(72 5 87 82) 5]
Test Case: 301 | Input/Output: [(67 38 72 28) 28]
Test Case: 302 | Input/Output: [(12 36 95 43) 12]
Test Case: 303 | Input/Output: [(47 1 70 63) 1]
Test Case: 304 | Input/Output: [(59 19 19 1) 1]
Test Case: 305 | Input/Output: [(51 73 19 3) 3]
Test Case: 306 | Input/Output: [(55 10 6 67) 6]
Test Case: 307 | Input/Output: [(80 2 46 9) 2]
Test Case: 308 | Input/Output: [(27 46 69 67) 27]
Test Case: 309 | Input/Output: [(72 24 97 88) 24]
Test Case: 310 | Input/Output: [(62 12 1 57) 1]
Test Case: 311 | Input/Output: [(91 7 28 7) 7]
Test Case: 312 | Input/Output: [(51 77 77 45) 45]
Test Case: 313 | Input/Output: [(38 81 3 7) 3]
Test Case: 314 | Input/Output: [(45 91 72 95) 45]
Test Case: 315 | Input/Output: [(2 91 97 81) 2]
Test Case: 316 | Input/Output: [(36 7 88 13) 7]
Test Case: 317 | Input/Output: [(40 71 63 24) 24]
Test Case: 318 | Input/Output: [(86 68 76 96) 68]
Test Case: 319 | Input/Output: [(73 54 64 9) 9]
Test Case: 320 | Input/Output: [(4 61 52 14) 4]
Test Case: 321 | Input/Output: [(81 21 6 76) 6]
Test Case: 322 | Input/Output: [(8 47 81 33) 8]
Test Case: 323 | Input/Output: [(87 68 85 9) 9]
Test Case: 324 | Input/Output: [(30 88 90 21) 21]
Test Case: 325 | Input/Output: [(41 86 98 66) 41]
Test Case: 326 | Input/Output: [(67 59 78 21) 21]
Test Case: 327 | Input/Output: [(20 39 35 48) 20]
Test Case: 328 | Input/Output: [(28 13 38 77) 13]
Test Case: 329 | Input/Output: [(94 70 79 7) 7]
Test Case: 330 | Input/Output: [(54 46 59 51) 46]
Test Case: 331 | Input/Output: [(39 48 75 48) 39]
Test Case: 332 | Input/Output: [(87 5 47 75) 5]
Test Case: 333 | Input/Output: [(39 47 6 80) 6]
Test Case: 334 | Input/Output: [(27 34 17 2) 2]
Test Case: 335 | Input/Output: [(97 12 0 21) 0]
Test Case: 336 | Input/Output: [(42 25 76 46) 25]
Test Case: 337 | Input/Output: [(29 14 50 22) 14]
Test Case: 338 | Input/Output: [(39 40 30 88) 30]
Test Case: 339 | Input/Output: [(33 21 55 19) 19]
Test Case: 340 | Input/Output: [(2 87 66 40) 2]
Test Case: 341 | Input/Output: [(42 64 94 98) 42]
Test Case: 342 | Input/Output: [(43 48 95 58) 43]
Test Case: 343 | Input/Output: [(55 7 69 74) 7]
Test Case: 344 | Input/Output: [(17 16 76 80) 16]
Test Case: 345 | Input/Output: [(26 83 42 36) 26]
Test Case: 346 | Input/Output: [(95 2 38 29) 2]
Test Case: 347 | Input/Output: [(63 59 19 17) 17]
Test Case: 348 | Input/Output: [(23 27 91 95) 23]
Test Case: 349 | Input/Output: [(85 68 84 86) 68]
Test Case: 350 | Input/Output: [(19 29 65 95) 19]
Test Case: 351 | Input/Output: [(96 24 59 78) 24]
Test Case: 352 | Input/Output: [(74 80 66 24) 24]
Test Case: 353 | Input/Output: [(96 99 5 61) 5]
Test Case: 354 | Input/Output: [(91 93 46 52) 46]
Test Case: 355 | Input/Output: [(46 64 36 17) 17]
Test Case: 356 | Input/Output: [(10 76 83 81) 10]
Test Case: 357 | Input/Output: [(65 95 25 100) 25]
Test Case: 358 | Input/Output: [(18 34 0 68) 0]
Test Case: 359 | Input/Output: [(37 1 23 74) 1]
Test Case: 360 | Input/Output: [(38 65 87 83) 38]
Test Case: 361 | Input/Output: [(41 54 32 74) 32]
Test Case: 362 | Input/Output: [(54 39 37 32) 32]
Test Case: 363 | Input/Output: [(90 20 96 97) 20]
Test Case: 364 | Input/Output: [(68 65 100 91) 65]
Test Case: 365 | Input/Output: [(2 93 62 99) 2]
Test Case: 366 | Input/Output: [(52 80 4 7) 4]
Test Case: 367 | Input/Output: [(46 7 88 96) 7]
Test Case: 368 | Input/Output: [(74 55 98 42) 42]
Test Case: 369 | Input/Output: [(65 30 57 98) 30]
Test Case: 370 | Input/Output: [(63 25 33 95) 25]
Test Case: 371 | Input/Output: [(28 23 14 28) 14]
Test Case: 372 | Input/Output: [(66 12 27 65) 12]
Test Case: 373 | Input/Output: [(82 36 68 17) 17]
Test Case: 374 | Input/Output: [(98 84 75 15) 15]
Test Case: 375 | Input/Output: [(79 30 21 17) 17]
Test Case: 376 | Input/Output: [(2 39 69 71) 2]
Test Case: 377 | Input/Output: [(85 88 54 75) 54]
Test Case: 378 | Input/Output: [(43 47 57 98) 43]
Test Case: 379 | Input/Output: [(7 60 9 22) 7]
Test Case: 380 | Input/Output: [(85 23 73 75) 23]
Test Case: 381 | Input/Output: [(81 96 69 20) 20]
Test Case: 382 | Input/Output: [(99 70 26 18) 18]
Test Case: 383 | Input/Output: [(97 93 28 79) 28]
Test Case: 384 | Input/Output: [(35 91 5 47) 5]
Test Case: 385 | Input/Output: [(39 91 40 72) 39]
Test Case: 386 | Input/Output: [(3 5 77 55) 3]
Test Case: 387 | Input/Output: [(70 60 37 92) 37]
Test Case: 388 | Input/Output: [(38 24 88 11) 11]
Test Case: 389 | Input/Output: [(79 96 74 80) 74]
Test Case: 390 | Input/Output: [(50 89 24 1) 1]
Test Case: 391 | Input/Output: [(72 18 71 48) 18]
Test Case: 392 | Input/Output: [(64 98 10 77) 10]
Test Case: 393 | Input/Output: [(56 90 55 54) 54]
Test Case: 394 | Input/Output: [(52 71 2 29) 2]
Test Case: 395 | Input/Output: [(21 37 42 12) 12]
Test Case: 396 | Input/Output: [(88 75 47 14) 14]
Test Case: 397 | Input/Output: [(75 47 53 10) 10]
Test Case: 398 | Input/Output: [(12 51 74 2) 2]
Test Case: 399 | Input/Output: [(65 59 72 10) 10]
Test Case: 400 | Input/Output: [(-87 67 38 9) -87]
Test Case: 401 | Input/Output: [(-95 75 -21 -41) -95]
Test Case: 402 | Input/Output: [(93 12 -65 52) -65]
Test Case: 403 | Input/Output: [(72 -27 27 -85) -85]
Test Case: 404 | Input/Output: [(-8 -11 79 -98) -98]
Test Case: 405 | Input/Output: [(15 33 83 -95) -95]
Test Case: 406 | Input/Output: [(54 25 -36 -68) -68]
Test Case: 407 | Input/Output: [(-81 36 77 -59) -81]
Test Case: 408 | Input/Output: [(4 1 83 59) 1]
Test Case: 409 | Input/Output: [(16 -36 34 31) -36]
Test Case: 410 | Input/Output: [(51 19 -23 -48) -48]
Test Case: 411 | Input/Output: [(-2 84 -91 35) -91]
Test Case: 412 | Input/Output: [(-77 -21 -13 -28) -77]
Test Case: 413 | Input/Output: [(89 80 -56 98) -56]
Test Case: 414 | Input/Output: [(18 -31 -11 26) -31]
Test Case: 415 | Input/Output: [(-76 80 77 -93) -93]
Test Case: 416 | Input/Output: [(-30 41 -54 -22) -54]
Test Case: 417 | Input/Output: [(9 25 40 -61) -61]
Test Case: 418 | Input/Output: [(40 41 -9 23) -9]
Test Case: 419 | Input/Output: [(-69 79 -56 33) -69]
Test Case: 420 | Input/Output: [(12 -10 -81 49) -81]
Test Case: 421 | Input/Output: [(16 97 22 36) 16]
Test Case: 422 | Input/Output: [(-58 73 -21 10) -58]
Test Case: 423 | Input/Output: [(30 -14 86 -42) -42]
Test Case: 424 | Input/Output: [(-39 68 -28 40) -39]
Test Case: 425 | Input/Output: [(-78 -70 -16 3) -78]
Test Case: 426 | Input/Output: [(52 -34 57 63) -34]
Test Case: 427 | Input/Output: [(4 -29 -41 54) -41]
Test Case: 428 | Input/Output: [(84 13 26 -92) -92]
Test Case: 429 | Input/Output: [(29 -86 3 70) -86]
Test Case: 430 | Input/Output: [(-56 -89 -84 -19) -89]
Test Case: 431 | Input/Output: [(73 7 -3 -53) -53]
Test Case: 432 | Input/Output: [(-32 -82 -43 -100) -100]
Test Case: 433 | Input/Output: [(-50 100 9 -76) -76]
Test Case: 434 | Input/Output: [(-13 -35 24 75) -35]
Test Case: 435 | Input/Output: [(-31 -11 23 -96) -96]
Test Case: 436 | Input/Output: [(54 35 -75 46) -75]
Test Case: 437 | Input/Output: [(63 85 -2 -43) -43]
Test Case: 438 | Input/Output: [(42 -23 45 39) -23]
Test Case: 439 | Input/Output: [(87 -44 94 46) -44]
Test Case: 440 | Input/Output: [(80 45 -65 27) -65]
Test Case: 441 | Input/Output: [(-3 -25 4 -1) -25]
Test Case: 442 | Input/Output: [(-28 -85 6 -78) -85]
Test Case: 443 | Input/Output: [(23 -85 52 11) -85]
Test Case: 444 | Input/Output: [(-7 -23 33 85) -23]
Test Case: 445 | Input/Output: [(84 -41 78 -49) -49]
Test Case: 446 | Input/Output: [(95 -7 -69 51) -69]
Test Case: 447 | Input/Output: [(-6 -23 4 -2) -23]
Test Case: 448 | Input/Output: [(-91 -49 88 29) -91]
Test Case: 449 | Input/Output: [(-45 74 -56 -53) -56]
Test Case: 450 | Input/Output: [(6 -19 22 3) -19]
Test Case: 451 | Input/Output: [(78 34 24 -81) -81]
Test Case: 452 | Input/Output: [(17 -17 96 47) -17]
Test Case: 453 | Input/Output: [(-60 64 94 -52) -60]
Test Case: 454 | Input/Output: [(-21 -50 66 7) -50]
Test Case: 455 | Input/Output: [(-78 -52 49 -86) -86]
Test Case: 456 | Input/Output: [(-89 41 49 -30) -89]
Test Case: 457 | Input/Output: [(-92 26 -86 57) -92]
Test Case: 458 | Input/Output: [(92 31 34 -91) -91]
Test Case: 459 | Input/Output: [(-86 -84 95 33) -86]
Test Case: 460 | Input/Output: [(62 87 85 8) 8]
Test Case: 461 | Input/Output: [(87 23 -78 0) -78]
Test Case: 462 | Input/Output: [(1 -84 57 -80) -84]
Test Case: 463 | Input/Output: [(6 26 32 13) 6]
Test Case: 464 | Input/Output: [(8 -93 -70 50) -93]
Test Case: 465 | Input/Output: [(28 66 -22 9) -22]
Test Case: 466 | Input/Output: [(52 54 -96 97) -96]
Test Case: 467 | Input/Output: [(-78 88 23 -52) -78]
Test Case: 468 | Input/Output: [(38 -54 -24 -69) -69]
Test Case: 469 | Input/Output: [(-68 -81 -9 9) -81]
Test Case: 470 | Input/Output: [(-46 -68 -6 -43) -68]
Test Case: 471 | Input/Output: [(80 -44 59 -3) -44]
Test Case: 472 | Input/Output: [(-78 32 -9 6) -78]
Test Case: 473 | Input/Output: [(17 -69 -43 40) -69]
Test Case: 474 | Input/Output: [(-94 53 -22 -57) -94]
Test Case: 475 | Input/Output: [(-64 -74 7 -53) -74]
Test Case: 476 | Input/Output: [(-18 76 29 -59) -59]
Test Case: 477 | Input/Output: [(-40 67 14 53) -40]
Test Case: 478 | Input/Output: [(-50 -14 -36 -46) -50]
Test Case: 479 | Input/Output: [(-83 9 15 27) -83]
Test Case: 480 | Input/Output: [(56 -9 41 69) -9]
Test Case: 481 | Input/Output: [(85 -46 74 -80) -80]
Test Case: 482 | Input/Output: [(75 -30 -80 -66) -80]
Test Case: 483 | Input/Output: [(8 10 -9 10) -9]
Test Case: 484 | Input/Output: [(-85 -33 43 51) -85]
Test Case: 485 | Input/Output: [(65 -62 57 71) -62]
Test Case: 486 | Input/Output: [(-48 -74 -35 -73) -74]
Test Case: 487 | Input/Output: [(-99 -24 -80 10) -99]
Test Case: 488 | Input/Output: [(62 95 -45 83) -45]
Test Case: 489 | Input/Output: [(-17 -55 93 37) -55]
Test Case: 490 | Input/Output: [(-11 26 -97 5) -97]
Test Case: 491 | Input/Output: [(-26 28 82 -46) -46]
Test Case: 492 | Input/Output: [(60 42 89 -36) -36]
Test Case: 493 | Input/Output: [(52 -67 -23 39) -67]
Test Case: 494 | Input/Output: [(60 44 -63 -39) -63]
Test Case: 495 | Input/Output: [(89 -100 93 28) -100]
Test Case: 496 | Input/Output: [(-71 -19 -49 42) -71]
Test Case: 497 | Input/Output: [(97 -27 79 92) -27]
Test Case: 498 | Input/Output: [(62 21 11 76) 11]
Test Case: 499 | Input/Output: [(-40 73 -93 41) -93]
Test Case: 500 | Input/Output: [(-14 70 51 80) -14]
Test Case: 501 | Input/Output: [(79 -15 29 -37) -37]
Test Case: 502 | Input/Output: [(20 -99 -22 -93) -99]
Test Case: 503 | Input/Output: [(82 -37 98 49) -37]
Test Case: 504 | Input/Output: [(-33 -70 -53 4) -70]
Test Case: 505 | Input/Output: [(80 73 11 -82) -82]
Test Case: 506 | Input/Output: [(-20 -23 -4 -84) -84]
Test Case: 507 | Input/Output: [(66 -9 63 30) -9]
Test Case: 508 | Input/Output: [(-12 -6 44 -99) -99]
Test Case: 509 | Input/Output: [(87 -62 -12 97) -62]
Test Case: 510 | Input/Output: [(-25 70 25 94) -25]
Test Case: 511 | Input/Output: [(82 -11 -28 60) -28]
Test Case: 512 | Input/Output: [(-29 18 41 -71) -71]
Test Case: 513 | Input/Output: [(-97 -24 -55 -62) -97]
Test Case: 514 | Input/Output: [(80 16 98 -83) -83]
Test Case: 515 | Input/Output: [(93 77 -3 5) -3]
Test Case: 516 | Input/Output: [(6 -32 80 -17) -32]
Test Case: 517 | Input/Output: [(25 -41 40 -73) -73]
Test Case: 518 | Input/Output: [(97 -76 -24 -2) -76]
Test Case: 519 | Input/Output: [(-35 66 20 62) -35]
Test Case: 520 | Input/Output: [(-31 41 -90 10) -90]
Test Case: 521 | Input/Output: [(-91 63 25 -48) -91]
Test Case: 522 | Input/Output: [(-2 59 8 43) -2]
Test Case: 523 | Input/Output: [(18 -73 36 -74) -74]
Test Case: 524 | Input/Output: [(-35 85 -30 5) -35]
Test Case: 525 | Input/Output: [(-100 15 -62 -61) -100]
Test Case: 526 | Input/Output: [(-34 12 -26 65) -34]
Test Case: 527 | Input/Output: [(-32 70 91 -8) -32]
Test Case: 528 | Input/Output: [(-11 4 -33 -22) -33]
Test Case: 529 | Input/Output: [(-45 -88 41 87) -88]
Test Case: 530 | Input/Output: [(-1 -26 -99 94) -99]
Test Case: 531 | Input/Output: [(94 85 39 11) 11]
Test Case: 532 | Input/Output: [(37 100 52 -78) -78]
Test Case: 533 | Input/Output: [(-74 6 54 43) -74]
Test Case: 534 | Input/Output: [(-3 93 -12 -41) -41]
Test Case: 535 | Input/Output: [(13 -9 -59 -66) -66]
Test Case: 536 | Input/Output: [(90 -32 99 48) -32]
Test Case: 537 | Input/Output: [(11 42 -35 -100) -100]
Test Case: 538 | Input/Output: [(-19 -32 -74 39) -74]
Test Case: 539 | Input/Output: [(-71 47 57 -66) -71]
Test Case: 540 | Input/Output: [(-24 100 94 39) -24]
Test Case: 541 | Input/Output: [(47 -84 -69 12) -84]
Test Case: 542 | Input/Output: [(-69 50 29 64) -69]
Test Case: 543 | Input/Output: [(-92 90 18 -44) -92]
Test Case: 544 | Input/Output: [(-99 10 -3 -93) -99]
Test Case: 545 | Input/Output: [(-48 -26 -19 86) -48]
Test Case: 546 | Input/Output: [(20 -35 20 68) -35]
Test Case: 547 | Input/Output: [(99 77 -15 -73) -73]
Test Case: 548 | Input/Output: [(-12 -85 75 -100) -100]
Test Case: 549 | Input/Output: [(-31 -93 -64 91) -93]
Test Case: 550 | Input/Output: [(-93 91 -37 74) -93]
Test Case: 551 | Input/Output: [(80 47 -15 95) -15]
Test Case: 552 | Input/Output: [(73 -84 -11 14) -84]
Test Case: 553 | Input/Output: [(-81 -68 75 -56) -81]
Test Case: 554 | Input/Output: [(-42 0 -2 -24) -42]
Test Case: 555 | Input/Output: [(27 95 -62 42) -62]
Test Case: 556 | Input/Output: [(88 -39 19 53) -39]
Test Case: 557 | Input/Output: [(-6 -77 -60 63) -77]
Test Case: 558 | Input/Output: [(22 -30 69 -46) -46]
Test Case: 559 | Input/Output: [(-84 47 44 90) -84]
Test Case: 560 | Input/Output: [(-80 1 44 -88) -88]
Test Case: 561 | Input/Output: [(3 -21 52 68) -21]
Test Case: 562 | Input/Output: [(43 80 76 29) 29]
Test Case: 563 | Input/Output: [(14 76 -63 -12) -63]
Test Case: 564 | Input/Output: [(21 -25 9 -76) -76]
Test Case: 565 | Input/Output: [(38 84 34 59) 34]
Test Case: 566 | Input/Output: [(-14 32 83 60) -14]
Test Case: 567 | Input/Output: [(34 -12 -13 87) -13]
Test Case: 568 | Input/Output: [(79 -100 -14 85) -100]
Test Case: 569 | Input/Output: [(-86 -39 57 59) -86]
Test Case: 570 | Input/Output: [(21 92 -78 45) -78]
Test Case: 571 | Input/Output: [(89 88 93 -40) -40]
Test Case: 572 | Input/Output: [(-93 39 65 -94) -94]
Test Case: 573 | Input/Output: [(-60 -96 -86 23) -96]
Test Case: 574 | Input/Output: [(-47 -66 85 -12) -66]
Test Case: 575 | Input/Output: [(-82 5 -96 98) -96]
Test Case: 576 | Input/Output: [(-53 12 -24 -41) -53]
Test Case: 577 | Input/Output: [(10 -74 -90 -76) -90]
Test Case: 578 | Input/Output: [(-91 -37 -53 85) -91]
Test Case: 579 | Input/Output: [(98 -2 90 -15) -15]
Test Case: 580 | Input/Output: [(17 -95 71 4) -95]
Test Case: 581 | Input/Output: [(-79 34 72 100) -79]
Test Case: 582 | Input/Output: [(-34 -90 3 52) -90]
Test Case: 583 | Input/Output: [(91 -18 -75 19) -75]
Test Case: 584 | Input/Output: [(64 92 -85 -32) -85]
Test Case: 585 | Input/Output: [(-1 -67 37 3) -67]
Test Case: 586 | Input/Output: [(-94 -12 -56 -79) -94]
Test Case: 587 | Input/Output: [(-46 -52 2 -88) -88]
Test Case: 588 | Input/Output: [(98 30 -17 -65) -65]
Test Case: 589 | Input/Output: [(90 5 -47 81) -47]
Test Case: 590 | Input/Output: [(9 31 7 28) 7]
Test Case: 591 | Input/Output: [(-48 -83 -60 17) -83]
Test Case: 592 | Input/Output: [(21 60 96 24) 21]
Test Case: 593 | Input/Output: [(13 35 -35 95) -35]
Test Case: 594 | Input/Output: [(-95 48 -37 88) -95]
Test Case: 595 | Input/Output: [(-15 -42 -59 65) -59]
Test Case: 596 | Input/Output: [(-60 67 16 -94) -94]
Test Case: 597 | Input/Output: [(82 -58 5 -3) -58]
Test Case: 598 | Input/Output: [(6 -66 65 92) -66]
Test Case: 599 | Input/Output: [(77 -2 -36 68) -36]
Test Case: 600 | Input/Output: [(-2 2 -6 -30) -30]
Test Case: 601 | Input/Output: [(10 87 64 -62) -62]
Test Case: 602 | Input/Output: [(81 -8 55 -96) -96]
Test Case: 603 | Input/Output: [(5 13 71 -98) -98]
Test Case: 604 | Input/Output: [(-70 25 -95 -23) -95]
Test Case: 605 | Input/Output: [(-27 11 -13 -92) -92]
Test Case: 606 | Input/Output: [(-22 -15 -72 -67) -72]
Test Case: 607 | Input/Output: [(92 33 42 33) 33]
Test Case: 608 | Input/Output: [(-13 -5 22 43) -13]
Test Case: 609 | Input/Output: [(10 41 34 71) 10]
Test Case: 610 | Input/Output: [(83 11 41 27) 11]
Test Case: 611 | Input/Output: [(16 -10 22 48) -10]
Test Case: 612 | Input/Output: [(89 -91 -97 -27) -97]
Test Case: 613 | Input/Output: [(28 -5 -99 18) -99]
Test Case: 614 | Input/Output: [(-7 -49 76 84) -49]
Test Case: 615 | Input/Output: [(49 -21 -35 51) -35]
Test Case: 616 | Input/Output: [(10 6 62 -95) -95]
Test Case: 617 | Input/Output: [(80 -30 29 45) -30]
Test Case: 618 | Input/Output: [(-77 86 -88 85) -88]
Test Case: 619 | Input/Output: [(-65 62 -45 -42) -65]
Test Case: 620 | Input/Output: [(-85 -11 15 3) -85]
Test Case: 621 | Input/Output: [(92 -45 78 -52) -52]
Test Case: 622 | Input/Output: [(-15 86 93 46) -15]
Test Case: 623 | Input/Output: [(-22 24 1 -17) -22]
Test Case: 624 | Input/Output: [(61 -1 -97 67) -97]
Test Case: 625 | Input/Output: [(-100 89 -24 88) -100]
Test Case: 626 | Input/Output: [(-83 63 -62 -33) -83]
Test Case: 627 | Input/Output: [(4 -39 71 69) -39]
Test Case: 628 | Input/Output: [(-14 -13 -55 6) -55]
Test Case: 629 | Input/Output: [(17 78 94 -85) -85]
Test Case: 630 | Input/Output: [(-85 16 93 62) -85]
Test Case: 631 | Input/Output: [(66 85 8 80) 8]
Test Case: 632 | Input/Output: [(7 24 -35 73) -35]
Test Case: 633 | Input/Output: [(65 75 -32 -75) -75]
Test Case: 634 | Input/Output: [(43 -22 -6 -6) -22]
Test Case: 635 | Input/Output: [(-48 -86 -97 -15) -97]
Test Case: 636 | Input/Output: [(-10 42 -14 -55) -55]
Test Case: 637 | Input/Output: [(9 21 -11 -2) -11]
Test Case: 638 | Input/Output: [(-33 44 22 36) -33]
Test Case: 639 | Input/Output: [(56 -75 -11 50) -75]
Test Case: 640 | Input/Output: [(-81 4 -79 -87) -87]
Test Case: 641 | Input/Output: [(-68 -86 59 -81) -86]
Test Case: 642 | Input/Output: [(-98 -98 37 11) -98]
Test Case: 643 | Input/Output: [(32 -98 27 -66) -98]
Test Case: 644 | Input/Output: [(47 98 66 45) 45]
Test Case: 645 | Input/Output: [(-16 13 -66 88) -66]
Test Case: 646 | Input/Output: [(70 -69 22 48) -69]
Test Case: 647 | Input/Output: [(-29 -9 91 -4) -29]
Test Case: 648 | Input/Output: [(-1 -51 29 -100) -100]
Test Case: 649 | Input/Output: [(-28 83 -51 36) -51]
Test Case: 650 | Input/Output: [(68 -57 90 67) -57]
Test Case: 651 | Input/Output: [(-69 79 4 -10) -69]
Test Case: 652 | Input/Output: [(88 98 14 -40) -40]
Test Case: 653 | Input/Output: [(-15 88 13 -69) -69]
Test Case: 654 | Input/Output: [(15 -76 70 51) -76]
Test Case: 655 | Input/Output: [(98 -83 -63 47) -83]
Test Case: 656 | Input/Output: [(-50 36 -46 -41) -50]
Test Case: 657 | Input/Output: [(12 -72 69 -57) -72]
Test Case: 658 | Input/Output: [(87 52 58 -43) -43]
Test Case: 659 | Input/Output: [(-84 -10 -4 -5) -84]
Test Case: 660 | Input/Output: [(-59 -36 -26 82) -59]
Test Case: 661 | Input/Output: [(-94 -90 100 -50) -94]
Test Case: 662 | Input/Output: [(85 -75 47 91) -75]
Test Case: 663 | Input/Output: [(-47 75 68 36) -47]
Test Case: 664 | Input/Output: [(-52 -55 -68 -92) -92]
Test Case: 665 | Input/Output: [(33 -96 45 -34) -96]
Test Case: 666 | Input/Output: [(62 -91 -86 32) -91]
Test Case: 667 | Input/Output: [(-99 28 -76 42) -99]
Test Case: 668 | Input/Output: [(64 -58 -47 69) -58]
Test Case: 669 | Input/Output: [(-83 -4 -99 -64) -99]
Test Case: 670 | Input/Output: [(-13 -27 63 -57) -57]
Test Case: 671 | Input/Output: [(-8 -55 -54 84) -55]
Test Case: 672 | Input/Output: [(-80 -16 -9 -23) -80]
Test Case: 673 | Input/Output: [(56 -29 14 -37) -37]
Test Case: 674 | Input/Output: [(-11 -13 88 -46) -46]
Test Case: 675 | Input/Output: [(65 -75 -79 21) -79]
Test Case: 676 | Input/Output: [(-63 48 -98 15) -98]
Test Case: 677 | Input/Output: [(-81 -82 -20 23) -82]
Test Case: 678 | Input/Output: [(-54 -45 -48 68) -54]
Test Case: 679 | Input/Output: [(55 44 59 92) 44]
Test Case: 680 | Input/Output: [(92 84 54 -59) -59]
Test Case: 681 | Input/Output: [(68 -58 -76 52) -76]
Test Case: 682 | Input/Output: [(-51 100 -35 42) -51]
Test Case: 683 | Input/Output: [(22 -7 66 52) -7]
Test Case: 684 | Input/Output: [(48 42 40 -78) -78]
Test Case: 685 | Input/Output: [(-92 55 7 -1) -92]
Test Case: 686 | Input/Output: [(-34 73 -36 100) -36]
Test Case: 687 | Input/Output: [(-86 56 -10 10) -86]
Test Case: 688 | Input/Output: [(-57 7 -59 19) -59]
Test Case: 689 | Input/Output: [(-68 -67 71 83) -68]
Test Case: 690 | Input/Output: [(40 33 70 -10) -10]
Test Case: 691 | Input/Output: [(-95 44 70 -1) -95]
Test Case: 692 | Input/Output: [(1 87 -37 -42) -42]
Test Case: 693 | Input/Output: [(-88 49 7 -1) -88]
Test Case: 694 | Input/Output: [(-86 -81 78 -54) -86]
Test Case: 695 | Input/Output: [(54 -40 43 100) -40]
Test Case: 696 | Input/Output: [(-12 0 -25 -89) -89]
Test Case: 697 | Input/Output: [(95 65 -39 12) -39]
Test Case: 698 | Input/Output: [(57 -59 -88 78) -88]
Test Case: 699 | Input/Output: [(-86 63 -90 88) -90]
Test Case: 700 | Input/Output: [(48 46 77 -57) -57]
Test Case: 701 | Input/Output: [(-43 -67 41 6) -67]
Test Case: 702 | Input/Output: [(-25 68 -2 14) -25]
Test Case: 703 | Input/Output: [(85 -25 63 -55) -55]
Test Case: 704 | Input/Output: [(-42 73 -78 14) -78]
Test Case: 705 | Input/Output: [(2 44 -94 -82) -94]
Test Case: 706 | Input/Output: [(-65 -12 -34 -12) -65]
Test Case: 707 | Input/Output: [(74 6 26 -97) -97]
Test Case: 708 | Input/Output: [(90 -12 85 61) -12]
Test Case: 709 | Input/Output: [(-53 -45 83 -100) -100]
Test Case: 710 | Input/Output: [(-91 -54 -89 -81) -91]
Test Case: 711 | Input/Output: [(-26 -89 22 18) -89]
Test Case: 712 | Input/Output: [(12 46 58 -97) -97]
Test Case: 713 | Input/Output: [(-51 67 57 -45) -51]
Test Case: 714 | Input/Output: [(-86 -19 -78 -86) -86]
Test Case: 715 | Input/Output: [(94 -87 -45 5) -87]
Test Case: 716 | Input/Output: [(93 -53 -23 56) -53]
Test Case: 717 | Input/Output: [(71 22 11 -99) -99]
Test Case: 718 | Input/Output: [(40 82 36 62) 36]
Test Case: 719 | Input/Output: [(-6 36 -73 -60) -73]
Test Case: 720 | Input/Output: [(-55 66 -83 -11) -83]
Test Case: 721 | Input/Output: [(72 -57 -37 48) -57]
Test Case: 722 | Input/Output: [(14 -38 44 -61) -61]
Test Case: 723 | Input/Output: [(74 -79 93 36) -79]
Test Case: 724 | Input/Output: [(91 -90 -98 -62) -98]
Test Case: 725 | Input/Output: [(76 42 -20 -35) -35]
Test Case: 726 | Input/Output: [(-65 43 -21 -22) -65]
Test Case: 727 | Input/Output: [(7 -69 19 25) -69]
Test Case: 728 | Input/Output: [(-31 87 22 8) -31]
Test Case: 729 | Input/Output: [(-53 -89 -74 -74) -89]
Test Case: 730 | Input/Output: [(77 78 -47 49) -47]
Test Case: 731 | Input/Output: [(87 -44 -60 85) -60]
Test Case: 732 | Input/Output: [(-99 -88 -22 -68) -99]
Test Case: 733 | Input/Output: [(48 -91 41 -79) -91]
Test Case: 734 | Input/Output: [(-40 86 22 94) -40]
Test Case: 735 | Input/Output: [(28 -85 -90 28) -90]
Test Case: 736 | Input/Output: [(-58 41 2 85) -58]
Test Case: 737 | Input/Output: [(87 51 -14 -26) -26]
Test Case: 738 | Input/Output: [(-8 -80 83 -27) -80]
Test Case: 739 | Input/Output: [(18 -86 -28 -43) -86]
Test Case: 740 | Input/Output: [(97 -94 51 24) -94]
Test Case: 741 | Input/Output: [(47 -92 -63 -2) -92]
Test Case: 742 | Input/Output: [(3 87 -58 18) -58]
Test Case: 743 | Input/Output: [(-15 16 -88 73) -88]
Test Case: 744 | Input/Output: [(79 -55 -59 -38) -59]
Test Case: 745 | Input/Output: [(-11 14 -16 28) -16]
Test Case: 746 | Input/Output: [(-84 7 -75 -60) -84]
Test Case: 747 | Input/Output: [(18 -56 4 -86) -86]
Test Case: 748 | Input/Output: [(-86 26 95 -28) -86]
Test Case: 749 | Input/Output: [(-10 -51 12 10) -51]
Test Case: 750 | Input/Output: [(17 -98 -76 3) -98]
Test Case: 751 | Input/Output: [(87 -81 -77 -29) -81]
Test Case: 752 | Input/Output: [(76 -29 1 16) -29]
Test Case: 753 | Input/Output: [(-22 38 96 -3) -22]
Test Case: 754 | Input/Output: [(68 9 -78 11) -78]
Test Case: 755 | Input/Output: [(-23 37 32 -93) -93]
Test Case: 756 | Input/Output: [(24 68 -90 -88) -90]
Test Case: 757 | Input/Output: [(-3 22 35 -67) -67]
Test Case: 758 | Input/Output: [(-42 -27 -34 63) -42]
Test Case: 759 | Input/Output: [(0 12 -1 53) -1]
Test Case: 760 | Input/Output: [(-83 -36 -91 -52) -91]
Test Case: 761 | Input/Output: [(16 -66 87 1) -66]
Test Case: 762 | Input/Output: [(92 78 73 -18) -18]
Test Case: 763 | Input/Output: [(-31 54 -3 -45) -45]
Test Case: 764 | Input/Output: [(58 20 -24 3) -24]
Test Case: 765 | Input/Output: [(86 72 40 -31) -31]
Test Case: 766 | Input/Output: [(90 21 -66 19) -66]
Test Case: 767 | Input/Output: [(-55 4 -12 -43) -55]
Test Case: 768 | Input/Output: [(27 75 91 84) 27]
Test Case: 769 | Input/Output: [(56 40 67 65) 40]
Test Case: 770 | Input/Output: [(-94 32 -91 -75) -94]
Test Case: 771 | Input/Output: [(-64 -54 8 -60) -64]
Test Case: 772 | Input/Output: [(-24 40 -32 69) -32]
Test Case: 773 | Input/Output: [(39 18 77 -19) -19]
Test Case: 774 | Input/Output: [(80 -55 81 80) -55]
Test Case: 775 | Input/Output: [(80 -73 66 -100) -100]
Test Case: 776 | Input/Output: [(-93 3 -38 6) -93]
Test Case: 777 | Input/Output: [(56 -81 4 13) -81]
Test Case: 778 | Input/Output: [(83 76 68 73) 68]
Test Case: 779 | Input/Output: [(-78 -53 69 -19) -78]
Test Case: 780 | Input/Output: [(57 15 -47 -78) -78]
Test Case: 781 | Input/Output: [(42 -26 61 3) -26]
Test Case: 782 | Input/Output: [(21 53 61 -88) -88]
Test Case: 783 | Input/Output: [(30 27 -23 -64) -64]
Test Case: 784 | Input/Output: [(77 66 40 75) 40]
Test Case: 785 | Input/Output: [(78 -88 -49 75) -88]
Test Case: 786 | Input/Output: [(65 -73 -42 61) -73]
Test Case: 787 | Input/Output: [(33 -85 90 -77) -85]
Test Case: 788 | Input/Output: [(-80 -52 28 44) -80]
Test Case: 789 | Input/Output: [(-45 -53 51 -15) -53]
Test Case: 790 | Input/Output: [(-74 46 17 81) -74]
Test Case: 791 | Input/Output: [(-27 4 73 -44) -44]
Test Case: 792 | Input/Output: [(-12 75 -61 23) -61]
Test Case: 793 | Input/Output: [(-49 92 19 72) -49]
Test Case: 794 | Input/Output: [(-32 -19 83 -53) -53]
Test Case: 795 | Input/Output: [(-69 -94 13 6) -94]
Test Case: 796 | Input/Output: [(-89 92 -81 -55) -89]
Test Case: 797 | Input/Output: [(-45 -79 68 -88) -88]
Test Case: 798 | Input/Output: [(-94 -29 78 96) -94]
Test Case: 799 | Input/Output: [(41 21 -67 -40) -67]
Test Case: 800 | Input/Output: [(77 30 -75 55) -75]
Test Case: 801 | Input/Output: [(-10 -48 -13 -94) -94]
Test Case: 802 | Input/Output: [(-82 -32 -32 17) -82]
Test Case: 803 | Input/Output: [(-45 43 -89 1) -89]
Test Case: 804 | Input/Output: [(-94 -50 -51 22) -94]
Test Case: 805 | Input/Output: [(-75 81 6 97) -75]
Test Case: 806 | Input/Output: [(-38 -44 -83 59) -83]
Test Case: 807 | Input/Output: [(21 26 -100 33) -100]
Test Case: 808 | Input/Output: [(-7 -77 -91 -95) -95]
Test Case: 809 | Input/Output: [(-57 -30 38 -41) -57]
Test Case: 810 | Input/Output: [(-26 11 13 -5) -26]
Test Case: 811 | Input/Output: [(-16 -84 50 -34) -84]
Test Case: 812 | Input/Output: [(84 -8 -51 -33) -51]
Test Case: 813 | Input/Output: [(52 -79 6 -57) -79]
Test Case: 814 | Input/Output: [(-9 -21 -82 -81) -82]
Test Case: 815 | Input/Output: [(35 8 58 -87) -87]
Test Case: 816 | Input/Output: [(68 -11 6 -15) -15]
Test Case: 817 | Input/Output: [(18 -55 -57 -26) -57]
Test Case: 818 | Input/Output: [(80 64 63 -10) -10]
Test Case: 819 | Input/Output: [(-72 -100 -40 78) -100]
Test Case: 820 | Input/Output: [(-13 -89 97 -24) -89]
Test Case: 821 | Input/Output: [(56 53 -98 29) -98]
Test Case: 822 | Input/Output: [(-31 -93 -12 65) -93]
Test Case: 823 | Input/Output: [(-98 -14 75 1) -98]
Test Case: 824 | Input/Output: [(7 -33 -42 -22) -42]
Test Case: 825 | Input/Output: [(-59 12 -97 -75) -97]
Test Case: 826 | Input/Output: [(74 -24 -27 -95) -95]
Test Case: 827 | Input/Output: [(49 -4 47 -1) -4]
Test Case: 828 | Input/Output: [(48 -81 -55 -18) -81]
Test Case: 829 | Input/Output: [(45 -34 36 -77) -77]
Test Case: 830 | Input/Output: [(81 37 78 23) 23]
Test Case: 831 | Input/Output: [(29 -30 -45 -14) -45]
Test Case: 832 | Input/Output: [(15 63 65 19) 15]
Test Case: 833 | Input/Output: [(85 -13 -27 -38) -38]
Test Case: 834 | Input/Output: [(51 -58 -93 57) -93]
Test Case: 835 | Input/Output: [(-5 -53 -7 -31) -53]
Test Case: 836 | Input/Output: [(-26 76 -36 -29) -36]
Test Case: 837 | Input/Output: [(72 27 -12 74) -12]
Test Case: 838 | Input/Output: [(27 47 -78 81) -78]
Test Case: 839 | Input/Output: [(-80 -41 -18 100) -80]
Test Case: 840 | Input/Output: [(-74 19 -12 -29) -74]
Test Case: 841 | Input/Output: [(-48 -42 32 -31) -48]
Test Case: 842 | Input/Output: [(95 10 -73 88) -73]
Test Case: 843 | Input/Output: [(-83 -39 -50 -96) -96]
Test Case: 844 | Input/Output: [(94 -33 -40 -12) -40]
Test Case: 845 | Input/Output: [(25 39 -37 50) -37]
Test Case: 846 | Input/Output: [(25 -85 80 69) -85]
Test Case: 847 | Input/Output: [(-21 -97 97 -38) -97]
Test Case: 848 | Input/Output: [(18 87 -44 -93) -93]
Test Case: 849 | Input/Output: [(-98 55 57 80) -98]
Test Case: 850 | Input/Output: [(-17 30 -41 -44) -44]
Test Case: 851 | Input/Output: [(-57 25 61 50) -57]
Test Case: 852 | Input/Output: [(-69 96 -32 82) -69]
Test Case: 853 | Input/Output: [(57 94 -21 -53) -53]
Test Case: 854 | Input/Output: [(-86 98 -4 -43) -86]
Test Case: 855 | Input/Output: [(4 -74 -63 -10) -74]
Test Case: 856 | Input/Output: [(60 20 -67 -98) -98]
Test Case: 857 | Input/Output: [(-81 63 99 -84) -84]
Test Case: 858 | Input/Output: [(-59 17 -36 71) -59]
Test Case: 859 | Input/Output: [(-39 75 55 46) -39]
Test Case: 860 | Input/Output: [(23 74 91 8) 8]
Test Case: 861 | Input/Output: [(84 19 -90 27) -90]
Test Case: 862 | Input/Output: [(-43 -86 -68 -82) -86]
Test Case: 863 | Input/Output: [(-24 -4 -39 93) -39]
Test Case: 864 | Input/Output: [(-37 33 -8 -93) -93]
Test Case: 865 | Input/Output: [(0 -93 -42 -20) -93]
Test Case: 866 | Input/Output: [(90 90 78 80) 78]
Test Case: 867 | Input/Output: [(-46 10 -78 -89) -89]
Test Case: 868 | Input/Output: [(-63 -22 -97 7) -97]
Test Case: 869 | Input/Output: [(-25 -51 -23 36) -51]
Test Case: 870 | Input/Output: [(72 1 43 33) 1]
Test Case: 871 | Input/Output: [(-86 -89 98 -4) -89]
Test Case: 872 | Input/Output: [(100 -77 -6 -15) -77]
Test Case: 873 | Input/Output: [(-5 -75 -100 -14) -100]
Test Case: 874 | Input/Output: [(-55 -41 -28 34) -55]
Test Case: 875 | Input/Output: [(27 82 94 34) 27]
Test Case: 876 | Input/Output: [(97 -81 -88 68) -88]
Test Case: 877 | Input/Output: [(78 -94 -41 42) -94]
Test Case: 878 | Input/Output: [(-19 -32 -30 8) -32]
Test Case: 879 | Input/Output: [(16 -10 62 93) -10]
Test Case: 880 | Input/Output: [(-39 -20 69 4) -39]
Test Case: 881 | Input/Output: [(50 5 -72 -42) -72]
Test Case: 882 | Input/Output: [(47 77 -100 11) -100]
Test Case: 883 | Input/Output: [(-13 94 -77 -51) -77]
Test Case: 884 | Input/Output: [(35 -51 99 -52) -52]
Test Case: 885 | Input/Output: [(28 -98 5 76) -98]
Test Case: 886 | Input/Output: [(90 -19 -56 20) -56]
Test Case: 887 | Input/Output: [(-41 47 87 -6) -41]
Test Case: 888 | Input/Output: [(-11 97 -35 34) -35]
Test Case: 889 | Input/Output: [(-28 -70 -34 -53) -70]
Test Case: 890 | Input/Output: [(45 -41 -58 -17) -58]
Test Case: 891 | Input/Output: [(13 -85 -100 -75) -100]
Test Case: 892 | Input/Output: [(-8 -57 91 48) -57]
Test Case: 893 | Input/Output: [(-64 -98 -63 38) -98]
Test Case: 894 | Input/Output: [(10 98 57 -60) -60]
Test Case: 895 | Input/Output: [(29 -86 26 66) -86]
Test Case: 896 | Input/Output: [(-8 30 9 -96) -96]
Test Case: 897 | Input/Output: [(-22 -98 -54 21) -98]
Test Case: 898 | Input/Output: [(89 90 -58 -8) -58]
Test Case: 899 | Input/Output: [(50 7 71 -28) -28]
Test Case: 900 | Input/Output: [(99 -82 34 -92) -92]
Test Case: 901 | Input/Output: [(-39 -16 95 -96) -96]
Test Case: 902 | Input/Output: [(-72 -35 98 -22) -72]
Test Case: 903 | Input/Output: [(24 -81 -27 17) -81]
Test Case: 904 | Input/Output: [(17 99 55 10) 10]
Test Case: 905 | Input/Output: [(-4 83 44 -22) -22]
Test Case: 906 | Input/Output: [(-37 -54 85 33) -54]
Test Case: 907 | Input/Output: [(82 55 -47 14) -47]
Test Case: 908 | Input/Output: [(-85 -30 -88 -22) -88]
Test Case: 909 | Input/Output: [(-56 -48 20 27) -56]
Test Case: 910 | Input/Output: [(-64 -62 -70 -61) -70]
Test Case: 911 | Input/Output: [(-96 62 -34 -22) -96]
Test Case: 912 | Input/Output: [(-79 -20 87 39) -79]
Test Case: 913 | Input/Output: [(-43 97 -54 -62) -62]
Test Case: 914 | Input/Output: [(-12 -76 -24 -12) -76]
Test Case: 915 | Input/Output: [(-6 6 25 27) -6]
Test Case: 916 | Input/Output: [(3 83 13 100) 3]
Test Case: 917 | Input/Output: [(64 -39 76 52) -39]
Test Case: 918 | Input/Output: [(-2 -39 -15 -11) -39]
Test Case: 919 | Input/Output: [(19 -42 -55 53) -55]
Test Case: 920 | Input/Output: [(-23 -4 -26 -3) -26]
Test Case: 921 | Input/Output: [(-48 45 36 54) -48]
Test Case: 922 | Input/Output: [(14 -69 23 -75) -75]
Test Case: 923 | Input/Output: [(-7 -52 -23 74) -52]
Test Case: 924 | Input/Output: [(-7 92 -62 -89) -89]
Test Case: 925 | Input/Output: [(62 -61 82 8) -61]
Test Case: 926 | Input/Output: [(95 -28 -31 8) -31]
Test Case: 927 | Input/Output: [(-63 -26 1 13) -63]
Test Case: 928 | Input/Output: [(-81 -76 75 93) -81]
Test Case: 929 | Input/Output: [(21 -39 16 97) -39]
Test Case: 930 | Input/Output: [(40 0 -47 -52) -52]
Test Case: 931 | Input/Output: [(37 -27 -78 25) -78]
Test Case: 932 | Input/Output: [(-66 16 40 -32) -66]
Test Case: 933 | Input/Output: [(-86 -39 97 21) -86]
Test Case: 934 | Input/Output: [(10 -27 79 80) -27]
Test Case: 935 | Input/Output: [(-82 -16 -78 -42) -82]
Test Case: 936 | Input/Output: [(60 94 67 33) 33]
Test Case: 937 | Input/Output: [(66 -52 83 -48) -52]
Test Case: 938 | Input/Output: [(-49 31 -48 -59) -59]
Test Case: 939 | Input/Output: [(14 60 -70 0) -70]
Test Case: 940 | Input/Output: [(69 79 55 37) 37]
Test Case: 941 | Input/Output: [(57 15 -85 36) -85]
Test Case: 942 | Input/Output: [(-82 -62 -68 -64) -82]
Test Case: 943 | Input/Output: [(-52 14 41 12) -52]
Test Case: 944 | Input/Output: [(-56 -28 2 68) -56]
Test Case: 945 | Input/Output: [(-20 32 -46 80) -46]
Test Case: 946 | Input/Output: [(15 71 4 -37) -37]
Test Case: 947 | Input/Output: [(-25 43 -66 49) -66]
Test Case: 948 | Input/Output: [(-63 -46 80 92) -63]
Test Case: 949 | Input/Output: [(78 36 -24 -21) -24]
Test Case: 950 | Input/Output: [(-100 -92 13 -63) -100]
Test Case: 951 | Input/Output: [(10 -45 -85 4) -85]
Test Case: 952 | Input/Output: [(-78 -47 84 3) -78]
Test Case: 953 | Input/Output: [(7 -86 -7 98) -86]
Test Case: 954 | Input/Output: [(15 52 -54 -6) -54]
Test Case: 955 | Input/Output: [(-81 44 52 -9) -81]
Test Case: 956 | Input/Output: [(-36 60 12 -2) -36]
Test Case: 957 | Input/Output: [(-76 -79 53 -15) -79]
Test Case: 958 | Input/Output: [(-91 -60 84 94) -91]
Test Case: 959 | Input/Output: [(-79 -19 17 -87) -87]
Test Case: 960 | Input/Output: [(-34 -27 14 40) -34]
Test Case: 961 | Input/Output: [(90 83 39 80) 39]
Test Case: 962 | Input/Output: [(63 -42 -5 -50) -50]
Test Case: 963 | Input/Output: [(32 6 98 -15) -15]
Test Case: 964 | Input/Output: [(21 44 -36 -5) -36]
Test Case: 965 | Input/Output: [(100 -62 -64 -68) -68]
Test Case: 966 | Input/Output: [(30 27 -55 -72) -72]
Test Case: 967 | Input/Output: [(-85 12 -46 -16) -85]
Test Case: 968 | Input/Output: [(-87 -46 52 15) -87]
Test Case: 969 | Input/Output: [(-9 32 -59 100) -59]
Test Case: 970 | Input/Output: [(25 -29 23 77) -29]
Test Case: 971 | Input/Output: [(-26 59 -57 19) -57]
Test Case: 972 | Input/Output: [(-19 -64 45 -1) -64]
Test Case: 973 | Input/Output: [(43 96 54 45) 43]
Test Case: 974 | Input/Output: [(-50 82 40 -69) -69]
Test Case: 975 | Input/Output: [(-59 18 -75 -26) -75]
Test Case: 976 | Input/Output: [(76 -9 -36 -68) -68]
Test Case: 977 | Input/Output: [(8 20 59 53) 8]
Test Case: 978 | Input/Output: [(16 24 17 38) 16]
Test Case: 979 | Input/Output: [(8 67 -13 78) -13]
Test Case: 980 | Input/Output: [(25 -67 36 14) -67]
Test Case: 981 | Input/Output: [(-1 26 37 -14) -14]
Test Case: 982 | Input/Output: [(-78 52 61 -39) -78]
Test Case: 983 | Input/Output: [(67 100 -61 52) -61]
Test Case: 984 | Input/Output: [(49 -73 39 -32) -73]
Test Case: 985 | Input/Output: [(72 -91 11 95) -91]
Test Case: 986 | Input/Output: [(37 -99 30 -84) -99]
Test Case: 987 | Input/Output: [(-77 69 -75 -41) -77]
Test Case: 988 | Input/Output: [(48 94 -13 57) -13]
Test Case: 989 | Input/Output: [(-3 -95 -41 17) -95]
Test Case: 990 | Input/Output: [(28 -88 -20 -42) -88]
Test Case: 991 | Input/Output: [(-60 -83 78 -76) -83]
Test Case: 992 | Input/Output: [(-85 -100 -34 -34) -100]
Test Case: 993 | Input/Output: [(82 -62 10 -57) -62]
Test Case: 994 | Input/Output: [(34 -99 30 -89) -99]
Test Case: 995 | Input/Output: [(-82 49 97 -52) -82]
Test Case: 996 | Input/Output: [(-64 -35 26 45) -64]
Test Case: 997 | Input/Output: [(-61 -1 35 64) -61]
Test Case: 998 | Input/Output: [(20 -24 -45 68) -45]
Test Case: 999 | Input/Output: [(-53 67 -40 80) -53]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 55 -9 -58 -53 44 24 -78 -83 115 -59 68 -88 17 -35 -82 54
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-87 -50 -50 -50] -87] [[-19 -19 -19 18] -19] [[65 65 93 65] 65] [[-89 -89 -89 -41] -89] [[17 17 18 17] 17] [[-35 -35 -35 -66] -66] [[-26 -26 4 -26] -26] [[15 -98 15 15] -98] [[-25 -25 -25 -79] -79] [[73 12 73 73] 12] [(-78 -78 -78 -78) -78] [(-37 -37 -37 -37) -37] [(-22 -22 -22 -22) -22] [(-97 -97 -97 -97) -97] [(67 67 67 67) 67] [(96 0 82 10) 0] [(86 32 64 62) 32] [(12 96 77 24) 12] [(47 26 18 39) 18] [(1 35 12 88) 1] [(2 20 46 19) 2] [(95 27 97 0) 0] [(23 72 48 58) 23] [(77 32 16 4) 4] [(30 13 16 44) 13] [(1 73 47 96) 1] [(27 64 62 49) 27] [(35 56 57 31) 31] [(7 62 88 70) 7] [(72 31 69 79) 31] [(34 83 81 12) 12] [(69 5 22 87) 5] [(26 37 45 70) 26] [(81 67 0 16) 0] [(90 13 11 39) 11] [(-21 -25 -36 -22) -36] [(-54 -41 91 -27) -54] [(-34 -2 31 -96) -96] [(91 52 53 88) 52] [(80 70 -40 21) -40] [(-77 -30 -10 -100) -100] [(85 -86 -57 38) -86] [(58 -46 44 -33) -46] [(-53 45 -16 -63) -63] [(-70 6 52 -2) -70] [(-73 42 -27 -16) -73] [(-92 20 57 -31) -92] [(22 18 56 90) 18] [(-19 15 49 -100) -100] [(33 66 -94 18) -94] [(-55 -25 55 63) -55] [(55 31 8 -94) -94] [(-12 -79 68 50) -79] [(-89 23 -66 -66) -89] [(-100 -45 89 -13) -100] [(-32 46 91 -9) -32] [(17 63 45 49) 17] [(35 -80 83 46) -80] [(-61 46 -23 77) -61] [(-39 64 -7 56) -39] [(-63 -96 3 -51) -96] [(-16 -60 -56 94) -60] [(99 84 38 21) 21] [(51 79 34 -69) -69] [(-31 -35 15 80) -35] [(-87 3 63 44) -87] [(23 44 66 24) 23] [(92 21 -67 61) -67] [(-19 34 -7 40) -19] [(-17 78 92 90) -17] [(-40 -36 -68 -57) -68] [(-62 23 -12 18) -62] [(-14 -60 -56 91) -60] [(-77 -94 4 97) -94] [(15 -1 -52 -46) -52] [(-71 -31 96 -99) -99] [(9 82 46 93) 9] [(-37 52 -42 -66) -66] [(-7 7 -34 30) -34] [(-78 -78 70 -64) -78] [(-13 -52 90 94) -52] [(-69 93 66 -19) -69] [(50 -98 30 19) -98] [(88 -66 -29 -14) -66] [(11 65 -87 56) -87] [(-99 69 40 41) -99] [(-80 33 -37 37) -80] [(14 -87 17 23) -87] [(49 26 -86 -20) -86] [(-57 86 -96 -4) -96] [(53 -80 100 -86) -86] [(55 95 -79 80) -79] [(18 62 90 4) 4] [(-34 -27 100 64) -34] [(6 52 2 -85) -85])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 641
Test mean error for best: 0.64100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: 15                 
Correct output: -79                 | Program output: -25                
Correct output: 12                  | Program output: 73                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 96                 
Correct output: 32                  | Program output: 86                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 47                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 95                 
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 77                 
Correct output: 13                  | Program output: 30                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 35                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 72                 
Correct output: 12                  | Program output: 34                 
Correct output: 5                   | Program output: 69                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 81                 
Correct output: 11                  | Program output: 90                 
Correct output: -36                 | Program output: -21                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -34                
Correct output: 52                  | Program output: 91                 
Correct output: -40                 | Program output: 80                 
Correct output: -100                | Program output: -77                
Correct output: -86                 | Program output: 85                 
Correct output: -46                 | Program output: 58                 
Correct output: -63                 | Program output: -53                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -19                
Correct output: -94                 | Program output: 33                 
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: 55                 
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -16                
Correct output: 21                  | Program output: 99                 
Correct output: -69                 | Program output: 51                 
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: 92                 
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -40                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -14                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: 15                 
Correct output: -99                 | Program output: -71                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -37                
Correct output: -34                 | Program output: -7                 
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 50                 
Correct output: -66                 | Program output: 88                 
Correct output: -87                 | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: 49                 
Correct output: -96                 | Program output: -57                
Correct output: -86                 | Program output: 53                 
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 18                 
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: 6                  
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_not} {:close 1, :instruction print_integer} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_empty} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction integer_sub} {:close 0, :instruction tag_exec_185} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_add} {:close 0, :instruction exec_s} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction tag_boolean_751} {:close 2, :instruction tagged_357} {:close 1, :instruction exec_if} {:close 2, :instruction exec_if} {:close 0, :instruction boolean_empty} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_max} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dup_times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_newline} {:close 1, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_lte} {:close 1, :instruction integer_dup_items} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_invert_second_then_and})
Lexicase best program: (exec_while (boolean_dup boolean_invert_first_then_and integer_add integer_shove exec_empty boolean_invert_second_then_and integer_shove boolean_empty) integer_gt in1 exec_k (boolean_not print_integer) (exec_flush integer_dup_times integer_dup integer_stackdepth) exec_swap (print_integer exec_noop exec_flush boolean_shove boolean_yankdup integer_eq exec_do*times (in2 integer_min boolean_or integer_sub) integer_yank) (exec_empty) boolean_invert_second_then_and integer_dup exec_shove (integer_mod) integer_mult exec_y_when_autoconstructing (exec_when (integer_dup_times) exec_y (integer_sub tag_exec_185 (print_boolean exec_swap (integer_add) (exec_s (exec_swap (boolean_swap exec_dup_items) (integer_gte exec_do*range (exec_y (exec_s () (boolean_flush exec_y_when_autoconstructing (exec_when (tag_boolean_751 tagged_357)) exec_if () (exec_if () () boolean_empty print_newline) boolean_invert_second_then_and integer_empty integer_max exec_dup (exec_while (integer_dup_times) integer_yankdup exec_do*range (integer_lt exec_when (boolean_and exec_dup_times (print_newline) integer_rot) in2 boolean_shove integer_lte) integer_dup_items) print_newline integer_mult integer_mod exec_empty) (integer_yankdup exec_y (boolean_frominteger integer_gte boolean_empty integer_dup_items exec_s (exec_s (boolean_invert_second_then_and) () ()) () ())))))) () ())))))
Lexicase best errors: [0 1 1 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 136
Percent parens: 0.309
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_not} {:close 1, :instruction print_integer} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_empty} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction integer_sub} {:close 0, :instruction tag_exec_185} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_add} {:close 0, :instruction exec_s} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction tag_boolean_751} {:close 2, :instruction tagged_357} {:close 1, :instruction exec_if} {:close 2, :instruction exec_if} {:close 0, :instruction boolean_empty} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_max} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dup_times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_newline} {:close 1, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_lte} {:close 1, :instruction integer_dup_items} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_invert_second_then_and})
Zero cases best program: (exec_while (boolean_dup boolean_invert_first_then_and integer_add integer_shove exec_empty boolean_invert_second_then_and integer_shove boolean_empty) integer_gt in1 exec_k (boolean_not print_integer) (exec_flush integer_dup_times integer_dup integer_stackdepth) exec_swap (print_integer exec_noop exec_flush boolean_shove boolean_yankdup integer_eq exec_do*times (in2 integer_min boolean_or integer_sub) integer_yank) (exec_empty) boolean_invert_second_then_and integer_dup exec_shove (integer_mod) integer_mult exec_y_when_autoconstructing (exec_when (integer_dup_times) exec_y (integer_sub tag_exec_185 (print_boolean exec_swap (integer_add) (exec_s (exec_swap (boolean_swap exec_dup_items) (integer_gte exec_do*range (exec_y (exec_s () (boolean_flush exec_y_when_autoconstructing (exec_when (tag_boolean_751 tagged_357)) exec_if () (exec_if () () boolean_empty print_newline) boolean_invert_second_then_and integer_empty integer_max exec_dup (exec_while (integer_dup_times) integer_yankdup exec_do*range (integer_lt exec_when (boolean_and exec_dup_times (print_newline) integer_rot) in2 boolean_shove integer_lte) integer_dup_items) print_newline integer_mult integer_mod exec_empty) (integer_yankdup exec_y (boolean_frominteger integer_gte boolean_empty integer_dup_items exec_s (exec_s (boolean_invert_second_then_and) () ()) () ())))))) () ())))))
Zero cases best errors: [0 1 1 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 136
Percent parens: 0.309
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 4 3 1 4 5 3 1 1 1)
Population mean number of elite cases: 0.02
Count of perfect (error zero) individuals by case: (1 4 3 1 4 5 3 1 1 1)
Population mean number of perfect (error zero) cases: 0.02
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_not} {:close 1, :instruction print_integer} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_empty} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction integer_sub} {:close 0, :instruction tag_exec_185} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_add} {:close 0, :instruction exec_s} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction tag_boolean_751} {:close 2, :instruction tagged_357} {:close 1, :instruction exec_if} {:close 2, :instruction exec_if} {:close 0, :instruction boolean_empty} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_max} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dup_times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_newline} {:close 1, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_lte} {:close 1, :instruction integer_dup_items} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_invert_second_then_and})
Best program: (exec_while (boolean_dup boolean_invert_first_then_and integer_add integer_shove exec_empty boolean_invert_second_then_and integer_shove boolean_empty) integer_gt in1 exec_k (boolean_not print_integer) (exec_flush integer_dup_times integer_dup integer_stackdepth) exec_swap (print_integer exec_noop exec_flush boolean_shove boolean_yankdup integer_eq exec_do*times (in2 integer_min boolean_or integer_sub) integer_yank) (exec_empty) boolean_invert_second_then_and integer_dup exec_shove (integer_mod) integer_mult exec_y_when_autoconstructing (exec_when (integer_dup_times) exec_y (integer_sub tag_exec_185 (print_boolean exec_swap (integer_add) (exec_s (exec_swap (boolean_swap exec_dup_items) (integer_gte exec_do*range (exec_y (exec_s () (boolean_flush exec_y_when_autoconstructing (exec_when (tag_boolean_751 tagged_357)) exec_if () (exec_if () () boolean_empty print_newline) boolean_invert_second_then_and integer_empty integer_max exec_dup (exec_while (integer_dup_times) integer_yankdup exec_do*range (integer_lt exec_when (boolean_and exec_dup_times (print_newline) integer_rot) in2 boolean_shove integer_lte) integer_dup_items) print_newline integer_mult integer_mod exec_empty) (integer_yankdup exec_y (boolean_frominteger integer_gte boolean_empty integer_dup_items exec_s (exec_s (boolean_invert_second_then_and) () ()) () ())))))) () ())))))
Errors: [0 1 1 0 1 1 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 94
Size: 136
Percent parens: 0.309
--- Population Statistics ---
Average total errors in population: 9.976
Median total errors in population: 10
Error averages by case: (0.999 0.996 0.997 0.999 0.996 0.995 0.997 0.999 0.999 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 47.222
Average program size in population (points): 65.227
Average percent parens in population: 0.281
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.259
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 472770
--- Timings ---
Current time: 1559593828643 milliseconds
Total Time:           2.3 seconds
Initialization:       0.1 seconds,  4.8%
Reproduction:         0.8 seconds, 33.0%
Fitness Testing:      1.5 seconds, 62.3%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 641
Test mean error for best: 0.64100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: 15                 
Correct output: -79                 | Program output: -25                
Correct output: 12                  | Program output: 73                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 96                 
Correct output: 32                  | Program output: 86                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 47                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 95                 
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 77                 
Correct output: 13                  | Program output: 30                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 35                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 72                 
Correct output: 12                  | Program output: 34                 
Correct output: 5                   | Program output: 69                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 81                 
Correct output: 11                  | Program output: 90                 
Correct output: -36                 | Program output: -21                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -34                
Correct output: 52                  | Program output: 91                 
Correct output: -40                 | Program output: 80                 
Correct output: -100                | Program output: -77                
Correct output: -86                 | Program output: 85                 
Correct output: -46                 | Program output: 58                 
Correct output: -63                 | Program output: -53                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -19                
Correct output: -94                 | Program output: 33                 
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: 55                 
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -16                
Correct output: 21                  | Program output: 99                 
Correct output: -69                 | Program output: 51                 
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: 92                 
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -40                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -14                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: 15                 
Correct output: -99                 | Program output: -71                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -37                
Correct output: -34                 | Program output: -7                 
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 50                 
Correct output: -66                 | Program output: 88                 
Correct output: -87                 | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: 49                 
Correct output: -96                 | Program output: -57                
Correct output: -86                 | Program output: 53                 
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 18                 
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: 6                  
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_empty} {:close 1, :instruction print_integer} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_empty} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction integer_sub} {:close 0, :instruction tag_exec_185} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction tag_boolean_751} {:close 2, :instruction tagged_357} {:close 1, :instruction exec_if} {:close 0, :instruction boolean_yankdup} {:close 2, :instruction exec_if} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_max} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_while} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_dup_times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_when} {:close 1, :instruction print_newline} {:close 1, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_lte} {:close 1, :instruction integer_dup_items} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_invert_second_then_and})
Lexicase best program: (exec_while (boolean_dup boolean_invert_first_then_and integer_add integer_shove exec_empty boolean_invert_second_then_and integer_shove boolean_empty) integer_gt in1 exec_k (boolean_not exec_empty print_integer) (exec_flush integer_dup_times integer_dup integer_stackdepth) exec_swap (print_integer exec_noop exec_flush boolean_shove boolean_yankdup integer_eq exec_do*times (in2 integer_min boolean_or integer_sub) integer_yank) (exec_empty) boolean_invert_second_then_and integer_dup exec_shove (integer_mod) integer_mult exec_y_when_autoconstructing (exec_when (integer_dup_times) exec_y (integer_sub tag_exec_185 (print_boolean exec_swap (integer_add) (exec_dup (exec_swap (boolean_swap exec_dup_items) (integer_gte exec_do*range (exec_y (exec_s () (boolean_flush exec_y_when_autoconstructing (exec_when (tag_boolean_751 tagged_357)) exec_if () (boolean_yankdup exec_if () () print_newline) boolean_yankdup boolean_invert_second_then_and integer_empty integer_max exec_dup (exec_while (integer_rot integer_dup_times) integer_yankdup exec_k (exec_do*range (integer_lt exec_when (print_newline) integer_rot) in2 boolean_shove integer_lte) (integer_dup_items) print_newline integer_mult integer_mod exec_empty) integer_yankdup exec_y (boolean_swap) boolean_frominteger integer_gte boolean_empty integer_dup_items exec_s (exec_s (boolean_invert_second_then_and) () ()) () ()) ())))))))))
Lexicase best errors: [0 1 0 0 0 1 0 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 138
Percent parens: 0.297
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_empty} {:close 1, :instruction print_integer} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_empty} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction integer_sub} {:close 0, :instruction tag_exec_185} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction tag_boolean_751} {:close 2, :instruction tagged_357} {:close 1, :instruction exec_if} {:close 0, :instruction boolean_yankdup} {:close 2, :instruction exec_if} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_max} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_while} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_dup_times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_when} {:close 1, :instruction print_newline} {:close 1, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_lte} {:close 1, :instruction integer_dup_items} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_invert_second_then_and})
Zero cases best program: (exec_while (boolean_dup boolean_invert_first_then_and integer_add integer_shove exec_empty boolean_invert_second_then_and integer_shove boolean_empty) integer_gt in1 exec_k (boolean_not exec_empty print_integer) (exec_flush integer_dup_times integer_dup integer_stackdepth) exec_swap (print_integer exec_noop exec_flush boolean_shove boolean_yankdup integer_eq exec_do*times (in2 integer_min boolean_or integer_sub) integer_yank) (exec_empty) boolean_invert_second_then_and integer_dup exec_shove (integer_mod) integer_mult exec_y_when_autoconstructing (exec_when (integer_dup_times) exec_y (integer_sub tag_exec_185 (print_boolean exec_swap (integer_add) (exec_dup (exec_swap (boolean_swap exec_dup_items) (integer_gte exec_do*range (exec_y (exec_s () (boolean_flush exec_y_when_autoconstructing (exec_when (tag_boolean_751 tagged_357)) exec_if () (boolean_yankdup exec_if () () print_newline) boolean_yankdup boolean_invert_second_then_and integer_empty integer_max exec_dup (exec_while (integer_rot integer_dup_times) integer_yankdup exec_k (exec_do*range (integer_lt exec_when (print_newline) integer_rot) in2 boolean_shove integer_lte) (integer_dup_items) print_newline integer_mult integer_mod exec_empty) integer_yankdup exec_y (boolean_swap) boolean_frominteger integer_gte boolean_empty integer_dup_items exec_s (exec_s (boolean_invert_second_then_and) () ()) () ()) ())))))))))
Zero cases best errors: [0 1 0 0 0 1 0 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 138
Percent parens: 0.297
--- Lexicase Population Statistics ---
Count of elite individuals by case: (266 136 266 542 511 25 508 105 267 24)
Population mean number of elite cases: 2.65
Count of perfect (error zero) individuals by case: (266 136 266 542 511 25 508 105 267 24)
Population mean number of perfect (error zero) cases: 2.65
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction boolean_not} {:close 1, :instruction print_integer} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*times} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_empty} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_and} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction integer_sub} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_add} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction tag_boolean_751} {:close 2, :instruction tagged_357} {:close 1, :instruction exec_if} {:close 2, :instruction exec_if} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_newline} {:close 1, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_lte} {:close 1, :instruction integer_dup_items} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_invert_second_then_and})
Best program: (exec_while (boolean_dup boolean_invert_first_then_and integer_add integer_shove exec_empty boolean_invert_second_then_and integer_mod integer_shove boolean_empty) integer_gt in1 boolean_not print_integer exec_flush integer_dup_times integer_dup integer_stackdepth exec_swap (print_integer exec_noop exec_flush boolean_shove print_newline boolean_yankdup exec_do*times (in2 integer_min boolean_or integer_sub) integer_yank) (exec_empty) boolean_invert_second_then_and integer_dup exec_shove (integer_mod) integer_mult exec_y_when_autoconstructing (exec_when (boolean_and integer_dup_times) exec_y (integer_sub print_boolean exec_swap (integer_add) (exec_s (boolean_swap exec_dup_items) (integer_gte exec_do*range (exec_y (exec_s () (boolean_flush exec_y_when_autoconstructing (exec_when (tag_boolean_751 tagged_357)) exec_if () (exec_if () () boolean_empty boolean_invert_second_then_and integer_empty exec_dup (boolean_pop exec_while (boolean_not integer_dup_times) exec_do*range (integer_lt exec_when (boolean_and exec_dup_times (print_newline) integer_rot) in2 boolean_shove integer_lte) integer_dup_items) print_newline integer_mult integer_mod exec_empty) integer_yankdup exec_y (boolean_frominteger integer_gte integer_dup_items integer_yankdup exec_s (boolean_invert_second_then_and) () ())) ()))) ()))))
Errors: [0 1 0 0 0 1 0 1 0 1]
Total: 4
Mean: 0.4
Genome size: 91
Size: 125
Percent parens: 0.272
--- Population Statistics ---
Average total errors in population: 7.35
Median total errors in population: 6
Error averages by case: (0.734 0.864 0.734 0.458 0.489 0.975 0.492 0.895 0.733 0.976)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 71.478
Average program size in population (points): 100.879
Average percent parens in population: 0.274
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 8
Genome diversity (% unique genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.007
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 885955
--- Timings ---
Current time: 1559593830635 milliseconds
Total Time:           4.4 seconds
Initialization:       0.1 seconds,  2.5%
Reproduction:         1.8 seconds, 39.8%
Fitness Testing:      2.2 seconds, 49.0%
Report:               0.4 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 228
Test mean error for best: 0.22800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -66                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: 15                 
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 73                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 10                 
Correct output: 32                  | Program output: 62                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 18                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 16                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 69                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 22                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 0                  
Correct output: 11                  | Program output: 11                 
Correct output: -36                 | Program output: -36                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 53                 
Correct output: -40                 | Program output: -40                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -57                
Correct output: -46                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: -94                
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -56                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: -67                
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -68                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -56                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: -52                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -34                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 19                 
Correct output: -66                 | Program output: -29                
Correct output: -87                 | Program output: -87                
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_s} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_do*range} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in3} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_456} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_newline} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_max} {:close 1, :instruction tagged_154})
Lexicase best program: (boolean_and boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_eq exec_s (exec_empty boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup boolean_yank) (integer_sub boolean_and) (integer_dec boolean_dup exec_do*range ()) integer_lt) integer_yankdup) (integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte in4) exec_noop) (exec_noop integer_sub in1 integer_min integer_max in3 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and) boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items tagged_456 boolean_rot boolean_swap integer_yank boolean_dup integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_pop integer_shove boolean_dup exec_flush) exec_pop (integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) (integer_empty exec_do*while (tagged_602 boolean_dup_times exec_eq integer_yank boolean_xor) integer_inc exec_shove (boolean_dup_times print_newline integer_eq boolean_flush integer_pop exec_yankdup) integer_yankdup) () in3 boolean_not exec_do*range (integer_min exec_flush) integer_shove exec_dup_times (integer_sub integer_stackdepth integer_lte exec_dup_items) integer_fromboolean exec_do*times (exec_empty integer_max tagged_154))
Lexicase best errors: [0 0 1 0 0 1 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 129
Percent parens: 0.178
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_s} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_do*range} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in3} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_456} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_newline} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_max} {:close 1, :instruction tagged_154})
Zero cases best program: (boolean_and boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_eq exec_s (exec_empty boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup boolean_yank) (integer_sub boolean_and) (integer_dec boolean_dup exec_do*range ()) integer_lt) integer_yankdup) (integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte in4) exec_noop) (exec_noop integer_sub in1 integer_min integer_max in3 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and) boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items tagged_456 boolean_rot boolean_swap integer_yank boolean_dup integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_pop integer_shove boolean_dup exec_flush) exec_pop (integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) (integer_empty exec_do*while (tagged_602 boolean_dup_times exec_eq integer_yank boolean_xor) integer_inc exec_shove (boolean_dup_times print_newline integer_eq boolean_flush integer_pop exec_yankdup) integer_yankdup) () in3 boolean_not exec_do*range (integer_min exec_flush) integer_shove exec_dup_times (integer_sub integer_stackdepth integer_lte exec_dup_items) integer_fromboolean exec_do*times (exec_empty integer_max tagged_154))
Zero cases best errors: [0 0 1 0 0 1 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 129
Percent parens: 0.178
--- Lexicase Population Statistics ---
Count of elite individuals by case: (311 305 89 306 127 88 305 100 308 86)
Population mean number of elite cases: 2.03
Count of perfect (error zero) individuals by case: (311 305 89 306 127 88 305 100 308 86)
Population mean number of perfect (error zero) cases: 2.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_s} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_do*range} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in3} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_456} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_newline} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_max} {:close 1, :instruction tagged_154})
Best program: (boolean_and boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_eq exec_s (exec_empty boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup boolean_yank) (integer_sub boolean_and) (integer_dec boolean_dup exec_do*range ()) integer_lt) integer_yankdup) (integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte in4) exec_noop) (exec_noop integer_sub in1 integer_min integer_max in3 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and) boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items tagged_456 boolean_rot boolean_swap integer_yank boolean_dup integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_pop integer_shove boolean_dup exec_flush) exec_pop (integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) (integer_empty exec_do*while (tagged_602 boolean_dup_times exec_eq integer_yank boolean_xor) integer_inc exec_shove (boolean_dup_times print_newline integer_eq boolean_flush integer_pop exec_yankdup) integer_yankdup) () in3 boolean_not exec_do*range (integer_min exec_flush) integer_shove exec_dup_times (integer_sub integer_stackdepth integer_lte exec_dup_items) integer_fromboolean exec_do*times (exec_empty integer_max tagged_154))
Errors: [0 0 1 0 0 1 0 0 0 1]
Total: 3
Mean: 0.3
Genome size: 106
Size: 129
Percent parens: 0.178
--- Population Statistics ---
Average total errors in population: 7.975
Median total errors in population: 9
Error averages by case: (0.689 0.695 0.911 0.694 0.873 0.912 0.695 0.9 0.692 0.914)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 81.375
Average program size in population (points): 108.807
Average percent parens in population: 0.242
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.008
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.19
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1335668
--- Timings ---
Current time: 1559593832982 milliseconds
Total Time:           6.5 seconds
Initialization:       0.1 seconds,  1.7%
Reproduction:         2.9 seconds, 45.1%
Fitness Testing:      2.8 seconds, 43.1%
Report:               0.7 seconds, 10.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 228
Test mean error for best: 0.22800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -66                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: 15                 
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 73                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 10                 
Correct output: 32                  | Program output: 62                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 18                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 16                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 69                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 22                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 0                  
Correct output: 11                  | Program output: 11                 
Correct output: -36                 | Program output: -36                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 53                 
Correct output: -40                 | Program output: -40                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -57                
Correct output: -46                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: -94                
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -56                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: -67                
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -68                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -56                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: -52                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -34                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 19                 
Correct output: -66                 | Program output: -29                
Correct output: -87                 | Program output: -87                
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_s} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in3} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_456} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction print_newline} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 0, :instruction in2} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_max} {:close 1, :instruction tagged_154} {:close 2, :instruction integer_max})
Lexicase best program: (boolean_and boolean_not boolean_and boolean_flush boolean_empty tagged_844 exec_eq exec_s (exec_empty boolean_frominteger integer_mod exec_s (boolean_dup boolean_yank) (integer_mult integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_shove) (integer_yankdup) (integer_lte exec_shove (exec_yankdup print_integer boolean_dup_times exec_shove (boolean_dup_times integer_mult print_integer) integer_lte in4) exec_noop) exec_noop integer_sub in1 integer_min integer_max in3 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items tagged_456 boolean_rot boolean_swap integer_yank boolean_dup integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor integer_shove boolean_dup exec_flush) exec_pop (integer_eq integer_empty boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) (exec_do*while (tagged_602 boolean_dup_times boolean_pop exec_eq boolean_xor) integer_inc exec_shove (print_newline integer_eq boolean_flush integer_pop exec_yankdup) integer_yankdup) () in3 boolean_not exec_do*range (boolean_eq integer_min exec_flush) integer_shove in2 exec_dup_times (integer_sub integer_stackdepth exec_dup_items) exec_do*times (exec_empty integer_max tagged_154) integer_max)
Lexicase best errors: [0 0 0 0 0 1 0 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 123
Percent parens: 0.171
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_s} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in3} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_456} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction print_newline} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 0, :instruction in2} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_max} {:close 1, :instruction tagged_154} {:close 2, :instruction integer_max})
Zero cases best program: (boolean_and boolean_not boolean_and boolean_flush boolean_empty tagged_844 exec_eq exec_s (exec_empty boolean_frominteger integer_mod exec_s (boolean_dup boolean_yank) (integer_mult integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_shove) (integer_yankdup) (integer_lte exec_shove (exec_yankdup print_integer boolean_dup_times exec_shove (boolean_dup_times integer_mult print_integer) integer_lte in4) exec_noop) exec_noop integer_sub in1 integer_min integer_max in3 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items tagged_456 boolean_rot boolean_swap integer_yank boolean_dup integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor integer_shove boolean_dup exec_flush) exec_pop (integer_eq integer_empty boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) (exec_do*while (tagged_602 boolean_dup_times boolean_pop exec_eq boolean_xor) integer_inc exec_shove (print_newline integer_eq boolean_flush integer_pop exec_yankdup) integer_yankdup) () in3 boolean_not exec_do*range (boolean_eq integer_min exec_flush) integer_shove in2 exec_dup_times (integer_sub integer_stackdepth exec_dup_items) exec_do*times (exec_empty integer_max tagged_154) integer_max)
Zero cases best errors: [0 0 0 0 0 1 0 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 123
Percent parens: 0.171
--- Lexicase Population Statistics ---
Count of elite individuals by case: (171 235 492 228 236 75 233 438 78 234)
Population mean number of elite cases: 2.42
Count of perfect (error zero) individuals by case: (171 235 492 228 236 75 233 438 78 234)
Population mean number of perfect (error zero) cases: 2.42
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_not} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_s} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_do*range} {:close 0, :instruction integer_dec} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_max} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_456} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_pop} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 2, :instruction integer_yankdup} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_max} {:close 1, :instruction tagged_154})
Best program: (boolean_not boolean_and boolean_flush boolean_empty exec_eq exec_s (integer_pop exec_empty boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup boolean_yank) (integer_sub boolean_and) (integer_dec boolean_dup exec_do*range ()) integer_dec integer_lt) integer_yankdup) (integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte in4) exec_noop) (exec_noop integer_sub in1 integer_min integer_dup integer_max integer_gte in3 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and) boolean_dup_items exec_y (tagged_452 exec_s_when_autoconstructing (boolean_dup_items tagged_456 boolean_rot boolean_swap integer_yank boolean_dup integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor integer_flush boolean_pop integer_shove boolean_dup exec_flush) exec_shove (exec_pop (integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) exec_stackdepth integer_empty exec_do*while (exec_pop () tagged_602 boolean_dup_times exec_eq integer_yank boolean_xor) integer_inc exec_shove (boolean_dup_times print_newline boolean_yankdup integer_eq boolean_flush integer_pop exec_yankdup) integer_yankdup) () (boolean_frominteger in3 boolean_not exec_do*range (integer_min exec_flush) integer_shove exec_dup_times (integer_sub integer_lte exec_dup_items) exec_do*times (exec_empty integer_max tagged_154))))
Errors: [0 0 0 0 0 1 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 112
Size: 138
Percent parens: 0.188
--- Population Statistics ---
Average total errors in population: 7.58
Median total errors in population: 9
Error averages by case: (0.829 0.765 0.508 0.772 0.764 0.925 0.767 0.562 0.922 0.766)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 104.231
Average program size in population (points): 128.123
Average percent parens in population: 0.186
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.009
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.216
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1904467
--- Timings ---
Current time: 1559593835242 milliseconds
Total Time:           8.8 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         4.2 seconds, 47.3%
Fitness Testing:      3.3 seconds, 37.9%
Report:               1.2 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 198
Test mean error for best: 0.19800
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 1
Test Case   14 | Error: 0
Test Case   15 | Error: 1
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 1
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 1
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 1
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 1
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 1
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 1
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 1
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 1
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 1
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 1
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 1
Test Case  354 | Error: 1
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 1
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 1
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 1
Test Case  384 | Error: 1
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 1
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 1
Test Case  412 | Error: 0
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 1
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 1
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 1
Test Case  566 | Error: 0
Test Case  567 | Error: 1
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 1
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 1
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 1
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 1
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 1
Test Case  636 | Error: 0
Test Case  637 | Error: 1
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 1
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 1
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 1
Test Case  687 | Error: 0
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 1
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 1
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 1
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 1
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 1
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 1
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 1
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 1
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 0
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 1
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 1
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 1
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 0
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 1
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 1
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 1
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -66                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: -98                
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 12                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 0                  
Correct output: 32                  | Program output: 32                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 26                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 13                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 31                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 16                 
Correct output: 11                  | Program output: 13                 
Correct output: -36                 | Program output: -25                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 52                 
Correct output: -40                 | Program output: 21                 
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -86                
Correct output: -46                 | Program output: -46                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 18                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: 18                 
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -79                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -35                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: 21                 
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -57                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -60                
Correct output: -94                 | Program output: -94                
Correct output: -52                 | Program output: -46                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -7                 
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -52                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: -87                 | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: -87                
Correct output: -86                 | Program output: -20                
Correct output: -96                 | Program output: -57                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_do*range} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 0, :instruction in4} {:close 0, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in2} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction in3} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_do*while} {:close 1, :instruction tag_boolean_390} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_newline} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 1, :instruction tagged_154})
Lexicase best program: (boolean_and boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_dup boolean_yank) (integer_sub boolean_and) (integer_dec boolean_dup exec_do*range ()) integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times exec_shove (boolean_invert_second_then_and boolean_dup_times integer_mult print_integer) integer_lte in4 exec_noop in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and) boolean_dup_items integer_gte tagged_452 exec_s_when_autoconstructing (boolean_xor boolean_dup_items boolean_swap integer_yank boolean_dup in3 integer_dup_items boolean_shove integer_mod exec_y (integer_fromboolean boolean_xor boolean_pop exec_dup (integer_shove boolean_dup exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) (exec_do*while (integer_empty exec_do*while (tag_boolean_390) boolean_invert_first_then_and tagged_602 boolean_dup_times exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline integer_eq boolean_flush integer_pop integer_yankdup)) in3 boolean_not integer_min exec_flush) (exec_s (exec_dup_times (integer_stackdepth integer_lte exec_dup_items) integer_fromboolean) (exec_do*times (exec_empty tagged_154)) ())) () ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 126
Percent parens: 0.206
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_do*range} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 0, :instruction in4} {:close 0, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in2} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 0, :instruction in3} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_dup} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_do*while} {:close 1, :instruction tag_boolean_390} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction tagged_602} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_newline} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 1, :instruction tagged_154})
Zero cases best program: (boolean_and boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_dup boolean_yank) (integer_sub boolean_and) (integer_dec boolean_dup exec_do*range ()) integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times exec_shove (boolean_invert_second_then_and boolean_dup_times integer_mult print_integer) integer_lte in4 exec_noop in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_invert_second_then_and) boolean_dup_items integer_gte tagged_452 exec_s_when_autoconstructing (boolean_xor boolean_dup_items boolean_swap integer_yank boolean_dup in3 integer_dup_items boolean_shove integer_mod exec_y (integer_fromboolean boolean_xor boolean_pop exec_dup (integer_shove boolean_dup exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte integer_dup) boolean_dup_items) (exec_do*while (integer_empty exec_do*while (tag_boolean_390) boolean_invert_first_then_and tagged_602 boolean_dup_times exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline integer_eq boolean_flush integer_pop integer_yankdup)) in3 boolean_not integer_min exec_flush) (exec_s (exec_dup_times (integer_stackdepth integer_lte exec_dup_items) integer_fromboolean) (exec_do*times (exec_empty tagged_154)) ())) () ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 126
Percent parens: 0.206
--- Lexicase Population Statistics ---
Count of elite individuals by case: (432 152 492 152 337 336 501 213 331 143)
Population mean number of elite cases: 3.09
Count of perfect (error zero) individuals by case: (432 152 492 152 337 336 501 213 331 143)
Population mean number of perfect (error zero) cases: 3.09
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_not} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction tagged_844} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_mult} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mult} {:close 1, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_noop} {:close 1, :instruction in4} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction in2} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tagged_452} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_do*while} {:close 1, :instruction tag_boolean_390} {:close 0, :instruction tagged_602} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 2, :instruction integer_yankdup} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_min} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_max})
Best program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 95
Size: 117
Percent parens: 0.188
--- Population Statistics ---
Average total errors in population: 6.911
Median total errors in population: 8
Error averages by case: (0.568 0.848 0.508 0.848 0.663 0.664 0.499 0.787 0.669 0.857)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 101.133
Average program size in population (points): 124.555
Average percent parens in population: 0.187
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.011
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.216
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2625199
--- Timings ---
Current time: 1559593837577 milliseconds
Total Time:          11.1 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.3 seconds, 48.0%
Fitness Testing:      4.0 seconds, 35.6%
Report:               1.7 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 4
Successful program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 117


Auto-simplifying with starting size: 117
step: 0
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 500
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 1000
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 1500
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 2000
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 2500
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 3000
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 3500
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 4000
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 4500
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

step: 5000
program: (boolean_not boolean_yankdup boolean_and boolean_flush boolean_empty tagged_844 exec_s (boolean_frominteger exec_while (integer_mod exec_s (boolean_empty boolean_dup integer_mult) (integer_sub boolean_and) (integer_dec boolean_dup integer_lt) integer_lte exec_shove (exec_yankdup boolean_dup_times integer_gte exec_shove (boolean_dup_times integer_mult print_integer) integer_lte exec_noop in4) integer_sub in1 integer_min integer_max in2 exec_swap () (integer_min print_integer) integer_mult boolean_dup_items tagged_452 exec_s_when_autoconstructing (boolean_dup_items boolean_swap integer_yank print_integer in3 integer_dup_items integer_mod exec_y (integer_fromboolean boolean_xor boolean_xor boolean_pop integer_shove exec_flush) integer_eq exec_eq boolean_frominteger print_boolean integer_dup_times integer_lte boolean_dup_items) (integer_empty exec_do*while (tag_boolean_390) tagged_602 exec_k_when_autoconstructing (boolean_dup_times boolean_dup_items) (exec_eq integer_yank integer_inc exec_shove (boolean_dup_times print_newline boolean_flush integer_pop exec_yankdup) integer_yankdup)) (in3 boolean_not integer_min exec_flush) integer_shove exec_dup_times (integer_stackdepth integer_lte integer_mult exec_dup_items) integer_fromboolean) exec_do*times (exec_empty integer_max)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 117

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 198
Test mean error for best: 0.19800
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 1
Test Case   14 | Error: 0
Test Case   15 | Error: 1
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 1
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 1
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 1
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 1
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 1
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 1
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 1
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 1
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 1
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 1
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 1
Test Case  354 | Error: 1
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 1
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 1
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 1
Test Case  384 | Error: 1
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 1
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 1
Test Case  412 | Error: 0
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 1
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 1
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 1
Test Case  566 | Error: 0
Test Case  567 | Error: 1
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 1
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 1
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 1
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 1
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 1
Test Case  636 | Error: 0
Test Case  637 | Error: 1
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 1
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 1
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 1
Test Case  687 | Error: 0
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 1
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 1
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 1
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 1
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 1
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 1
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 1
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 1
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 0
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 1
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 1
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 1
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 0
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 1
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 1
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 1
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -66                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: -98                
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 12                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 0                  
Correct output: 32                  | Program output: 32                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 26                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 13                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 31                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 16                 
Correct output: 11                  | Program output: 13                 
Correct output: -36                 | Program output: -25                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 52                 
Correct output: -40                 | Program output: 21                 
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -86                
Correct output: -46                 | Program output: -46                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 18                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: 18                 
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -79                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -35                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: 21                 
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -57                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -60                
Correct output: -94                 | Program output: -94                
Correct output: -52                 | Program output: -46                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -7                 
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -52                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: -87                 | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: -87                
Correct output: -86                 | Program output: -20                
Correct output: -96                 | Program output: -57                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
