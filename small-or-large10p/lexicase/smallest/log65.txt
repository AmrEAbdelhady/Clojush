Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[44 25 44 44] 25] [[73 4 73 73] 4] [[1 1 1 51] 1] [[-32 74 74 74] -32] [[15 -75 15 15] -75] [[71 71 71 -18] -18] [[7 10 7 7] 7] [[58 54 54 54] 54] [[79 79 11 79] 11] [[21 81 81 81] 21] [(20 20 20 20) 20] [(25 25 25 25) 25] [(77 77 77 77) 77] [(51 51 51 51) 51] [(65 65 65 65) 65] [(5 40 62 5) 5] [(70 97 39 79) 39] [(16 98 100 12) 12] [(89 39 75 79) 39] [(95 44 57 12) 12] [(79 80 34 73) 34] [(15 81 34 16) 15] [(5 43 4 60) 4] [(23 25 37 52) 23] [(69 22 72 33) 22] [(36 49 81 5) 5] [(56 68 37 84) 37] [(26 55 58 94) 26] [(78 15 53 21) 15] [(47 61 80 5) 5] [(86 48 1 16) 1] [(97 79 47 55) 47] [(58 44 21 62) 21] [(98 20 99 47) 20] [(91 97 95 14) 14] [(53 -44 51 70) -44] [(24 -71 -38 -94) -94] [(77 44 100 -13) -13] [(-13 44 10 -78) -78] [(41 4 -33 99) -33] [(98 -11 77 -27) -27] [(16 -77 -51 -69) -77] [(75 -86 10 -24) -86] [(1 -97 -69 90) -97] [(-71 -88 27 -64) -88] [(11 11 55 2) 2] [(-50 27 43 -44) -50] [(-21 8 -53 -5) -53] [(-45 -93 89 -47) -93] [(-88 -57 -62 -77) -88] [(-85 81 -68 -59) -85] [(-17 64 76 30) -17] [(-83 -79 28 -85) -85] [(21 -46 47 -54) -54] [(97 -39 -3 -23) -39] [(-11 84 -31 25) -31] [(70 -34 43 -87) -87] [(-25 -93 68 -18) -93] [(-44 -38 -34 -76) -76] [(-77 -64 -21 -98) -98] [(-22 -14 -31 -67) -67] [(-94 71 -37 73) -94] [(-39 -44 9 1) -44] [(90 -33 -17 -63) -63] [(96 -30 17 80) -30] [(60 7 65 -26) -26] [(-4 -86 -65 51) -86] [(42 79 -65 -56) -65] [(56 -90 -19 44) -90] [(76 0 -84 72) -84] [(86 5 93 97) 5] [(85 -43 -92 -30) -92] [(-34 -83 5 -100) -100] [(-90 34 7 -1) -90] [(-49 64 -19 29) -49] [(-62 -51 6 -9) -62] [(66 48 33 -75) -75] [(-75 56 60 88) -75] [(-33 -84 -32 16) -84] [(-9 -53 51 -9) -53] [(40 -69 95 40) -69] [(14 68 3 -49) -49] [(32 -23 -73 -89) -89] [(-40 -39 -10 43) -40] [(-9 33 83 -1) -9] [(-36 -47 -33 -90) -90] [(-53 43 94 -32) -53] [(-58 23 -1 29) -58] [(-60 -39 -48 3) -60] [(30 14 -6 -75) -75] [(-57 -37 -64 12) -64] [(60 60 -47 -43) -47] [(-79 -21 -94 33) -94] [(25 -62 78 -75) -75] [(53 -2 -28 58) -28])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[44 25 44 44] 25]
Train Case:   6 | Input/Output: [[73 4 73 73] 4]
Train Case:   7 | Input/Output: [[1 1 1 51] 1]
Train Case:   8 | Input/Output: [[-32 74 74 74] -32]
Train Case:   9 | Input/Output: [[15 -75 15 15] -75]
Train Case:  10 | Input/Output: [[71 71 71 -18] -18]
Train Case:  11 | Input/Output: [[7 10 7 7] 7]
Train Case:  12 | Input/Output: [[58 54 54 54] 54]
Train Case:  13 | Input/Output: [[79 79 11 79] 11]
Train Case:  14 | Input/Output: [[21 81 81 81] 21]
Train Case:  15 | Input/Output: [(20 20 20 20) 20]
Train Case:  16 | Input/Output: [(25 25 25 25) 25]
Train Case:  17 | Input/Output: [(77 77 77 77) 77]
Train Case:  18 | Input/Output: [(51 51 51 51) 51]
Train Case:  19 | Input/Output: [(65 65 65 65) 65]
Train Case:  20 | Input/Output: [(5 40 62 5) 5]
Train Case:  21 | Input/Output: [(70 97 39 79) 39]
Train Case:  22 | Input/Output: [(16 98 100 12) 12]
Train Case:  23 | Input/Output: [(89 39 75 79) 39]
Train Case:  24 | Input/Output: [(95 44 57 12) 12]
Train Case:  25 | Input/Output: [(79 80 34 73) 34]
Train Case:  26 | Input/Output: [(15 81 34 16) 15]
Train Case:  27 | Input/Output: [(5 43 4 60) 4]
Train Case:  28 | Input/Output: [(23 25 37 52) 23]
Train Case:  29 | Input/Output: [(69 22 72 33) 22]
Train Case:  30 | Input/Output: [(36 49 81 5) 5]
Train Case:  31 | Input/Output: [(56 68 37 84) 37]
Train Case:  32 | Input/Output: [(26 55 58 94) 26]
Train Case:  33 | Input/Output: [(78 15 53 21) 15]
Train Case:  34 | Input/Output: [(47 61 80 5) 5]
Train Case:  35 | Input/Output: [(86 48 1 16) 1]
Train Case:  36 | Input/Output: [(97 79 47 55) 47]
Train Case:  37 | Input/Output: [(58 44 21 62) 21]
Train Case:  38 | Input/Output: [(98 20 99 47) 20]
Train Case:  39 | Input/Output: [(91 97 95 14) 14]
Train Case:  40 | Input/Output: [(53 -44 51 70) -44]
Train Case:  41 | Input/Output: [(24 -71 -38 -94) -94]
Train Case:  42 | Input/Output: [(77 44 100 -13) -13]
Train Case:  43 | Input/Output: [(-13 44 10 -78) -78]
Train Case:  44 | Input/Output: [(41 4 -33 99) -33]
Train Case:  45 | Input/Output: [(98 -11 77 -27) -27]
Train Case:  46 | Input/Output: [(16 -77 -51 -69) -77]
Train Case:  47 | Input/Output: [(75 -86 10 -24) -86]
Train Case:  48 | Input/Output: [(1 -97 -69 90) -97]
Train Case:  49 | Input/Output: [(-71 -88 27 -64) -88]
Train Case:  50 | Input/Output: [(11 11 55 2) 2]
Train Case:  51 | Input/Output: [(-50 27 43 -44) -50]
Train Case:  52 | Input/Output: [(-21 8 -53 -5) -53]
Train Case:  53 | Input/Output: [(-45 -93 89 -47) -93]
Train Case:  54 | Input/Output: [(-88 -57 -62 -77) -88]
Train Case:  55 | Input/Output: [(-85 81 -68 -59) -85]
Train Case:  56 | Input/Output: [(-17 64 76 30) -17]
Train Case:  57 | Input/Output: [(-83 -79 28 -85) -85]
Train Case:  58 | Input/Output: [(21 -46 47 -54) -54]
Train Case:  59 | Input/Output: [(97 -39 -3 -23) -39]
Train Case:  60 | Input/Output: [(-11 84 -31 25) -31]
Train Case:  61 | Input/Output: [(70 -34 43 -87) -87]
Train Case:  62 | Input/Output: [(-25 -93 68 -18) -93]
Train Case:  63 | Input/Output: [(-44 -38 -34 -76) -76]
Train Case:  64 | Input/Output: [(-77 -64 -21 -98) -98]
Train Case:  65 | Input/Output: [(-22 -14 -31 -67) -67]
Train Case:  66 | Input/Output: [(-94 71 -37 73) -94]
Train Case:  67 | Input/Output: [(-39 -44 9 1) -44]
Train Case:  68 | Input/Output: [(90 -33 -17 -63) -63]
Train Case:  69 | Input/Output: [(96 -30 17 80) -30]
Train Case:  70 | Input/Output: [(60 7 65 -26) -26]
Train Case:  71 | Input/Output: [(-4 -86 -65 51) -86]
Train Case:  72 | Input/Output: [(42 79 -65 -56) -65]
Train Case:  73 | Input/Output: [(56 -90 -19 44) -90]
Train Case:  74 | Input/Output: [(76 0 -84 72) -84]
Train Case:  75 | Input/Output: [(86 5 93 97) 5]
Train Case:  76 | Input/Output: [(85 -43 -92 -30) -92]
Train Case:  77 | Input/Output: [(-34 -83 5 -100) -100]
Train Case:  78 | Input/Output: [(-90 34 7 -1) -90]
Train Case:  79 | Input/Output: [(-49 64 -19 29) -49]
Train Case:  80 | Input/Output: [(-62 -51 6 -9) -62]
Train Case:  81 | Input/Output: [(66 48 33 -75) -75]
Train Case:  82 | Input/Output: [(-75 56 60 88) -75]
Train Case:  83 | Input/Output: [(-33 -84 -32 16) -84]
Train Case:  84 | Input/Output: [(-9 -53 51 -9) -53]
Train Case:  85 | Input/Output: [(40 -69 95 40) -69]
Train Case:  86 | Input/Output: [(14 68 3 -49) -49]
Train Case:  87 | Input/Output: [(32 -23 -73 -89) -89]
Train Case:  88 | Input/Output: [(-40 -39 -10 43) -40]
Train Case:  89 | Input/Output: [(-9 33 83 -1) -9]
Train Case:  90 | Input/Output: [(-36 -47 -33 -90) -90]
Train Case:  91 | Input/Output: [(-53 43 94 -32) -53]
Train Case:  92 | Input/Output: [(-58 23 -1 29) -58]
Train Case:  93 | Input/Output: [(-60 -39 -48 3) -60]
Train Case:  94 | Input/Output: [(30 14 -6 -75) -75]
Train Case:  95 | Input/Output: [(-57 -37 -64 12) -64]
Train Case:  96 | Input/Output: [(60 60 -47 -43) -47]
Train Case:  97 | Input/Output: [(-79 -21 -94 33) -94]
Train Case:  98 | Input/Output: [(25 -62 78 -75) -75]
Train Case:  99 | Input/Output: [(53 -2 -28 58) -28]
Test Case:   0 | Input/Output: [[-88 -88 -5 -88] -88]
Test Case:   1 | Input/Output: [[38 -5 -5 -5] -5]
Test Case:   2 | Input/Output: [[-90 -90 74 -90] -90]
Test Case:   3 | Input/Output: [[0 0 0 -60] -60]
Test Case:   4 | Input/Output: [[11 11 63 11] 11]
Test Case:   5 | Input/Output: [[68 68 68 -35] -35]
Test Case:   6 | Input/Output: [[9 -52 -52 -52] -52]
Test Case:   7 | Input/Output: [[34 34 34 72] 34]
Test Case:   8 | Input/Output: [[-98 -98 49 -98] -98]
Test Case:   9 | Input/Output: [[-54 -54 -88 -54] -88]
Test Case:  10 | Input/Output: [[92 48 48 48] 48]
Test Case:  11 | Input/Output: [[0 0 -100 0] -100]
Test Case:  12 | Input/Output: [[-7 -7 95 -7] -7]
Test Case:  13 | Input/Output: [[43 19 19 19] 19]
Test Case:  14 | Input/Output: [[-27 -27 30 -27] -27]
Test Case:  15 | Input/Output: [[-84 -84 -84 67] -84]
Test Case:  16 | Input/Output: [[-70 -70 -70 -15] -70]
Test Case:  17 | Input/Output: [[46 -14 -14 -14] -14]
Test Case:  18 | Input/Output: [[67 -81 67 67] -81]
Test Case:  19 | Input/Output: [[16 -17 -17 -17] -17]
Test Case:  20 | Input/Output: [[6 39 39 39] 6]
Test Case:  21 | Input/Output: [[-34 -34 34 -34] -34]
Test Case:  22 | Input/Output: [[-28 7 7 7] -28]
Test Case:  23 | Input/Output: [[-31 -31 79 -31] -31]
Test Case:  24 | Input/Output: [[94 78 78 78] 78]
Test Case:  25 | Input/Output: [[-53 -58 -58 -58] -58]
Test Case:  26 | Input/Output: [[-75 -89 -89 -89] -89]
Test Case:  27 | Input/Output: [[89 11 11 11] 11]
Test Case:  28 | Input/Output: [[-2 -2 -2 -95] -95]
Test Case:  29 | Input/Output: [[-66 18 -66 -66] -66]
Test Case:  30 | Input/Output: [[-94 -94 -94 -2] -94]
Test Case:  31 | Input/Output: [[-81 84 84 84] -81]
Test Case:  32 | Input/Output: [[41 41 18 41] 18]
Test Case:  33 | Input/Output: [[69 69 99 69] 69]
Test Case:  34 | Input/Output: [[61 61 -43 61] -43]
Test Case:  35 | Input/Output: [[35 35 -13 35] -13]
Test Case:  36 | Input/Output: [[-18 -18 -18 88] -18]
Test Case:  37 | Input/Output: [[-86 -86 -34 -86] -86]
Test Case:  38 | Input/Output: [[-39 93 -39 -39] -39]
Test Case:  39 | Input/Output: [[-21 -94 -21 -21] -94]
Test Case:  40 | Input/Output: [[-52 -29 -52 -52] -52]
Test Case:  41 | Input/Output: [[-9 -9 66 -9] -9]
Test Case:  42 | Input/Output: [[-76 -76 -76 -41] -76]
Test Case:  43 | Input/Output: [[22 22 22 34] 22]
Test Case:  44 | Input/Output: [[-2 -2 -2 5] -2]
Test Case:  45 | Input/Output: [[-47 -47 1 -47] -47]
Test Case:  46 | Input/Output: [[-57 91 -57 -57] -57]
Test Case:  47 | Input/Output: [[-11 -11 -53 -11] -53]
Test Case:  48 | Input/Output: [[-72 -19 -19 -19] -72]
Test Case:  49 | Input/Output: [[-96 19 19 19] -96]
Test Case:  50 | Input/Output: [[5 5 -99 5] -99]
Test Case:  51 | Input/Output: [[-81 -81 54 -81] -81]
Test Case:  52 | Input/Output: [[7 -85 -85 -85] -85]
Test Case:  53 | Input/Output: [[-52 -52 -52 -86] -86]
Test Case:  54 | Input/Output: [[74 37 37 37] 37]
Test Case:  55 | Input/Output: [[-85 -85 75 -85] -85]
Test Case:  56 | Input/Output: [[-66 -59 -66 -66] -66]
Test Case:  57 | Input/Output: [[-89 19 -89 -89] -89]
Test Case:  58 | Input/Output: [[27 27 -21 27] -21]
Test Case:  59 | Input/Output: [[74 -29 74 74] -29]
Test Case:  60 | Input/Output: [[-94 27 -94 -94] -94]
Test Case:  61 | Input/Output: [[96 35 96 96] 35]
Test Case:  62 | Input/Output: [[-94 84 84 84] -94]
Test Case:  63 | Input/Output: [[-53 -58 -53 -53] -58]
Test Case:  64 | Input/Output: [[86 86 86 -60] -60]
Test Case:  65 | Input/Output: [[28 75 75 75] 28]
Test Case:  66 | Input/Output: [[-90 -90 55 -90] -90]
Test Case:  67 | Input/Output: [[-12 -12 -12 -30] -30]
Test Case:  68 | Input/Output: [[46 89 89 89] 46]
Test Case:  69 | Input/Output: [[38 98 98 98] 38]
Test Case:  70 | Input/Output: [[5 57 57 57] 5]
Test Case:  71 | Input/Output: [[-76 13 -76 -76] -76]
Test Case:  72 | Input/Output: [[70 70 70 -10] -10]
Test Case:  73 | Input/Output: [[-77 87 87 87] -77]
Test Case:  74 | Input/Output: [[65 83 83 83] 65]
Test Case:  75 | Input/Output: [[61 61 23 61] 23]
Test Case:  76 | Input/Output: [[92 -33 -33 -33] -33]
Test Case:  77 | Input/Output: [[23 23 23 -90] -90]
Test Case:  78 | Input/Output: [[52 11 11 11] 11]
Test Case:  79 | Input/Output: [[-66 -66 -66 92] -66]
Test Case:  80 | Input/Output: [[-20 -20 -65 -20] -65]
Test Case:  81 | Input/Output: [[-99 57 -99 -99] -99]
Test Case:  82 | Input/Output: [[-59 -59 -59 23] -59]
Test Case:  83 | Input/Output: [[50 95 50 50] 50]
Test Case:  84 | Input/Output: [[76 76 -10 76] -10]
Test Case:  85 | Input/Output: [[77 52 52 52] 52]
Test Case:  86 | Input/Output: [[34 70 34 34] 34]
Test Case:  87 | Input/Output: [[17 17 17 -6] -6]
Test Case:  88 | Input/Output: [[-65 -65 -65 -87] -87]
Test Case:  89 | Input/Output: [[63 90 63 63] 63]
Test Case:  90 | Input/Output: [[30 50 50 50] 30]
Test Case:  91 | Input/Output: [[55 8 55 55] 8]
Test Case:  92 | Input/Output: [[-45 -43 -45 -45] -45]
Test Case:  93 | Input/Output: [[-70 -70 93 -70] -70]
Test Case:  94 | Input/Output: [[67 67 26 67] 26]
Test Case:  95 | Input/Output: [[34 -32 -32 -32] -32]
Test Case:  96 | Input/Output: [[79 -40 -40 -40] -40]
Test Case:  97 | Input/Output: [[-6 8 8 8] -6]
Test Case:  98 | Input/Output: [[66 66 66 -90] -90]
Test Case:  99 | Input/Output: [[34 -85 34 34] -85]
Test Case: 100 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 101 | Input/Output: [(31 31 31 31) 31]
Test Case: 102 | Input/Output: [(23 23 23 23) 23]
Test Case: 103 | Input/Output: [(39 39 39 39) 39]
Test Case: 104 | Input/Output: [(84 84 84 84) 84]
Test Case: 105 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 106 | Input/Output: [(55 55 55 55) 55]
Test Case: 107 | Input/Output: [(65 65 65 65) 65]
Test Case: 108 | Input/Output: [(97 97 97 97) 97]
Test Case: 109 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 110 | Input/Output: [(99 99 99 99) 99]
Test Case: 111 | Input/Output: [(3 3 3 3) 3]
Test Case: 112 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 113 | Input/Output: [(54 54 54 54) 54]
Test Case: 114 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 115 | Input/Output: [(89 89 89 89) 89]
Test Case: 116 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 117 | Input/Output: [(97 97 97 97) 97]
Test Case: 118 | Input/Output: [(83 83 83 83) 83]
Test Case: 119 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 120 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 121 | Input/Output: [(0 0 0 0) 0]
Test Case: 122 | Input/Output: [(49 49 49 49) 49]
Test Case: 123 | Input/Output: [(66 66 66 66) 66]
Test Case: 124 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 125 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 126 | Input/Output: [(81 81 81 81) 81]
Test Case: 127 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 128 | Input/Output: [(9 9 9 9) 9]
Test Case: 129 | Input/Output: [(18 18 18 18) 18]
Test Case: 130 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 131 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 132 | Input/Output: [(32 32 32 32) 32]
Test Case: 133 | Input/Output: [(86 86 86 86) 86]
Test Case: 134 | Input/Output: [(61 61 61 61) 61]
Test Case: 135 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 136 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 137 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 138 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 139 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 140 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 141 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 142 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 143 | Input/Output: [(19 19 19 19) 19]
Test Case: 144 | Input/Output: [(34 34 34 34) 34]
Test Case: 145 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 146 | Input/Output: [(59 59 59 59) 59]
Test Case: 147 | Input/Output: [(9 9 9 9) 9]
Test Case: 148 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 149 | Input/Output: [(7 7 7 7) 7]
Test Case: 150 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 151 | Input/Output: [(49 49 49 49) 49]
Test Case: 152 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 153 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 154 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 155 | Input/Output: [(25 25 25 25) 25]
Test Case: 156 | Input/Output: [(11 11 11 11) 11]
Test Case: 157 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 158 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 159 | Input/Output: [(91 91 91 91) 91]
Test Case: 160 | Input/Output: [(97 97 97 97) 97]
Test Case: 161 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 162 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 163 | Input/Output: [(55 55 55 55) 55]
Test Case: 164 | Input/Output: [(47 47 47 47) 47]
Test Case: 165 | Input/Output: [(87 87 87 87) 87]
Test Case: 166 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 167 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 168 | Input/Output: [(87 87 87 87) 87]
Test Case: 169 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 170 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 171 | Input/Output: [(32 32 32 32) 32]
Test Case: 172 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 173 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 174 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 175 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 176 | Input/Output: [(-54 -54 -54 -54) -54]
Test Case: 177 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 178 | Input/Output: [(35 35 35 35) 35]
Test Case: 179 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 180 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 181 | Input/Output: [(69 69 69 69) 69]
Test Case: 182 | Input/Output: [(78 78 78 78) 78]
Test Case: 183 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 184 | Input/Output: [(50 50 50 50) 50]
Test Case: 185 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 186 | Input/Output: [(96 96 96 96) 96]
Test Case: 187 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 188 | Input/Output: [(68 68 68 68) 68]
Test Case: 189 | Input/Output: [(47 47 47 47) 47]
Test Case: 190 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 191 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 192 | Input/Output: [(19 19 19 19) 19]
Test Case: 193 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 194 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 195 | Input/Output: [(31 31 31 31) 31]
Test Case: 196 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 197 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 198 | Input/Output: [(66 66 66 66) 66]
Test Case: 199 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 200 | Input/Output: [(51 33 40 62) 33]
Test Case: 201 | Input/Output: [(28 97 86 61) 28]
Test Case: 202 | Input/Output: [(12 26 97 54) 12]
Test Case: 203 | Input/Output: [(56 97 67 99) 56]
Test Case: 204 | Input/Output: [(23 8 13 65) 8]
Test Case: 205 | Input/Output: [(85 68 26 80) 26]
Test Case: 206 | Input/Output: [(33 32 9 58) 9]
Test Case: 207 | Input/Output: [(49 4 30 97) 4]
Test Case: 208 | Input/Output: [(71 73 28 16) 16]
Test Case: 209 | Input/Output: [(100 36 39 87) 36]
Test Case: 210 | Input/Output: [(51 23 98 72) 23]
Test Case: 211 | Input/Output: [(43 4 97 6) 4]
Test Case: 212 | Input/Output: [(65 16 75 76) 16]
Test Case: 213 | Input/Output: [(69 22 40 31) 22]
Test Case: 214 | Input/Output: [(28 65 93 37) 28]
Test Case: 215 | Input/Output: [(97 57 10 98) 10]
Test Case: 216 | Input/Output: [(46 10 62 26) 10]
Test Case: 217 | Input/Output: [(50 100 25 3) 3]
Test Case: 218 | Input/Output: [(60 38 71 2) 2]
Test Case: 219 | Input/Output: [(45 87 97 3) 3]
Test Case: 220 | Input/Output: [(61 96 15 15) 15]
Test Case: 221 | Input/Output: [(19 5 5 74) 5]
Test Case: 222 | Input/Output: [(53 72 50 37) 37]
Test Case: 223 | Input/Output: [(61 3 93 23) 3]
Test Case: 224 | Input/Output: [(90 19 6 40) 6]
Test Case: 225 | Input/Output: [(7 43 11 62) 7]
Test Case: 226 | Input/Output: [(7 94 53 75) 7]
Test Case: 227 | Input/Output: [(3 92 46 23) 3]
Test Case: 228 | Input/Output: [(22 57 4 0) 0]
Test Case: 229 | Input/Output: [(64 10 86 23) 10]
Test Case: 230 | Input/Output: [(16 94 49 75) 16]
Test Case: 231 | Input/Output: [(13 20 31 14) 13]
Test Case: 232 | Input/Output: [(32 75 63 56) 32]
Test Case: 233 | Input/Output: [(90 26 41 77) 26]
Test Case: 234 | Input/Output: [(89 87 27 60) 27]
Test Case: 235 | Input/Output: [(61 58 35 4) 4]
Test Case: 236 | Input/Output: [(6 3 53 8) 3]
Test Case: 237 | Input/Output: [(7 51 29 4) 4]
Test Case: 238 | Input/Output: [(10 16 10 28) 10]
Test Case: 239 | Input/Output: [(52 58 81 51) 51]
Test Case: 240 | Input/Output: [(54 82 78 17) 17]
Test Case: 241 | Input/Output: [(58 36 9 70) 9]
Test Case: 242 | Input/Output: [(99 2 85 77) 2]
Test Case: 243 | Input/Output: [(95 7 63 98) 7]
Test Case: 244 | Input/Output: [(30 5 6 63) 5]
Test Case: 245 | Input/Output: [(71 55 76 10) 10]
Test Case: 246 | Input/Output: [(95 64 10 82) 10]
Test Case: 247 | Input/Output: [(42 99 12 42) 12]
Test Case: 248 | Input/Output: [(11 6 90 58) 6]
Test Case: 249 | Input/Output: [(79 27 49 17) 17]
Test Case: 250 | Input/Output: [(92 67 80 77) 67]
Test Case: 251 | Input/Output: [(62 36 92 61) 36]
Test Case: 252 | Input/Output: [(60 34 44 60) 34]
Test Case: 253 | Input/Output: [(66 77 91 98) 66]
Test Case: 254 | Input/Output: [(13 51 53 8) 8]
Test Case: 255 | Input/Output: [(32 76 88 71) 32]
Test Case: 256 | Input/Output: [(23 92 50 96) 23]
Test Case: 257 | Input/Output: [(71 39 93 11) 11]
Test Case: 258 | Input/Output: [(52 58 43 99) 43]
Test Case: 259 | Input/Output: [(29 22 89 97) 22]
Test Case: 260 | Input/Output: [(72 33 46 0) 0]
Test Case: 261 | Input/Output: [(50 94 87 5) 5]
Test Case: 262 | Input/Output: [(21 1 100 85) 1]
Test Case: 263 | Input/Output: [(13 20 12 39) 12]
Test Case: 264 | Input/Output: [(20 25 27 48) 20]
Test Case: 265 | Input/Output: [(11 48 57 88) 11]
Test Case: 266 | Input/Output: [(27 87 97 82) 27]
Test Case: 267 | Input/Output: [(6 90 58 27) 6]
Test Case: 268 | Input/Output: [(75 51 9 13) 9]
Test Case: 269 | Input/Output: [(88 39 8 19) 8]
Test Case: 270 | Input/Output: [(39 35 27 15) 15]
Test Case: 271 | Input/Output: [(48 41 48 17) 17]
Test Case: 272 | Input/Output: [(11 55 88 1) 1]
Test Case: 273 | Input/Output: [(13 73 39 24) 13]
Test Case: 274 | Input/Output: [(61 0 54 59) 0]
Test Case: 275 | Input/Output: [(67 49 88 68) 49]
Test Case: 276 | Input/Output: [(46 67 6 23) 6]
Test Case: 277 | Input/Output: [(27 59 99 71) 27]
Test Case: 278 | Input/Output: [(5 72 83 60) 5]
Test Case: 279 | Input/Output: [(90 13 32 64) 13]
Test Case: 280 | Input/Output: [(21 17 24 74) 17]
Test Case: 281 | Input/Output: [(8 40 28 33) 8]
Test Case: 282 | Input/Output: [(78 10 16 95) 10]
Test Case: 283 | Input/Output: [(44 90 97 49) 44]
Test Case: 284 | Input/Output: [(8 99 1 26) 1]
Test Case: 285 | Input/Output: [(64 43 58 82) 43]
Test Case: 286 | Input/Output: [(38 76 43 5) 5]
Test Case: 287 | Input/Output: [(91 28 69 27) 27]
Test Case: 288 | Input/Output: [(50 53 71 25) 25]
Test Case: 289 | Input/Output: [(17 76 48 64) 17]
Test Case: 290 | Input/Output: [(38 21 42 84) 21]
Test Case: 291 | Input/Output: [(66 69 82 88) 66]
Test Case: 292 | Input/Output: [(84 18 19 99) 18]
Test Case: 293 | Input/Output: [(66 74 68 67) 66]
Test Case: 294 | Input/Output: [(5 95 98 91) 5]
Test Case: 295 | Input/Output: [(24 22 54 31) 22]
Test Case: 296 | Input/Output: [(3 13 89 16) 3]
Test Case: 297 | Input/Output: [(16 35 88 74) 16]
Test Case: 298 | Input/Output: [(5 35 3 31) 3]
Test Case: 299 | Input/Output: [(99 15 45 39) 15]
Test Case: 300 | Input/Output: [(75 3 83 37) 3]
Test Case: 301 | Input/Output: [(57 30 85 60) 30]
Test Case: 302 | Input/Output: [(13 41 43 26) 13]
Test Case: 303 | Input/Output: [(51 2 94 100) 2]
Test Case: 304 | Input/Output: [(13 45 98 38) 13]
Test Case: 305 | Input/Output: [(83 46 37 86) 37]
Test Case: 306 | Input/Output: [(19 62 68 28) 19]
Test Case: 307 | Input/Output: [(59 61 20 84) 20]
Test Case: 308 | Input/Output: [(31 41 50 35) 31]
Test Case: 309 | Input/Output: [(9 65 91 52) 9]
Test Case: 310 | Input/Output: [(28 22 85 41) 22]
Test Case: 311 | Input/Output: [(36 92 94 63) 36]
Test Case: 312 | Input/Output: [(76 45 86 82) 45]
Test Case: 313 | Input/Output: [(13 63 90 82) 13]
Test Case: 314 | Input/Output: [(41 40 89 18) 18]
Test Case: 315 | Input/Output: [(67 46 24 59) 24]
Test Case: 316 | Input/Output: [(32 71 88 47) 32]
Test Case: 317 | Input/Output: [(18 71 93 9) 9]
Test Case: 318 | Input/Output: [(13 47 36 85) 13]
Test Case: 319 | Input/Output: [(10 24 35 40) 10]
Test Case: 320 | Input/Output: [(97 7 12 25) 7]
Test Case: 321 | Input/Output: [(34 60 19 59) 19]
Test Case: 322 | Input/Output: [(42 89 80 32) 32]
Test Case: 323 | Input/Output: [(31 46 3 8) 3]
Test Case: 324 | Input/Output: [(34 88 2 54) 2]
Test Case: 325 | Input/Output: [(68 94 72 45) 45]
Test Case: 326 | Input/Output: [(31 7 38 69) 7]
Test Case: 327 | Input/Output: [(33 94 33 62) 33]
Test Case: 328 | Input/Output: [(98 11 94 8) 8]
Test Case: 329 | Input/Output: [(38 16 64 49) 16]
Test Case: 330 | Input/Output: [(90 5 31 19) 5]
Test Case: 331 | Input/Output: [(86 62 39 77) 39]
Test Case: 332 | Input/Output: [(69 81 59 84) 59]
Test Case: 333 | Input/Output: [(13 63 66 67) 13]
Test Case: 334 | Input/Output: [(56 26 33 68) 26]
Test Case: 335 | Input/Output: [(94 50 90 10) 10]
Test Case: 336 | Input/Output: [(21 100 13 80) 13]
Test Case: 337 | Input/Output: [(46 57 37 4) 4]
Test Case: 338 | Input/Output: [(25 93 32 83) 25]
Test Case: 339 | Input/Output: [(42 56 11 85) 11]
Test Case: 340 | Input/Output: [(85 61 27 19) 19]
Test Case: 341 | Input/Output: [(24 95 49 42) 24]
Test Case: 342 | Input/Output: [(34 11 15 45) 11]
Test Case: 343 | Input/Output: [(39 16 73 2) 2]
Test Case: 344 | Input/Output: [(3 89 58 36) 3]
Test Case: 345 | Input/Output: [(17 68 60 32) 17]
Test Case: 346 | Input/Output: [(66 56 39 63) 39]
Test Case: 347 | Input/Output: [(11 6 83 1) 1]
Test Case: 348 | Input/Output: [(69 9 65 26) 9]
Test Case: 349 | Input/Output: [(52 18 76 71) 18]
Test Case: 350 | Input/Output: [(84 66 54 11) 11]
Test Case: 351 | Input/Output: [(17 98 65 98) 17]
Test Case: 352 | Input/Output: [(48 22 15 15) 15]
Test Case: 353 | Input/Output: [(79 66 51 28) 28]
Test Case: 354 | Input/Output: [(94 72 6 52) 6]
Test Case: 355 | Input/Output: [(81 85 69 20) 20]
Test Case: 356 | Input/Output: [(83 85 14 36) 14]
Test Case: 357 | Input/Output: [(53 86 0 6) 0]
Test Case: 358 | Input/Output: [(56 69 96 16) 16]
Test Case: 359 | Input/Output: [(78 69 9 21) 9]
Test Case: 360 | Input/Output: [(75 85 56 98) 56]
Test Case: 361 | Input/Output: [(11 68 20 65) 11]
Test Case: 362 | Input/Output: [(53 8 31 65) 8]
Test Case: 363 | Input/Output: [(82 72 30 67) 30]
Test Case: 364 | Input/Output: [(0 20 71 66) 0]
Test Case: 365 | Input/Output: [(99 33 41 89) 33]
Test Case: 366 | Input/Output: [(4 72 14 47) 4]
Test Case: 367 | Input/Output: [(15 93 2 34) 2]
Test Case: 368 | Input/Output: [(0 85 29 22) 0]
Test Case: 369 | Input/Output: [(83 63 53 37) 37]
Test Case: 370 | Input/Output: [(60 33 82 60) 33]
Test Case: 371 | Input/Output: [(97 83 68 66) 66]
Test Case: 372 | Input/Output: [(70 30 1 25) 1]
Test Case: 373 | Input/Output: [(11 16 78 96) 11]
Test Case: 374 | Input/Output: [(63 37 49 33) 33]
Test Case: 375 | Input/Output: [(95 5 11 74) 5]
Test Case: 376 | Input/Output: [(97 7 16 31) 7]
Test Case: 377 | Input/Output: [(0 3 89 97) 0]
Test Case: 378 | Input/Output: [(14 38 86 78) 14]
Test Case: 379 | Input/Output: [(11 8 62 40) 8]
Test Case: 380 | Input/Output: [(11 31 8 48) 8]
Test Case: 381 | Input/Output: [(88 56 80 14) 14]
Test Case: 382 | Input/Output: [(42 55 53 88) 42]
Test Case: 383 | Input/Output: [(29 30 82 55) 29]
Test Case: 384 | Input/Output: [(58 81 48 52) 48]
Test Case: 385 | Input/Output: [(85 93 32 48) 32]
Test Case: 386 | Input/Output: [(27 78 5 48) 5]
Test Case: 387 | Input/Output: [(89 0 8 74) 0]
Test Case: 388 | Input/Output: [(44 94 52 56) 44]
Test Case: 389 | Input/Output: [(44 38 50 0) 0]
Test Case: 390 | Input/Output: [(24 13 71 74) 13]
Test Case: 391 | Input/Output: [(52 24 92 22) 22]
Test Case: 392 | Input/Output: [(82 22 20 60) 20]
Test Case: 393 | Input/Output: [(85 52 51 13) 13]
Test Case: 394 | Input/Output: [(77 94 23 20) 20]
Test Case: 395 | Input/Output: [(61 27 2 14) 2]
Test Case: 396 | Input/Output: [(89 76 12 11) 11]
Test Case: 397 | Input/Output: [(92 57 17 90) 17]
Test Case: 398 | Input/Output: [(59 38 8 43) 8]
Test Case: 399 | Input/Output: [(36 7 79 53) 7]
Test Case: 400 | Input/Output: [(-46 7 55 -68) -68]
Test Case: 401 | Input/Output: [(-2 -57 -22 -76) -76]
Test Case: 402 | Input/Output: [(65 25 91 55) 25]
Test Case: 403 | Input/Output: [(2 -69 15 -76) -76]
Test Case: 404 | Input/Output: [(-49 25 -37 95) -49]
Test Case: 405 | Input/Output: [(-72 -48 15 39) -72]
Test Case: 406 | Input/Output: [(-78 -6 32 6) -78]
Test Case: 407 | Input/Output: [(11 -48 31 60) -48]
Test Case: 408 | Input/Output: [(-96 -82 92 68) -96]
Test Case: 409 | Input/Output: [(13 -57 10 35) -57]
Test Case: 410 | Input/Output: [(-22 14 22 -36) -36]
Test Case: 411 | Input/Output: [(95 -53 -29 21) -53]
Test Case: 412 | Input/Output: [(44 -75 26 -59) -75]
Test Case: 413 | Input/Output: [(-66 -97 -54 -11) -97]
Test Case: 414 | Input/Output: [(-53 35 34 67) -53]
Test Case: 415 | Input/Output: [(88 -54 -13 16) -54]
Test Case: 416 | Input/Output: [(-67 -1 99 -30) -67]
Test Case: 417 | Input/Output: [(20 27 94 14) 14]
Test Case: 418 | Input/Output: [(27 72 68 100) 27]
Test Case: 419 | Input/Output: [(-86 67 93 -41) -86]
Test Case: 420 | Input/Output: [(-57 -10 -6 -91) -91]
Test Case: 421 | Input/Output: [(-29 56 -18 66) -29]
Test Case: 422 | Input/Output: [(72 11 -44 80) -44]
Test Case: 423 | Input/Output: [(21 87 -68 46) -68]
Test Case: 424 | Input/Output: [(-99 49 -17 67) -99]
Test Case: 425 | Input/Output: [(92 -22 44 -19) -22]
Test Case: 426 | Input/Output: [(-86 -90 31 77) -90]
Test Case: 427 | Input/Output: [(48 96 -76 -39) -76]
Test Case: 428 | Input/Output: [(31 -49 74 84) -49]
Test Case: 429 | Input/Output: [(-91 -93 -82 69) -93]
Test Case: 430 | Input/Output: [(61 32 -62 -59) -62]
Test Case: 431 | Input/Output: [(-40 49 42 36) -40]
Test Case: 432 | Input/Output: [(-13 100 67 92) -13]
Test Case: 433 | Input/Output: [(-68 75 10 65) -68]
Test Case: 434 | Input/Output: [(32 -81 -78 -23) -81]
Test Case: 435 | Input/Output: [(51 -2 93 -10) -10]
Test Case: 436 | Input/Output: [(-26 -38 77 93) -38]
Test Case: 437 | Input/Output: [(79 76 -91 69) -91]
Test Case: 438 | Input/Output: [(-44 73 -21 42) -44]
Test Case: 439 | Input/Output: [(-45 -61 39 94) -61]
Test Case: 440 | Input/Output: [(63 -35 -43 -27) -43]
Test Case: 441 | Input/Output: [(90 64 -81 -56) -81]
Test Case: 442 | Input/Output: [(-52 -62 -67 -97) -97]
Test Case: 443 | Input/Output: [(0 13 -5 78) -5]
Test Case: 444 | Input/Output: [(-34 -17 -56 -1) -56]
Test Case: 445 | Input/Output: [(96 23 -75 16) -75]
Test Case: 446 | Input/Output: [(34 75 -84 -73) -84]
Test Case: 447 | Input/Output: [(-33 -32 -41 -56) -56]
Test Case: 448 | Input/Output: [(-45 73 -44 57) -45]
Test Case: 449 | Input/Output: [(47 38 99 -93) -93]
Test Case: 450 | Input/Output: [(-80 -6 -83 -22) -83]
Test Case: 451 | Input/Output: [(-8 69 62 -79) -79]
Test Case: 452 | Input/Output: [(44 31 12 23) 12]
Test Case: 453 | Input/Output: [(-99 85 29 -55) -99]
Test Case: 454 | Input/Output: [(-38 -57 30 -82) -82]
Test Case: 455 | Input/Output: [(-16 71 41 -53) -53]
Test Case: 456 | Input/Output: [(39 29 68 85) 29]
Test Case: 457 | Input/Output: [(-79 22 -38 -79) -79]
Test Case: 458 | Input/Output: [(-88 58 49 30) -88]
Test Case: 459 | Input/Output: [(69 34 85 21) 21]
Test Case: 460 | Input/Output: [(30 16 64 20) 16]
Test Case: 461 | Input/Output: [(51 2 23 -97) -97]
Test Case: 462 | Input/Output: [(50 45 -94 -49) -94]
Test Case: 463 | Input/Output: [(44 -6 98 10) -6]
Test Case: 464 | Input/Output: [(78 85 -45 -59) -59]
Test Case: 465 | Input/Output: [(50 -49 66 -55) -55]
Test Case: 466 | Input/Output: [(98 -94 53 84) -94]
Test Case: 467 | Input/Output: [(57 -90 -100 -95) -100]
Test Case: 468 | Input/Output: [(-26 -8 -54 -99) -99]
Test Case: 469 | Input/Output: [(-83 28 41 21) -83]
Test Case: 470 | Input/Output: [(-83 -83 -32 -50) -83]
Test Case: 471 | Input/Output: [(2 81 69 -75) -75]
Test Case: 472 | Input/Output: [(-62 -57 39 60) -62]
Test Case: 473 | Input/Output: [(24 99 26 33) 24]
Test Case: 474 | Input/Output: [(-37 83 -88 -56) -88]
Test Case: 475 | Input/Output: [(69 -61 -87 -19) -87]
Test Case: 476 | Input/Output: [(68 62 53 75) 53]
Test Case: 477 | Input/Output: [(-44 -46 100 -2) -46]
Test Case: 478 | Input/Output: [(4 -73 -47 -26) -73]
Test Case: 479 | Input/Output: [(-1 9 5 -69) -69]
Test Case: 480 | Input/Output: [(4 12 -1 -98) -98]
Test Case: 481 | Input/Output: [(-44 39 84 -7) -44]
Test Case: 482 | Input/Output: [(14 10 -49 -26) -49]
Test Case: 483 | Input/Output: [(-8 -99 72 87) -99]
Test Case: 484 | Input/Output: [(-74 1 -78 51) -78]
Test Case: 485 | Input/Output: [(-96 -68 26 -73) -96]
Test Case: 486 | Input/Output: [(-58 -7 -69 -64) -69]
Test Case: 487 | Input/Output: [(-6 -80 32 -83) -83]
Test Case: 488 | Input/Output: [(70 -3 46 -15) -15]
Test Case: 489 | Input/Output: [(-22 -30 -79 16) -79]
Test Case: 490 | Input/Output: [(66 71 -4 -39) -39]
Test Case: 491 | Input/Output: [(-14 92 -40 -12) -40]
Test Case: 492 | Input/Output: [(-51 8 73 35) -51]
Test Case: 493 | Input/Output: [(-87 9 37 37) -87]
Test Case: 494 | Input/Output: [(-71 -35 79 -37) -71]
Test Case: 495 | Input/Output: [(69 47 -24 -81) -81]
Test Case: 496 | Input/Output: [(36 -18 -53 79) -53]
Test Case: 497 | Input/Output: [(29 68 -40 -25) -40]
Test Case: 498 | Input/Output: [(15 16 -85 -27) -85]
Test Case: 499 | Input/Output: [(95 99 9 3) 3]
Test Case: 500 | Input/Output: [(-57 78 57 66) -57]
Test Case: 501 | Input/Output: [(50 35 21 21) 21]
Test Case: 502 | Input/Output: [(-17 -47 84 -18) -47]
Test Case: 503 | Input/Output: [(-65 -98 62 -98) -98]
Test Case: 504 | Input/Output: [(-94 61 43 3) -94]
Test Case: 505 | Input/Output: [(-97 -86 -27 97) -97]
Test Case: 506 | Input/Output: [(-87 2 -27 -18) -87]
Test Case: 507 | Input/Output: [(-11 91 43 -26) -26]
Test Case: 508 | Input/Output: [(-36 -37 36 7) -37]
Test Case: 509 | Input/Output: [(41 77 -24 -91) -91]
Test Case: 510 | Input/Output: [(65 -19 -90 -26) -90]
Test Case: 511 | Input/Output: [(-45 -15 23 -52) -52]
Test Case: 512 | Input/Output: [(20 -77 -37 59) -77]
Test Case: 513 | Input/Output: [(-15 -16 98 -12) -16]
Test Case: 514 | Input/Output: [(80 90 31 -98) -98]
Test Case: 515 | Input/Output: [(78 -93 -46 -69) -93]
Test Case: 516 | Input/Output: [(-33 75 -80 30) -80]
Test Case: 517 | Input/Output: [(-96 -55 0 65) -96]
Test Case: 518 | Input/Output: [(74 -83 50 -75) -83]
Test Case: 519 | Input/Output: [(23 -26 62 82) -26]
Test Case: 520 | Input/Output: [(60 -60 25 47) -60]
Test Case: 521 | Input/Output: [(53 -85 47 -7) -85]
Test Case: 522 | Input/Output: [(-59 79 -26 -31) -59]
Test Case: 523 | Input/Output: [(-37 -27 92 -24) -37]
Test Case: 524 | Input/Output: [(89 -15 -10 -87) -87]
Test Case: 525 | Input/Output: [(12 49 -96 -70) -96]
Test Case: 526 | Input/Output: [(96 -51 34 -6) -51]
Test Case: 527 | Input/Output: [(-4 35 77 -34) -34]
Test Case: 528 | Input/Output: [(71 -70 -99 63) -99]
Test Case: 529 | Input/Output: [(-43 90 65 88) -43]
Test Case: 530 | Input/Output: [(85 24 19 60) 19]
Test Case: 531 | Input/Output: [(90 -10 -45 -85) -85]
Test Case: 532 | Input/Output: [(55 88 32 -53) -53]
Test Case: 533 | Input/Output: [(-53 -63 -87 -64) -87]
Test Case: 534 | Input/Output: [(83 -88 -88 -63) -88]
Test Case: 535 | Input/Output: [(-25 -73 21 34) -73]
Test Case: 536 | Input/Output: [(32 29 46 12) 12]
Test Case: 537 | Input/Output: [(28 -82 25 39) -82]
Test Case: 538 | Input/Output: [(-100 -64 52 -93) -100]
Test Case: 539 | Input/Output: [(94 -83 24 87) -83]
Test Case: 540 | Input/Output: [(-2 10 3 56) -2]
Test Case: 541 | Input/Output: [(2 -83 76 -63) -83]
Test Case: 542 | Input/Output: [(-41 -37 -12 46) -41]
Test Case: 543 | Input/Output: [(-75 -31 75 51) -75]
Test Case: 544 | Input/Output: [(-67 -81 82 1) -81]
Test Case: 545 | Input/Output: [(-94 -33 -31 -68) -94]
Test Case: 546 | Input/Output: [(54 -26 -66 99) -66]
Test Case: 547 | Input/Output: [(62 18 -78 -18) -78]
Test Case: 548 | Input/Output: [(40 -49 24 44) -49]
Test Case: 549 | Input/Output: [(-47 27 7 49) -47]
Test Case: 550 | Input/Output: [(26 -72 -84 -68) -84]
Test Case: 551 | Input/Output: [(-91 -31 6 20) -91]
Test Case: 552 | Input/Output: [(92 59 47 -12) -12]
Test Case: 553 | Input/Output: [(-20 29 -34 44) -34]
Test Case: 554 | Input/Output: [(37 -59 -60 19) -60]
Test Case: 555 | Input/Output: [(-90 -61 -86 11) -90]
Test Case: 556 | Input/Output: [(-3 -7 65 81) -7]
Test Case: 557 | Input/Output: [(-60 -69 45 0) -69]
Test Case: 558 | Input/Output: [(-29 83 60 11) -29]
Test Case: 559 | Input/Output: [(-72 28 -93 -5) -93]
Test Case: 560 | Input/Output: [(5 -54 -11 1) -54]
Test Case: 561 | Input/Output: [(-75 17 -52 -51) -75]
Test Case: 562 | Input/Output: [(81 58 84 42) 42]
Test Case: 563 | Input/Output: [(3 81 -65 -42) -65]
Test Case: 564 | Input/Output: [(-95 -26 -24 19) -95]
Test Case: 565 | Input/Output: [(52 69 -87 42) -87]
Test Case: 566 | Input/Output: [(-53 30 93 0) -53]
Test Case: 567 | Input/Output: [(44 -64 -48 37) -64]
Test Case: 568 | Input/Output: [(9 -60 -59 -80) -80]
Test Case: 569 | Input/Output: [(-64 -14 67 6) -64]
Test Case: 570 | Input/Output: [(78 -92 -57 71) -92]
Test Case: 571 | Input/Output: [(18 38 -49 -45) -49]
Test Case: 572 | Input/Output: [(-11 57 -51 33) -51]
Test Case: 573 | Input/Output: [(73 27 45 25) 25]
Test Case: 574 | Input/Output: [(-38 66 -25 -25) -38]
Test Case: 575 | Input/Output: [(54 80 -59 -33) -59]
Test Case: 576 | Input/Output: [(89 44 21 12) 12]
Test Case: 577 | Input/Output: [(40 -54 58 -62) -62]
Test Case: 578 | Input/Output: [(95 6 -76 29) -76]
Test Case: 579 | Input/Output: [(53 -54 -97 -85) -97]
Test Case: 580 | Input/Output: [(41 18 46 -73) -73]
Test Case: 581 | Input/Output: [(85 88 73 94) 73]
Test Case: 582 | Input/Output: [(-82 64 94 89) -82]
Test Case: 583 | Input/Output: [(7 48 81 -87) -87]
Test Case: 584 | Input/Output: [(95 -20 89 99) -20]
Test Case: 585 | Input/Output: [(-20 -83 92 31) -83]
Test Case: 586 | Input/Output: [(-77 -38 36 -23) -77]
Test Case: 587 | Input/Output: [(16 -29 72 -71) -71]
Test Case: 588 | Input/Output: [(1 12 51 -56) -56]
Test Case: 589 | Input/Output: [(-26 -72 22 -38) -72]
Test Case: 590 | Input/Output: [(-47 15 41 -79) -79]
Test Case: 591 | Input/Output: [(78 27 49 99) 27]
Test Case: 592 | Input/Output: [(-25 -23 89 -18) -25]
Test Case: 593 | Input/Output: [(-99 -10 -10 -80) -99]
Test Case: 594 | Input/Output: [(-39 -47 96 66) -47]
Test Case: 595 | Input/Output: [(9 -98 -39 -61) -98]
Test Case: 596 | Input/Output: [(-74 62 -81 -88) -88]
Test Case: 597 | Input/Output: [(-97 -7 13 66) -97]
Test Case: 598 | Input/Output: [(-50 76 -89 4) -89]
Test Case: 599 | Input/Output: [(24 -48 3 -32) -48]
Test Case: 600 | Input/Output: [(-30 69 97 7) -30]
Test Case: 601 | Input/Output: [(-79 -44 -92 -9) -92]
Test Case: 602 | Input/Output: [(-28 -46 80 5) -46]
Test Case: 603 | Input/Output: [(-48 -39 45 75) -48]
Test Case: 604 | Input/Output: [(-10 71 -83 -41) -83]
Test Case: 605 | Input/Output: [(74 50 -39 46) -39]
Test Case: 606 | Input/Output: [(-50 88 -21 20) -50]
Test Case: 607 | Input/Output: [(-42 -56 -51 -12) -56]
Test Case: 608 | Input/Output: [(-25 44 95 -90) -90]
Test Case: 609 | Input/Output: [(58 67 31 29) 29]
Test Case: 610 | Input/Output: [(40 -60 67 81) -60]
Test Case: 611 | Input/Output: [(-81 25 28 100) -81]
Test Case: 612 | Input/Output: [(-77 67 7 -90) -90]
Test Case: 613 | Input/Output: [(-27 9 94 -67) -67]
Test Case: 614 | Input/Output: [(73 43 27 -88) -88]
Test Case: 615 | Input/Output: [(55 9 -62 -61) -62]
Test Case: 616 | Input/Output: [(10 -90 15 -91) -91]
Test Case: 617 | Input/Output: [(6 77 -61 57) -61]
Test Case: 618 | Input/Output: [(45 27 74 -96) -96]
Test Case: 619 | Input/Output: [(8 -71 -30 -18) -71]
Test Case: 620 | Input/Output: [(29 40 -90 12) -90]
Test Case: 621 | Input/Output: [(40 -56 -76 -31) -76]
Test Case: 622 | Input/Output: [(34 -47 2 -75) -75]
Test Case: 623 | Input/Output: [(-65 89 10 32) -65]
Test Case: 624 | Input/Output: [(-34 -19 28 -14) -34]
Test Case: 625 | Input/Output: [(50 -92 33 -4) -92]
Test Case: 626 | Input/Output: [(-55 58 40 -58) -58]
Test Case: 627 | Input/Output: [(2 98 -12 87) -12]
Test Case: 628 | Input/Output: [(9 -69 -28 -54) -69]
Test Case: 629 | Input/Output: [(-31 64 -100 26) -100]
Test Case: 630 | Input/Output: [(-18 -87 -39 -44) -87]
Test Case: 631 | Input/Output: [(39 40 13 -12) -12]
Test Case: 632 | Input/Output: [(32 59 -83 82) -83]
Test Case: 633 | Input/Output: [(16 -18 -15 -76) -76]
Test Case: 634 | Input/Output: [(-45 92 81 -3) -45]
Test Case: 635 | Input/Output: [(-32 55 -55 70) -55]
Test Case: 636 | Input/Output: [(-75 -75 -42 32) -75]
Test Case: 637 | Input/Output: [(24 40 2 -68) -68]
Test Case: 638 | Input/Output: [(66 79 76 97) 66]
Test Case: 639 | Input/Output: [(19 -65 -20 -95) -95]
Test Case: 640 | Input/Output: [(-43 -21 -51 -22) -51]
Test Case: 641 | Input/Output: [(-20 -67 25 97) -67]
Test Case: 642 | Input/Output: [(-30 -68 -11 -84) -84]
Test Case: 643 | Input/Output: [(20 9 70 -23) -23]
Test Case: 644 | Input/Output: [(18 -89 -23 -89) -89]
Test Case: 645 | Input/Output: [(13 49 -98 -61) -98]
Test Case: 646 | Input/Output: [(-1 59 36 90) -1]
Test Case: 647 | Input/Output: [(-92 -96 -94 -10) -96]
Test Case: 648 | Input/Output: [(-51 54 1 38) -51]
Test Case: 649 | Input/Output: [(-9 4 16 36) -9]
Test Case: 650 | Input/Output: [(-42 -41 -64 -72) -72]
Test Case: 651 | Input/Output: [(-28 -82 -79 -41) -82]
Test Case: 652 | Input/Output: [(-4 32 23 -18) -18]
Test Case: 653 | Input/Output: [(-84 -95 -70 -37) -95]
Test Case: 654 | Input/Output: [(-94 -74 -59 -66) -94]
Test Case: 655 | Input/Output: [(-59 -39 21 -97) -97]
Test Case: 656 | Input/Output: [(-16 40 -44 17) -44]
Test Case: 657 | Input/Output: [(-74 37 80 52) -74]
Test Case: 658 | Input/Output: [(62 -10 -3 -100) -100]
Test Case: 659 | Input/Output: [(-34 87 96 -6) -34]
Test Case: 660 | Input/Output: [(50 36 -18 -18) -18]
Test Case: 661 | Input/Output: [(-71 77 -40 -7) -71]
Test Case: 662 | Input/Output: [(-25 42 32 27) -25]
Test Case: 663 | Input/Output: [(89 -60 -91 85) -91]
Test Case: 664 | Input/Output: [(-5 -93 80 45) -93]
Test Case: 665 | Input/Output: [(79 -30 -72 31) -72]
Test Case: 666 | Input/Output: [(-10 63 -37 47) -37]
Test Case: 667 | Input/Output: [(59 -60 -41 -60) -60]
Test Case: 668 | Input/Output: [(67 -52 -9 84) -52]
Test Case: 669 | Input/Output: [(-93 -44 89 60) -93]
Test Case: 670 | Input/Output: [(-96 38 86 -93) -96]
Test Case: 671 | Input/Output: [(92 65 44 -87) -87]
Test Case: 672 | Input/Output: [(24 -53 -43 7) -53]
Test Case: 673 | Input/Output: [(-22 -26 -27 -22) -27]
Test Case: 674 | Input/Output: [(62 44 58 21) 21]
Test Case: 675 | Input/Output: [(36 60 93 60) 36]
Test Case: 676 | Input/Output: [(-70 -76 -73 -49) -76]
Test Case: 677 | Input/Output: [(-96 71 -56 63) -96]
Test Case: 678 | Input/Output: [(47 17 -12 42) -12]
Test Case: 679 | Input/Output: [(-100 -77 87 -60) -100]
Test Case: 680 | Input/Output: [(-46 2 -56 41) -56]
Test Case: 681 | Input/Output: [(65 -84 87 -92) -92]
Test Case: 682 | Input/Output: [(-67 -80 13 -70) -80]
Test Case: 683 | Input/Output: [(-71 -30 27 12) -71]
Test Case: 684 | Input/Output: [(-62 12 76 -86) -86]
Test Case: 685 | Input/Output: [(94 24 5 -1) -1]
Test Case: 686 | Input/Output: [(54 21 -25 34) -25]
Test Case: 687 | Input/Output: [(62 46 100 -59) -59]
Test Case: 688 | Input/Output: [(62 38 28 100) 28]
Test Case: 689 | Input/Output: [(-86 46 -14 87) -86]
Test Case: 690 | Input/Output: [(-30 15 -73 34) -73]
Test Case: 691 | Input/Output: [(-83 55 6 43) -83]
Test Case: 692 | Input/Output: [(77 -35 -20 -52) -52]
Test Case: 693 | Input/Output: [(-4 90 -13 64) -13]
Test Case: 694 | Input/Output: [(-11 -66 -48 -5) -66]
Test Case: 695 | Input/Output: [(-77 33 -16 -76) -77]
Test Case: 696 | Input/Output: [(86 65 70 49) 49]
Test Case: 697 | Input/Output: [(-86 -55 12 21) -86]
Test Case: 698 | Input/Output: [(97 79 -11 -36) -36]
Test Case: 699 | Input/Output: [(-39 -66 -87 -47) -87]
Test Case: 700 | Input/Output: [(12 27 16 80) 12]
Test Case: 701 | Input/Output: [(-64 -9 -55 -91) -91]
Test Case: 702 | Input/Output: [(-59 43 6 -1) -59]
Test Case: 703 | Input/Output: [(-69 22 57 -31) -69]
Test Case: 704 | Input/Output: [(-70 69 -58 12) -70]
Test Case: 705 | Input/Output: [(61 -13 -27 28) -27]
Test Case: 706 | Input/Output: [(98 -14 -98 64) -98]
Test Case: 707 | Input/Output: [(-30 43 -7 53) -30]
Test Case: 708 | Input/Output: [(70 73 84 -42) -42]
Test Case: 709 | Input/Output: [(14 68 46 13) 13]
Test Case: 710 | Input/Output: [(-82 -10 83 63) -82]
Test Case: 711 | Input/Output: [(80 65 -94 43) -94]
Test Case: 712 | Input/Output: [(78 -68 61 -5) -68]
Test Case: 713 | Input/Output: [(50 -84 45 -5) -84]
Test Case: 714 | Input/Output: [(-5 22 29 -46) -46]
Test Case: 715 | Input/Output: [(-16 51 -61 40) -61]
Test Case: 716 | Input/Output: [(6 98 93 45) 6]
Test Case: 717 | Input/Output: [(-96 55 -32 98) -96]
Test Case: 718 | Input/Output: [(83 -30 87 45) -30]
Test Case: 719 | Input/Output: [(16 39 -16 0) -16]
Test Case: 720 | Input/Output: [(-17 -34 73 39) -34]
Test Case: 721 | Input/Output: [(91 -19 -12 -92) -92]
Test Case: 722 | Input/Output: [(-96 32 80 41) -96]
Test Case: 723 | Input/Output: [(3 72 -10 74) -10]
Test Case: 724 | Input/Output: [(-21 19 -1 -68) -68]
Test Case: 725 | Input/Output: [(81 15 60 15) 15]
Test Case: 726 | Input/Output: [(-65 78 89 -40) -65]
Test Case: 727 | Input/Output: [(-74 -40 42 15) -74]
Test Case: 728 | Input/Output: [(47 67 -89 20) -89]
Test Case: 729 | Input/Output: [(-6 -96 -51 -12) -96]
Test Case: 730 | Input/Output: [(-29 64 -91 -76) -91]
Test Case: 731 | Input/Output: [(-13 73 -53 17) -53]
Test Case: 732 | Input/Output: [(-83 -74 15 29) -83]
Test Case: 733 | Input/Output: [(-43 -95 -21 -75) -95]
Test Case: 734 | Input/Output: [(51 65 72 -71) -71]
Test Case: 735 | Input/Output: [(-58 -2 68 54) -58]
Test Case: 736 | Input/Output: [(-60 10 -37 -73) -73]
Test Case: 737 | Input/Output: [(12 53 -73 5) -73]
Test Case: 738 | Input/Output: [(91 -12 93 32) -12]
Test Case: 739 | Input/Output: [(-17 89 -16 86) -17]
Test Case: 740 | Input/Output: [(-63 -25 84 35) -63]
Test Case: 741 | Input/Output: [(-8 -92 -58 48) -92]
Test Case: 742 | Input/Output: [(63 -75 -13 17) -75]
Test Case: 743 | Input/Output: [(90 -96 38 -58) -96]
Test Case: 744 | Input/Output: [(21 3 -70 95) -70]
Test Case: 745 | Input/Output: [(-14 1 -18 21) -18]
Test Case: 746 | Input/Output: [(36 94 -76 -55) -76]
Test Case: 747 | Input/Output: [(74 46 -62 55) -62]
Test Case: 748 | Input/Output: [(11 -18 -20 -36) -36]
Test Case: 749 | Input/Output: [(100 23 -25 10) -25]
Test Case: 750 | Input/Output: [(93 100 -10 80) -10]
Test Case: 751 | Input/Output: [(28 51 -5 -51) -51]
Test Case: 752 | Input/Output: [(29 80 -74 74) -74]
Test Case: 753 | Input/Output: [(-27 87 76 45) -27]
Test Case: 754 | Input/Output: [(25 42 26 74) 25]
Test Case: 755 | Input/Output: [(37 63 -16 -50) -50]
Test Case: 756 | Input/Output: [(-67 -26 -57 -13) -67]
Test Case: 757 | Input/Output: [(99 44 90 -45) -45]
Test Case: 758 | Input/Output: [(-20 22 -2 -82) -82]
Test Case: 759 | Input/Output: [(-72 -36 -2 88) -72]
Test Case: 760 | Input/Output: [(-100 -71 -54 73) -100]
Test Case: 761 | Input/Output: [(-19 -15 -99 54) -99]
Test Case: 762 | Input/Output: [(-24 -35 -67 -19) -67]
Test Case: 763 | Input/Output: [(-25 13 25 62) -25]
Test Case: 764 | Input/Output: [(-70 33 -19 49) -70]
Test Case: 765 | Input/Output: [(-16 -94 64 64) -94]
Test Case: 766 | Input/Output: [(-34 -12 36 82) -34]
Test Case: 767 | Input/Output: [(87 -97 -4 49) -97]
Test Case: 768 | Input/Output: [(-87 -71 67 13) -87]
Test Case: 769 | Input/Output: [(14 -50 88 5) -50]
Test Case: 770 | Input/Output: [(10 -36 -49 37) -49]
Test Case: 771 | Input/Output: [(32 -43 23 -47) -47]
Test Case: 772 | Input/Output: [(70 -60 77 49) -60]
Test Case: 773 | Input/Output: [(82 -31 -98 -13) -98]
Test Case: 774 | Input/Output: [(-54 53 -57 -89) -89]
Test Case: 775 | Input/Output: [(0 16 44 3) 0]
Test Case: 776 | Input/Output: [(-35 79 -33 -65) -65]
Test Case: 777 | Input/Output: [(28 -95 -70 28) -95]
Test Case: 778 | Input/Output: [(2 21 -88 21) -88]
Test Case: 779 | Input/Output: [(63 35 0 22) 0]
Test Case: 780 | Input/Output: [(82 79 -35 -14) -35]
Test Case: 781 | Input/Output: [(40 -18 76 -66) -66]
Test Case: 782 | Input/Output: [(-11 8 -74 79) -74]
Test Case: 783 | Input/Output: [(-46 -50 78 97) -50]
Test Case: 784 | Input/Output: [(26 41 70 -92) -92]
Test Case: 785 | Input/Output: [(5 2 -41 18) -41]
Test Case: 786 | Input/Output: [(79 80 -51 7) -51]
Test Case: 787 | Input/Output: [(76 -98 23 61) -98]
Test Case: 788 | Input/Output: [(55 87 -15 -23) -23]
Test Case: 789 | Input/Output: [(-25 -82 49 30) -82]
Test Case: 790 | Input/Output: [(-40 50 40 10) -40]
Test Case: 791 | Input/Output: [(88 73 -45 52) -45]
Test Case: 792 | Input/Output: [(-22 -41 94 -95) -95]
Test Case: 793 | Input/Output: [(10 -79 -36 -91) -91]
Test Case: 794 | Input/Output: [(11 62 10 37) 10]
Test Case: 795 | Input/Output: [(59 -27 94 -33) -33]
Test Case: 796 | Input/Output: [(-77 57 -28 -4) -77]
Test Case: 797 | Input/Output: [(-92 70 69 -40) -92]
Test Case: 798 | Input/Output: [(13 -78 58 67) -78]
Test Case: 799 | Input/Output: [(-57 -69 99 55) -69]
Test Case: 800 | Input/Output: [(-47 74 -15 -38) -47]
Test Case: 801 | Input/Output: [(22 80 -6 42) -6]
Test Case: 802 | Input/Output: [(100 38 -70 -94) -94]
Test Case: 803 | Input/Output: [(69 -34 34 -71) -71]
Test Case: 804 | Input/Output: [(60 64 -27 -5) -27]
Test Case: 805 | Input/Output: [(20 -53 24 -19) -53]
Test Case: 806 | Input/Output: [(-5 -59 12 59) -59]
Test Case: 807 | Input/Output: [(-89 -81 -76 22) -89]
Test Case: 808 | Input/Output: [(7 -17 32 95) -17]
Test Case: 809 | Input/Output: [(-17 93 -60 -88) -88]
Test Case: 810 | Input/Output: [(62 -5 98 65) -5]
Test Case: 811 | Input/Output: [(-96 96 -77 11) -96]
Test Case: 812 | Input/Output: [(-58 -96 -77 -90) -96]
Test Case: 813 | Input/Output: [(58 60 -91 -100) -100]
Test Case: 814 | Input/Output: [(32 5 95 9) 5]
Test Case: 815 | Input/Output: [(-7 9 -63 -83) -83]
Test Case: 816 | Input/Output: [(-73 -61 9 -37) -73]
Test Case: 817 | Input/Output: [(55 -66 -99 -72) -99]
Test Case: 818 | Input/Output: [(14 74 -51 67) -51]
Test Case: 819 | Input/Output: [(-29 -17 -21 -38) -38]
Test Case: 820 | Input/Output: [(90 -16 -34 -64) -64]
Test Case: 821 | Input/Output: [(85 -45 89 51) -45]
Test Case: 822 | Input/Output: [(92 51 0 -58) -58]
Test Case: 823 | Input/Output: [(-43 -98 -8 -75) -98]
Test Case: 824 | Input/Output: [(85 22 84 -81) -81]
Test Case: 825 | Input/Output: [(-23 -61 99 -89) -89]
Test Case: 826 | Input/Output: [(-89 -21 76 5) -89]
Test Case: 827 | Input/Output: [(-70 21 -9 -65) -70]
Test Case: 828 | Input/Output: [(-86 62 -81 55) -86]
Test Case: 829 | Input/Output: [(12 10 56 -82) -82]
Test Case: 830 | Input/Output: [(-22 63 -74 77) -74]
Test Case: 831 | Input/Output: [(-96 -97 48 -94) -97]
Test Case: 832 | Input/Output: [(-39 -15 -50 32) -50]
Test Case: 833 | Input/Output: [(-50 -75 16 -86) -86]
Test Case: 834 | Input/Output: [(16 -83 -17 78) -83]
Test Case: 835 | Input/Output: [(66 -79 27 -37) -79]
Test Case: 836 | Input/Output: [(2 -20 -3 36) -20]
Test Case: 837 | Input/Output: [(76 -42 -42 -62) -62]
Test Case: 838 | Input/Output: [(69 -54 49 -51) -54]
Test Case: 839 | Input/Output: [(-60 86 -98 35) -98]
Test Case: 840 | Input/Output: [(20 -91 71 -51) -91]
Test Case: 841 | Input/Output: [(-35 -2 23 27) -35]
Test Case: 842 | Input/Output: [(29 -85 -3 39) -85]
Test Case: 843 | Input/Output: [(9 45 30 9) 9]
Test Case: 844 | Input/Output: [(19 -90 31 78) -90]
Test Case: 845 | Input/Output: [(-35 83 -25 -36) -36]
Test Case: 846 | Input/Output: [(35 81 67 70) 35]
Test Case: 847 | Input/Output: [(51 -16 44 57) -16]
Test Case: 848 | Input/Output: [(-53 -71 -63 51) -71]
Test Case: 849 | Input/Output: [(-68 -38 -49 26) -68]
Test Case: 850 | Input/Output: [(59 -56 -2 -96) -96]
Test Case: 851 | Input/Output: [(-57 -91 -45 -17) -91]
Test Case: 852 | Input/Output: [(-97 -75 27 61) -97]
Test Case: 853 | Input/Output: [(33 4 24 -32) -32]
Test Case: 854 | Input/Output: [(64 92 -38 66) -38]
Test Case: 855 | Input/Output: [(0 -35 10 -93) -93]
Test Case: 856 | Input/Output: [(-100 87 91 43) -100]
Test Case: 857 | Input/Output: [(36 0 -56 24) -56]
Test Case: 858 | Input/Output: [(53 8 -22 -65) -65]
Test Case: 859 | Input/Output: [(-54 -12 92 -41) -54]
Test Case: 860 | Input/Output: [(63 68 5 33) 5]
Test Case: 861 | Input/Output: [(88 -38 24 66) -38]
Test Case: 862 | Input/Output: [(41 -15 19 24) -15]
Test Case: 863 | Input/Output: [(-25 4 2 36) -25]
Test Case: 864 | Input/Output: [(-2 -13 36 13) -13]
Test Case: 865 | Input/Output: [(-77 -18 -92 -19) -92]
Test Case: 866 | Input/Output: [(7 -32 -47 -5) -47]
Test Case: 867 | Input/Output: [(-83 -49 -95 2) -95]
Test Case: 868 | Input/Output: [(-27 -1 34 60) -27]
Test Case: 869 | Input/Output: [(18 -90 -86 26) -90]
Test Case: 870 | Input/Output: [(-34 -23 28 25) -34]
Test Case: 871 | Input/Output: [(-84 -21 16 -73) -84]
Test Case: 872 | Input/Output: [(-94 91 73 42) -94]
Test Case: 873 | Input/Output: [(52 -56 -72 -35) -72]
Test Case: 874 | Input/Output: [(100 95 48 59) 48]
Test Case: 875 | Input/Output: [(-77 27 -5 67) -77]
Test Case: 876 | Input/Output: [(-73 -25 -49 99) -73]
Test Case: 877 | Input/Output: [(9 -62 99 61) -62]
Test Case: 878 | Input/Output: [(64 -10 -19 -42) -42]
Test Case: 879 | Input/Output: [(99 32 89 -93) -93]
Test Case: 880 | Input/Output: [(-10 -78 -3 -38) -78]
Test Case: 881 | Input/Output: [(-35 -98 -88 -48) -98]
Test Case: 882 | Input/Output: [(-10 -64 22 -79) -79]
Test Case: 883 | Input/Output: [(98 73 24 32) 24]
Test Case: 884 | Input/Output: [(-76 22 -99 60) -99]
Test Case: 885 | Input/Output: [(-13 -3 87 -27) -27]
Test Case: 886 | Input/Output: [(69 -35 100 21) -35]
Test Case: 887 | Input/Output: [(80 14 2 -19) -19]
Test Case: 888 | Input/Output: [(-78 21 96 27) -78]
Test Case: 889 | Input/Output: [(3 77 66 -68) -68]
Test Case: 890 | Input/Output: [(-49 -6 -36 -57) -57]
Test Case: 891 | Input/Output: [(10 -28 -72 80) -72]
Test Case: 892 | Input/Output: [(-52 -48 -64 -17) -64]
Test Case: 893 | Input/Output: [(7 92 94 -10) -10]
Test Case: 894 | Input/Output: [(18 98 -5 27) -5]
Test Case: 895 | Input/Output: [(63 -18 -62 62) -62]
Test Case: 896 | Input/Output: [(63 17 97 36) 17]
Test Case: 897 | Input/Output: [(41 24 37 -51) -51]
Test Case: 898 | Input/Output: [(-73 90 53 -32) -73]
Test Case: 899 | Input/Output: [(60 91 -58 -59) -59]
Test Case: 900 | Input/Output: [(-93 99 87 77) -93]
Test Case: 901 | Input/Output: [(-3 -22 -72 -60) -72]
Test Case: 902 | Input/Output: [(38 44 -82 59) -82]
Test Case: 903 | Input/Output: [(-88 23 0 -25) -88]
Test Case: 904 | Input/Output: [(-87 -79 -13 -55) -87]
Test Case: 905 | Input/Output: [(92 -44 52 -98) -98]
Test Case: 906 | Input/Output: [(-10 -40 -9 -66) -66]
Test Case: 907 | Input/Output: [(-54 -82 -38 -17) -82]
Test Case: 908 | Input/Output: [(-10 -60 -21 40) -60]
Test Case: 909 | Input/Output: [(84 49 -13 95) -13]
Test Case: 910 | Input/Output: [(56 -37 89 21) -37]
Test Case: 911 | Input/Output: [(54 52 -51 97) -51]
Test Case: 912 | Input/Output: [(93 43 -62 -7) -62]
Test Case: 913 | Input/Output: [(100 -88 10 13) -88]
Test Case: 914 | Input/Output: [(64 -39 -80 35) -80]
Test Case: 915 | Input/Output: [(64 -3 -56 -60) -60]
Test Case: 916 | Input/Output: [(34 -17 -77 -10) -77]
Test Case: 917 | Input/Output: [(-10 -43 73 -86) -86]
Test Case: 918 | Input/Output: [(13 41 -94 12) -94]
Test Case: 919 | Input/Output: [(-86 93 93 48) -86]
Test Case: 920 | Input/Output: [(-53 19 98 38) -53]
Test Case: 921 | Input/Output: [(56 62 89 2) 2]
Test Case: 922 | Input/Output: [(-45 69 -46 -62) -62]
Test Case: 923 | Input/Output: [(10 34 -84 -92) -92]
Test Case: 924 | Input/Output: [(-52 6 -4 21) -52]
Test Case: 925 | Input/Output: [(49 -85 -1 -20) -85]
Test Case: 926 | Input/Output: [(90 -83 -90 74) -90]
Test Case: 927 | Input/Output: [(86 88 30 -92) -92]
Test Case: 928 | Input/Output: [(-11 10 68 34) -11]
Test Case: 929 | Input/Output: [(63 98 96 5) 5]
Test Case: 930 | Input/Output: [(5 -60 -92 55) -92]
Test Case: 931 | Input/Output: [(97 29 27 52) 27]
Test Case: 932 | Input/Output: [(-97 -18 -85 -7) -97]
Test Case: 933 | Input/Output: [(-100 66 -30 -27) -100]
Test Case: 934 | Input/Output: [(25 74 -29 -85) -85]
Test Case: 935 | Input/Output: [(74 -15 74 48) -15]
Test Case: 936 | Input/Output: [(81 62 -20 52) -20]
Test Case: 937 | Input/Output: [(27 -68 -30 43) -68]
Test Case: 938 | Input/Output: [(49 91 -74 65) -74]
Test Case: 939 | Input/Output: [(-5 -63 63 -43) -63]
Test Case: 940 | Input/Output: [(96 -31 32 -89) -89]
Test Case: 941 | Input/Output: [(-46 24 -16 49) -46]
Test Case: 942 | Input/Output: [(-47 94 -32 81) -47]
Test Case: 943 | Input/Output: [(46 37 -17 93) -17]
Test Case: 944 | Input/Output: [(69 22 55 55) 22]
Test Case: 945 | Input/Output: [(-29 -86 26 91) -86]
Test Case: 946 | Input/Output: [(-53 86 32 64) -53]
Test Case: 947 | Input/Output: [(67 -18 -21 -1) -21]
Test Case: 948 | Input/Output: [(29 -6 -54 -47) -54]
Test Case: 949 | Input/Output: [(-9 -81 44 94) -81]
Test Case: 950 | Input/Output: [(-51 20 18 -36) -51]
Test Case: 951 | Input/Output: [(78 40 -4 56) -4]
Test Case: 952 | Input/Output: [(-93 43 -99 -84) -99]
Test Case: 953 | Input/Output: [(21 -49 87 -94) -94]
Test Case: 954 | Input/Output: [(-8 36 -1 82) -8]
Test Case: 955 | Input/Output: [(-6 -73 -84 35) -84]
Test Case: 956 | Input/Output: [(-99 -32 37 -41) -99]
Test Case: 957 | Input/Output: [(-30 5 -47 40) -47]
Test Case: 958 | Input/Output: [(83 46 -98 -98) -98]
Test Case: 959 | Input/Output: [(21 0 -67 33) -67]
Test Case: 960 | Input/Output: [(-24 -30 -11 -66) -66]
Test Case: 961 | Input/Output: [(29 -83 83 -21) -83]
Test Case: 962 | Input/Output: [(-4 55 61 -95) -95]
Test Case: 963 | Input/Output: [(-6 -95 -30 86) -95]
Test Case: 964 | Input/Output: [(-32 44 -19 25) -32]
Test Case: 965 | Input/Output: [(-5 -24 -86 -65) -86]
Test Case: 966 | Input/Output: [(73 31 87 56) 31]
Test Case: 967 | Input/Output: [(3 93 35 18) 3]
Test Case: 968 | Input/Output: [(-4 74 24 -32) -32]
Test Case: 969 | Input/Output: [(-95 -33 37 60) -95]
Test Case: 970 | Input/Output: [(53 -61 -51 -48) -61]
Test Case: 971 | Input/Output: [(11 -96 -12 -8) -96]
Test Case: 972 | Input/Output: [(-75 -82 -15 77) -82]
Test Case: 973 | Input/Output: [(90 -82 -76 -85) -85]
Test Case: 974 | Input/Output: [(-99 19 52 -68) -99]
Test Case: 975 | Input/Output: [(97 84 -1 -65) -65]
Test Case: 976 | Input/Output: [(95 53 -5 -80) -80]
Test Case: 977 | Input/Output: [(82 24 39 -38) -38]
Test Case: 978 | Input/Output: [(82 -25 15 -16) -25]
Test Case: 979 | Input/Output: [(-97 99 -16 50) -97]
Test Case: 980 | Input/Output: [(90 33 19 -54) -54]
Test Case: 981 | Input/Output: [(-81 -66 94 -78) -81]
Test Case: 982 | Input/Output: [(66 -61 19 63) -61]
Test Case: 983 | Input/Output: [(-57 85 96 -95) -95]
Test Case: 984 | Input/Output: [(-85 -94 -60 44) -94]
Test Case: 985 | Input/Output: [(65 9 -60 -40) -60]
Test Case: 986 | Input/Output: [(-41 68 9 75) -41]
Test Case: 987 | Input/Output: [(-64 79 57 -8) -64]
Test Case: 988 | Input/Output: [(-85 61 6 44) -85]
Test Case: 989 | Input/Output: [(98 -79 -58 -88) -88]
Test Case: 990 | Input/Output: [(-33 26 58 -54) -54]
Test Case: 991 | Input/Output: [(-71 88 -12 65) -71]
Test Case: 992 | Input/Output: [(-15 -28 -60 68) -60]
Test Case: 993 | Input/Output: [(-31 96 -69 -55) -69]
Test Case: 994 | Input/Output: [(-84 74 78 -68) -84]
Test Case: 995 | Input/Output: [(92 65 24 -70) -70]
Test Case: 996 | Input/Output: [(-34 -22 65 41) -34]
Test Case: 997 | Input/Output: [(77 -81 -89 39) -89]
Test Case: 998 | Input/Output: [(70 73 62 -96) -96]
Test Case: 999 | Input/Output: [(-18 -68 30 -16) -68]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 42 119 11 94 -23 -48 -56 26 35 -55 19 16 62 -99 -40 -86
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[44 25 44 44] 25] [[73 4 73 73] 4] [[1 1 1 51] 1] [[-32 74 74 74] -32] [[15 -75 15 15] -75] [[71 71 71 -18] -18] [[7 10 7 7] 7] [[58 54 54 54] 54] [[79 79 11 79] 11] [[21 81 81 81] 21] [(20 20 20 20) 20] [(25 25 25 25) 25] [(77 77 77 77) 77] [(51 51 51 51) 51] [(65 65 65 65) 65] [(5 40 62 5) 5] [(70 97 39 79) 39] [(16 98 100 12) 12] [(89 39 75 79) 39] [(95 44 57 12) 12] [(79 80 34 73) 34] [(15 81 34 16) 15] [(5 43 4 60) 4] [(23 25 37 52) 23] [(69 22 72 33) 22] [(36 49 81 5) 5] [(56 68 37 84) 37] [(26 55 58 94) 26] [(78 15 53 21) 15] [(47 61 80 5) 5] [(86 48 1 16) 1] [(97 79 47 55) 47] [(58 44 21 62) 21] [(98 20 99 47) 20] [(91 97 95 14) 14] [(53 -44 51 70) -44] [(24 -71 -38 -94) -94] [(77 44 100 -13) -13] [(-13 44 10 -78) -78] [(41 4 -33 99) -33] [(98 -11 77 -27) -27] [(16 -77 -51 -69) -77] [(75 -86 10 -24) -86] [(1 -97 -69 90) -97] [(-71 -88 27 -64) -88] [(11 11 55 2) 2] [(-50 27 43 -44) -50] [(-21 8 -53 -5) -53] [(-45 -93 89 -47) -93] [(-88 -57 -62 -77) -88] [(-85 81 -68 -59) -85] [(-17 64 76 30) -17] [(-83 -79 28 -85) -85] [(21 -46 47 -54) -54] [(97 -39 -3 -23) -39] [(-11 84 -31 25) -31] [(70 -34 43 -87) -87] [(-25 -93 68 -18) -93] [(-44 -38 -34 -76) -76] [(-77 -64 -21 -98) -98] [(-22 -14 -31 -67) -67] [(-94 71 -37 73) -94] [(-39 -44 9 1) -44] [(90 -33 -17 -63) -63] [(96 -30 17 80) -30] [(60 7 65 -26) -26] [(-4 -86 -65 51) -86] [(42 79 -65 -56) -65] [(56 -90 -19 44) -90] [(76 0 -84 72) -84] [(86 5 93 97) 5] [(85 -43 -92 -30) -92] [(-34 -83 5 -100) -100] [(-90 34 7 -1) -90] [(-49 64 -19 29) -49] [(-62 -51 6 -9) -62] [(66 48 33 -75) -75] [(-75 56 60 88) -75] [(-33 -84 -32 16) -84] [(-9 -53 51 -9) -53] [(40 -69 95 40) -69] [(14 68 3 -49) -49] [(32 -23 -73 -89) -89] [(-40 -39 -10 43) -40] [(-9 33 83 -1) -9] [(-36 -47 -33 -90) -90] [(-53 43 94 -32) -53] [(-58 23 -1 29) -58] [(-60 -39 -48 3) -60] [(30 14 -6 -75) -75] [(-57 -37 -64 12) -64] [(60 60 -47 -43) -47] [(-79 -21 -94 33) -94] [(25 -62 78 -75) -75] [(53 -2 -28 58) -28])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 25                  | Program output: 44                 
Correct output: 4                   | Program output: 73                 
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: 74                 
Correct output: -75                 | Program output: 15                 
Correct output: -18                 | Program output: 71                 
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 11                 
Correct output: 21                  | Program output: 81                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 62                 
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 100                
Correct output: 39                  | Program output: 75                 
Correct output: 12                  | Program output: 57                 
Correct output: 34                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 4                   | Program output: 4                  
Correct output: 23                  | Program output: 37                 
Correct output: 22                  | Program output: 72                 
Correct output: 5                   | Program output: 81                 
Correct output: 37                  | Program output: 37                 
Correct output: 26                  | Program output: 58                 
Correct output: 15                  | Program output: 53                 
Correct output: 5                   | Program output: 80                 
Correct output: 1                   | Program output: 1                  
Correct output: 47                  | Program output: 47                 
Correct output: 21                  | Program output: 21                 
Correct output: 20                  | Program output: 99                 
Correct output: 14                  | Program output: 95                 
Correct output: -44                 | Program output: 51                 
Correct output: -94                 | Program output: -38                
Correct output: -13                 | Program output: 100                
Correct output: -78                 | Program output: 10                 
Correct output: -33                 | Program output: -33                
Correct output: -27                 | Program output: 77                 
Correct output: -77                 | Program output: -51                
Correct output: -86                 | Program output: 10                 
Correct output: -97                 | Program output: -69                
Correct output: -88                 | Program output: 27                 
Correct output: 2                   | Program output: 55                 
Correct output: -50                 | Program output: 43                 
Correct output: -53                 | Program output: -53                
Correct output: -93                 | Program output: 89                 
Correct output: -88                 | Program output: -62                
Correct output: -85                 | Program output: -68                
Correct output: -17                 | Program output: 76                 
Correct output: -85                 | Program output: 28                 
Correct output: -54                 | Program output: 47                 
Correct output: -39                 | Program output: -3                 
Correct output: -31                 | Program output: -31                
Correct output: -87                 | Program output: 43                 
Correct output: -93                 | Program output: 68                 
Correct output: -76                 | Program output: -34                
Correct output: -98                 | Program output: -21                
Correct output: -67                 | Program output: -31                
Correct output: -94                 | Program output: -37                
Correct output: -44                 | Program output: 9                  
Correct output: -63                 | Program output: -17                
Correct output: -30                 | Program output: 17                 
Correct output: -26                 | Program output: 65                 
Correct output: -86                 | Program output: -65                
Correct output: -65                 | Program output: -65                
Correct output: -90                 | Program output: -19                
Correct output: -84                 | Program output: -84                
Correct output: 5                   | Program output: 93                 
Correct output: -92                 | Program output: -92                
Correct output: -100                | Program output: 5                  
Correct output: -90                 | Program output: 7                  
Correct output: -49                 | Program output: -19                
Correct output: -62                 | Program output: 6                  
Correct output: -75                 | Program output: 33                 
Correct output: -75                 | Program output: 60                 
Correct output: -84                 | Program output: -32                
Correct output: -53                 | Program output: 51                 
Correct output: -69                 | Program output: 95                 
Correct output: -49                 | Program output: 3                  
Correct output: -89                 | Program output: -73                
Correct output: -40                 | Program output: -10                
Correct output: -9                  | Program output: 83                 
Correct output: -90                 | Program output: -33                
Correct output: -53                 | Program output: 94                 
Correct output: -58                 | Program output: -1                 
Correct output: -60                 | Program output: -48                
Correct output: -75                 | Program output: -6                 
Correct output: -64                 | Program output: -64                
Correct output: -47                 | Program output: -47                
Correct output: -94                 | Program output: -94                
Correct output: -75                 | Program output: 78                 
Correct output: -28                 | Program output: -28                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction print_boolean} {:close 1, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_while} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_noop} {:close 1, :instruction print_newline} {:close 1, :instruction boolean_eq} {:close 0, :instruction boolean_shove} {:close 1, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_gte} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_dup} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup_times})
Lexicase best program: (print_boolean exec_if () (exec_dup_times (exec_while (integer_yankdup integer_yankdup integer_empty exec_do*range () exec_dup (exec_noop print_newline) boolean_eq) boolean_shove in3) in3 boolean_shove print_integer exec_swap (boolean_yank exec_y (boolean_xor integer_gte) exec_yankdup) (integer_gte integer_dup_items integer_gt) boolean_xor boolean_yankdup in1 exec_noop boolean_eq boolean_dup boolean_pop integer_swap exec_flush boolean_or exec_empty integer_add integer_dup_items integer_dup) boolean_frominteger boolean_invert_first_then_and integer_eq exec_eq boolean_frominteger boolean_yank boolean_invert_first_then_and boolean_pop exec_s_when_autoconstructing (boolean_dup boolean_invert_second_then_and integer_rot integer_lt) (exec_k_when_autoconstructing (exec_dup_times ()) ()) ())
Lexicase best errors: [1 0 0 0 1 1 1 1 1 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 71
Percent parens: 0.225
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction print_boolean} {:close 1, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_while} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_noop} {:close 1, :instruction print_newline} {:close 1, :instruction boolean_eq} {:close 0, :instruction boolean_shove} {:close 1, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_gte} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_dup} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup_times})
Zero cases best program: (print_boolean exec_if () (exec_dup_times (exec_while (integer_yankdup integer_yankdup integer_empty exec_do*range () exec_dup (exec_noop print_newline) boolean_eq) boolean_shove in3) in3 boolean_shove print_integer exec_swap (boolean_yank exec_y (boolean_xor integer_gte) exec_yankdup) (integer_gte integer_dup_items integer_gt) boolean_xor boolean_yankdup in1 exec_noop boolean_eq boolean_dup boolean_pop integer_swap exec_flush boolean_or exec_empty integer_add integer_dup_items integer_dup) boolean_frominteger boolean_invert_first_then_and integer_eq exec_eq boolean_frominteger boolean_yank boolean_invert_first_then_and boolean_pop exec_s_when_autoconstructing (boolean_dup boolean_invert_second_then_and integer_rot integer_lt) (exec_k_when_autoconstructing (exec_dup_times ()) ()) ())
Zero cases best errors: [1 0 0 0 1 1 1 1 1 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 71
Percent parens: 0.225
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 6 8 14 3 3 6 2 3 6)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (3 6 8 14 3 3 6 2 3 6)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction tagged_802} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_min} {:close 1, :instruction in3} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_swap} {:close 0, :instruction print_integer} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_dec} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_when} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_eq} {:close 1, :instruction exec_when} {:close 0, :instruction exec_flush} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_add} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_exec} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction integer_pop} {:close 1, :instruction exec_k} {:close 0, :instruction boolean_empty} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_add})
Best program: (tagged_802 integer_lt boolean_shove integer_min in3 boolean_yank integer_swap print_integer integer_rot integer_dec integer_dec exec_empty exec_when (integer_empty) boolean_eq exec_when () exec_flush boolean_rot integer_mod integer_fromboolean integer_add exec_s_when_autoconstructing () (integer_mult exec_rot (boolean_yankdup boolean_yankdup boolean_invert_second_then_and) (boolean_dup_times print_exec (boolean_empty) exec_stackdepth) (exec_yank integer_shove integer_pop) exec_k () (boolean_empty integer_gte) boolean_and boolean_empty integer_add) ())
Errors: [1 0 0 0 1 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 40
Size: 52
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 9.946
Median total errors in population: 10
Error averages by case: (0.997 0.994 0.992 0.986 0.997 0.997 0.994 0.998 0.997 0.994)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 50.283
Average program size in population (points): 69.071
Average percent parens in population: 0.278
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.283
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 479485
--- Timings ---
Current time: 1559594031444 milliseconds
Total Time:           2.4 seconds
Initialization:       0.1 seconds,  4.7%
Reproduction:         0.8 seconds, 33.5%
Fitness Testing:      1.5 seconds, 61.7%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 25                  | Program output: 44                 
Correct output: 4                   | Program output: 73                 
Correct output: 1                   | Program output: 51                 
Correct output: -32                 | Program output: 74                 
Correct output: -75                 | Program output: 15                 
Correct output: -18                 | Program output: -18                
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 79                 
Correct output: 21                  | Program output: 81                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 79                 
Correct output: 12                  | Program output: 12                 
Correct output: 39                  | Program output: 79                 
Correct output: 12                  | Program output: 12                 
Correct output: 34                  | Program output: 73                 
Correct output: 15                  | Program output: 16                 
Correct output: 4                   | Program output: 60                 
Correct output: 23                  | Program output: 52                 
Correct output: 22                  | Program output: 33                 
Correct output: 5                   | Program output: 5                  
Correct output: 37                  | Program output: 84                 
Correct output: 26                  | Program output: 94                 
Correct output: 15                  | Program output: 21                 
Correct output: 5                   | Program output: 5                  
Correct output: 1                   | Program output: 16                 
Correct output: 47                  | Program output: 55                 
Correct output: 21                  | Program output: 62                 
Correct output: 20                  | Program output: 47                 
Correct output: 14                  | Program output: 14                 
Correct output: -44                 | Program output: 70                 
Correct output: -94                 | Program output: -94                
Correct output: -13                 | Program output: -13                
Correct output: -78                 | Program output: -78                
Correct output: -33                 | Program output: 99                 
Correct output: -27                 | Program output: -27                
Correct output: -77                 | Program output: -69                
Correct output: -86                 | Program output: -24                
Correct output: -97                 | Program output: 90                 
Correct output: -88                 | Program output: -64                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -44                
Correct output: -53                 | Program output: -5                 
Correct output: -93                 | Program output: -47                
Correct output: -88                 | Program output: -77                
Correct output: -85                 | Program output: -59                
Correct output: -17                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -39                 | Program output: -23                
Correct output: -31                 | Program output: 25                 
Correct output: -87                 | Program output: -87                
Correct output: -93                 | Program output: -18                
Correct output: -76                 | Program output: -76                
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -94                 | Program output: 73                 
Correct output: -44                 | Program output: 1                  
Correct output: -63                 | Program output: -63                
Correct output: -30                 | Program output: 80                 
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 51                 
Correct output: -65                 | Program output: -56                
Correct output: -90                 | Program output: 44                 
Correct output: -84                 | Program output: 72                 
Correct output: 5                   | Program output: 97                 
Correct output: -92                 | Program output: -30                
Correct output: -100                | Program output: -100               
Correct output: -90                 | Program output: -1                 
Correct output: -49                 | Program output: 29                 
Correct output: -62                 | Program output: -9                 
Correct output: -75                 | Program output: -75                
Correct output: -75                 | Program output: 88                 
Correct output: -84                 | Program output: 16                 
Correct output: -53                 | Program output: -9                 
Correct output: -69                 | Program output: 40                 
Correct output: -49                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: 43                 
Correct output: -9                  | Program output: -1                 
Correct output: -90                 | Program output: -90                
Correct output: -53                 | Program output: -32                
Correct output: -58                 | Program output: 29                 
Correct output: -60                 | Program output: 3                  
Correct output: -75                 | Program output: -75                
Correct output: -64                 | Program output: 12                 
Correct output: -47                 | Program output: -43                
Correct output: -94                 | Program output: 33                 
Correct output: -75                 | Program output: -75                
Correct output: -28                 | Program output: 58                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_add} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_dup_times} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_pop} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in3} {:close 0, :instruction -21} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_swap} {:close 0, :instruction in4} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tag_integer_2} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_k} {:close 0, :instruction exec_y} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 2, :instruction in1} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_when} {:close 0, :instruction exec_flush} {:close 1, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction exec_s} {:close 2, :instruction exec_noop} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction exec_y} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_do*while} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dec} {:close 0, :instruction print_boolean})
Lexicase best program: (exec_k_when_autoconstructing (boolean_pop integer_add exec_empty boolean_dup_times integer_dup_times) (integer_flush boolean_dup_times exec_pop () exec_noop) integer_pop integer_mod exec_stackdepth exec_dup_times (print_integer boolean_dup_times in3 -21 integer_inc exec_swap () (in4 exec_pop (boolean_swap in3 print_integer exec_s (exec_noop boolean_dup_items tag_integer_2 integer_yank exec_k () (exec_y (exec_eq boolean_dup_items integer_eq boolean_flush in1)) boolean_yankdup exec_when (exec_flush in1) integer_add exec_s (exec_noop) () (integer_div boolean_frominteger) exec_y () integer_shove exec_do*while () integer_fromboolean) (boolean_dup_times) (integer_lte integer_gte integer_dec print_boolean)))))
Lexicase best errors: [0 1 1 0 0 0 1 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 75
Percent parens: 0.267
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_add} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_dup_times} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_pop} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in3} {:close 0, :instruction -21} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_swap} {:close 0, :instruction in4} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tag_integer_2} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_k} {:close 0, :instruction exec_y} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 2, :instruction in1} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_when} {:close 0, :instruction exec_flush} {:close 1, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction exec_s} {:close 2, :instruction exec_noop} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction exec_y} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_do*while} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dec} {:close 0, :instruction print_boolean})
Zero cases best program: (exec_k_when_autoconstructing (boolean_pop integer_add exec_empty boolean_dup_times integer_dup_times) (integer_flush boolean_dup_times exec_pop () exec_noop) integer_pop integer_mod exec_stackdepth exec_dup_times (print_integer boolean_dup_times in3 -21 integer_inc exec_swap () (in4 exec_pop (boolean_swap in3 print_integer exec_s (exec_noop boolean_dup_items tag_integer_2 integer_yank exec_k () (exec_y (exec_eq boolean_dup_items integer_eq boolean_flush in1)) boolean_yankdup exec_when (exec_flush in1) integer_add exec_s (exec_noop) () (integer_div boolean_frominteger) exec_y () integer_shove exec_do*while () integer_fromboolean) (boolean_dup_times) (integer_lte integer_gte integer_dec print_boolean)))))
Zero cases best errors: [0 1 1 0 0 0 1 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 75
Percent parens: 0.267
--- Lexicase Population Statistics ---
Count of elite individuals by case: (114 201 205 113 111 458 81 66 191 103)
Population mean number of elite cases: 1.64
Count of perfect (error zero) individuals by case: (114 201 205 113 111 458 81 66 191 103)
Population mean number of perfect (error zero) cases: 1.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_add} {:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_dup} {:close 1, :instruction exec_pop} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in3} {:close 0, :instruction -21} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_swap} {:close 0, :instruction in4} {:close 0, :instruction exec_pop} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction tag_integer_2} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_k} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 1, :instruction integer_swap} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_when} {:close 0, :instruction exec_flush} {:close 1, :instruction in1} {:close 0, :instruction exec_s} {:close 2, :instruction exec_noop} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dec} {:close 0, :instruction print_boolean})
Best program: (exec_k_when_autoconstructing (boolean_pop integer_add exec_dup_times () exec_empty integer_dup_times) (exec_stackdepth integer_flush boolean_dup_times integer_dup) exec_pop () exec_noop integer_pop integer_mod exec_stackdepth exec_dup_times (print_integer boolean_dup_times in3 -21 integer_inc exec_swap () (in4 exec_pop (in3 print_integer exec_s (exec_noop boolean_dup_items tag_integer_2 integer_yank exec_k () (exec_y (boolean_dup_items integer_eq boolean_flush integer_swap) boolean_yankdup exec_when (exec_flush in1) exec_s (exec_noop) () (integer_div boolean_frominteger) integer_shove integer_fromboolean) exec_s_when_autoconstructing (boolean_dup_times) (integer_gte integer_dec print_boolean) ()) () ()))))
Errors: [0 1 1 0 0 0 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 52
Size: 74
Percent parens: 0.297
--- Population Statistics ---
Average total errors in population: 8.357
Median total errors in population: 9
Error averages by case: (0.886 0.799 0.795 0.887 0.889 0.542 0.919 0.934 0.809 0.897)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 44.875
Average program size in population (points): 60.185
Average percent parens in population: 0.256
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.997
Total error diversity:				 0.005
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.224
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 947477
--- Timings ---
Current time: 1559594033283 milliseconds
Total Time:           4.2 seconds
Initialization:       0.1 seconds,  2.6%
Reproduction:         1.8 seconds, 42.3%
Fitness Testing:      2.0 seconds, 46.6%
Report:               0.4 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 427
Test mean error for best: 0.42700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 25                  | Program output: 25                 
Correct output: 4                   | Program output: 4                  
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: 74                 
Correct output: -75                 | Program output: -75                
Correct output: -18                 | Program output: -18                
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 79                 
Correct output: 21                  | Program output: 81                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 79                 
Correct output: 12                  | Program output: 12                 
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 12                 
Correct output: 34                  | Program output: 73                 
Correct output: 15                  | Program output: 16                 
Correct output: 4                   | Program output: 43                 
Correct output: 23                  | Program output: 25                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 5                  
Correct output: 37                  | Program output: 68                 
Correct output: 26                  | Program output: 55                 
Correct output: 15                  | Program output: 15                 
Correct output: 5                   | Program output: 5                  
Correct output: 1                   | Program output: 16                 
Correct output: 47                  | Program output: 55                 
Correct output: 21                  | Program output: 44                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -44                 | Program output: -44                
Correct output: -94                 | Program output: -94                
Correct output: -13                 | Program output: -13                
Correct output: -78                 | Program output: -78                
Correct output: -33                 | Program output: 4                  
Correct output: -27                 | Program output: -27                
Correct output: -77                 | Program output: -77                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -88                 | Program output: -88                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -44                
Correct output: -53                 | Program output: -5                 
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -77                
Correct output: -85                 | Program output: -59                
Correct output: -17                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -39                 | Program output: -39                
Correct output: -31                 | Program output: 25                 
Correct output: -87                 | Program output: -87                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -94                 | Program output: 71                 
Correct output: -44                 | Program output: -44                
Correct output: -63                 | Program output: -63                
Correct output: -30                 | Program output: -30                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: -86                
Correct output: -65                 | Program output: -56                
Correct output: -90                 | Program output: -90                
Correct output: -84                 | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: -92                 | Program output: -43                
Correct output: -100                | Program output: -100               
Correct output: -90                 | Program output: -1                 
Correct output: -49                 | Program output: 29                 
Correct output: -62                 | Program output: -51                
Correct output: -75                 | Program output: -75                
Correct output: -75                 | Program output: 56                 
Correct output: -84                 | Program output: -84                
Correct output: -53                 | Program output: -53                
Correct output: -69                 | Program output: -69                
Correct output: -49                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: -39                
Correct output: -9                  | Program output: -1                 
Correct output: -90                 | Program output: -90                
Correct output: -53                 | Program output: -32                
Correct output: -58                 | Program output: 23                 
Correct output: -60                 | Program output: -39                
Correct output: -75                 | Program output: -75                
Correct output: -64                 | Program output: -37                
Correct output: -47                 | Program output: -43                
Correct output: -94                 | Program output: -21                
Correct output: -75                 | Program output: -75                
Correct output: -28                 | Program output: -2                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Lexicase best program: (exec_noop boolean_dup_items exec_s (exec_dup_items integer_max) (in4 exec_when (in3 boolean_dup_items boolean_invert_first_then_and exec_stackdepth integer_pop) exec_while (integer_rot) print_boolean integer_sub tagged_316 in2 exec_empty integer_min) (boolean_swap print_integer))
Lexicase best errors: [1 0 1 1 1 0 0 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 28
Percent parens: 0.214
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Zero cases best program: (exec_noop boolean_dup_items exec_s (exec_dup_items integer_max) (in4 exec_when (in3 boolean_dup_items boolean_invert_first_then_and exec_stackdepth integer_pop) exec_while (integer_rot) print_boolean integer_sub tagged_316 in2 exec_empty integer_min) (boolean_swap print_integer))
Zero cases best errors: [1 0 1 1 1 0 0 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 28
Percent parens: 0.214
--- Lexicase Population Statistics ---
Count of elite individuals by case: (72 65 68 70 71 66 69 69 574 263)
Population mean number of elite cases: 1.39
Count of perfect (error zero) individuals by case: (72 65 68 70 71 66 69 69 574 263)
Population mean number of perfect (error zero) cases: 1.39
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Best program: (exec_noop boolean_dup_items exec_s (exec_dup_items integer_max) (in4 exec_when (in3 boolean_dup_items boolean_invert_first_then_and exec_stackdepth integer_pop) exec_while (integer_rot) print_boolean integer_sub tagged_316 in2 exec_empty integer_min) (boolean_swap print_integer))
Errors: [1 0 1 1 1 0 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 22
Size: 28
Percent parens: 0.214
--- Population Statistics ---
Average total errors in population: 8.613
Median total errors in population: 9
Error averages by case: (0.928 0.935 0.932 0.93 0.929 0.934 0.931 0.931 0.426 0.737)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 49.376
Average program size in population (points): 67.353
Average percent parens in population: 0.267
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.007
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.172
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1299328
--- Timings ---
Current time: 1559594035134 milliseconds
Total Time:           6.1 seconds
Initialization:       0.1 seconds,  1.8%
Reproduction:         3.0 seconds, 49.0%
Fitness Testing:      2.3 seconds, 38.1%
Report:               0.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 632
Test mean error for best: 0.63200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 25                  | Program output: 44                 
Correct output: 4                   | Program output: 73                 
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: -32                
Correct output: -75                 | Program output: 15                 
Correct output: -18                 | Program output: 71                 
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 58                 
Correct output: 11                  | Program output: 79                 
Correct output: 21                  | Program output: 21                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 70                 
Correct output: 12                  | Program output: 16                 
Correct output: 39                  | Program output: 89                 
Correct output: 12                  | Program output: 95                 
Correct output: 34                  | Program output: 79                 
Correct output: 15                  | Program output: 15                 
Correct output: 4                   | Program output: 5                  
Correct output: 23                  | Program output: 23                 
Correct output: 22                  | Program output: 69                 
Correct output: 5                   | Program output: 36                 
Correct output: 37                  | Program output: 56                 
Correct output: 26                  | Program output: 26                 
Correct output: 15                  | Program output: 78                 
Correct output: 5                   | Program output: 47                 
Correct output: 1                   | Program output: 86                 
Correct output: 47                  | Program output: 97                 
Correct output: 21                  | Program output: 58                 
Correct output: 20                  | Program output: 98                 
Correct output: 14                  | Program output: 91                 
Correct output: -44                 | Program output: 53                 
Correct output: -94                 | Program output: 24                 
Correct output: -13                 | Program output: 77                 
Correct output: -78                 | Program output: -13                
Correct output: -33                 | Program output: 41                 
Correct output: -27                 | Program output: 98                 
Correct output: -77                 | Program output: 16                 
Correct output: -86                 | Program output: 75                 
Correct output: -97                 | Program output: 1                  
Correct output: -88                 | Program output: -71                
Correct output: 2                   | Program output: 11                 
Correct output: -50                 | Program output: -50                
Correct output: -53                 | Program output: -21                
Correct output: -93                 | Program output: -45                
Correct output: -88                 | Program output: -88                
Correct output: -85                 | Program output: -85                
Correct output: -17                 | Program output: -17                
Correct output: -85                 | Program output: -83                
Correct output: -54                 | Program output: 21                 
Correct output: -39                 | Program output: 97                 
Correct output: -31                 | Program output: -11                
Correct output: -87                 | Program output: 70                 
Correct output: -93                 | Program output: -25                
Correct output: -76                 | Program output: -44                
Correct output: -98                 | Program output: -77                
Correct output: -67                 | Program output: -22                
Correct output: -94                 | Program output: -94                
Correct output: -44                 | Program output: -39                
Correct output: -63                 | Program output: 90                 
Correct output: -30                 | Program output: 96                 
Correct output: -26                 | Program output: 60                 
Correct output: -86                 | Program output: -4                 
Correct output: -65                 | Program output: 42                 
Correct output: -90                 | Program output: 56                 
Correct output: -84                 | Program output: 76                 
Correct output: 5                   | Program output: 86                 
Correct output: -92                 | Program output: 85                 
Correct output: -100                | Program output: -34                
Correct output: -90                 | Program output: -90                
Correct output: -49                 | Program output: -49                
Correct output: -62                 | Program output: -62                
Correct output: -75                 | Program output: 66                 
Correct output: -75                 | Program output: -75                
Correct output: -84                 | Program output: -33                
Correct output: -53                 | Program output: -9                 
Correct output: -69                 | Program output: 40                 
Correct output: -49                 | Program output: 14                 
Correct output: -89                 | Program output: 32                 
Correct output: -40                 | Program output: -40                
Correct output: -9                  | Program output: -9                 
Correct output: -90                 | Program output: -36                
Correct output: -53                 | Program output: -53                
Correct output: -58                 | Program output: -58                
Correct output: -60                 | Program output: -60                
Correct output: -75                 | Program output: 30                 
Correct output: -64                 | Program output: -57                
Correct output: -47                 | Program output: 60                 
Correct output: -94                 | Program output: -79                
Correct output: -75                 | Program output: 25                 
Correct output: -28                 | Program output: 53                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Lexicase best program: (exec_noop boolean_dup_items exec_s (in4 exec_when (in3 boolean_dup_items boolean_invert_first_then_and exec_stackdepth integer_pop) integer_rot) (integer_sub tagged_316 integer_min) (boolean_swap print_integer))
Lexicase best errors: [1 0 1 0 0 1 1 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 21
Percent parens: 0.238
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Zero cases best program: (exec_noop boolean_dup_items exec_s (in4 exec_when (in3 boolean_dup_items boolean_invert_first_then_and exec_stackdepth integer_pop) integer_rot) (integer_sub tagged_316 integer_min) (boolean_swap print_integer))
Zero cases best errors: [1 0 1 0 0 1 1 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 21
Percent parens: 0.238
--- Lexicase Population Statistics ---
Count of elite individuals by case: (282 150 11 624 160 280 11 280 435 157)
Population mean number of elite cases: 2.39
Count of perfect (error zero) individuals by case: (282 150 11 624 160 280 11 280 435 157)
Population mean number of perfect (error zero) cases: 2.39
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction tagged_435} {:close 0, :instruction integer_rot} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_k} {:close 1, :instruction exec_empty} {:close 0, :instruction print_integer} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_if} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_noop} {:close 1, :instruction in4} {:close 0, :instruction exec_dup_times} {:close 2, :instruction integer_min} {:close 0, :instruction exec_dup_times} {:close 1, :instruction integer_mult} {:close 0, :instruction exec_k} {:close 0, :instruction integer_min} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction exec_k} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_dup_items} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_846} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in4} {:close 0, :instruction tagged_513} {:close 0, :instruction tagged_211} {:close 0, :instruction integer_div} {:close 0, :instruction in2} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_rot} {:close 0, :instruction print_newline} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_flush} {:close 1, :instruction integer_div} {:close 1, :instruction integer_lte} {:close 0, :instruction integer_add} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_noop})
Best program: (tagged_435 integer_rot in1 exec_k (exec_do*range (integer_empty exec_k () (exec_empty) print_integer exec_flush) exec_s () (boolean_yank exec_swap (integer_empty integer_gte integer_lt exec_do*range (exec_if (integer_mult integer_dup boolean_eq exec_noop boolean_rot boolean_eq integer_swap) (integer_eq exec_noop) in4) exec_dup_times (integer_min)) (exec_dup_times (integer_mult) exec_k (integer_min exec_k_when_autoconstructing (exec_empty) (exec_rot (integer_lte boolean_dup_items integer_dup_items boolean_and boolean_flush boolean_flush boolean_empty exec_flush integer_gte integer_dup integer_flush exec_y_when_autoconstructing (exec_k () (integer_gte exec_dup_times (exec_dup_items) boolean_invert_second_then_and exec_yankdup exec_k_when_autoconstructing (exec_rot (boolean_pop boolean_frominteger) (exec_k_when_autoconstructing (boolean_yankdup integer_shove integer_stackdepth integer_lte exec_y (tagged_846 integer_flush integer_dup_items exec_eq exec_noop exec_rot (integer_dec exec_dup_times (in4 tagged_513 tagged_211 integer_div in2 exec_stackdepth) exec_flush boolean_dup_times boolean_swap) (integer_swap boolean_swap exec_eq exec_rot (print_newline integer_flush integer_dec integer_flush integer_div) (integer_lte) (integer_add boolean_xor) boolean_shove exec_do*count (exec_noop)) ())) ()) ()) ()))) () ())) ())) ()) ())
Errors: [0 1 1 0 1 0 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 97
Size: 140
Percent parens: 0.307
--- Population Statistics ---
Average total errors in population: 7.61
Median total errors in population: 9
Error averages by case: (0.718 0.85 0.989 0.376 0.84 0.72 0.989 0.72 0.565 0.843)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 32.986
Average program size in population (points): 44.49
Average percent parens in population: 0.249
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 10
Genome diversity (% unique genomes):	 0.983
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.983
Total error diversity:				 0.006
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.166
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1594859
--- Timings ---
Current time: 1559594036712 milliseconds
Total Time:           7.8 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         4.1 seconds, 52.5%
Fitness Testing:      2.6 seconds, 33.7%
Report:               1.0 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 427
Test mean error for best: 0.42700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 25                  | Program output: 25                 
Correct output: 4                   | Program output: 4                  
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: 74                 
Correct output: -75                 | Program output: -75                
Correct output: -18                 | Program output: -18                
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 79                 
Correct output: 21                  | Program output: 81                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 79                 
Correct output: 12                  | Program output: 12                 
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 12                 
Correct output: 34                  | Program output: 73                 
Correct output: 15                  | Program output: 16                 
Correct output: 4                   | Program output: 43                 
Correct output: 23                  | Program output: 25                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 5                  
Correct output: 37                  | Program output: 68                 
Correct output: 26                  | Program output: 55                 
Correct output: 15                  | Program output: 15                 
Correct output: 5                   | Program output: 5                  
Correct output: 1                   | Program output: 16                 
Correct output: 47                  | Program output: 55                 
Correct output: 21                  | Program output: 44                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -44                 | Program output: -44                
Correct output: -94                 | Program output: -94                
Correct output: -13                 | Program output: -13                
Correct output: -78                 | Program output: -78                
Correct output: -33                 | Program output: 4                  
Correct output: -27                 | Program output: -27                
Correct output: -77                 | Program output: -77                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -88                 | Program output: -88                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -44                
Correct output: -53                 | Program output: -5                 
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -77                
Correct output: -85                 | Program output: -59                
Correct output: -17                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -39                 | Program output: -39                
Correct output: -31                 | Program output: 25                 
Correct output: -87                 | Program output: -87                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -94                 | Program output: 71                 
Correct output: -44                 | Program output: -44                
Correct output: -63                 | Program output: -63                
Correct output: -30                 | Program output: -30                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: -86                
Correct output: -65                 | Program output: -56                
Correct output: -90                 | Program output: -90                
Correct output: -84                 | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: -92                 | Program output: -43                
Correct output: -100                | Program output: -100               
Correct output: -90                 | Program output: -1                 
Correct output: -49                 | Program output: 29                 
Correct output: -62                 | Program output: -51                
Correct output: -75                 | Program output: -75                
Correct output: -75                 | Program output: 56                 
Correct output: -84                 | Program output: -84                
Correct output: -53                 | Program output: -53                
Correct output: -69                 | Program output: -69                
Correct output: -49                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: -39                
Correct output: -9                  | Program output: -1                 
Correct output: -90                 | Program output: -90                
Correct output: -53                 | Program output: -32                
Correct output: -58                 | Program output: 23                 
Correct output: -60                 | Program output: -39                
Correct output: -75                 | Program output: -75                
Correct output: -64                 | Program output: -37                
Correct output: -47                 | Program output: -43                
Correct output: -94                 | Program output: -21                
Correct output: -75                 | Program output: -75                
Correct output: -28                 | Program output: -2                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Lexicase best program: (exec_noop exec_s (exec_dup_items boolean_xor integer_max) (in4 exec_when (in3 boolean_invert_first_then_and exec_shove (exec_stackdepth integer_pop) exec_while (integer_rot) print_boolean boolean_invert_second_then_and boolean_flush tagged_316 in2 exec_empty integer_min) boolean_swap print_integer) ())
Lexicase best errors: [0 0 0 1 0 0 0 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 30
Percent parens: 0.233
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Zero cases best program: (exec_noop exec_s (exec_dup_items boolean_xor integer_max) (in4 exec_when (in3 boolean_invert_first_then_and exec_shove (exec_stackdepth integer_pop) exec_while (integer_rot) print_boolean boolean_invert_second_then_and boolean_flush tagged_316 in2 exec_empty integer_min) boolean_swap print_integer) ())
Zero cases best errors: [0 0 0 1 0 0 0 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 30
Percent parens: 0.233
--- Lexicase Population Statistics ---
Count of elite individuals by case: (222 148 402 259 148 148 213 193 116 616)
Population mean number of elite cases: 2.46
Count of perfect (error zero) individuals by case: (222 148 402 259 148 148 213 193 116 616)
Population mean number of perfect (error zero) cases: 2.46
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Best program: (boolean_dup_items exec_s (exec_dup_items integer_max) (in4 exec_when (in3 boolean_dup_items exec_stackdepth integer_pop) exec_while (integer_rot) print_boolean integer_sub tagged_316 in2 exec_empty integer_min) (boolean_swap print_integer))
Errors: [0 0 0 1 0 0 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 20
Size: 26
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 7.535
Median total errors in population: 7
Error averages by case: (0.778 0.852 0.598 0.741 0.852 0.852 0.787 0.807 0.884 0.384)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 31.566
Average program size in population (points): 42.745
Average percent parens in population: 0.252
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.008
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.166
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 1847914
--- Timings ---
Current time: 1559594038324 milliseconds
Total Time:           9.4 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         5.2 seconds, 55.7%
Fitness Testing:      2.9 seconds, 31.0%
Report:               1.1 seconds, 12.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 427
Test mean error for best: 0.42700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 25                  | Program output: 25                 
Correct output: 4                   | Program output: 4                  
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: 74                 
Correct output: -75                 | Program output: -75                
Correct output: -18                 | Program output: -18                
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 79                 
Correct output: 21                  | Program output: 81                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 79                 
Correct output: 12                  | Program output: 12                 
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 12                 
Correct output: 34                  | Program output: 73                 
Correct output: 15                  | Program output: 16                 
Correct output: 4                   | Program output: 43                 
Correct output: 23                  | Program output: 25                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 5                  
Correct output: 37                  | Program output: 68                 
Correct output: 26                  | Program output: 55                 
Correct output: 15                  | Program output: 15                 
Correct output: 5                   | Program output: 5                  
Correct output: 1                   | Program output: 16                 
Correct output: 47                  | Program output: 55                 
Correct output: 21                  | Program output: 44                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -44                 | Program output: -44                
Correct output: -94                 | Program output: -94                
Correct output: -13                 | Program output: -13                
Correct output: -78                 | Program output: -78                
Correct output: -33                 | Program output: 4                  
Correct output: -27                 | Program output: -27                
Correct output: -77                 | Program output: -77                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -88                 | Program output: -88                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -44                
Correct output: -53                 | Program output: -5                 
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -77                
Correct output: -85                 | Program output: -59                
Correct output: -17                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -39                 | Program output: -39                
Correct output: -31                 | Program output: 25                 
Correct output: -87                 | Program output: -87                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -94                 | Program output: 71                 
Correct output: -44                 | Program output: -44                
Correct output: -63                 | Program output: -63                
Correct output: -30                 | Program output: -30                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: -86                
Correct output: -65                 | Program output: -56                
Correct output: -90                 | Program output: -90                
Correct output: -84                 | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: -92                 | Program output: -43                
Correct output: -100                | Program output: -100               
Correct output: -90                 | Program output: -1                 
Correct output: -49                 | Program output: 29                 
Correct output: -62                 | Program output: -51                
Correct output: -75                 | Program output: -75                
Correct output: -75                 | Program output: 56                 
Correct output: -84                 | Program output: -84                
Correct output: -53                 | Program output: -53                
Correct output: -69                 | Program output: -69                
Correct output: -49                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: -39                
Correct output: -9                  | Program output: -1                 
Correct output: -90                 | Program output: -90                
Correct output: -53                 | Program output: -32                
Correct output: -58                 | Program output: 23                 
Correct output: -60                 | Program output: -39                
Correct output: -75                 | Program output: -75                
Correct output: -64                 | Program output: -37                
Correct output: -47                 | Program output: -43                
Correct output: -94                 | Program output: -21                
Correct output: -75                 | Program output: -75                
Correct output: -28                 | Program output: -2                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction exec_s} {:close 0, :instruction integer_pop} {:close 1, :instruction boolean_xor} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_not} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction tagged_277} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_dup_items})
Lexicase best program: (exec_noop exec_s (integer_pop boolean_xor) (integer_max) (boolean_not in4 exec_when (in3 boolean_dup_items boolean_stackdepth boolean_invert_first_then_and exec_stackdepth integer_pop) tagged_277 exec_while (integer_rot) print_boolean integer_sub tagged_316 in2 exec_empty integer_min) boolean_or print_integer boolean_invert_first_then_and integer_dup_items)
Lexicase best errors: [0 0 0 0 0 0 0 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 33
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction exec_s} {:close 0, :instruction integer_pop} {:close 1, :instruction boolean_xor} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_not} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction tagged_277} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_dup_items})
Zero cases best program: (exec_noop exec_s (integer_pop boolean_xor) (integer_max) (boolean_not in4 exec_when (in3 boolean_dup_items boolean_stackdepth boolean_invert_first_then_and exec_stackdepth integer_pop) tagged_277 exec_while (integer_rot) print_boolean integer_sub tagged_316 in2 exec_empty integer_min) boolean_or print_integer boolean_invert_first_then_and integer_dup_items)
Zero cases best errors: [0 0 0 0 0 0 0 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 33
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (269 279 280 359 619 367 353 544 134 132)
Population mean number of elite cases: 3.34
Count of perfect (error zero) individuals by case: (269 279 280 359 619 367 353 544 134 132)
Population mean number of perfect (error zero) cases: 3.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 1, :instruction exec_dup} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer})
Best program: (boolean_dup_items exec_s (exec_dup_items in4 exec_dup () exec_when (in3 boolean_dup_items integer_gte exec_stackdepth integer_pop) exec_while (integer_rot) print_boolean in2 integer_min) (print_integer) ())
Errors: [0 0 0 0 0 0 0 0 1 1]
Total: 2
Mean: 0.2
Genome size: 17
Size: 24
Percent parens: 0.292
--- Population Statistics ---
Average total errors in population: 6.664
Median total errors in population: 7
Error averages by case: (0.731 0.721 0.72 0.641 0.381 0.633 0.647 0.456 0.866 0.868)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 24.503
Average program size in population (points): 32.767
Average percent parens in population: 0.246
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.008
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.218
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2098948
--- Timings ---
Current time: 1559594039829 milliseconds
Total Time:          10.9 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         6.3 seconds, 57.7%
Fitness Testing:      3.2 seconds, 28.9%
Report:               1.4 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 406
Test mean error for best: 0.40600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 25                  | Program output: 44                 
Correct output: 4                   | Program output: 73                 
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: -32                
Correct output: -75                 | Program output: 15                 
Correct output: -18                 | Program output: 71                 
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 11                 
Correct output: 21                  | Program output: 21                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 16                 
Correct output: 39                  | Program output: 75                 
Correct output: 12                  | Program output: 57                 
Correct output: 34                  | Program output: 34                 
Correct output: 15                  | Program output: 15                 
Correct output: 4                   | Program output: 4                  
Correct output: 23                  | Program output: 23                 
Correct output: 22                  | Program output: 69                 
Correct output: 5                   | Program output: 36                 
Correct output: 37                  | Program output: 37                 
Correct output: 26                  | Program output: 26                 
Correct output: 15                  | Program output: 53                 
Correct output: 5                   | Program output: 47                 
Correct output: 1                   | Program output: 1                  
Correct output: 47                  | Program output: 47                 
Correct output: 21                  | Program output: 21                 
Correct output: 20                  | Program output: 98                 
Correct output: 14                  | Program output: 91                 
Correct output: -44                 | Program output: 51                 
Correct output: -94                 | Program output: -38                
Correct output: -13                 | Program output: 77                 
Correct output: -78                 | Program output: -13                
Correct output: -33                 | Program output: -33                
Correct output: -27                 | Program output: 77                 
Correct output: -77                 | Program output: -51                
Correct output: -86                 | Program output: 10                 
Correct output: -97                 | Program output: -69                
Correct output: -88                 | Program output: -71                
Correct output: 2                   | Program output: 11                 
Correct output: -50                 | Program output: -50                
Correct output: -53                 | Program output: -53                
Correct output: -93                 | Program output: -45                
Correct output: -88                 | Program output: -88                
Correct output: -85                 | Program output: -85                
Correct output: -17                 | Program output: -17                
Correct output: -85                 | Program output: -83                
Correct output: -54                 | Program output: 21                 
Correct output: -39                 | Program output: -3                 
Correct output: -31                 | Program output: -31                
Correct output: -87                 | Program output: 43                 
Correct output: -93                 | Program output: -25                
Correct output: -76                 | Program output: -44                
Correct output: -98                 | Program output: -77                
Correct output: -67                 | Program output: -31                
Correct output: -94                 | Program output: -94                
Correct output: -44                 | Program output: -39                
Correct output: -63                 | Program output: -17                
Correct output: -30                 | Program output: 17                 
Correct output: -26                 | Program output: 60                 
Correct output: -86                 | Program output: -65                
Correct output: -65                 | Program output: -65                
Correct output: -90                 | Program output: -19                
Correct output: -84                 | Program output: -84                
Correct output: 5                   | Program output: 86                 
Correct output: -92                 | Program output: -92                
Correct output: -100                | Program output: -34                
Correct output: -90                 | Program output: -90                
Correct output: -49                 | Program output: -49                
Correct output: -62                 | Program output: -62                
Correct output: -75                 | Program output: 33                 
Correct output: -75                 | Program output: -75                
Correct output: -84                 | Program output: -33                
Correct output: -53                 | Program output: -9                 
Correct output: -69                 | Program output: 40                 
Correct output: -49                 | Program output: 3                  
Correct output: -89                 | Program output: -73                
Correct output: -40                 | Program output: -40                
Correct output: -9                  | Program output: -9                 
Correct output: -90                 | Program output: -36                
Correct output: -53                 | Program output: -53                
Correct output: -58                 | Program output: -58                
Correct output: -60                 | Program output: -60                
Correct output: -75                 | Program output: -6                 
Correct output: -64                 | Program output: -64                
Correct output: -47                 | Program output: -47                
Correct output: -94                 | Program output: -94                
Correct output: -75                 | Program output: 25                 
Correct output: -28                 | Program output: -28                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction boolean_xor} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 0, :instruction tagged_316} {:close 1, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Lexicase best program: (boolean_dup_items exec_s (exec_dup_items integer_max) (in4 boolean_xor in3 boolean_dup_items boolean_invert_first_then_and integer_eq integer_pop) (exec_while (integer_gt exec_while (integer_rot) print_boolean integer_sub integer_max) in1 tagged_316 in3) integer_min integer_sub boolean_swap print_integer)
Lexicase best errors: [0 0 0 0 1 0 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 31
Percent parens: 0.194
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction boolean_xor} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 0, :instruction tagged_316} {:close 1, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Zero cases best program: (boolean_dup_items exec_s (exec_dup_items integer_max) (in4 boolean_xor in3 boolean_dup_items boolean_invert_first_then_and integer_eq integer_pop) (exec_while (integer_gt exec_while (integer_rot) print_boolean integer_sub integer_max) in1 tagged_316 in3) integer_min integer_sub boolean_swap print_integer)
Zero cases best errors: [0 0 0 0 1 0 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 31
Percent parens: 0.194
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 580 586 585 300 5 241 370 579 271)
Population mean number of elite cases: 3.52
Count of perfect (error zero) individuals by case: (5 580 586 585 300 5 241 370 579 271)
Population mean number of perfect (error zero) cases: 3.52
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction boolean_xor} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_while} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 0, :instruction tagged_316} {:close 1, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer})
Best program: (boolean_dup_items exec_s (exec_dup_items integer_max) (in4 boolean_xor in3 boolean_dup_items boolean_invert_first_then_and integer_eq integer_pop) (exec_while (integer_gt exec_while (integer_rot) print_boolean integer_sub integer_max) in1 tagged_316 in3) integer_min integer_sub boolean_swap print_integer)
Errors: [0 0 0 0 1 0 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 25
Size: 31
Percent parens: 0.194
--- Population Statistics ---
Average total errors in population: 6.478
Median total errors in population: 5
Error averages by case: (0.995 0.42 0.414 0.415 0.7 0.995 0.759 0.63 0.421 0.729)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 21.232
Average program size in population (points): 28.416
Average percent parens in population: 0.248
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.009
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.205
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2353311
--- Timings ---
Current time: 1559594041396 milliseconds
Total Time:          12.4 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         7.4 seconds, 59.4%
Fitness Testing:      3.4 seconds, 27.4%
Report:               1.5 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 223
Test mean error for best: 0.22300
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 1
Test Case   21 | Error: 0
Test Case   22 | Error: 1
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 1
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 1
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 1
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 1
Test Case   70 | Error: 1
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 1
Test Case   74 | Error: 1
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 1
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 1
Test Case  203 | Error: 1
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 1
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 1
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 1
Test Case  278 | Error: 1
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 1
Test Case  282 | Error: 0
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 1
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 0
Test Case  306 | Error: 1
Test Case  307 | Error: 0
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 0
Test Case  318 | Error: 1
Test Case  319 | Error: 1
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 1
Test Case  365 | Error: 0
Test Case  366 | Error: 1
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 1
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 1
Test Case  407 | Error: 0
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 1
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 1
Test Case  420 | Error: 0
Test Case  421 | Error: 1
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 1
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 1
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 1
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 1
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 1
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 1
Test Case  505 | Error: 1
Test Case  506 | Error: 1
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 1
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 1
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 1
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 1
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 0
Test Case  677 | Error: 1
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 1
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 1
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 1
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 1
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 1
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 1
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 1
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 1
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 1
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 1
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 1
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 1
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 1
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 1
Test Case  872 | Error: 1
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 1
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 1
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 1
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 1
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 1
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 1
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 1
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 1
Test Case  995 | Error: 0
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 25                  | Program output: 25                 
Correct output: 4                   | Program output: 4                  
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: 74                 
Correct output: -75                 | Program output: -75                
Correct output: -18                 | Program output: -18                
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 11                 
Correct output: 21                  | Program output: 81                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 12                 
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 12                 
Correct output: 34                  | Program output: 34                 
Correct output: 15                  | Program output: 16                 
Correct output: 4                   | Program output: 4                  
Correct output: 23                  | Program output: 25                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 5                  
Correct output: 37                  | Program output: 37                 
Correct output: 26                  | Program output: 55                 
Correct output: 15                  | Program output: 15                 
Correct output: 5                   | Program output: 5                  
Correct output: 1                   | Program output: 1                  
Correct output: 47                  | Program output: 47                 
Correct output: 21                  | Program output: 21                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -44                 | Program output: -44                
Correct output: -94                 | Program output: -94                
Correct output: -13                 | Program output: -13                
Correct output: -78                 | Program output: -78                
Correct output: -33                 | Program output: -33                
Correct output: -27                 | Program output: -27                
Correct output: -77                 | Program output: -77                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -88                 | Program output: -88                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -44                
Correct output: -53                 | Program output: -53                
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -77                
Correct output: -85                 | Program output: -68                
Correct output: -17                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -39                 | Program output: -39                
Correct output: -31                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -94                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -63                 | Program output: -63                
Correct output: -30                 | Program output: -30                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: -86                
Correct output: -65                 | Program output: -65                
Correct output: -90                 | Program output: -90                
Correct output: -84                 | Program output: -84                
Correct output: 5                   | Program output: 5                  
Correct output: -92                 | Program output: -92                
Correct output: -100                | Program output: -100               
Correct output: -90                 | Program output: -1                 
Correct output: -49                 | Program output: -19                
Correct output: -62                 | Program output: -51                
Correct output: -75                 | Program output: -75                
Correct output: -75                 | Program output: 56                 
Correct output: -84                 | Program output: -84                
Correct output: -53                 | Program output: -53                
Correct output: -69                 | Program output: -69                
Correct output: -49                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: -39                
Correct output: -9                  | Program output: -1                 
Correct output: -90                 | Program output: -90                
Correct output: -53                 | Program output: -32                
Correct output: -58                 | Program output: -1                 
Correct output: -60                 | Program output: -48                
Correct output: -75                 | Program output: -75                
Correct output: -64                 | Program output: -64                
Correct output: -47                 | Program output: -47                
Correct output: -94                 | Program output: -94                
Correct output: -75                 | Program output: -75                
Correct output: -28                 | Program output: -28                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 1, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_add} {:close 0, :instruction print_integer})
Lexicase best program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 31
Percent parens: 0.258
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 1, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_add} {:close 0, :instruction print_integer})
Zero cases best program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 31
Percent parens: 0.258
--- Lexicase Population Statistics ---
Count of elite individuals by case: (193 214 573 211 263 282 182 205 214 197)
Population mean number of elite cases: 2.53
Count of perfect (error zero) individuals by case: (193 214 573 211 263 282 182 205 214 197)
Population mean number of perfect (error zero) cases: 2.53
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_noop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_s} {:close 1, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_when} {:close 0, :instruction in3} {:close 1, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction tagged_316} {:close 0, :instruction in2} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_add} {:close 0, :instruction print_integer})
Best program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 23
Size: 31
Percent parens: 0.258
--- Population Statistics ---
Average total errors in population: 7.466
Median total errors in population: 7
Error averages by case: (0.807 0.786 0.427 0.789 0.737 0.718 0.818 0.795 0.786 0.803)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 21.954
Average program size in population (points): 28.825
Average percent parens in population: 0.234
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 8
Genome diversity (% unique genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.01
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.218
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 2599886
--- Timings ---
Current time: 1559594042918 milliseconds
Total Time:          14.0 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         8.4 seconds, 60.4%
Fitness Testing:      3.7 seconds, 26.2%
Report:               1.8 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 7
Successful program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 31


Auto-simplifying with starting size: 31
step: 0
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 500
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 1000
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 1500
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 2000
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 2500
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 3000
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 3500
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 4000
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 4500
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

step: 5000
program: (exec_noop boolean_dup_items exec_s (integer_max) (in4 integer_lte exec_when (in3 exec_k () (boolean_invert_first_then_and exec_while (integer_rot) print_boolean integer_mod) integer_min tagged_316 in2 boolean_rot exec_empty integer_min) boolean_swap integer_add print_integer) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 31

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 223
Test mean error for best: 0.22300
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 1
Test Case   21 | Error: 0
Test Case   22 | Error: 1
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 1
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 1
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 1
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 1
Test Case   70 | Error: 1
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 1
Test Case   74 | Error: 1
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 1
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 1
Test Case  203 | Error: 1
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 1
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 1
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 1
Test Case  278 | Error: 1
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 1
Test Case  282 | Error: 0
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 1
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 0
Test Case  306 | Error: 1
Test Case  307 | Error: 0
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 0
Test Case  318 | Error: 1
Test Case  319 | Error: 1
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 1
Test Case  365 | Error: 0
Test Case  366 | Error: 1
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 1
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 1
Test Case  407 | Error: 0
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 1
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 1
Test Case  420 | Error: 0
Test Case  421 | Error: 1
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 1
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 1
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 1
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 1
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 1
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 1
Test Case  505 | Error: 1
Test Case  506 | Error: 1
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 1
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 1
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 1
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 1
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 0
Test Case  677 | Error: 1
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 1
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 1
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 1
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 1
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 1
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 1
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 1
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 1
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 1
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 1
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 1
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 1
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 1
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 1
Test Case  872 | Error: 1
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 1
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 1
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 1
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 1
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 1
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 1
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 1
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 1
Test Case  995 | Error: 0
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 25                  | Program output: 25                 
Correct output: 4                   | Program output: 4                  
Correct output: 1                   | Program output: 1                  
Correct output: -32                 | Program output: 74                 
Correct output: -75                 | Program output: -75                
Correct output: -18                 | Program output: -18                
Correct output: 7                   | Program output: 7                  
Correct output: 54                  | Program output: 54                 
Correct output: 11                  | Program output: 11                 
Correct output: 21                  | Program output: 81                 
Correct output: 20                  | Program output: 20                 
Correct output: 25                  | Program output: 25                 
Correct output: 77                  | Program output: 77                 
Correct output: 51                  | Program output: 51                 
Correct output: 65                  | Program output: 65                 
Correct output: 5                   | Program output: 5                  
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 12                 
Correct output: 39                  | Program output: 39                 
Correct output: 12                  | Program output: 12                 
Correct output: 34                  | Program output: 34                 
Correct output: 15                  | Program output: 16                 
Correct output: 4                   | Program output: 4                  
Correct output: 23                  | Program output: 25                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 5                  
Correct output: 37                  | Program output: 37                 
Correct output: 26                  | Program output: 55                 
Correct output: 15                  | Program output: 15                 
Correct output: 5                   | Program output: 5                  
Correct output: 1                   | Program output: 1                  
Correct output: 47                  | Program output: 47                 
Correct output: 21                  | Program output: 21                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -44                 | Program output: -44                
Correct output: -94                 | Program output: -94                
Correct output: -13                 | Program output: -13                
Correct output: -78                 | Program output: -78                
Correct output: -33                 | Program output: -33                
Correct output: -27                 | Program output: -27                
Correct output: -77                 | Program output: -77                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -88                 | Program output: -88                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -44                
Correct output: -53                 | Program output: -53                
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -77                
Correct output: -85                 | Program output: -68                
Correct output: -17                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -39                 | Program output: -39                
Correct output: -31                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -94                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -63                 | Program output: -63                
Correct output: -30                 | Program output: -30                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: -86                
Correct output: -65                 | Program output: -65                
Correct output: -90                 | Program output: -90                
Correct output: -84                 | Program output: -84                
Correct output: 5                   | Program output: 5                  
Correct output: -92                 | Program output: -92                
Correct output: -100                | Program output: -100               
Correct output: -90                 | Program output: -1                 
Correct output: -49                 | Program output: -19                
Correct output: -62                 | Program output: -51                
Correct output: -75                 | Program output: -75                
Correct output: -75                 | Program output: 56                 
Correct output: -84                 | Program output: -84                
Correct output: -53                 | Program output: -53                
Correct output: -69                 | Program output: -69                
Correct output: -49                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: -39                
Correct output: -9                  | Program output: -1                 
Correct output: -90                 | Program output: -90                
Correct output: -53                 | Program output: -32                
Correct output: -58                 | Program output: -1                 
Correct output: -60                 | Program output: -48                
Correct output: -75                 | Program output: -75                
Correct output: -64                 | Program output: -64                
Correct output: -47                 | Program output: -47                
Correct output: -94                 | Program output: -94                
Correct output: -75                 | Program output: -75                
Correct output: -28                 | Program output: -28                
;;******************************
