Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[58 63 58 58] 58] [[-34 -69 -34 -34] -69] [[-74 -86 -74 -74] -86] [[7 7 -12 7] -12] [[-87 41 -87 -87] -87] [[82 -68 82 82] -68] [[-100 -11 -11 -11] -100] [[-74 -74 53 -74] -74] [[-15 47 -15 -15] -15] [[-36 -36 -36 18] -36] [(37 37 37 37) 37] [(-12 -12 -12 -12) -12] [(40 40 40 40) 40] [(62 62 62 62) 62] [(-59 -59 -59 -59) -59] [(64 77 27 39) 27] [(99 60 43 21) 21] [(39 59 3 12) 3] [(34 62 65 67) 34] [(10 57 69 33) 10] [(77 8 92 67) 8] [(52 76 12 56) 12] [(54 97 56 97) 54] [(87 5 97 30) 5] [(64 93 57 73) 57] [(88 60 39 41) 39] [(85 44 30 77) 30] [(9 87 57 1) 1] [(20 35 4 33) 4] [(20 23 60 77) 20] [(34 18 92 10) 10] [(72 80 20 15) 15] [(96 86 54 32) 32] [(40 2 70 97) 2] [(12 46 52 94) 12] [(-92 33 -17 9) -92] [(-91 5 -71 37) -91] [(-64 11 -80 0) -80] [(-34 43 70 -55) -55] [(5 -41 -65 -79) -79] [(20 93 -71 -4) -71] [(-49 53 -13 -59) -59] [(11 -17 12 4) -17] [(61 -34 89 91) -34] [(36 -69 8 -3) -69] [(-63 -17 -15 -58) -63] [(-50 32 32 -25) -50] [(-21 -14 -67 -88) -88] [(20 67 -94 -38) -94] [(95 -86 -49 -21) -86] [(-49 9 -88 1) -88] [(87 -20 90 31) -20] [(-21 -79 27 -12) -79] [(-57 88 -46 41) -57] [(6 57 -26 -15) -26] [(18 89 -17 11) -17] [(2 35 20 23) 2] [(-50 60 -7 33) -50] [(-31 -80 59 -87) -87] [(-20 81 -84 25) -84] [(-10 29 2 71) -10] [(29 -42 47 -51) -51] [(67 96 -24 4) -24] [(68 -13 22 51) -13] [(83 -89 -17 81) -89] [(76 68 -37 -72) -72] [(-89 32 1 36) -89] [(80 -63 -98 63) -98] [(-35 -99 81 -23) -99] [(78 86 44 56) 44] [(94 -1 69 -78) -78] [(54 -98 32 -70) -98] [(-17 -6 0 -3) -17] [(-18 -44 -85 71) -85] [(-48 69 -58 -98) -98] [(-23 37 75 -14) -23] [(-23 -83 -52 -19) -83] [(70 -76 94 66) -76] [(-30 -39 19 -43) -43] [(-75 -47 62 8) -75] [(-63 -3 -54 -85) -85] [(-32 9 -71 -57) -71] [(-26 -81 -24 -70) -81] [(-93 42 5 -100) -100] [(66 84 11 -28) -28] [(-39 15 -8 5) -39] [(12 89 -5 1) -5] [(-53 -100 18 -69) -100] [(-28 -99 -57 -18) -99] [(-48 37 -50 29) -50] [(13 -53 -65 -39) -65] [(52 -91 99 -48) -91] [(15 -21 -93 79) -93] [(-23 -80 -94 -4) -94] [(-31 -15 39 -99) -99])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[58 63 58 58] 58]
Train Case:   6 | Input/Output: [[-34 -69 -34 -34] -69]
Train Case:   7 | Input/Output: [[-74 -86 -74 -74] -86]
Train Case:   8 | Input/Output: [[7 7 -12 7] -12]
Train Case:   9 | Input/Output: [[-87 41 -87 -87] -87]
Train Case:  10 | Input/Output: [[82 -68 82 82] -68]
Train Case:  11 | Input/Output: [[-100 -11 -11 -11] -100]
Train Case:  12 | Input/Output: [[-74 -74 53 -74] -74]
Train Case:  13 | Input/Output: [[-15 47 -15 -15] -15]
Train Case:  14 | Input/Output: [[-36 -36 -36 18] -36]
Train Case:  15 | Input/Output: [(37 37 37 37) 37]
Train Case:  16 | Input/Output: [(-12 -12 -12 -12) -12]
Train Case:  17 | Input/Output: [(40 40 40 40) 40]
Train Case:  18 | Input/Output: [(62 62 62 62) 62]
Train Case:  19 | Input/Output: [(-59 -59 -59 -59) -59]
Train Case:  20 | Input/Output: [(64 77 27 39) 27]
Train Case:  21 | Input/Output: [(99 60 43 21) 21]
Train Case:  22 | Input/Output: [(39 59 3 12) 3]
Train Case:  23 | Input/Output: [(34 62 65 67) 34]
Train Case:  24 | Input/Output: [(10 57 69 33) 10]
Train Case:  25 | Input/Output: [(77 8 92 67) 8]
Train Case:  26 | Input/Output: [(52 76 12 56) 12]
Train Case:  27 | Input/Output: [(54 97 56 97) 54]
Train Case:  28 | Input/Output: [(87 5 97 30) 5]
Train Case:  29 | Input/Output: [(64 93 57 73) 57]
Train Case:  30 | Input/Output: [(88 60 39 41) 39]
Train Case:  31 | Input/Output: [(85 44 30 77) 30]
Train Case:  32 | Input/Output: [(9 87 57 1) 1]
Train Case:  33 | Input/Output: [(20 35 4 33) 4]
Train Case:  34 | Input/Output: [(20 23 60 77) 20]
Train Case:  35 | Input/Output: [(34 18 92 10) 10]
Train Case:  36 | Input/Output: [(72 80 20 15) 15]
Train Case:  37 | Input/Output: [(96 86 54 32) 32]
Train Case:  38 | Input/Output: [(40 2 70 97) 2]
Train Case:  39 | Input/Output: [(12 46 52 94) 12]
Train Case:  40 | Input/Output: [(-92 33 -17 9) -92]
Train Case:  41 | Input/Output: [(-91 5 -71 37) -91]
Train Case:  42 | Input/Output: [(-64 11 -80 0) -80]
Train Case:  43 | Input/Output: [(-34 43 70 -55) -55]
Train Case:  44 | Input/Output: [(5 -41 -65 -79) -79]
Train Case:  45 | Input/Output: [(20 93 -71 -4) -71]
Train Case:  46 | Input/Output: [(-49 53 -13 -59) -59]
Train Case:  47 | Input/Output: [(11 -17 12 4) -17]
Train Case:  48 | Input/Output: [(61 -34 89 91) -34]
Train Case:  49 | Input/Output: [(36 -69 8 -3) -69]
Train Case:  50 | Input/Output: [(-63 -17 -15 -58) -63]
Train Case:  51 | Input/Output: [(-50 32 32 -25) -50]
Train Case:  52 | Input/Output: [(-21 -14 -67 -88) -88]
Train Case:  53 | Input/Output: [(20 67 -94 -38) -94]
Train Case:  54 | Input/Output: [(95 -86 -49 -21) -86]
Train Case:  55 | Input/Output: [(-49 9 -88 1) -88]
Train Case:  56 | Input/Output: [(87 -20 90 31) -20]
Train Case:  57 | Input/Output: [(-21 -79 27 -12) -79]
Train Case:  58 | Input/Output: [(-57 88 -46 41) -57]
Train Case:  59 | Input/Output: [(6 57 -26 -15) -26]
Train Case:  60 | Input/Output: [(18 89 -17 11) -17]
Train Case:  61 | Input/Output: [(2 35 20 23) 2]
Train Case:  62 | Input/Output: [(-50 60 -7 33) -50]
Train Case:  63 | Input/Output: [(-31 -80 59 -87) -87]
Train Case:  64 | Input/Output: [(-20 81 -84 25) -84]
Train Case:  65 | Input/Output: [(-10 29 2 71) -10]
Train Case:  66 | Input/Output: [(29 -42 47 -51) -51]
Train Case:  67 | Input/Output: [(67 96 -24 4) -24]
Train Case:  68 | Input/Output: [(68 -13 22 51) -13]
Train Case:  69 | Input/Output: [(83 -89 -17 81) -89]
Train Case:  70 | Input/Output: [(76 68 -37 -72) -72]
Train Case:  71 | Input/Output: [(-89 32 1 36) -89]
Train Case:  72 | Input/Output: [(80 -63 -98 63) -98]
Train Case:  73 | Input/Output: [(-35 -99 81 -23) -99]
Train Case:  74 | Input/Output: [(78 86 44 56) 44]
Train Case:  75 | Input/Output: [(94 -1 69 -78) -78]
Train Case:  76 | Input/Output: [(54 -98 32 -70) -98]
Train Case:  77 | Input/Output: [(-17 -6 0 -3) -17]
Train Case:  78 | Input/Output: [(-18 -44 -85 71) -85]
Train Case:  79 | Input/Output: [(-48 69 -58 -98) -98]
Train Case:  80 | Input/Output: [(-23 37 75 -14) -23]
Train Case:  81 | Input/Output: [(-23 -83 -52 -19) -83]
Train Case:  82 | Input/Output: [(70 -76 94 66) -76]
Train Case:  83 | Input/Output: [(-30 -39 19 -43) -43]
Train Case:  84 | Input/Output: [(-75 -47 62 8) -75]
Train Case:  85 | Input/Output: [(-63 -3 -54 -85) -85]
Train Case:  86 | Input/Output: [(-32 9 -71 -57) -71]
Train Case:  87 | Input/Output: [(-26 -81 -24 -70) -81]
Train Case:  88 | Input/Output: [(-93 42 5 -100) -100]
Train Case:  89 | Input/Output: [(66 84 11 -28) -28]
Train Case:  90 | Input/Output: [(-39 15 -8 5) -39]
Train Case:  91 | Input/Output: [(12 89 -5 1) -5]
Train Case:  92 | Input/Output: [(-53 -100 18 -69) -100]
Train Case:  93 | Input/Output: [(-28 -99 -57 -18) -99]
Train Case:  94 | Input/Output: [(-48 37 -50 29) -50]
Train Case:  95 | Input/Output: [(13 -53 -65 -39) -65]
Train Case:  96 | Input/Output: [(52 -91 99 -48) -91]
Train Case:  97 | Input/Output: [(15 -21 -93 79) -93]
Train Case:  98 | Input/Output: [(-23 -80 -94 -4) -94]
Train Case:  99 | Input/Output: [(-31 -15 39 -99) -99]
Test Case:   0 | Input/Output: [[13 13 -71 13] -71]
Test Case:   1 | Input/Output: [[-99 -99 -99 -79] -99]
Test Case:   2 | Input/Output: [[54 61 54 54] 54]
Test Case:   3 | Input/Output: [[35 81 35 35] 35]
Test Case:   4 | Input/Output: [[58 -24 -24 -24] -24]
Test Case:   5 | Input/Output: [[-35 -35 -93 -35] -93]
Test Case:   6 | Input/Output: [[-30 -30 -30 -63] -63]
Test Case:   7 | Input/Output: [[86 64 86 86] 64]
Test Case:   8 | Input/Output: [[64 -91 64 64] -91]
Test Case:   9 | Input/Output: [[-7 -7 6 -7] -7]
Test Case:  10 | Input/Output: [[30 30 -42 30] -42]
Test Case:  11 | Input/Output: [[50 -50 -50 -50] -50]
Test Case:  12 | Input/Output: [[9 9 9 73] 9]
Test Case:  13 | Input/Output: [[-4 -30 -4 -4] -30]
Test Case:  14 | Input/Output: [[90 90 -73 90] -73]
Test Case:  15 | Input/Output: [[44 97 97 97] 44]
Test Case:  16 | Input/Output: [[71 -9 -9 -9] -9]
Test Case:  17 | Input/Output: [[-16 -57 -16 -16] -57]
Test Case:  18 | Input/Output: [[-45 76 -45 -45] -45]
Test Case:  19 | Input/Output: [[-25 96 -25 -25] -25]
Test Case:  20 | Input/Output: [[-68 85 85 85] -68]
Test Case:  21 | Input/Output: [[52 -67 52 52] -67]
Test Case:  22 | Input/Output: [[-57 -57 -42 -57] -57]
Test Case:  23 | Input/Output: [[-64 17 17 17] -64]
Test Case:  24 | Input/Output: [[79 79 -56 79] -56]
Test Case:  25 | Input/Output: [[-67 -19 -67 -67] -67]
Test Case:  26 | Input/Output: [[-99 -99 -99 52] -99]
Test Case:  27 | Input/Output: [[-62 -47 -47 -47] -62]
Test Case:  28 | Input/Output: [[-1 -1 -1 33] -1]
Test Case:  29 | Input/Output: [[18 74 74 74] 18]
Test Case:  30 | Input/Output: [[-54 -28 -54 -54] -54]
Test Case:  31 | Input/Output: [[-10 -46 -10 -10] -46]
Test Case:  32 | Input/Output: [[15 15 -89 15] -89]
Test Case:  33 | Input/Output: [[-94 -94 -100 -94] -100]
Test Case:  34 | Input/Output: [[32 32 14 32] 14]
Test Case:  35 | Input/Output: [[-47 -27 -27 -27] -47]
Test Case:  36 | Input/Output: [[-76 -33 -76 -76] -76]
Test Case:  37 | Input/Output: [[-2 -8 -2 -2] -8]
Test Case:  38 | Input/Output: [[74 49 74 74] 49]
Test Case:  39 | Input/Output: [[-84 -84 -84 -21] -84]
Test Case:  40 | Input/Output: [[-32 -82 -82 -82] -82]
Test Case:  41 | Input/Output: [[76 76 76 82] 76]
Test Case:  42 | Input/Output: [[64 98 64 64] 64]
Test Case:  43 | Input/Output: [[72 72 72 -42] -42]
Test Case:  44 | Input/Output: [[-67 -67 67 -67] -67]
Test Case:  45 | Input/Output: [[81 -11 81 81] -11]
Test Case:  46 | Input/Output: [[17 17 -33 17] -33]
Test Case:  47 | Input/Output: [[84 4 84 84] 4]
Test Case:  48 | Input/Output: [[-13 -59 -59 -59] -59]
Test Case:  49 | Input/Output: [[-48 58 58 58] -48]
Test Case:  50 | Input/Output: [[-30 -87 -87 -87] -87]
Test Case:  51 | Input/Output: [[77 77 30 77] 30]
Test Case:  52 | Input/Output: [[28 28 -83 28] -83]
Test Case:  53 | Input/Output: [[-22 -22 -57 -22] -57]
Test Case:  54 | Input/Output: [[-8 -52 -8 -8] -52]
Test Case:  55 | Input/Output: [[-99 -99 -99 88] -99]
Test Case:  56 | Input/Output: [[73 1 73 73] 1]
Test Case:  57 | Input/Output: [[-57 -57 92 -57] -57]
Test Case:  58 | Input/Output: [[-9 45 -9 -9] -9]
Test Case:  59 | Input/Output: [[8 8 -27 8] -27]
Test Case:  60 | Input/Output: [[-26 -67 -26 -26] -67]
Test Case:  61 | Input/Output: [[3 50 50 50] 3]
Test Case:  62 | Input/Output: [[-100 51 51 51] -100]
Test Case:  63 | Input/Output: [[-81 -32 -81 -81] -81]
Test Case:  64 | Input/Output: [[-63 -46 -46 -46] -63]
Test Case:  65 | Input/Output: [[-22 -22 -22 4] -22]
Test Case:  66 | Input/Output: [[-71 -71 69 -71] -71]
Test Case:  67 | Input/Output: [[71 71 0 71] 0]
Test Case:  68 | Input/Output: [[96 96 96 -1] -1]
Test Case:  69 | Input/Output: [[94 3 3 3] 3]
Test Case:  70 | Input/Output: [[17 17 -91 17] -91]
Test Case:  71 | Input/Output: [[-17 -17 85 -17] -17]
Test Case:  72 | Input/Output: [[-81 -42 -81 -81] -81]
Test Case:  73 | Input/Output: [[-50 -50 -32 -50] -50]
Test Case:  74 | Input/Output: [[76 76 76 92] 76]
Test Case:  75 | Input/Output: [[-42 -42 -42 10] -42]
Test Case:  76 | Input/Output: [[44 44 44 -22] -22]
Test Case:  77 | Input/Output: [[50 50 -9 50] -9]
Test Case:  78 | Input/Output: [[-1 -98 -98 -98] -98]
Test Case:  79 | Input/Output: [[99 99 -49 99] -49]
Test Case:  80 | Input/Output: [[45 -8 45 45] -8]
Test Case:  81 | Input/Output: [[-89 70 -89 -89] -89]
Test Case:  82 | Input/Output: [[75 80 75 75] 75]
Test Case:  83 | Input/Output: [[-45 -45 -45 29] -45]
Test Case:  84 | Input/Output: [[-26 -26 35 -26] -26]
Test Case:  85 | Input/Output: [[-20 -87 -87 -87] -87]
Test Case:  86 | Input/Output: [[30 30 30 72] 30]
Test Case:  87 | Input/Output: [[37 4 37 37] 4]
Test Case:  88 | Input/Output: [[100 100 100 58] 58]
Test Case:  89 | Input/Output: [[49 67 67 67] 49]
Test Case:  90 | Input/Output: [[93 93 93 -85] -85]
Test Case:  91 | Input/Output: [[79 95 79 79] 79]
Test Case:  92 | Input/Output: [[28 28 -89 28] -89]
Test Case:  93 | Input/Output: [[-2 38 -2 -2] -2]
Test Case:  94 | Input/Output: [[70 70 -57 70] -57]
Test Case:  95 | Input/Output: [[-88 -81 -81 -81] -88]
Test Case:  96 | Input/Output: [[-44 -75 -75 -75] -75]
Test Case:  97 | Input/Output: [[-96 26 -96 -96] -96]
Test Case:  98 | Input/Output: [[-5 27 27 27] -5]
Test Case:  99 | Input/Output: [[-21 -21 -21 -67] -67]
Test Case: 100 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 101 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 102 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 103 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 104 | Input/Output: [(100 100 100 100) 100]
Test Case: 105 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 106 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 107 | Input/Output: [(24 24 24 24) 24]
Test Case: 108 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 109 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 110 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 111 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 112 | Input/Output: [(51 51 51 51) 51]
Test Case: 113 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 114 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 115 | Input/Output: [(19 19 19 19) 19]
Test Case: 116 | Input/Output: [(73 73 73 73) 73]
Test Case: 117 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 118 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 119 | Input/Output: [(91 91 91 91) 91]
Test Case: 120 | Input/Output: [(77 77 77 77) 77]
Test Case: 121 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 122 | Input/Output: [(95 95 95 95) 95]
Test Case: 123 | Input/Output: [(82 82 82 82) 82]
Test Case: 124 | Input/Output: [(70 70 70 70) 70]
Test Case: 125 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 126 | Input/Output: [(86 86 86 86) 86]
Test Case: 127 | Input/Output: [(89 89 89 89) 89]
Test Case: 128 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 129 | Input/Output: [(81 81 81 81) 81]
Test Case: 130 | Input/Output: [(-57 -57 -57 -57) -57]
Test Case: 131 | Input/Output: [(58 58 58 58) 58]
Test Case: 132 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 133 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 134 | Input/Output: [(78 78 78 78) 78]
Test Case: 135 | Input/Output: [(76 76 76 76) 76]
Test Case: 136 | Input/Output: [(86 86 86 86) 86]
Test Case: 137 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 138 | Input/Output: [(40 40 40 40) 40]
Test Case: 139 | Input/Output: [(71 71 71 71) 71]
Test Case: 140 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 141 | Input/Output: [(87 87 87 87) 87]
Test Case: 142 | Input/Output: [(83 83 83 83) 83]
Test Case: 143 | Input/Output: [(45 45 45 45) 45]
Test Case: 144 | Input/Output: [(29 29 29 29) 29]
Test Case: 145 | Input/Output: [(79 79 79 79) 79]
Test Case: 146 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 147 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 148 | Input/Output: [(44 44 44 44) 44]
Test Case: 149 | Input/Output: [(73 73 73 73) 73]
Test Case: 150 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 151 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 152 | Input/Output: [(9 9 9 9) 9]
Test Case: 153 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 154 | Input/Output: [(78 78 78 78) 78]
Test Case: 155 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 156 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 157 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 158 | Input/Output: [(72 72 72 72) 72]
Test Case: 159 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 160 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 161 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 162 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 163 | Input/Output: [(69 69 69 69) 69]
Test Case: 164 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 165 | Input/Output: [(40 40 40 40) 40]
Test Case: 166 | Input/Output: [(33 33 33 33) 33]
Test Case: 167 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 168 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 169 | Input/Output: [(88 88 88 88) 88]
Test Case: 170 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 171 | Input/Output: [(59 59 59 59) 59]
Test Case: 172 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 173 | Input/Output: [(63 63 63 63) 63]
Test Case: 174 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 175 | Input/Output: [(42 42 42 42) 42]
Test Case: 176 | Input/Output: [(25 25 25 25) 25]
Test Case: 177 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 178 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 179 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 180 | Input/Output: [(31 31 31 31) 31]
Test Case: 181 | Input/Output: [(86 86 86 86) 86]
Test Case: 182 | Input/Output: [(44 44 44 44) 44]
Test Case: 183 | Input/Output: [(12 12 12 12) 12]
Test Case: 184 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 185 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 186 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 187 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 188 | Input/Output: [(90 90 90 90) 90]
Test Case: 189 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 190 | Input/Output: [(50 50 50 50) 50]
Test Case: 191 | Input/Output: [(84 84 84 84) 84]
Test Case: 192 | Input/Output: [(52 52 52 52) 52]
Test Case: 193 | Input/Output: [(42 42 42 42) 42]
Test Case: 194 | Input/Output: [(1 1 1 1) 1]
Test Case: 195 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 196 | Input/Output: [(20 20 20 20) 20]
Test Case: 197 | Input/Output: [(45 45 45 45) 45]
Test Case: 198 | Input/Output: [(47 47 47 47) 47]
Test Case: 199 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 200 | Input/Output: [(42 51 41 43) 41]
Test Case: 201 | Input/Output: [(63 79 14 12) 12]
Test Case: 202 | Input/Output: [(78 23 38 88) 23]
Test Case: 203 | Input/Output: [(8 48 71 39) 8]
Test Case: 204 | Input/Output: [(51 53 90 4) 4]
Test Case: 205 | Input/Output: [(43 53 93 39) 39]
Test Case: 206 | Input/Output: [(64 42 13 0) 0]
Test Case: 207 | Input/Output: [(68 88 34 62) 34]
Test Case: 208 | Input/Output: [(70 47 40 79) 40]
Test Case: 209 | Input/Output: [(97 49 71 56) 49]
Test Case: 210 | Input/Output: [(89 20 92 96) 20]
Test Case: 211 | Input/Output: [(54 78 36 92) 36]
Test Case: 212 | Input/Output: [(23 35 31 77) 23]
Test Case: 213 | Input/Output: [(35 81 68 27) 27]
Test Case: 214 | Input/Output: [(5 16 25 53) 5]
Test Case: 215 | Input/Output: [(97 21 70 67) 21]
Test Case: 216 | Input/Output: [(100 10 47 16) 10]
Test Case: 217 | Input/Output: [(46 68 99 46) 46]
Test Case: 218 | Input/Output: [(65 64 39 54) 39]
Test Case: 219 | Input/Output: [(16 60 52 93) 16]
Test Case: 220 | Input/Output: [(8 86 5 14) 5]
Test Case: 221 | Input/Output: [(31 75 48 94) 31]
Test Case: 222 | Input/Output: [(82 24 83 50) 24]
Test Case: 223 | Input/Output: [(48 80 5 51) 5]
Test Case: 224 | Input/Output: [(84 36 43 83) 36]
Test Case: 225 | Input/Output: [(73 35 15 6) 6]
Test Case: 226 | Input/Output: [(51 23 25 60) 23]
Test Case: 227 | Input/Output: [(84 81 79 36) 36]
Test Case: 228 | Input/Output: [(43 31 64 1) 1]
Test Case: 229 | Input/Output: [(75 59 47 30) 30]
Test Case: 230 | Input/Output: [(67 88 68 75) 67]
Test Case: 231 | Input/Output: [(52 4 29 48) 4]
Test Case: 232 | Input/Output: [(22 36 40 8) 8]
Test Case: 233 | Input/Output: [(26 45 48 75) 26]
Test Case: 234 | Input/Output: [(95 96 83 72) 72]
Test Case: 235 | Input/Output: [(23 76 49 2) 2]
Test Case: 236 | Input/Output: [(82 25 47 3) 3]
Test Case: 237 | Input/Output: [(22 5 18 75) 5]
Test Case: 238 | Input/Output: [(79 46 38 2) 2]
Test Case: 239 | Input/Output: [(1 99 97 84) 1]
Test Case: 240 | Input/Output: [(77 94 81 89) 77]
Test Case: 241 | Input/Output: [(7 51 58 40) 7]
Test Case: 242 | Input/Output: [(22 70 28 19) 19]
Test Case: 243 | Input/Output: [(70 35 86 43) 35]
Test Case: 244 | Input/Output: [(43 86 19 23) 19]
Test Case: 245 | Input/Output: [(71 39 92 2) 2]
Test Case: 246 | Input/Output: [(62 13 2 81) 2]
Test Case: 247 | Input/Output: [(91 13 95 36) 13]
Test Case: 248 | Input/Output: [(84 92 92 72) 72]
Test Case: 249 | Input/Output: [(37 94 100 99) 37]
Test Case: 250 | Input/Output: [(15 97 21 40) 15]
Test Case: 251 | Input/Output: [(59 14 16 68) 14]
Test Case: 252 | Input/Output: [(90 90 58 39) 39]
Test Case: 253 | Input/Output: [(2 25 60 72) 2]
Test Case: 254 | Input/Output: [(82 53 85 71) 53]
Test Case: 255 | Input/Output: [(70 95 5 23) 5]
Test Case: 256 | Input/Output: [(43 73 1 20) 1]
Test Case: 257 | Input/Output: [(29 17 88 57) 17]
Test Case: 258 | Input/Output: [(33 79 55 18) 18]
Test Case: 259 | Input/Output: [(80 6 41 27) 6]
Test Case: 260 | Input/Output: [(25 40 33 16) 16]
Test Case: 261 | Input/Output: [(29 63 46 86) 29]
Test Case: 262 | Input/Output: [(72 57 33 42) 33]
Test Case: 263 | Input/Output: [(75 96 48 71) 48]
Test Case: 264 | Input/Output: [(5 38 81 53) 5]
Test Case: 265 | Input/Output: [(49 88 78 45) 45]
Test Case: 266 | Input/Output: [(27 69 31 9) 9]
Test Case: 267 | Input/Output: [(96 91 99 89) 89]
Test Case: 268 | Input/Output: [(59 16 78 50) 16]
Test Case: 269 | Input/Output: [(89 48 31 17) 17]
Test Case: 270 | Input/Output: [(42 20 44 78) 20]
Test Case: 271 | Input/Output: [(65 39 74 86) 39]
Test Case: 272 | Input/Output: [(41 71 35 50) 35]
Test Case: 273 | Input/Output: [(51 56 54 27) 27]
Test Case: 274 | Input/Output: [(78 26 13 84) 13]
Test Case: 275 | Input/Output: [(87 72 85 94) 72]
Test Case: 276 | Input/Output: [(71 7 16 71) 7]
Test Case: 277 | Input/Output: [(51 80 23 52) 23]
Test Case: 278 | Input/Output: [(14 43 27 29) 14]
Test Case: 279 | Input/Output: [(37 91 48 57) 37]
Test Case: 280 | Input/Output: [(73 66 14 82) 14]
Test Case: 281 | Input/Output: [(3 10 77 75) 3]
Test Case: 282 | Input/Output: [(69 27 40 36) 27]
Test Case: 283 | Input/Output: [(26 67 41 1) 1]
Test Case: 284 | Input/Output: [(57 57 66 35) 35]
Test Case: 285 | Input/Output: [(15 97 80 71) 15]
Test Case: 286 | Input/Output: [(26 2 5 77) 2]
Test Case: 287 | Input/Output: [(44 52 46 52) 44]
Test Case: 288 | Input/Output: [(1 88 42 46) 1]
Test Case: 289 | Input/Output: [(100 87 19 63) 19]
Test Case: 290 | Input/Output: [(74 44 17 77) 17]
Test Case: 291 | Input/Output: [(65 36 86 87) 36]
Test Case: 292 | Input/Output: [(48 81 93 60) 48]
Test Case: 293 | Input/Output: [(8 13 18 55) 8]
Test Case: 294 | Input/Output: [(58 34 9 45) 9]
Test Case: 295 | Input/Output: [(2 8 4 27) 2]
Test Case: 296 | Input/Output: [(29 78 85 33) 29]
Test Case: 297 | Input/Output: [(32 58 58 47) 32]
Test Case: 298 | Input/Output: [(62 24 86 64) 24]
Test Case: 299 | Input/Output: [(37 44 9 88) 9]
Test Case: 300 | Input/Output: [(5 14 49 0) 0]
Test Case: 301 | Input/Output: [(31 7 49 72) 7]
Test Case: 302 | Input/Output: [(85 77 17 15) 15]
Test Case: 303 | Input/Output: [(90 25 96 53) 25]
Test Case: 304 | Input/Output: [(57 75 4 35) 4]
Test Case: 305 | Input/Output: [(58 58 1 61) 1]
Test Case: 306 | Input/Output: [(53 60 34 6) 6]
Test Case: 307 | Input/Output: [(38 82 68 63) 38]
Test Case: 308 | Input/Output: [(55 39 87 35) 35]
Test Case: 309 | Input/Output: [(84 54 34 59) 34]
Test Case: 310 | Input/Output: [(91 54 14 6) 6]
Test Case: 311 | Input/Output: [(50 86 55 6) 6]
Test Case: 312 | Input/Output: [(35 40 44 56) 35]
Test Case: 313 | Input/Output: [(74 58 87 17) 17]
Test Case: 314 | Input/Output: [(23 56 8 41) 8]
Test Case: 315 | Input/Output: [(74 91 8 50) 8]
Test Case: 316 | Input/Output: [(17 89 65 79) 17]
Test Case: 317 | Input/Output: [(6 34 48 18) 6]
Test Case: 318 | Input/Output: [(33 88 15 71) 15]
Test Case: 319 | Input/Output: [(27 59 97 97) 27]
Test Case: 320 | Input/Output: [(95 87 75 16) 16]
Test Case: 321 | Input/Output: [(9 3 96 8) 3]
Test Case: 322 | Input/Output: [(58 21 6 56) 6]
Test Case: 323 | Input/Output: [(13 60 73 83) 13]
Test Case: 324 | Input/Output: [(81 98 100 51) 51]
Test Case: 325 | Input/Output: [(58 44 78 94) 44]
Test Case: 326 | Input/Output: [(48 69 60 76) 48]
Test Case: 327 | Input/Output: [(96 22 73 36) 22]
Test Case: 328 | Input/Output: [(88 92 13 38) 13]
Test Case: 329 | Input/Output: [(47 94 96 78) 47]
Test Case: 330 | Input/Output: [(1 17 26 97) 1]
Test Case: 331 | Input/Output: [(76 24 51 74) 24]
Test Case: 332 | Input/Output: [(37 4 57 62) 4]
Test Case: 333 | Input/Output: [(79 71 94 9) 9]
Test Case: 334 | Input/Output: [(22 36 86 25) 22]
Test Case: 335 | Input/Output: [(41 100 16 86) 16]
Test Case: 336 | Input/Output: [(79 29 20 49) 20]
Test Case: 337 | Input/Output: [(95 39 100 91) 39]
Test Case: 338 | Input/Output: [(66 90 20 10) 10]
Test Case: 339 | Input/Output: [(49 33 13 67) 13]
Test Case: 340 | Input/Output: [(3 66 60 49) 3]
Test Case: 341 | Input/Output: [(23 88 87 75) 23]
Test Case: 342 | Input/Output: [(20 43 4 39) 4]
Test Case: 343 | Input/Output: [(19 62 18 98) 18]
Test Case: 344 | Input/Output: [(33 23 10 46) 10]
Test Case: 345 | Input/Output: [(92 38 27 83) 27]
Test Case: 346 | Input/Output: [(89 88 20 98) 20]
Test Case: 347 | Input/Output: [(66 24 18 79) 18]
Test Case: 348 | Input/Output: [(87 49 37 40) 37]
Test Case: 349 | Input/Output: [(50 71 38 64) 38]
Test Case: 350 | Input/Output: [(75 61 13 44) 13]
Test Case: 351 | Input/Output: [(68 66 92 10) 10]
Test Case: 352 | Input/Output: [(73 73 41 39) 39]
Test Case: 353 | Input/Output: [(82 90 53 98) 53]
Test Case: 354 | Input/Output: [(55 69 18 92) 18]
Test Case: 355 | Input/Output: [(8 48 76 46) 8]
Test Case: 356 | Input/Output: [(30 94 39 9) 9]
Test Case: 357 | Input/Output: [(23 51 46 60) 23]
Test Case: 358 | Input/Output: [(43 66 23 96) 23]
Test Case: 359 | Input/Output: [(74 22 90 51) 22]
Test Case: 360 | Input/Output: [(85 35 7 25) 7]
Test Case: 361 | Input/Output: [(3 88 56 38) 3]
Test Case: 362 | Input/Output: [(54 61 44 63) 44]
Test Case: 363 | Input/Output: [(48 27 54 69) 27]
Test Case: 364 | Input/Output: [(77 70 37 58) 37]
Test Case: 365 | Input/Output: [(98 90 45 16) 16]
Test Case: 366 | Input/Output: [(72 42 99 8) 8]
Test Case: 367 | Input/Output: [(7 52 43 86) 7]
Test Case: 368 | Input/Output: [(35 43 85 15) 15]
Test Case: 369 | Input/Output: [(18 83 83 28) 18]
Test Case: 370 | Input/Output: [(39 85 35 50) 35]
Test Case: 371 | Input/Output: [(92 91 27 26) 26]
Test Case: 372 | Input/Output: [(67 56 41 68) 41]
Test Case: 373 | Input/Output: [(29 85 100 17) 17]
Test Case: 374 | Input/Output: [(26 18 0 67) 0]
Test Case: 375 | Input/Output: [(4 40 36 85) 4]
Test Case: 376 | Input/Output: [(64 62 34 74) 34]
Test Case: 377 | Input/Output: [(12 3 58 39) 3]
Test Case: 378 | Input/Output: [(63 0 52 97) 0]
Test Case: 379 | Input/Output: [(75 6 78 55) 6]
Test Case: 380 | Input/Output: [(13 48 59 51) 13]
Test Case: 381 | Input/Output: [(51 39 99 70) 39]
Test Case: 382 | Input/Output: [(65 54 8 48) 8]
Test Case: 383 | Input/Output: [(24 50 60 12) 12]
Test Case: 384 | Input/Output: [(78 4 10 86) 4]
Test Case: 385 | Input/Output: [(6 86 66 27) 6]
Test Case: 386 | Input/Output: [(49 37 70 92) 37]
Test Case: 387 | Input/Output: [(84 6 81 51) 6]
Test Case: 388 | Input/Output: [(71 15 68 88) 15]
Test Case: 389 | Input/Output: [(100 61 76 38) 38]
Test Case: 390 | Input/Output: [(59 66 80 45) 45]
Test Case: 391 | Input/Output: [(66 30 37 3) 3]
Test Case: 392 | Input/Output: [(67 50 31 55) 31]
Test Case: 393 | Input/Output: [(9 90 44 69) 9]
Test Case: 394 | Input/Output: [(86 35 48 63) 35]
Test Case: 395 | Input/Output: [(89 14 89 35) 14]
Test Case: 396 | Input/Output: [(41 89 44 49) 41]
Test Case: 397 | Input/Output: [(73 92 78 12) 12]
Test Case: 398 | Input/Output: [(98 49 88 27) 27]
Test Case: 399 | Input/Output: [(86 94 93 31) 31]
Test Case: 400 | Input/Output: [(72 3 13 69) 3]
Test Case: 401 | Input/Output: [(97 -12 -55 -4) -55]
Test Case: 402 | Input/Output: [(68 -85 -5 83) -85]
Test Case: 403 | Input/Output: [(-67 -71 -90 -71) -90]
Test Case: 404 | Input/Output: [(-24 68 61 29) -24]
Test Case: 405 | Input/Output: [(6 -55 44 59) -55]
Test Case: 406 | Input/Output: [(-71 32 76 -25) -71]
Test Case: 407 | Input/Output: [(-10 86 27 -52) -52]
Test Case: 408 | Input/Output: [(-96 46 -48 -89) -96]
Test Case: 409 | Input/Output: [(3 33 -95 -92) -95]
Test Case: 410 | Input/Output: [(72 -67 -8 -60) -67]
Test Case: 411 | Input/Output: [(-26 -68 33 -33) -68]
Test Case: 412 | Input/Output: [(35 10 76 -78) -78]
Test Case: 413 | Input/Output: [(11 70 21 -40) -40]
Test Case: 414 | Input/Output: [(47 67 -20 45) -20]
Test Case: 415 | Input/Output: [(-77 -12 -47 -6) -77]
Test Case: 416 | Input/Output: [(86 -30 -96 -55) -96]
Test Case: 417 | Input/Output: [(26 70 60 -66) -66]
Test Case: 418 | Input/Output: [(99 -81 83 -35) -81]
Test Case: 419 | Input/Output: [(-82 49 42 87) -82]
Test Case: 420 | Input/Output: [(-3 -95 87 37) -95]
Test Case: 421 | Input/Output: [(-91 3 -67 9) -91]
Test Case: 422 | Input/Output: [(-17 -47 -19 -69) -69]
Test Case: 423 | Input/Output: [(3 4 -70 10) -70]
Test Case: 424 | Input/Output: [(100 -51 -100 -87) -100]
Test Case: 425 | Input/Output: [(64 -97 -64 -8) -97]
Test Case: 426 | Input/Output: [(-92 13 -57 7) -92]
Test Case: 427 | Input/Output: [(0 86 -85 -35) -85]
Test Case: 428 | Input/Output: [(74 -20 13 27) -20]
Test Case: 429 | Input/Output: [(45 -97 -83 -64) -97]
Test Case: 430 | Input/Output: [(85 -74 -86 -41) -86]
Test Case: 431 | Input/Output: [(-34 82 62 77) -34]
Test Case: 432 | Input/Output: [(-60 -89 30 41) -89]
Test Case: 433 | Input/Output: [(-74 49 -66 -39) -74]
Test Case: 434 | Input/Output: [(74 4 81 -11) -11]
Test Case: 435 | Input/Output: [(79 -90 -6 -90) -90]
Test Case: 436 | Input/Output: [(55 69 5 61) 5]
Test Case: 437 | Input/Output: [(-57 53 -27 91) -57]
Test Case: 438 | Input/Output: [(64 83 93 31) 31]
Test Case: 439 | Input/Output: [(-28 -4 37 -73) -73]
Test Case: 440 | Input/Output: [(-90 -14 2 -32) -90]
Test Case: 441 | Input/Output: [(-59 -44 -19 37) -59]
Test Case: 442 | Input/Output: [(20 43 -96 53) -96]
Test Case: 443 | Input/Output: [(-26 32 41 -2) -26]
Test Case: 444 | Input/Output: [(-17 8 -51 -36) -51]
Test Case: 445 | Input/Output: [(69 -43 89 30) -43]
Test Case: 446 | Input/Output: [(-1 70 95 5) -1]
Test Case: 447 | Input/Output: [(-32 -94 83 -81) -94]
Test Case: 448 | Input/Output: [(61 -24 -22 -38) -38]
Test Case: 449 | Input/Output: [(69 69 45 -1) -1]
Test Case: 450 | Input/Output: [(-12 57 15 79) -12]
Test Case: 451 | Input/Output: [(-35 -50 40 67) -50]
Test Case: 452 | Input/Output: [(-23 -52 17 -22) -52]
Test Case: 453 | Input/Output: [(-88 -76 95 -93) -93]
Test Case: 454 | Input/Output: [(32 -45 65 -40) -45]
Test Case: 455 | Input/Output: [(31 -11 67 -37) -37]
Test Case: 456 | Input/Output: [(72 -18 -98 27) -98]
Test Case: 457 | Input/Output: [(25 45 32 -10) -10]
Test Case: 458 | Input/Output: [(-77 -35 -87 69) -87]
Test Case: 459 | Input/Output: [(-17 -88 1 -69) -88]
Test Case: 460 | Input/Output: [(-83 61 -100 -92) -100]
Test Case: 461 | Input/Output: [(-46 -46 -90 -2) -90]
Test Case: 462 | Input/Output: [(-68 -86 -76 -11) -86]
Test Case: 463 | Input/Output: [(-72 52 -96 64) -96]
Test Case: 464 | Input/Output: [(15 66 61 -21) -21]
Test Case: 465 | Input/Output: [(7 -12 -28 99) -28]
Test Case: 466 | Input/Output: [(62 43 40 -28) -28]
Test Case: 467 | Input/Output: [(39 -34 -98 -37) -98]
Test Case: 468 | Input/Output: [(26 15 -82 35) -82]
Test Case: 469 | Input/Output: [(39 -24 -83 -54) -83]
Test Case: 470 | Input/Output: [(-89 43 95 -8) -89]
Test Case: 471 | Input/Output: [(28 -81 64 90) -81]
Test Case: 472 | Input/Output: [(-47 -79 2 20) -79]
Test Case: 473 | Input/Output: [(-43 -12 10 92) -43]
Test Case: 474 | Input/Output: [(-43 68 -9 42) -43]
Test Case: 475 | Input/Output: [(-27 79 21 25) -27]
Test Case: 476 | Input/Output: [(-81 67 -4 -1) -81]
Test Case: 477 | Input/Output: [(-23 -94 -79 -20) -94]
Test Case: 478 | Input/Output: [(57 18 8 49) 8]
Test Case: 479 | Input/Output: [(88 -7 -14 -32) -32]
Test Case: 480 | Input/Output: [(-87 76 -22 -79) -87]
Test Case: 481 | Input/Output: [(12 -6 -100 7) -100]
Test Case: 482 | Input/Output: [(72 7 -15 58) -15]
Test Case: 483 | Input/Output: [(-94 -9 91 -23) -94]
Test Case: 484 | Input/Output: [(-69 64 -96 64) -96]
Test Case: 485 | Input/Output: [(32 11 55 70) 11]
Test Case: 486 | Input/Output: [(-24 51 -32 -1) -32]
Test Case: 487 | Input/Output: [(5 -57 100 -8) -57]
Test Case: 488 | Input/Output: [(24 -4 -2 91) -4]
Test Case: 489 | Input/Output: [(99 -15 98 35) -15]
Test Case: 490 | Input/Output: [(-52 -51 87 64) -52]
Test Case: 491 | Input/Output: [(88 61 -42 -63) -63]
Test Case: 492 | Input/Output: [(-51 -94 6 -8) -94]
Test Case: 493 | Input/Output: [(89 46 13 6) 6]
Test Case: 494 | Input/Output: [(-35 89 -99 -38) -99]
Test Case: 495 | Input/Output: [(57 97 33 1) 1]
Test Case: 496 | Input/Output: [(57 -36 -5 62) -36]
Test Case: 497 | Input/Output: [(-22 -14 22 57) -22]
Test Case: 498 | Input/Output: [(-51 67 -26 24) -51]
Test Case: 499 | Input/Output: [(-95 78 42 -100) -100]
Test Case: 500 | Input/Output: [(51 -95 -49 -18) -95]
Test Case: 501 | Input/Output: [(-31 30 81 20) -31]
Test Case: 502 | Input/Output: [(-73 -59 -78 84) -78]
Test Case: 503 | Input/Output: [(87 0 12 47) 0]
Test Case: 504 | Input/Output: [(72 75 -8 -65) -65]
Test Case: 505 | Input/Output: [(98 -78 25 58) -78]
Test Case: 506 | Input/Output: [(12 13 36 -77) -77]
Test Case: 507 | Input/Output: [(57 81 96 86) 57]
Test Case: 508 | Input/Output: [(-70 -28 12 52) -70]
Test Case: 509 | Input/Output: [(44 45 -77 -95) -95]
Test Case: 510 | Input/Output: [(11 -53 -8 81) -53]
Test Case: 511 | Input/Output: [(-59 -24 -16 34) -59]
Test Case: 512 | Input/Output: [(68 -9 84 -77) -77]
Test Case: 513 | Input/Output: [(68 94 -10 99) -10]
Test Case: 514 | Input/Output: [(-21 65 94 88) -21]
Test Case: 515 | Input/Output: [(85 91 42 -71) -71]
Test Case: 516 | Input/Output: [(56 62 2 37) 2]
Test Case: 517 | Input/Output: [(96 100 48 47) 47]
Test Case: 518 | Input/Output: [(49 70 -26 97) -26]
Test Case: 519 | Input/Output: [(-60 94 -19 -8) -60]
Test Case: 520 | Input/Output: [(1 -73 -56 9) -73]
Test Case: 521 | Input/Output: [(-73 -100 65 -21) -100]
Test Case: 522 | Input/Output: [(-93 -96 -31 15) -96]
Test Case: 523 | Input/Output: [(54 -70 57 7) -70]
Test Case: 524 | Input/Output: [(-21 68 90 28) -21]
Test Case: 525 | Input/Output: [(32 14 -36 95) -36]
Test Case: 526 | Input/Output: [(-28 14 80 -57) -57]
Test Case: 527 | Input/Output: [(72 23 -44 -22) -44]
Test Case: 528 | Input/Output: [(3 -39 -52 1) -52]
Test Case: 529 | Input/Output: [(-24 9 -88 2) -88]
Test Case: 530 | Input/Output: [(90 -41 90 -54) -54]
Test Case: 531 | Input/Output: [(-7 70 -38 38) -38]
Test Case: 532 | Input/Output: [(32 27 -91 -9) -91]
Test Case: 533 | Input/Output: [(-94 31 -62 19) -94]
Test Case: 534 | Input/Output: [(-81 73 -42 13) -81]
Test Case: 535 | Input/Output: [(-67 -100 41 -87) -100]
Test Case: 536 | Input/Output: [(34 29 28 62) 28]
Test Case: 537 | Input/Output: [(-6 78 -6 49) -6]
Test Case: 538 | Input/Output: [(-14 47 18 -7) -14]
Test Case: 539 | Input/Output: [(-43 -3 -36 -89) -89]
Test Case: 540 | Input/Output: [(-41 95 89 -71) -71]
Test Case: 541 | Input/Output: [(84 75 7 -24) -24]
Test Case: 542 | Input/Output: [(-62 -38 -91 83) -91]
Test Case: 543 | Input/Output: [(77 -6 -30 60) -30]
Test Case: 544 | Input/Output: [(29 -35 66 30) -35]
Test Case: 545 | Input/Output: [(10 -37 -17 -71) -71]
Test Case: 546 | Input/Output: [(19 73 39 21) 19]
Test Case: 547 | Input/Output: [(-61 35 -78 -52) -78]
Test Case: 548 | Input/Output: [(-55 78 96 24) -55]
Test Case: 549 | Input/Output: [(52 24 -37 -19) -37]
Test Case: 550 | Input/Output: [(-70 78 54 -43) -70]
Test Case: 551 | Input/Output: [(95 5 -10 82) -10]
Test Case: 552 | Input/Output: [(-71 74 10 80) -71]
Test Case: 553 | Input/Output: [(-88 84 42 6) -88]
Test Case: 554 | Input/Output: [(-42 -84 57 92) -84]
Test Case: 555 | Input/Output: [(-7 -27 -72 56) -72]
Test Case: 556 | Input/Output: [(57 16 80 -81) -81]
Test Case: 557 | Input/Output: [(9 15 39 44) 9]
Test Case: 558 | Input/Output: [(-76 -70 -33 -22) -76]
Test Case: 559 | Input/Output: [(78 -72 -37 4) -72]
Test Case: 560 | Input/Output: [(57 41 -15 28) -15]
Test Case: 561 | Input/Output: [(-7 75 -80 9) -80]
Test Case: 562 | Input/Output: [(-16 81 -71 85) -71]
Test Case: 563 | Input/Output: [(33 -55 56 92) -55]
Test Case: 564 | Input/Output: [(3 -100 -92 100) -100]
Test Case: 565 | Input/Output: [(4 -51 -52 -51) -52]
Test Case: 566 | Input/Output: [(-82 61 63 67) -82]
Test Case: 567 | Input/Output: [(-16 -35 -81 79) -81]
Test Case: 568 | Input/Output: [(-22 -33 4 94) -33]
Test Case: 569 | Input/Output: [(69 -41 16 -35) -41]
Test Case: 570 | Input/Output: [(23 58 94 -74) -74]
Test Case: 571 | Input/Output: [(-82 -34 36 88) -82]
Test Case: 572 | Input/Output: [(-18 73 -55 52) -55]
Test Case: 573 | Input/Output: [(-43 94 75 87) -43]
Test Case: 574 | Input/Output: [(86 -44 7 -27) -44]
Test Case: 575 | Input/Output: [(3 48 23 43) 3]
Test Case: 576 | Input/Output: [(-58 -34 12 78) -58]
Test Case: 577 | Input/Output: [(-76 -77 -27 -41) -77]
Test Case: 578 | Input/Output: [(76 -45 -86 -88) -88]
Test Case: 579 | Input/Output: [(2 -67 -83 -6) -83]
Test Case: 580 | Input/Output: [(79 -79 68 96) -79]
Test Case: 581 | Input/Output: [(-42 -98 0 -24) -98]
Test Case: 582 | Input/Output: [(-69 2 66 -60) -69]
Test Case: 583 | Input/Output: [(-97 -93 13 13) -97]
Test Case: 584 | Input/Output: [(34 18 39 -15) -15]
Test Case: 585 | Input/Output: [(-97 -54 -40 -3) -97]
Test Case: 586 | Input/Output: [(-94 -34 -41 -79) -94]
Test Case: 587 | Input/Output: [(-72 -24 75 -42) -72]
Test Case: 588 | Input/Output: [(-47 -22 -62 -76) -76]
Test Case: 589 | Input/Output: [(-52 43 -27 32) -52]
Test Case: 590 | Input/Output: [(-68 -18 -3 -17) -68]
Test Case: 591 | Input/Output: [(46 -82 -3 88) -82]
Test Case: 592 | Input/Output: [(54 -12 59 -67) -67]
Test Case: 593 | Input/Output: [(65 95 -21 35) -21]
Test Case: 594 | Input/Output: [(59 42 22 99) 22]
Test Case: 595 | Input/Output: [(-39 36 58 89) -39]
Test Case: 596 | Input/Output: [(45 -95 85 -81) -95]
Test Case: 597 | Input/Output: [(-86 -63 -96 38) -96]
Test Case: 598 | Input/Output: [(-38 78 40 -25) -38]
Test Case: 599 | Input/Output: [(38 12 38 -24) -24]
Test Case: 600 | Input/Output: [(-43 94 14 -52) -52]
Test Case: 601 | Input/Output: [(-95 -18 65 58) -95]
Test Case: 602 | Input/Output: [(-55 100 87 -51) -55]
Test Case: 603 | Input/Output: [(61 -4 97 30) -4]
Test Case: 604 | Input/Output: [(79 79 -44 -81) -81]
Test Case: 605 | Input/Output: [(82 41 -18 -63) -63]
Test Case: 606 | Input/Output: [(-15 -90 77 -27) -90]
Test Case: 607 | Input/Output: [(44 -69 43 -9) -69]
Test Case: 608 | Input/Output: [(4 4 11 96) 4]
Test Case: 609 | Input/Output: [(-59 34 49 74) -59]
Test Case: 610 | Input/Output: [(96 -79 39 28) -79]
Test Case: 611 | Input/Output: [(64 -62 -53 8) -62]
Test Case: 612 | Input/Output: [(-94 48 -56 -66) -94]
Test Case: 613 | Input/Output: [(-93 -45 91 39) -93]
Test Case: 614 | Input/Output: [(3 4 -90 84) -90]
Test Case: 615 | Input/Output: [(-63 32 86 50) -63]
Test Case: 616 | Input/Output: [(-58 11 -20 35) -58]
Test Case: 617 | Input/Output: [(-78 -65 -51 100) -78]
Test Case: 618 | Input/Output: [(-59 -95 -25 -97) -97]
Test Case: 619 | Input/Output: [(-92 -97 59 64) -97]
Test Case: 620 | Input/Output: [(84 29 -38 52) -38]
Test Case: 621 | Input/Output: [(-8 -62 -73 7) -73]
Test Case: 622 | Input/Output: [(60 -14 -11 73) -14]
Test Case: 623 | Input/Output: [(5 8 -19 -19) -19]
Test Case: 624 | Input/Output: [(-10 -86 25 -51) -86]
Test Case: 625 | Input/Output: [(54 60 -5 -81) -81]
Test Case: 626 | Input/Output: [(94 51 -69 -20) -69]
Test Case: 627 | Input/Output: [(-95 -63 -88 -98) -98]
Test Case: 628 | Input/Output: [(-88 1 -85 69) -88]
Test Case: 629 | Input/Output: [(45 63 -73 58) -73]
Test Case: 630 | Input/Output: [(-5 18 12 99) -5]
Test Case: 631 | Input/Output: [(26 59 -50 -10) -50]
Test Case: 632 | Input/Output: [(-58 -90 -34 -61) -90]
Test Case: 633 | Input/Output: [(77 67 -69 -83) -83]
Test Case: 634 | Input/Output: [(48 -62 36 -94) -94]
Test Case: 635 | Input/Output: [(-59 -23 -19 36) -59]
Test Case: 636 | Input/Output: [(55 100 44 0) 0]
Test Case: 637 | Input/Output: [(-60 -86 96 49) -86]
Test Case: 638 | Input/Output: [(-25 -92 -35 36) -92]
Test Case: 639 | Input/Output: [(74 -18 81 96) -18]
Test Case: 640 | Input/Output: [(-69 -16 -61 -65) -69]
Test Case: 641 | Input/Output: [(-49 94 23 -39) -49]
Test Case: 642 | Input/Output: [(-58 -12 -61 -6) -61]
Test Case: 643 | Input/Output: [(-36 47 64 -25) -36]
Test Case: 644 | Input/Output: [(51 83 -33 96) -33]
Test Case: 645 | Input/Output: [(99 -6 61 22) -6]
Test Case: 646 | Input/Output: [(59 69 24 -61) -61]
Test Case: 647 | Input/Output: [(-99 89 -95 97) -99]
Test Case: 648 | Input/Output: [(47 87 -22 98) -22]
Test Case: 649 | Input/Output: [(-76 -36 -32 58) -76]
Test Case: 650 | Input/Output: [(-10 -42 26 -8) -42]
Test Case: 651 | Input/Output: [(-96 66 38 -78) -96]
Test Case: 652 | Input/Output: [(92 -45 -95 54) -95]
Test Case: 653 | Input/Output: [(21 -30 53 -37) -37]
Test Case: 654 | Input/Output: [(68 -91 -73 26) -91]
Test Case: 655 | Input/Output: [(-38 18 45 77) -38]
Test Case: 656 | Input/Output: [(-14 91 -80 -35) -80]
Test Case: 657 | Input/Output: [(42 -67 -7 -53) -67]
Test Case: 658 | Input/Output: [(-47 -84 -28 -41) -84]
Test Case: 659 | Input/Output: [(54 -1 8 -63) -63]
Test Case: 660 | Input/Output: [(91 35 -58 -60) -60]
Test Case: 661 | Input/Output: [(33 -1 -49 4) -49]
Test Case: 662 | Input/Output: [(23 -17 -46 -64) -64]
Test Case: 663 | Input/Output: [(-40 -47 14 -30) -47]
Test Case: 664 | Input/Output: [(-71 -3 94 -7) -71]
Test Case: 665 | Input/Output: [(-65 -27 54 -34) -65]
Test Case: 666 | Input/Output: [(-56 -68 0 -28) -68]
Test Case: 667 | Input/Output: [(-49 15 -91 -56) -91]
Test Case: 668 | Input/Output: [(-84 92 21 -19) -84]
Test Case: 669 | Input/Output: [(-70 15 -9 -21) -70]
Test Case: 670 | Input/Output: [(-51 -47 -86 88) -86]
Test Case: 671 | Input/Output: [(-57 11 -81 -69) -81]
Test Case: 672 | Input/Output: [(34 -36 72 99) -36]
Test Case: 673 | Input/Output: [(-88 -16 9 47) -88]
Test Case: 674 | Input/Output: [(-70 75 -52 31) -70]
Test Case: 675 | Input/Output: [(2 57 53 -93) -93]
Test Case: 676 | Input/Output: [(-14 -61 -40 -26) -61]
Test Case: 677 | Input/Output: [(-79 89 -29 -3) -79]
Test Case: 678 | Input/Output: [(-67 42 29 62) -67]
Test Case: 679 | Input/Output: [(90 48 -37 43) -37]
Test Case: 680 | Input/Output: [(-80 -47 -76 86) -80]
Test Case: 681 | Input/Output: [(-92 -8 45 37) -92]
Test Case: 682 | Input/Output: [(-58 16 37 -80) -80]
Test Case: 683 | Input/Output: [(32 -62 -60 26) -62]
Test Case: 684 | Input/Output: [(52 -5 -84 -80) -84]
Test Case: 685 | Input/Output: [(69 81 53 -21) -21]
Test Case: 686 | Input/Output: [(-27 -6 -34 -67) -67]
Test Case: 687 | Input/Output: [(67 83 -60 95) -60]
Test Case: 688 | Input/Output: [(-34 -20 2 -3) -34]
Test Case: 689 | Input/Output: [(-81 28 -69 7) -81]
Test Case: 690 | Input/Output: [(-94 53 27 -35) -94]
Test Case: 691 | Input/Output: [(67 41 6 -6) -6]
Test Case: 692 | Input/Output: [(79 -57 83 -68) -68]
Test Case: 693 | Input/Output: [(-17 -97 15 82) -97]
Test Case: 694 | Input/Output: [(6 -83 -3 22) -83]
Test Case: 695 | Input/Output: [(60 53 19 69) 19]
Test Case: 696 | Input/Output: [(65 -99 -78 51) -99]
Test Case: 697 | Input/Output: [(5 -85 11 61) -85]
Test Case: 698 | Input/Output: [(93 57 -89 -6) -89]
Test Case: 699 | Input/Output: [(-100 -83 95 -43) -100]
Test Case: 700 | Input/Output: [(-62 -62 33 69) -62]
Test Case: 701 | Input/Output: [(-96 51 -91 11) -96]
Test Case: 702 | Input/Output: [(-89 98 12 -5) -89]
Test Case: 703 | Input/Output: [(28 53 80 64) 28]
Test Case: 704 | Input/Output: [(-2 38 89 89) -2]
Test Case: 705 | Input/Output: [(-53 28 -99 27) -99]
Test Case: 706 | Input/Output: [(-60 -31 -75 -72) -75]
Test Case: 707 | Input/Output: [(98 8 29 -75) -75]
Test Case: 708 | Input/Output: [(5 32 91 -48) -48]
Test Case: 709 | Input/Output: [(-81 -35 64 98) -81]
Test Case: 710 | Input/Output: [(97 0 88 57) 0]
Test Case: 711 | Input/Output: [(-2 75 -30 51) -30]
Test Case: 712 | Input/Output: [(10 -98 -6 47) -98]
Test Case: 713 | Input/Output: [(-73 88 -92 77) -92]
Test Case: 714 | Input/Output: [(12 51 19 -36) -36]
Test Case: 715 | Input/Output: [(59 -41 13 87) -41]
Test Case: 716 | Input/Output: [(14 -40 17 -44) -44]
Test Case: 717 | Input/Output: [(67 17 -64 -60) -64]
Test Case: 718 | Input/Output: [(36 25 54 -78) -78]
Test Case: 719 | Input/Output: [(15 -94 87 -16) -94]
Test Case: 720 | Input/Output: [(-45 -81 -15 -85) -85]
Test Case: 721 | Input/Output: [(16 26 -40 12) -40]
Test Case: 722 | Input/Output: [(69 -39 20 52) -39]
Test Case: 723 | Input/Output: [(32 -63 88 -87) -87]
Test Case: 724 | Input/Output: [(94 -51 -1 44) -51]
Test Case: 725 | Input/Output: [(38 32 22 -20) -20]
Test Case: 726 | Input/Output: [(80 -35 -99 26) -99]
Test Case: 727 | Input/Output: [(-23 51 30 -99) -99]
Test Case: 728 | Input/Output: [(-33 76 -99 16) -99]
Test Case: 729 | Input/Output: [(-30 21 -65 -20) -65]
Test Case: 730 | Input/Output: [(-14 32 5 -78) -78]
Test Case: 731 | Input/Output: [(53 -55 -73 -40) -73]
Test Case: 732 | Input/Output: [(1 -88 -37 -44) -88]
Test Case: 733 | Input/Output: [(74 22 -96 12) -96]
Test Case: 734 | Input/Output: [(-35 29 14 29) -35]
Test Case: 735 | Input/Output: [(34 43 62 -94) -94]
Test Case: 736 | Input/Output: [(-87 83 -72 71) -87]
Test Case: 737 | Input/Output: [(72 -2 70 -22) -22]
Test Case: 738 | Input/Output: [(0 -81 -65 -61) -81]
Test Case: 739 | Input/Output: [(71 -72 -84 -74) -84]
Test Case: 740 | Input/Output: [(42 11 25 78) 11]
Test Case: 741 | Input/Output: [(100 24 -95 83) -95]
Test Case: 742 | Input/Output: [(72 1 46 -1) -1]
Test Case: 743 | Input/Output: [(0 -8 99 39) -8]
Test Case: 744 | Input/Output: [(86 -92 88 100) -92]
Test Case: 745 | Input/Output: [(-76 -5 25 35) -76]
Test Case: 746 | Input/Output: [(28 -64 14 -33) -64]
Test Case: 747 | Input/Output: [(9 79 77 10) 9]
Test Case: 748 | Input/Output: [(74 25 -93 50) -93]
Test Case: 749 | Input/Output: [(-57 -81 57 82) -81]
Test Case: 750 | Input/Output: [(-34 96 -54 -87) -87]
Test Case: 751 | Input/Output: [(-18 25 38 -35) -35]
Test Case: 752 | Input/Output: [(92 -48 55 90) -48]
Test Case: 753 | Input/Output: [(30 1 -10 46) -10]
Test Case: 754 | Input/Output: [(-21 -13 -29 90) -29]
Test Case: 755 | Input/Output: [(46 34 -2 -77) -77]
Test Case: 756 | Input/Output: [(78 -50 -44 -75) -75]
Test Case: 757 | Input/Output: [(-89 20 34 -35) -89]
Test Case: 758 | Input/Output: [(67 -26 -32 30) -32]
Test Case: 759 | Input/Output: [(-53 -78 -22 -84) -84]
Test Case: 760 | Input/Output: [(11 53 96 56) 11]
Test Case: 761 | Input/Output: [(9 -67 9 3) -67]
Test Case: 762 | Input/Output: [(-99 23 -83 5) -99]
Test Case: 763 | Input/Output: [(59 -36 -97 46) -97]
Test Case: 764 | Input/Output: [(-42 -41 -98 4) -98]
Test Case: 765 | Input/Output: [(-85 95 18 46) -85]
Test Case: 766 | Input/Output: [(-62 -54 -26 -9) -62]
Test Case: 767 | Input/Output: [(-36 -59 77 -69) -69]
Test Case: 768 | Input/Output: [(57 85 -44 24) -44]
Test Case: 769 | Input/Output: [(-87 -70 96 -4) -87]
Test Case: 770 | Input/Output: [(-2 65 23 99) -2]
Test Case: 771 | Input/Output: [(-80 81 3 -52) -80]
Test Case: 772 | Input/Output: [(-26 11 0 63) -26]
Test Case: 773 | Input/Output: [(45 -1 -33 28) -33]
Test Case: 774 | Input/Output: [(37 -17 60 69) -17]
Test Case: 775 | Input/Output: [(-53 -49 -14 -91) -91]
Test Case: 776 | Input/Output: [(-16 76 77 -50) -50]
Test Case: 777 | Input/Output: [(16 24 79 -27) -27]
Test Case: 778 | Input/Output: [(50 -21 68 1) -21]
Test Case: 779 | Input/Output: [(58 67 -61 72) -61]
Test Case: 780 | Input/Output: [(33 42 -12 -32) -32]
Test Case: 781 | Input/Output: [(-80 87 -54 74) -80]
Test Case: 782 | Input/Output: [(8 100 47 -69) -69]
Test Case: 783 | Input/Output: [(-35 25 -6 52) -35]
Test Case: 784 | Input/Output: [(5 -42 74 41) -42]
Test Case: 785 | Input/Output: [(-91 5 40 26) -91]
Test Case: 786 | Input/Output: [(-33 70 -5 -2) -33]
Test Case: 787 | Input/Output: [(-39 72 -84 86) -84]
Test Case: 788 | Input/Output: [(27 -19 -68 59) -68]
Test Case: 789 | Input/Output: [(10 31 94 96) 10]
Test Case: 790 | Input/Output: [(20 69 -49 19) -49]
Test Case: 791 | Input/Output: [(-85 87 -91 2) -91]
Test Case: 792 | Input/Output: [(3 -17 -87 -29) -87]
Test Case: 793 | Input/Output: [(-22 -96 83 69) -96]
Test Case: 794 | Input/Output: [(-83 -79 72 22) -83]
Test Case: 795 | Input/Output: [(-47 88 -43 57) -47]
Test Case: 796 | Input/Output: [(71 -20 -52 -75) -75]
Test Case: 797 | Input/Output: [(-3 -82 38 -72) -82]
Test Case: 798 | Input/Output: [(-50 -98 -12 -62) -98]
Test Case: 799 | Input/Output: [(63 2 -52 -61) -61]
Test Case: 800 | Input/Output: [(41 28 -20 -89) -89]
Test Case: 801 | Input/Output: [(-12 -6 -28 -8) -28]
Test Case: 802 | Input/Output: [(-80 -79 -23 -92) -92]
Test Case: 803 | Input/Output: [(25 -50 97 92) -50]
Test Case: 804 | Input/Output: [(62 14 92 -76) -76]
Test Case: 805 | Input/Output: [(37 -46 1 -74) -74]
Test Case: 806 | Input/Output: [(-72 -80 74 -10) -80]
Test Case: 807 | Input/Output: [(-15 -31 -77 52) -77]
Test Case: 808 | Input/Output: [(-62 -78 80 38) -78]
Test Case: 809 | Input/Output: [(4 38 35 -81) -81]
Test Case: 810 | Input/Output: [(-65 6 -3 8) -65]
Test Case: 811 | Input/Output: [(33 87 -6 43) -6]
Test Case: 812 | Input/Output: [(-89 15 -94 -54) -94]
Test Case: 813 | Input/Output: [(-20 -69 -90 -64) -90]
Test Case: 814 | Input/Output: [(52 50 -19 -83) -83]
Test Case: 815 | Input/Output: [(12 -41 -76 7) -76]
Test Case: 816 | Input/Output: [(-88 -22 -90 -41) -90]
Test Case: 817 | Input/Output: [(19 25 53 -50) -50]
Test Case: 818 | Input/Output: [(80 -14 26 -61) -61]
Test Case: 819 | Input/Output: [(76 95 -7 30) -7]
Test Case: 820 | Input/Output: [(-70 -41 -11 5) -70]
Test Case: 821 | Input/Output: [(-5 7 -6 81) -6]
Test Case: 822 | Input/Output: [(67 -4 12 90) -4]
Test Case: 823 | Input/Output: [(93 -56 -4 -26) -56]
Test Case: 824 | Input/Output: [(46 56 -31 32) -31]
Test Case: 825 | Input/Output: [(82 24 -3 52) -3]
Test Case: 826 | Input/Output: [(-24 -8 48 -57) -57]
Test Case: 827 | Input/Output: [(-94 47 -80 -22) -94]
Test Case: 828 | Input/Output: [(28 89 -67 -6) -67]
Test Case: 829 | Input/Output: [(-63 77 -33 74) -63]
Test Case: 830 | Input/Output: [(-76 -4 58 11) -76]
Test Case: 831 | Input/Output: [(-66 -74 0 -7) -74]
Test Case: 832 | Input/Output: [(71 -11 -48 54) -48]
Test Case: 833 | Input/Output: [(95 -16 14 -10) -16]
Test Case: 834 | Input/Output: [(-70 -3 16 -43) -70]
Test Case: 835 | Input/Output: [(-41 84 -16 -7) -41]
Test Case: 836 | Input/Output: [(-42 33 32 -19) -42]
Test Case: 837 | Input/Output: [(-31 48 37 -76) -76]
Test Case: 838 | Input/Output: [(-6 -40 -21 30) -40]
Test Case: 839 | Input/Output: [(-92 47 -66 -43) -92]
Test Case: 840 | Input/Output: [(-58 -36 90 70) -58]
Test Case: 841 | Input/Output: [(-69 47 -95 47) -95]
Test Case: 842 | Input/Output: [(-85 -44 19 4) -85]
Test Case: 843 | Input/Output: [(40 97 27 41) 27]
Test Case: 844 | Input/Output: [(-5 -49 37 -82) -82]
Test Case: 845 | Input/Output: [(52 -47 -66 74) -66]
Test Case: 846 | Input/Output: [(-50 31 85 58) -50]
Test Case: 847 | Input/Output: [(-97 -51 63 -13) -97]
Test Case: 848 | Input/Output: [(-98 -13 -57 -18) -98]
Test Case: 849 | Input/Output: [(-48 88 35 -69) -69]
Test Case: 850 | Input/Output: [(29 18 -17 -37) -37]
Test Case: 851 | Input/Output: [(-81 -90 -40 45) -90]
Test Case: 852 | Input/Output: [(-66 -91 -81 41) -91]
Test Case: 853 | Input/Output: [(63 -24 25 -78) -78]
Test Case: 854 | Input/Output: [(58 -89 -17 96) -89]
Test Case: 855 | Input/Output: [(3 -52 -78 48) -78]
Test Case: 856 | Input/Output: [(-96 -65 78 79) -96]
Test Case: 857 | Input/Output: [(-32 -97 93 -93) -97]
Test Case: 858 | Input/Output: [(-12 69 51 -93) -93]
Test Case: 859 | Input/Output: [(65 73 35 28) 28]
Test Case: 860 | Input/Output: [(-38 93 -85 -59) -85]
Test Case: 861 | Input/Output: [(-57 5 -72 -45) -72]
Test Case: 862 | Input/Output: [(75 -37 65 9) -37]
Test Case: 863 | Input/Output: [(-74 30 -61 30) -74]
Test Case: 864 | Input/Output: [(8 -87 -38 38) -87]
Test Case: 865 | Input/Output: [(-71 4 -79 -100) -100]
Test Case: 866 | Input/Output: [(15 67 93 8) 8]
Test Case: 867 | Input/Output: [(-43 51 -5 26) -43]
Test Case: 868 | Input/Output: [(-88 20 41 -82) -88]
Test Case: 869 | Input/Output: [(15 83 -51 -38) -51]
Test Case: 870 | Input/Output: [(-43 -65 -53 -76) -76]
Test Case: 871 | Input/Output: [(-17 -74 83 -68) -74]
Test Case: 872 | Input/Output: [(-32 -47 -62 38) -62]
Test Case: 873 | Input/Output: [(89 59 -18 58) -18]
Test Case: 874 | Input/Output: [(58 -30 -95 50) -95]
Test Case: 875 | Input/Output: [(34 89 46 -74) -74]
Test Case: 876 | Input/Output: [(-4 -4 9 15) -4]
Test Case: 877 | Input/Output: [(-10 81 53 76) -10]
Test Case: 878 | Input/Output: [(56 -33 31 -5) -33]
Test Case: 879 | Input/Output: [(-25 92 49 56) -25]
Test Case: 880 | Input/Output: [(19 67 80 9) 9]
Test Case: 881 | Input/Output: [(13 41 -10 43) -10]
Test Case: 882 | Input/Output: [(-32 100 -69 -82) -82]
Test Case: 883 | Input/Output: [(8 34 -69 63) -69]
Test Case: 884 | Input/Output: [(-8 -89 95 5) -89]
Test Case: 885 | Input/Output: [(-59 -52 89 -15) -59]
Test Case: 886 | Input/Output: [(-18 -98 87 55) -98]
Test Case: 887 | Input/Output: [(83 -94 39 73) -94]
Test Case: 888 | Input/Output: [(-38 43 -56 -2) -56]
Test Case: 889 | Input/Output: [(-25 27 42 82) -25]
Test Case: 890 | Input/Output: [(-21 51 -48 28) -48]
Test Case: 891 | Input/Output: [(-25 -18 98 95) -25]
Test Case: 892 | Input/Output: [(54 71 -10 -10) -10]
Test Case: 893 | Input/Output: [(-94 -87 -71 -18) -94]
Test Case: 894 | Input/Output: [(-2 14 54 79) -2]
Test Case: 895 | Input/Output: [(-14 -3 -57 -89) -89]
Test Case: 896 | Input/Output: [(-2 -3 -80 98) -80]
Test Case: 897 | Input/Output: [(-86 -62 -92 -44) -92]
Test Case: 898 | Input/Output: [(87 23 40 41) 23]
Test Case: 899 | Input/Output: [(81 -82 -50 35) -82]
Test Case: 900 | Input/Output: [(18 95 -92 -8) -92]
Test Case: 901 | Input/Output: [(-70 98 93 20) -70]
Test Case: 902 | Input/Output: [(85 59 59 -57) -57]
Test Case: 903 | Input/Output: [(59 100 -1 -84) -84]
Test Case: 904 | Input/Output: [(12 -84 92 57) -84]
Test Case: 905 | Input/Output: [(83 -32 28 66) -32]
Test Case: 906 | Input/Output: [(-41 -44 -91 57) -91]
Test Case: 907 | Input/Output: [(43 57 61 -98) -98]
Test Case: 908 | Input/Output: [(-51 77 -51 42) -51]
Test Case: 909 | Input/Output: [(-62 31 84 -68) -68]
Test Case: 910 | Input/Output: [(-97 -31 -1 2) -97]
Test Case: 911 | Input/Output: [(42 -27 -1 72) -27]
Test Case: 912 | Input/Output: [(7 64 -93 78) -93]
Test Case: 913 | Input/Output: [(-53 89 -35 13) -53]
Test Case: 914 | Input/Output: [(78 9 -89 -1) -89]
Test Case: 915 | Input/Output: [(43 93 98 -14) -14]
Test Case: 916 | Input/Output: [(62 47 91 -71) -71]
Test Case: 917 | Input/Output: [(77 32 4 -53) -53]
Test Case: 918 | Input/Output: [(99 60 -21 78) -21]
Test Case: 919 | Input/Output: [(70 -43 -72 66) -72]
Test Case: 920 | Input/Output: [(-86 38 -79 -41) -86]
Test Case: 921 | Input/Output: [(65 96 -19 28) -19]
Test Case: 922 | Input/Output: [(-39 11 -38 -3) -39]
Test Case: 923 | Input/Output: [(90 -95 62 -88) -95]
Test Case: 924 | Input/Output: [(-96 99 -61 -83) -96]
Test Case: 925 | Input/Output: [(-90 -86 59 72) -90]
Test Case: 926 | Input/Output: [(0 -91 -46 2) -91]
Test Case: 927 | Input/Output: [(3 6 -88 46) -88]
Test Case: 928 | Input/Output: [(-37 58 41 7) -37]
Test Case: 929 | Input/Output: [(8 82 23 -57) -57]
Test Case: 930 | Input/Output: [(-46 -70 5 -8) -70]
Test Case: 931 | Input/Output: [(-80 100 -88 -11) -88]
Test Case: 932 | Input/Output: [(22 -73 -8 32) -73]
Test Case: 933 | Input/Output: [(22 -23 -17 -97) -97]
Test Case: 934 | Input/Output: [(-14 -37 45 50) -37]
Test Case: 935 | Input/Output: [(90 -68 -16 -63) -68]
Test Case: 936 | Input/Output: [(18 80 31 -78) -78]
Test Case: 937 | Input/Output: [(-36 43 38 -38) -38]
Test Case: 938 | Input/Output: [(-98 96 -58 -90) -98]
Test Case: 939 | Input/Output: [(72 -27 22 2) -27]
Test Case: 940 | Input/Output: [(-90 -73 -53 69) -90]
Test Case: 941 | Input/Output: [(11 -32 -36 25) -36]
Test Case: 942 | Input/Output: [(-90 43 78 38) -90]
Test Case: 943 | Input/Output: [(63 -45 -90 -3) -90]
Test Case: 944 | Input/Output: [(88 -21 -39 97) -39]
Test Case: 945 | Input/Output: [(88 47 -91 87) -91]
Test Case: 946 | Input/Output: [(41 -66 -33 -52) -66]
Test Case: 947 | Input/Output: [(31 55 -99 -20) -99]
Test Case: 948 | Input/Output: [(-4 0 49 -63) -63]
Test Case: 949 | Input/Output: [(-60 -65 -25 46) -65]
Test Case: 950 | Input/Output: [(-100 10 5 87) -100]
Test Case: 951 | Input/Output: [(79 61 -90 -86) -90]
Test Case: 952 | Input/Output: [(85 71 47 50) 47]
Test Case: 953 | Input/Output: [(16 -91 33 2) -91]
Test Case: 954 | Input/Output: [(-63 72 -28 18) -63]
Test Case: 955 | Input/Output: [(-77 81 36 -89) -89]
Test Case: 956 | Input/Output: [(-30 100 -88 -2) -88]
Test Case: 957 | Input/Output: [(5 47 -19 -63) -63]
Test Case: 958 | Input/Output: [(10 -11 0 48) -11]
Test Case: 959 | Input/Output: [(-94 52 23 -64) -94]
Test Case: 960 | Input/Output: [(-38 -86 94 -90) -90]
Test Case: 961 | Input/Output: [(64 75 76 -23) -23]
Test Case: 962 | Input/Output: [(1 58 -19 34) -19]
Test Case: 963 | Input/Output: [(9 -98 -4 19) -98]
Test Case: 964 | Input/Output: [(24 76 -7 80) -7]
Test Case: 965 | Input/Output: [(-31 -93 -69 -32) -93]
Test Case: 966 | Input/Output: [(-74 -57 70 29) -74]
Test Case: 967 | Input/Output: [(93 -80 45 40) -80]
Test Case: 968 | Input/Output: [(95 35 -66 -20) -66]
Test Case: 969 | Input/Output: [(-39 -59 37 -19) -59]
Test Case: 970 | Input/Output: [(60 -88 -34 69) -88]
Test Case: 971 | Input/Output: [(-21 -41 13 87) -41]
Test Case: 972 | Input/Output: [(-42 4 -72 79) -72]
Test Case: 973 | Input/Output: [(-56 73 -86 78) -86]
Test Case: 974 | Input/Output: [(-23 81 85 96) -23]
Test Case: 975 | Input/Output: [(44 97 45 77) 44]
Test Case: 976 | Input/Output: [(-95 -15 65 38) -95]
Test Case: 977 | Input/Output: [(12 66 20 50) 12]
Test Case: 978 | Input/Output: [(41 9 56 87) 9]
Test Case: 979 | Input/Output: [(-86 -47 -32 -31) -86]
Test Case: 980 | Input/Output: [(30 53 18 10) 10]
Test Case: 981 | Input/Output: [(68 -80 63 35) -80]
Test Case: 982 | Input/Output: [(-44 -93 -38 -28) -93]
Test Case: 983 | Input/Output: [(-94 60 95 -83) -94]
Test Case: 984 | Input/Output: [(35 -16 8 24) -16]
Test Case: 985 | Input/Output: [(-96 -68 -90 -77) -96]
Test Case: 986 | Input/Output: [(-56 27 -61 96) -61]
Test Case: 987 | Input/Output: [(-73 54 -66 78) -73]
Test Case: 988 | Input/Output: [(68 87 -1 1) -1]
Test Case: 989 | Input/Output: [(57 -76 -6 -87) -87]
Test Case: 990 | Input/Output: [(-34 64 -7 93) -34]
Test Case: 991 | Input/Output: [(47 -5 -60 28) -60]
Test Case: 992 | Input/Output: [(-2 40 55 -81) -81]
Test Case: 993 | Input/Output: [(74 4 86 92) 4]
Test Case: 994 | Input/Output: [(91 96 88 13) 13]
Test Case: 995 | Input/Output: [(45 61 -91 -83) -91]
Test Case: 996 | Input/Output: [(-50 -30 -83 39) -83]
Test Case: 997 | Input/Output: [(94 78 82 53) 53]
Test Case: 998 | Input/Output: [(45 0 -92 6) -92]
Test Case: 999 | Input/Output: [(31 -56 -21 77) -56]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = -31 34 -65 -127 -101 118 -32 38 40 -31 -32 -127 44 32 28 -76
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[58 63 58 58] 58] [[-34 -69 -34 -34] -69] [[-74 -86 -74 -74] -86] [[7 7 -12 7] -12] [[-87 41 -87 -87] -87] [[82 -68 82 82] -68] [[-100 -11 -11 -11] -100] [[-74 -74 53 -74] -74] [[-15 47 -15 -15] -15] [[-36 -36 -36 18] -36] [(37 37 37 37) 37] [(-12 -12 -12 -12) -12] [(40 40 40 40) 40] [(62 62 62 62) 62] [(-59 -59 -59 -59) -59] [(64 77 27 39) 27] [(99 60 43 21) 21] [(39 59 3 12) 3] [(34 62 65 67) 34] [(10 57 69 33) 10] [(77 8 92 67) 8] [(52 76 12 56) 12] [(54 97 56 97) 54] [(87 5 97 30) 5] [(64 93 57 73) 57] [(88 60 39 41) 39] [(85 44 30 77) 30] [(9 87 57 1) 1] [(20 35 4 33) 4] [(20 23 60 77) 20] [(34 18 92 10) 10] [(72 80 20 15) 15] [(96 86 54 32) 32] [(40 2 70 97) 2] [(12 46 52 94) 12] [(-92 33 -17 9) -92] [(-91 5 -71 37) -91] [(-64 11 -80 0) -80] [(-34 43 70 -55) -55] [(5 -41 -65 -79) -79] [(20 93 -71 -4) -71] [(-49 53 -13 -59) -59] [(11 -17 12 4) -17] [(61 -34 89 91) -34] [(36 -69 8 -3) -69] [(-63 -17 -15 -58) -63] [(-50 32 32 -25) -50] [(-21 -14 -67 -88) -88] [(20 67 -94 -38) -94] [(95 -86 -49 -21) -86] [(-49 9 -88 1) -88] [(87 -20 90 31) -20] [(-21 -79 27 -12) -79] [(-57 88 -46 41) -57] [(6 57 -26 -15) -26] [(18 89 -17 11) -17] [(2 35 20 23) 2] [(-50 60 -7 33) -50] [(-31 -80 59 -87) -87] [(-20 81 -84 25) -84] [(-10 29 2 71) -10] [(29 -42 47 -51) -51] [(67 96 -24 4) -24] [(68 -13 22 51) -13] [(83 -89 -17 81) -89] [(76 68 -37 -72) -72] [(-89 32 1 36) -89] [(80 -63 -98 63) -98] [(-35 -99 81 -23) -99] [(78 86 44 56) 44] [(94 -1 69 -78) -78] [(54 -98 32 -70) -98] [(-17 -6 0 -3) -17] [(-18 -44 -85 71) -85] [(-48 69 -58 -98) -98] [(-23 37 75 -14) -23] [(-23 -83 -52 -19) -83] [(70 -76 94 66) -76] [(-30 -39 19 -43) -43] [(-75 -47 62 8) -75] [(-63 -3 -54 -85) -85] [(-32 9 -71 -57) -71] [(-26 -81 -24 -70) -81] [(-93 42 5 -100) -100] [(66 84 11 -28) -28] [(-39 15 -8 5) -39] [(12 89 -5 1) -5] [(-53 -100 18 -69) -100] [(-28 -99 -57 -18) -99] [(-48 37 -50 29) -50] [(13 -53 -65 -39) -65] [(52 -91 99 -48) -91] [(15 -21 -93 79) -93] [(-23 -80 -94 -4) -94] [(-31 -15 39 -99) -99])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 58                  | Program output: 58                 
Correct output: -69                 | Program output: -34                
Correct output: -86                 | Program output: -74                
Correct output: -12                 | Program output: 7                  
Correct output: -87                 | Program output: -87                
Correct output: -68                 | Program output: 82                 
Correct output: -100                | Program output: -100               
Correct output: -74                 | Program output: -74                
Correct output: -15                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: 37                  | Program output: 37                 
Correct output: -12                 | Program output: -12                
Correct output: 40                  | Program output: 40                 
Correct output: 62                  | Program output: 62                 
Correct output: -59                 | Program output: -59                
Correct output: 27                  | Program output: 64                 
Correct output: 21                  | Program output: 99                 
Correct output: 3                   | Program output: 39                 
Correct output: 34                  | Program output: 34                 
Correct output: 10                  | Program output: 10                 
Correct output: 8                   | Program output: 77                 
Correct output: 12                  | Program output: 52                 
Correct output: 54                  | Program output: 54                 
Correct output: 5                   | Program output: 87                 
Correct output: 57                  | Program output: 64                 
Correct output: 39                  | Program output: 88                 
Correct output: 30                  | Program output: 85                 
Correct output: 1                   | Program output: 9                  
Correct output: 4                   | Program output: 20                 
Correct output: 20                  | Program output: 20                 
Correct output: 10                  | Program output: 34                 
Correct output: 15                  | Program output: 72                 
Correct output: 32                  | Program output: 96                 
Correct output: 2                   | Program output: 40                 
Correct output: 12                  | Program output: 12                 
Correct output: -92                 | Program output: -92                
Correct output: -91                 | Program output: -91                
Correct output: -80                 | Program output: -64                
Correct output: -55                 | Program output: -34                
Correct output: -79                 | Program output: 5                  
Correct output: -71                 | Program output: 20                 
Correct output: -59                 | Program output: -49                
Correct output: -17                 | Program output: 11                 
Correct output: -34                 | Program output: 61                 
Correct output: -69                 | Program output: 36                 
Correct output: -63                 | Program output: -63                
Correct output: -50                 | Program output: -50                
Correct output: -88                 | Program output: -21                
Correct output: -94                 | Program output: 20                 
Correct output: -86                 | Program output: 95                 
Correct output: -88                 | Program output: -49                
Correct output: -20                 | Program output: 87                 
Correct output: -79                 | Program output: -21                
Correct output: -57                 | Program output: -57                
Correct output: -26                 | Program output: 6                  
Correct output: -17                 | Program output: 18                 
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -50                
Correct output: -87                 | Program output: -31                
Correct output: -84                 | Program output: -20                
Correct output: -10                 | Program output: -10                
Correct output: -51                 | Program output: 29                 
Correct output: -24                 | Program output: 67                 
Correct output: -13                 | Program output: 68                 
Correct output: -89                 | Program output: 83                 
Correct output: -72                 | Program output: 76                 
Correct output: -89                 | Program output: -89                
Correct output: -98                 | Program output: 80                 
Correct output: -99                 | Program output: -35                
Correct output: 44                  | Program output: 78                 
Correct output: -78                 | Program output: 94                 
Correct output: -98                 | Program output: 54                 
Correct output: -17                 | Program output: -17                
Correct output: -85                 | Program output: -18                
Correct output: -98                 | Program output: -48                
Correct output: -23                 | Program output: -23                
Correct output: -83                 | Program output: -23                
Correct output: -76                 | Program output: 70                 
Correct output: -43                 | Program output: -30                
Correct output: -75                 | Program output: -75                
Correct output: -85                 | Program output: -63                
Correct output: -71                 | Program output: -32                
Correct output: -81                 | Program output: -26                
Correct output: -100                | Program output: -93                
Correct output: -28                 | Program output: 66                 
Correct output: -39                 | Program output: -39                
Correct output: -5                  | Program output: 12                 
Correct output: -100                | Program output: -53                
Correct output: -99                 | Program output: -28                
Correct output: -50                 | Program output: -48                
Correct output: -65                 | Program output: 13                 
Correct output: -91                 | Program output: 52                 
Correct output: -93                 | Program output: 15                 
Correct output: -94                 | Program output: -23                
Correct output: -99                 | Program output: -31                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_times} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Lexicase best program: (integer_yank boolean_or in2 integer_dup_times tag_boolean_409 boolean_pop boolean_or integer_dec integer_yank in1 exec_k (exec_noop print_integer boolean_dup_items exec_dup_items boolean_dup_times 92 integer_dec exec_k_when_autoconstructing (boolean_dup) (exec_do*range (integer_gt integer_gte integer_mult exec_do*range (exec_when (boolean_pop integer_div) boolean_xor)))) ())
Lexicase best errors: [1 0 1 0 0 1 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 37
Percent parens: 0.216
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_times} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Zero cases best program: (integer_yank boolean_or in2 integer_dup_times tag_boolean_409 boolean_pop boolean_or integer_dec integer_yank in1 exec_k (exec_noop print_integer boolean_dup_items exec_dup_items boolean_dup_times 92 integer_dec exec_k_when_autoconstructing (boolean_dup) (exec_do*range (integer_gt integer_gte integer_mult exec_do*range (exec_when (boolean_pop integer_div) boolean_xor)))) ())
Zero cases best errors: [1 0 1 0 0 1 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 37
Percent parens: 0.216
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 7 1 7 7 2 1 6 1 9)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (2 7 1 7 7 2 1 6 1 9)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yank} {:close 1, :instruction exec_yank} {:close 0, :instruction exec_swap} {:close 0, :instruction -74} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_mod} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction in1} {:close 0, :instruction exec_s} {:close 1, :instruction print_integer} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_dup} {:close 0, :instruction tag_integer_181} {:close 0, :instruction boolean_or} {:close 1, :instruction exec_do*while} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 1, :instruction exec_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_y} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_shove} {:close 0, :instruction tag_boolean_250} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_when} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_rot} {:close 0, :instruction tag_exec_270} {:close 0, :instruction exec_dup} {:close 1, :instruction in3} {:close 0, :instruction integer_inc} {:close 0, :instruction tagged_680} {:close 0, :instruction print_integer} {:close 1, :instruction integer_shove} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_shove} {:close 1, :instruction in3} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_pop} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction in4} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_while} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_flush} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_gt} {:close 1, :instruction in1} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_do*while} {:close 1, :instruction boolean_flush} {:close 1, :instruction tag_boolean_318} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_max} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_gte})
Best program: (boolean_yank exec_yank exec_swap (-74 exec_yank exec_stackdepth) (exec_noop) integer_inc integer_mod exec_stackdepth in1 exec_s (print_integer) (integer_dup_items) (exec_do*while (boolean_dup tag_integer_181 boolean_or exec_do*while () boolean_or in4 exec_swap () (boolean_pop exec_y (integer_stackdepth in4 integer_yankdup integer_pop boolean_shove tag_boolean_250 exec_empty exec_when (integer_stackdepth boolean_not integer_rot tag_exec_270 (exec_dup (in3) integer_inc tagged_680 print_integer integer_shove) integer_sub boolean_invert_second_then_and exec_yankdup integer_shove exec_noop integer_shove in3) exec_shove (exec_pop (exec_stackdepth) in4 boolean_yank) integer_lte integer_gt) exec_while (exec_empty exec_noop boolean_eq boolean_yank integer_inc) boolean_stackdepth integer_mult boolean_flush) integer_mod integer_gt in1) exec_dup_times (exec_do*while (boolean_or exec_noop exec_do*while (boolean_flush) tag_boolean_318) exec_rot (integer_gt boolean_dup_items integer_max exec_when (boolean_yankdup boolean_invert_second_then_and integer_gte)) () ())))
Errors: [1 0 1 0 0 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 83
Size: 107
Percent parens: 0.224
--- Population Statistics ---
Average total errors in population: 9.957
Median total errors in population: 10
Error averages by case: (0.998 0.993 0.999 0.993 0.993 0.998 0.999 0.994 0.999 0.991)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 48.668
Average program size in population (points): 67.127
Average percent parens in population: 0.277
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.261
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 501650
--- Timings ---
Current time: 1559593934875 milliseconds
Total Time:           2.0 seconds
Initialization:       0.1 seconds,  5.0%
Reproduction:         0.7 seconds, 34.6%
Fitness Testing:      1.2 seconds, 60.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 628
Test mean error for best: 0.62800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 58                  | Program output: 58                 
Correct output: -69                 | Program output: -34                
Correct output: -86                 | Program output: -74                
Correct output: -12                 | Program output: -12                
Correct output: -87                 | Program output: -87                
Correct output: -68                 | Program output: 82                 
Correct output: -100                | Program output: -11                
Correct output: -74                 | Program output: 53                 
Correct output: -15                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: 37                  | Program output: 37                 
Correct output: -12                 | Program output: -12                
Correct output: 40                  | Program output: 40                 
Correct output: 62                  | Program output: 62                 
Correct output: -59                 | Program output: -59                
Correct output: 27                  | Program output: 27                 
Correct output: 21                  | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 34                  | Program output: 65                 
Correct output: 10                  | Program output: 69                 
Correct output: 8                   | Program output: 92                 
Correct output: 12                  | Program output: 12                 
Correct output: 54                  | Program output: 56                 
Correct output: 5                   | Program output: 97                 
Correct output: 57                  | Program output: 57                 
Correct output: 39                  | Program output: 39                 
Correct output: 30                  | Program output: 30                 
Correct output: 1                   | Program output: 57                 
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 60                 
Correct output: 10                  | Program output: 92                 
Correct output: 15                  | Program output: 20                 
Correct output: 32                  | Program output: 54                 
Correct output: 2                   | Program output: 70                 
Correct output: 12                  | Program output: 52                 
Correct output: -92                 | Program output: -17                
Correct output: -91                 | Program output: -71                
Correct output: -80                 | Program output: -80                
Correct output: -55                 | Program output: 70                 
Correct output: -79                 | Program output: -65                
Correct output: -71                 | Program output: -71                
Correct output: -59                 | Program output: -13                
Correct output: -17                 | Program output: 12                 
Correct output: -34                 | Program output: 89                 
Correct output: -69                 | Program output: 8                  
Correct output: -63                 | Program output: -15                
Correct output: -50                 | Program output: 32                 
Correct output: -88                 | Program output: -67                
Correct output: -94                 | Program output: -94                
Correct output: -86                 | Program output: -49                
Correct output: -88                 | Program output: -88                
Correct output: -20                 | Program output: 90                 
Correct output: -79                 | Program output: 27                 
Correct output: -57                 | Program output: -46                
Correct output: -26                 | Program output: -26                
Correct output: -17                 | Program output: -17                
Correct output: 2                   | Program output: 20                 
Correct output: -50                 | Program output: -7                 
Correct output: -87                 | Program output: 59                 
Correct output: -84                 | Program output: -84                
Correct output: -10                 | Program output: 2                  
Correct output: -51                 | Program output: 47                 
Correct output: -24                 | Program output: -24                
Correct output: -13                 | Program output: 22                 
Correct output: -89                 | Program output: -17                
Correct output: -72                 | Program output: -37                
Correct output: -89                 | Program output: 1                  
Correct output: -98                 | Program output: -98                
Correct output: -99                 | Program output: 81                 
Correct output: 44                  | Program output: 44                 
Correct output: -78                 | Program output: 69                 
Correct output: -98                 | Program output: 32                 
Correct output: -17                 | Program output: 0                  
Correct output: -85                 | Program output: -85                
Correct output: -98                 | Program output: -58                
Correct output: -23                 | Program output: 75                 
Correct output: -83                 | Program output: -52                
Correct output: -76                 | Program output: 94                 
Correct output: -43                 | Program output: 19                 
Correct output: -75                 | Program output: 62                 
Correct output: -85                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -81                 | Program output: -24                
Correct output: -100                | Program output: 5                  
Correct output: -28                 | Program output: 11                 
Correct output: -39                 | Program output: -8                 
Correct output: -5                  | Program output: -5                 
Correct output: -100                | Program output: 18                 
Correct output: -99                 | Program output: -57                
Correct output: -50                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: 99                 
Correct output: -93                 | Program output: -93                
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: 39                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 0, :instruction exec_do*while} {:close 1, :instruction print_integer} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction boolean_swap} {:close 0, :instruction exec_while} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_when} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_s} {:close 1, :instruction 27} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_flush})
Lexicase best program: (in3 exec_do*range (exec_k (exec_do*while (print_integer) integer_inc boolean_invert_second_then_and boolean_flush exec_do*times (boolean_yankdup boolean_not exec_s_when_autoconstructing (boolean_swap) (exec_while (integer_stackdepth integer_swap integer_eq integer_yank) exec_k_when_autoconstructing (exec_noop exec_empty integer_dup_times boolean_invert_first_then_and integer_div boolean_dup_times) (exec_k (integer_stackdepth boolean_and exec_do*range () boolean_not) (integer_lt) boolean_swap exec_pop (boolean_or exec_when (exec_do*times (boolean_empty integer_yankdup integer_lt exec_do*times (exec_swap () (integer_sub exec_s (27) (exec_swap (exec_eq exec_pop (integer_swap exec_do*times (exec_do*times (boolean_flush)))) ()) ()))))))) ())) ()))
Lexicase best errors: [1 1 0 1 1 0 1 1 0 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 80
Percent parens: 0.363
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 0, :instruction exec_do*while} {:close 1, :instruction print_integer} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction boolean_swap} {:close 0, :instruction exec_while} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_when} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_s} {:close 1, :instruction 27} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_flush})
Zero cases best program: (in3 exec_do*range (exec_k (exec_do*while (print_integer) integer_inc boolean_invert_second_then_and boolean_flush exec_do*times (boolean_yankdup boolean_not exec_s_when_autoconstructing (boolean_swap) (exec_while (integer_stackdepth integer_swap integer_eq integer_yank) exec_k_when_autoconstructing (exec_noop exec_empty integer_dup_times boolean_invert_first_then_and integer_div boolean_dup_times) (exec_k (integer_stackdepth boolean_and exec_do*range () boolean_not) (integer_lt) boolean_swap exec_pop (boolean_or exec_when (exec_do*times (boolean_empty integer_yankdup integer_lt exec_do*times (exec_swap () (integer_sub exec_s (27) (exec_swap (exec_eq exec_pop (integer_swap exec_do*times (exec_do*times (boolean_flush)))) ()) ()))))))) ())) ()))
Zero cases best errors: [1 1 0 1 1 0 1 1 0 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 80
Percent parens: 0.363
--- Lexicase Population Statistics ---
Count of elite individuals by case: (172 301 98 88 172 655 88 171 98 98)
Population mean number of elite cases: 1.94
Count of perfect (error zero) individuals by case: (172 301 98 88 172 655 88 171 98 98)
Population mean number of perfect (error zero) cases: 1.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_k} {:close 0, :instruction exec_do*while} {:close 1, :instruction print_integer} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_div} {:close 0, :instruction exec_while} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_div} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_not} {:close 2, :instruction exec_dup} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_when} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction 27} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_s} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_flush})
Best program: (in3 exec_k (exec_do*while (print_integer) integer_yank integer_inc boolean_invert_second_then_and boolean_flush exec_do*times (boolean_swap boolean_yankdup boolean_not exec_s_when_autoconstructing (boolean_swap) (integer_div exec_while (integer_stackdepth integer_eq exec_dup_items integer_yank) exec_k_when_autoconstructing (exec_noop exec_empty integer_dup_times boolean_invert_first_then_and integer_div exec_k (exec_k_when_autoconstructing (integer_stackdepth boolean_and exec_do*range () boolean_not) (exec_dup ()) integer_lt) (integer_mult exec_pop (boolean_or integer_lte exec_when (exec_do*times (boolean_empty integer_max integer_lt exec_do*times (exec_swap () (integer_sub exec_s (exec_s_when_autoconstructing (27) (exec_swap (exec_eq exec_pop (integer_swap exec_s (exec_do*times (exec_do*times (boolean_flush))) () ())) ()) ()) () ()))))))) ()) ())) ())
Errors: [1 1 0 1 1 0 1 1 0 0]
Total: 6
Mean: 0.6
Genome size: 57
Size: 94
Percent parens: 0.394
--- Population Statistics ---
Average total errors in population: 8.059
Median total errors in population: 8
Error averages by case: (0.828 0.699 0.902 0.912 0.828 0.345 0.912 0.829 0.902 0.902)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 54.41
Average program size in population (points): 72.546
Average percent parens in population: 0.239
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 15
Genome diversity (% unique genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.005
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.152
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1000142
--- Timings ---
Current time: 1559593936975 milliseconds
Total Time:           5.2 seconds
Initialization:       0.1 seconds,  2.0%
Reproduction:         1.9 seconds, 36.4%
Fitness Testing:      1.9 seconds, 36.4%
Report:               1.3 seconds, 25.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 421
Test mean error for best: 0.42100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 58                  | Program output: 58                 
Correct output: -69                 | Program output: -69                
Correct output: -86                 | Program output: -86                
Correct output: -12                 | Program output: 7                  
Correct output: -87                 | Program output: -87                
Correct output: -68                 | Program output: -68                
Correct output: -100                | Program output: -100               
Correct output: -74                 | Program output: -74                
Correct output: -15                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: 37                  | Program output: 37                 
Correct output: -12                 | Program output: -12                
Correct output: 40                  | Program output: 40                 
Correct output: 62                  | Program output: 62                 
Correct output: -59                 | Program output: -59                
Correct output: 27                  | Program output: 64                 
Correct output: 21                  | Program output: 60                 
Correct output: 3                   | Program output: 39                 
Correct output: 34                  | Program output: 34                 
Correct output: 10                  | Program output: 10                 
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 52                 
Correct output: 54                  | Program output: 54                 
Correct output: 5                   | Program output: 5                  
Correct output: 57                  | Program output: 64                 
Correct output: 39                  | Program output: 60                 
Correct output: 30                  | Program output: 44                 
Correct output: 1                   | Program output: 9                  
Correct output: 4                   | Program output: 20                 
Correct output: 20                  | Program output: 20                 
Correct output: 10                  | Program output: 18                 
Correct output: 15                  | Program output: 72                 
Correct output: 32                  | Program output: 86                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: -92                 | Program output: -92                
Correct output: -91                 | Program output: -91                
Correct output: -80                 | Program output: -64                
Correct output: -55                 | Program output: -34                
Correct output: -79                 | Program output: -41                
Correct output: -71                 | Program output: 20                 
Correct output: -59                 | Program output: -49                
Correct output: -17                 | Program output: -17                
Correct output: -34                 | Program output: -34                
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -50                 | Program output: -50                
Correct output: -88                 | Program output: -21                
Correct output: -94                 | Program output: 20                 
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -49                
Correct output: -20                 | Program output: -20                
Correct output: -79                 | Program output: -79                
Correct output: -57                 | Program output: -57                
Correct output: -26                 | Program output: 6                  
Correct output: -17                 | Program output: 18                 
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -50                
Correct output: -87                 | Program output: -80                
Correct output: -84                 | Program output: -20                
Correct output: -10                 | Program output: -10                
Correct output: -51                 | Program output: -42                
Correct output: -24                 | Program output: 67                 
Correct output: -13                 | Program output: -13                
Correct output: -89                 | Program output: -89                
Correct output: -72                 | Program output: 68                 
Correct output: -89                 | Program output: -89                
Correct output: -98                 | Program output: -63                
Correct output: -99                 | Program output: -99                
Correct output: 44                  | Program output: 78                 
Correct output: -78                 | Program output: -1                 
Correct output: -98                 | Program output: -98                
Correct output: -17                 | Program output: -17                
Correct output: -85                 | Program output: -44                
Correct output: -98                 | Program output: -48                
Correct output: -23                 | Program output: -23                
Correct output: -83                 | Program output: -83                
Correct output: -76                 | Program output: -76                
Correct output: -43                 | Program output: -39                
Correct output: -75                 | Program output: -75                
Correct output: -85                 | Program output: -63                
Correct output: -71                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -100                | Program output: -93                
Correct output: -28                 | Program output: 66                 
Correct output: -39                 | Program output: -39                
Correct output: -5                  | Program output: 12                 
Correct output: -100                | Program output: -100               
Correct output: -99                 | Program output: -99                
Correct output: -50                 | Program output: -48                
Correct output: -65                 | Program output: -53                
Correct output: -91                 | Program output: -91                
Correct output: -93                 | Program output: -21                
Correct output: -94                 | Program output: -80                
Correct output: -99                 | Program output: -31                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_times} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 1, :instruction 45} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_when} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Lexicase best program: (integer_yank boolean_or in2 integer_dup_times tag_boolean_409 boolean_pop boolean_or boolean_stackdepth exec_y_when_autoconstructing () integer_yank in1 exec_k (exec_noop integer_min print_integer integer_swap boolean_dup_items exec_dup_items 45) (integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gt integer_gte exec_do*range (exec_when (integer_div) boolean_xor))))
Lexicase best errors: [0 0 0 0 1 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 36
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_times} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 1, :instruction 45} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_when} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Zero cases best program: (integer_yank boolean_or in2 integer_dup_times tag_boolean_409 boolean_pop boolean_or boolean_stackdepth exec_y_when_autoconstructing () integer_yank in1 exec_k (exec_noop integer_min print_integer integer_swap boolean_dup_items exec_dup_items 45) (integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gt integer_gte exec_do*range (exec_when (integer_div) boolean_xor))))
Zero cases best errors: [0 0 0 0 1 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 36
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (159 159 219 158 244 157 242 241 219 432)
Population mean number of elite cases: 2.23
Count of perfect (error zero) individuals by case: (159 159 219 158 244 157 242 241 219 432)
Population mean number of perfect (error zero) cases: 2.23
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_times} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 1, :instruction 45} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_pop} {:close 0, :instruction tag_exec_209} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Best program: (integer_yank boolean_or boolean_invert_second_then_and in2 integer_dup_times tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank in1 exec_k (exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 92 45) (integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gt integer_gte integer_mult exec_do*range (exec_when (boolean_pop tag_exec_209 (integer_div) boolean_xor)))))
Errors: [0 0 0 0 1 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 33
Size: 41
Percent parens: 0.195
--- Population Statistics ---
Average total errors in population: 7.77
Median total errors in population: 10
Error averages by case: (0.841 0.841 0.781 0.842 0.756 0.843 0.758 0.759 0.781 0.568)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 45.249
Average program size in population (points): 63.493
Average percent parens in population: 0.267
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.008
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.096
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1307836
--- Timings ---
Current time: 1559593938914 milliseconds
Total Time:           7.2 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         3.2 seconds, 44.8%
Fitness Testing:      2.3 seconds, 31.8%
Report:               1.6 seconds, 21.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 429
Test mean error for best: 0.42900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 58                  | Program output: 58                 
Correct output: -69                 | Program output: -34                
Correct output: -86                 | Program output: -74                
Correct output: -12                 | Program output: -12                
Correct output: -87                 | Program output: -87                
Correct output: -68                 | Program output: 82                 
Correct output: -100                | Program output: -11                
Correct output: -74                 | Program output: -74                
Correct output: -15                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: 37                  | Program output: 37                 
Correct output: -12                 | Program output: -12                
Correct output: 40                  | Program output: 40                 
Correct output: 62                  | Program output: 62                 
Correct output: -59                 | Program output: -59                
Correct output: 27                  | Program output: 27                 
Correct output: 21                  | Program output: 21                 
Correct output: 3                   | Program output: 3                  
Correct output: 34                  | Program output: 65                 
Correct output: 10                  | Program output: 33                 
Correct output: 8                   | Program output: 67                 
Correct output: 12                  | Program output: 12                 
Correct output: 54                  | Program output: 56                 
Correct output: 5                   | Program output: 30                 
Correct output: 57                  | Program output: 57                 
Correct output: 39                  | Program output: 39                 
Correct output: 30                  | Program output: 30                 
Correct output: 1                   | Program output: 1                  
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 60                 
Correct output: 10                  | Program output: 10                 
Correct output: 15                  | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 2                   | Program output: 70                 
Correct output: 12                  | Program output: 52                 
Correct output: -92                 | Program output: -17                
Correct output: -91                 | Program output: -71                
Correct output: -80                 | Program output: -80                
Correct output: -55                 | Program output: -55                
Correct output: -79                 | Program output: -79                
Correct output: -71                 | Program output: -71                
Correct output: -59                 | Program output: -59                
Correct output: -17                 | Program output: 4                  
Correct output: -34                 | Program output: 89                 
Correct output: -69                 | Program output: -3                 
Correct output: -63                 | Program output: -58                
Correct output: -50                 | Program output: -25                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -86                 | Program output: -49                
Correct output: -88                 | Program output: -88                
Correct output: -20                 | Program output: 31                 
Correct output: -79                 | Program output: -12                
Correct output: -57                 | Program output: -46                
Correct output: -26                 | Program output: -26                
Correct output: -17                 | Program output: -17                
Correct output: 2                   | Program output: 20                 
Correct output: -50                 | Program output: -7                 
Correct output: -87                 | Program output: -87                
Correct output: -84                 | Program output: -84                
Correct output: -10                 | Program output: 2                  
Correct output: -51                 | Program output: -51                
Correct output: -24                 | Program output: -24                
Correct output: -13                 | Program output: 22                 
Correct output: -89                 | Program output: -17                
Correct output: -72                 | Program output: -72                
Correct output: -89                 | Program output: 1                  
Correct output: -98                 | Program output: -98                
Correct output: -99                 | Program output: -23                
Correct output: 44                  | Program output: 44                 
Correct output: -78                 | Program output: -78                
Correct output: -98                 | Program output: -70                
Correct output: -17                 | Program output: -3                 
Correct output: -85                 | Program output: -85                
Correct output: -98                 | Program output: -98                
Correct output: -23                 | Program output: -14                
Correct output: -83                 | Program output: -52                
Correct output: -76                 | Program output: 66                 
Correct output: -43                 | Program output: -43                
Correct output: -75                 | Program output: 8                  
Correct output: -85                 | Program output: -85                
Correct output: -71                 | Program output: -71                
Correct output: -81                 | Program output: -70                
Correct output: -100                | Program output: -100               
Correct output: -28                 | Program output: -28                
Correct output: -39                 | Program output: -8                 
Correct output: -5                  | Program output: -5                 
Correct output: -100                | Program output: -69                
Correct output: -99                 | Program output: -57                
Correct output: -50                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -48                
Correct output: -93                 | Program output: -93                
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: -99                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_sub})
Lexicase best program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or integer_dec integer_yank in1 exec_k (in4 in3 exec_noop integer_min print_integer exec_dup_items boolean_dup_times 92 integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gte integer_mult exec_do*range (boolean_pop integer_div) boolean_xor integer_sub)) ())
Lexicase best errors: [0 1 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 33
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_sub})
Zero cases best program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or integer_dec integer_yank in1 exec_k (in4 in3 exec_noop integer_min print_integer exec_dup_items boolean_dup_times 92 integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gte integer_mult exec_do*range (boolean_pop integer_div) boolean_xor integer_sub)) ())
Zero cases best errors: [0 1 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 33
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 321 601 2 679 254 2 553 243 253)
Population mean number of elite cases: 2.91
Count of perfect (error zero) individuals by case: (3 321 601 2 679 254 2 553 243 253)
Population mean number of perfect (error zero) cases: 2.91
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_sub})
Best program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or integer_dec integer_yank in1 exec_k (in4 in3 exec_noop integer_min print_integer exec_dup_items boolean_dup_times 92 integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gte integer_mult exec_do*range (boolean_pop integer_div) boolean_xor integer_sub)) ())
Errors: [0 1 0 0 0 0 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 27
Size: 33
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 7.089
Median total errors in population: 6
Error averages by case: (0.997 0.679 0.399 0.998 0.321 0.746 0.998 0.447 0.757 0.747)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 30.903
Average program size in population (points): 38.511
Average percent parens in population: 0.196
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.009
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.153
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1628001
--- Timings ---
Current time: 1559593940648 milliseconds
Total Time:           8.9 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         4.4 seconds, 49.4%
Fitness Testing:      2.6 seconds, 29.4%
Report:               1.8 seconds, 20.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 189
Test mean error for best: 0.18900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 58                  | Program output: 58                 
Correct output: -69                 | Program output: -69                
Correct output: -86                 | Program output: -86                
Correct output: -12                 | Program output: -12                
Correct output: -87                 | Program output: -87                
Correct output: -68                 | Program output: -68                
Correct output: -100                | Program output: -100               
Correct output: -74                 | Program output: -74                
Correct output: -15                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: 37                  | Program output: 37                 
Correct output: -12                 | Program output: -12                
Correct output: 40                  | Program output: 40                 
Correct output: 62                  | Program output: 62                 
Correct output: -59                 | Program output: -59                
Correct output: 27                  | Program output: 27                 
Correct output: 21                  | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 34                  | Program output: 34                 
Correct output: 10                  | Program output: 10                 
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 12                 
Correct output: 54                  | Program output: 54                 
Correct output: 5                   | Program output: 5                  
Correct output: 57                  | Program output: 57                 
Correct output: 39                  | Program output: 39                 
Correct output: 30                  | Program output: 30                 
Correct output: 1                   | Program output: 9                  
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 20                 
Correct output: 10                  | Program output: 18                 
Correct output: 15                  | Program output: 20                 
Correct output: 32                  | Program output: 54                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: -92                 | Program output: -92                
Correct output: -91                 | Program output: -91                
Correct output: -80                 | Program output: -80                
Correct output: -55                 | Program output: -34                
Correct output: -79                 | Program output: -65                
Correct output: -71                 | Program output: -71                
Correct output: -59                 | Program output: -49                
Correct output: -17                 | Program output: -17                
Correct output: -34                 | Program output: -34                
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -50                 | Program output: -50                
Correct output: -88                 | Program output: -67                
Correct output: -94                 | Program output: -94                
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -88                
Correct output: -20                 | Program output: -20                
Correct output: -79                 | Program output: -79                
Correct output: -57                 | Program output: -57                
Correct output: -26                 | Program output: -26                
Correct output: -17                 | Program output: -17                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -50                
Correct output: -87                 | Program output: -80                
Correct output: -84                 | Program output: -84                
Correct output: -10                 | Program output: -10                
Correct output: -51                 | Program output: -42                
Correct output: -24                 | Program output: -24                
Correct output: -13                 | Program output: -13                
Correct output: -89                 | Program output: -89                
Correct output: -72                 | Program output: -37                
Correct output: -89                 | Program output: -89                
Correct output: -98                 | Program output: -98                
Correct output: -99                 | Program output: -99                
Correct output: 44                  | Program output: 44                 
Correct output: -78                 | Program output: -1                 
Correct output: -98                 | Program output: -98                
Correct output: -17                 | Program output: -17                
Correct output: -85                 | Program output: -85                
Correct output: -98                 | Program output: -58                
Correct output: -23                 | Program output: -23                
Correct output: -83                 | Program output: -83                
Correct output: -76                 | Program output: -76                
Correct output: -43                 | Program output: -39                
Correct output: -75                 | Program output: -75                
Correct output: -85                 | Program output: -63                
Correct output: -71                 | Program output: -71                
Correct output: -81                 | Program output: -81                
Correct output: -100                | Program output: -93                
Correct output: -28                 | Program output: 11                 
Correct output: -39                 | Program output: -39                
Correct output: -5                  | Program output: -5                 
Correct output: -100                | Program output: -100               
Correct output: -99                 | Program output: -99                
Correct output: -50                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -93                 | Program output: -93                
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: -31                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_k} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 1, :instruction 45} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_xor})
Lexicase best program: (boolean_flush boolean_or in2 tag_boolean_409 boolean_eq boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min exec_k (in3 integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 92 45) (integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gt integer_gte exec_s (integer_mult exec_when (boolean_pop integer_div) exec_do*while (boolean_xor)) () ())))
Lexicase best errors: [0 0 0 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 44
Percent parens: 0.227
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_k} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 1, :instruction 45} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_xor})
Zero cases best program: (boolean_flush boolean_or in2 tag_boolean_409 boolean_eq boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min exec_k (in3 integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 92 45) (integer_dec exec_k_when_autoconstructing (boolean_dup) (integer_gt integer_gte exec_s (integer_mult exec_when (boolean_pop integer_div) exec_do*while (boolean_xor)) () ())))
Zero cases best errors: [0 0 0 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 44
Percent parens: 0.227
--- Lexicase Population Statistics ---
Count of elite individuals by case: (485 640 469 116 168 319 366 426 364 651)
Population mean number of elite cases: 4.00
Count of perfect (error zero) individuals by case: (485 640 469 116 168 319 366 426 364 651)
Population mean number of perfect (error zero) cases: 4.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_k} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction 92} {:close 1, :instruction 45} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Best program: (boolean_flush boolean_or in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min exec_k (in3 exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 92 45) (integer_dec exec_k_when_autoconstructing (exec_s (integer_gt integer_gte exec_s (integer_mult exec_y_when_autoconstructing () exec_when (boolean_pop integer_div) boolean_xor) () ()) () ()) ()))
Errors: [0 0 0 0 0 0 0 0 1 0]
Total: 1
Mean: 0.1
Genome size: 34
Size: 47
Percent parens: 0.277
--- Population Statistics ---
Average total errors in population: 5.996
Median total errors in population: 5
Error averages by case: (0.515 0.36 0.531 0.884 0.832 0.681 0.634 0.574 0.636 0.349)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 29.765
Average program size in population (points): 37.271
Average percent parens in population: 0.199
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.01
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.197
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2005825
--- Timings ---
Current time: 1559593942424 milliseconds
Total Time:          10.7 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.6 seconds, 52.0%
Fitness Testing:      3.0 seconds, 28.2%
Report:               2.0 seconds, 18.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 58                  | Program output: 58                 
Correct output: -69                 | Program output: -69                
Correct output: -86                 | Program output: -86                
Correct output: -12                 | Program output: -12                
Correct output: -87                 | Program output: -87                
Correct output: -68                 | Program output: -68                
Correct output: -100                | Program output: -100               
Correct output: -74                 | Program output: -74                
Correct output: -15                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: 37                  | Program output: 37                 
Correct output: -12                 | Program output: -12                
Correct output: 40                  | Program output: 40                 
Correct output: 62                  | Program output: 62                 
Correct output: -59                 | Program output: -59                
Correct output: 27                  | Program output: 27                 
Correct output: 21                  | Program output: 21                 
Correct output: 3                   | Program output: 3                  
Correct output: 34                  | Program output: 34                 
Correct output: 10                  | Program output: 10                 
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 12                 
Correct output: 54                  | Program output: 54                 
Correct output: 5                   | Program output: 5                  
Correct output: 57                  | Program output: 57                 
Correct output: 39                  | Program output: 39                 
Correct output: 30                  | Program output: 30                 
Correct output: 1                   | Program output: 1                  
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 20                 
Correct output: 10                  | Program output: 10                 
Correct output: 15                  | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: -92                 | Program output: -92                
Correct output: -91                 | Program output: -91                
Correct output: -80                 | Program output: -80                
Correct output: -55                 | Program output: -55                
Correct output: -79                 | Program output: -79                
Correct output: -71                 | Program output: -71                
Correct output: -59                 | Program output: -59                
Correct output: -17                 | Program output: -17                
Correct output: -34                 | Program output: -34                
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -50                 | Program output: -50                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -88                
Correct output: -20                 | Program output: -20                
Correct output: -79                 | Program output: -79                
Correct output: -57                 | Program output: -57                
Correct output: -26                 | Program output: -26                
Correct output: -17                 | Program output: -17                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -50                
Correct output: -87                 | Program output: -87                
Correct output: -84                 | Program output: -84                
Correct output: -10                 | Program output: -10                
Correct output: -51                 | Program output: -51                
Correct output: -24                 | Program output: -24                
Correct output: -13                 | Program output: -13                
Correct output: -89                 | Program output: -89                
Correct output: -72                 | Program output: -72                
Correct output: -89                 | Program output: -89                
Correct output: -98                 | Program output: -98                
Correct output: -99                 | Program output: -99                
Correct output: 44                  | Program output: 44                 
Correct output: -78                 | Program output: -78                
Correct output: -98                 | Program output: -98                
Correct output: -17                 | Program output: -17                
Correct output: -85                 | Program output: -85                
Correct output: -98                 | Program output: -98                
Correct output: -23                 | Program output: -23                
Correct output: -83                 | Program output: -83                
Correct output: -76                 | Program output: -76                
Correct output: -43                 | Program output: -43                
Correct output: -75                 | Program output: -75                
Correct output: -85                 | Program output: -85                
Correct output: -71                 | Program output: -71                
Correct output: -81                 | Program output: -81                
Correct output: -100                | Program output: -100               
Correct output: -28                 | Program output: -28                
Correct output: -39                 | Program output: -39                
Correct output: -5                  | Program output: -5                 
Correct output: -100                | Program output: -100               
Correct output: -99                 | Program output: -99                
Correct output: -50                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -93                 | Program output: -93                
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: -99                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction exec_k} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction 45} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_when} {:close 0, :instruction tagged_41} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Lexicase best program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 42
Percent parens: 0.238
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction exec_k} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction 45} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_when} {:close 0, :instruction tagged_41} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Zero cases best program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 42
Percent parens: 0.238
--- Lexicase Population Statistics ---
Count of elite individuals by case: (563 532 265 569 549 548 476 320 706 549)
Population mean number of elite cases: 5.08
Count of perfect (error zero) individuals by case: (563 532 265 569 549 548 476 320 706 549)
Population mean number of perfect (error zero) cases: 5.08
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction in2} {:close 0, :instruction tag_boolean_409} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_swap} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction exec_k} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction 45} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_when} {:close 0, :instruction tagged_41} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor})
Best program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 32
Size: 42
Percent parens: 0.238
--- Population Statistics ---
Average total errors in population: 4.923
Median total errors in population: 4
Error averages by case: (0.437 0.468 0.735 0.431 0.451 0.452 0.524 0.68 0.294 0.451)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 32.225
Average program size in population (points): 41.103
Average percent parens in population: 0.213
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.011
Error (vector) diversity:			 0.058
Behavioral diversity:				 0.195
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2557234
--- Timings ---
Current time: 1559593944325 milliseconds
Total Time:          12.6 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         6.7 seconds, 53.5%
Fitness Testing:      3.6 seconds, 28.2%
Report:               2.2 seconds, 17.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 5
Successful program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 42


Auto-simplifying with starting size: 42
step: 0
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 500
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 1000
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 1500
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 2000
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 2500
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 3000
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 3500
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 4000
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 4500
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 5000
program: (boolean_flush in2 tag_boolean_409 boolean_pop boolean_or boolean_stackdepth integer_dec integer_yank boolean_swap in1 integer_min in4 exec_k (in3 integer_min exec_noop integer_min print_integer boolean_dup_items exec_dup_items boolean_dup_times 45) (exec_k_when_autoconstructing (boolean_dup) (integer_gt exec_dup_times (exec_s (integer_mult exec_when (tagged_41 integer_div) boolean_xor) () ()))))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 58                  | Program output: 58                 
Correct output: -69                 | Program output: -69                
Correct output: -86                 | Program output: -86                
Correct output: -12                 | Program output: -12                
Correct output: -87                 | Program output: -87                
Correct output: -68                 | Program output: -68                
Correct output: -100                | Program output: -100               
Correct output: -74                 | Program output: -74                
Correct output: -15                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: 37                  | Program output: 37                 
Correct output: -12                 | Program output: -12                
Correct output: 40                  | Program output: 40                 
Correct output: 62                  | Program output: 62                 
Correct output: -59                 | Program output: -59                
Correct output: 27                  | Program output: 27                 
Correct output: 21                  | Program output: 21                 
Correct output: 3                   | Program output: 3                  
Correct output: 34                  | Program output: 34                 
Correct output: 10                  | Program output: 10                 
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 12                 
Correct output: 54                  | Program output: 54                 
Correct output: 5                   | Program output: 5                  
Correct output: 57                  | Program output: 57                 
Correct output: 39                  | Program output: 39                 
Correct output: 30                  | Program output: 30                 
Correct output: 1                   | Program output: 1                  
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 20                 
Correct output: 10                  | Program output: 10                 
Correct output: 15                  | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: -92                 | Program output: -92                
Correct output: -91                 | Program output: -91                
Correct output: -80                 | Program output: -80                
Correct output: -55                 | Program output: -55                
Correct output: -79                 | Program output: -79                
Correct output: -71                 | Program output: -71                
Correct output: -59                 | Program output: -59                
Correct output: -17                 | Program output: -17                
Correct output: -34                 | Program output: -34                
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -50                 | Program output: -50                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -88                
Correct output: -20                 | Program output: -20                
Correct output: -79                 | Program output: -79                
Correct output: -57                 | Program output: -57                
Correct output: -26                 | Program output: -26                
Correct output: -17                 | Program output: -17                
Correct output: 2                   | Program output: 2                  
Correct output: -50                 | Program output: -50                
Correct output: -87                 | Program output: -87                
Correct output: -84                 | Program output: -84                
Correct output: -10                 | Program output: -10                
Correct output: -51                 | Program output: -51                
Correct output: -24                 | Program output: -24                
Correct output: -13                 | Program output: -13                
Correct output: -89                 | Program output: -89                
Correct output: -72                 | Program output: -72                
Correct output: -89                 | Program output: -89                
Correct output: -98                 | Program output: -98                
Correct output: -99                 | Program output: -99                
Correct output: 44                  | Program output: 44                 
Correct output: -78                 | Program output: -78                
Correct output: -98                 | Program output: -98                
Correct output: -17                 | Program output: -17                
Correct output: -85                 | Program output: -85                
Correct output: -98                 | Program output: -98                
Correct output: -23                 | Program output: -23                
Correct output: -83                 | Program output: -83                
Correct output: -76                 | Program output: -76                
Correct output: -43                 | Program output: -43                
Correct output: -75                 | Program output: -75                
Correct output: -85                 | Program output: -85                
Correct output: -71                 | Program output: -71                
Correct output: -81                 | Program output: -81                
Correct output: -100                | Program output: -100               
Correct output: -28                 | Program output: -28                
Correct output: -39                 | Program output: -39                
Correct output: -5                  | Program output: -5                 
Correct output: -100                | Program output: -100               
Correct output: -99                 | Program output: -99                
Correct output: -50                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -93                 | Program output: -93                
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: -99                
;;******************************
