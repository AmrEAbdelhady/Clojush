Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[26 -92 -92 -92] -92] [[-3 47 -3 -3] -3] [[28 28 35 28] 28] [[27 -48 -48 -48] -48] [[38 38 38 22] 22] [[-13 76 76 76] -13] [[84 84 84 -25] -25] [[-77 -77 45 -77] -77] [[8 61 8 8] 8] [[-29 -29 -29 56] -29] [(38 38 38 38) 38] [(59 59 59 59) 59] [(93 93 93 93) 93] [(26 26 26 26) 26] [(-10 -10 -10 -10) -10] [(100 83 49 69) 49] [(100 72 89 17) 17] [(85 46 34 82) 34] [(48 17 100 21) 17] [(91 44 97 84) 44] [(60 22 36 36) 22] [(46 9 32 61) 9] [(65 69 60 80) 60] [(60 97 86 38) 38] [(29 96 2 97) 2] [(37 2 41 49) 2] [(91 5 1 34) 1] [(63 31 70 9) 9] [(21 35 93 6) 6] [(46 67 75 82) 46] [(48 52 50 72) 48] [(20 44 68 46) 20] [(53 76 18 15) 15] [(100 47 15 28) 15] [(84 2 20 60) 2] [(-9 -88 -41 -47) -88] [(50 55 -63 8) -63] [(50 -89 27 62) -89] [(41 -32 -67 -96) -96] [(-98 0 7 23) -98] [(-32 -20 38 -89) -89] [(94 -95 -95 -99) -99] [(19 -77 56 31) -77] [(-20 -40 -22 -77) -77] [(11 81 -71 24) -71] [(-14 -47 -62 -70) -70] [(-39 54 38 -31) -39] [(76 50 68 88) 50] [(-75 -80 -63 97) -80] [(-65 56 8 -51) -65] [(-28 27 98 -73) -73] [(85 54 36 -92) -92] [(-57 -19 -90 -68) -90] [(-2 18 -70 -36) -70] [(-87 -37 54 16) -87] [(-50 80 -1 -38) -50] [(-66 -100 30 10) -100] [(23 16 73 -98) -98] [(22 -78 -28 54) -78] [(36 63 6 -80) -80] [(35 48 -8 16) -8] [(86 16 91 38) 16] [(90 54 53 52) 52] [(82 30 1 67) 1] [(-81 -95 -28 -78) -95] [(-84 72 -50 -98) -98] [(-1 -14 -8 99) -14] [(-41 -11 -73 41) -73] [(84 -10 38 -88) -88] [(9 -41 88 -32) -41] [(-48 -6 -39 16) -48] [(-56 12 16 -37) -56] [(-64 -52 -8 -62) -64] [(85 -57 8 -3) -57] [(-14 -61 -14 31) -61] [(29 -32 36 -15) -32] [(-30 -53 -15 64) -53] [(24 53 -44 19) -44] [(67 49 -80 100) -80] [(-51 -5 61 30) -51] [(98 -90 49 91) -90] [(-82 -92 33 -86) -92] [(44 -45 -25 79) -45] [(-31 34 -32 -36) -36] [(17 -2 -16 39) -16] [(28 81 97 -25) -25] [(-74 -11 85 70) -74] [(39 48 46 80) 39] [(-25 54 -41 76) -41] [(68 4 80 13) 4] [(-14 11 83 34) -14] [(-66 63 -54 45) -66] [(-42 0 -20 -91) -91] [(-7 -47 -35 -2) -47] [(-17 12 -97 73) -97])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[26 -92 -92 -92] -92]
Train Case:   6 | Input/Output: [[-3 47 -3 -3] -3]
Train Case:   7 | Input/Output: [[28 28 35 28] 28]
Train Case:   8 | Input/Output: [[27 -48 -48 -48] -48]
Train Case:   9 | Input/Output: [[38 38 38 22] 22]
Train Case:  10 | Input/Output: [[-13 76 76 76] -13]
Train Case:  11 | Input/Output: [[84 84 84 -25] -25]
Train Case:  12 | Input/Output: [[-77 -77 45 -77] -77]
Train Case:  13 | Input/Output: [[8 61 8 8] 8]
Train Case:  14 | Input/Output: [[-29 -29 -29 56] -29]
Train Case:  15 | Input/Output: [(38 38 38 38) 38]
Train Case:  16 | Input/Output: [(59 59 59 59) 59]
Train Case:  17 | Input/Output: [(93 93 93 93) 93]
Train Case:  18 | Input/Output: [(26 26 26 26) 26]
Train Case:  19 | Input/Output: [(-10 -10 -10 -10) -10]
Train Case:  20 | Input/Output: [(100 83 49 69) 49]
Train Case:  21 | Input/Output: [(100 72 89 17) 17]
Train Case:  22 | Input/Output: [(85 46 34 82) 34]
Train Case:  23 | Input/Output: [(48 17 100 21) 17]
Train Case:  24 | Input/Output: [(91 44 97 84) 44]
Train Case:  25 | Input/Output: [(60 22 36 36) 22]
Train Case:  26 | Input/Output: [(46 9 32 61) 9]
Train Case:  27 | Input/Output: [(65 69 60 80) 60]
Train Case:  28 | Input/Output: [(60 97 86 38) 38]
Train Case:  29 | Input/Output: [(29 96 2 97) 2]
Train Case:  30 | Input/Output: [(37 2 41 49) 2]
Train Case:  31 | Input/Output: [(91 5 1 34) 1]
Train Case:  32 | Input/Output: [(63 31 70 9) 9]
Train Case:  33 | Input/Output: [(21 35 93 6) 6]
Train Case:  34 | Input/Output: [(46 67 75 82) 46]
Train Case:  35 | Input/Output: [(48 52 50 72) 48]
Train Case:  36 | Input/Output: [(20 44 68 46) 20]
Train Case:  37 | Input/Output: [(53 76 18 15) 15]
Train Case:  38 | Input/Output: [(100 47 15 28) 15]
Train Case:  39 | Input/Output: [(84 2 20 60) 2]
Train Case:  40 | Input/Output: [(-9 -88 -41 -47) -88]
Train Case:  41 | Input/Output: [(50 55 -63 8) -63]
Train Case:  42 | Input/Output: [(50 -89 27 62) -89]
Train Case:  43 | Input/Output: [(41 -32 -67 -96) -96]
Train Case:  44 | Input/Output: [(-98 0 7 23) -98]
Train Case:  45 | Input/Output: [(-32 -20 38 -89) -89]
Train Case:  46 | Input/Output: [(94 -95 -95 -99) -99]
Train Case:  47 | Input/Output: [(19 -77 56 31) -77]
Train Case:  48 | Input/Output: [(-20 -40 -22 -77) -77]
Train Case:  49 | Input/Output: [(11 81 -71 24) -71]
Train Case:  50 | Input/Output: [(-14 -47 -62 -70) -70]
Train Case:  51 | Input/Output: [(-39 54 38 -31) -39]
Train Case:  52 | Input/Output: [(76 50 68 88) 50]
Train Case:  53 | Input/Output: [(-75 -80 -63 97) -80]
Train Case:  54 | Input/Output: [(-65 56 8 -51) -65]
Train Case:  55 | Input/Output: [(-28 27 98 -73) -73]
Train Case:  56 | Input/Output: [(85 54 36 -92) -92]
Train Case:  57 | Input/Output: [(-57 -19 -90 -68) -90]
Train Case:  58 | Input/Output: [(-2 18 -70 -36) -70]
Train Case:  59 | Input/Output: [(-87 -37 54 16) -87]
Train Case:  60 | Input/Output: [(-50 80 -1 -38) -50]
Train Case:  61 | Input/Output: [(-66 -100 30 10) -100]
Train Case:  62 | Input/Output: [(23 16 73 -98) -98]
Train Case:  63 | Input/Output: [(22 -78 -28 54) -78]
Train Case:  64 | Input/Output: [(36 63 6 -80) -80]
Train Case:  65 | Input/Output: [(35 48 -8 16) -8]
Train Case:  66 | Input/Output: [(86 16 91 38) 16]
Train Case:  67 | Input/Output: [(90 54 53 52) 52]
Train Case:  68 | Input/Output: [(82 30 1 67) 1]
Train Case:  69 | Input/Output: [(-81 -95 -28 -78) -95]
Train Case:  70 | Input/Output: [(-84 72 -50 -98) -98]
Train Case:  71 | Input/Output: [(-1 -14 -8 99) -14]
Train Case:  72 | Input/Output: [(-41 -11 -73 41) -73]
Train Case:  73 | Input/Output: [(84 -10 38 -88) -88]
Train Case:  74 | Input/Output: [(9 -41 88 -32) -41]
Train Case:  75 | Input/Output: [(-48 -6 -39 16) -48]
Train Case:  76 | Input/Output: [(-56 12 16 -37) -56]
Train Case:  77 | Input/Output: [(-64 -52 -8 -62) -64]
Train Case:  78 | Input/Output: [(85 -57 8 -3) -57]
Train Case:  79 | Input/Output: [(-14 -61 -14 31) -61]
Train Case:  80 | Input/Output: [(29 -32 36 -15) -32]
Train Case:  81 | Input/Output: [(-30 -53 -15 64) -53]
Train Case:  82 | Input/Output: [(24 53 -44 19) -44]
Train Case:  83 | Input/Output: [(67 49 -80 100) -80]
Train Case:  84 | Input/Output: [(-51 -5 61 30) -51]
Train Case:  85 | Input/Output: [(98 -90 49 91) -90]
Train Case:  86 | Input/Output: [(-82 -92 33 -86) -92]
Train Case:  87 | Input/Output: [(44 -45 -25 79) -45]
Train Case:  88 | Input/Output: [(-31 34 -32 -36) -36]
Train Case:  89 | Input/Output: [(17 -2 -16 39) -16]
Train Case:  90 | Input/Output: [(28 81 97 -25) -25]
Train Case:  91 | Input/Output: [(-74 -11 85 70) -74]
Train Case:  92 | Input/Output: [(39 48 46 80) 39]
Train Case:  93 | Input/Output: [(-25 54 -41 76) -41]
Train Case:  94 | Input/Output: [(68 4 80 13) 4]
Train Case:  95 | Input/Output: [(-14 11 83 34) -14]
Train Case:  96 | Input/Output: [(-66 63 -54 45) -66]
Train Case:  97 | Input/Output: [(-42 0 -20 -91) -91]
Train Case:  98 | Input/Output: [(-7 -47 -35 -2) -47]
Train Case:  99 | Input/Output: [(-17 12 -97 73) -97]
Test Case:   0 | Input/Output: [[-25 -54 -54 -54] -54]
Test Case:   1 | Input/Output: [[-42 -53 -53 -53] -53]
Test Case:   2 | Input/Output: [[14 14 35 14] 14]
Test Case:   3 | Input/Output: [[6 6 6 -10] -10]
Test Case:   4 | Input/Output: [[24 -20 24 24] -20]
Test Case:   5 | Input/Output: [[-100 -100 -19 -100] -100]
Test Case:   6 | Input/Output: [[-80 -42 -80 -80] -80]
Test Case:   7 | Input/Output: [[39 39 -37 39] -37]
Test Case:   8 | Input/Output: [[28 28 69 28] 28]
Test Case:   9 | Input/Output: [[16 16 -32 16] -32]
Test Case:  10 | Input/Output: [[-32 0 -32 -32] -32]
Test Case:  11 | Input/Output: [[30 86 86 86] 30]
Test Case:  12 | Input/Output: [[-57 -57 -51 -57] -57]
Test Case:  13 | Input/Output: [[72 -28 -28 -28] -28]
Test Case:  14 | Input/Output: [[49 49 49 87] 49]
Test Case:  15 | Input/Output: [[-87 58 58 58] -87]
Test Case:  16 | Input/Output: [[27 -76 -76 -76] -76]
Test Case:  17 | Input/Output: [[-11 67 67 67] -11]
Test Case:  18 | Input/Output: [[-22 -22 -82 -22] -82]
Test Case:  19 | Input/Output: [[42 42 42 72] 42]
Test Case:  20 | Input/Output: [[-96 -67 -67 -67] -96]
Test Case:  21 | Input/Output: [[93 18 18 18] 18]
Test Case:  22 | Input/Output: [[-9 -63 -63 -63] -63]
Test Case:  23 | Input/Output: [[-95 -31 -95 -95] -95]
Test Case:  24 | Input/Output: [[-98 43 -98 -98] -98]
Test Case:  25 | Input/Output: [[28 -28 -28 -28] -28]
Test Case:  26 | Input/Output: [[-88 9 -88 -88] -88]
Test Case:  27 | Input/Output: [[9 9 9 -83] -83]
Test Case:  28 | Input/Output: [[-71 -12 -12 -12] -71]
Test Case:  29 | Input/Output: [[78 30 30 30] 30]
Test Case:  30 | Input/Output: [[-98 -98 -98 45] -98]
Test Case:  31 | Input/Output: [[12 80 80 80] 12]
Test Case:  32 | Input/Output: [[-88 -88 -24 -88] -88]
Test Case:  33 | Input/Output: [[78 -16 78 78] -16]
Test Case:  34 | Input/Output: [[12 -9 -9 -9] -9]
Test Case:  35 | Input/Output: [[27 27 27 34] 27]
Test Case:  36 | Input/Output: [[1 1 1 42] 1]
Test Case:  37 | Input/Output: [[2 2 -18 2] -18]
Test Case:  38 | Input/Output: [[-4 -4 -28 -4] -28]
Test Case:  39 | Input/Output: [[3 -52 -52 -52] -52]
Test Case:  40 | Input/Output: [[-90 -90 -90 90] -90]
Test Case:  41 | Input/Output: [[72 72 28 72] 28]
Test Case:  42 | Input/Output: [[-25 -13 -25 -25] -25]
Test Case:  43 | Input/Output: [[45 45 45 -97] -97]
Test Case:  44 | Input/Output: [[-82 -82 -82 19] -82]
Test Case:  45 | Input/Output: [[-40 -42 -40 -40] -42]
Test Case:  46 | Input/Output: [[100 -92 -92 -92] -92]
Test Case:  47 | Input/Output: [[19 19 19 -7] -7]
Test Case:  48 | Input/Output: [[-50 -50 -37 -50] -50]
Test Case:  49 | Input/Output: [[71 87 71 71] 71]
Test Case:  50 | Input/Output: [[82 82 3 82] 3]
Test Case:  51 | Input/Output: [[44 66 44 44] 44]
Test Case:  52 | Input/Output: [[-40 17 -40 -40] -40]
Test Case:  53 | Input/Output: [[-22 -10 -22 -22] -22]
Test Case:  54 | Input/Output: [[26 23 23 23] 23]
Test Case:  55 | Input/Output: [[-33 17 -33 -33] -33]
Test Case:  56 | Input/Output: [[-85 40 40 40] -85]
Test Case:  57 | Input/Output: [[99 99 84 99] 84]
Test Case:  58 | Input/Output: [[-14 -14 -14 53] -14]
Test Case:  59 | Input/Output: [[-57 -57 -25 -57] -57]
Test Case:  60 | Input/Output: [[14 14 14 -89] -89]
Test Case:  61 | Input/Output: [[-9 60 -9 -9] -9]
Test Case:  62 | Input/Output: [[33 -19 33 33] -19]
Test Case:  63 | Input/Output: [[-12 -95 -12 -12] -95]
Test Case:  64 | Input/Output: [[-26 57 -26 -26] -26]
Test Case:  65 | Input/Output: [[-66 -66 -66 -82] -82]
Test Case:  66 | Input/Output: [[21 77 77 77] 21]
Test Case:  67 | Input/Output: [[27 27 67 27] 27]
Test Case:  68 | Input/Output: [[-65 -9 -65 -65] -65]
Test Case:  69 | Input/Output: [[-87 -81 -87 -87] -87]
Test Case:  70 | Input/Output: [[-97 -97 -97 -3] -97]
Test Case:  71 | Input/Output: [[-97 -79 -79 -79] -97]
Test Case:  72 | Input/Output: [[-90 -90 -90 25] -90]
Test Case:  73 | Input/Output: [[57 57 73 57] 57]
Test Case:  74 | Input/Output: [[19 19 -31 19] -31]
Test Case:  75 | Input/Output: [[-74 -74 -74 -24] -74]
Test Case:  76 | Input/Output: [[-28 -28 -28 30] -28]
Test Case:  77 | Input/Output: [[-46 -46 -52 -46] -52]
Test Case:  78 | Input/Output: [[5 5 5 -96] -96]
Test Case:  79 | Input/Output: [[-5 -97 -5 -5] -97]
Test Case:  80 | Input/Output: [[-31 -31 -31 22] -31]
Test Case:  81 | Input/Output: [[-97 -97 -97 7] -97]
Test Case:  82 | Input/Output: [[28 28 -88 28] -88]
Test Case:  83 | Input/Output: [[52 -76 -76 -76] -76]
Test Case:  84 | Input/Output: [[33 -74 -74 -74] -74]
Test Case:  85 | Input/Output: [[65 65 42 65] 42]
Test Case:  86 | Input/Output: [[47 28 28 28] 28]
Test Case:  87 | Input/Output: [[-93 -3 -93 -93] -93]
Test Case:  88 | Input/Output: [[36 -84 36 36] -84]
Test Case:  89 | Input/Output: [[77 -45 -45 -45] -45]
Test Case:  90 | Input/Output: [[-10 -10 -10 90] -10]
Test Case:  91 | Input/Output: [[-12 -12 -12 -88] -88]
Test Case:  92 | Input/Output: [[-62 -62 -62 84] -62]
Test Case:  93 | Input/Output: [[94 94 94 -79] -79]
Test Case:  94 | Input/Output: [[18 -81 18 18] -81]
Test Case:  95 | Input/Output: [[-74 -74 -74 -85] -85]
Test Case:  96 | Input/Output: [[-9 -9 -9 -100] -100]
Test Case:  97 | Input/Output: [[57 21 21 21] 21]
Test Case:  98 | Input/Output: [[98 -17 -17 -17] -17]
Test Case:  99 | Input/Output: [[-15 -15 -4 -15] -15]
Test Case: 100 | Input/Output: [(55 55 55 55) 55]
Test Case: 101 | Input/Output: [(98 98 98 98) 98]
Test Case: 102 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 103 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 104 | Input/Output: [(96 96 96 96) 96]
Test Case: 105 | Input/Output: [(17 17 17 17) 17]
Test Case: 106 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 107 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 108 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 109 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 110 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 111 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 112 | Input/Output: [(88 88 88 88) 88]
Test Case: 113 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 114 | Input/Output: [(96 96 96 96) 96]
Test Case: 115 | Input/Output: [(88 88 88 88) 88]
Test Case: 116 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 117 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 118 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 119 | Input/Output: [(82 82 82 82) 82]
Test Case: 120 | Input/Output: [(13 13 13 13) 13]
Test Case: 121 | Input/Output: [(4 4 4 4) 4]
Test Case: 122 | Input/Output: [(7 7 7 7) 7]
Test Case: 123 | Input/Output: [(90 90 90 90) 90]
Test Case: 124 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 125 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 126 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 127 | Input/Output: [(98 98 98 98) 98]
Test Case: 128 | Input/Output: [(72 72 72 72) 72]
Test Case: 129 | Input/Output: [(70 70 70 70) 70]
Test Case: 130 | Input/Output: [(86 86 86 86) 86]
Test Case: 131 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 132 | Input/Output: [(59 59 59 59) 59]
Test Case: 133 | Input/Output: [(18 18 18 18) 18]
Test Case: 134 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 135 | Input/Output: [(9 9 9 9) 9]
Test Case: 136 | Input/Output: [(47 47 47 47) 47]
Test Case: 137 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 138 | Input/Output: [(65 65 65 65) 65]
Test Case: 139 | Input/Output: [(56 56 56 56) 56]
Test Case: 140 | Input/Output: [(15 15 15 15) 15]
Test Case: 141 | Input/Output: [(86 86 86 86) 86]
Test Case: 142 | Input/Output: [(25 25 25 25) 25]
Test Case: 143 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 144 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 145 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 146 | Input/Output: [(33 33 33 33) 33]
Test Case: 147 | Input/Output: [(25 25 25 25) 25]
Test Case: 148 | Input/Output: [(67 67 67 67) 67]
Test Case: 149 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 150 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 151 | Input/Output: [(84 84 84 84) 84]
Test Case: 152 | Input/Output: [(9 9 9 9) 9]
Test Case: 153 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 154 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 155 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 156 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 157 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 158 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 159 | Input/Output: [(28 28 28 28) 28]
Test Case: 160 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 161 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 162 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 163 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 164 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 165 | Input/Output: [(77 77 77 77) 77]
Test Case: 166 | Input/Output: [(53 53 53 53) 53]
Test Case: 167 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 168 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 169 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 170 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 171 | Input/Output: [(62 62 62 62) 62]
Test Case: 172 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 173 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 174 | Input/Output: [(44 44 44 44) 44]
Test Case: 175 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 176 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 177 | Input/Output: [(59 59 59 59) 59]
Test Case: 178 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 179 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 180 | Input/Output: [(24 24 24 24) 24]
Test Case: 181 | Input/Output: [(70 70 70 70) 70]
Test Case: 182 | Input/Output: [(82 82 82 82) 82]
Test Case: 183 | Input/Output: [(66 66 66 66) 66]
Test Case: 184 | Input/Output: [(83 83 83 83) 83]
Test Case: 185 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 186 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 187 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 188 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 189 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 190 | Input/Output: [(41 41 41 41) 41]
Test Case: 191 | Input/Output: [(65 65 65 65) 65]
Test Case: 192 | Input/Output: [(52 52 52 52) 52]
Test Case: 193 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 194 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 195 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 196 | Input/Output: [(67 67 67 67) 67]
Test Case: 197 | Input/Output: [(66 66 66 66) 66]
Test Case: 198 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 199 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 200 | Input/Output: [(62 67 75 61) 61]
Test Case: 201 | Input/Output: [(43 94 61 98) 43]
Test Case: 202 | Input/Output: [(33 59 91 19) 19]
Test Case: 203 | Input/Output: [(98 67 98 94) 67]
Test Case: 204 | Input/Output: [(40 2 71 73) 2]
Test Case: 205 | Input/Output: [(74 76 64 54) 54]
Test Case: 206 | Input/Output: [(35 47 56 78) 35]
Test Case: 207 | Input/Output: [(62 60 32 3) 3]
Test Case: 208 | Input/Output: [(58 98 41 21) 21]
Test Case: 209 | Input/Output: [(91 13 12 14) 12]
Test Case: 210 | Input/Output: [(83 23 97 92) 23]
Test Case: 211 | Input/Output: [(40 21 77 96) 21]
Test Case: 212 | Input/Output: [(16 50 45 58) 16]
Test Case: 213 | Input/Output: [(23 49 2 71) 2]
Test Case: 214 | Input/Output: [(0 24 75 52) 0]
Test Case: 215 | Input/Output: [(82 17 22 97) 17]
Test Case: 216 | Input/Output: [(18 2 20 81) 2]
Test Case: 217 | Input/Output: [(100 23 74 24) 23]
Test Case: 218 | Input/Output: [(38 96 9 35) 9]
Test Case: 219 | Input/Output: [(44 43 11 66) 11]
Test Case: 220 | Input/Output: [(6 50 83 13) 6]
Test Case: 221 | Input/Output: [(69 13 81 26) 13]
Test Case: 222 | Input/Output: [(54 15 23 86) 15]
Test Case: 223 | Input/Output: [(23 83 89 40) 23]
Test Case: 224 | Input/Output: [(8 65 36 93) 8]
Test Case: 225 | Input/Output: [(83 83 59 48) 48]
Test Case: 226 | Input/Output: [(90 7 60 4) 4]
Test Case: 227 | Input/Output: [(31 49 40 89) 31]
Test Case: 228 | Input/Output: [(96 98 49 77) 49]
Test Case: 229 | Input/Output: [(31 9 55 42) 9]
Test Case: 230 | Input/Output: [(26 29 51 0) 0]
Test Case: 231 | Input/Output: [(54 47 99 44) 44]
Test Case: 232 | Input/Output: [(64 62 32 25) 25]
Test Case: 233 | Input/Output: [(40 89 99 71) 40]
Test Case: 234 | Input/Output: [(60 15 38 16) 15]
Test Case: 235 | Input/Output: [(74 61 41 19) 19]
Test Case: 236 | Input/Output: [(84 56 55 40) 40]
Test Case: 237 | Input/Output: [(28 44 75 39) 28]
Test Case: 238 | Input/Output: [(52 3 37 77) 3]
Test Case: 239 | Input/Output: [(78 72 31 10) 10]
Test Case: 240 | Input/Output: [(49 84 97 86) 49]
Test Case: 241 | Input/Output: [(90 0 78 93) 0]
Test Case: 242 | Input/Output: [(42 34 100 67) 34]
Test Case: 243 | Input/Output: [(89 3 8 82) 3]
Test Case: 244 | Input/Output: [(93 79 72 2) 2]
Test Case: 245 | Input/Output: [(26 86 74 49) 26]
Test Case: 246 | Input/Output: [(82 2 34 74) 2]
Test Case: 247 | Input/Output: [(69 81 65 78) 65]
Test Case: 248 | Input/Output: [(17 59 66 89) 17]
Test Case: 249 | Input/Output: [(75 86 24 61) 24]
Test Case: 250 | Input/Output: [(0 23 55 11) 0]
Test Case: 251 | Input/Output: [(26 10 29 18) 10]
Test Case: 252 | Input/Output: [(72 54 89 9) 9]
Test Case: 253 | Input/Output: [(56 41 5 71) 5]
Test Case: 254 | Input/Output: [(36 95 100 75) 36]
Test Case: 255 | Input/Output: [(1 5 100 27) 1]
Test Case: 256 | Input/Output: [(49 71 67 100) 49]
Test Case: 257 | Input/Output: [(3 91 36 26) 3]
Test Case: 258 | Input/Output: [(19 52 30 42) 19]
Test Case: 259 | Input/Output: [(26 15 78 17) 15]
Test Case: 260 | Input/Output: [(24 39 14 49) 14]
Test Case: 261 | Input/Output: [(32 10 63 71) 10]
Test Case: 262 | Input/Output: [(56 81 67 89) 56]
Test Case: 263 | Input/Output: [(29 46 13 82) 13]
Test Case: 264 | Input/Output: [(96 67 80 100) 67]
Test Case: 265 | Input/Output: [(86 69 27 11) 11]
Test Case: 266 | Input/Output: [(31 77 37 86) 31]
Test Case: 267 | Input/Output: [(89 4 23 65) 4]
Test Case: 268 | Input/Output: [(95 54 11 12) 11]
Test Case: 269 | Input/Output: [(37 78 96 25) 25]
Test Case: 270 | Input/Output: [(34 85 97 36) 34]
Test Case: 271 | Input/Output: [(1 23 83 6) 1]
Test Case: 272 | Input/Output: [(4 3 30 83) 3]
Test Case: 273 | Input/Output: [(12 56 1 79) 1]
Test Case: 274 | Input/Output: [(53 18 20 35) 18]
Test Case: 275 | Input/Output: [(52 93 98 17) 17]
Test Case: 276 | Input/Output: [(36 77 97 38) 36]
Test Case: 277 | Input/Output: [(76 86 58 24) 24]
Test Case: 278 | Input/Output: [(55 72 21 88) 21]
Test Case: 279 | Input/Output: [(89 38 15 3) 3]
Test Case: 280 | Input/Output: [(18 99 10 82) 10]
Test Case: 281 | Input/Output: [(30 4 70 77) 4]
Test Case: 282 | Input/Output: [(75 83 9 29) 9]
Test Case: 283 | Input/Output: [(63 89 38 0) 0]
Test Case: 284 | Input/Output: [(11 89 61 100) 11]
Test Case: 285 | Input/Output: [(97 77 30 56) 30]
Test Case: 286 | Input/Output: [(33 39 66 4) 4]
Test Case: 287 | Input/Output: [(62 61 42 17) 17]
Test Case: 288 | Input/Output: [(43 26 46 57) 26]
Test Case: 289 | Input/Output: [(75 26 25 31) 25]
Test Case: 290 | Input/Output: [(14 41 39 73) 14]
Test Case: 291 | Input/Output: [(41 18 64 20) 18]
Test Case: 292 | Input/Output: [(0 11 13 7) 0]
Test Case: 293 | Input/Output: [(66 76 89 1) 1]
Test Case: 294 | Input/Output: [(84 73 33 34) 33]
Test Case: 295 | Input/Output: [(59 19 88 48) 19]
Test Case: 296 | Input/Output: [(88 73 86 4) 4]
Test Case: 297 | Input/Output: [(64 79 22 28) 22]
Test Case: 298 | Input/Output: [(26 54 34 36) 26]
Test Case: 299 | Input/Output: [(91 67 67 53) 53]
Test Case: 300 | Input/Output: [(0 36 52 47) 0]
Test Case: 301 | Input/Output: [(62 6 41 29) 6]
Test Case: 302 | Input/Output: [(92 32 66 50) 32]
Test Case: 303 | Input/Output: [(56 5 34 66) 5]
Test Case: 304 | Input/Output: [(59 72 54 100) 54]
Test Case: 305 | Input/Output: [(63 73 25 72) 25]
Test Case: 306 | Input/Output: [(100 4 10 91) 4]
Test Case: 307 | Input/Output: [(7 7 50 61) 7]
Test Case: 308 | Input/Output: [(68 37 0 64) 0]
Test Case: 309 | Input/Output: [(72 7 63 76) 7]
Test Case: 310 | Input/Output: [(14 5 54 65) 5]
Test Case: 311 | Input/Output: [(22 9 72 85) 9]
Test Case: 312 | Input/Output: [(13 86 64 77) 13]
Test Case: 313 | Input/Output: [(36 29 47 83) 29]
Test Case: 314 | Input/Output: [(67 49 18 34) 18]
Test Case: 315 | Input/Output: [(53 17 3 18) 3]
Test Case: 316 | Input/Output: [(82 53 7 27) 7]
Test Case: 317 | Input/Output: [(48 26 67 44) 26]
Test Case: 318 | Input/Output: [(71 52 49 57) 49]
Test Case: 319 | Input/Output: [(33 25 26 6) 6]
Test Case: 320 | Input/Output: [(92 69 67 48) 48]
Test Case: 321 | Input/Output: [(9 47 54 47) 9]
Test Case: 322 | Input/Output: [(12 42 80 55) 12]
Test Case: 323 | Input/Output: [(39 61 89 14) 14]
Test Case: 324 | Input/Output: [(44 46 6 79) 6]
Test Case: 325 | Input/Output: [(63 66 6 71) 6]
Test Case: 326 | Input/Output: [(38 36 55 83) 36]
Test Case: 327 | Input/Output: [(10 75 39 88) 10]
Test Case: 328 | Input/Output: [(97 88 99 41) 41]
Test Case: 329 | Input/Output: [(51 40 63 57) 40]
Test Case: 330 | Input/Output: [(78 46 49 2) 2]
Test Case: 331 | Input/Output: [(47 14 99 91) 14]
Test Case: 332 | Input/Output: [(44 88 93 33) 33]
Test Case: 333 | Input/Output: [(21 7 78 1) 1]
Test Case: 334 | Input/Output: [(39 92 19 59) 19]
Test Case: 335 | Input/Output: [(19 87 42 63) 19]
Test Case: 336 | Input/Output: [(37 27 32 25) 25]
Test Case: 337 | Input/Output: [(3 28 40 9) 3]
Test Case: 338 | Input/Output: [(85 75 45 65) 45]
Test Case: 339 | Input/Output: [(94 42 8 17) 8]
Test Case: 340 | Input/Output: [(31 82 3 19) 3]
Test Case: 341 | Input/Output: [(100 68 64 16) 16]
Test Case: 342 | Input/Output: [(60 53 96 94) 53]
Test Case: 343 | Input/Output: [(36 9 75 91) 9]
Test Case: 344 | Input/Output: [(55 71 82 91) 55]
Test Case: 345 | Input/Output: [(23 82 73 21) 21]
Test Case: 346 | Input/Output: [(4 57 12 74) 4]
Test Case: 347 | Input/Output: [(17 69 93 15) 15]
Test Case: 348 | Input/Output: [(71 11 61 35) 11]
Test Case: 349 | Input/Output: [(25 33 84 43) 25]
Test Case: 350 | Input/Output: [(46 90 5 52) 5]
Test Case: 351 | Input/Output: [(2 56 27 76) 2]
Test Case: 352 | Input/Output: [(11 82 57 55) 11]
Test Case: 353 | Input/Output: [(24 84 32 91) 24]
Test Case: 354 | Input/Output: [(73 95 19 53) 19]
Test Case: 355 | Input/Output: [(53 72 44 31) 31]
Test Case: 356 | Input/Output: [(11 14 17 56) 11]
Test Case: 357 | Input/Output: [(41 69 53 21) 21]
Test Case: 358 | Input/Output: [(79 54 29 76) 29]
Test Case: 359 | Input/Output: [(48 35 6 20) 6]
Test Case: 360 | Input/Output: [(43 16 63 11) 11]
Test Case: 361 | Input/Output: [(81 55 74 68) 55]
Test Case: 362 | Input/Output: [(88 64 24 88) 24]
Test Case: 363 | Input/Output: [(28 93 11 50) 11]
Test Case: 364 | Input/Output: [(13 17 16 60) 13]
Test Case: 365 | Input/Output: [(55 21 25 83) 21]
Test Case: 366 | Input/Output: [(0 38 46 38) 0]
Test Case: 367 | Input/Output: [(72 72 17 43) 17]
Test Case: 368 | Input/Output: [(5 29 80 97) 5]
Test Case: 369 | Input/Output: [(56 56 14 11) 11]
Test Case: 370 | Input/Output: [(40 83 72 46) 40]
Test Case: 371 | Input/Output: [(53 71 49 76) 49]
Test Case: 372 | Input/Output: [(72 2 50 39) 2]
Test Case: 373 | Input/Output: [(57 45 33 41) 33]
Test Case: 374 | Input/Output: [(59 27 16 41) 16]
Test Case: 375 | Input/Output: [(98 55 18 84) 18]
Test Case: 376 | Input/Output: [(23 55 51 13) 13]
Test Case: 377 | Input/Output: [(29 64 88 36) 29]
Test Case: 378 | Input/Output: [(17 98 35 57) 17]
Test Case: 379 | Input/Output: [(74 68 95 4) 4]
Test Case: 380 | Input/Output: [(84 89 17 3) 3]
Test Case: 381 | Input/Output: [(82 67 92 75) 67]
Test Case: 382 | Input/Output: [(97 40 90 46) 40]
Test Case: 383 | Input/Output: [(30 6 50 91) 6]
Test Case: 384 | Input/Output: [(50 43 90 31) 31]
Test Case: 385 | Input/Output: [(36 32 48 23) 23]
Test Case: 386 | Input/Output: [(17 11 54 32) 11]
Test Case: 387 | Input/Output: [(33 74 85 58) 33]
Test Case: 388 | Input/Output: [(15 46 27 51) 15]
Test Case: 389 | Input/Output: [(19 77 69 91) 19]
Test Case: 390 | Input/Output: [(12 68 65 40) 12]
Test Case: 391 | Input/Output: [(9 55 74 29) 9]
Test Case: 392 | Input/Output: [(74 26 71 85) 26]
Test Case: 393 | Input/Output: [(54 100 78 42) 42]
Test Case: 394 | Input/Output: [(11 82 64 51) 11]
Test Case: 395 | Input/Output: [(96 31 54 57) 31]
Test Case: 396 | Input/Output: [(73 31 25 71) 25]
Test Case: 397 | Input/Output: [(45 29 34 79) 29]
Test Case: 398 | Input/Output: [(16 2 45 68) 2]
Test Case: 399 | Input/Output: [(8 24 47 20) 8]
Test Case: 400 | Input/Output: [(-92 35 -91 -13) -92]
Test Case: 401 | Input/Output: [(79 11 -95 -65) -95]
Test Case: 402 | Input/Output: [(88 -5 97 86) -5]
Test Case: 403 | Input/Output: [(-73 67 0 -27) -73]
Test Case: 404 | Input/Output: [(78 93 17 85) 17]
Test Case: 405 | Input/Output: [(77 100 96 52) 52]
Test Case: 406 | Input/Output: [(-20 -51 16 51) -51]
Test Case: 407 | Input/Output: [(-66 -97 -5 -22) -97]
Test Case: 408 | Input/Output: [(24 25 -90 25) -90]
Test Case: 409 | Input/Output: [(-13 96 61 -86) -86]
Test Case: 410 | Input/Output: [(95 -48 19 44) -48]
Test Case: 411 | Input/Output: [(76 -89 10 80) -89]
Test Case: 412 | Input/Output: [(-22 42 100 3) -22]
Test Case: 413 | Input/Output: [(-70 31 -32 50) -70]
Test Case: 414 | Input/Output: [(65 -33 -89 -17) -89]
Test Case: 415 | Input/Output: [(94 -51 62 -77) -77]
Test Case: 416 | Input/Output: [(-44 -86 69 15) -86]
Test Case: 417 | Input/Output: [(3 -29 79 75) -29]
Test Case: 418 | Input/Output: [(18 -21 -57 10) -57]
Test Case: 419 | Input/Output: [(-38 -23 19 -22) -38]
Test Case: 420 | Input/Output: [(77 -7 87 11) -7]
Test Case: 421 | Input/Output: [(-34 100 43 -67) -67]
Test Case: 422 | Input/Output: [(65 10 37 48) 10]
Test Case: 423 | Input/Output: [(-53 0 48 -14) -53]
Test Case: 424 | Input/Output: [(45 -50 51 -13) -50]
Test Case: 425 | Input/Output: [(61 44 -68 -15) -68]
Test Case: 426 | Input/Output: [(36 22 74 -20) -20]
Test Case: 427 | Input/Output: [(-9 95 55 -18) -18]
Test Case: 428 | Input/Output: [(42 -38 -15 41) -38]
Test Case: 429 | Input/Output: [(69 90 -65 24) -65]
Test Case: 430 | Input/Output: [(-11 24 -36 -61) -61]
Test Case: 431 | Input/Output: [(16 -21 73 -43) -43]
Test Case: 432 | Input/Output: [(-62 -56 4 -73) -73]
Test Case: 433 | Input/Output: [(-32 8 67 -54) -54]
Test Case: 434 | Input/Output: [(-82 -8 -39 -64) -82]
Test Case: 435 | Input/Output: [(-41 45 49 28) -41]
Test Case: 436 | Input/Output: [(-51 -62 2 39) -62]
Test Case: 437 | Input/Output: [(-97 33 -61 10) -97]
Test Case: 438 | Input/Output: [(81 43 23 -46) -46]
Test Case: 439 | Input/Output: [(-42 36 79 -97) -97]
Test Case: 440 | Input/Output: [(25 62 51 98) 25]
Test Case: 441 | Input/Output: [(3 77 -30 -32) -32]
Test Case: 442 | Input/Output: [(-62 91 58 13) -62]
Test Case: 443 | Input/Output: [(-89 74 89 3) -89]
Test Case: 444 | Input/Output: [(86 27 -50 100) -50]
Test Case: 445 | Input/Output: [(85 -73 -88 -49) -88]
Test Case: 446 | Input/Output: [(4 2 -21 -34) -34]
Test Case: 447 | Input/Output: [(39 92 -42 -78) -78]
Test Case: 448 | Input/Output: [(40 -70 20 -10) -70]
Test Case: 449 | Input/Output: [(31 -11 98 53) -11]
Test Case: 450 | Input/Output: [(-98 81 73 26) -98]
Test Case: 451 | Input/Output: [(73 55 17 -22) -22]
Test Case: 452 | Input/Output: [(-10 99 -76 -45) -76]
Test Case: 453 | Input/Output: [(-83 22 22 5) -83]
Test Case: 454 | Input/Output: [(-42 100 35 38) -42]
Test Case: 455 | Input/Output: [(-33 -17 -92 47) -92]
Test Case: 456 | Input/Output: [(-99 67 0 85) -99]
Test Case: 457 | Input/Output: [(-12 -17 -79 3) -79]
Test Case: 458 | Input/Output: [(11 97 -52 -51) -52]
Test Case: 459 | Input/Output: [(-59 7 -11 -11) -59]
Test Case: 460 | Input/Output: [(-73 57 -64 -79) -79]
Test Case: 461 | Input/Output: [(-94 67 -94 69) -94]
Test Case: 462 | Input/Output: [(66 63 61 91) 61]
Test Case: 463 | Input/Output: [(-56 24 88 65) -56]
Test Case: 464 | Input/Output: [(19 45 -100 73) -100]
Test Case: 465 | Input/Output: [(-74 23 -46 -25) -74]
Test Case: 466 | Input/Output: [(-25 75 -37 75) -37]
Test Case: 467 | Input/Output: [(-25 -6 -28 -27) -28]
Test Case: 468 | Input/Output: [(16 -43 -3 -12) -43]
Test Case: 469 | Input/Output: [(6 67 6 -60) -60]
Test Case: 470 | Input/Output: [(-70 -64 -34 89) -70]
Test Case: 471 | Input/Output: [(59 -8 -4 -63) -63]
Test Case: 472 | Input/Output: [(29 15 4 20) 4]
Test Case: 473 | Input/Output: [(-83 -60 -35 23) -83]
Test Case: 474 | Input/Output: [(24 46 95 96) 24]
Test Case: 475 | Input/Output: [(92 -7 -1 -67) -67]
Test Case: 476 | Input/Output: [(-70 -91 60 -50) -91]
Test Case: 477 | Input/Output: [(0 92 22 25) 0]
Test Case: 478 | Input/Output: [(90 -11 -26 -25) -26]
Test Case: 479 | Input/Output: [(-57 72 -54 54) -57]
Test Case: 480 | Input/Output: [(17 -58 -67 -88) -88]
Test Case: 481 | Input/Output: [(29 -92 45 90) -92]
Test Case: 482 | Input/Output: [(81 81 40 -59) -59]
Test Case: 483 | Input/Output: [(42 54 8 45) 8]
Test Case: 484 | Input/Output: [(46 -47 -28 19) -47]
Test Case: 485 | Input/Output: [(-40 32 40 -59) -59]
Test Case: 486 | Input/Output: [(-87 10 -42 51) -87]
Test Case: 487 | Input/Output: [(-5 80 -39 -34) -39]
Test Case: 488 | Input/Output: [(32 4 -87 84) -87]
Test Case: 489 | Input/Output: [(-88 49 -38 -83) -88]
Test Case: 490 | Input/Output: [(12 -85 -2 -61) -85]
Test Case: 491 | Input/Output: [(89 -51 -25 -96) -96]
Test Case: 492 | Input/Output: [(-75 -94 17 -1) -94]
Test Case: 493 | Input/Output: [(-4 27 92 -83) -83]
Test Case: 494 | Input/Output: [(48 -78 -40 -33) -78]
Test Case: 495 | Input/Output: [(21 -6 -91 99) -91]
Test Case: 496 | Input/Output: [(44 -27 54 33) -27]
Test Case: 497 | Input/Output: [(95 9 58 -66) -66]
Test Case: 498 | Input/Output: [(27 -36 46 -15) -36]
Test Case: 499 | Input/Output: [(89 -43 48 -51) -51]
Test Case: 500 | Input/Output: [(68 15 -11 22) -11]
Test Case: 501 | Input/Output: [(-77 66 -9 -42) -77]
Test Case: 502 | Input/Output: [(39 25 -15 55) -15]
Test Case: 503 | Input/Output: [(45 -29 83 -76) -76]
Test Case: 504 | Input/Output: [(-68 -75 -1 40) -75]
Test Case: 505 | Input/Output: [(-19 39 -2 26) -19]
Test Case: 506 | Input/Output: [(-2 -14 -65 39) -65]
Test Case: 507 | Input/Output: [(-31 86 -6 -85) -85]
Test Case: 508 | Input/Output: [(35 17 17 -78) -78]
Test Case: 509 | Input/Output: [(19 -56 -17 80) -56]
Test Case: 510 | Input/Output: [(-35 80 34 -64) -64]
Test Case: 511 | Input/Output: [(36 89 14 34) 14]
Test Case: 512 | Input/Output: [(-71 88 -9 -65) -71]
Test Case: 513 | Input/Output: [(39 -13 44 90) -13]
Test Case: 514 | Input/Output: [(-86 -20 -21 50) -86]
Test Case: 515 | Input/Output: [(-58 -9 -24 11) -58]
Test Case: 516 | Input/Output: [(11 37 70 -19) -19]
Test Case: 517 | Input/Output: [(88 57 31 -82) -82]
Test Case: 518 | Input/Output: [(80 -16 3 11) -16]
Test Case: 519 | Input/Output: [(87 56 69 21) 21]
Test Case: 520 | Input/Output: [(91 41 -15 70) -15]
Test Case: 521 | Input/Output: [(-5 -71 -56 -59) -71]
Test Case: 522 | Input/Output: [(-12 32 -73 -7) -73]
Test Case: 523 | Input/Output: [(-48 -22 13 66) -48]
Test Case: 524 | Input/Output: [(71 -61 -75 -93) -93]
Test Case: 525 | Input/Output: [(-98 -70 -24 -49) -98]
Test Case: 526 | Input/Output: [(-49 -91 -22 -72) -91]
Test Case: 527 | Input/Output: [(47 71 -19 24) -19]
Test Case: 528 | Input/Output: [(-45 61 13 -76) -76]
Test Case: 529 | Input/Output: [(-2 -45 -33 -99) -99]
Test Case: 530 | Input/Output: [(2 11 14 24) 2]
Test Case: 531 | Input/Output: [(-57 16 32 -98) -98]
Test Case: 532 | Input/Output: [(-60 -6 4 -85) -85]
Test Case: 533 | Input/Output: [(99 -59 95 83) -59]
Test Case: 534 | Input/Output: [(6 75 46 -13) -13]
Test Case: 535 | Input/Output: [(59 15 58 19) 15]
Test Case: 536 | Input/Output: [(-65 -84 40 90) -84]
Test Case: 537 | Input/Output: [(81 -45 -67 78) -67]
Test Case: 538 | Input/Output: [(-73 77 80 30) -73]
Test Case: 539 | Input/Output: [(-47 -78 -82 59) -82]
Test Case: 540 | Input/Output: [(15 76 -87 20) -87]
Test Case: 541 | Input/Output: [(-7 46 -2 16) -7]
Test Case: 542 | Input/Output: [(25 -18 -15 0) -18]
Test Case: 543 | Input/Output: [(76 -31 7 26) -31]
Test Case: 544 | Input/Output: [(-6 73 -59 85) -59]
Test Case: 545 | Input/Output: [(65 58 54 -54) -54]
Test Case: 546 | Input/Output: [(16 -11 -38 12) -38]
Test Case: 547 | Input/Output: [(42 -100 -36 50) -100]
Test Case: 548 | Input/Output: [(82 -87 22 -19) -87]
Test Case: 549 | Input/Output: [(-81 2 11 -92) -92]
Test Case: 550 | Input/Output: [(-76 -100 84 69) -100]
Test Case: 551 | Input/Output: [(-9 -78 -11 78) -78]
Test Case: 552 | Input/Output: [(-23 -13 82 46) -23]
Test Case: 553 | Input/Output: [(-78 -53 9 -2) -78]
Test Case: 554 | Input/Output: [(-25 -66 -33 -76) -76]
Test Case: 555 | Input/Output: [(-74 -25 51 29) -74]
Test Case: 556 | Input/Output: [(-66 45 -87 23) -87]
Test Case: 557 | Input/Output: [(100 41 -82 35) -82]
Test Case: 558 | Input/Output: [(-2 96 -40 5) -40]
Test Case: 559 | Input/Output: [(-70 77 69 -97) -97]
Test Case: 560 | Input/Output: [(88 -62 -95 -2) -95]
Test Case: 561 | Input/Output: [(-91 95 -45 -22) -91]
Test Case: 562 | Input/Output: [(-3 8 91 -38) -38]
Test Case: 563 | Input/Output: [(39 -72 -24 -25) -72]
Test Case: 564 | Input/Output: [(-78 62 -38 55) -78]
Test Case: 565 | Input/Output: [(20 -79 100 -58) -79]
Test Case: 566 | Input/Output: [(47 -30 -78 31) -78]
Test Case: 567 | Input/Output: [(-39 6 50 -46) -46]
Test Case: 568 | Input/Output: [(55 34 -46 94) -46]
Test Case: 569 | Input/Output: [(63 -27 80 1) -27]
Test Case: 570 | Input/Output: [(-22 48 21 -82) -82]
Test Case: 571 | Input/Output: [(61 -39 -16 -83) -83]
Test Case: 572 | Input/Output: [(-36 20 -60 26) -60]
Test Case: 573 | Input/Output: [(3 42 72 -100) -100]
Test Case: 574 | Input/Output: [(29 46 -68 -42) -68]
Test Case: 575 | Input/Output: [(44 67 -91 -53) -91]
Test Case: 576 | Input/Output: [(12 49 74 -51) -51]
Test Case: 577 | Input/Output: [(-83 -97 4 -20) -97]
Test Case: 578 | Input/Output: [(28 95 66 37) 28]
Test Case: 579 | Input/Output: [(77 37 23 -64) -64]
Test Case: 580 | Input/Output: [(47 -96 42 -45) -96]
Test Case: 581 | Input/Output: [(-46 -24 -38 0) -46]
Test Case: 582 | Input/Output: [(23 -31 86 0) -31]
Test Case: 583 | Input/Output: [(100 1 -62 38) -62]
Test Case: 584 | Input/Output: [(-73 11 71 68) -73]
Test Case: 585 | Input/Output: [(-59 25 84 -32) -59]
Test Case: 586 | Input/Output: [(46 -15 -72 51) -72]
Test Case: 587 | Input/Output: [(-42 -22 80 92) -42]
Test Case: 588 | Input/Output: [(47 81 80 66) 47]
Test Case: 589 | Input/Output: [(-5 -34 49 -59) -59]
Test Case: 590 | Input/Output: [(-20 14 81 61) -20]
Test Case: 591 | Input/Output: [(58 25 53 -44) -44]
Test Case: 592 | Input/Output: [(-31 33 0 -34) -34]
Test Case: 593 | Input/Output: [(9 92 73 32) 9]
Test Case: 594 | Input/Output: [(26 -60 -19 -52) -60]
Test Case: 595 | Input/Output: [(36 42 -7 28) -7]
Test Case: 596 | Input/Output: [(44 -89 -36 -87) -89]
Test Case: 597 | Input/Output: [(-62 49 -22 66) -62]
Test Case: 598 | Input/Output: [(-14 -26 -5 -53) -53]
Test Case: 599 | Input/Output: [(35 19 53 18) 18]
Test Case: 600 | Input/Output: [(85 -79 -24 42) -79]
Test Case: 601 | Input/Output: [(-14 -90 -82 -13) -90]
Test Case: 602 | Input/Output: [(-66 17 -86 -90) -90]
Test Case: 603 | Input/Output: [(82 61 13 95) 13]
Test Case: 604 | Input/Output: [(45 42 16 -68) -68]
Test Case: 605 | Input/Output: [(-36 89 68 -37) -37]
Test Case: 606 | Input/Output: [(-82 61 -34 52) -82]
Test Case: 607 | Input/Output: [(-22 54 -41 -12) -41]
Test Case: 608 | Input/Output: [(-91 -43 -30 -33) -91]
Test Case: 609 | Input/Output: [(-20 -79 -68 87) -79]
Test Case: 610 | Input/Output: [(14 17 93 48) 14]
Test Case: 611 | Input/Output: [(87 30 65 17) 17]
Test Case: 612 | Input/Output: [(-60 -73 -10 -65) -73]
Test Case: 613 | Input/Output: [(36 -4 14 11) -4]
Test Case: 614 | Input/Output: [(69 -86 64 31) -86]
Test Case: 615 | Input/Output: [(96 -39 -1 -50) -50]
Test Case: 616 | Input/Output: [(-85 63 -77 10) -85]
Test Case: 617 | Input/Output: [(65 -80 23 -17) -80]
Test Case: 618 | Input/Output: [(96 -60 37 -6) -60]
Test Case: 619 | Input/Output: [(-52 80 12 -61) -61]
Test Case: 620 | Input/Output: [(-66 12 98 65) -66]
Test Case: 621 | Input/Output: [(68 92 -25 -40) -40]
Test Case: 622 | Input/Output: [(75 9 16 -43) -43]
Test Case: 623 | Input/Output: [(25 -74 24 37) -74]
Test Case: 624 | Input/Output: [(-29 11 -17 -9) -29]
Test Case: 625 | Input/Output: [(82 -54 -9 -50) -54]
Test Case: 626 | Input/Output: [(-76 14 -38 84) -76]
Test Case: 627 | Input/Output: [(8 -16 -11 60) -16]
Test Case: 628 | Input/Output: [(10 -79 18 -58) -79]
Test Case: 629 | Input/Output: [(-46 28 20 47) -46]
Test Case: 630 | Input/Output: [(-57 -45 23 -12) -57]
Test Case: 631 | Input/Output: [(51 76 85 27) 27]
Test Case: 632 | Input/Output: [(-64 -18 -48 -33) -64]
Test Case: 633 | Input/Output: [(-78 13 21 -8) -78]
Test Case: 634 | Input/Output: [(-16 14 -60 -83) -83]
Test Case: 635 | Input/Output: [(-18 64 0 -38) -38]
Test Case: 636 | Input/Output: [(26 -85 -66 92) -85]
Test Case: 637 | Input/Output: [(25 35 64 64) 25]
Test Case: 638 | Input/Output: [(-71 -95 60 54) -95]
Test Case: 639 | Input/Output: [(53 40 12 84) 12]
Test Case: 640 | Input/Output: [(91 3 -70 -88) -88]
Test Case: 641 | Input/Output: [(26 -38 23 23) -38]
Test Case: 642 | Input/Output: [(-1 63 -85 -65) -85]
Test Case: 643 | Input/Output: [(95 32 -52 72) -52]
Test Case: 644 | Input/Output: [(-1 -58 -52 -5) -58]
Test Case: 645 | Input/Output: [(65 31 69 -46) -46]
Test Case: 646 | Input/Output: [(23 -93 74 -74) -93]
Test Case: 647 | Input/Output: [(-38 -3 -40 -71) -71]
Test Case: 648 | Input/Output: [(-67 -13 42 76) -67]
Test Case: 649 | Input/Output: [(42 -19 -54 -70) -70]
Test Case: 650 | Input/Output: [(92 -87 35 -23) -87]
Test Case: 651 | Input/Output: [(-64 -10 34 -16) -64]
Test Case: 652 | Input/Output: [(-46 -47 -26 -73) -73]
Test Case: 653 | Input/Output: [(52 76 1 -13) -13]
Test Case: 654 | Input/Output: [(68 -63 65 80) -63]
Test Case: 655 | Input/Output: [(-50 58 -75 55) -75]
Test Case: 656 | Input/Output: [(29 -57 -52 78) -57]
Test Case: 657 | Input/Output: [(-52 -11 71 64) -52]
Test Case: 658 | Input/Output: [(82 -15 -1 67) -15]
Test Case: 659 | Input/Output: [(75 -69 49 86) -69]
Test Case: 660 | Input/Output: [(75 51 -32 19) -32]
Test Case: 661 | Input/Output: [(-7 24 -75 -36) -75]
Test Case: 662 | Input/Output: [(77 65 51 -82) -82]
Test Case: 663 | Input/Output: [(41 100 -82 10) -82]
Test Case: 664 | Input/Output: [(-93 -87 -89 -18) -93]
Test Case: 665 | Input/Output: [(74 85 -10 61) -10]
Test Case: 666 | Input/Output: [(-96 3 87 -17) -96]
Test Case: 667 | Input/Output: [(64 -54 -35 69) -54]
Test Case: 668 | Input/Output: [(54 89 16 88) 16]
Test Case: 669 | Input/Output: [(22 38 -71 15) -71]
Test Case: 670 | Input/Output: [(63 88 -10 89) -10]
Test Case: 671 | Input/Output: [(-4 16 -11 61) -11]
Test Case: 672 | Input/Output: [(-27 67 78 -37) -37]
Test Case: 673 | Input/Output: [(36 -53 -74 -42) -74]
Test Case: 674 | Input/Output: [(-68 -3 58 63) -68]
Test Case: 675 | Input/Output: [(-98 25 9 -47) -98]
Test Case: 676 | Input/Output: [(32 -42 -15 74) -42]
Test Case: 677 | Input/Output: [(25 -20 24 79) -20]
Test Case: 678 | Input/Output: [(-64 9 9 -60) -64]
Test Case: 679 | Input/Output: [(-62 -57 48 -94) -94]
Test Case: 680 | Input/Output: [(-34 40 -65 -45) -65]
Test Case: 681 | Input/Output: [(-87 75 99 23) -87]
Test Case: 682 | Input/Output: [(29 -40 78 3) -40]
Test Case: 683 | Input/Output: [(53 66 -58 47) -58]
Test Case: 684 | Input/Output: [(90 4 96 -26) -26]
Test Case: 685 | Input/Output: [(35 -3 -52 -92) -92]
Test Case: 686 | Input/Output: [(50 -12 72 69) -12]
Test Case: 687 | Input/Output: [(19 72 -57 80) -57]
Test Case: 688 | Input/Output: [(-73 26 -98 18) -98]
Test Case: 689 | Input/Output: [(42 59 -53 -26) -53]
Test Case: 690 | Input/Output: [(-39 -14 55 28) -39]
Test Case: 691 | Input/Output: [(96 10 80 -19) -19]
Test Case: 692 | Input/Output: [(5 -21 -6 89) -21]
Test Case: 693 | Input/Output: [(-83 -27 83 66) -83]
Test Case: 694 | Input/Output: [(-82 -83 61 87) -83]
Test Case: 695 | Input/Output: [(61 -68 -85 -6) -85]
Test Case: 696 | Input/Output: [(0 0 30 49) 0]
Test Case: 697 | Input/Output: [(-85 -85 5 -84) -85]
Test Case: 698 | Input/Output: [(81 17 -37 86) -37]
Test Case: 699 | Input/Output: [(72 53 -55 58) -55]
Test Case: 700 | Input/Output: [(-27 19 -21 -36) -36]
Test Case: 701 | Input/Output: [(76 75 -8 -4) -8]
Test Case: 702 | Input/Output: [(46 -28 42 -19) -28]
Test Case: 703 | Input/Output: [(-37 -59 0 -95) -95]
Test Case: 704 | Input/Output: [(-18 74 -55 43) -55]
Test Case: 705 | Input/Output: [(-72 99 -76 85) -76]
Test Case: 706 | Input/Output: [(88 63 -15 -97) -97]
Test Case: 707 | Input/Output: [(-6 -93 1 80) -93]
Test Case: 708 | Input/Output: [(-13 -41 -51 96) -51]
Test Case: 709 | Input/Output: [(-69 85 -74 46) -74]
Test Case: 710 | Input/Output: [(36 -66 -14 -52) -66]
Test Case: 711 | Input/Output: [(18 86 -40 93) -40]
Test Case: 712 | Input/Output: [(-58 -42 -51 -85) -85]
Test Case: 713 | Input/Output: [(58 -86 43 -79) -86]
Test Case: 714 | Input/Output: [(74 -9 -11 -6) -11]
Test Case: 715 | Input/Output: [(74 -99 -5 -79) -99]
Test Case: 716 | Input/Output: [(84 -24 -35 83) -35]
Test Case: 717 | Input/Output: [(95 95 -28 89) -28]
Test Case: 718 | Input/Output: [(63 44 65 33) 33]
Test Case: 719 | Input/Output: [(-97 84 -94 -89) -97]
Test Case: 720 | Input/Output: [(91 -26 -67 -75) -75]
Test Case: 721 | Input/Output: [(-81 72 -86 64) -86]
Test Case: 722 | Input/Output: [(-39 62 36 55) -39]
Test Case: 723 | Input/Output: [(-99 -32 -8 80) -99]
Test Case: 724 | Input/Output: [(74 96 -93 34) -93]
Test Case: 725 | Input/Output: [(-56 -76 -19 -83) -83]
Test Case: 726 | Input/Output: [(-62 83 -49 74) -62]
Test Case: 727 | Input/Output: [(-65 92 59 58) -65]
Test Case: 728 | Input/Output: [(42 -74 5 -10) -74]
Test Case: 729 | Input/Output: [(-96 64 43 -20) -96]
Test Case: 730 | Input/Output: [(2 26 -83 29) -83]
Test Case: 731 | Input/Output: [(-63 -5 42 -43) -63]
Test Case: 732 | Input/Output: [(6 90 37 -84) -84]
Test Case: 733 | Input/Output: [(7 -57 -41 19) -57]
Test Case: 734 | Input/Output: [(71 60 -77 -89) -89]
Test Case: 735 | Input/Output: [(-54 96 -67 34) -67]
Test Case: 736 | Input/Output: [(-2 -19 2 9) -19]
Test Case: 737 | Input/Output: [(57 98 -74 -18) -74]
Test Case: 738 | Input/Output: [(-75 -11 -76 -41) -76]
Test Case: 739 | Input/Output: [(8 64 -57 14) -57]
Test Case: 740 | Input/Output: [(81 68 -13 -78) -78]
Test Case: 741 | Input/Output: [(-55 64 44 86) -55]
Test Case: 742 | Input/Output: [(-82 0 -76 46) -82]
Test Case: 743 | Input/Output: [(-69 25 36 52) -69]
Test Case: 744 | Input/Output: [(-100 -18 81 64) -100]
Test Case: 745 | Input/Output: [(98 -72 -93 50) -93]
Test Case: 746 | Input/Output: [(50 -19 40 -76) -76]
Test Case: 747 | Input/Output: [(-24 22 -16 -10) -24]
Test Case: 748 | Input/Output: [(71 -26 -47 -60) -60]
Test Case: 749 | Input/Output: [(-45 -96 -22 -22) -96]
Test Case: 750 | Input/Output: [(-7 -69 58 -73) -73]
Test Case: 751 | Input/Output: [(43 -45 -95 12) -95]
Test Case: 752 | Input/Output: [(-46 -99 32 86) -99]
Test Case: 753 | Input/Output: [(79 63 -41 66) -41]
Test Case: 754 | Input/Output: [(55 68 21 20) 20]
Test Case: 755 | Input/Output: [(-42 15 -53 48) -53]
Test Case: 756 | Input/Output: [(77 -95 -10 81) -95]
Test Case: 757 | Input/Output: [(9 41 81 -87) -87]
Test Case: 758 | Input/Output: [(61 14 -34 82) -34]
Test Case: 759 | Input/Output: [(-34 24 97 78) -34]
Test Case: 760 | Input/Output: [(-4 -5 -71 -21) -71]
Test Case: 761 | Input/Output: [(-70 -18 91 44) -70]
Test Case: 762 | Input/Output: [(-82 99 -18 43) -82]
Test Case: 763 | Input/Output: [(94 72 66 -72) -72]
Test Case: 764 | Input/Output: [(4 -57 55 -82) -82]
Test Case: 765 | Input/Output: [(39 -15 42 75) -15]
Test Case: 766 | Input/Output: [(-24 41 -21 -51) -51]
Test Case: 767 | Input/Output: [(33 -46 10 70) -46]
Test Case: 768 | Input/Output: [(-66 73 -82 -58) -82]
Test Case: 769 | Input/Output: [(-17 -91 -24 64) -91]
Test Case: 770 | Input/Output: [(-57 -10 45 -13) -57]
Test Case: 771 | Input/Output: [(-96 -32 -43 -21) -96]
Test Case: 772 | Input/Output: [(-45 1 76 87) -45]
Test Case: 773 | Input/Output: [(84 -37 15 -17) -37]
Test Case: 774 | Input/Output: [(-31 -51 59 48) -51]
Test Case: 775 | Input/Output: [(8 -84 64 -58) -84]
Test Case: 776 | Input/Output: [(-3 -95 46 -85) -95]
Test Case: 777 | Input/Output: [(99 0 21 -57) -57]
Test Case: 778 | Input/Output: [(92 -63 15 27) -63]
Test Case: 779 | Input/Output: [(-57 36 -38 -95) -95]
Test Case: 780 | Input/Output: [(-73 -48 -65 37) -73]
Test Case: 781 | Input/Output: [(95 -93 82 29) -93]
Test Case: 782 | Input/Output: [(26 -81 38 72) -81]
Test Case: 783 | Input/Output: [(96 -18 -69 31) -69]
Test Case: 784 | Input/Output: [(-25 81 68 61) -25]
Test Case: 785 | Input/Output: [(5 -78 90 96) -78]
Test Case: 786 | Input/Output: [(71 55 -40 -67) -67]
Test Case: 787 | Input/Output: [(12 -86 -42 -76) -86]
Test Case: 788 | Input/Output: [(15 -40 25 -43) -43]
Test Case: 789 | Input/Output: [(70 -11 -17 73) -17]
Test Case: 790 | Input/Output: [(5 -72 -84 -56) -84]
Test Case: 791 | Input/Output: [(3 85 -7 -8) -8]
Test Case: 792 | Input/Output: [(-98 33 1 -33) -98]
Test Case: 793 | Input/Output: [(44 -70 -63 -33) -70]
Test Case: 794 | Input/Output: [(-9 53 97 47) -9]
Test Case: 795 | Input/Output: [(-52 47 -8 58) -52]
Test Case: 796 | Input/Output: [(-66 42 39 -52) -66]
Test Case: 797 | Input/Output: [(-23 54 19 -5) -23]
Test Case: 798 | Input/Output: [(63 66 -59 -63) -63]
Test Case: 799 | Input/Output: [(-23 53 -43 -12) -43]
Test Case: 800 | Input/Output: [(71 -76 100 98) -76]
Test Case: 801 | Input/Output: [(1 -94 99 93) -94]
Test Case: 802 | Input/Output: [(-35 48 89 -32) -35]
Test Case: 803 | Input/Output: [(14 87 9 -12) -12]
Test Case: 804 | Input/Output: [(-62 -42 44 43) -62]
Test Case: 805 | Input/Output: [(40 92 37 -60) -60]
Test Case: 806 | Input/Output: [(-81 -1 1 65) -81]
Test Case: 807 | Input/Output: [(-42 -28 68 -60) -60]
Test Case: 808 | Input/Output: [(57 -94 -52 20) -94]
Test Case: 809 | Input/Output: [(-75 40 25 -26) -75]
Test Case: 810 | Input/Output: [(95 29 35 70) 29]
Test Case: 811 | Input/Output: [(-85 -18 52 19) -85]
Test Case: 812 | Input/Output: [(-68 -80 62 81) -80]
Test Case: 813 | Input/Output: [(-98 -31 86 0) -98]
Test Case: 814 | Input/Output: [(29 94 75 -97) -97]
Test Case: 815 | Input/Output: [(98 83 -87 -10) -87]
Test Case: 816 | Input/Output: [(-60 -26 -95 -13) -95]
Test Case: 817 | Input/Output: [(1 40 -35 -75) -75]
Test Case: 818 | Input/Output: [(-100 93 51 54) -100]
Test Case: 819 | Input/Output: [(-11 -23 -71 -56) -71]
Test Case: 820 | Input/Output: [(-3 18 43 66) -3]
Test Case: 821 | Input/Output: [(49 -19 -42 92) -42]
Test Case: 822 | Input/Output: [(-30 -24 82 0) -30]
Test Case: 823 | Input/Output: [(-71 -67 38 0) -71]
Test Case: 824 | Input/Output: [(42 99 -36 27) -36]
Test Case: 825 | Input/Output: [(-21 70 66 -15) -21]
Test Case: 826 | Input/Output: [(-90 53 96 77) -90]
Test Case: 827 | Input/Output: [(8 65 -66 49) -66]
Test Case: 828 | Input/Output: [(64 -80 25 53) -80]
Test Case: 829 | Input/Output: [(6 -4 -34 -35) -35]
Test Case: 830 | Input/Output: [(77 84 -44 -38) -44]
Test Case: 831 | Input/Output: [(15 -49 59 -81) -81]
Test Case: 832 | Input/Output: [(37 -91 -45 -54) -91]
Test Case: 833 | Input/Output: [(-48 -90 85 -62) -90]
Test Case: 834 | Input/Output: [(-96 4 -29 38) -96]
Test Case: 835 | Input/Output: [(33 29 28 -45) -45]
Test Case: 836 | Input/Output: [(50 -8 28 68) -8]
Test Case: 837 | Input/Output: [(41 -93 64 89) -93]
Test Case: 838 | Input/Output: [(38 -71 -13 78) -71]
Test Case: 839 | Input/Output: [(-41 -87 -30 -82) -87]
Test Case: 840 | Input/Output: [(-26 -81 -26 -49) -81]
Test Case: 841 | Input/Output: [(-50 -78 -59 43) -78]
Test Case: 842 | Input/Output: [(26 47 41 55) 26]
Test Case: 843 | Input/Output: [(-57 -12 41 -61) -61]
Test Case: 844 | Input/Output: [(-2 -10 25 -36) -36]
Test Case: 845 | Input/Output: [(70 86 34 56) 34]
Test Case: 846 | Input/Output: [(36 19 -94 58) -94]
Test Case: 847 | Input/Output: [(-18 -65 -68 79) -68]
Test Case: 848 | Input/Output: [(-25 28 84 -27) -27]
Test Case: 849 | Input/Output: [(75 59 -53 83) -53]
Test Case: 850 | Input/Output: [(74 42 -16 -71) -71]
Test Case: 851 | Input/Output: [(34 -89 98 -90) -90]
Test Case: 852 | Input/Output: [(95 -5 -8 47) -8]
Test Case: 853 | Input/Output: [(-45 32 65 -50) -50]
Test Case: 854 | Input/Output: [(-100 -40 -23 37) -100]
Test Case: 855 | Input/Output: [(-47 71 37 -31) -47]
Test Case: 856 | Input/Output: [(-7 35 18 87) -7]
Test Case: 857 | Input/Output: [(60 56 91 -20) -20]
Test Case: 858 | Input/Output: [(-47 -91 -6 -14) -91]
Test Case: 859 | Input/Output: [(1 -22 -10 -90) -90]
Test Case: 860 | Input/Output: [(64 -42 -74 -78) -78]
Test Case: 861 | Input/Output: [(76 75 26 -16) -16]
Test Case: 862 | Input/Output: [(28 100 -55 77) -55]
Test Case: 863 | Input/Output: [(48 19 -88 -35) -88]
Test Case: 864 | Input/Output: [(-91 79 -90 71) -91]
Test Case: 865 | Input/Output: [(12 46 -64 72) -64]
Test Case: 866 | Input/Output: [(21 84 -91 63) -91]
Test Case: 867 | Input/Output: [(-86 2 64 57) -86]
Test Case: 868 | Input/Output: [(27 -60 -45 16) -60]
Test Case: 869 | Input/Output: [(-35 50 -27 -19) -35]
Test Case: 870 | Input/Output: [(22 88 26 -49) -49]
Test Case: 871 | Input/Output: [(-50 49 28 -26) -50]
Test Case: 872 | Input/Output: [(-77 -44 -90 98) -90]
Test Case: 873 | Input/Output: [(100 -56 56 -52) -56]
Test Case: 874 | Input/Output: [(84 47 74 55) 47]
Test Case: 875 | Input/Output: [(-59 67 -72 80) -72]
Test Case: 876 | Input/Output: [(-60 63 -79 58) -79]
Test Case: 877 | Input/Output: [(1 7 -25 78) -25]
Test Case: 878 | Input/Output: [(26 12 51 85) 12]
Test Case: 879 | Input/Output: [(63 21 -25 -94) -94]
Test Case: 880 | Input/Output: [(38 -87 -3 44) -87]
Test Case: 881 | Input/Output: [(25 -19 55 35) -19]
Test Case: 882 | Input/Output: [(-44 92 48 -32) -44]
Test Case: 883 | Input/Output: [(-64 59 17 8) -64]
Test Case: 884 | Input/Output: [(45 65 91 -85) -85]
Test Case: 885 | Input/Output: [(13 99 90 99) 13]
Test Case: 886 | Input/Output: [(65 -59 99 5) -59]
Test Case: 887 | Input/Output: [(-83 26 27 -36) -83]
Test Case: 888 | Input/Output: [(-57 -99 50 11) -99]
Test Case: 889 | Input/Output: [(-82 -97 -62 91) -97]
Test Case: 890 | Input/Output: [(-17 -48 11 34) -48]
Test Case: 891 | Input/Output: [(49 -62 10 -49) -62]
Test Case: 892 | Input/Output: [(7 62 29 -13) -13]
Test Case: 893 | Input/Output: [(-13 -13 38 -91) -91]
Test Case: 894 | Input/Output: [(-5 46 24 29) -5]
Test Case: 895 | Input/Output: [(-66 -67 20 44) -67]
Test Case: 896 | Input/Output: [(-44 -77 96 -90) -90]
Test Case: 897 | Input/Output: [(-90 50 15 26) -90]
Test Case: 898 | Input/Output: [(-53 23 7 -25) -53]
Test Case: 899 | Input/Output: [(-54 -19 -21 -79) -79]
Test Case: 900 | Input/Output: [(-71 50 81 -47) -71]
Test Case: 901 | Input/Output: [(100 39 91 -37) -37]
Test Case: 902 | Input/Output: [(-29 4 7 -61) -61]
Test Case: 903 | Input/Output: [(-45 21 84 -50) -50]
Test Case: 904 | Input/Output: [(42 13 73 -67) -67]
Test Case: 905 | Input/Output: [(0 -29 -48 42) -48]
Test Case: 906 | Input/Output: [(-26 46 40 25) -26]
Test Case: 907 | Input/Output: [(0 52 -97 58) -97]
Test Case: 908 | Input/Output: [(-41 -18 4 -29) -41]
Test Case: 909 | Input/Output: [(-2 29 -62 -52) -62]
Test Case: 910 | Input/Output: [(46 14 79 39) 14]
Test Case: 911 | Input/Output: [(-53 -46 43 -31) -53]
Test Case: 912 | Input/Output: [(65 -36 -21 -21) -36]
Test Case: 913 | Input/Output: [(76 57 -59 -95) -95]
Test Case: 914 | Input/Output: [(38 -64 -11 -65) -65]
Test Case: 915 | Input/Output: [(-90 -14 -64 -33) -90]
Test Case: 916 | Input/Output: [(1 -74 10 27) -74]
Test Case: 917 | Input/Output: [(98 -72 -57 -24) -72]
Test Case: 918 | Input/Output: [(-25 2 -7 43) -25]
Test Case: 919 | Input/Output: [(-13 -64 -17 96) -64]
Test Case: 920 | Input/Output: [(31 -43 -28 -33) -43]
Test Case: 921 | Input/Output: [(-43 -16 -98 -15) -98]
Test Case: 922 | Input/Output: [(91 56 51 64) 51]
Test Case: 923 | Input/Output: [(-99 69 15 -65) -99]
Test Case: 924 | Input/Output: [(64 93 43 63) 43]
Test Case: 925 | Input/Output: [(-98 -96 97 -15) -98]
Test Case: 926 | Input/Output: [(97 -41 56 -79) -79]
Test Case: 927 | Input/Output: [(58 53 65 90) 53]
Test Case: 928 | Input/Output: [(85 -85 92 63) -85]
Test Case: 929 | Input/Output: [(7 55 35 -20) -20]
Test Case: 930 | Input/Output: [(21 94 60 98) 21]
Test Case: 931 | Input/Output: [(73 95 51 -56) -56]
Test Case: 932 | Input/Output: [(45 -12 82 -72) -72]
Test Case: 933 | Input/Output: [(-2 68 27 -78) -78]
Test Case: 934 | Input/Output: [(75 -13 55 -1) -13]
Test Case: 935 | Input/Output: [(40 -5 76 -29) -29]
Test Case: 936 | Input/Output: [(30 25 -64 67) -64]
Test Case: 937 | Input/Output: [(48 38 6 42) 6]
Test Case: 938 | Input/Output: [(-61 -16 -43 38) -61]
Test Case: 939 | Input/Output: [(9 -1 -89 95) -89]
Test Case: 940 | Input/Output: [(52 82 18 98) 18]
Test Case: 941 | Input/Output: [(6 -83 -9 -63) -83]
Test Case: 942 | Input/Output: [(44 79 41 35) 35]
Test Case: 943 | Input/Output: [(60 76 69 54) 54]
Test Case: 944 | Input/Output: [(96 -64 -30 54) -64]
Test Case: 945 | Input/Output: [(80 -15 66 21) -15]
Test Case: 946 | Input/Output: [(28 -37 -88 -20) -88]
Test Case: 947 | Input/Output: [(30 -32 7 22) -32]
Test Case: 948 | Input/Output: [(-10 -5 7 4) -10]
Test Case: 949 | Input/Output: [(-91 -70 11 -55) -91]
Test Case: 950 | Input/Output: [(-40 49 79 -10) -40]
Test Case: 951 | Input/Output: [(68 -85 75 -15) -85]
Test Case: 952 | Input/Output: [(-64 5 90 -23) -64]
Test Case: 953 | Input/Output: [(-24 74 95 52) -24]
Test Case: 954 | Input/Output: [(9 -15 -80 42) -80]
Test Case: 955 | Input/Output: [(77 21 70 50) 21]
Test Case: 956 | Input/Output: [(-81 -96 -89 66) -96]
Test Case: 957 | Input/Output: [(-55 -44 -40 61) -55]
Test Case: 958 | Input/Output: [(41 -45 -7 -92) -92]
Test Case: 959 | Input/Output: [(-48 -79 60 35) -79]
Test Case: 960 | Input/Output: [(-78 -8 -61 -53) -78]
Test Case: 961 | Input/Output: [(-92 -28 52 14) -92]
Test Case: 962 | Input/Output: [(3 41 -99 -26) -99]
Test Case: 963 | Input/Output: [(-23 71 -5 -24) -24]
Test Case: 964 | Input/Output: [(-60 76 85 -27) -60]
Test Case: 965 | Input/Output: [(-55 67 -96 -29) -96]
Test Case: 966 | Input/Output: [(42 57 53 99) 42]
Test Case: 967 | Input/Output: [(67 55 -23 64) -23]
Test Case: 968 | Input/Output: [(49 94 76 -23) -23]
Test Case: 969 | Input/Output: [(-62 -82 52 86) -82]
Test Case: 970 | Input/Output: [(-29 -34 -90 -97) -97]
Test Case: 971 | Input/Output: [(-46 33 -13 -2) -46]
Test Case: 972 | Input/Output: [(-60 -96 -55 2) -96]
Test Case: 973 | Input/Output: [(27 72 71 -65) -65]
Test Case: 974 | Input/Output: [(-4 -17 -76 -13) -76]
Test Case: 975 | Input/Output: [(-40 -62 -54 -36) -62]
Test Case: 976 | Input/Output: [(98 95 22 -1) -1]
Test Case: 977 | Input/Output: [(-62 -59 -87 17) -87]
Test Case: 978 | Input/Output: [(-90 -82 95 34) -90]
Test Case: 979 | Input/Output: [(75 -6 23 -63) -63]
Test Case: 980 | Input/Output: [(-98 36 -23 98) -98]
Test Case: 981 | Input/Output: [(-23 -53 6 -30) -53]
Test Case: 982 | Input/Output: [(-91 58 10 -19) -91]
Test Case: 983 | Input/Output: [(-25 8 -21 43) -25]
Test Case: 984 | Input/Output: [(-21 17 -6 35) -21]
Test Case: 985 | Input/Output: [(-5 21 4 -3) -5]
Test Case: 986 | Input/Output: [(-79 -30 27 -40) -79]
Test Case: 987 | Input/Output: [(92 74 -81 -5) -81]
Test Case: 988 | Input/Output: [(15 -87 19 -56) -87]
Test Case: 989 | Input/Output: [(59 100 -71 -65) -71]
Test Case: 990 | Input/Output: [(100 90 96 -3) -3]
Test Case: 991 | Input/Output: [(-73 -78 -42 -79) -79]
Test Case: 992 | Input/Output: [(-26 74 -82 -60) -82]
Test Case: 993 | Input/Output: [(16 58 -2 -58) -58]
Test Case: 994 | Input/Output: [(71 16 -66 -82) -82]
Test Case: 995 | Input/Output: [(-50 -95 24 3) -95]
Test Case: 996 | Input/Output: [(-66 -20 -8 -70) -70]
Test Case: 997 | Input/Output: [(7 -96 -78 18) -96]
Test Case: 998 | Input/Output: [(-60 -39 -59 63) -60]
Test Case: 999 | Input/Output: [(-94 20 55 77) -94]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = -39 61 -10 74 -92 50 111 -116 -5 77 -40 106 -37 -22 -42 66
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[26 -92 -92 -92] -92] [[-3 47 -3 -3] -3] [[28 28 35 28] 28] [[27 -48 -48 -48] -48] [[38 38 38 22] 22] [[-13 76 76 76] -13] [[84 84 84 -25] -25] [[-77 -77 45 -77] -77] [[8 61 8 8] 8] [[-29 -29 -29 56] -29] [(38 38 38 38) 38] [(59 59 59 59) 59] [(93 93 93 93) 93] [(26 26 26 26) 26] [(-10 -10 -10 -10) -10] [(100 83 49 69) 49] [(100 72 89 17) 17] [(85 46 34 82) 34] [(48 17 100 21) 17] [(91 44 97 84) 44] [(60 22 36 36) 22] [(46 9 32 61) 9] [(65 69 60 80) 60] [(60 97 86 38) 38] [(29 96 2 97) 2] [(37 2 41 49) 2] [(91 5 1 34) 1] [(63 31 70 9) 9] [(21 35 93 6) 6] [(46 67 75 82) 46] [(48 52 50 72) 48] [(20 44 68 46) 20] [(53 76 18 15) 15] [(100 47 15 28) 15] [(84 2 20 60) 2] [(-9 -88 -41 -47) -88] [(50 55 -63 8) -63] [(50 -89 27 62) -89] [(41 -32 -67 -96) -96] [(-98 0 7 23) -98] [(-32 -20 38 -89) -89] [(94 -95 -95 -99) -99] [(19 -77 56 31) -77] [(-20 -40 -22 -77) -77] [(11 81 -71 24) -71] [(-14 -47 -62 -70) -70] [(-39 54 38 -31) -39] [(76 50 68 88) 50] [(-75 -80 -63 97) -80] [(-65 56 8 -51) -65] [(-28 27 98 -73) -73] [(85 54 36 -92) -92] [(-57 -19 -90 -68) -90] [(-2 18 -70 -36) -70] [(-87 -37 54 16) -87] [(-50 80 -1 -38) -50] [(-66 -100 30 10) -100] [(23 16 73 -98) -98] [(22 -78 -28 54) -78] [(36 63 6 -80) -80] [(35 48 -8 16) -8] [(86 16 91 38) 16] [(90 54 53 52) 52] [(82 30 1 67) 1] [(-81 -95 -28 -78) -95] [(-84 72 -50 -98) -98] [(-1 -14 -8 99) -14] [(-41 -11 -73 41) -73] [(84 -10 38 -88) -88] [(9 -41 88 -32) -41] [(-48 -6 -39 16) -48] [(-56 12 16 -37) -56] [(-64 -52 -8 -62) -64] [(85 -57 8 -3) -57] [(-14 -61 -14 31) -61] [(29 -32 36 -15) -32] [(-30 -53 -15 64) -53] [(24 53 -44 19) -44] [(67 49 -80 100) -80] [(-51 -5 61 30) -51] [(98 -90 49 91) -90] [(-82 -92 33 -86) -92] [(44 -45 -25 79) -45] [(-31 34 -32 -36) -36] [(17 -2 -16 39) -16] [(28 81 97 -25) -25] [(-74 -11 85 70) -74] [(39 48 46 80) 39] [(-25 54 -41 76) -41] [(68 4 80 13) 4] [(-14 11 83 34) -14] [(-66 63 -54 45) -66] [(-42 0 -20 -91) -91] [(-7 -47 -35 -2) -47] [(-17 12 -97 73) -97])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 35                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 38                 
Correct output: -13                 | Program output: 76                 
Correct output: -25                 | Program output: 84                 
Correct output: -77                 | Program output: 45                 
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 49                 
Correct output: 17                  | Program output: 89                 
Correct output: 34                  | Program output: 34                 
Correct output: 17                  | Program output: 100                
Correct output: 44                  | Program output: 97                 
Correct output: 22                  | Program output: 36                 
Correct output: 9                   | Program output: 32                 
Correct output: 60                  | Program output: 60                 
Correct output: 38                  | Program output: 86                 
Correct output: 2                   | Program output: 2                  
Correct output: 2                   | Program output: 41                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 70                 
Correct output: 6                   | Program output: 93                 
Correct output: 46                  | Program output: 75                 
Correct output: 48                  | Program output: 50                 
Correct output: 20                  | Program output: 68                 
Correct output: 15                  | Program output: 18                 
Correct output: 15                  | Program output: 15                 
Correct output: 2                   | Program output: 20                 
Correct output: -88                 | Program output: -41                
Correct output: -63                 | Program output: -63                
Correct output: -89                 | Program output: 27                 
Correct output: -96                 | Program output: -67                
Correct output: -98                 | Program output: 7                  
Correct output: -89                 | Program output: 38                 
Correct output: -99                 | Program output: -95                
Correct output: -77                 | Program output: 56                 
Correct output: -77                 | Program output: -22                
Correct output: -71                 | Program output: -71                
Correct output: -70                 | Program output: -62                
Correct output: -39                 | Program output: 38                 
Correct output: 50                  | Program output: 68                 
Correct output: -80                 | Program output: -63                
Correct output: -65                 | Program output: 8                  
Correct output: -73                 | Program output: 98                 
Correct output: -92                 | Program output: 36                 
Correct output: -90                 | Program output: -90                
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: 54                 
Correct output: -50                 | Program output: -1                 
Correct output: -100                | Program output: 30                 
Correct output: -98                 | Program output: 73                 
Correct output: -78                 | Program output: -28                
Correct output: -80                 | Program output: 6                  
Correct output: -8                  | Program output: -8                 
Correct output: 16                  | Program output: 91                 
Correct output: 52                  | Program output: 53                 
Correct output: 1                   | Program output: 1                  
Correct output: -95                 | Program output: -28                
Correct output: -98                 | Program output: -50                
Correct output: -14                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 38                 
Correct output: -41                 | Program output: 88                 
Correct output: -48                 | Program output: -39                
Correct output: -56                 | Program output: 16                 
Correct output: -64                 | Program output: -8                 
Correct output: -57                 | Program output: 8                  
Correct output: -61                 | Program output: -14                
Correct output: -32                 | Program output: 36                 
Correct output: -53                 | Program output: -15                
Correct output: -44                 | Program output: -44                
Correct output: -80                 | Program output: -80                
Correct output: -51                 | Program output: 61                 
Correct output: -90                 | Program output: 49                 
Correct output: -92                 | Program output: 33                 
Correct output: -45                 | Program output: -25                
Correct output: -36                 | Program output: -32                
Correct output: -16                 | Program output: -16                
Correct output: -25                 | Program output: 97                 
Correct output: -74                 | Program output: 85                 
Correct output: 39                  | Program output: 46                 
Correct output: -41                 | Program output: -41                
Correct output: 4                   | Program output: 80                 
Correct output: -14                 | Program output: 83                 
Correct output: -66                 | Program output: -54                
Correct output: -91                 | Program output: -20                
Correct output: -47                 | Program output: -35                
Correct output: -97                 | Program output: -97                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_eq} {:close 0, :instruction tagged_97} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_rot} {:close 1, :instruction exec_pop} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction tagged_188} {:close 1, :instruction exec_do*while} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_frominteger} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_eq} {:close 0, :instruction tag_integer_250} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_gte} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_dup_items} {:close 1, :instruction exec_if} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_frominteger} {:close 2, :instruction integer_rot} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_when} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction integer_gte} {:close 0, :instruction -15} {:close 0, :instruction integer_gte} {:close 0, :instruction print_newline} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_dup} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction integer_lte} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction -96} {:close 0, :instruction integer_max} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_min} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_swap} {:close 1, :instruction exec_swap} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_and} {:close 1, :instruction integer_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_when} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 1, :instruction integer_rot} {:close 1, :instruction exec_dup_items})
Lexicase best program: (boolean_stackdepth boolean_eq tagged_97 exec_s_when_autoconstructing (integer_mod exec_k_when_autoconstructing (boolean_rot exec_pop () in1 boolean_not) (print_integer integer_min exec_shove (exec_y_when_autoconstructing (tagged_188) exec_do*while () boolean_dup_items exec_rot () (integer_mod exec_s (boolean_and integer_flush boolean_frominteger boolean_dup_items) () (exec_yank boolean_rot integer_eq tag_integer_250 exec_dup_times (exec_k_when_autoconstructing (exec_flush boolean_and integer_gte boolean_xor) (exec_dup_items exec_if () (integer_mult boolean_invert_first_then_and exec_eq integer_inc) boolean_or boolean_frominteger) integer_rot)) boolean_pop integer_eq exec_when (exec_noop integer_stackdepth integer_gte) -15 integer_gte print_newline exec_stackdepth integer_dup print_boolean integer_mod integer_flush boolean_dup_items exec_flush exec_dup (boolean_or boolean_frominteger integer_gt) exec_pop (exec_stackdepth exec_yank integer_sub boolean_frominteger) integer_lte) (boolean_not exec_flush exec_do*range (-96 integer_max exec_pop () integer_min integer_swap integer_swap exec_swap () (in3 integer_min boolean_xor boolean_and integer_eq) exec_do*count (integer_add boolean_eq exec_when (integer_gt integer_gt exec_do*count () integer_rot) exec_dup_items)))))) () ())
Lexicase best errors: [1 1 1 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 124
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_eq} {:close 0, :instruction tagged_97} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_rot} {:close 1, :instruction exec_pop} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction tagged_188} {:close 1, :instruction exec_do*while} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_frominteger} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_eq} {:close 0, :instruction tag_integer_250} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_gte} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_dup_items} {:close 1, :instruction exec_if} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_frominteger} {:close 2, :instruction integer_rot} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_when} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction integer_gte} {:close 0, :instruction -15} {:close 0, :instruction integer_gte} {:close 0, :instruction print_newline} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_dup} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction integer_lte} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction -96} {:close 0, :instruction integer_max} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_min} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_swap} {:close 1, :instruction exec_swap} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_and} {:close 1, :instruction integer_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_when} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 1, :instruction integer_rot} {:close 1, :instruction exec_dup_items})
Zero cases best program: (boolean_stackdepth boolean_eq tagged_97 exec_s_when_autoconstructing (integer_mod exec_k_when_autoconstructing (boolean_rot exec_pop () in1 boolean_not) (print_integer integer_min exec_shove (exec_y_when_autoconstructing (tagged_188) exec_do*while () boolean_dup_items exec_rot () (integer_mod exec_s (boolean_and integer_flush boolean_frominteger boolean_dup_items) () (exec_yank boolean_rot integer_eq tag_integer_250 exec_dup_times (exec_k_when_autoconstructing (exec_flush boolean_and integer_gte boolean_xor) (exec_dup_items exec_if () (integer_mult boolean_invert_first_then_and exec_eq integer_inc) boolean_or boolean_frominteger) integer_rot)) boolean_pop integer_eq exec_when (exec_noop integer_stackdepth integer_gte) -15 integer_gte print_newline exec_stackdepth integer_dup print_boolean integer_mod integer_flush boolean_dup_items exec_flush exec_dup (boolean_or boolean_frominteger integer_gt) exec_pop (exec_stackdepth exec_yank integer_sub boolean_frominteger) integer_lte) (boolean_not exec_flush exec_do*range (-96 integer_max exec_pop () integer_min integer_swap integer_swap exec_swap () (in3 integer_min boolean_xor boolean_and integer_eq) exec_do*count (integer_add boolean_eq exec_when (integer_gt integer_gt exec_do*count () integer_rot) exec_dup_items)))))) () ())
Zero cases best errors: [1 1 1 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 124
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 7 1 4 2 4 4 4 12 4)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (2 7 1 4 2 4 4 4 12 4)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_rot} {:close 0, :instruction exec_while} {:close 0, :instruction exec_dup} {:close 0, :instruction in2} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction boolean_rot} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_lt} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_integer} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup_items} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_dup} {:close 1, :instruction print_boolean} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_add} {:close 1, :instruction integer_mult} {:close 0, :instruction integer_eq} {:close 2, :instruction exec_eq} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k} {:close 0, :instruction -100} {:close 2, :instruction integer_dec} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_empty} {:close 0, :instruction integer_empty} {:close 0, :instruction in4} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_mult} {:close 1, :instruction integer_shove} {:close 0, :instruction tag_integer_520} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_rot} {:close 0, :instruction tagged_565} {:close 0, :instruction tagged_771} {:close 0, :instruction in4} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_max} {:close 0, :instruction exec_do*count})
Best program: (integer_rot exec_while (exec_dup (in2 integer_yankdup boolean_dup_items boolean_pop) in3 boolean_rot) exec_do*times (integer_pop exec_if (exec_do*while (integer_gte integer_lt exec_rot () (boolean_rot print_integer integer_sub integer_dup_items print_integer in4 exec_dup (print_boolean) in4) (in3 integer_add integer_mult) integer_eq exec_eq)) (exec_while (boolean_or exec_k (-100 integer_dec) () boolean_xor boolean_or) exec_shove (exec_dup_items integer_dup_items integer_shove boolean_or) exec_eq integer_empty) integer_empty in4 exec_dup (integer_mult integer_shove) tag_integer_520 print_integer boolean_eq boolean_xor boolean_rot) tagged_565 tagged_771 in4 integer_add integer_pop integer_max exec_do*count ())
Errors: [1 0 1 1 1 0 0 1 0 1]
Total: 6
Mean: 0.6
Genome size: 61
Size: 78
Percent parens: 0.218
--- Population Statistics ---
Average total errors in population: 9.956
Median total errors in population: 10
Error averages by case: (0.998 0.993 0.999 0.996 0.998 0.996 0.996 0.996 0.988 0.996)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 52.051
Average program size in population (points): 71.554
Average percent parens in population: 0.282
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.286
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 485678
--- Timings ---
Current time: 1559593989666 milliseconds
Total Time:           2.8 seconds
Initialization:       0.1 seconds,  3.5%
Reproduction:         0.8 seconds, 28.4%
Fitness Testing:      1.9 seconds, 68.0%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 404
Test mean error for best: 0.40400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 28                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 22                 
Correct output: -13                 | Program output: -13                
Correct output: -25                 | Program output: -25                
Correct output: -77                 | Program output: -77                
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 69                 
Correct output: 17                  | Program output: 17                 
Correct output: 34                  | Program output: 82                 
Correct output: 17                  | Program output: 21                 
Correct output: 44                  | Program output: 84                 
Correct output: 22                  | Program output: 36                 
Correct output: 9                   | Program output: 46                 
Correct output: 60                  | Program output: 65                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 29                 
Correct output: 2                   | Program output: 37                 
Correct output: 1                   | Program output: 34                 
Correct output: 9                   | Program output: 9                  
Correct output: 6                   | Program output: 6                  
Correct output: 46                  | Program output: 46                 
Correct output: 48                  | Program output: 48                 
Correct output: 20                  | Program output: 20                 
Correct output: 15                  | Program output: 15                 
Correct output: 15                  | Program output: 28                 
Correct output: 2                   | Program output: 60                 
Correct output: -88                 | Program output: -47                
Correct output: -63                 | Program output: 8                  
Correct output: -89                 | Program output: 50                 
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -99                 | Program output: -99                
Correct output: -77                 | Program output: 19                 
Correct output: -77                 | Program output: -77                
Correct output: -71                 | Program output: 11                 
Correct output: -70                 | Program output: -70                
Correct output: -39                 | Program output: -39                
Correct output: 50                  | Program output: 76                 
Correct output: -80                 | Program output: -75                
Correct output: -65                 | Program output: -65                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -90                 | Program output: -68                
Correct output: -70                 | Program output: -36                
Correct output: -87                 | Program output: -87                
Correct output: -50                 | Program output: -50                
Correct output: -100                | Program output: -66                
Correct output: -98                 | Program output: -98                
Correct output: -78                 | Program output: 22                 
Correct output: -80                 | Program output: -80                
Correct output: -8                  | Program output: 16                 
Correct output: 16                  | Program output: 38                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 67                 
Correct output: -95                 | Program output: -81                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -1                 
Correct output: -73                 | Program output: -41                
Correct output: -88                 | Program output: -88                
Correct output: -41                 | Program output: -32                
Correct output: -48                 | Program output: -48                
Correct output: -56                 | Program output: -56                
Correct output: -64                 | Program output: -64                
Correct output: -57                 | Program output: -3                 
Correct output: -61                 | Program output: -14                
Correct output: -32                 | Program output: -15                
Correct output: -53                 | Program output: -30                
Correct output: -44                 | Program output: 19                 
Correct output: -80                 | Program output: 67                 
Correct output: -51                 | Program output: -51                
Correct output: -90                 | Program output: 91                 
Correct output: -92                 | Program output: -86                
Correct output: -45                 | Program output: 44                 
Correct output: -36                 | Program output: -36                
Correct output: -16                 | Program output: 17                 
Correct output: -25                 | Program output: -25                
Correct output: -74                 | Program output: -74                
Correct output: 39                  | Program output: 39                 
Correct output: -41                 | Program output: -25                
Correct output: 4                   | Program output: 13                 
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -66                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -7                 
Correct output: -97                 | Program output: -17                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_rot} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Lexicase best program: (-43 in1 in4 integer_min print_integer exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_flush exec_pop () exec_do*range (integer_yank boolean_yank exec_dup_times (print_integer) boolean_yank integer_rot exec_k () (integer_mod in1 boolean_pop in3 in2) exec_shove (exec_s (exec_dup_times (integer_min integer_gte integer_dup)) () ()))) ())
Lexicase best errors: [1 0 0 1 0 1 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 44
Percent parens: 0.318
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_rot} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Zero cases best program: (-43 in1 in4 integer_min print_integer exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_flush exec_pop () exec_do*range (integer_yank boolean_yank exec_dup_times (print_integer) boolean_yank integer_rot exec_k () (integer_mod in1 boolean_pop in3 in2) exec_shove (exec_s (exec_dup_times (integer_min integer_gte integer_dup)) () ()))) ())
Zero cases best errors: [1 0 0 1 0 1 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 44
Percent parens: 0.318
--- Lexicase Population Statistics ---
Count of elite individuals by case: (148 184 184 149 184 19 149 206 149 184)
Population mean number of elite cases: 1.56
Count of perfect (error zero) individuals by case: (148 184 184 149 184 19 149 206 149 184)
Population mean number of perfect (error zero) cases: 1.56
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_rot} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Best program: (-43 in1 in4 integer_min print_integer exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_flush exec_pop () exec_do*range (integer_yank boolean_yank exec_dup_times (print_integer) boolean_yank integer_rot exec_k () (integer_mod in1 boolean_pop in3 in2) exec_shove (exec_s (exec_dup_times (integer_min integer_gte integer_dup)) () ()))) ())
Errors: [1 0 0 1 0 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 30
Size: 44
Percent parens: 0.318
--- Population Statistics ---
Average total errors in population: 8.444
Median total errors in population: 9
Error averages by case: (0.852 0.816 0.816 0.851 0.816 0.981 0.851 0.794 0.851 0.816)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 54.323
Average program size in population (points): 75.403
Average percent parens in population: 0.283
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.005
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.146
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1095675
--- Timings ---
Current time: 1559593991869 milliseconds
Total Time:           5.5 seconds
Initialization:       0.1 seconds,  1.8%
Reproduction:         1.8 seconds, 33.9%
Fitness Testing:      2.8 seconds, 50.8%
Report:               0.7 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 434
Test mean error for best: 0.43400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 28                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 22                 
Correct output: -13                 | Program output: 76                 
Correct output: -25                 | Program output: -25                
Correct output: -77                 | Program output: -77                
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 49                 
Correct output: 17                  | Program output: 17                 
Correct output: 34                  | Program output: 34                 
Correct output: 17                  | Program output: 21                 
Correct output: 44                  | Program output: 84                 
Correct output: 22                  | Program output: 36                 
Correct output: 9                   | Program output: 32                 
Correct output: 60                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 2                   | Program output: 41                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 6                   | Program output: 6                  
Correct output: 46                  | Program output: 75                 
Correct output: 48                  | Program output: 50                 
Correct output: 20                  | Program output: 46                 
Correct output: 15                  | Program output: 15                 
Correct output: 15                  | Program output: 15                 
Correct output: 2                   | Program output: 20                 
Correct output: -88                 | Program output: -47                
Correct output: -63                 | Program output: -63                
Correct output: -89                 | Program output: 27                 
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: 7                  
Correct output: -89                 | Program output: -89                
Correct output: -99                 | Program output: -99                
Correct output: -77                 | Program output: 31                 
Correct output: -77                 | Program output: -77                
Correct output: -71                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -39                 | Program output: -31                
Correct output: 50                  | Program output: 68                 
Correct output: -80                 | Program output: -63                
Correct output: -65                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -90                 | Program output: -90                
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: 16                 
Correct output: -50                 | Program output: -38                
Correct output: -100                | Program output: 10                 
Correct output: -98                 | Program output: -98                
Correct output: -78                 | Program output: -28                
Correct output: -80                 | Program output: -80                
Correct output: -8                  | Program output: -8                 
Correct output: 16                  | Program output: 38                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 1                  
Correct output: -95                 | Program output: -78                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -88                
Correct output: -41                 | Program output: -32                
Correct output: -48                 | Program output: -39                
Correct output: -56                 | Program output: -37                
Correct output: -64                 | Program output: -62                
Correct output: -57                 | Program output: -3                 
Correct output: -61                 | Program output: -14                
Correct output: -32                 | Program output: -15                
Correct output: -53                 | Program output: -15                
Correct output: -44                 | Program output: -44                
Correct output: -80                 | Program output: -80                
Correct output: -51                 | Program output: 30                 
Correct output: -90                 | Program output: 49                 
Correct output: -92                 | Program output: -86                
Correct output: -45                 | Program output: -25                
Correct output: -36                 | Program output: -36                
Correct output: -16                 | Program output: -16                
Correct output: -25                 | Program output: -25                
Correct output: -74                 | Program output: 70                 
Correct output: 39                  | Program output: 46                 
Correct output: -41                 | Program output: -41                
Correct output: 4                   | Program output: 13                 
Correct output: -14                 | Program output: 34                 
Correct output: -66                 | Program output: -54                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -35                
Correct output: -97                 | Program output: -97                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Lexicase best program: (-43 in1 in4 in3 integer_min print_integer exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_dup_items boolean_invert_first_then_and boolean_flush exec_pop () exec_do*range (integer_yank boolean_yank integer_eq exec_dup_times (print_integer) boolean_yank exec_y (exec_k () (integer_mod in1 boolean_pop in3 in2) exec_shove (exec_s (exec_dup_times (integer_min integer_gte integer_dup)) () ())))) ())
Lexicase best errors: [0 1 0 0 0 0 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 49
Percent parens: 0.306
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Zero cases best program: (-43 in1 in4 in3 integer_min print_integer exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_dup_items boolean_invert_first_then_and boolean_flush exec_pop () exec_do*range (integer_yank boolean_yank integer_eq exec_dup_times (print_integer) boolean_yank exec_y (exec_k () (integer_mod in1 boolean_pop in3 in2) exec_shove (exec_s (exec_dup_times (integer_min integer_gte integer_dup)) () ())))) ())
Zero cases best errors: [0 1 0 0 0 0 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 49
Percent parens: 0.306
--- Lexicase Population Statistics ---
Count of elite individuals by case: (329 269 257 583 262 389 333 584 24 24)
Population mean number of elite cases: 3.05
Count of perfect (error zero) individuals by case: (329 269 257 583 262 389 333 584 24 24)
Population mean number of perfect (error zero) cases: 3.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Best program: (-43 in1 in4 in3 integer_min print_integer exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_dup_items boolean_invert_first_then_and boolean_flush exec_pop () exec_do*range (integer_yank boolean_yank integer_eq exec_dup_times (print_integer) boolean_yank exec_y (exec_k () (integer_mod in1 boolean_pop in3 in2) exec_shove (exec_s (exec_dup_times (integer_min integer_gte integer_dup)) () ())))) ())
Errors: [0 1 0 0 0 0 0 0 1 1]
Total: 3
Mean: 0.3
Genome size: 34
Size: 49
Percent parens: 0.306
--- Population Statistics ---
Average total errors in population: 6.946
Median total errors in population: 6
Error averages by case: (0.671 0.731 0.743 0.417 0.738 0.611 0.667 0.416 0.976 0.976)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 43.843
Average program size in population (points): 63.061
Average percent parens in population: 0.307
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.997
Total error diversity:				 0.008
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.148
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1617715
--- Timings ---
Current time: 1559593994608 milliseconds
Total Time:           7.8 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.3 seconds, 41.8%
Fitness Testing:      3.4 seconds, 43.7%
Report:               1.0 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 434
Test mean error for best: 0.43400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 28                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 22                 
Correct output: -13                 | Program output: 76                 
Correct output: -25                 | Program output: -25                
Correct output: -77                 | Program output: -77                
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 49                 
Correct output: 17                  | Program output: 17                 
Correct output: 34                  | Program output: 34                 
Correct output: 17                  | Program output: 21                 
Correct output: 44                  | Program output: 84                 
Correct output: 22                  | Program output: 36                 
Correct output: 9                   | Program output: 32                 
Correct output: 60                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 2                   | Program output: 41                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 6                   | Program output: 6                  
Correct output: 46                  | Program output: 75                 
Correct output: 48                  | Program output: 50                 
Correct output: 20                  | Program output: 46                 
Correct output: 15                  | Program output: 15                 
Correct output: 15                  | Program output: 15                 
Correct output: 2                   | Program output: 20                 
Correct output: -88                 | Program output: -47                
Correct output: -63                 | Program output: -63                
Correct output: -89                 | Program output: 27                 
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: 7                  
Correct output: -89                 | Program output: -89                
Correct output: -99                 | Program output: -99                
Correct output: -77                 | Program output: 31                 
Correct output: -77                 | Program output: -77                
Correct output: -71                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -39                 | Program output: -31                
Correct output: 50                  | Program output: 68                 
Correct output: -80                 | Program output: -63                
Correct output: -65                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -90                 | Program output: -90                
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: 16                 
Correct output: -50                 | Program output: -38                
Correct output: -100                | Program output: 10                 
Correct output: -98                 | Program output: -98                
Correct output: -78                 | Program output: -28                
Correct output: -80                 | Program output: -80                
Correct output: -8                  | Program output: -8                 
Correct output: 16                  | Program output: 38                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 1                  
Correct output: -95                 | Program output: -78                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -88                
Correct output: -41                 | Program output: -32                
Correct output: -48                 | Program output: -39                
Correct output: -56                 | Program output: -37                
Correct output: -64                 | Program output: -62                
Correct output: -57                 | Program output: -3                 
Correct output: -61                 | Program output: -14                
Correct output: -32                 | Program output: -15                
Correct output: -53                 | Program output: -15                
Correct output: -44                 | Program output: -44                
Correct output: -80                 | Program output: -80                
Correct output: -51                 | Program output: 30                 
Correct output: -90                 | Program output: 49                 
Correct output: -92                 | Program output: -86                
Correct output: -45                 | Program output: -25                
Correct output: -36                 | Program output: -36                
Correct output: -16                 | Program output: -16                
Correct output: -25                 | Program output: -25                
Correct output: -74                 | Program output: 70                 
Correct output: 39                  | Program output: 46                 
Correct output: -41                 | Program output: -41                
Correct output: 4                   | Program output: 13                 
Correct output: -14                 | Program output: 34                 
Correct output: -66                 | Program output: -54                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -35                
Correct output: -97                 | Program output: -97                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_k} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Lexicase best program: (-43 in1 in4 in3 integer_min print_integer exec_k (exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_dup_items boolean_invert_first_then_and boolean_flush exec_pop () integer_yank boolean_yank integer_eq exec_dup_times (print_integer) boolean_yank exec_y (exec_k () (integer_mod in1 boolean_pop in2) exec_shove (exec_s (exec_dup_times (integer_min integer_swap integer_gte integer_dup)) () ()))) ()) ())
Lexicase best errors: [1 0 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 50
Percent parens: 0.320
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_k} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup})
Zero cases best program: (-43 in1 in4 in3 integer_min print_integer exec_k (exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_dup_items boolean_invert_first_then_and boolean_flush exec_pop () integer_yank boolean_yank integer_eq exec_dup_times (print_integer) boolean_yank exec_y (exec_k () (integer_mod in1 boolean_pop in2) exec_shove (exec_s (exec_dup_times (integer_min integer_swap integer_gte integer_dup)) () ()))) ()) ())
Zero cases best errors: [1 0 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 50
Percent parens: 0.320
--- Lexicase Population Statistics ---
Count of elite individuals by case: (186 335 609 448 445 623 451 96 345 624)
Population mean number of elite cases: 4.16
Count of perfect (error zero) individuals by case: (186 335 609 448 445 623 451 96 345 624)
Population mean number of perfect (error zero) cases: 4.16
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction in3} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup})
Best program: (-43 in1 in4 in3 integer_min print_integer exec_s_when_autoconstructing (in3) (integer_pop integer_inc boolean_dup_items boolean_flush exec_pop () exec_do*range (exec_s (integer_yank boolean_yank integer_eq exec_dup_times (print_integer) boolean_yank exec_y (exec_k () (integer_mod in1 boolean_pop in3 in2) exec_shove (exec_s (integer_min integer_dup) () ()))) () ())) ())
Errors: [1 0 0 0 0 0 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 32
Size: 49
Percent parens: 0.347
--- Population Statistics ---
Average total errors in population: 5.838
Median total errors in population: 6
Error averages by case: (0.814 0.665 0.391 0.552 0.555 0.377 0.549 0.904 0.655 0.376)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 36.855
Average program size in population (points): 52.941
Average percent parens in population: 0.304
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.009
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2329617
--- Timings ---
Current time: 1559593997401 milliseconds
Total Time:          10.6 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         4.5 seconds, 42.6%
Fitness Testing:      4.3 seconds, 40.3%
Report:               1.7 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 211
Test mean error for best: 0.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 28                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 22                 
Correct output: -13                 | Program output: -13                
Correct output: -25                 | Program output: -25                
Correct output: -77                 | Program output: -77                
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 49                 
Correct output: 17                  | Program output: 17                 
Correct output: 34                  | Program output: 34                 
Correct output: 17                  | Program output: 21                 
Correct output: 44                  | Program output: 84                 
Correct output: 22                  | Program output: 36                 
Correct output: 9                   | Program output: 32                 
Correct output: 60                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 2                   | Program output: 37                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 6                   | Program output: 6                  
Correct output: 46                  | Program output: 46                 
Correct output: 48                  | Program output: 48                 
Correct output: 20                  | Program output: 20                 
Correct output: 15                  | Program output: 15                 
Correct output: 15                  | Program output: 15                 
Correct output: 2                   | Program output: 20                 
Correct output: -88                 | Program output: -47                
Correct output: -63                 | Program output: -63                
Correct output: -89                 | Program output: 27                 
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -99                 | Program output: -99                
Correct output: -77                 | Program output: 19                 
Correct output: -77                 | Program output: -77                
Correct output: -71                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -39                 | Program output: -39                
Correct output: 50                  | Program output: 68                 
Correct output: -80                 | Program output: -75                
Correct output: -65                 | Program output: -65                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -90                 | Program output: -90                
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -50                 | Program output: -50                
Correct output: -100                | Program output: -66                
Correct output: -98                 | Program output: -98                
Correct output: -78                 | Program output: -28                
Correct output: -80                 | Program output: -80                
Correct output: -8                  | Program output: -8                 
Correct output: 16                  | Program output: 38                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 1                  
Correct output: -95                 | Program output: -81                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -88                
Correct output: -41                 | Program output: -32                
Correct output: -48                 | Program output: -48                
Correct output: -56                 | Program output: -56                
Correct output: -64                 | Program output: -64                
Correct output: -57                 | Program output: -3                 
Correct output: -61                 | Program output: -14                
Correct output: -32                 | Program output: -15                
Correct output: -53                 | Program output: -30                
Correct output: -44                 | Program output: -44                
Correct output: -80                 | Program output: -80                
Correct output: -51                 | Program output: -51                
Correct output: -90                 | Program output: 49                 
Correct output: -92                 | Program output: -86                
Correct output: -45                 | Program output: -25                
Correct output: -36                 | Program output: -36                
Correct output: -16                 | Program output: -16                
Correct output: -25                 | Program output: -25                
Correct output: -74                 | Program output: -74                
Correct output: 39                  | Program output: 39                 
Correct output: -41                 | Program output: -41                
Correct output: 4                   | Program output: 13                 
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -66                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -35                
Correct output: -97                 | Program output: -97                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items})
Lexicase best program: (boolean_yank -43 in1 in4 in3 integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush exec_pop () integer_yank integer_dup_times boolean_yank exec_dup_times (print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 boolean_pop in3 in2) exec_s (exec_dup_times (integer_min integer_gte integer_dup exec_dup_items)) () ()))
Lexicase best errors: [0 0 1 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 44
Percent parens: 0.227
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items})
Zero cases best program: (boolean_yank -43 in1 in4 in3 integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush exec_pop () integer_yank integer_dup_times boolean_yank exec_dup_times (print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 boolean_pop in3 in2) exec_s (exec_dup_times (integer_min integer_gte integer_dup exec_dup_items)) () ()))
Zero cases best errors: [0 0 1 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 44
Percent parens: 0.227
--- Lexicase Population Statistics ---
Count of elite individuals by case: (455 711 84 458 398 627 296 436 716 695)
Population mean number of elite cases: 4.88
Count of perfect (error zero) individuals by case: (455 711 84 458 398 627 296 436 716 695)
Population mean number of perfect (error zero) cases: 4.88
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items})
Best program: (boolean_yank -43 in1 in4 in3 integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush exec_pop () integer_yank integer_dup_times boolean_yank exec_dup_times (print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 boolean_pop in3 in2) exec_s (exec_dup_times (integer_min integer_gte integer_dup exec_dup_items)) () ()))
Errors: [0 0 1 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 34
Size: 44
Percent parens: 0.227
--- Population Statistics ---
Average total errors in population: 5.124
Median total errors in population: 3
Error averages by case: (0.545 0.289 0.916 0.542 0.602 0.373 0.704 0.564 0.284 0.305)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.753
Average program size in population (points): 48.535
Average percent parens in population: 0.302
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.01
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 3111958
--- Timings ---
Current time: 1559593999701 milliseconds
Total Time:          13.4 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         5.7 seconds, 42.5%
Fitness Testing:      5.2 seconds, 38.8%
Report:               2.4 seconds, 17.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 220
Test mean error for best: 0.22000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 28                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 22                 
Correct output: -13                 | Program output: 76                 
Correct output: -25                 | Program output: -25                
Correct output: -77                 | Program output: -77                
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 49                 
Correct output: 17                  | Program output: 17                 
Correct output: 34                  | Program output: 34                 
Correct output: 17                  | Program output: 17                 
Correct output: 44                  | Program output: 44                 
Correct output: 22                  | Program output: 22                 
Correct output: 9                   | Program output: 9                  
Correct output: 60                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 6                   | Program output: 6                  
Correct output: 46                  | Program output: 67                 
Correct output: 48                  | Program output: 50                 
Correct output: 20                  | Program output: 44                 
Correct output: 15                  | Program output: 15                 
Correct output: 15                  | Program output: 15                 
Correct output: 2                   | Program output: 2                  
Correct output: -88                 | Program output: -88                
Correct output: -63                 | Program output: -63                
Correct output: -89                 | Program output: -89                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: 0                  
Correct output: -89                 | Program output: -89                
Correct output: -99                 | Program output: -99                
Correct output: -77                 | Program output: -77                
Correct output: -77                 | Program output: -77                
Correct output: -71                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -39                 | Program output: -31                
Correct output: 50                  | Program output: 50                 
Correct output: -80                 | Program output: -80                
Correct output: -65                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -90                 | Program output: -90                
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -37                
Correct output: -50                 | Program output: -38                
Correct output: -100                | Program output: -100               
Correct output: -98                 | Program output: -98                
Correct output: -78                 | Program output: -78                
Correct output: -80                 | Program output: -80                
Correct output: -8                  | Program output: -8                 
Correct output: 16                  | Program output: 16                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 1                  
Correct output: -95                 | Program output: -95                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -14                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -88                
Correct output: -41                 | Program output: -41                
Correct output: -48                 | Program output: -39                
Correct output: -56                 | Program output: -37                
Correct output: -64                 | Program output: -62                
Correct output: -57                 | Program output: -57                
Correct output: -61                 | Program output: -61                
Correct output: -32                 | Program output: -32                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -80                 | Program output: -80                
Correct output: -51                 | Program output: -5                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -45                 | Program output: -45                
Correct output: -36                 | Program output: -36                
Correct output: -16                 | Program output: -16                
Correct output: -25                 | Program output: -25                
Correct output: -74                 | Program output: -11                
Correct output: 39                  | Program output: 46                 
Correct output: -41                 | Program output: -41                
Correct output: 4                   | Program output: 4                  
Correct output: -14                 | Program output: 11                 
Correct output: -66                 | Program output: -54                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -47                
Correct output: -97                 | Program output: -97                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction -43} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_flush} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 1, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items})
Lexicase best program: (-43 in4 in2 in3 integer_min boolean_rot boolean_flush integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush exec_pop () integer_yank integer_dup_times boolean_yank exec_dup_times (print_integer) exec_k () (exec_k (integer_yank print_integer integer_mod in1 boolean_pop in3 in2) (exec_s (boolean_and exec_dup_times (integer_min integer_gte integer_dup exec_dup_items)) () ()))))
Lexicase best errors: [0 0 1 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 47
Percent parens: 0.255
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction -43} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_flush} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 1, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items})
Zero cases best program: (-43 in4 in2 in3 integer_min boolean_rot boolean_flush integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush exec_pop () integer_yank integer_dup_times boolean_yank exec_dup_times (print_integer) exec_k () (exec_k (integer_yank print_integer integer_mod in1 boolean_pop in3 in2) (exec_s (boolean_and exec_dup_times (integer_min integer_gte integer_dup exec_dup_items)) () ()))))
Zero cases best errors: [0 0 1 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 47
Percent parens: 0.255
--- Lexicase Population Statistics ---
Count of elite individuals by case: (186 592 562 462 167 462 167 382 605 390)
Population mean number of elite cases: 3.97
Count of perfect (error zero) individuals by case: (186 592 562 462 167 462 167 382 605 390)
Population mean number of perfect (error zero) cases: 3.97
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_items})
Best program: (boolean_yank -43 in1 in2 in4 in3 integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_yank integer_dup_times boolean_yank exec_dup_times (print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 in3 boolean_pop in3 in2) exec_s (exec_dup_times (integer_gte integer_dup exec_do*times (exec_dup_items))) () ()))
Errors: [0 0 1 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 35
Size: 45
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 6.025
Median total errors in population: 4
Error averages by case: (0.814 0.408 0.438 0.538 0.833 0.538 0.833 0.618 0.395 0.61)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 34.225
Average program size in population (points): 45.594
Average percent parens in population: 0.247
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.009
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.141
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 3661492
--- Timings ---
Current time: 1559594001721 milliseconds
Total Time:          15.4 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         6.9 seconds, 44.5%
Fitness Testing:      5.8 seconds, 37.8%
Report:               2.6 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 28                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 22                 
Correct output: -13                 | Program output: -13                
Correct output: -25                 | Program output: -25                
Correct output: -77                 | Program output: -77                
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 49                 
Correct output: 17                  | Program output: 17                 
Correct output: 34                  | Program output: 34                 
Correct output: 17                  | Program output: 17                 
Correct output: 44                  | Program output: 44                 
Correct output: 22                  | Program output: 22                 
Correct output: 9                   | Program output: 9                  
Correct output: 60                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 6                   | Program output: 6                  
Correct output: 46                  | Program output: 46                 
Correct output: 48                  | Program output: 48                 
Correct output: 20                  | Program output: 20                 
Correct output: 15                  | Program output: 15                 
Correct output: 15                  | Program output: 15                 
Correct output: 2                   | Program output: 2                  
Correct output: -88                 | Program output: -88                
Correct output: -63                 | Program output: -63                
Correct output: -89                 | Program output: -89                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -99                 | Program output: -99                
Correct output: -77                 | Program output: -77                
Correct output: -77                 | Program output: -77                
Correct output: -71                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -39                 | Program output: -39                
Correct output: 50                  | Program output: 50                 
Correct output: -80                 | Program output: -80                
Correct output: -65                 | Program output: -65                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -90                 | Program output: -90                
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -50                 | Program output: -50                
Correct output: -100                | Program output: -100               
Correct output: -98                 | Program output: -98                
Correct output: -78                 | Program output: -78                
Correct output: -80                 | Program output: -80                
Correct output: -8                  | Program output: -8                 
Correct output: 16                  | Program output: 16                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 1                  
Correct output: -95                 | Program output: -95                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -14                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -88                
Correct output: -41                 | Program output: -41                
Correct output: -48                 | Program output: -48                
Correct output: -56                 | Program output: -56                
Correct output: -64                 | Program output: -64                
Correct output: -57                 | Program output: -57                
Correct output: -61                 | Program output: -61                
Correct output: -32                 | Program output: -32                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -80                 | Program output: -80                
Correct output: -51                 | Program output: -51                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -45                 | Program output: -45                
Correct output: -36                 | Program output: -36                
Correct output: -16                 | Program output: -16                
Correct output: -25                 | Program output: -25                
Correct output: -74                 | Program output: -74                
Correct output: 39                  | Program output: 39                 
Correct output: -41                 | Program output: -41                
Correct output: 4                   | Program output: 4                  
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -66                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -47                
Correct output: -97                 | Program output: -97                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_dup} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_items})
Lexicase best program: (boolean_yank -43 in1 in2 in4 in3 integer_min boolean_rot exec_dup (integer_min) print_integer integer_gte integer_pop exec_do*range (exec_do*while (integer_yank integer_dup_times exec_dup (exec_dup_times (print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod integer_mod in1 in3 boolean_pop in3 in2) exec_s (exec_dup_times (integer_dup exec_do*times (exec_dup_items))) () ()))))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 49
Percent parens: 0.265
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_dup} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_items})
Zero cases best program: (boolean_yank -43 in1 in2 in4 in3 integer_min boolean_rot exec_dup (integer_min) print_integer integer_gte integer_pop exec_do*range (exec_do*while (integer_yank integer_dup_times exec_dup (exec_dup_times (print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod integer_mod in1 in3 boolean_pop in3 in2) exec_s (exec_dup_times (integer_dup exec_do*times (exec_dup_items))) () ()))))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 49
Percent parens: 0.265
--- Lexicase Population Statistics ---
Count of elite individuals by case: (530 491 250 592 455 497 243 557 523 656)
Population mean number of elite cases: 4.79
Count of perfect (error zero) individuals by case: (530 491 250 592 455 497 243 557 523 656)
Population mean number of perfect (error zero) cases: 4.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction -43} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yank} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mod} {:close 0, :instruction in1} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction integer_yank} {:close 1, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_items})
Best program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 36
Size: 45
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 5.206
Median total errors in population: 4
Error averages by case: (0.47 0.509 0.75 0.408 0.545 0.503 0.757 0.443 0.477 0.344)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 34.877
Average program size in population (points): 46.437
Average percent parens in population: 0.247
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.01
Error (vector) diversity:			 0.064
Behavioral diversity:				 0.175
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 4093812
--- Timings ---
Current time: 1559594003619 milliseconds
Total Time:          17.3 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.1 seconds, 46.7%
Fitness Testing:      6.3 seconds, 36.3%
Report:               2.8 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 6
Successful program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 45


Auto-simplifying with starting size: 45
step: 0
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 500
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 1000
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 1500
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 2000
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 2500
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 3000
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 3500
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 4000
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 4500
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

step: 5000
program: (-43 in1 in2 in4 in3 integer_min integer_min boolean_rot integer_min print_integer integer_pop exec_do*while (boolean_invert_first_then_and boolean_flush integer_dup_times boolean_yank print_integer) boolean_yank exec_k () (integer_yank print_integer integer_mod in1 integer_dup_items in3 boolean_pop in3 integer_yank in2) exec_s (exec_dup_times (integer_gte integer_dup boolean_dup_times) exec_do*times (exec_dup_items)) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 45

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -92                 | Program output: -92                
Correct output: -3                  | Program output: -3                 
Correct output: 28                  | Program output: 28                 
Correct output: -48                 | Program output: -48                
Correct output: 22                  | Program output: 22                 
Correct output: -13                 | Program output: -13                
Correct output: -25                 | Program output: -25                
Correct output: -77                 | Program output: -77                
Correct output: 8                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: 38                  | Program output: 38                 
Correct output: 59                  | Program output: 59                 
Correct output: 93                  | Program output: 93                 
Correct output: 26                  | Program output: 26                 
Correct output: -10                 | Program output: -10                
Correct output: 49                  | Program output: 49                 
Correct output: 17                  | Program output: 17                 
Correct output: 34                  | Program output: 34                 
Correct output: 17                  | Program output: 17                 
Correct output: 44                  | Program output: 44                 
Correct output: 22                  | Program output: 22                 
Correct output: 9                   | Program output: 9                  
Correct output: 60                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 6                   | Program output: 6                  
Correct output: 46                  | Program output: 46                 
Correct output: 48                  | Program output: 48                 
Correct output: 20                  | Program output: 20                 
Correct output: 15                  | Program output: 15                 
Correct output: 15                  | Program output: 15                 
Correct output: 2                   | Program output: 2                  
Correct output: -88                 | Program output: -88                
Correct output: -63                 | Program output: -63                
Correct output: -89                 | Program output: -89                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -99                 | Program output: -99                
Correct output: -77                 | Program output: -77                
Correct output: -77                 | Program output: -77                
Correct output: -71                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -39                 | Program output: -39                
Correct output: 50                  | Program output: 50                 
Correct output: -80                 | Program output: -80                
Correct output: -65                 | Program output: -65                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -90                 | Program output: -90                
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -50                 | Program output: -50                
Correct output: -100                | Program output: -100               
Correct output: -98                 | Program output: -98                
Correct output: -78                 | Program output: -78                
Correct output: -80                 | Program output: -80                
Correct output: -8                  | Program output: -8                 
Correct output: 16                  | Program output: 16                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 1                  
Correct output: -95                 | Program output: -95                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -14                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -88                
Correct output: -41                 | Program output: -41                
Correct output: -48                 | Program output: -48                
Correct output: -56                 | Program output: -56                
Correct output: -64                 | Program output: -64                
Correct output: -57                 | Program output: -57                
Correct output: -61                 | Program output: -61                
Correct output: -32                 | Program output: -32                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -80                 | Program output: -80                
Correct output: -51                 | Program output: -51                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -45                 | Program output: -45                
Correct output: -36                 | Program output: -36                
Correct output: -16                 | Program output: -16                
Correct output: -25                 | Program output: -25                
Correct output: -74                 | Program output: -74                
Correct output: 39                  | Program output: 39                 
Correct output: -41                 | Program output: -41                
Correct output: 4                   | Program output: 4                  
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -66                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -47                
Correct output: -97                 | Program output: -97                
;;******************************
