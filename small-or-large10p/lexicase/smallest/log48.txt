Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x579dde54 clojush.problems.software.smallest$fn__7461@579dde54] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x6b899971 clojush.instructions.tag$tag_instruction_erc$fn__2160@6b899971] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x7cec3975 clojush.instructions.tag$tagged_instruction_erc$fn__2166@7cec3975] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x7e2a76be clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@7e2a76be]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x417bfebd clojush.problems.software.smallest$smallest_initial_report@417bfebd]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_report@2a4cb8ae]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[66 -82 -82 -82] -82] [[-44 -44 -44 14] -44] [[36 46 46 46] 36] [[77 77 77 12] 12] [[92 -96 -96 -96] -96] [[-38 34 34 34] -38] [[12 90 90 90] 12] [[91 -9 91 91] -9] [[66 66 -89 66] -89] [[-36 -42 -42 -42] -42] [(18 18 18 18) 18] [(70 70 70 70) 70] [(-36 -36 -36 -36) -36] [(12 12 12 12) 12] [(53 53 53 53) 53] [(22 68 44 57) 22] [(85 4 57 73) 4] [(80 89 19 57) 19] [(42 25 44 35) 25] [(84 43 44 47) 43] [(57 91 93 59) 57] [(43 83 77 94) 43] [(82 0 47 76) 0] [(85 5 1 98) 1] [(6 37 17 46) 6] [(72 79 80 82) 72] [(22 88 46 1) 1] [(85 90 24 53) 24] [(43 58 96 32) 32] [(68 30 99 52) 30] [(22 64 99 98) 22] [(95 96 31 88) 31] [(14 88 65 10) 10] [(5 39 28 83) 5] [(85 59 6 91) 6] [(-34 -50 1 34) -50] [(51 51 69 -46) -46] [(-70 -20 88 -41) -70] [(99 -7 85 29) -7] [(22 -70 64 96) -70] [(-16 81 91 -6) -16] [(-3 -92 -12 58) -92] [(-72 -22 42 -57) -72] [(75 80 83 -1) -1] [(69 -94 22 39) -94] [(46 96 20 41) 20] [(-39 -12 -94 -5) -94] [(17 62 -9 68) -9] [(-31 -57 -16 -55) -57] [(73 -95 -91 91) -95] [(-49 -64 22 67) -64] [(-99 -82 25 -92) -99] [(62 -54 -79 -36) -79] [(96 -78 95 -46) -78] [(90 -91 33 81) -91] [(-43 45 39 69) -43] [(71 -9 37 16) -9] [(19 -64 -78 31) -78] [(-40 22 16 84) -40] [(0 49 75 65) 0] [(75 -6 -83 41) -83] [(90 69 72 -25) -25] [(-56 -5 -50 -26) -56] [(-82 -46 74 -44) -82] [(55 100 78 15) 15] [(-90 -62 -60 -89) -90] [(-49 32 -97 36) -97] [(-76 -17 -63 30) -76] [(42 69 -5 -17) -17] [(72 34 -49 68) -49] [(-86 -94 -46 -48) -94] [(-31 63 -74 -41) -74] [(31 97 -41 -92) -92] [(55 59 40 54) 40] [(-55 -31 -93 -47) -93] [(-20 97 95 -83) -83] [(-13 -40 -86 -28) -86] [(23 44 63 -78) -78] [(-25 47 -52 -19) -52] [(71 -68 -92 -4) -92] [(67 87 73 -65) -65] [(-10 62 97 67) -10] [(12 80 -85 -52) -85] [(-75 -2 49 -29) -75] [(-69 -64 -45 42) -69] [(3 69 5 -42) -42] [(-72 -8 60 70) -72] [(48 96 48 2) 2] [(46 10 81 -63) -63] [(60 29 73 50) 29] [(-30 56 97 50) -30] [(64 -87 31 -25) -87] [(85 -58 -100 100) -100] [(70 -25 -58 -57) -58] [(31 -4 49 83) -4])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[66 -82 -82 -82] -82]
Train Case:   6 | Input/Output: [[-44 -44 -44 14] -44]
Train Case:   7 | Input/Output: [[36 46 46 46] 36]
Train Case:   8 | Input/Output: [[77 77 77 12] 12]
Train Case:   9 | Input/Output: [[92 -96 -96 -96] -96]
Train Case:  10 | Input/Output: [[-38 34 34 34] -38]
Train Case:  11 | Input/Output: [[12 90 90 90] 12]
Train Case:  12 | Input/Output: [[91 -9 91 91] -9]
Train Case:  13 | Input/Output: [[66 66 -89 66] -89]
Train Case:  14 | Input/Output: [[-36 -42 -42 -42] -42]
Train Case:  15 | Input/Output: [(18 18 18 18) 18]
Train Case:  16 | Input/Output: [(70 70 70 70) 70]
Train Case:  17 | Input/Output: [(-36 -36 -36 -36) -36]
Train Case:  18 | Input/Output: [(12 12 12 12) 12]
Train Case:  19 | Input/Output: [(53 53 53 53) 53]
Train Case:  20 | Input/Output: [(22 68 44 57) 22]
Train Case:  21 | Input/Output: [(85 4 57 73) 4]
Train Case:  22 | Input/Output: [(80 89 19 57) 19]
Train Case:  23 | Input/Output: [(42 25 44 35) 25]
Train Case:  24 | Input/Output: [(84 43 44 47) 43]
Train Case:  25 | Input/Output: [(57 91 93 59) 57]
Train Case:  26 | Input/Output: [(43 83 77 94) 43]
Train Case:  27 | Input/Output: [(82 0 47 76) 0]
Train Case:  28 | Input/Output: [(85 5 1 98) 1]
Train Case:  29 | Input/Output: [(6 37 17 46) 6]
Train Case:  30 | Input/Output: [(72 79 80 82) 72]
Train Case:  31 | Input/Output: [(22 88 46 1) 1]
Train Case:  32 | Input/Output: [(85 90 24 53) 24]
Train Case:  33 | Input/Output: [(43 58 96 32) 32]
Train Case:  34 | Input/Output: [(68 30 99 52) 30]
Train Case:  35 | Input/Output: [(22 64 99 98) 22]
Train Case:  36 | Input/Output: [(95 96 31 88) 31]
Train Case:  37 | Input/Output: [(14 88 65 10) 10]
Train Case:  38 | Input/Output: [(5 39 28 83) 5]
Train Case:  39 | Input/Output: [(85 59 6 91) 6]
Train Case:  40 | Input/Output: [(-34 -50 1 34) -50]
Train Case:  41 | Input/Output: [(51 51 69 -46) -46]
Train Case:  42 | Input/Output: [(-70 -20 88 -41) -70]
Train Case:  43 | Input/Output: [(99 -7 85 29) -7]
Train Case:  44 | Input/Output: [(22 -70 64 96) -70]
Train Case:  45 | Input/Output: [(-16 81 91 -6) -16]
Train Case:  46 | Input/Output: [(-3 -92 -12 58) -92]
Train Case:  47 | Input/Output: [(-72 -22 42 -57) -72]
Train Case:  48 | Input/Output: [(75 80 83 -1) -1]
Train Case:  49 | Input/Output: [(69 -94 22 39) -94]
Train Case:  50 | Input/Output: [(46 96 20 41) 20]
Train Case:  51 | Input/Output: [(-39 -12 -94 -5) -94]
Train Case:  52 | Input/Output: [(17 62 -9 68) -9]
Train Case:  53 | Input/Output: [(-31 -57 -16 -55) -57]
Train Case:  54 | Input/Output: [(73 -95 -91 91) -95]
Train Case:  55 | Input/Output: [(-49 -64 22 67) -64]
Train Case:  56 | Input/Output: [(-99 -82 25 -92) -99]
Train Case:  57 | Input/Output: [(62 -54 -79 -36) -79]
Train Case:  58 | Input/Output: [(96 -78 95 -46) -78]
Train Case:  59 | Input/Output: [(90 -91 33 81) -91]
Train Case:  60 | Input/Output: [(-43 45 39 69) -43]
Train Case:  61 | Input/Output: [(71 -9 37 16) -9]
Train Case:  62 | Input/Output: [(19 -64 -78 31) -78]
Train Case:  63 | Input/Output: [(-40 22 16 84) -40]
Train Case:  64 | Input/Output: [(0 49 75 65) 0]
Train Case:  65 | Input/Output: [(75 -6 -83 41) -83]
Train Case:  66 | Input/Output: [(90 69 72 -25) -25]
Train Case:  67 | Input/Output: [(-56 -5 -50 -26) -56]
Train Case:  68 | Input/Output: [(-82 -46 74 -44) -82]
Train Case:  69 | Input/Output: [(55 100 78 15) 15]
Train Case:  70 | Input/Output: [(-90 -62 -60 -89) -90]
Train Case:  71 | Input/Output: [(-49 32 -97 36) -97]
Train Case:  72 | Input/Output: [(-76 -17 -63 30) -76]
Train Case:  73 | Input/Output: [(42 69 -5 -17) -17]
Train Case:  74 | Input/Output: [(72 34 -49 68) -49]
Train Case:  75 | Input/Output: [(-86 -94 -46 -48) -94]
Train Case:  76 | Input/Output: [(-31 63 -74 -41) -74]
Train Case:  77 | Input/Output: [(31 97 -41 -92) -92]
Train Case:  78 | Input/Output: [(55 59 40 54) 40]
Train Case:  79 | Input/Output: [(-55 -31 -93 -47) -93]
Train Case:  80 | Input/Output: [(-20 97 95 -83) -83]
Train Case:  81 | Input/Output: [(-13 -40 -86 -28) -86]
Train Case:  82 | Input/Output: [(23 44 63 -78) -78]
Train Case:  83 | Input/Output: [(-25 47 -52 -19) -52]
Train Case:  84 | Input/Output: [(71 -68 -92 -4) -92]
Train Case:  85 | Input/Output: [(67 87 73 -65) -65]
Train Case:  86 | Input/Output: [(-10 62 97 67) -10]
Train Case:  87 | Input/Output: [(12 80 -85 -52) -85]
Train Case:  88 | Input/Output: [(-75 -2 49 -29) -75]
Train Case:  89 | Input/Output: [(-69 -64 -45 42) -69]
Train Case:  90 | Input/Output: [(3 69 5 -42) -42]
Train Case:  91 | Input/Output: [(-72 -8 60 70) -72]
Train Case:  92 | Input/Output: [(48 96 48 2) 2]
Train Case:  93 | Input/Output: [(46 10 81 -63) -63]
Train Case:  94 | Input/Output: [(60 29 73 50) 29]
Train Case:  95 | Input/Output: [(-30 56 97 50) -30]
Train Case:  96 | Input/Output: [(64 -87 31 -25) -87]
Train Case:  97 | Input/Output: [(85 -58 -100 100) -100]
Train Case:  98 | Input/Output: [(70 -25 -58 -57) -58]
Train Case:  99 | Input/Output: [(31 -4 49 83) -4]
Test Case:   0 | Input/Output: [[-58 -58 -58 -79] -79]
Test Case:   1 | Input/Output: [[54 54 54 -43] -43]
Test Case:   2 | Input/Output: [[39 39 39 98] 39]
Test Case:   3 | Input/Output: [[16 -39 16 16] -39]
Test Case:   4 | Input/Output: [[-69 47 47 47] -69]
Test Case:   5 | Input/Output: [[-100 -100 31 -100] -100]
Test Case:   6 | Input/Output: [[51 51 30 51] 30]
Test Case:   7 | Input/Output: [[-33 -33 23 -33] -33]
Test Case:   8 | Input/Output: [[36 -42 -42 -42] -42]
Test Case:   9 | Input/Output: [[52 -6 52 52] -6]
Test Case:  10 | Input/Output: [[25 25 -60 25] -60]
Test Case:  11 | Input/Output: [[87 98 98 98] 87]
Test Case:  12 | Input/Output: [[-77 -64 -64 -64] -77]
Test Case:  13 | Input/Output: [[52 95 52 52] 52]
Test Case:  14 | Input/Output: [[93 12 12 12] 12]
Test Case:  15 | Input/Output: [[-50 -50 -50 -78] -78]
Test Case:  16 | Input/Output: [[97 12 97 97] 12]
Test Case:  17 | Input/Output: [[27 25 25 25] 25]
Test Case:  18 | Input/Output: [[86 59 59 59] 59]
Test Case:  19 | Input/Output: [[-50 -50 -50 95] -50]
Test Case:  20 | Input/Output: [[-74 -74 -74 96] -74]
Test Case:  21 | Input/Output: [[-7 -31 -7 -7] -31]
Test Case:  22 | Input/Output: [[86 83 86 86] 83]
Test Case:  23 | Input/Output: [[33 -88 -88 -88] -88]
Test Case:  24 | Input/Output: [[-4 -94 -4 -4] -94]
Test Case:  25 | Input/Output: [[-90 -90 91 -90] -90]
Test Case:  26 | Input/Output: [[-80 -14 -14 -14] -80]
Test Case:  27 | Input/Output: [[-65 -65 67 -65] -65]
Test Case:  28 | Input/Output: [[91 21 21 21] 21]
Test Case:  29 | Input/Output: [[-19 6 6 6] -19]
Test Case:  30 | Input/Output: [[-99 -99 -99 64] -99]
Test Case:  31 | Input/Output: [[-79 76 -79 -79] -79]
Test Case:  32 | Input/Output: [[-22 -22 51 -22] -22]
Test Case:  33 | Input/Output: [[72 72 72 98] 72]
Test Case:  34 | Input/Output: [[47 47 -4 47] -4]
Test Case:  35 | Input/Output: [[71 62 71 71] 62]
Test Case:  36 | Input/Output: [[21 15 15 15] 15]
Test Case:  37 | Input/Output: [[-83 -83 -83 -6] -83]
Test Case:  38 | Input/Output: [[85 83 85 85] 83]
Test Case:  39 | Input/Output: [[13 -69 -69 -69] -69]
Test Case:  40 | Input/Output: [[-69 -69 -63 -69] -69]
Test Case:  41 | Input/Output: [[-24 -28 -24 -24] -28]
Test Case:  42 | Input/Output: [[-36 -94 -36 -36] -94]
Test Case:  43 | Input/Output: [[33 -23 -23 -23] -23]
Test Case:  44 | Input/Output: [[54 14 54 54] 14]
Test Case:  45 | Input/Output: [[61 12 12 12] 12]
Test Case:  46 | Input/Output: [[-21 -98 -21 -21] -98]
Test Case:  47 | Input/Output: [[-35 34 -35 -35] -35]
Test Case:  48 | Input/Output: [[25 -32 -32 -32] -32]
Test Case:  49 | Input/Output: [[-90 5 -90 -90] -90]
Test Case:  50 | Input/Output: [[-53 -92 -92 -92] -92]
Test Case:  51 | Input/Output: [[84 84 -60 84] -60]
Test Case:  52 | Input/Output: [[68 67 68 68] 67]
Test Case:  53 | Input/Output: [[14 14 86 14] 14]
Test Case:  54 | Input/Output: [[68 68 -86 68] -86]
Test Case:  55 | Input/Output: [[55 55 65 55] 55]
Test Case:  56 | Input/Output: [[62 62 62 -45] -45]
Test Case:  57 | Input/Output: [[48 -85 48 48] -85]
Test Case:  58 | Input/Output: [[41 41 -81 41] -81]
Test Case:  59 | Input/Output: [[-88 -88 -88 -73] -88]
Test Case:  60 | Input/Output: [[-87 -87 -97 -87] -97]
Test Case:  61 | Input/Output: [[-6 -6 -21 -6] -21]
Test Case:  62 | Input/Output: [[74 1 1 1] 1]
Test Case:  63 | Input/Output: [[74 60 74 74] 60]
Test Case:  64 | Input/Output: [[-95 -95 -95 84] -95]
Test Case:  65 | Input/Output: [[-69 -19 -69 -69] -69]
Test Case:  66 | Input/Output: [[23 20 23 23] 20]
Test Case:  67 | Input/Output: [[32 -17 -17 -17] -17]
Test Case:  68 | Input/Output: [[12 12 12 -46] -46]
Test Case:  69 | Input/Output: [[44 6 44 44] 6]
Test Case:  70 | Input/Output: [[-36 -56 -36 -36] -56]
Test Case:  71 | Input/Output: [[-16 -16 40 -16] -16]
Test Case:  72 | Input/Output: [[-81 -81 98 -81] -81]
Test Case:  73 | Input/Output: [[-65 84 -65 -65] -65]
Test Case:  74 | Input/Output: [[52 -26 -26 -26] -26]
Test Case:  75 | Input/Output: [[32 -74 32 32] -74]
Test Case:  76 | Input/Output: [[-58 -58 -58 -86] -86]
Test Case:  77 | Input/Output: [[2 93 2 2] 2]
Test Case:  78 | Input/Output: [[-11 -11 -11 -16] -16]
Test Case:  79 | Input/Output: [[0 0 -18 0] -18]
Test Case:  80 | Input/Output: [[25 25 25 53] 25]
Test Case:  81 | Input/Output: [[62 89 62 62] 62]
Test Case:  82 | Input/Output: [[15 64 64 64] 15]
Test Case:  83 | Input/Output: [[18 -28 -28 -28] -28]
Test Case:  84 | Input/Output: [[-2 -83 -83 -83] -83]
Test Case:  85 | Input/Output: [[-96 -37 -96 -96] -96]
Test Case:  86 | Input/Output: [[15 15 -13 15] -13]
Test Case:  87 | Input/Output: [[-31 -31 -31 54] -31]
Test Case:  88 | Input/Output: [[-91 53 -91 -91] -91]
Test Case:  89 | Input/Output: [[50 50 50 -92] -92]
Test Case:  90 | Input/Output: [[35 -69 35 35] -69]
Test Case:  91 | Input/Output: [[-78 56 56 56] -78]
Test Case:  92 | Input/Output: [[39 85 85 85] 39]
Test Case:  93 | Input/Output: [[89 13 89 89] 13]
Test Case:  94 | Input/Output: [[8 8 21 8] 8]
Test Case:  95 | Input/Output: [[63 63 63 76] 63]
Test Case:  96 | Input/Output: [[86 86 86 28] 28]
Test Case:  97 | Input/Output: [[-43 28 -43 -43] -43]
Test Case:  98 | Input/Output: [[-14 -14 -64 -14] -64]
Test Case:  99 | Input/Output: [[-38 -38 93 -38] -38]
Test Case: 100 | Input/Output: [(74 74 74 74) 74]
Test Case: 101 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 102 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 103 | Input/Output: [(52 52 52 52) 52]
Test Case: 104 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 105 | Input/Output: [(36 36 36 36) 36]
Test Case: 106 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 107 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 108 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 109 | Input/Output: [(95 95 95 95) 95]
Test Case: 110 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 111 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 112 | Input/Output: [(19 19 19 19) 19]
Test Case: 113 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 114 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 115 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 116 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 117 | Input/Output: [(97 97 97 97) 97]
Test Case: 118 | Input/Output: [(11 11 11 11) 11]
Test Case: 119 | Input/Output: [(45 45 45 45) 45]
Test Case: 120 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 121 | Input/Output: [(38 38 38 38) 38]
Test Case: 122 | Input/Output: [(61 61 61 61) 61]
Test Case: 123 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 124 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 125 | Input/Output: [(56 56 56 56) 56]
Test Case: 126 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 127 | Input/Output: [(17 17 17 17) 17]
Test Case: 128 | Input/Output: [(41 41 41 41) 41]
Test Case: 129 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 130 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 131 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 132 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 133 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 134 | Input/Output: [(4 4 4 4) 4]
Test Case: 135 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 136 | Input/Output: [(16 16 16 16) 16]
Test Case: 137 | Input/Output: [(5 5 5 5) 5]
Test Case: 138 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 139 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 140 | Input/Output: [(68 68 68 68) 68]
Test Case: 141 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 142 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 143 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 144 | Input/Output: [(24 24 24 24) 24]
Test Case: 145 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 146 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 147 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 148 | Input/Output: [(91 91 91 91) 91]
Test Case: 149 | Input/Output: [(41 41 41 41) 41]
Test Case: 150 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 151 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 152 | Input/Output: [(43 43 43 43) 43]
Test Case: 153 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 154 | Input/Output: [(2 2 2 2) 2]
Test Case: 155 | Input/Output: [(29 29 29 29) 29]
Test Case: 156 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 157 | Input/Output: [(37 37 37 37) 37]
Test Case: 158 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 159 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 160 | Input/Output: [(30 30 30 30) 30]
Test Case: 161 | Input/Output: [(81 81 81 81) 81]
Test Case: 162 | Input/Output: [(48 48 48 48) 48]
Test Case: 163 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 164 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 165 | Input/Output: [(93 93 93 93) 93]
Test Case: 166 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 167 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 168 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 169 | Input/Output: [(85 85 85 85) 85]
Test Case: 170 | Input/Output: [(54 54 54 54) 54]
Test Case: 171 | Input/Output: [(63 63 63 63) 63]
Test Case: 172 | Input/Output: [(60 60 60 60) 60]
Test Case: 173 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 174 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 175 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 176 | Input/Output: [(92 92 92 92) 92]
Test Case: 177 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 178 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 179 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 180 | Input/Output: [(7 7 7 7) 7]
Test Case: 181 | Input/Output: [(89 89 89 89) 89]
Test Case: 182 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 183 | Input/Output: [(85 85 85 85) 85]
Test Case: 184 | Input/Output: [(35 35 35 35) 35]
Test Case: 185 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 186 | Input/Output: [(40 40 40 40) 40]
Test Case: 187 | Input/Output: [(23 23 23 23) 23]
Test Case: 188 | Input/Output: [(21 21 21 21) 21]
Test Case: 189 | Input/Output: [(87 87 87 87) 87]
Test Case: 190 | Input/Output: [(87 87 87 87) 87]
Test Case: 191 | Input/Output: [(95 95 95 95) 95]
Test Case: 192 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 193 | Input/Output: [(85 85 85 85) 85]
Test Case: 194 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 195 | Input/Output: [(74 74 74 74) 74]
Test Case: 196 | Input/Output: [(20 20 20 20) 20]
Test Case: 197 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 198 | Input/Output: [(0 0 0 0) 0]
Test Case: 199 | Input/Output: [(86 86 86 86) 86]
Test Case: 200 | Input/Output: [(39 45 60 31) 31]
Test Case: 201 | Input/Output: [(9 89 71 19) 9]
Test Case: 202 | Input/Output: [(5 60 8 1) 1]
Test Case: 203 | Input/Output: [(33 63 21 45) 21]
Test Case: 204 | Input/Output: [(65 65 35 43) 35]
Test Case: 205 | Input/Output: [(63 47 83 5) 5]
Test Case: 206 | Input/Output: [(61 90 7 77) 7]
Test Case: 207 | Input/Output: [(78 31 50 82) 31]
Test Case: 208 | Input/Output: [(89 40 16 73) 16]
Test Case: 209 | Input/Output: [(54 68 39 40) 39]
Test Case: 210 | Input/Output: [(80 89 33 73) 33]
Test Case: 211 | Input/Output: [(91 15 59 7) 7]
Test Case: 212 | Input/Output: [(90 5 22 21) 5]
Test Case: 213 | Input/Output: [(38 4 67 54) 4]
Test Case: 214 | Input/Output: [(98 37 38 35) 35]
Test Case: 215 | Input/Output: [(10 92 55 71) 10]
Test Case: 216 | Input/Output: [(90 55 58 51) 51]
Test Case: 217 | Input/Output: [(64 87 1 16) 1]
Test Case: 218 | Input/Output: [(96 97 1 39) 1]
Test Case: 219 | Input/Output: [(28 26 10 15) 10]
Test Case: 220 | Input/Output: [(100 76 6 89) 6]
Test Case: 221 | Input/Output: [(43 49 51 72) 43]
Test Case: 222 | Input/Output: [(100 56 65 31) 31]
Test Case: 223 | Input/Output: [(2 68 46 97) 2]
Test Case: 224 | Input/Output: [(83 42 96 72) 42]
Test Case: 225 | Input/Output: [(44 40 7 72) 7]
Test Case: 226 | Input/Output: [(12 97 91 22) 12]
Test Case: 227 | Input/Output: [(76 30 66 21) 21]
Test Case: 228 | Input/Output: [(77 28 61 100) 28]
Test Case: 229 | Input/Output: [(53 57 60 77) 53]
Test Case: 230 | Input/Output: [(23 11 54 43) 11]
Test Case: 231 | Input/Output: [(81 93 99 28) 28]
Test Case: 232 | Input/Output: [(22 25 20 63) 20]
Test Case: 233 | Input/Output: [(56 66 28 100) 28]
Test Case: 234 | Input/Output: [(0 31 39 75) 0]
Test Case: 235 | Input/Output: [(28 7 17 37) 7]
Test Case: 236 | Input/Output: [(61 92 12 78) 12]
Test Case: 237 | Input/Output: [(90 1 13 53) 1]
Test Case: 238 | Input/Output: [(67 39 15 4) 4]
Test Case: 239 | Input/Output: [(19 51 28 100) 19]
Test Case: 240 | Input/Output: [(60 99 55 34) 34]
Test Case: 241 | Input/Output: [(75 46 89 99) 46]
Test Case: 242 | Input/Output: [(0 75 53 35) 0]
Test Case: 243 | Input/Output: [(78 86 52 98) 52]
Test Case: 244 | Input/Output: [(87 38 0 83) 0]
Test Case: 245 | Input/Output: [(16 38 51 83) 16]
Test Case: 246 | Input/Output: [(40 62 76 30) 30]
Test Case: 247 | Input/Output: [(43 4 28 87) 4]
Test Case: 248 | Input/Output: [(10 53 81 51) 10]
Test Case: 249 | Input/Output: [(25 5 15 35) 5]
Test Case: 250 | Input/Output: [(3 32 74 8) 3]
Test Case: 251 | Input/Output: [(96 31 5 56) 5]
Test Case: 252 | Input/Output: [(11 85 3 96) 3]
Test Case: 253 | Input/Output: [(91 31 72 43) 31]
Test Case: 254 | Input/Output: [(49 100 2 74) 2]
Test Case: 255 | Input/Output: [(46 35 60 55) 35]
Test Case: 256 | Input/Output: [(74 12 6 0) 0]
Test Case: 257 | Input/Output: [(17 72 61 58) 17]
Test Case: 258 | Input/Output: [(12 98 58 99) 12]
Test Case: 259 | Input/Output: [(18 73 51 49) 18]
Test Case: 260 | Input/Output: [(41 85 40 87) 40]
Test Case: 261 | Input/Output: [(40 56 97 7) 7]
Test Case: 262 | Input/Output: [(42 35 47 17) 17]
Test Case: 263 | Input/Output: [(75 24 87 93) 24]
Test Case: 264 | Input/Output: [(45 78 52 24) 24]
Test Case: 265 | Input/Output: [(79 15 4 11) 4]
Test Case: 266 | Input/Output: [(47 36 14 60) 14]
Test Case: 267 | Input/Output: [(14 22 59 40) 14]
Test Case: 268 | Input/Output: [(17 15 56 79) 15]
Test Case: 269 | Input/Output: [(82 86 4 16) 4]
Test Case: 270 | Input/Output: [(66 55 25 88) 25]
Test Case: 271 | Input/Output: [(86 52 78 0) 0]
Test Case: 272 | Input/Output: [(81 38 25 33) 25]
Test Case: 273 | Input/Output: [(5 13 81 40) 5]
Test Case: 274 | Input/Output: [(51 29 32 45) 29]
Test Case: 275 | Input/Output: [(82 98 45 61) 45]
Test Case: 276 | Input/Output: [(11 58 89 14) 11]
Test Case: 277 | Input/Output: [(15 57 1 47) 1]
Test Case: 278 | Input/Output: [(38 92 15 24) 15]
Test Case: 279 | Input/Output: [(99 49 12 45) 12]
Test Case: 280 | Input/Output: [(39 22 22 75) 22]
Test Case: 281 | Input/Output: [(20 56 93 45) 20]
Test Case: 282 | Input/Output: [(18 94 50 43) 18]
Test Case: 283 | Input/Output: [(57 42 9 80) 9]
Test Case: 284 | Input/Output: [(11 64 26 1) 1]
Test Case: 285 | Input/Output: [(53 74 19 31) 19]
Test Case: 286 | Input/Output: [(36 27 0 59) 0]
Test Case: 287 | Input/Output: [(43 47 99 95) 43]
Test Case: 288 | Input/Output: [(84 7 19 85) 7]
Test Case: 289 | Input/Output: [(54 13 68 43) 13]
Test Case: 290 | Input/Output: [(2 8 75 48) 2]
Test Case: 291 | Input/Output: [(76 50 8 66) 8]
Test Case: 292 | Input/Output: [(33 29 99 79) 29]
Test Case: 293 | Input/Output: [(82 10 71 9) 9]
Test Case: 294 | Input/Output: [(61 36 28 73) 28]
Test Case: 295 | Input/Output: [(68 51 44 88) 44]
Test Case: 296 | Input/Output: [(34 67 2 90) 2]
Test Case: 297 | Input/Output: [(4 92 43 45) 4]
Test Case: 298 | Input/Output: [(12 24 52 10) 10]
Test Case: 299 | Input/Output: [(40 32 0 78) 0]
Test Case: 300 | Input/Output: [(80 14 21 73) 14]
Test Case: 301 | Input/Output: [(4 57 32 0) 0]
Test Case: 302 | Input/Output: [(61 28 71 60) 28]
Test Case: 303 | Input/Output: [(91 74 53 56) 53]
Test Case: 304 | Input/Output: [(25 57 28 75) 25]
Test Case: 305 | Input/Output: [(58 50 31 60) 31]
Test Case: 306 | Input/Output: [(8 23 8 84) 8]
Test Case: 307 | Input/Output: [(91 97 37 19) 19]
Test Case: 308 | Input/Output: [(98 27 47 16) 16]
Test Case: 309 | Input/Output: [(73 82 41 25) 25]
Test Case: 310 | Input/Output: [(22 48 9 47) 9]
Test Case: 311 | Input/Output: [(57 22 4 78) 4]
Test Case: 312 | Input/Output: [(40 6 72 76) 6]
Test Case: 313 | Input/Output: [(23 27 10 100) 10]
Test Case: 314 | Input/Output: [(43 62 90 15) 15]
Test Case: 315 | Input/Output: [(81 73 17 70) 17]
Test Case: 316 | Input/Output: [(76 91 68 35) 35]
Test Case: 317 | Input/Output: [(29 25 25 74) 25]
Test Case: 318 | Input/Output: [(97 48 72 68) 48]
Test Case: 319 | Input/Output: [(4 98 17 88) 4]
Test Case: 320 | Input/Output: [(3 38 22 2) 2]
Test Case: 321 | Input/Output: [(18 36 16 24) 16]
Test Case: 322 | Input/Output: [(0 100 56 34) 0]
Test Case: 323 | Input/Output: [(64 47 31 7) 7]
Test Case: 324 | Input/Output: [(58 14 26 88) 14]
Test Case: 325 | Input/Output: [(96 58 52 11) 11]
Test Case: 326 | Input/Output: [(10 30 17 64) 10]
Test Case: 327 | Input/Output: [(57 74 6 74) 6]
Test Case: 328 | Input/Output: [(78 23 11 82) 11]
Test Case: 329 | Input/Output: [(98 93 89 86) 86]
Test Case: 330 | Input/Output: [(74 5 31 4) 4]
Test Case: 331 | Input/Output: [(26 50 100 15) 15]
Test Case: 332 | Input/Output: [(8 53 15 96) 8]
Test Case: 333 | Input/Output: [(70 96 69 8) 8]
Test Case: 334 | Input/Output: [(89 64 33 90) 33]
Test Case: 335 | Input/Output: [(33 44 83 24) 24]
Test Case: 336 | Input/Output: [(47 60 28 88) 28]
Test Case: 337 | Input/Output: [(60 70 96 56) 56]
Test Case: 338 | Input/Output: [(60 87 16 55) 16]
Test Case: 339 | Input/Output: [(2 81 63 4) 2]
Test Case: 340 | Input/Output: [(2 75 72 68) 2]
Test Case: 341 | Input/Output: [(96 69 76 13) 13]
Test Case: 342 | Input/Output: [(30 21 87 76) 21]
Test Case: 343 | Input/Output: [(0 74 6 51) 0]
Test Case: 344 | Input/Output: [(19 61 19 38) 19]
Test Case: 345 | Input/Output: [(81 77 73 73) 73]
Test Case: 346 | Input/Output: [(2 7 67 10) 2]
Test Case: 347 | Input/Output: [(93 32 21 74) 21]
Test Case: 348 | Input/Output: [(53 26 100 34) 26]
Test Case: 349 | Input/Output: [(88 18 21 83) 18]
Test Case: 350 | Input/Output: [(57 14 92 94) 14]
Test Case: 351 | Input/Output: [(51 12 69 50) 12]
Test Case: 352 | Input/Output: [(45 65 7 29) 7]
Test Case: 353 | Input/Output: [(29 51 50 59) 29]
Test Case: 354 | Input/Output: [(84 21 67 80) 21]
Test Case: 355 | Input/Output: [(62 86 58 31) 31]
Test Case: 356 | Input/Output: [(83 47 41 40) 40]
Test Case: 357 | Input/Output: [(71 57 76 85) 57]
Test Case: 358 | Input/Output: [(89 37 56 90) 37]
Test Case: 359 | Input/Output: [(70 24 88 60) 24]
Test Case: 360 | Input/Output: [(10 36 76 59) 10]
Test Case: 361 | Input/Output: [(22 79 8 74) 8]
Test Case: 362 | Input/Output: [(28 14 32 71) 14]
Test Case: 363 | Input/Output: [(90 82 72 83) 72]
Test Case: 364 | Input/Output: [(16 19 88 2) 2]
Test Case: 365 | Input/Output: [(52 78 17 89) 17]
Test Case: 366 | Input/Output: [(20 26 44 86) 20]
Test Case: 367 | Input/Output: [(9 47 81 65) 9]
Test Case: 368 | Input/Output: [(89 32 4 77) 4]
Test Case: 369 | Input/Output: [(62 60 0 23) 0]
Test Case: 370 | Input/Output: [(40 31 96 98) 31]
Test Case: 371 | Input/Output: [(12 68 67 91) 12]
Test Case: 372 | Input/Output: [(58 63 7 98) 7]
Test Case: 373 | Input/Output: [(10 99 3 93) 3]
Test Case: 374 | Input/Output: [(10 42 34 63) 10]
Test Case: 375 | Input/Output: [(32 54 28 100) 28]
Test Case: 376 | Input/Output: [(48 25 82 90) 25]
Test Case: 377 | Input/Output: [(17 98 64 63) 17]
Test Case: 378 | Input/Output: [(17 74 8 60) 8]
Test Case: 379 | Input/Output: [(63 0 61 66) 0]
Test Case: 380 | Input/Output: [(5 95 33 71) 5]
Test Case: 381 | Input/Output: [(44 8 7 100) 7]
Test Case: 382 | Input/Output: [(87 46 64 99) 46]
Test Case: 383 | Input/Output: [(48 21 64 62) 21]
Test Case: 384 | Input/Output: [(5 97 90 91) 5]
Test Case: 385 | Input/Output: [(28 25 83 29) 25]
Test Case: 386 | Input/Output: [(10 52 40 67) 10]
Test Case: 387 | Input/Output: [(42 18 99 19) 18]
Test Case: 388 | Input/Output: [(52 67 93 55) 52]
Test Case: 389 | Input/Output: [(10 39 95 0) 0]
Test Case: 390 | Input/Output: [(13 59 37 21) 13]
Test Case: 391 | Input/Output: [(50 14 18 95) 14]
Test Case: 392 | Input/Output: [(0 72 41 1) 0]
Test Case: 393 | Input/Output: [(73 52 42 45) 42]
Test Case: 394 | Input/Output: [(84 98 39 14) 14]
Test Case: 395 | Input/Output: [(54 20 18 17) 17]
Test Case: 396 | Input/Output: [(18 52 90 54) 18]
Test Case: 397 | Input/Output: [(58 81 3 55) 3]
Test Case: 398 | Input/Output: [(35 41 49 83) 35]
Test Case: 399 | Input/Output: [(71 3 90 7) 3]
Test Case: 400 | Input/Output: [(39 -98 -70 -55) -98]
Test Case: 401 | Input/Output: [(-91 25 -80 -68) -91]
Test Case: 402 | Input/Output: [(13 -41 73 69) -41]
Test Case: 403 | Input/Output: [(45 -78 -2 -80) -80]
Test Case: 404 | Input/Output: [(23 69 -68 -67) -68]
Test Case: 405 | Input/Output: [(-31 93 -90 98) -90]
Test Case: 406 | Input/Output: [(7 -40 -22 73) -40]
Test Case: 407 | Input/Output: [(56 7 20 95) 7]
Test Case: 408 | Input/Output: [(-54 1 -77 -80) -80]
Test Case: 409 | Input/Output: [(34 -35 34 39) -35]
Test Case: 410 | Input/Output: [(1 31 -96 79) -96]
Test Case: 411 | Input/Output: [(-44 90 3 28) -44]
Test Case: 412 | Input/Output: [(100 -71 -98 56) -98]
Test Case: 413 | Input/Output: [(-70 86 -47 89) -70]
Test Case: 414 | Input/Output: [(-78 -65 93 36) -78]
Test Case: 415 | Input/Output: [(-62 -71 2 48) -71]
Test Case: 416 | Input/Output: [(47 -75 -80 96) -80]
Test Case: 417 | Input/Output: [(68 -91 -92 12) -92]
Test Case: 418 | Input/Output: [(11 -69 -48 -82) -82]
Test Case: 419 | Input/Output: [(69 -70 47 11) -70]
Test Case: 420 | Input/Output: [(-48 -39 59 51) -48]
Test Case: 421 | Input/Output: [(12 85 52 94) 12]
Test Case: 422 | Input/Output: [(4 77 27 -34) -34]
Test Case: 423 | Input/Output: [(41 -55 -48 64) -55]
Test Case: 424 | Input/Output: [(-43 38 93 72) -43]
Test Case: 425 | Input/Output: [(59 -9 -78 -22) -78]
Test Case: 426 | Input/Output: [(7 -5 38 91) -5]
Test Case: 427 | Input/Output: [(29 -58 95 16) -58]
Test Case: 428 | Input/Output: [(-90 -26 -19 75) -90]
Test Case: 429 | Input/Output: [(74 -50 3 40) -50]
Test Case: 430 | Input/Output: [(1 -2 96 81) -2]
Test Case: 431 | Input/Output: [(82 2 51 20) 2]
Test Case: 432 | Input/Output: [(-27 -88 -90 15) -90]
Test Case: 433 | Input/Output: [(45 -23 -32 -73) -73]
Test Case: 434 | Input/Output: [(-58 19 -58 14) -58]
Test Case: 435 | Input/Output: [(-11 -20 -56 75) -56]
Test Case: 436 | Input/Output: [(97 27 -100 -2) -100]
Test Case: 437 | Input/Output: [(33 81 1 26) 1]
Test Case: 438 | Input/Output: [(-52 33 -51 30) -52]
Test Case: 439 | Input/Output: [(-93 16 -37 -97) -97]
Test Case: 440 | Input/Output: [(-76 -91 97 -39) -91]
Test Case: 441 | Input/Output: [(-50 53 -55 66) -55]
Test Case: 442 | Input/Output: [(21 -75 -88 47) -88]
Test Case: 443 | Input/Output: [(-79 12 -17 -84) -84]
Test Case: 444 | Input/Output: [(55 -59 -56 77) -59]
Test Case: 445 | Input/Output: [(96 -7 -64 -100) -100]
Test Case: 446 | Input/Output: [(52 -43 -61 -17) -61]
Test Case: 447 | Input/Output: [(20 96 -93 29) -93]
Test Case: 448 | Input/Output: [(-49 77 64 -76) -76]
Test Case: 449 | Input/Output: [(6 -29 53 -22) -29]
Test Case: 450 | Input/Output: [(-95 48 50 80) -95]
Test Case: 451 | Input/Output: [(88 55 87 5) 5]
Test Case: 452 | Input/Output: [(-86 29 54 92) -86]
Test Case: 453 | Input/Output: [(-78 20 76 86) -78]
Test Case: 454 | Input/Output: [(36 -93 22 44) -93]
Test Case: 455 | Input/Output: [(59 87 53 -49) -49]
Test Case: 456 | Input/Output: [(12 44 -34 -24) -34]
Test Case: 457 | Input/Output: [(-28 -69 43 -91) -91]
Test Case: 458 | Input/Output: [(-62 85 24 79) -62]
Test Case: 459 | Input/Output: [(58 42 23 75) 23]
Test Case: 460 | Input/Output: [(23 73 98 36) 23]
Test Case: 461 | Input/Output: [(10 -9 -1 -100) -100]
Test Case: 462 | Input/Output: [(-5 -48 -83 17) -83]
Test Case: 463 | Input/Output: [(-33 -15 -76 9) -76]
Test Case: 464 | Input/Output: [(-91 88 -63 -56) -91]
Test Case: 465 | Input/Output: [(-32 -3 57 78) -32]
Test Case: 466 | Input/Output: [(-4 15 55 85) -4]
Test Case: 467 | Input/Output: [(-55 66 34 -3) -55]
Test Case: 468 | Input/Output: [(-59 -18 -66 -44) -66]
Test Case: 469 | Input/Output: [(-7 77 -36 86) -36]
Test Case: 470 | Input/Output: [(-2 -59 -100 90) -100]
Test Case: 471 | Input/Output: [(-48 -35 56 -2) -48]
Test Case: 472 | Input/Output: [(-68 24 38 -100) -100]
Test Case: 473 | Input/Output: [(4 66 64 -59) -59]
Test Case: 474 | Input/Output: [(-25 -26 44 -18) -26]
Test Case: 475 | Input/Output: [(89 -79 7 -16) -79]
Test Case: 476 | Input/Output: [(-13 76 -92 -49) -92]
Test Case: 477 | Input/Output: [(-71 26 -51 -16) -71]
Test Case: 478 | Input/Output: [(-34 -31 18 67) -34]
Test Case: 479 | Input/Output: [(-29 50 -83 21) -83]
Test Case: 480 | Input/Output: [(-8 -67 11 -33) -67]
Test Case: 481 | Input/Output: [(97 14 86 -91) -91]
Test Case: 482 | Input/Output: [(2 -41 -62 -86) -86]
Test Case: 483 | Input/Output: [(-50 38 -92 6) -92]
Test Case: 484 | Input/Output: [(-75 11 -5 -9) -75]
Test Case: 485 | Input/Output: [(56 -83 -71 -60) -83]
Test Case: 486 | Input/Output: [(-80 100 31 92) -80]
Test Case: 487 | Input/Output: [(6 -23 -81 78) -81]
Test Case: 488 | Input/Output: [(89 28 97 42) 28]
Test Case: 489 | Input/Output: [(-20 47 2 63) -20]
Test Case: 490 | Input/Output: [(-10 84 -11 77) -11]
Test Case: 491 | Input/Output: [(-53 50 57 -71) -71]
Test Case: 492 | Input/Output: [(-54 28 -37 41) -54]
Test Case: 493 | Input/Output: [(3 11 88 -40) -40]
Test Case: 494 | Input/Output: [(17 -29 100 30) -29]
Test Case: 495 | Input/Output: [(-17 30 26 -3) -17]
Test Case: 496 | Input/Output: [(-24 17 25 -29) -29]
Test Case: 497 | Input/Output: [(44 63 4 -86) -86]
Test Case: 498 | Input/Output: [(81 -89 68 63) -89]
Test Case: 499 | Input/Output: [(-84 -59 -21 82) -84]
Test Case: 500 | Input/Output: [(-11 -4 29 33) -11]
Test Case: 501 | Input/Output: [(-67 -28 38 -78) -78]
Test Case: 502 | Input/Output: [(-35 96 -8 -49) -49]
Test Case: 503 | Input/Output: [(83 -80 -14 -11) -80]
Test Case: 504 | Input/Output: [(3 -5 -21 -37) -37]
Test Case: 505 | Input/Output: [(-97 19 -31 29) -97]
Test Case: 506 | Input/Output: [(27 60 57 87) 27]
Test Case: 507 | Input/Output: [(33 -54 5 -40) -54]
Test Case: 508 | Input/Output: [(-9 3 21 -98) -98]
Test Case: 509 | Input/Output: [(37 -92 -39 -90) -92]
Test Case: 510 | Input/Output: [(-90 -95 71 -52) -95]
Test Case: 511 | Input/Output: [(-56 30 -90 69) -90]
Test Case: 512 | Input/Output: [(18 16 100 -33) -33]
Test Case: 513 | Input/Output: [(-7 78 -42 50) -42]
Test Case: 514 | Input/Output: [(49 21 16 8) 8]
Test Case: 515 | Input/Output: [(-51 4 43 17) -51]
Test Case: 516 | Input/Output: [(19 61 16 28) 16]
Test Case: 517 | Input/Output: [(4 93 86 -93) -93]
Test Case: 518 | Input/Output: [(-44 -50 -22 72) -50]
Test Case: 519 | Input/Output: [(-82 84 -28 20) -82]
Test Case: 520 | Input/Output: [(-37 -77 100 -59) -77]
Test Case: 521 | Input/Output: [(40 54 -15 -39) -39]
Test Case: 522 | Input/Output: [(75 -78 -45 8) -78]
Test Case: 523 | Input/Output: [(27 -41 -10 -87) -87]
Test Case: 524 | Input/Output: [(-89 -2 -21 -3) -89]
Test Case: 525 | Input/Output: [(-97 37 -92 2) -97]
Test Case: 526 | Input/Output: [(31 78 58 68) 31]
Test Case: 527 | Input/Output: [(38 -45 58 -62) -62]
Test Case: 528 | Input/Output: [(-19 62 -88 45) -88]
Test Case: 529 | Input/Output: [(1 -61 -3 -87) -87]
Test Case: 530 | Input/Output: [(62 81 39 -33) -33]
Test Case: 531 | Input/Output: [(-78 98 97 -6) -78]
Test Case: 532 | Input/Output: [(-63 -53 -3 5) -63]
Test Case: 533 | Input/Output: [(-100 53 70 21) -100]
Test Case: 534 | Input/Output: [(45 -58 -23 -61) -61]
Test Case: 535 | Input/Output: [(-7 -75 73 92) -75]
Test Case: 536 | Input/Output: [(-74 -84 -57 86) -84]
Test Case: 537 | Input/Output: [(31 86 4 -43) -43]
Test Case: 538 | Input/Output: [(-18 -22 55 67) -22]
Test Case: 539 | Input/Output: [(-66 -28 61 -92) -92]
Test Case: 540 | Input/Output: [(91 -15 -5 77) -15]
Test Case: 541 | Input/Output: [(11 57 96 78) 11]
Test Case: 542 | Input/Output: [(60 50 99 -30) -30]
Test Case: 543 | Input/Output: [(91 -9 59 -70) -70]
Test Case: 544 | Input/Output: [(28 60 -9 71) -9]
Test Case: 545 | Input/Output: [(96 10 30 91) 10]
Test Case: 546 | Input/Output: [(-25 37 -10 -49) -49]
Test Case: 547 | Input/Output: [(65 -67 -86 99) -86]
Test Case: 548 | Input/Output: [(-73 -31 -71 -73) -73]
Test Case: 549 | Input/Output: [(-97 -35 -27 52) -97]
Test Case: 550 | Input/Output: [(-41 -92 -37 90) -92]
Test Case: 551 | Input/Output: [(-66 52 35 28) -66]
Test Case: 552 | Input/Output: [(-78 48 -25 -69) -78]
Test Case: 553 | Input/Output: [(-46 -99 -65 -75) -99]
Test Case: 554 | Input/Output: [(-29 -30 -3 -88) -88]
Test Case: 555 | Input/Output: [(56 86 86 -1) -1]
Test Case: 556 | Input/Output: [(58 -14 -26 80) -26]
Test Case: 557 | Input/Output: [(82 -26 -100 4) -100]
Test Case: 558 | Input/Output: [(81 19 -99 -31) -99]
Test Case: 559 | Input/Output: [(-1 0 81 84) -1]
Test Case: 560 | Input/Output: [(-61 55 -60 -62) -62]
Test Case: 561 | Input/Output: [(43 61 -98 46) -98]
Test Case: 562 | Input/Output: [(91 -77 87 -92) -92]
Test Case: 563 | Input/Output: [(-19 70 71 13) -19]
Test Case: 564 | Input/Output: [(23 8 -10 79) -10]
Test Case: 565 | Input/Output: [(2 -95 -76 -42) -95]
Test Case: 566 | Input/Output: [(68 6 25 -81) -81]
Test Case: 567 | Input/Output: [(80 -96 -66 -35) -96]
Test Case: 568 | Input/Output: [(31 14 -43 57) -43]
Test Case: 569 | Input/Output: [(31 92 28 -28) -28]
Test Case: 570 | Input/Output: [(34 0 40 -24) -24]
Test Case: 571 | Input/Output: [(9 89 25 51) 9]
Test Case: 572 | Input/Output: [(6 0 -9 80) -9]
Test Case: 573 | Input/Output: [(-45 11 -97 2) -97]
Test Case: 574 | Input/Output: [(-74 -98 -45 -81) -98]
Test Case: 575 | Input/Output: [(61 89 -77 -92) -92]
Test Case: 576 | Input/Output: [(71 27 37 -25) -25]
Test Case: 577 | Input/Output: [(38 54 -70 -87) -87]
Test Case: 578 | Input/Output: [(-50 -56 57 -98) -98]
Test Case: 579 | Input/Output: [(6 81 -25 81) -25]
Test Case: 580 | Input/Output: [(-25 -78 -87 -20) -87]
Test Case: 581 | Input/Output: [(74 6 -37 -47) -47]
Test Case: 582 | Input/Output: [(-63 22 -48 -76) -76]
Test Case: 583 | Input/Output: [(32 53 -72 45) -72]
Test Case: 584 | Input/Output: [(92 46 -23 20) -23]
Test Case: 585 | Input/Output: [(-68 -61 24 8) -68]
Test Case: 586 | Input/Output: [(82 38 37 38) 37]
Test Case: 587 | Input/Output: [(-43 -2 -46 47) -46]
Test Case: 588 | Input/Output: [(10 36 30 71) 10]
Test Case: 589 | Input/Output: [(-45 6 59 5) -45]
Test Case: 590 | Input/Output: [(86 -35 -77 56) -77]
Test Case: 591 | Input/Output: [(-51 48 -84 9) -84]
Test Case: 592 | Input/Output: [(83 80 65 78) 65]
Test Case: 593 | Input/Output: [(-95 29 -96 37) -96]
Test Case: 594 | Input/Output: [(15 -44 -91 -7) -91]
Test Case: 595 | Input/Output: [(-82 -14 -97 -43) -97]
Test Case: 596 | Input/Output: [(60 62 -49 -13) -49]
Test Case: 597 | Input/Output: [(87 45 29 4) 4]
Test Case: 598 | Input/Output: [(22 -3 28 -24) -24]
Test Case: 599 | Input/Output: [(-63 -74 -56 57) -74]
Test Case: 600 | Input/Output: [(-82 15 -1 -33) -82]
Test Case: 601 | Input/Output: [(27 73 67 61) 27]
Test Case: 602 | Input/Output: [(70 -43 -38 31) -43]
Test Case: 603 | Input/Output: [(15 -48 -39 -83) -83]
Test Case: 604 | Input/Output: [(88 -68 -43 -81) -81]
Test Case: 605 | Input/Output: [(72 25 -92 14) -92]
Test Case: 606 | Input/Output: [(-66 8 64 -18) -66]
Test Case: 607 | Input/Output: [(-27 6 -98 6) -98]
Test Case: 608 | Input/Output: [(73 27 -94 61) -94]
Test Case: 609 | Input/Output: [(55 -29 64 -37) -37]
Test Case: 610 | Input/Output: [(-52 54 11 -56) -56]
Test Case: 611 | Input/Output: [(37 -54 36 -24) -54]
Test Case: 612 | Input/Output: [(21 56 71 -18) -18]
Test Case: 613 | Input/Output: [(-68 92 40 30) -68]
Test Case: 614 | Input/Output: [(92 87 -24 72) -24]
Test Case: 615 | Input/Output: [(-71 -99 -93 -6) -99]
Test Case: 616 | Input/Output: [(8 -53 -37 -58) -58]
Test Case: 617 | Input/Output: [(73 100 41 -68) -68]
Test Case: 618 | Input/Output: [(-72 -82 73 98) -82]
Test Case: 619 | Input/Output: [(-83 57 52 53) -83]
Test Case: 620 | Input/Output: [(-5 31 9 -50) -50]
Test Case: 621 | Input/Output: [(1 94 -6 -86) -86]
Test Case: 622 | Input/Output: [(99 16 79 -52) -52]
Test Case: 623 | Input/Output: [(5 85 26 89) 5]
Test Case: 624 | Input/Output: [(47 91 74 70) 47]
Test Case: 625 | Input/Output: [(-29 -72 -95 -20) -95]
Test Case: 626 | Input/Output: [(-77 37 -85 94) -85]
Test Case: 627 | Input/Output: [(100 -67 59 77) -67]
Test Case: 628 | Input/Output: [(-27 41 80 49) -27]
Test Case: 629 | Input/Output: [(54 -31 49 -51) -51]
Test Case: 630 | Input/Output: [(-19 43 57 -18) -19]
Test Case: 631 | Input/Output: [(-75 12 33 -33) -75]
Test Case: 632 | Input/Output: [(96 -71 -63 58) -71]
Test Case: 633 | Input/Output: [(-91 48 -44 21) -91]
Test Case: 634 | Input/Output: [(-86 30 17 -14) -86]
Test Case: 635 | Input/Output: [(22 5 26 -72) -72]
Test Case: 636 | Input/Output: [(-75 -38 90 -76) -76]
Test Case: 637 | Input/Output: [(-87 95 75 50) -87]
Test Case: 638 | Input/Output: [(-17 -75 60 81) -75]
Test Case: 639 | Input/Output: [(85 18 -85 -43) -85]
Test Case: 640 | Input/Output: [(-28 -9 62 -89) -89]
Test Case: 641 | Input/Output: [(81 -65 -23 3) -65]
Test Case: 642 | Input/Output: [(-57 73 93 34) -57]
Test Case: 643 | Input/Output: [(12 83 -53 82) -53]
Test Case: 644 | Input/Output: [(-30 -24 85 -8) -30]
Test Case: 645 | Input/Output: [(-32 1 38 64) -32]
Test Case: 646 | Input/Output: [(-7 -21 -35 -19) -35]
Test Case: 647 | Input/Output: [(59 -76 70 -32) -76]
Test Case: 648 | Input/Output: [(-32 -20 35 12) -32]
Test Case: 649 | Input/Output: [(-95 -88 -92 61) -95]
Test Case: 650 | Input/Output: [(38 74 -85 18) -85]
Test Case: 651 | Input/Output: [(81 -33 -77 82) -77]
Test Case: 652 | Input/Output: [(-86 71 42 -89) -89]
Test Case: 653 | Input/Output: [(-13 100 -94 72) -94]
Test Case: 654 | Input/Output: [(-93 33 91 -3) -93]
Test Case: 655 | Input/Output: [(-84 25 63 17) -84]
Test Case: 656 | Input/Output: [(-90 30 -99 -83) -99]
Test Case: 657 | Input/Output: [(-100 -61 71 -29) -100]
Test Case: 658 | Input/Output: [(-36 73 -76 79) -76]
Test Case: 659 | Input/Output: [(63 85 47 -14) -14]
Test Case: 660 | Input/Output: [(-1 -45 63 85) -45]
Test Case: 661 | Input/Output: [(-57 65 -18 39) -57]
Test Case: 662 | Input/Output: [(34 -72 -100 24) -100]
Test Case: 663 | Input/Output: [(-67 50 -25 29) -67]
Test Case: 664 | Input/Output: [(40 0 -21 -40) -40]
Test Case: 665 | Input/Output: [(-40 -20 80 11) -40]
Test Case: 666 | Input/Output: [(-8 -56 -11 -56) -56]
Test Case: 667 | Input/Output: [(41 -54 14 -74) -74]
Test Case: 668 | Input/Output: [(-43 28 33 12) -43]
Test Case: 669 | Input/Output: [(-68 -58 -94 77) -94]
Test Case: 670 | Input/Output: [(80 -21 -71 93) -71]
Test Case: 671 | Input/Output: [(-3 22 94 -9) -9]
Test Case: 672 | Input/Output: [(-94 -51 77 70) -94]
Test Case: 673 | Input/Output: [(21 -9 100 -80) -80]
Test Case: 674 | Input/Output: [(-60 -23 -39 69) -60]
Test Case: 675 | Input/Output: [(24 -99 -14 -6) -99]
Test Case: 676 | Input/Output: [(-4 -90 90 53) -90]
Test Case: 677 | Input/Output: [(-23 -59 39 42) -59]
Test Case: 678 | Input/Output: [(66 75 1 -55) -55]
Test Case: 679 | Input/Output: [(-2 56 10 1) -2]
Test Case: 680 | Input/Output: [(-25 -38 12 92) -38]
Test Case: 681 | Input/Output: [(4 65 6 46) 4]
Test Case: 682 | Input/Output: [(-51 -10 76 42) -51]
Test Case: 683 | Input/Output: [(-55 -73 74 79) -73]
Test Case: 684 | Input/Output: [(-16 4 -17 4) -17]
Test Case: 685 | Input/Output: [(-21 -90 17 -61) -90]
Test Case: 686 | Input/Output: [(3 9 51 -25) -25]
Test Case: 687 | Input/Output: [(-34 92 40 -10) -34]
Test Case: 688 | Input/Output: [(-59 52 68 -30) -59]
Test Case: 689 | Input/Output: [(55 23 93 53) 23]
Test Case: 690 | Input/Output: [(-40 -81 -97 -98) -98]
Test Case: 691 | Input/Output: [(50 54 -7 56) -7]
Test Case: 692 | Input/Output: [(-38 -12 -99 91) -99]
Test Case: 693 | Input/Output: [(18 -49 -90 -62) -90]
Test Case: 694 | Input/Output: [(81 -55 29 -46) -55]
Test Case: 695 | Input/Output: [(-59 68 0 -49) -59]
Test Case: 696 | Input/Output: [(72 78 -6 -94) -94]
Test Case: 697 | Input/Output: [(18 -94 36 78) -94]
Test Case: 698 | Input/Output: [(-90 69 27 -4) -90]
Test Case: 699 | Input/Output: [(83 69 -11 -58) -58]
Test Case: 700 | Input/Output: [(14 49 76 0) 0]
Test Case: 701 | Input/Output: [(95 64 -54 62) -54]
Test Case: 702 | Input/Output: [(73 36 71 -28) -28]
Test Case: 703 | Input/Output: [(46 100 -77 79) -77]
Test Case: 704 | Input/Output: [(-27 69 59 99) -27]
Test Case: 705 | Input/Output: [(-64 22 83 5) -64]
Test Case: 706 | Input/Output: [(4 5 -62 -38) -62]
Test Case: 707 | Input/Output: [(-13 25 -9 -61) -61]
Test Case: 708 | Input/Output: [(-86 -14 60 -94) -94]
Test Case: 709 | Input/Output: [(-35 0 9 -42) -42]
Test Case: 710 | Input/Output: [(24 65 86 -45) -45]
Test Case: 711 | Input/Output: [(23 -51 -99 -41) -99]
Test Case: 712 | Input/Output: [(2 -57 88 88) -57]
Test Case: 713 | Input/Output: [(26 31 -12 81) -12]
Test Case: 714 | Input/Output: [(41 1 -59 79) -59]
Test Case: 715 | Input/Output: [(-3 16 66 -36) -36]
Test Case: 716 | Input/Output: [(21 -35 -94 32) -94]
Test Case: 717 | Input/Output: [(70 -45 -90 -61) -90]
Test Case: 718 | Input/Output: [(-31 11 43 53) -31]
Test Case: 719 | Input/Output: [(-7 5 -85 66) -85]
Test Case: 720 | Input/Output: [(45 43 -78 68) -78]
Test Case: 721 | Input/Output: [(-34 -78 86 87) -78]
Test Case: 722 | Input/Output: [(-71 -56 54 46) -71]
Test Case: 723 | Input/Output: [(-74 -95 17 -26) -95]
Test Case: 724 | Input/Output: [(11 -81 -46 70) -81]
Test Case: 725 | Input/Output: [(33 77 98 15) 15]
Test Case: 726 | Input/Output: [(-66 -100 -18 -43) -100]
Test Case: 727 | Input/Output: [(-15 -27 -81 36) -81]
Test Case: 728 | Input/Output: [(-16 18 -49 -84) -84]
Test Case: 729 | Input/Output: [(40 -51 24 6) -51]
Test Case: 730 | Input/Output: [(-31 20 -40 72) -40]
Test Case: 731 | Input/Output: [(93 -1 -97 52) -97]
Test Case: 732 | Input/Output: [(-6 44 91 -51) -51]
Test Case: 733 | Input/Output: [(71 -74 10 -47) -74]
Test Case: 734 | Input/Output: [(63 58 87 -43) -43]
Test Case: 735 | Input/Output: [(87 75 98 -25) -25]
Test Case: 736 | Input/Output: [(40 -34 84 -93) -93]
Test Case: 737 | Input/Output: [(-32 -38 24 58) -38]
Test Case: 738 | Input/Output: [(-2 29 75 -79) -79]
Test Case: 739 | Input/Output: [(5 41 -19 29) -19]
Test Case: 740 | Input/Output: [(-69 62 -92 41) -92]
Test Case: 741 | Input/Output: [(-37 54 -92 -10) -92]
Test Case: 742 | Input/Output: [(-2 -100 -24 -72) -100]
Test Case: 743 | Input/Output: [(-63 31 -61 -24) -63]
Test Case: 744 | Input/Output: [(-7 -18 -49 -33) -49]
Test Case: 745 | Input/Output: [(93 -57 -42 -62) -62]
Test Case: 746 | Input/Output: [(49 -63 12 37) -63]
Test Case: 747 | Input/Output: [(-87 -15 92 -88) -88]
Test Case: 748 | Input/Output: [(25 -56 45 -9) -56]
Test Case: 749 | Input/Output: [(-8 -41 29 92) -41]
Test Case: 750 | Input/Output: [(59 -19 -91 71) -91]
Test Case: 751 | Input/Output: [(-31 40 14 -26) -31]
Test Case: 752 | Input/Output: [(52 -3 41 -15) -15]
Test Case: 753 | Input/Output: [(39 76 40 -11) -11]
Test Case: 754 | Input/Output: [(-1 -4 -69 -26) -69]
Test Case: 755 | Input/Output: [(-3 63 46 -71) -71]
Test Case: 756 | Input/Output: [(62 -35 30 -45) -45]
Test Case: 757 | Input/Output: [(54 25 -11 -1) -11]
Test Case: 758 | Input/Output: [(-21 17 -91 35) -91]
Test Case: 759 | Input/Output: [(72 -34 96 37) -34]
Test Case: 760 | Input/Output: [(-44 -95 3 43) -95]
Test Case: 761 | Input/Output: [(8 82 93 3) 3]
Test Case: 762 | Input/Output: [(-97 -39 -48 -71) -97]
Test Case: 763 | Input/Output: [(-33 -39 95 -49) -49]
Test Case: 764 | Input/Output: [(18 49 31 84) 18]
Test Case: 765 | Input/Output: [(91 -4 57 -58) -58]
Test Case: 766 | Input/Output: [(54 -48 4 -98) -98]
Test Case: 767 | Input/Output: [(-73 -61 -100 -1) -100]
Test Case: 768 | Input/Output: [(42 -13 95 67) -13]
Test Case: 769 | Input/Output: [(-53 75 -6 -83) -83]
Test Case: 770 | Input/Output: [(-59 -40 74 -64) -64]
Test Case: 771 | Input/Output: [(61 29 73 -29) -29]
Test Case: 772 | Input/Output: [(-80 -37 -8 55) -80]
Test Case: 773 | Input/Output: [(-66 -25 -51 25) -66]
Test Case: 774 | Input/Output: [(-58 76 34 24) -58]
Test Case: 775 | Input/Output: [(-88 -95 82 69) -95]
Test Case: 776 | Input/Output: [(-87 -74 41 -15) -87]
Test Case: 777 | Input/Output: [(-71 49 -46 93) -71]
Test Case: 778 | Input/Output: [(42 21 -3 89) -3]
Test Case: 779 | Input/Output: [(-43 61 6 36) -43]
Test Case: 780 | Input/Output: [(-46 68 55 -50) -50]
Test Case: 781 | Input/Output: [(-48 4 -93 -66) -93]
Test Case: 782 | Input/Output: [(37 81 -82 38) -82]
Test Case: 783 | Input/Output: [(-38 68 -87 -91) -91]
Test Case: 784 | Input/Output: [(-80 37 10 8) -80]
Test Case: 785 | Input/Output: [(-1 63 88 22) -1]
Test Case: 786 | Input/Output: [(73 51 91 -87) -87]
Test Case: 787 | Input/Output: [(16 -25 24 -33) -33]
Test Case: 788 | Input/Output: [(-72 -77 22 4) -77]
Test Case: 789 | Input/Output: [(-67 -70 8 -90) -90]
Test Case: 790 | Input/Output: [(26 -65 -13 91) -65]
Test Case: 791 | Input/Output: [(71 43 -12 11) -12]
Test Case: 792 | Input/Output: [(-57 -41 90 -25) -57]
Test Case: 793 | Input/Output: [(47 -13 -41 76) -41]
Test Case: 794 | Input/Output: [(-94 89 -6 18) -94]
Test Case: 795 | Input/Output: [(61 -4 100 -44) -44]
Test Case: 796 | Input/Output: [(-99 10 47 -97) -99]
Test Case: 797 | Input/Output: [(-7 0 100 95) -7]
Test Case: 798 | Input/Output: [(86 46 53 33) 33]
Test Case: 799 | Input/Output: [(86 -4 93 33) -4]
Test Case: 800 | Input/Output: [(26 -78 38 -39) -78]
Test Case: 801 | Input/Output: [(96 -44 -9 -40) -44]
Test Case: 802 | Input/Output: [(-68 29 -93 -34) -93]
Test Case: 803 | Input/Output: [(-37 28 46 11) -37]
Test Case: 804 | Input/Output: [(82 -71 -73 -39) -73]
Test Case: 805 | Input/Output: [(-31 -45 -14 45) -45]
Test Case: 806 | Input/Output: [(92 -21 -49 39) -49]
Test Case: 807 | Input/Output: [(43 -89 1 33) -89]
Test Case: 808 | Input/Output: [(23 -42 -31 13) -42]
Test Case: 809 | Input/Output: [(28 35 -12 70) -12]
Test Case: 810 | Input/Output: [(-53 -95 -24 -42) -95]
Test Case: 811 | Input/Output: [(57 45 -46 -90) -90]
Test Case: 812 | Input/Output: [(-92 -72 56 95) -92]
Test Case: 813 | Input/Output: [(-86 61 -23 -58) -86]
Test Case: 814 | Input/Output: [(74 -18 -70 40) -70]
Test Case: 815 | Input/Output: [(65 -41 -52 -3) -52]
Test Case: 816 | Input/Output: [(43 65 27 -88) -88]
Test Case: 817 | Input/Output: [(-50 15 -65 -83) -83]
Test Case: 818 | Input/Output: [(-21 -37 -76 53) -76]
Test Case: 819 | Input/Output: [(-96 25 -22 -60) -96]
Test Case: 820 | Input/Output: [(34 -58 33 92) -58]
Test Case: 821 | Input/Output: [(0 -89 32 -80) -89]
Test Case: 822 | Input/Output: [(-7 48 -47 -93) -93]
Test Case: 823 | Input/Output: [(55 9 93 56) 9]
Test Case: 824 | Input/Output: [(-53 -70 100 -82) -82]
Test Case: 825 | Input/Output: [(-17 24 11 51) -17]
Test Case: 826 | Input/Output: [(-82 70 -26 12) -82]
Test Case: 827 | Input/Output: [(64 -87 -15 39) -87]
Test Case: 828 | Input/Output: [(-12 27 11 67) -12]
Test Case: 829 | Input/Output: [(19 88 -14 -25) -25]
Test Case: 830 | Input/Output: [(26 82 -27 61) -27]
Test Case: 831 | Input/Output: [(18 35 -49 -74) -74]
Test Case: 832 | Input/Output: [(76 37 86 63) 37]
Test Case: 833 | Input/Output: [(88 11 -88 -22) -88]
Test Case: 834 | Input/Output: [(63 3 80 17) 3]
Test Case: 835 | Input/Output: [(48 95 41 3) 3]
Test Case: 836 | Input/Output: [(-11 -47 -66 -27) -66]
Test Case: 837 | Input/Output: [(76 21 36 -64) -64]
Test Case: 838 | Input/Output: [(-26 81 73 -42) -42]
Test Case: 839 | Input/Output: [(-42 -50 -34 -55) -55]
Test Case: 840 | Input/Output: [(-83 -32 65 53) -83]
Test Case: 841 | Input/Output: [(77 15 -1 -36) -36]
Test Case: 842 | Input/Output: [(23 15 -10 -46) -46]
Test Case: 843 | Input/Output: [(90 -24 -65 24) -65]
Test Case: 844 | Input/Output: [(74 47 -39 -85) -85]
Test Case: 845 | Input/Output: [(-80 -88 72 -92) -92]
Test Case: 846 | Input/Output: [(77 -70 46 53) -70]
Test Case: 847 | Input/Output: [(64 19 67 54) 19]
Test Case: 848 | Input/Output: [(15 75 -35 -45) -45]
Test Case: 849 | Input/Output: [(60 86 72 -48) -48]
Test Case: 850 | Input/Output: [(-96 -53 -75 -20) -96]
Test Case: 851 | Input/Output: [(77 30 -43 -93) -93]
Test Case: 852 | Input/Output: [(76 -53 -61 -99) -99]
Test Case: 853 | Input/Output: [(76 32 -47 31) -47]
Test Case: 854 | Input/Output: [(58 82 -36 -94) -94]
Test Case: 855 | Input/Output: [(-54 -27 -3 46) -54]
Test Case: 856 | Input/Output: [(-27 -76 -1 -39) -76]
Test Case: 857 | Input/Output: [(-70 12 92 90) -70]
Test Case: 858 | Input/Output: [(77 84 -38 -29) -38]
Test Case: 859 | Input/Output: [(37 31 70 -13) -13]
Test Case: 860 | Input/Output: [(-86 98 -18 91) -86]
Test Case: 861 | Input/Output: [(-76 65 -59 -49) -76]
Test Case: 862 | Input/Output: [(-68 70 76 -83) -83]
Test Case: 863 | Input/Output: [(28 63 -50 34) -50]
Test Case: 864 | Input/Output: [(90 -92 9 -48) -92]
Test Case: 865 | Input/Output: [(-88 39 -39 -83) -88]
Test Case: 866 | Input/Output: [(38 -13 48 97) -13]
Test Case: 867 | Input/Output: [(63 -64 92 76) -64]
Test Case: 868 | Input/Output: [(-49 -34 62 -96) -96]
Test Case: 869 | Input/Output: [(32 96 40 14) 14]
Test Case: 870 | Input/Output: [(13 96 22 9) 9]
Test Case: 871 | Input/Output: [(12 55 78 53) 12]
Test Case: 872 | Input/Output: [(-99 -19 -44 -11) -99]
Test Case: 873 | Input/Output: [(73 79 -5 -41) -41]
Test Case: 874 | Input/Output: [(31 -52 63 78) -52]
Test Case: 875 | Input/Output: [(-72 -94 69 94) -94]
Test Case: 876 | Input/Output: [(-67 75 69 88) -67]
Test Case: 877 | Input/Output: [(10 -83 -44 42) -83]
Test Case: 878 | Input/Output: [(-97 6 76 4) -97]
Test Case: 879 | Input/Output: [(73 -45 75 -81) -81]
Test Case: 880 | Input/Output: [(-81 -40 69 13) -81]
Test Case: 881 | Input/Output: [(61 84 -29 79) -29]
Test Case: 882 | Input/Output: [(19 -46 10 52) -46]
Test Case: 883 | Input/Output: [(29 70 34 -59) -59]
Test Case: 884 | Input/Output: [(18 39 45 -3) -3]
Test Case: 885 | Input/Output: [(-99 -33 95 -33) -99]
Test Case: 886 | Input/Output: [(-32 24 71 66) -32]
Test Case: 887 | Input/Output: [(-16 -90 23 46) -90]
Test Case: 888 | Input/Output: [(-32 -23 74 -61) -61]
Test Case: 889 | Input/Output: [(18 -70 -70 -35) -70]
Test Case: 890 | Input/Output: [(-52 -24 44 17) -52]
Test Case: 891 | Input/Output: [(-43 51 4 45) -43]
Test Case: 892 | Input/Output: [(50 -75 85 -72) -75]
Test Case: 893 | Input/Output: [(21 78 -9 -15) -15]
Test Case: 894 | Input/Output: [(-13 -10 -61 3) -61]
Test Case: 895 | Input/Output: [(-30 -62 57 -34) -62]
Test Case: 896 | Input/Output: [(47 -9 59 -65) -65]
Test Case: 897 | Input/Output: [(65 47 -97 -89) -97]
Test Case: 898 | Input/Output: [(-86 57 32 -69) -86]
Test Case: 899 | Input/Output: [(-50 3 -5 -3) -50]
Test Case: 900 | Input/Output: [(52 -93 -7 82) -93]
Test Case: 901 | Input/Output: [(75 -87 99 -14) -87]
Test Case: 902 | Input/Output: [(-63 8 -18 38) -63]
Test Case: 903 | Input/Output: [(54 -16 76 -4) -16]
Test Case: 904 | Input/Output: [(-19 41 83 -51) -51]
Test Case: 905 | Input/Output: [(-42 -39 -7 -67) -67]
Test Case: 906 | Input/Output: [(-28 -77 19 21) -77]
Test Case: 907 | Input/Output: [(-94 -4 58 54) -94]
Test Case: 908 | Input/Output: [(78 3 76 -46) -46]
Test Case: 909 | Input/Output: [(-12 87 -16 38) -16]
Test Case: 910 | Input/Output: [(88 16 -4 83) -4]
Test Case: 911 | Input/Output: [(-99 -28 77 -18) -99]
Test Case: 912 | Input/Output: [(-72 -20 87 37) -72]
Test Case: 913 | Input/Output: [(85 -5 22 -78) -78]
Test Case: 914 | Input/Output: [(-56 0 50 35) -56]
Test Case: 915 | Input/Output: [(-70 74 -13 33) -70]
Test Case: 916 | Input/Output: [(55 27 -20 -52) -52]
Test Case: 917 | Input/Output: [(26 -46 -6 -75) -75]
Test Case: 918 | Input/Output: [(77 -44 -5 -56) -56]
Test Case: 919 | Input/Output: [(72 5 89 -40) -40]
Test Case: 920 | Input/Output: [(47 -32 -3 -73) -73]
Test Case: 921 | Input/Output: [(-44 36 -99 42) -99]
Test Case: 922 | Input/Output: [(4 50 -52 97) -52]
Test Case: 923 | Input/Output: [(-45 38 -95 -27) -95]
Test Case: 924 | Input/Output: [(66 84 -77 67) -77]
Test Case: 925 | Input/Output: [(11 -37 71 68) -37]
Test Case: 926 | Input/Output: [(64 5 -14 -78) -78]
Test Case: 927 | Input/Output: [(56 35 -12 -94) -94]
Test Case: 928 | Input/Output: [(-73 -99 -75 -56) -99]
Test Case: 929 | Input/Output: [(-100 -21 14 52) -100]
Test Case: 930 | Input/Output: [(9 54 57 -54) -54]
Test Case: 931 | Input/Output: [(61 -24 -72 21) -72]
Test Case: 932 | Input/Output: [(-67 -89 61 -22) -89]
Test Case: 933 | Input/Output: [(-66 23 76 -50) -66]
Test Case: 934 | Input/Output: [(39 -36 62 58) -36]
Test Case: 935 | Input/Output: [(21 -50 -14 -12) -50]
Test Case: 936 | Input/Output: [(70 -76 79 -62) -76]
Test Case: 937 | Input/Output: [(83 -80 -99 -8) -99]
Test Case: 938 | Input/Output: [(78 22 29 -96) -96]
Test Case: 939 | Input/Output: [(80 23 58 5) 5]
Test Case: 940 | Input/Output: [(-30 -86 -62 -27) -86]
Test Case: 941 | Input/Output: [(92 -27 -95 22) -95]
Test Case: 942 | Input/Output: [(-90 -27 -14 9) -90]
Test Case: 943 | Input/Output: [(-51 40 -20 -76) -76]
Test Case: 944 | Input/Output: [(18 -51 -6 -23) -51]
Test Case: 945 | Input/Output: [(7 -54 59 44) -54]
Test Case: 946 | Input/Output: [(60 9 31 -95) -95]
Test Case: 947 | Input/Output: [(-60 4 23 -69) -69]
Test Case: 948 | Input/Output: [(-89 -20 85 -59) -89]
Test Case: 949 | Input/Output: [(63 -89 69 78) -89]
Test Case: 950 | Input/Output: [(74 -33 77 98) -33]
Test Case: 951 | Input/Output: [(35 -67 69 -57) -67]
Test Case: 952 | Input/Output: [(-81 -88 -96 96) -96]
Test Case: 953 | Input/Output: [(4 -16 -6 57) -16]
Test Case: 954 | Input/Output: [(17 -24 -46 57) -46]
Test Case: 955 | Input/Output: [(-48 64 67 -6) -48]
Test Case: 956 | Input/Output: [(10 -5 -4 90) -5]
Test Case: 957 | Input/Output: [(49 73 71 46) 46]
Test Case: 958 | Input/Output: [(-70 -30 -38 38) -70]
Test Case: 959 | Input/Output: [(30 -8 40 -56) -56]
Test Case: 960 | Input/Output: [(-87 -79 87 -47) -87]
Test Case: 961 | Input/Output: [(-49 -53 28 -81) -81]
Test Case: 962 | Input/Output: [(42 -35 -79 -2) -79]
Test Case: 963 | Input/Output: [(24 15 -99 -34) -99]
Test Case: 964 | Input/Output: [(97 5 -11 91) -11]
Test Case: 965 | Input/Output: [(-84 -45 63 34) -84]
Test Case: 966 | Input/Output: [(14 -40 50 2) -40]
Test Case: 967 | Input/Output: [(45 -35 42 12) -35]
Test Case: 968 | Input/Output: [(68 77 20 -87) -87]
Test Case: 969 | Input/Output: [(64 56 -26 -44) -44]
Test Case: 970 | Input/Output: [(-47 27 -92 -38) -92]
Test Case: 971 | Input/Output: [(-36 -29 -28 95) -36]
Test Case: 972 | Input/Output: [(-51 80 -38 88) -51]
Test Case: 973 | Input/Output: [(76 -40 -5 -75) -75]
Test Case: 974 | Input/Output: [(-89 47 90 -27) -89]
Test Case: 975 | Input/Output: [(51 -92 24 -33) -92]
Test Case: 976 | Input/Output: [(5 -14 25 -76) -76]
Test Case: 977 | Input/Output: [(-69 52 15 61) -69]
Test Case: 978 | Input/Output: [(61 86 80 -91) -91]
Test Case: 979 | Input/Output: [(66 96 -16 -71) -71]
Test Case: 980 | Input/Output: [(93 -76 61 74) -76]
Test Case: 981 | Input/Output: [(-25 4 -81 60) -81]
Test Case: 982 | Input/Output: [(86 58 -52 12) -52]
Test Case: 983 | Input/Output: [(-78 -44 -72 -55) -78]
Test Case: 984 | Input/Output: [(24 91 25 -93) -93]
Test Case: 985 | Input/Output: [(24 -59 91 -77) -77]
Test Case: 986 | Input/Output: [(19 30 -36 24) -36]
Test Case: 987 | Input/Output: [(-11 -22 -65 -15) -65]
Test Case: 988 | Input/Output: [(99 73 23 89) 23]
Test Case: 989 | Input/Output: [(91 91 51 -52) -52]
Test Case: 990 | Input/Output: [(-98 -3 75 67) -98]
Test Case: 991 | Input/Output: [(-37 -72 -61 25) -72]
Test Case: 992 | Input/Output: [(-41 77 -24 51) -41]
Test Case: 993 | Input/Output: [(96 -9 -10 -76) -76]
Test Case: 994 | Input/Output: [(-44 46 66 -55) -55]
Test Case: 995 | Input/Output: [(-4 -44 57 -39) -44]
Test Case: 996 | Input/Output: [(39 80 62 7) 7]
Test Case: 997 | Input/Output: [(-36 51 -2 -45) -45]
Test Case: 998 | Input/Output: [(46 -76 98 -61) -76]
Test Case: 999 | Input/Output: [(-56 -57 13 19) -57]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x579dde54 clojush.problems.software.smallest$fn__7461@579dde54] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x6b899971 clojush.instructions.tag$tag_instruction_erc$fn__2160@6b899971] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x7cec3975 clojush.instructions.tag$tagged_instruction_erc$fn__2166@7cec3975] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x7e2a76be clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@7e2a76be]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x417bfebd clojush.problems.software.smallest$smallest_initial_report@417bfebd]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_report@2a4cb8ae]
random-screen = false
random-seed = -118 -37 -21 4 -58 105 26 -33 -19 -127 66 -45 48 -98 52 100
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[66 -82 -82 -82] -82] [[-44 -44 -44 14] -44] [[36 46 46 46] 36] [[77 77 77 12] 12] [[92 -96 -96 -96] -96] [[-38 34 34 34] -38] [[12 90 90 90] 12] [[91 -9 91 91] -9] [[66 66 -89 66] -89] [[-36 -42 -42 -42] -42] [(18 18 18 18) 18] [(70 70 70 70) 70] [(-36 -36 -36 -36) -36] [(12 12 12 12) 12] [(53 53 53 53) 53] [(22 68 44 57) 22] [(85 4 57 73) 4] [(80 89 19 57) 19] [(42 25 44 35) 25] [(84 43 44 47) 43] [(57 91 93 59) 57] [(43 83 77 94) 43] [(82 0 47 76) 0] [(85 5 1 98) 1] [(6 37 17 46) 6] [(72 79 80 82) 72] [(22 88 46 1) 1] [(85 90 24 53) 24] [(43 58 96 32) 32] [(68 30 99 52) 30] [(22 64 99 98) 22] [(95 96 31 88) 31] [(14 88 65 10) 10] [(5 39 28 83) 5] [(85 59 6 91) 6] [(-34 -50 1 34) -50] [(51 51 69 -46) -46] [(-70 -20 88 -41) -70] [(99 -7 85 29) -7] [(22 -70 64 96) -70] [(-16 81 91 -6) -16] [(-3 -92 -12 58) -92] [(-72 -22 42 -57) -72] [(75 80 83 -1) -1] [(69 -94 22 39) -94] [(46 96 20 41) 20] [(-39 -12 -94 -5) -94] [(17 62 -9 68) -9] [(-31 -57 -16 -55) -57] [(73 -95 -91 91) -95] [(-49 -64 22 67) -64] [(-99 -82 25 -92) -99] [(62 -54 -79 -36) -79] [(96 -78 95 -46) -78] [(90 -91 33 81) -91] [(-43 45 39 69) -43] [(71 -9 37 16) -9] [(19 -64 -78 31) -78] [(-40 22 16 84) -40] [(0 49 75 65) 0] [(75 -6 -83 41) -83] [(90 69 72 -25) -25] [(-56 -5 -50 -26) -56] [(-82 -46 74 -44) -82] [(55 100 78 15) 15] [(-90 -62 -60 -89) -90] [(-49 32 -97 36) -97] [(-76 -17 -63 30) -76] [(42 69 -5 -17) -17] [(72 34 -49 68) -49] [(-86 -94 -46 -48) -94] [(-31 63 -74 -41) -74] [(31 97 -41 -92) -92] [(55 59 40 54) 40] [(-55 -31 -93 -47) -93] [(-20 97 95 -83) -83] [(-13 -40 -86 -28) -86] [(23 44 63 -78) -78] [(-25 47 -52 -19) -52] [(71 -68 -92 -4) -92] [(67 87 73 -65) -65] [(-10 62 97 67) -10] [(12 80 -85 -52) -85] [(-75 -2 49 -29) -75] [(-69 -64 -45 42) -69] [(3 69 5 -42) -42] [(-72 -8 60 70) -72] [(48 96 48 2) 2] [(46 10 81 -63) -63] [(60 29 73 50) 29] [(-30 56 97 50) -30] [(64 -87 31 -25) -87] [(85 -58 -100 100) -100] [(70 -25 -58 -57) -58] [(31 -4 49 83) -4])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 628
Test mean error for best: 0.62800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: 14                 
Correct output: 36                  | Program output: 46                 
Correct output: 12                  | Program output: 12                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: 34                 
Correct output: 12                  | Program output: 90                 
Correct output: -9                  | Program output: 91                 
Correct output: -89                 | Program output: 66                 
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 57                 
Correct output: 4                   | Program output: 73                 
Correct output: 19                  | Program output: 57                 
Correct output: 25                  | Program output: 35                 
Correct output: 43                  | Program output: 47                 
Correct output: 57                  | Program output: 59                 
Correct output: 43                  | Program output: 94                 
Correct output: 0                   | Program output: 76                 
Correct output: 1                   | Program output: 98                 
Correct output: 6                   | Program output: 46                 
Correct output: 72                  | Program output: 82                 
Correct output: 1                   | Program output: 1                  
Correct output: 24                  | Program output: 53                 
Correct output: 32                  | Program output: 32                 
Correct output: 30                  | Program output: 52                 
Correct output: 22                  | Program output: 98                 
Correct output: 31                  | Program output: 88                 
Correct output: 10                  | Program output: 10                 
Correct output: 5                   | Program output: 83                 
Correct output: 6                   | Program output: 91                 
Correct output: -50                 | Program output: 34                 
Correct output: -46                 | Program output: -46                
Correct output: -70                 | Program output: -41                
Correct output: -7                  | Program output: 29                 
Correct output: -70                 | Program output: 96                 
Correct output: -16                 | Program output: -6                 
Correct output: -92                 | Program output: 58                 
Correct output: -72                 | Program output: -57                
Correct output: -1                  | Program output: -1                 
Correct output: -94                 | Program output: 39                 
Correct output: 20                  | Program output: 41                 
Correct output: -94                 | Program output: -5                 
Correct output: -9                  | Program output: 68                 
Correct output: -57                 | Program output: -55                
Correct output: -95                 | Program output: 91                 
Correct output: -64                 | Program output: 67                 
Correct output: -99                 | Program output: -92                
Correct output: -79                 | Program output: -36                
Correct output: -78                 | Program output: -46                
Correct output: -91                 | Program output: 81                 
Correct output: -43                 | Program output: 69                 
Correct output: -9                  | Program output: 16                 
Correct output: -78                 | Program output: 31                 
Correct output: -40                 | Program output: 84                 
Correct output: 0                   | Program output: 65                 
Correct output: -83                 | Program output: 41                 
Correct output: -25                 | Program output: -25                
Correct output: -56                 | Program output: -26                
Correct output: -82                 | Program output: -44                
Correct output: 15                  | Program output: 15                 
Correct output: -90                 | Program output: -89                
Correct output: -97                 | Program output: 36                 
Correct output: -76                 | Program output: 30                 
Correct output: -17                 | Program output: -17                
Correct output: -49                 | Program output: 68                 
Correct output: -94                 | Program output: -48                
Correct output: -74                 | Program output: -41                
Correct output: -92                 | Program output: -92                
Correct output: 40                  | Program output: 54                 
Correct output: -93                 | Program output: -47                
Correct output: -83                 | Program output: -83                
Correct output: -86                 | Program output: -28                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -19                
Correct output: -92                 | Program output: -4                 
Correct output: -65                 | Program output: -65                
Correct output: -10                 | Program output: 67                 
Correct output: -85                 | Program output: -52                
Correct output: -75                 | Program output: -29                
Correct output: -69                 | Program output: 42                 
Correct output: -42                 | Program output: -42                
Correct output: -72                 | Program output: 70                 
Correct output: 2                   | Program output: 2                  
Correct output: -63                 | Program output: -63                
Correct output: 29                  | Program output: 50                 
Correct output: -30                 | Program output: 50                 
Correct output: -87                 | Program output: -25                
Correct output: -100                | Program output: 100                
Correct output: -58                 | Program output: -57                
Correct output: -4                  | Program output: 83                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 0, :instruction exec_k} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_eq} {:close 2, :instruction exec_when} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_do*range} {:close 1, :instruction in2} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_invert_second_then_and} {:close 2, :instruction integer_mod} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_do*times} {:close 0, :instruction tag_exec_496} {:close 0, :instruction tag_boolean_623} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction tag_integer_107} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction 78} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_mod} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction in2} {:close 1, :instruction print_integer} {:close 1, :instruction integer_gte} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_div} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_while} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup})
Lexicase best program: (integer_yank integer_dec integer_flush exec_do*count (exec_when (exec_k (exec_yank boolean_eq exec_when ()) (integer_gte integer_inc exec_do*range (in2) boolean_swap boolean_invert_second_then_and) integer_mod)) exec_empty integer_eq integer_gte integer_flush exec_empty exec_when () boolean_yankdup integer_dup_times exec_do*times (tag_exec_496 (tag_boolean_623 boolean_stackdepth integer_empty integer_flush exec_do*range (integer_mult exec_swap () (boolean_not tag_integer_107 integer_pop) boolean_xor boolean_yankdup integer_lt exec_flush integer_shove exec_dup_items) boolean_pop 78 exec_stackdepth) boolean_not integer_mod) exec_eq exec_rot () (exec_dup_items) (integer_mod boolean_stackdepth integer_eq integer_mult boolean_empty integer_lt integer_eq) in3 in2 print_integer integer_gte exec_dup_times () exec_dup_items integer_div exec_s_when_autoconstructing (exec_while (integer_swap exec_dup_times (print_integer boolean_dup))) () ())
Lexicase best errors: [1 1 1 0 1 0 1 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 92
Percent parens: 0.239
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 0, :instruction exec_k} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_eq} {:close 2, :instruction exec_when} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_do*range} {:close 1, :instruction in2} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_invert_second_then_and} {:close 2, :instruction integer_mod} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_do*times} {:close 0, :instruction tag_exec_496} {:close 0, :instruction tag_boolean_623} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction tag_integer_107} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction 78} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_mod} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction in2} {:close 1, :instruction print_integer} {:close 1, :instruction integer_gte} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_div} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_while} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup})
Zero cases best program: (integer_yank integer_dec integer_flush exec_do*count (exec_when (exec_k (exec_yank boolean_eq exec_when ()) (integer_gte integer_inc exec_do*range (in2) boolean_swap boolean_invert_second_then_and) integer_mod)) exec_empty integer_eq integer_gte integer_flush exec_empty exec_when () boolean_yankdup integer_dup_times exec_do*times (tag_exec_496 (tag_boolean_623 boolean_stackdepth integer_empty integer_flush exec_do*range (integer_mult exec_swap () (boolean_not tag_integer_107 integer_pop) boolean_xor boolean_yankdup integer_lt exec_flush integer_shove exec_dup_items) boolean_pop 78 exec_stackdepth) boolean_not integer_mod) exec_eq exec_rot () (exec_dup_items) (integer_mod boolean_stackdepth integer_eq integer_mult boolean_empty integer_lt integer_eq) in3 in2 print_integer integer_gte exec_dup_times () exec_dup_items integer_div exec_s_when_autoconstructing (exec_while (integer_swap exec_dup_times (print_integer boolean_dup))) () ())
Zero cases best errors: [1 1 1 0 1 0 1 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 92
Percent parens: 0.239
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 1 1000 6 1000 3 5 7 1000 3)
Population mean number of elite cases: 3.03
Count of perfect (error zero) individuals by case: (5 1 0 6 0 3 5 7 0 3)
Population mean number of perfect (error zero) cases: 0.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_when} {:close 0, :instruction tag_exec_901} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_div} {:close 0, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 1, :instruction in4} {:close 0, :instruction integer_gt} {:close 1, :instruction print_integer} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_y} {:close 1, :instruction exec_when} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_gt} {:close 0, :instruction tagged_551} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_mod} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_pop} {:close 0, :instruction in3} {:close 0, :instruction exec_k_when_autoconstructing})
Best program: (boolean_yankdup exec_do*times (exec_yank exec_when (tag_exec_901 (boolean_invert_second_then_and) integer_div integer_gte boolean_invert_second_then_and) in4) integer_gt print_integer exec_flush integer_add boolean_yankdup exec_s_when_autoconstructing (integer_fromboolean integer_lte boolean_dup exec_k_when_autoconstructing (integer_shove) (boolean_dup exec_y_when_autoconstructing ()) exec_empty exec_y (exec_when () integer_gt integer_gt tagged_551 exec_empty integer_dup_times integer_mod) in3 boolean_dup exec_pop (in3 exec_k_when_autoconstructing () ())) () ())
Errors: [0 1 1 0 1 1 0 0 1 1]
Total: 6
Mean: 0.6
Genome size: 37
Size: 52
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 9.97
Median total errors in population: 10
Error averages by case: (0.995 0.999 1.0 0.994 1.0 0.997 0.995 0.993 1.0 0.997)
Error minima by case: (0 0 1 0 1 0 0 0 1 0)
Average genome size in population (length): 49.591
Average program size in population (points): 68.269
Average percent parens in population: 0.278
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.255
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 492190
--- Timings ---
Current time: 1559593940658 milliseconds
Total Time:           2.7 seconds
Initialization:       0.1 seconds,  3.9%
Reproduction:         0.8 seconds, 28.2%
Fitness Testing:      1.8 seconds, 67.9%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 661
Test mean error for best: 0.66100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 46                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: 34                 
Correct output: 12                  | Program output: 90                 
Correct output: -9                  | Program output: -9                 
Correct output: -89                 | Program output: 66                 
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 68                 
Correct output: 4                   | Program output: 4                  
Correct output: 19                  | Program output: 89                 
Correct output: 25                  | Program output: 25                 
Correct output: 43                  | Program output: 43                 
Correct output: 57                  | Program output: 91                 
Correct output: 43                  | Program output: 83                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 5                  
Correct output: 6                   | Program output: 37                 
Correct output: 72                  | Program output: 79                 
Correct output: 1                   | Program output: 88                 
Correct output: 24                  | Program output: 90                 
Correct output: 32                  | Program output: 58                 
Correct output: 30                  | Program output: 30                 
Correct output: 22                  | Program output: 64                 
Correct output: 31                  | Program output: 96                 
Correct output: 10                  | Program output: 88                 
Correct output: 5                   | Program output: 39                 
Correct output: 6                   | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -46                 | Program output: 51                 
Correct output: -70                 | Program output: -20                
Correct output: -7                  | Program output: -7                 
Correct output: -70                 | Program output: -70                
Correct output: -16                 | Program output: 81                 
Correct output: -92                 | Program output: -92                
Correct output: -72                 | Program output: -22                
Correct output: -1                  | Program output: 80                 
Correct output: -94                 | Program output: -94                
Correct output: 20                  | Program output: 96                 
Correct output: -94                 | Program output: -12                
Correct output: -9                  | Program output: 62                 
Correct output: -57                 | Program output: -57                
Correct output: -95                 | Program output: -95                
Correct output: -64                 | Program output: -64                
Correct output: -99                 | Program output: -82                
Correct output: -79                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -91                 | Program output: -91                
Correct output: -43                 | Program output: 45                 
Correct output: -9                  | Program output: -9                 
Correct output: -78                 | Program output: -64                
Correct output: -40                 | Program output: 22                 
Correct output: 0                   | Program output: 49                 
Correct output: -83                 | Program output: -6                 
Correct output: -25                 | Program output: 69                 
Correct output: -56                 | Program output: -5                 
Correct output: -82                 | Program output: -46                
Correct output: 15                  | Program output: 100                
Correct output: -90                 | Program output: -62                
Correct output: -97                 | Program output: 32                 
Correct output: -76                 | Program output: -17                
Correct output: -17                 | Program output: 69                 
Correct output: -49                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: 63                 
Correct output: -92                 | Program output: 97                 
Correct output: 40                  | Program output: 59                 
Correct output: -93                 | Program output: -31                
Correct output: -83                 | Program output: 97                 
Correct output: -86                 | Program output: -40                
Correct output: -78                 | Program output: 44                 
Correct output: -52                 | Program output: 47                 
Correct output: -92                 | Program output: -68                
Correct output: -65                 | Program output: 87                 
Correct output: -10                 | Program output: 62                 
Correct output: -85                 | Program output: 80                 
Correct output: -75                 | Program output: -2                 
Correct output: -69                 | Program output: -64                
Correct output: -42                 | Program output: 69                 
Correct output: -72                 | Program output: -8                 
Correct output: 2                   | Program output: 96                 
Correct output: -63                 | Program output: 10                 
Correct output: 29                  | Program output: 29                 
Correct output: -30                 | Program output: 56                 
Correct output: -87                 | Program output: -87                
Correct output: -100                | Program output: -58                
Correct output: -58                 | Program output: -25                
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_yank} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_yankdup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_mod} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_pop} {:close 1, :instruction in4} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_rot} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_shove} {:close 1, :instruction in3} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_rot} {:close 0, :instruction 91} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_s_when_autoconstructing})
Lexicase best program: (integer_yankdup boolean_empty integer_rot boolean_yank integer_rot exec_yank exec_yankdup integer_stackdepth integer_inc boolean_empty boolean_yank exec_swap (exec_yank integer_mod) (boolean_dup_times exec_pop (in4) integer_lt) exec_eq exec_do*range (boolean_xor integer_flush boolean_swap integer_swap integer_fromboolean integer_rot) boolean_or in2 integer_add boolean_swap boolean_pop print_integer boolean_xor boolean_swap exec_shove (in3) integer_sub exec_k_when_autoconstructing (exec_rot (91 integer_gte exec_s_when_autoconstructing () () ()) () ()) ())
Lexicase best errors: [1 1 0 0 0 1 1 1 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 56
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_yank} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_yankdup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_mod} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_pop} {:close 1, :instruction in4} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_rot} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_shove} {:close 1, :instruction in3} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_rot} {:close 0, :instruction 91} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_s_when_autoconstructing})
Zero cases best program: (integer_yankdup boolean_empty integer_rot boolean_yank integer_rot exec_yank exec_yankdup integer_stackdepth integer_inc boolean_empty boolean_yank exec_swap (exec_yank integer_mod) (boolean_dup_times exec_pop (in4) integer_lt) exec_eq exec_do*range (boolean_xor integer_flush boolean_swap integer_swap integer_fromboolean integer_rot) boolean_or in2 integer_add boolean_swap boolean_pop print_integer boolean_xor boolean_swap exec_shove (in3) integer_sub exec_k_when_autoconstructing (exec_rot (91 integer_gte exec_s_when_autoconstructing () () ()) () ()) ())
Zero cases best errors: [1 1 0 0 0 1 1 1 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 56
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (269 121 542 166 160 85 102 10 160 10)
Population mean number of elite cases: 1.63
Count of perfect (error zero) individuals by case: (269 121 542 166 160 85 102 10 160 10)
Population mean number of perfect (error zero) cases: 1.63
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction in2} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*count} {:close 0, :instruction print_integer} {:close 0, :instruction exec_when} {:close 0, :instruction exec_k} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_eq} {:close 2, :instruction exec_when} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_do*range} {:close 1, :instruction exec_empty} {:close 1, :instruction in2} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_invert_second_then_and} {:close 2, :instruction integer_mod} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_do*times} {:close 0, :instruction tag_exec_496} {:close 0, :instruction tag_boolean_623} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_max} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction 78} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_mod} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction print_integer} {:close 1, :instruction integer_gte} {:close 0, :instruction tag_integer_3} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_div} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_while} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer})
Best program: (integer_yank in2 integer_dec integer_flush exec_do*count (print_integer exec_when (exec_k (exec_yank boolean_eq exec_when ()) (integer_gte integer_inc exec_do*range (exec_empty) in2) boolean_swap boolean_invert_second_then_and) integer_mod) exec_empty integer_eq integer_gte integer_flush exec_empty boolean_yankdup integer_dup_times exec_do*times (tag_exec_496 (tag_boolean_623 boolean_stackdepth integer_empty integer_flush exec_do*range (integer_mult exec_swap () (boolean_not integer_max integer_pop) boolean_xor boolean_yankdup integer_lt exec_flush boolean_yank integer_shove exec_dup_items) boolean_pop 78 integer_inc exec_stackdepth) boolean_not integer_mod) exec_eq exec_rot () (integer_dup_items integer_mod boolean_stackdepth integer_eq integer_mult boolean_empty integer_lt integer_eq) (in3) boolean_not in2 print_integer integer_gte tag_integer_3 exec_dup_items integer_div exec_s_when_autoconstructing (exec_while (integer_swap exec_dup_times (print_integer))) () ())
Errors: [1 1 0 0 0 1 1 1 0 1]
Total: 6
Mean: 0.6
Genome size: 74
Size: 94
Percent parens: 0.213
--- Population Statistics ---
Average total errors in population: 8.375
Median total errors in population: 8
Error averages by case: (0.731 0.879 0.458 0.834 0.84 0.915 0.898 0.99 0.84 0.99)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 48.847
Average program size in population (points): 65.162
Average percent parens in population: 0.232
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.005
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.175
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 904331
--- Timings ---
Current time: 1559593942775 milliseconds
Total Time:           4.7 seconds
Initialization:       0.1 seconds,  2.2%
Reproduction:         1.9 seconds, 39.4%
Fitness Testing:      2.4 seconds, 51.4%
Report:               0.3 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 567
Test mean error for best: 0.56700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -82                 | Program output: 66                 
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 46                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: 92                 
Correct output: -38                 | Program output: -38                
Correct output: 12                  | Program output: 90                 
Correct output: -9                  | Program output: -9                 
Correct output: -89                 | Program output: 66                 
Correct output: -42                 | Program output: -36                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 68                 
Correct output: 4                   | Program output: 4                  
Correct output: 19                  | Program output: 89                 
Correct output: 25                  | Program output: 25                 
Correct output: 43                  | Program output: 43                 
Correct output: 57                  | Program output: 91                 
Correct output: 43                  | Program output: 83                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 5                  
Correct output: 6                   | Program output: 37                 
Correct output: 72                  | Program output: 79                 
Correct output: 1                   | Program output: 1                  
Correct output: 24                  | Program output: 90                 
Correct output: 32                  | Program output: 58                 
Correct output: 30                  | Program output: 30                 
Correct output: 22                  | Program output: 64                 
Correct output: 31                  | Program output: 96                 
Correct output: 10                  | Program output: 88                 
Correct output: 5                   | Program output: 39                 
Correct output: 6                   | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -46                 | Program output: -46                
Correct output: -70                 | Program output: -70                
Correct output: -7                  | Program output: -7                 
Correct output: -70                 | Program output: -70                
Correct output: -16                 | Program output: 81                 
Correct output: -92                 | Program output: -92                
Correct output: -72                 | Program output: -72                
Correct output: -1                  | Program output: -1                 
Correct output: -94                 | Program output: -94                
Correct output: 20                  | Program output: 96                 
Correct output: -94                 | Program output: -39                
Correct output: -9                  | Program output: 62                 
Correct output: -57                 | Program output: -31                
Correct output: -95                 | Program output: -95                
Correct output: -64                 | Program output: -64                
Correct output: -99                 | Program output: -99                
Correct output: -79                 | Program output: 62                 
Correct output: -78                 | Program output: 96                 
Correct output: -91                 | Program output: -91                
Correct output: -43                 | Program output: -43                
Correct output: -9                  | Program output: -9                 
Correct output: -78                 | Program output: -64                
Correct output: -40                 | Program output: -40                
Correct output: 0                   | Program output: 0                  
Correct output: -83                 | Program output: -6                 
Correct output: -25                 | Program output: -25                
Correct output: -56                 | Program output: -56                
Correct output: -82                 | Program output: -82                
Correct output: 15                  | Program output: 100                
Correct output: -90                 | Program output: -90                
Correct output: -97                 | Program output: -49                
Correct output: -76                 | Program output: -17                
Correct output: -17                 | Program output: -17                
Correct output: -49                 | Program output: 34                 
Correct output: -94                 | Program output: -86                
Correct output: -74                 | Program output: 63                 
Correct output: -92                 | Program output: -92                
Correct output: 40                  | Program output: 59                 
Correct output: -93                 | Program output: -55                
Correct output: -83                 | Program output: 97                 
Correct output: -86                 | Program output: -13                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: 47                 
Correct output: -92                 | Program output: 71                 
Correct output: -65                 | Program output: -65                
Correct output: -10                 | Program output: -10                
Correct output: -85                 | Program output: -52                
Correct output: -75                 | Program output: -75                
Correct output: -69                 | Program output: -64                
Correct output: -42                 | Program output: -42                
Correct output: -72                 | Program output: -8                 
Correct output: 2                   | Program output: 96                 
Correct output: -63                 | Program output: -63                
Correct output: 29                  | Program output: 29                 
Correct output: -30                 | Program output: -30                
Correct output: -87                 | Program output: 64                 
Correct output: -100                | Program output: -58                
Correct output: -58                 | Program output: 70                 
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction integer_div} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty})
Lexicase best program: (integer_pop integer_mod integer_div boolean_empty exec_y_when_autoconstructing (integer_min boolean_dup_items) boolean_or boolean_eq integer_rot exec_dup (boolean_swap in1 tagged_322 in4 in2 boolean_or integer_dup boolean_dup_times) boolean_rot boolean_rot boolean_frominteger integer_yank integer_shove print_integer boolean_empty integer_fromboolean boolean_empty)
Lexicase best errors: [0 1 0 0 0 1 1 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 31
Percent parens: 0.097
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction integer_div} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty})
Zero cases best program: (integer_pop integer_mod integer_div boolean_empty exec_y_when_autoconstructing (integer_min boolean_dup_items) boolean_or boolean_eq integer_rot exec_dup (boolean_swap in1 tagged_322 in4 in2 boolean_or integer_dup boolean_dup_times) boolean_rot boolean_rot boolean_frominteger integer_yank integer_shove print_integer boolean_empty integer_fromboolean boolean_empty)
Zero cases best errors: [0 1 0 0 0 1 1 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 31
Percent parens: 0.097
--- Lexicase Population Statistics ---
Count of elite individuals by case: (476 98 181 280 103 98 99 65 68 273)
Population mean number of elite cases: 1.74
Count of perfect (error zero) individuals by case: (476 98 181 280 103 98 99 65 68 273)
Population mean number of perfect (error zero) cases: 1.74
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction integer_div} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty})
Best program: (integer_pop integer_mod integer_div boolean_empty exec_y_when_autoconstructing (integer_min boolean_dup_items) boolean_or boolean_eq integer_rot exec_dup (boolean_swap in1 tagged_322 in4 in2 boolean_or integer_dup boolean_dup_times) boolean_rot boolean_rot boolean_frominteger integer_yank integer_shove print_integer boolean_empty integer_fromboolean boolean_empty)
Errors: [0 1 0 0 0 1 1 0 0 1]
Total: 4
Mean: 0.4
Genome size: 28
Size: 31
Percent parens: 0.097
--- Population Statistics ---
Average total errors in population: 8.259
Median total errors in population: 10
Error averages by case: (0.524 0.902 0.819 0.72 0.897 0.902 0.901 0.935 0.932 0.727)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 43.832
Average program size in population (points): 55.666
Average percent parens in population: 0.184
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.994
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.994
Total error diversity:				 0.007
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.198
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1303765
--- Timings ---
Current time: 1559593944812 milliseconds
Total Time:           6.9 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         3.1 seconds, 45.7%
Fitness Testing:      2.9 seconds, 42.1%
Report:               0.7 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 661
Test mean error for best: 0.66100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 36                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: -38                
Correct output: 12                  | Program output: 12                 
Correct output: -9                  | Program output: 91                 
Correct output: -89                 | Program output: 66                 
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 22                 
Correct output: 4                   | Program output: 85                 
Correct output: 19                  | Program output: 80                 
Correct output: 25                  | Program output: 42                 
Correct output: 43                  | Program output: 84                 
Correct output: 57                  | Program output: 57                 
Correct output: 43                  | Program output: 43                 
Correct output: 0                   | Program output: 82                 
Correct output: 1                   | Program output: 85                 
Correct output: 6                   | Program output: 6                  
Correct output: 72                  | Program output: 72                 
Correct output: 1                   | Program output: 1                  
Correct output: 24                  | Program output: 85                 
Correct output: 32                  | Program output: 43                 
Correct output: 30                  | Program output: 68                 
Correct output: 22                  | Program output: 22                 
Correct output: 31                  | Program output: 95                 
Correct output: 10                  | Program output: 14                 
Correct output: 5                   | Program output: 5                  
Correct output: 6                   | Program output: 85                 
Correct output: -50                 | Program output: -34                
Correct output: -46                 | Program output: 69                 
Correct output: -70                 | Program output: 88                 
Correct output: -7                  | Program output: 99                 
Correct output: -70                 | Program output: 22                 
Correct output: -16                 | Program output: 91                 
Correct output: -92                 | Program output: -3                 
Correct output: -72                 | Program output: 42                 
Correct output: -1                  | Program output: 83                 
Correct output: -94                 | Program output: 69                 
Correct output: 20                  | Program output: 46                 
Correct output: -94                 | Program output: -94                
Correct output: -9                  | Program output: 17                 
Correct output: -57                 | Program output: -16                
Correct output: -95                 | Program output: 73                 
Correct output: -64                 | Program output: -49                
Correct output: -99                 | Program output: 25                 
Correct output: -79                 | Program output: -79                
Correct output: -78                 | Program output: 95                 
Correct output: -91                 | Program output: 90                 
Correct output: -43                 | Program output: -43                
Correct output: -9                  | Program output: 71                 
Correct output: -78                 | Program output: 19                 
Correct output: -40                 | Program output: -40                
Correct output: 0                   | Program output: 0                  
Correct output: -83                 | Program output: 75                 
Correct output: -25                 | Program output: 72                 
Correct output: -56                 | Program output: -50                
Correct output: -82                 | Program output: 74                 
Correct output: 15                  | Program output: 55                 
Correct output: -90                 | Program output: -60                
Correct output: -97                 | Program output: -49                
Correct output: -76                 | Program output: -76                
Correct output: -17                 | Program output: -5                 
Correct output: -49                 | Program output: 72                 
Correct output: -94                 | Program output: -46                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: -41                
Correct output: 40                  | Program output: 55                 
Correct output: -93                 | Program output: -93                
Correct output: -83                 | Program output: 95                 
Correct output: -86                 | Program output: -86                
Correct output: -78                 | Program output: 63                 
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: -92                
Correct output: -65                 | Program output: 73                 
Correct output: -10                 | Program output: -10                
Correct output: -85                 | Program output: -85                
Correct output: -75                 | Program output: 49                 
Correct output: -69                 | Program output: -69                
Correct output: -42                 | Program output: 5                  
Correct output: -72                 | Program output: -72                
Correct output: 2                   | Program output: 96                 
Correct output: -63                 | Program output: 81                 
Correct output: 29                  | Program output: 60                 
Correct output: -30                 | Program output: -30                
Correct output: -87                 | Program output: 31                 
Correct output: -100                | Program output: 85                 
Correct output: -58                 | Program output: -58                
Correct output: -4                  | Program output: 31                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_eq} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction tagged_853} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction in1} {:close 0, :instruction tagged_322} {:close 0, :instruction boolean_dup} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty})
Lexicase best program: (integer_max integer_pop in3 integer_mod exec_eq boolean_empty exec_y_when_autoconstructing (integer_yank boolean_or tagged_853 exec_rot (exec_dup (in1 tagged_322 boolean_dup in4 boolean_dup in2 boolean_or boolean_rot) boolean_rot boolean_xor boolean_frominteger integer_dup_items integer_lt integer_yank exec_dup_times () print_integer) (boolean_empty) ()))
Lexicase best errors: [0 0 0 0 0 0 1 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 36
Percent parens: 0.194
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_eq} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction tagged_853} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction in1} {:close 0, :instruction tagged_322} {:close 0, :instruction boolean_dup} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty})
Zero cases best program: (integer_max integer_pop in3 integer_mod exec_eq boolean_empty exec_y_when_autoconstructing (integer_yank boolean_or tagged_853 exec_rot (exec_dup (in1 tagged_322 boolean_dup in4 boolean_dup in2 boolean_or boolean_rot) boolean_rot boolean_xor boolean_frominteger integer_dup_items integer_lt integer_yank exec_dup_times () print_integer) (boolean_empty) ()))
Zero cases best errors: [0 0 0 0 0 0 1 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 36
Percent parens: 0.194
--- Lexicase Population Statistics ---
Count of elite individuals by case: (188 161 98 221 102 161 97 116 96 96)
Population mean number of elite cases: 1.34
Count of perfect (error zero) individuals by case: (188 161 98 221 102 161 97 116 96 96)
Population mean number of perfect (error zero) cases: 1.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction in3} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction tagged_853} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction in1} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_empty})
Best program: (integer_max integer_pop in3 boolean_empty exec_y_when_autoconstructing (integer_yank boolean_or tagged_853 boolean_eq exec_dup (in1 tagged_322 in4 in2 boolean_or boolean_rot) boolean_rot boolean_frominteger integer_dup_items integer_lt integer_yank exec_dup_times () print_integer) boolean_empty boolean_empty)
Errors: [0 0 0 0 0 0 1 1 1 1]
Total: 4
Mean: 0.4
Genome size: 25
Size: 29
Percent parens: 0.138
--- Population Statistics ---
Average total errors in population: 8.664
Median total errors in population: 10
Error averages by case: (0.812 0.839 0.902 0.779 0.898 0.839 0.903 0.884 0.904 0.904)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.969
Average program size in population (points): 41.131
Average percent parens in population: 0.151
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.007
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.272
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1697831
--- Timings ---
Current time: 1559593946752 milliseconds
Total Time:           8.9 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.4 seconds, 49.2%
Fitness Testing:      3.4 seconds, 37.9%
Report:               1.0 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 482
Test mean error for best: 0.48200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 46                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: -38                
Correct output: 12                  | Program output: 90                 
Correct output: -9                  | Program output: 91                 
Correct output: -89                 | Program output: -89                
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 44                 
Correct output: 4                   | Program output: 57                 
Correct output: 19                  | Program output: 19                 
Correct output: 25                  | Program output: 44                 
Correct output: 43                  | Program output: 44                 
Correct output: 57                  | Program output: 93                 
Correct output: 43                  | Program output: 77                 
Correct output: 0                   | Program output: 47                 
Correct output: 1                   | Program output: 1                  
Correct output: 6                   | Program output: 17                 
Correct output: 72                  | Program output: 80                 
Correct output: 1                   | Program output: 1                  
Correct output: 24                  | Program output: 24                 
Correct output: 32                  | Program output: 96                 
Correct output: 30                  | Program output: 99                 
Correct output: 22                  | Program output: 99                 
Correct output: 31                  | Program output: 31                 
Correct output: 10                  | Program output: 65                 
Correct output: 5                   | Program output: 28                 
Correct output: 6                   | Program output: 6                  
Correct output: -50                 | Program output: -34                
Correct output: -46                 | Program output: -46                
Correct output: -70                 | Program output: 88                 
Correct output: -7                  | Program output: 85                 
Correct output: -70                 | Program output: 64                 
Correct output: -16                 | Program output: 91                 
Correct output: -92                 | Program output: -3                 
Correct output: -72                 | Program output: 42                 
Correct output: -1                  | Program output: -1                 
Correct output: -94                 | Program output: 22                 
Correct output: 20                  | Program output: 20                 
Correct output: -94                 | Program output: -94                
Correct output: -9                  | Program output: -9                 
Correct output: -57                 | Program output: -16                
Correct output: -95                 | Program output: -91                
Correct output: -64                 | Program output: -49                
Correct output: -99                 | Program output: 25                 
Correct output: -79                 | Program output: -36                
Correct output: -78                 | Program output: -46                
Correct output: -91                 | Program output: 33                 
Correct output: -43                 | Program output: -43                
Correct output: -9                  | Program output: 37                 
Correct output: -78                 | Program output: -78                
Correct output: -40                 | Program output: -40                
Correct output: 0                   | Program output: 0                  
Correct output: -83                 | Program output: -83                
Correct output: -25                 | Program output: -25                
Correct output: -56                 | Program output: -50                
Correct output: -82                 | Program output: 74                 
Correct output: 15                  | Program output: 78                 
Correct output: -90                 | Program output: -60                
Correct output: -97                 | Program output: -49                
Correct output: -76                 | Program output: -76                
Correct output: -17                 | Program output: -17                
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -46                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: -92                
Correct output: 40                  | Program output: 40                 
Correct output: -93                 | Program output: -93                
Correct output: -83                 | Program output: 95                 
Correct output: -86                 | Program output: -86                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: -4                 
Correct output: -65                 | Program output: -65                
Correct output: -10                 | Program output: -10                
Correct output: -85                 | Program output: -52                
Correct output: -75                 | Program output: 49                 
Correct output: -69                 | Program output: -69                
Correct output: -42                 | Program output: -42                
Correct output: -72                 | Program output: -72                
Correct output: 2                   | Program output: 48                 
Correct output: -63                 | Program output: -63                
Correct output: 29                  | Program output: 73                 
Correct output: -30                 | Program output: -30                
Correct output: -87                 | Program output: -25                
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -57                
Correct output: -4                  | Program output: 49                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction in3} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction print_integer} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty})
Lexicase best program: (integer_pop integer_mod boolean_empty exec_y_when_autoconstructing (integer_min boolean_dup_items) boolean_or boolean_eq integer_rot exec_dup (boolean_swap tagged_322 in4 in2 boolean_or in3) integer_dup boolean_dup_times boolean_rot boolean_rot boolean_rot boolean_frominteger integer_yank integer_shove print_integer integer_fromboolean boolean_empty)
Lexicase best errors: [0 1 0 1 0 0 0 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 30
Percent parens: 0.100
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction in3} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction print_integer} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty})
Zero cases best program: (integer_pop integer_mod boolean_empty exec_y_when_autoconstructing (integer_min boolean_dup_items) boolean_or boolean_eq integer_rot exec_dup (boolean_swap tagged_322 in4 in2 boolean_or in3) integer_dup boolean_dup_times boolean_rot boolean_rot boolean_rot boolean_frominteger integer_yank integer_shove print_integer integer_fromboolean boolean_empty)
Zero cases best errors: [0 1 0 1 0 0 0 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 30
Percent parens: 0.100
--- Lexicase Population Statistics ---
Count of elite individuals by case: (179 195 63 185 98 472 193 205 108 97)
Population mean number of elite cases: 1.79
Count of perfect (error zero) individuals by case: (179 195 63 185 98 472 193 205 108 97)
Population mean number of perfect (error zero) cases: 1.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_shove} {:close 1, :instruction print_integer} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty})
Best program: (integer_pop integer_mod boolean_empty exec_y_when_autoconstructing (integer_min boolean_dup_items) boolean_or boolean_eq integer_rot exec_dup (boolean_swap in1 tagged_322 in4 in3) integer_dup boolean_dup_times boolean_rot boolean_rot boolean_frominteger integer_yank integer_shove print_integer integer_fromboolean boolean_empty)
Errors: [0 0 1 1 0 0 0 0 1 0]
Total: 3
Mean: 0.3
Genome size: 25
Size: 28
Percent parens: 0.107
--- Population Statistics ---
Average total errors in population: 8.205
Median total errors in population: 9
Error averages by case: (0.821 0.805 0.937 0.815 0.902 0.528 0.807 0.795 0.892 0.903)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 31.865
Average program size in population (points): 38.566
Average percent parens in population: 0.155
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.997
Total error diversity:				 0.008
Error (vector) diversity:			 0.068
Behavioral diversity:				 0.276
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2075345
--- Timings ---
Current time: 1559593948601 milliseconds
Total Time:          10.7 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.6 seconds, 51.9%
Fitness Testing:      3.8 seconds, 35.1%
Report:               1.3 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 425
Test mean error for best: 0.42500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 36                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: -38                
Correct output: 12                  | Program output: 12                 
Correct output: -9                  | Program output: 91                 
Correct output: -89                 | Program output: -89                
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 22                 
Correct output: 4                   | Program output: 57                 
Correct output: 19                  | Program output: 19                 
Correct output: 25                  | Program output: 42                 
Correct output: 43                  | Program output: 44                 
Correct output: 57                  | Program output: 57                 
Correct output: 43                  | Program output: 43                 
Correct output: 0                   | Program output: 47                 
Correct output: 1                   | Program output: 1                  
Correct output: 6                   | Program output: 6                  
Correct output: 72                  | Program output: 72                 
Correct output: 1                   | Program output: 22                 
Correct output: 24                  | Program output: 24                 
Correct output: 32                  | Program output: 43                 
Correct output: 30                  | Program output: 68                 
Correct output: 22                  | Program output: 22                 
Correct output: 31                  | Program output: 31                 
Correct output: 10                  | Program output: 14                 
Correct output: 5                   | Program output: 5                  
Correct output: 6                   | Program output: 6                  
Correct output: -50                 | Program output: -34                
Correct output: -46                 | Program output: 51                 
Correct output: -70                 | Program output: -70                
Correct output: -7                  | Program output: 85                 
Correct output: -70                 | Program output: 22                 
Correct output: -16                 | Program output: -16                
Correct output: -92                 | Program output: -12                
Correct output: -72                 | Program output: -72                
Correct output: -1                  | Program output: 75                 
Correct output: -94                 | Program output: 22                 
Correct output: 20                  | Program output: 20                 
Correct output: -94                 | Program output: -94                
Correct output: -9                  | Program output: -9                 
Correct output: -57                 | Program output: -31                
Correct output: -95                 | Program output: -91                
Correct output: -64                 | Program output: -49                
Correct output: -99                 | Program output: -99                
Correct output: -79                 | Program output: -79                
Correct output: -78                 | Program output: 95                 
Correct output: -91                 | Program output: 33                 
Correct output: -43                 | Program output: -43                
Correct output: -9                  | Program output: 37                 
Correct output: -78                 | Program output: -78                
Correct output: -40                 | Program output: -40                
Correct output: 0                   | Program output: 0                  
Correct output: -83                 | Program output: -83                
Correct output: -25                 | Program output: 72                 
Correct output: -56                 | Program output: -56                
Correct output: -82                 | Program output: -82                
Correct output: 15                  | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -17                 | Program output: -5                 
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -86                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: -41                
Correct output: 40                  | Program output: 40                 
Correct output: -93                 | Program output: -93                
Correct output: -83                 | Program output: -20                
Correct output: -86                 | Program output: -86                
Correct output: -78                 | Program output: 23                 
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: -92                
Correct output: -65                 | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: -85                 | Program output: -85                
Correct output: -75                 | Program output: -75                
Correct output: -69                 | Program output: -69                
Correct output: -42                 | Program output: 3                  
Correct output: -72                 | Program output: -72                
Correct output: 2                   | Program output: 48                 
Correct output: -63                 | Program output: 46                 
Correct output: 29                  | Program output: 60                 
Correct output: -30                 | Program output: -30                
Correct output: -87                 | Program output: 31                 
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -4                  | Program output: 31                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_empty})
Lexicase best program: (integer_max boolean_invert_first_then_and in3 integer_yankdup integer_mod boolean_empty exec_y_when_autoconstructing (integer_yank boolean_or boolean_eq in1 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_rot boolean_frominteger integer_lt integer_min integer_yank print_integer boolean_empty boolean_empty)
Lexicase best errors: [0 0 0 0 0 0 0 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 27
Percent parens: 0.074
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_empty})
Zero cases best program: (integer_max boolean_invert_first_then_and in3 integer_yankdup integer_mod boolean_empty exec_y_when_autoconstructing (integer_yank boolean_or boolean_eq in1 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_rot boolean_frominteger integer_lt integer_min integer_yank print_integer boolean_empty boolean_empty)
Zero cases best errors: [0 0 0 0 0 0 0 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 27
Percent parens: 0.074
--- Lexicase Population Statistics ---
Count of elite individuals by case: (255 239 210 236 254 298 454 232 240 128)
Population mean number of elite cases: 2.55
Count of perfect (error zero) individuals by case: (255 239 210 236 254 298 454 232 240 128)
Population mean number of perfect (error zero) cases: 2.55
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_or} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_empty})
Best program: (integer_max integer_pop boolean_invert_first_then_and in3 integer_yankdup integer_mod boolean_empty exec_y_when_autoconstructing (integer_yank boolean_or in1 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_rot boolean_frominteger integer_lt integer_min integer_yank print_integer boolean_empty boolean_empty)
Errors: [0 0 0 0 0 0 0 0 0 1]
Total: 1
Mean: 0.1
Genome size: 25
Size: 27
Percent parens: 0.074
--- Population Statistics ---
Average total errors in population: 7.454
Median total errors in population: 8
Error averages by case: (0.745 0.761 0.79 0.764 0.746 0.702 0.546 0.768 0.76 0.872)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 26.423
Average program size in population (points): 30.116
Average percent parens in population: 0.119
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 5
Genome diversity (% unique genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.009
Error (vector) diversity:			 0.059
Behavioral diversity:				 0.313
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2437593
--- Timings ---
Current time: 1559593950370 milliseconds
Total Time:          12.6 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         6.8 seconds, 54.0%
Fitness Testing:      4.2 seconds, 33.0%
Report:               1.5 seconds, 12.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 229
Test mean error for best: 0.22900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 36                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: -38                
Correct output: 12                  | Program output: 12                 
Correct output: -9                  | Program output: -9                 
Correct output: -89                 | Program output: -89                
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 22                 
Correct output: 4                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 25                  | Program output: 25                 
Correct output: 43                  | Program output: 43                 
Correct output: 57                  | Program output: 57                 
Correct output: 43                  | Program output: 43                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 1                  
Correct output: 6                   | Program output: 6                  
Correct output: 72                  | Program output: 72                 
Correct output: 1                   | Program output: 22                 
Correct output: 24                  | Program output: 24                 
Correct output: 32                  | Program output: 43                 
Correct output: 30                  | Program output: 30                 
Correct output: 22                  | Program output: 22                 
Correct output: 31                  | Program output: 31                 
Correct output: 10                  | Program output: 14                 
Correct output: 5                   | Program output: 5                  
Correct output: 6                   | Program output: 6                  
Correct output: -50                 | Program output: -50                
Correct output: -46                 | Program output: 51                 
Correct output: -70                 | Program output: -70                
Correct output: -7                  | Program output: -7                 
Correct output: -70                 | Program output: -70                
Correct output: -16                 | Program output: -16                
Correct output: -92                 | Program output: -92                
Correct output: -72                 | Program output: -72                
Correct output: -1                  | Program output: 75                 
Correct output: -94                 | Program output: -94                
Correct output: 20                  | Program output: 20                 
Correct output: -94                 | Program output: -94                
Correct output: -9                  | Program output: -9                 
Correct output: -57                 | Program output: -57                
Correct output: -95                 | Program output: -95                
Correct output: -64                 | Program output: -64                
Correct output: -99                 | Program output: -99                
Correct output: -79                 | Program output: -79                
Correct output: -78                 | Program output: -78                
Correct output: -91                 | Program output: -91                
Correct output: -43                 | Program output: -43                
Correct output: -9                  | Program output: -9                 
Correct output: -78                 | Program output: -78                
Correct output: -40                 | Program output: -40                
Correct output: 0                   | Program output: 0                  
Correct output: -83                 | Program output: -83                
Correct output: -25                 | Program output: 69                 
Correct output: -56                 | Program output: -56                
Correct output: -82                 | Program output: -82                
Correct output: 15                  | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -17                 | Program output: -5                 
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: -41                
Correct output: 40                  | Program output: 40                 
Correct output: -93                 | Program output: -93                
Correct output: -83                 | Program output: -20                
Correct output: -86                 | Program output: -86                
Correct output: -78                 | Program output: 23                 
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: -92                
Correct output: -65                 | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: -85                 | Program output: -85                
Correct output: -75                 | Program output: -75                
Correct output: -69                 | Program output: -69                
Correct output: -42                 | Program output: 3                  
Correct output: -72                 | Program output: -72                
Correct output: 2                   | Program output: 48                 
Correct output: -63                 | Program output: 10                 
Correct output: 29                  | Program output: 29                 
Correct output: -30                 | Program output: -30                
Correct output: -87                 | Program output: -87                
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 1, :instruction integer_rot} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_empty})
Lexicase best program: (integer_max integer_pop boolean_invert_first_then_and in3 integer_yankdup integer_mod boolean_empty exec_y_when_autoconstructing (boolean_or boolean_eq in1 in2 integer_rot) tagged_322 in4 in2 boolean_or boolean_rot integer_lt integer_min integer_min integer_yank print_integer boolean_empty boolean_empty)
Lexicase best errors: [0 0 0 1 0 0 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 27
Percent parens: 0.074
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 1, :instruction integer_rot} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_empty})
Zero cases best program: (integer_max integer_pop boolean_invert_first_then_and in3 integer_yankdup integer_mod boolean_empty exec_y_when_autoconstructing (boolean_or boolean_eq in1 in2 integer_rot) tagged_322 in4 in2 boolean_or boolean_rot integer_lt integer_min integer_min integer_yank print_integer boolean_empty boolean_empty)
Zero cases best errors: [0 0 0 1 0 0 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 27
Percent parens: 0.074
--- Lexicase Population Statistics ---
Count of elite individuals by case: (112 288 128 21 376 289 144 23 571 110)
Population mean number of elite cases: 2.06
Count of perfect (error zero) individuals by case: (112 288 128 21 376 289 144 23 571 110)
Population mean number of perfect (error zero) cases: 2.06
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 1, :instruction integer_rot} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_empty})
Best program: (integer_max integer_pop boolean_invert_first_then_and in3 integer_yankdup integer_mod boolean_empty exec_y_when_autoconstructing (boolean_or boolean_eq in1 in2 integer_rot) tagged_322 in4 in2 boolean_or boolean_rot integer_lt integer_min integer_min integer_yank print_integer boolean_empty boolean_empty)
Errors: [0 0 0 1 0 0 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 25
Size: 27
Percent parens: 0.074
--- Population Statistics ---
Average total errors in population: 7.938
Median total errors in population: 8
Error averages by case: (0.888 0.712 0.872 0.979 0.624 0.711 0.856 0.977 0.429 0.89)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 25.679
Average program size in population (points): 29.817
Average percent parens in population: 0.133
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.009
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.221
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2785172
--- Timings ---
Current time: 1559593952126 milliseconds
Total Time:          14.3 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         8.0 seconds, 56.0%
Fitness Testing:      4.5 seconds, 31.5%
Report:               1.7 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 440
Test mean error for best: 0.44000
Test Case    0 | Error: 1
Test Case    1 | Error: 1
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 1
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 1
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 1
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 1
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 1
Test Case   59 | Error: 0
Test Case   60 | Error: 1
Test Case   61 | Error: 1
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 1
Test Case   77 | Error: 0
Test Case   78 | Error: 1
Test Case   79 | Error: 1
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 1
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 1
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 1
Test Case  204 | Error: 1
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 1
Test Case  209 | Error: 1
Test Case  210 | Error: 1
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 1
Test Case  217 | Error: 1
Test Case  218 | Error: 1
Test Case  219 | Error: 1
Test Case  220 | Error: 1
Test Case  221 | Error: 0
Test Case  222 | Error: 1
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 1
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 1
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 0
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 1
Test Case  262 | Error: 1
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 1
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 1
Test Case  278 | Error: 1
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 1
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 1
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 1
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 1
Test Case  304 | Error: 0
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 1
Test Case  315 | Error: 1
Test Case  316 | Error: 1
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 1
Test Case  330 | Error: 1
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 1
Test Case  335 | Error: 1
Test Case  336 | Error: 1
Test Case  337 | Error: 1
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 1
Test Case  374 | Error: 0
Test Case  375 | Error: 1
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 1
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 1
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 1
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 1
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 1
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 1
Test Case  442 | Error: 1
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 1
Test Case  480 | Error: 0
Test Case  481 | Error: 1
Test Case  482 | Error: 1
Test Case  483 | Error: 1
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 1
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 1
Test Case  492 | Error: 0
Test Case  493 | Error: 1
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 0
Test Case  504 | Error: 1
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 1
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 1
Test Case  514 | Error: 1
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 1
Test Case  530 | Error: 1
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 1
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 1
Test Case  544 | Error: 1
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 1
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 1
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 1
Test Case  570 | Error: 1
Test Case  571 | Error: 0
Test Case  572 | Error: 1
Test Case  573 | Error: 1
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 1
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 1
Test Case  581 | Error: 1
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 1
Test Case  595 | Error: 1
Test Case  596 | Error: 1
Test Case  597 | Error: 1
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 1
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 1
Test Case  608 | Error: 1
Test Case  609 | Error: 1
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 1
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 1
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 1
Test Case  626 | Error: 1
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 1
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 1
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 1
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 1
Test Case  670 | Error: 1
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 1
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 1
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 1
Test Case  685 | Error: 0
Test Case  686 | Error: 1
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 1
Test Case  692 | Error: 1
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 1
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 1
Test Case  700 | Error: 1
Test Case  701 | Error: 1
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 1
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 1
Test Case  715 | Error: 1
Test Case  716 | Error: 1
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 1
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 1
Test Case  728 | Error: 1
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 1
Test Case  732 | Error: 1
Test Case  733 | Error: 0
Test Case  734 | Error: 1
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 1
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 1
Test Case  754 | Error: 1
Test Case  755 | Error: 1
Test Case  756 | Error: 1
Test Case  757 | Error: 1
Test Case  758 | Error: 1
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 1
Test Case  764 | Error: 0
Test Case  765 | Error: 1
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 1
Test Case  771 | Error: 1
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 1
Test Case  782 | Error: 1
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 1
Test Case  790 | Error: 0
Test Case  791 | Error: 1
Test Case  792 | Error: 0
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 1
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 1
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 1
Test Case  817 | Error: 1
Test Case  818 | Error: 1
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 1
Test Case  836 | Error: 1
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 1
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 1
Test Case  853 | Error: 1
Test Case  854 | Error: 1
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 1
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 1
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 1
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 1
Test Case  905 | Error: 1
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 1
Test Case  909 | Error: 1
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 1
Test Case  917 | Error: 1
Test Case  918 | Error: 1
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 1
Test Case  924 | Error: 1
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 1
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 0
Test Case  943 | Error: 1
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 1
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 1
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 1
Test Case  963 | Error: 1
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 1
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 1
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 1
Test Case  982 | Error: 1
Test Case  983 | Error: 0
Test Case  984 | Error: 1
Test Case  985 | Error: 1
Test Case  986 | Error: 1
Test Case  987 | Error: 1
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 1
Test Case  994 | Error: 1
Test Case  995 | Error: 0
Test Case  996 | Error: 1
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 36                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: -38                
Correct output: 12                  | Program output: 12                 
Correct output: -9                  | Program output: -9                 
Correct output: -89                 | Program output: 66                 
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 22                 
Correct output: 4                   | Program output: 4                  
Correct output: 19                  | Program output: 80                 
Correct output: 25                  | Program output: 25                 
Correct output: 43                  | Program output: 43                 
Correct output: 57                  | Program output: 57                 
Correct output: 43                  | Program output: 43                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 5                  
Correct output: 6                   | Program output: 6                  
Correct output: 72                  | Program output: 72                 
Correct output: 1                   | Program output: 1                  
Correct output: 24                  | Program output: 85                 
Correct output: 32                  | Program output: 43                 
Correct output: 30                  | Program output: 30                 
Correct output: 22                  | Program output: 22                 
Correct output: 31                  | Program output: 95                 
Correct output: 10                  | Program output: 14                 
Correct output: 5                   | Program output: 5                  
Correct output: 6                   | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -46                 | Program output: 51                 
Correct output: -70                 | Program output: -70                
Correct output: -7                  | Program output: -7                 
Correct output: -70                 | Program output: -70                
Correct output: -16                 | Program output: -16                
Correct output: -92                 | Program output: -92                
Correct output: -72                 | Program output: -72                
Correct output: -1                  | Program output: 75                 
Correct output: -94                 | Program output: -94                
Correct output: 20                  | Program output: 46                 
Correct output: -94                 | Program output: -39                
Correct output: -9                  | Program output: 17                 
Correct output: -57                 | Program output: -57                
Correct output: -95                 | Program output: -95                
Correct output: -64                 | Program output: -64                
Correct output: -99                 | Program output: -99                
Correct output: -79                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -91                 | Program output: -91                
Correct output: -43                 | Program output: -43                
Correct output: -9                  | Program output: -9                 
Correct output: -78                 | Program output: -64                
Correct output: -40                 | Program output: -40                
Correct output: 0                   | Program output: 0                  
Correct output: -83                 | Program output: -6                 
Correct output: -25                 | Program output: 69                 
Correct output: -56                 | Program output: -56                
Correct output: -82                 | Program output: -82                
Correct output: 15                  | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: -97                 | Program output: -49                
Correct output: -76                 | Program output: -76                
Correct output: -17                 | Program output: 42                 
Correct output: -49                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -31                
Correct output: -92                 | Program output: 31                 
Correct output: 40                  | Program output: 55                 
Correct output: -93                 | Program output: -55                
Correct output: -83                 | Program output: -20                
Correct output: -86                 | Program output: -40                
Correct output: -78                 | Program output: 23                 
Correct output: -52                 | Program output: -25                
Correct output: -92                 | Program output: -68                
Correct output: -65                 | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: -85                 | Program output: 12                 
Correct output: -75                 | Program output: -75                
Correct output: -69                 | Program output: -69                
Correct output: -42                 | Program output: 3                  
Correct output: -72                 | Program output: -72                
Correct output: 2                   | Program output: 2                  
Correct output: -63                 | Program output: 10                 
Correct output: 29                  | Program output: 29                 
Correct output: -30                 | Program output: -30                
Correct output: -87                 | Program output: -87                
Correct output: -100                | Program output: -58                
Correct output: -58                 | Program output: -25                
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction tagged_322} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction in2} {:close 1, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_eq} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_dup_times})
Lexicase best program: (integer_yankdup integer_max integer_pop boolean_invert_first_then_and in3 integer_yankdup exec_empty integer_mod integer_dup_items integer_rot boolean_or boolean_eq in1 in2 tagged_322 in4 integer_min in2 boolean_eq boolean_or boolean_rot boolean_frominteger integer_min boolean_eq print_integer boolean_empty exec_dup_times ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 29
Percent parens: 0.069
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction tagged_322} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction in2} {:close 1, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_eq} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_dup_times})
Zero cases best program: (integer_yankdup integer_max integer_pop boolean_invert_first_then_and in3 integer_yankdup exec_empty integer_mod integer_dup_items integer_rot boolean_or boolean_eq in1 in2 tagged_322 in4 integer_min in2 boolean_eq boolean_or boolean_rot boolean_frominteger integer_min boolean_eq print_integer boolean_empty exec_dup_times ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 29
Percent parens: 0.069
--- Lexicase Population Statistics ---
Count of elite individuals by case: (346 378 347 341 366 182 356 378 627 350)
Population mean number of elite cases: 3.67
Count of perfect (error zero) individuals by case: (346 378 347 341 366 182 356 378 627 350)
Population mean number of perfect (error zero) cases: 3.67
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_max} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_mod} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction tagged_322} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s_when_autoconstructing})
Best program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 24
Size: 30
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 6.329
Median total errors in population: 7
Error averages by case: (0.654 0.622 0.653 0.659 0.634 0.818 0.644 0.622 0.373 0.65)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 25.474
Average program size in population (points): 29.83
Average percent parens in population: 0.138
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 6
Genome diversity (% unique genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.011
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.229
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 3136512
--- Timings ---
Current time: 1559593954077 milliseconds
Total Time:          16.1 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         9.2 seconds, 57.3%
Fitness Testing:      4.9 seconds, 30.4%
Report:               1.9 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 7
Successful program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 30


Auto-simplifying with starting size: 30
step: 0
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 500
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 1000
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 1500
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 2000
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 2500
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 3000
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 3500
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 4000
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 4500
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

step: 5000
program: (integer_max boolean_invert_first_then_and in3 integer_mod boolean_empty integer_yank exec_do*while (boolean_or boolean_eq in1 in4 in2 tagged_322 in4 in2 boolean_or boolean_rot) boolean_frominteger integer_dup_items integer_lt integer_min print_integer exec_do*count (exec_s_when_autoconstructing () () ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 30

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 440
Test mean error for best: 0.44000
Test Case    0 | Error: 1
Test Case    1 | Error: 1
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 1
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 1
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 1
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 1
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 1
Test Case   59 | Error: 0
Test Case   60 | Error: 1
Test Case   61 | Error: 1
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 1
Test Case   77 | Error: 0
Test Case   78 | Error: 1
Test Case   79 | Error: 1
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 1
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 1
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 1
Test Case  204 | Error: 1
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 1
Test Case  209 | Error: 1
Test Case  210 | Error: 1
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 1
Test Case  217 | Error: 1
Test Case  218 | Error: 1
Test Case  219 | Error: 1
Test Case  220 | Error: 1
Test Case  221 | Error: 0
Test Case  222 | Error: 1
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 1
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 1
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 0
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 1
Test Case  262 | Error: 1
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 1
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 1
Test Case  278 | Error: 1
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 1
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 1
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 1
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 1
Test Case  304 | Error: 0
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 1
Test Case  315 | Error: 1
Test Case  316 | Error: 1
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 1
Test Case  330 | Error: 1
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 1
Test Case  335 | Error: 1
Test Case  336 | Error: 1
Test Case  337 | Error: 1
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 1
Test Case  374 | Error: 0
Test Case  375 | Error: 1
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 1
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 1
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 1
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 1
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 1
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 1
Test Case  442 | Error: 1
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 1
Test Case  480 | Error: 0
Test Case  481 | Error: 1
Test Case  482 | Error: 1
Test Case  483 | Error: 1
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 1
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 1
Test Case  492 | Error: 0
Test Case  493 | Error: 1
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 0
Test Case  504 | Error: 1
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 1
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 1
Test Case  514 | Error: 1
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 1
Test Case  530 | Error: 1
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 1
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 1
Test Case  544 | Error: 1
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 1
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 1
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 1
Test Case  570 | Error: 1
Test Case  571 | Error: 0
Test Case  572 | Error: 1
Test Case  573 | Error: 1
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 1
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 1
Test Case  581 | Error: 1
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 1
Test Case  595 | Error: 1
Test Case  596 | Error: 1
Test Case  597 | Error: 1
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 1
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 1
Test Case  608 | Error: 1
Test Case  609 | Error: 1
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 1
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 1
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 1
Test Case  626 | Error: 1
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 1
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 1
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 1
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 1
Test Case  670 | Error: 1
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 1
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 1
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 1
Test Case  685 | Error: 0
Test Case  686 | Error: 1
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 1
Test Case  692 | Error: 1
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 1
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 1
Test Case  700 | Error: 1
Test Case  701 | Error: 1
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 1
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 1
Test Case  715 | Error: 1
Test Case  716 | Error: 1
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 1
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 1
Test Case  728 | Error: 1
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 1
Test Case  732 | Error: 1
Test Case  733 | Error: 0
Test Case  734 | Error: 1
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 1
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 1
Test Case  754 | Error: 1
Test Case  755 | Error: 1
Test Case  756 | Error: 1
Test Case  757 | Error: 1
Test Case  758 | Error: 1
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 1
Test Case  764 | Error: 0
Test Case  765 | Error: 1
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 1
Test Case  771 | Error: 1
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 1
Test Case  782 | Error: 1
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 1
Test Case  790 | Error: 0
Test Case  791 | Error: 1
Test Case  792 | Error: 0
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 1
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 1
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 1
Test Case  817 | Error: 1
Test Case  818 | Error: 1
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 1
Test Case  836 | Error: 1
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 1
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 1
Test Case  853 | Error: 1
Test Case  854 | Error: 1
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 1
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 1
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 1
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 1
Test Case  905 | Error: 1
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 1
Test Case  909 | Error: 1
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 1
Test Case  917 | Error: 1
Test Case  918 | Error: 1
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 1
Test Case  924 | Error: 1
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 1
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 0
Test Case  943 | Error: 1
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 1
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 1
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 1
Test Case  963 | Error: 1
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 1
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 1
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 1
Test Case  982 | Error: 1
Test Case  983 | Error: 0
Test Case  984 | Error: 1
Test Case  985 | Error: 1
Test Case  986 | Error: 1
Test Case  987 | Error: 1
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 1
Test Case  994 | Error: 1
Test Case  995 | Error: 0
Test Case  996 | Error: 1
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -82                 | Program output: -82                
Correct output: -44                 | Program output: -44                
Correct output: 36                  | Program output: 36                 
Correct output: 12                  | Program output: 77                 
Correct output: -96                 | Program output: -96                
Correct output: -38                 | Program output: -38                
Correct output: 12                  | Program output: 12                 
Correct output: -9                  | Program output: -9                 
Correct output: -89                 | Program output: 66                 
Correct output: -42                 | Program output: -42                
Correct output: 18                  | Program output: 18                 
Correct output: 70                  | Program output: 70                 
Correct output: -36                 | Program output: -36                
Correct output: 12                  | Program output: 12                 
Correct output: 53                  | Program output: 53                 
Correct output: 22                  | Program output: 22                 
Correct output: 4                   | Program output: 4                  
Correct output: 19                  | Program output: 80                 
Correct output: 25                  | Program output: 25                 
Correct output: 43                  | Program output: 43                 
Correct output: 57                  | Program output: 57                 
Correct output: 43                  | Program output: 43                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 5                  
Correct output: 6                   | Program output: 6                  
Correct output: 72                  | Program output: 72                 
Correct output: 1                   | Program output: 1                  
Correct output: 24                  | Program output: 85                 
Correct output: 32                  | Program output: 43                 
Correct output: 30                  | Program output: 30                 
Correct output: 22                  | Program output: 22                 
Correct output: 31                  | Program output: 95                 
Correct output: 10                  | Program output: 14                 
Correct output: 5                   | Program output: 5                  
Correct output: 6                   | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -46                 | Program output: 51                 
Correct output: -70                 | Program output: -70                
Correct output: -7                  | Program output: -7                 
Correct output: -70                 | Program output: -70                
Correct output: -16                 | Program output: -16                
Correct output: -92                 | Program output: -92                
Correct output: -72                 | Program output: -72                
Correct output: -1                  | Program output: 75                 
Correct output: -94                 | Program output: -94                
Correct output: 20                  | Program output: 46                 
Correct output: -94                 | Program output: -39                
Correct output: -9                  | Program output: 17                 
Correct output: -57                 | Program output: -57                
Correct output: -95                 | Program output: -95                
Correct output: -64                 | Program output: -64                
Correct output: -99                 | Program output: -99                
Correct output: -79                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -91                 | Program output: -91                
Correct output: -43                 | Program output: -43                
Correct output: -9                  | Program output: -9                 
Correct output: -78                 | Program output: -64                
Correct output: -40                 | Program output: -40                
Correct output: 0                   | Program output: 0                  
Correct output: -83                 | Program output: -6                 
Correct output: -25                 | Program output: 69                 
Correct output: -56                 | Program output: -56                
Correct output: -82                 | Program output: -82                
Correct output: 15                  | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: -97                 | Program output: -49                
Correct output: -76                 | Program output: -76                
Correct output: -17                 | Program output: 42                 
Correct output: -49                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -31                
Correct output: -92                 | Program output: 31                 
Correct output: 40                  | Program output: 55                 
Correct output: -93                 | Program output: -55                
Correct output: -83                 | Program output: -20                
Correct output: -86                 | Program output: -40                
Correct output: -78                 | Program output: 23                 
Correct output: -52                 | Program output: -25                
Correct output: -92                 | Program output: -68                
Correct output: -65                 | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: -85                 | Program output: 12                 
Correct output: -75                 | Program output: -75                
Correct output: -69                 | Program output: -69                
Correct output: -42                 | Program output: 3                  
Correct output: -72                 | Program output: -72                
Correct output: 2                   | Program output: 2                  
Correct output: -63                 | Program output: 10                 
Correct output: 29                  | Program output: 29                 
Correct output: -30                 | Program output: -30                
Correct output: -87                 | Program output: -87                
Correct output: -100                | Program output: -58                
Correct output: -58                 | Program output: -25                
Correct output: -4                  | Program output: -4                 
;;******************************
