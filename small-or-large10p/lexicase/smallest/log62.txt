Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-8 -8 -47 -8] -47] [[26 26 92 26] 26] [[-39 -39 -39 -64] -64] [[-45 -45 -45 23] -45] [[-57 -53 -57 -57] -57] [[31 31 31 -30] -30] [[53 31 31 31] 31] [[-88 -88 7 -88] -88] [[47 47 47 -53] -53] [[-54 98 -54 -54] -54] [(-23 -23 -23 -23) -23] [(67 67 67 67) 67] [(-6 -6 -6 -6) -6] [(-9 -9 -9 -9) -9] [(-17 -17 -17 -17) -17] [(5 74 66 49) 5] [(15 42 33 52) 15] [(97 1 64 93) 1] [(66 3 52 64) 3] [(95 50 91 46) 46] [(83 87 12 98) 12] [(43 3 73 22) 3] [(17 76 82 70) 17] [(71 54 80 18) 18] [(43 42 90 11) 11] [(65 59 89 65) 59] [(92 95 63 68) 63] [(9 63 82 30) 9] [(59 68 51 30) 30] [(3 72 38 31) 3] [(26 78 20 98) 20] [(16 28 54 78) 16] [(85 76 78 63) 63] [(78 20 38 91) 20] [(48 14 93 23) 14] [(57 44 24 64) 24] [(31 -85 21 83) -85] [(-34 57 -92 58) -92] [(20 1 -41 -88) -88] [(-32 26 -20 25) -32] [(70 -28 92 -56) -56] [(87 36 1 -18) -18] [(-87 -70 76 -63) -87] [(10 7 -23 61) -23] [(-77 65 89 -93) -93] [(28 -49 82 -92) -92] [(-86 -40 97 -80) -86] [(-14 4 -51 -80) -80] [(72 -34 86 -6) -34] [(-51 81 21 59) -51] [(4 1 -12 -38) -38] [(14 19 26 61) 14] [(-26 44 -83 -57) -83] [(22 34 69 -38) -38] [(-57 -13 80 76) -57] [(-14 -64 -77 -14) -77] [(-34 -57 61 96) -57] [(41 -20 100 -37) -37] [(-93 21 -29 56) -93] [(-21 -47 -20 25) -47] [(-84 69 -63 76) -84] [(12 6 -15 88) -15] [(42 98 -45 86) -45] [(-79 -95 32 67) -95] [(-20 -18 -53 23) -53] [(84 -1 -31 -5) -31] [(-1 29 80 93) -1] [(-50 -3 -49 -13) -50] [(-15 -12 -38 59) -38] [(-62 -88 46 -5) -88] [(65 0 -64 51) -64] [(35 -12 60 -53) -53] [(94 91 15 -15) -15] [(49 65 -71 -15) -71] [(-74 44 -53 -77) -77] [(-43 3 3 -78) -78] [(5 -24 -64 -79) -79] [(-59 -38 99 0) -59] [(44 90 -55 22) -55] [(-72 -40 93 -16) -72] [(-73 78 -45 43) -73] [(85 24 35 -26) -26] [(63 -86 23 87) -86] [(80 -50 14 -54) -54] [(-52 43 35 -45) -52] [(32 -80 -52 73) -80] [(-93 -42 78 44) -93] [(55 -68 -16 38) -68] [(-90 58 -66 -45) -90] [(56 82 44 51) 44] [(-82 61 56 76) -82] [(-51 -39 35 -15) -51] [(-51 93 -3 25) -51] [(30 4 -97 64) -97] [(85 16 91 -66) -66])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-8 -8 -47 -8] -47]
Train Case:   6 | Input/Output: [[26 26 92 26] 26]
Train Case:   7 | Input/Output: [[-39 -39 -39 -64] -64]
Train Case:   8 | Input/Output: [[-45 -45 -45 23] -45]
Train Case:   9 | Input/Output: [[-57 -53 -57 -57] -57]
Train Case:  10 | Input/Output: [[31 31 31 -30] -30]
Train Case:  11 | Input/Output: [[53 31 31 31] 31]
Train Case:  12 | Input/Output: [[-88 -88 7 -88] -88]
Train Case:  13 | Input/Output: [[47 47 47 -53] -53]
Train Case:  14 | Input/Output: [[-54 98 -54 -54] -54]
Train Case:  15 | Input/Output: [(-23 -23 -23 -23) -23]
Train Case:  16 | Input/Output: [(67 67 67 67) 67]
Train Case:  17 | Input/Output: [(-6 -6 -6 -6) -6]
Train Case:  18 | Input/Output: [(-9 -9 -9 -9) -9]
Train Case:  19 | Input/Output: [(-17 -17 -17 -17) -17]
Train Case:  20 | Input/Output: [(5 74 66 49) 5]
Train Case:  21 | Input/Output: [(15 42 33 52) 15]
Train Case:  22 | Input/Output: [(97 1 64 93) 1]
Train Case:  23 | Input/Output: [(66 3 52 64) 3]
Train Case:  24 | Input/Output: [(95 50 91 46) 46]
Train Case:  25 | Input/Output: [(83 87 12 98) 12]
Train Case:  26 | Input/Output: [(43 3 73 22) 3]
Train Case:  27 | Input/Output: [(17 76 82 70) 17]
Train Case:  28 | Input/Output: [(71 54 80 18) 18]
Train Case:  29 | Input/Output: [(43 42 90 11) 11]
Train Case:  30 | Input/Output: [(65 59 89 65) 59]
Train Case:  31 | Input/Output: [(92 95 63 68) 63]
Train Case:  32 | Input/Output: [(9 63 82 30) 9]
Train Case:  33 | Input/Output: [(59 68 51 30) 30]
Train Case:  34 | Input/Output: [(3 72 38 31) 3]
Train Case:  35 | Input/Output: [(26 78 20 98) 20]
Train Case:  36 | Input/Output: [(16 28 54 78) 16]
Train Case:  37 | Input/Output: [(85 76 78 63) 63]
Train Case:  38 | Input/Output: [(78 20 38 91) 20]
Train Case:  39 | Input/Output: [(48 14 93 23) 14]
Train Case:  40 | Input/Output: [(57 44 24 64) 24]
Train Case:  41 | Input/Output: [(31 -85 21 83) -85]
Train Case:  42 | Input/Output: [(-34 57 -92 58) -92]
Train Case:  43 | Input/Output: [(20 1 -41 -88) -88]
Train Case:  44 | Input/Output: [(-32 26 -20 25) -32]
Train Case:  45 | Input/Output: [(70 -28 92 -56) -56]
Train Case:  46 | Input/Output: [(87 36 1 -18) -18]
Train Case:  47 | Input/Output: [(-87 -70 76 -63) -87]
Train Case:  48 | Input/Output: [(10 7 -23 61) -23]
Train Case:  49 | Input/Output: [(-77 65 89 -93) -93]
Train Case:  50 | Input/Output: [(28 -49 82 -92) -92]
Train Case:  51 | Input/Output: [(-86 -40 97 -80) -86]
Train Case:  52 | Input/Output: [(-14 4 -51 -80) -80]
Train Case:  53 | Input/Output: [(72 -34 86 -6) -34]
Train Case:  54 | Input/Output: [(-51 81 21 59) -51]
Train Case:  55 | Input/Output: [(4 1 -12 -38) -38]
Train Case:  56 | Input/Output: [(14 19 26 61) 14]
Train Case:  57 | Input/Output: [(-26 44 -83 -57) -83]
Train Case:  58 | Input/Output: [(22 34 69 -38) -38]
Train Case:  59 | Input/Output: [(-57 -13 80 76) -57]
Train Case:  60 | Input/Output: [(-14 -64 -77 -14) -77]
Train Case:  61 | Input/Output: [(-34 -57 61 96) -57]
Train Case:  62 | Input/Output: [(41 -20 100 -37) -37]
Train Case:  63 | Input/Output: [(-93 21 -29 56) -93]
Train Case:  64 | Input/Output: [(-21 -47 -20 25) -47]
Train Case:  65 | Input/Output: [(-84 69 -63 76) -84]
Train Case:  66 | Input/Output: [(12 6 -15 88) -15]
Train Case:  67 | Input/Output: [(42 98 -45 86) -45]
Train Case:  68 | Input/Output: [(-79 -95 32 67) -95]
Train Case:  69 | Input/Output: [(-20 -18 -53 23) -53]
Train Case:  70 | Input/Output: [(84 -1 -31 -5) -31]
Train Case:  71 | Input/Output: [(-1 29 80 93) -1]
Train Case:  72 | Input/Output: [(-50 -3 -49 -13) -50]
Train Case:  73 | Input/Output: [(-15 -12 -38 59) -38]
Train Case:  74 | Input/Output: [(-62 -88 46 -5) -88]
Train Case:  75 | Input/Output: [(65 0 -64 51) -64]
Train Case:  76 | Input/Output: [(35 -12 60 -53) -53]
Train Case:  77 | Input/Output: [(94 91 15 -15) -15]
Train Case:  78 | Input/Output: [(49 65 -71 -15) -71]
Train Case:  79 | Input/Output: [(-74 44 -53 -77) -77]
Train Case:  80 | Input/Output: [(-43 3 3 -78) -78]
Train Case:  81 | Input/Output: [(5 -24 -64 -79) -79]
Train Case:  82 | Input/Output: [(-59 -38 99 0) -59]
Train Case:  83 | Input/Output: [(44 90 -55 22) -55]
Train Case:  84 | Input/Output: [(-72 -40 93 -16) -72]
Train Case:  85 | Input/Output: [(-73 78 -45 43) -73]
Train Case:  86 | Input/Output: [(85 24 35 -26) -26]
Train Case:  87 | Input/Output: [(63 -86 23 87) -86]
Train Case:  88 | Input/Output: [(80 -50 14 -54) -54]
Train Case:  89 | Input/Output: [(-52 43 35 -45) -52]
Train Case:  90 | Input/Output: [(32 -80 -52 73) -80]
Train Case:  91 | Input/Output: [(-93 -42 78 44) -93]
Train Case:  92 | Input/Output: [(55 -68 -16 38) -68]
Train Case:  93 | Input/Output: [(-90 58 -66 -45) -90]
Train Case:  94 | Input/Output: [(56 82 44 51) 44]
Train Case:  95 | Input/Output: [(-82 61 56 76) -82]
Train Case:  96 | Input/Output: [(-51 -39 35 -15) -51]
Train Case:  97 | Input/Output: [(-51 93 -3 25) -51]
Train Case:  98 | Input/Output: [(30 4 -97 64) -97]
Train Case:  99 | Input/Output: [(85 16 91 -66) -66]
Test Case:   0 | Input/Output: [[-20 -52 -52 -52] -52]
Test Case:   1 | Input/Output: [[9 83 83 83] 9]
Test Case:   2 | Input/Output: [[-36 -62 -62 -62] -62]
Test Case:   3 | Input/Output: [[-66 -66 -87 -66] -87]
Test Case:   4 | Input/Output: [[48 48 13 48] 13]
Test Case:   5 | Input/Output: [[-33 -33 -33 -46] -46]
Test Case:   6 | Input/Output: [[-24 -83 -24 -24] -83]
Test Case:   7 | Input/Output: [[-97 -58 -58 -58] -97]
Test Case:   8 | Input/Output: [[-8 -8 -35 -8] -35]
Test Case:   9 | Input/Output: [[-90 -60 -90 -90] -90]
Test Case:  10 | Input/Output: [[14 -97 14 14] -97]
Test Case:  11 | Input/Output: [[38 38 -94 38] -94]
Test Case:  12 | Input/Output: [[-58 -58 -39 -58] -58]
Test Case:  13 | Input/Output: [[-87 -63 -87 -87] -87]
Test Case:  14 | Input/Output: [[-84 -84 -84 32] -84]
Test Case:  15 | Input/Output: [[-61 -61 -61 50] -61]
Test Case:  16 | Input/Output: [[-48 3 3 3] -48]
Test Case:  17 | Input/Output: [[95 95 28 95] 28]
Test Case:  18 | Input/Output: [[79 79 79 -68] -68]
Test Case:  19 | Input/Output: [[-69 -69 -69 78] -69]
Test Case:  20 | Input/Output: [[-52 -52 27 -52] -52]
Test Case:  21 | Input/Output: [[41 -58 -58 -58] -58]
Test Case:  22 | Input/Output: [[55 -41 -41 -41] -41]
Test Case:  23 | Input/Output: [[97 -5 97 97] -5]
Test Case:  24 | Input/Output: [[-43 49 -43 -43] -43]
Test Case:  25 | Input/Output: [[-6 -6 -74 -6] -74]
Test Case:  26 | Input/Output: [[-40 -40 -40 -35] -40]
Test Case:  27 | Input/Output: [[100 100 100 -42] -42]
Test Case:  28 | Input/Output: [[33 -24 -24 -24] -24]
Test Case:  29 | Input/Output: [[-12 -43 -12 -12] -43]
Test Case:  30 | Input/Output: [[-42 19 19 19] -42]
Test Case:  31 | Input/Output: [[40 40 97 40] 40]
Test Case:  32 | Input/Output: [[-61 39 -61 -61] -61]
Test Case:  33 | Input/Output: [[-27 33 33 33] -27]
Test Case:  34 | Input/Output: [[16 -81 16 16] -81]
Test Case:  35 | Input/Output: [[49 49 -31 49] -31]
Test Case:  36 | Input/Output: [[32 32 -74 32] -74]
Test Case:  37 | Input/Output: [[-55 -94 -55 -55] -94]
Test Case:  38 | Input/Output: [[0 32 0 0] 0]
Test Case:  39 | Input/Output: [[74 73 74 74] 73]
Test Case:  40 | Input/Output: [[-16 -27 -16 -16] -27]
Test Case:  41 | Input/Output: [[64 -85 -85 -85] -85]
Test Case:  42 | Input/Output: [[71 -55 -55 -55] -55]
Test Case:  43 | Input/Output: [[-69 -69 -69 3] -69]
Test Case:  44 | Input/Output: [[90 94 90 90] 90]
Test Case:  45 | Input/Output: [[8 67 67 67] 8]
Test Case:  46 | Input/Output: [[32 32 -36 32] -36]
Test Case:  47 | Input/Output: [[72 72 -14 72] -14]
Test Case:  48 | Input/Output: [[53 -3 53 53] -3]
Test Case:  49 | Input/Output: [[15 15 -29 15] -29]
Test Case:  50 | Input/Output: [[-44 39 39 39] -44]
Test Case:  51 | Input/Output: [[-49 -49 -29 -49] -49]
Test Case:  52 | Input/Output: [[3 -92 3 3] -92]
Test Case:  53 | Input/Output: [[-32 84 -32 -32] -32]
Test Case:  54 | Input/Output: [[-2 29 -2 -2] -2]
Test Case:  55 | Input/Output: [[97 97 -34 97] -34]
Test Case:  56 | Input/Output: [[-81 -81 -47 -81] -81]
Test Case:  57 | Input/Output: [[-64 -64 7 -64] -64]
Test Case:  58 | Input/Output: [[-81 -83 -81 -81] -83]
Test Case:  59 | Input/Output: [[-33 -33 -71 -33] -71]
Test Case:  60 | Input/Output: [[65 65 42 65] 42]
Test Case:  61 | Input/Output: [[13 65 65 65] 13]
Test Case:  62 | Input/Output: [[-74 -74 -23 -74] -74]
Test Case:  63 | Input/Output: [[28 28 28 -70] -70]
Test Case:  64 | Input/Output: [[59 59 59 -75] -75]
Test Case:  65 | Input/Output: [[-97 -8 -8 -8] -97]
Test Case:  66 | Input/Output: [[57 57 57 68] 57]
Test Case:  67 | Input/Output: [[-83 -83 -15 -83] -83]
Test Case:  68 | Input/Output: [[13 13 -77 13] -77]
Test Case:  69 | Input/Output: [[-89 -35 -89 -89] -89]
Test Case:  70 | Input/Output: [[81 81 81 -53] -53]
Test Case:  71 | Input/Output: [[-47 -47 -47 30] -47]
Test Case:  72 | Input/Output: [[9 74 74 74] 9]
Test Case:  73 | Input/Output: [[26 26 26 7] 7]
Test Case:  74 | Input/Output: [[-13 -13 -13 3] -13]
Test Case:  75 | Input/Output: [[31 -65 -65 -65] -65]
Test Case:  76 | Input/Output: [[42 42 42 -64] -64]
Test Case:  77 | Input/Output: [[-93 -77 -77 -77] -93]
Test Case:  78 | Input/Output: [[33 65 65 65] 33]
Test Case:  79 | Input/Output: [[83 83 -74 83] -74]
Test Case:  80 | Input/Output: [[63 93 63 63] 63]
Test Case:  81 | Input/Output: [[-60 -60 -60 16] -60]
Test Case:  82 | Input/Output: [[-96 -96 -15 -96] -96]
Test Case:  83 | Input/Output: [[15 15 15 68] 15]
Test Case:  84 | Input/Output: [[30 -98 -98 -98] -98]
Test Case:  85 | Input/Output: [[66 8 66 66] 8]
Test Case:  86 | Input/Output: [[85 85 85 47] 47]
Test Case:  87 | Input/Output: [[-29 -29 36 -29] -29]
Test Case:  88 | Input/Output: [[18 31 31 31] 18]
Test Case:  89 | Input/Output: [[-86 -28 -86 -86] -86]
Test Case:  90 | Input/Output: [[-89 -99 -89 -89] -99]
Test Case:  91 | Input/Output: [[-58 -14 -58 -58] -58]
Test Case:  92 | Input/Output: [[-89 -89 -89 -20] -89]
Test Case:  93 | Input/Output: [[42 11 42 42] 11]
Test Case:  94 | Input/Output: [[-80 -80 83 -80] -80]
Test Case:  95 | Input/Output: [[30 30 -58 30] -58]
Test Case:  96 | Input/Output: [[14 14 14 -82] -82]
Test Case:  97 | Input/Output: [[-55 -55 -61 -55] -61]
Test Case:  98 | Input/Output: [[53 -87 53 53] -87]
Test Case:  99 | Input/Output: [[-74 -74 -3 -74] -74]
Test Case: 100 | Input/Output: [(77 77 77 77) 77]
Test Case: 101 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 102 | Input/Output: [(98 98 98 98) 98]
Test Case: 103 | Input/Output: [(44 44 44 44) 44]
Test Case: 104 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 105 | Input/Output: [(98 98 98 98) 98]
Test Case: 106 | Input/Output: [(40 40 40 40) 40]
Test Case: 107 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 108 | Input/Output: [(71 71 71 71) 71]
Test Case: 109 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 110 | Input/Output: [(96 96 96 96) 96]
Test Case: 111 | Input/Output: [(72 72 72 72) 72]
Test Case: 112 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 113 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 114 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 115 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 116 | Input/Output: [(58 58 58 58) 58]
Test Case: 117 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 118 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 119 | Input/Output: [(44 44 44 44) 44]
Test Case: 120 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 121 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 122 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 123 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 124 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 125 | Input/Output: [(67 67 67 67) 67]
Test Case: 126 | Input/Output: [(72 72 72 72) 72]
Test Case: 127 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 128 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 129 | Input/Output: [(58 58 58 58) 58]
Test Case: 130 | Input/Output: [(59 59 59 59) 59]
Test Case: 131 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 132 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 133 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 134 | Input/Output: [(20 20 20 20) 20]
Test Case: 135 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 136 | Input/Output: [(6 6 6 6) 6]
Test Case: 137 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 138 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 139 | Input/Output: [(60 60 60 60) 60]
Test Case: 140 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 141 | Input/Output: [(19 19 19 19) 19]
Test Case: 142 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 143 | Input/Output: [(93 93 93 93) 93]
Test Case: 144 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 145 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 146 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 147 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 148 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 149 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 150 | Input/Output: [(76 76 76 76) 76]
Test Case: 151 | Input/Output: [(20 20 20 20) 20]
Test Case: 152 | Input/Output: [(17 17 17 17) 17]
Test Case: 153 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 154 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 155 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 156 | Input/Output: [(31 31 31 31) 31]
Test Case: 157 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 158 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 159 | Input/Output: [(16 16 16 16) 16]
Test Case: 160 | Input/Output: [(86 86 86 86) 86]
Test Case: 161 | Input/Output: [(99 99 99 99) 99]
Test Case: 162 | Input/Output: [(75 75 75 75) 75]
Test Case: 163 | Input/Output: [(89 89 89 89) 89]
Test Case: 164 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 165 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 166 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 167 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 168 | Input/Output: [(51 51 51 51) 51]
Test Case: 169 | Input/Output: [(68 68 68 68) 68]
Test Case: 170 | Input/Output: [(28 28 28 28) 28]
Test Case: 171 | Input/Output: [(55 55 55 55) 55]
Test Case: 172 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 173 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 174 | Input/Output: [(15 15 15 15) 15]
Test Case: 175 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 176 | Input/Output: [(85 85 85 85) 85]
Test Case: 177 | Input/Output: [(32 32 32 32) 32]
Test Case: 178 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 179 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 180 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 181 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 182 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 183 | Input/Output: [(90 90 90 90) 90]
Test Case: 184 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 185 | Input/Output: [(95 95 95 95) 95]
Test Case: 186 | Input/Output: [(85 85 85 85) 85]
Test Case: 187 | Input/Output: [(81 81 81 81) 81]
Test Case: 188 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 189 | Input/Output: [(91 91 91 91) 91]
Test Case: 190 | Input/Output: [(97 97 97 97) 97]
Test Case: 191 | Input/Output: [(27 27 27 27) 27]
Test Case: 192 | Input/Output: [(64 64 64 64) 64]
Test Case: 193 | Input/Output: [(82 82 82 82) 82]
Test Case: 194 | Input/Output: [(92 92 92 92) 92]
Test Case: 195 | Input/Output: [(72 72 72 72) 72]
Test Case: 196 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 197 | Input/Output: [(3 3 3 3) 3]
Test Case: 198 | Input/Output: [(63 63 63 63) 63]
Test Case: 199 | Input/Output: [(89 89 89 89) 89]
Test Case: 200 | Input/Output: [(21 30 40 67) 21]
Test Case: 201 | Input/Output: [(60 51 15 23) 15]
Test Case: 202 | Input/Output: [(40 8 34 60) 8]
Test Case: 203 | Input/Output: [(88 94 71 59) 59]
Test Case: 204 | Input/Output: [(99 80 95 91) 80]
Test Case: 205 | Input/Output: [(27 41 35 0) 0]
Test Case: 206 | Input/Output: [(52 28 80 39) 28]
Test Case: 207 | Input/Output: [(71 78 83 6) 6]
Test Case: 208 | Input/Output: [(51 11 42 74) 11]
Test Case: 209 | Input/Output: [(3 45 14 73) 3]
Test Case: 210 | Input/Output: [(48 34 37 41) 34]
Test Case: 211 | Input/Output: [(100 53 67 90) 53]
Test Case: 212 | Input/Output: [(50 26 66 94) 26]
Test Case: 213 | Input/Output: [(28 70 14 65) 14]
Test Case: 214 | Input/Output: [(97 23 65 36) 23]
Test Case: 215 | Input/Output: [(46 58 47 56) 46]
Test Case: 216 | Input/Output: [(98 98 1 73) 1]
Test Case: 217 | Input/Output: [(44 84 1 48) 1]
Test Case: 218 | Input/Output: [(65 99 66 0) 0]
Test Case: 219 | Input/Output: [(19 13 41 55) 13]
Test Case: 220 | Input/Output: [(19 84 5 62) 5]
Test Case: 221 | Input/Output: [(61 81 68 7) 7]
Test Case: 222 | Input/Output: [(16 85 90 86) 16]
Test Case: 223 | Input/Output: [(57 65 76 62) 57]
Test Case: 224 | Input/Output: [(13 86 74 13) 13]
Test Case: 225 | Input/Output: [(69 38 48 43) 38]
Test Case: 226 | Input/Output: [(64 53 42 54) 42]
Test Case: 227 | Input/Output: [(85 77 40 11) 11]
Test Case: 228 | Input/Output: [(91 25 9 62) 9]
Test Case: 229 | Input/Output: [(81 95 67 30) 30]
Test Case: 230 | Input/Output: [(38 56 7 42) 7]
Test Case: 231 | Input/Output: [(74 7 55 26) 7]
Test Case: 232 | Input/Output: [(79 53 58 45) 45]
Test Case: 233 | Input/Output: [(63 81 86 17) 17]
Test Case: 234 | Input/Output: [(39 94 18 26) 18]
Test Case: 235 | Input/Output: [(47 36 28 60) 28]
Test Case: 236 | Input/Output: [(90 78 36 13) 13]
Test Case: 237 | Input/Output: [(56 58 84 61) 56]
Test Case: 238 | Input/Output: [(75 52 1 9) 1]
Test Case: 239 | Input/Output: [(80 3 89 71) 3]
Test Case: 240 | Input/Output: [(25 36 9 56) 9]
Test Case: 241 | Input/Output: [(3 16 62 34) 3]
Test Case: 242 | Input/Output: [(48 71 73 13) 13]
Test Case: 243 | Input/Output: [(75 15 85 52) 15]
Test Case: 244 | Input/Output: [(19 64 47 5) 5]
Test Case: 245 | Input/Output: [(78 89 48 5) 5]
Test Case: 246 | Input/Output: [(1 65 88 88) 1]
Test Case: 247 | Input/Output: [(79 55 77 3) 3]
Test Case: 248 | Input/Output: [(60 29 58 90) 29]
Test Case: 249 | Input/Output: [(69 77 96 1) 1]
Test Case: 250 | Input/Output: [(40 68 22 90) 22]
Test Case: 251 | Input/Output: [(40 68 82 7) 7]
Test Case: 252 | Input/Output: [(36 16 20 55) 16]
Test Case: 253 | Input/Output: [(73 39 11 84) 11]
Test Case: 254 | Input/Output: [(80 6 16 74) 6]
Test Case: 255 | Input/Output: [(61 62 49 25) 25]
Test Case: 256 | Input/Output: [(11 72 44 35) 11]
Test Case: 257 | Input/Output: [(20 6 6 36) 6]
Test Case: 258 | Input/Output: [(28 93 62 49) 28]
Test Case: 259 | Input/Output: [(97 37 19 66) 19]
Test Case: 260 | Input/Output: [(20 93 33 10) 10]
Test Case: 261 | Input/Output: [(50 8 78 21) 8]
Test Case: 262 | Input/Output: [(49 23 6 73) 6]
Test Case: 263 | Input/Output: [(79 30 63 90) 30]
Test Case: 264 | Input/Output: [(41 69 17 22) 17]
Test Case: 265 | Input/Output: [(2 22 87 26) 2]
Test Case: 266 | Input/Output: [(73 14 33 15) 14]
Test Case: 267 | Input/Output: [(89 28 14 90) 14]
Test Case: 268 | Input/Output: [(97 5 95 13) 5]
Test Case: 269 | Input/Output: [(35 70 44 7) 7]
Test Case: 270 | Input/Output: [(95 31 4 20) 4]
Test Case: 271 | Input/Output: [(48 63 72 58) 48]
Test Case: 272 | Input/Output: [(67 26 52 36) 26]
Test Case: 273 | Input/Output: [(75 67 3 49) 3]
Test Case: 274 | Input/Output: [(0 25 97 82) 0]
Test Case: 275 | Input/Output: [(19 40 68 6) 6]
Test Case: 276 | Input/Output: [(56 98 54 32) 32]
Test Case: 277 | Input/Output: [(74 5 25 17) 5]
Test Case: 278 | Input/Output: [(8 12 52 15) 8]
Test Case: 279 | Input/Output: [(14 16 15 46) 14]
Test Case: 280 | Input/Output: [(91 11 40 38) 11]
Test Case: 281 | Input/Output: [(80 81 0 54) 0]
Test Case: 282 | Input/Output: [(100 92 47 80) 47]
Test Case: 283 | Input/Output: [(26 83 79 99) 26]
Test Case: 284 | Input/Output: [(1 82 84 65) 1]
Test Case: 285 | Input/Output: [(69 28 69 72) 28]
Test Case: 286 | Input/Output: [(95 58 67 70) 58]
Test Case: 287 | Input/Output: [(87 4 57 43) 4]
Test Case: 288 | Input/Output: [(75 28 70 19) 19]
Test Case: 289 | Input/Output: [(74 53 79 95) 53]
Test Case: 290 | Input/Output: [(23 36 1 24) 1]
Test Case: 291 | Input/Output: [(18 79 88 14) 14]
Test Case: 292 | Input/Output: [(35 51 86 49) 35]
Test Case: 293 | Input/Output: [(37 89 71 11) 11]
Test Case: 294 | Input/Output: [(46 0 15 29) 0]
Test Case: 295 | Input/Output: [(86 77 30 98) 30]
Test Case: 296 | Input/Output: [(83 82 13 57) 13]
Test Case: 297 | Input/Output: [(81 43 4 1) 1]
Test Case: 298 | Input/Output: [(79 7 80 69) 7]
Test Case: 299 | Input/Output: [(24 47 45 93) 24]
Test Case: 300 | Input/Output: [(17 71 67 50) 17]
Test Case: 301 | Input/Output: [(83 90 6 52) 6]
Test Case: 302 | Input/Output: [(100 17 85 60) 17]
Test Case: 303 | Input/Output: [(60 51 90 100) 51]
Test Case: 304 | Input/Output: [(63 52 54 41) 41]
Test Case: 305 | Input/Output: [(80 0 72 79) 0]
Test Case: 306 | Input/Output: [(40 44 69 27) 27]
Test Case: 307 | Input/Output: [(21 78 1 97) 1]
Test Case: 308 | Input/Output: [(13 52 35 90) 13]
Test Case: 309 | Input/Output: [(70 9 2 74) 2]
Test Case: 310 | Input/Output: [(49 3 73 35) 3]
Test Case: 311 | Input/Output: [(3 91 60 75) 3]
Test Case: 312 | Input/Output: [(77 60 27 37) 27]
Test Case: 313 | Input/Output: [(13 93 53 46) 13]
Test Case: 314 | Input/Output: [(86 26 91 34) 26]
Test Case: 315 | Input/Output: [(92 13 13 38) 13]
Test Case: 316 | Input/Output: [(89 9 26 88) 9]
Test Case: 317 | Input/Output: [(78 59 78 10) 10]
Test Case: 318 | Input/Output: [(45 57 51 99) 45]
Test Case: 319 | Input/Output: [(78 46 100 26) 26]
Test Case: 320 | Input/Output: [(64 86 83 75) 64]
Test Case: 321 | Input/Output: [(14 80 0 26) 0]
Test Case: 322 | Input/Output: [(53 33 87 2) 2]
Test Case: 323 | Input/Output: [(37 1 92 56) 1]
Test Case: 324 | Input/Output: [(41 61 80 14) 14]
Test Case: 325 | Input/Output: [(55 17 17 87) 17]
Test Case: 326 | Input/Output: [(3 30 25 71) 3]
Test Case: 327 | Input/Output: [(68 12 23 15) 12]
Test Case: 328 | Input/Output: [(47 50 75 51) 47]
Test Case: 329 | Input/Output: [(14 55 40 38) 14]
Test Case: 330 | Input/Output: [(55 58 26 45) 26]
Test Case: 331 | Input/Output: [(70 60 48 14) 14]
Test Case: 332 | Input/Output: [(91 29 41 39) 29]
Test Case: 333 | Input/Output: [(70 86 23 88) 23]
Test Case: 334 | Input/Output: [(0 40 63 98) 0]
Test Case: 335 | Input/Output: [(54 19 84 60) 19]
Test Case: 336 | Input/Output: [(62 6 100 86) 6]
Test Case: 337 | Input/Output: [(38 61 86 21) 21]
Test Case: 338 | Input/Output: [(20 91 13 25) 13]
Test Case: 339 | Input/Output: [(74 36 59 28) 28]
Test Case: 340 | Input/Output: [(54 29 16 67) 16]
Test Case: 341 | Input/Output: [(24 20 97 63) 20]
Test Case: 342 | Input/Output: [(55 35 73 94) 35]
Test Case: 343 | Input/Output: [(3 63 54 53) 3]
Test Case: 344 | Input/Output: [(88 22 79 82) 22]
Test Case: 345 | Input/Output: [(20 1 9 47) 1]
Test Case: 346 | Input/Output: [(50 19 72 14) 14]
Test Case: 347 | Input/Output: [(62 61 48 88) 48]
Test Case: 348 | Input/Output: [(91 64 72 95) 64]
Test Case: 349 | Input/Output: [(54 78 70 6) 6]
Test Case: 350 | Input/Output: [(65 75 9 51) 9]
Test Case: 351 | Input/Output: [(96 50 79 40) 40]
Test Case: 352 | Input/Output: [(78 18 46 36) 18]
Test Case: 353 | Input/Output: [(43 23 93 39) 23]
Test Case: 354 | Input/Output: [(93 78 41 22) 22]
Test Case: 355 | Input/Output: [(98 18 16 68) 16]
Test Case: 356 | Input/Output: [(97 33 31 78) 31]
Test Case: 357 | Input/Output: [(22 59 5 75) 5]
Test Case: 358 | Input/Output: [(7 58 96 1) 1]
Test Case: 359 | Input/Output: [(5 6 79 20) 5]
Test Case: 360 | Input/Output: [(49 8 21 72) 8]
Test Case: 361 | Input/Output: [(44 65 98 92) 44]
Test Case: 362 | Input/Output: [(64 5 20 82) 5]
Test Case: 363 | Input/Output: [(63 85 72 85) 63]
Test Case: 364 | Input/Output: [(1 27 27 6) 1]
Test Case: 365 | Input/Output: [(89 48 7 25) 7]
Test Case: 366 | Input/Output: [(3 99 26 65) 3]
Test Case: 367 | Input/Output: [(22 15 71 55) 15]
Test Case: 368 | Input/Output: [(15 94 2 4) 2]
Test Case: 369 | Input/Output: [(86 44 85 56) 44]
Test Case: 370 | Input/Output: [(56 76 62 59) 56]
Test Case: 371 | Input/Output: [(15 32 42 95) 15]
Test Case: 372 | Input/Output: [(65 71 27 51) 27]
Test Case: 373 | Input/Output: [(65 68 64 15) 15]
Test Case: 374 | Input/Output: [(94 69 62 89) 62]
Test Case: 375 | Input/Output: [(79 54 89 74) 54]
Test Case: 376 | Input/Output: [(84 11 74 60) 11]
Test Case: 377 | Input/Output: [(31 66 11 43) 11]
Test Case: 378 | Input/Output: [(20 14 12 42) 12]
Test Case: 379 | Input/Output: [(94 14 72 74) 14]
Test Case: 380 | Input/Output: [(45 68 3 94) 3]
Test Case: 381 | Input/Output: [(47 56 11 61) 11]
Test Case: 382 | Input/Output: [(80 91 9 63) 9]
Test Case: 383 | Input/Output: [(14 18 83 31) 14]
Test Case: 384 | Input/Output: [(72 66 73 91) 66]
Test Case: 385 | Input/Output: [(21 79 2 65) 2]
Test Case: 386 | Input/Output: [(27 33 0 89) 0]
Test Case: 387 | Input/Output: [(40 25 57 78) 25]
Test Case: 388 | Input/Output: [(58 78 3 40) 3]
Test Case: 389 | Input/Output: [(18 64 44 95) 18]
Test Case: 390 | Input/Output: [(19 37 92 87) 19]
Test Case: 391 | Input/Output: [(6 46 68 68) 6]
Test Case: 392 | Input/Output: [(84 35 90 48) 35]
Test Case: 393 | Input/Output: [(35 8 64 41) 8]
Test Case: 394 | Input/Output: [(39 12 56 24) 12]
Test Case: 395 | Input/Output: [(44 64 16 38) 16]
Test Case: 396 | Input/Output: [(83 35 10 99) 10]
Test Case: 397 | Input/Output: [(7 87 55 47) 7]
Test Case: 398 | Input/Output: [(92 76 44 80) 44]
Test Case: 399 | Input/Output: [(68 59 47 45) 45]
Test Case: 400 | Input/Output: [(-48 -99 -51 7) -99]
Test Case: 401 | Input/Output: [(56 63 -49 1) -49]
Test Case: 402 | Input/Output: [(79 -5 63 -42) -42]
Test Case: 403 | Input/Output: [(8 -58 94 28) -58]
Test Case: 404 | Input/Output: [(-40 -3 -49 -31) -49]
Test Case: 405 | Input/Output: [(40 23 -97 3) -97]
Test Case: 406 | Input/Output: [(-26 -60 -91 -84) -91]
Test Case: 407 | Input/Output: [(-99 -76 -96 -61) -99]
Test Case: 408 | Input/Output: [(75 -43 16 62) -43]
Test Case: 409 | Input/Output: [(11 92 -88 28) -88]
Test Case: 410 | Input/Output: [(-32 36 -14 46) -32]
Test Case: 411 | Input/Output: [(4 -59 -8 -79) -79]
Test Case: 412 | Input/Output: [(-94 38 40 74) -94]
Test Case: 413 | Input/Output: [(14 35 -82 48) -82]
Test Case: 414 | Input/Output: [(-60 -62 -81 5) -81]
Test Case: 415 | Input/Output: [(48 64 -88 -58) -88]
Test Case: 416 | Input/Output: [(-85 80 42 -2) -85]
Test Case: 417 | Input/Output: [(41 -91 -66 -87) -91]
Test Case: 418 | Input/Output: [(-50 -87 -23 30) -87]
Test Case: 419 | Input/Output: [(-30 -12 39 9) -30]
Test Case: 420 | Input/Output: [(21 -43 34 31) -43]
Test Case: 421 | Input/Output: [(26 -73 89 60) -73]
Test Case: 422 | Input/Output: [(-66 -9 100 8) -66]
Test Case: 423 | Input/Output: [(69 22 86 -36) -36]
Test Case: 424 | Input/Output: [(-82 -8 78 -72) -82]
Test Case: 425 | Input/Output: [(-100 6 40 -44) -100]
Test Case: 426 | Input/Output: [(-77 65 6 -46) -77]
Test Case: 427 | Input/Output: [(-73 16 63 -65) -73]
Test Case: 428 | Input/Output: [(10 16 -13 91) -13]
Test Case: 429 | Input/Output: [(30 -86 26 -33) -86]
Test Case: 430 | Input/Output: [(60 -97 -62 -93) -97]
Test Case: 431 | Input/Output: [(-76 89 -82 5) -82]
Test Case: 432 | Input/Output: [(69 -31 25 38) -31]
Test Case: 433 | Input/Output: [(3 75 60 97) 3]
Test Case: 434 | Input/Output: [(65 58 -60 -1) -60]
Test Case: 435 | Input/Output: [(9 -27 -43 -97) -97]
Test Case: 436 | Input/Output: [(41 -64 -98 99) -98]
Test Case: 437 | Input/Output: [(-46 1 48 24) -46]
Test Case: 438 | Input/Output: [(75 66 91 48) 48]
Test Case: 439 | Input/Output: [(-86 73 -79 -28) -86]
Test Case: 440 | Input/Output: [(74 98 -48 -41) -48]
Test Case: 441 | Input/Output: [(-42 -66 -67 -58) -67]
Test Case: 442 | Input/Output: [(-86 21 24 -45) -86]
Test Case: 443 | Input/Output: [(26 18 -45 75) -45]
Test Case: 444 | Input/Output: [(-28 89 -2 90) -28]
Test Case: 445 | Input/Output: [(36 -46 76 10) -46]
Test Case: 446 | Input/Output: [(60 27 13 -29) -29]
Test Case: 447 | Input/Output: [(73 -76 48 -71) -76]
Test Case: 448 | Input/Output: [(11 -61 51 -86) -86]
Test Case: 449 | Input/Output: [(44 -78 -26 -98) -98]
Test Case: 450 | Input/Output: [(-36 -32 -12 72) -36]
Test Case: 451 | Input/Output: [(-70 -17 -51 -13) -70]
Test Case: 452 | Input/Output: [(73 -55 -91 -23) -91]
Test Case: 453 | Input/Output: [(68 -31 97 -42) -42]
Test Case: 454 | Input/Output: [(-26 -92 69 -86) -92]
Test Case: 455 | Input/Output: [(95 -64 -9 61) -64]
Test Case: 456 | Input/Output: [(-27 -62 89 85) -62]
Test Case: 457 | Input/Output: [(62 -99 99 -9) -99]
Test Case: 458 | Input/Output: [(-33 44 38 34) -33]
Test Case: 459 | Input/Output: [(6 -12 19 74) -12]
Test Case: 460 | Input/Output: [(85 -80 -71 -88) -88]
Test Case: 461 | Input/Output: [(-78 -82 -14 -35) -82]
Test Case: 462 | Input/Output: [(-82 23 -81 24) -82]
Test Case: 463 | Input/Output: [(1 63 -16 99) -16]
Test Case: 464 | Input/Output: [(21 81 81 -29) -29]
Test Case: 465 | Input/Output: [(90 33 91 -5) -5]
Test Case: 466 | Input/Output: [(-94 31 77 37) -94]
Test Case: 467 | Input/Output: [(75 -25 44 46) -25]
Test Case: 468 | Input/Output: [(-53 93 -66 62) -66]
Test Case: 469 | Input/Output: [(19 -20 52 27) -20]
Test Case: 470 | Input/Output: [(18 66 42 41) 18]
Test Case: 471 | Input/Output: [(-1 53 0 -20) -20]
Test Case: 472 | Input/Output: [(83 -25 20 37) -25]
Test Case: 473 | Input/Output: [(37 -79 -51 86) -79]
Test Case: 474 | Input/Output: [(-96 43 -53 17) -96]
Test Case: 475 | Input/Output: [(29 -5 4 -3) -5]
Test Case: 476 | Input/Output: [(-26 -25 -94 83) -94]
Test Case: 477 | Input/Output: [(18 58 99 -5) -5]
Test Case: 478 | Input/Output: [(99 -93 -51 -97) -97]
Test Case: 479 | Input/Output: [(85 60 32 18) 18]
Test Case: 480 | Input/Output: [(-23 -29 92 -48) -48]
Test Case: 481 | Input/Output: [(42 5 -13 -85) -85]
Test Case: 482 | Input/Output: [(92 10 -9 4) -9]
Test Case: 483 | Input/Output: [(-37 -86 -66 6) -86]
Test Case: 484 | Input/Output: [(20 50 -52 -10) -52]
Test Case: 485 | Input/Output: [(-10 -36 -98 73) -98]
Test Case: 486 | Input/Output: [(89 -34 34 -45) -45]
Test Case: 487 | Input/Output: [(-18 -36 13 -3) -36]
Test Case: 488 | Input/Output: [(-66 59 -2 86) -66]
Test Case: 489 | Input/Output: [(94 21 -10 -23) -23]
Test Case: 490 | Input/Output: [(7 -27 -64 17) -64]
Test Case: 491 | Input/Output: [(-36 60 -70 17) -70]
Test Case: 492 | Input/Output: [(-1 -62 95 -25) -62]
Test Case: 493 | Input/Output: [(63 60 73 -51) -51]
Test Case: 494 | Input/Output: [(31 82 -83 76) -83]
Test Case: 495 | Input/Output: [(-18 -37 -43 -85) -85]
Test Case: 496 | Input/Output: [(-87 -21 -82 -9) -87]
Test Case: 497 | Input/Output: [(-8 60 -22 38) -22]
Test Case: 498 | Input/Output: [(32 -54 -96 -52) -96]
Test Case: 499 | Input/Output: [(-8 -91 -68 -51) -91]
Test Case: 500 | Input/Output: [(78 18 73 18) 18]
Test Case: 501 | Input/Output: [(71 -59 74 -75) -75]
Test Case: 502 | Input/Output: [(19 23 68 -13) -13]
Test Case: 503 | Input/Output: [(-100 56 -26 3) -100]
Test Case: 504 | Input/Output: [(-65 81 47 41) -65]
Test Case: 505 | Input/Output: [(97 -92 83 -6) -92]
Test Case: 506 | Input/Output: [(-30 -81 51 -95) -95]
Test Case: 507 | Input/Output: [(4 36 -84 -86) -86]
Test Case: 508 | Input/Output: [(26 57 89 -7) -7]
Test Case: 509 | Input/Output: [(68 -48 -90 -78) -90]
Test Case: 510 | Input/Output: [(-90 55 -17 -3) -90]
Test Case: 511 | Input/Output: [(50 -81 -63 -27) -81]
Test Case: 512 | Input/Output: [(-74 75 8 79) -74]
Test Case: 513 | Input/Output: [(-58 -36 28 -65) -65]
Test Case: 514 | Input/Output: [(-36 -23 96 16) -36]
Test Case: 515 | Input/Output: [(85 28 60 65) 28]
Test Case: 516 | Input/Output: [(-86 27 -74 -72) -86]
Test Case: 517 | Input/Output: [(-42 62 -75 -48) -75]
Test Case: 518 | Input/Output: [(-30 99 -82 -18) -82]
Test Case: 519 | Input/Output: [(23 -33 -64 -83) -83]
Test Case: 520 | Input/Output: [(-9 -86 71 -16) -86]
Test Case: 521 | Input/Output: [(71 41 -64 9) -64]
Test Case: 522 | Input/Output: [(-71 -68 -46 -26) -71]
Test Case: 523 | Input/Output: [(-55 -4 94 -30) -55]
Test Case: 524 | Input/Output: [(75 38 71 -11) -11]
Test Case: 525 | Input/Output: [(-58 -90 -93 -81) -93]
Test Case: 526 | Input/Output: [(-60 68 -98 -61) -98]
Test Case: 527 | Input/Output: [(-37 -61 -94 -12) -94]
Test Case: 528 | Input/Output: [(-97 15 -63 55) -97]
Test Case: 529 | Input/Output: [(-9 29 4 17) -9]
Test Case: 530 | Input/Output: [(92 -72 -75 23) -75]
Test Case: 531 | Input/Output: [(82 88 -34 68) -34]
Test Case: 532 | Input/Output: [(-70 -87 -53 80) -87]
Test Case: 533 | Input/Output: [(-99 3 -97 -79) -99]
Test Case: 534 | Input/Output: [(-44 -6 -64 -64) -64]
Test Case: 535 | Input/Output: [(53 3 -79 1) -79]
Test Case: 536 | Input/Output: [(63 96 -76 -52) -76]
Test Case: 537 | Input/Output: [(83 59 -66 -99) -99]
Test Case: 538 | Input/Output: [(13 -9 57 -43) -43]
Test Case: 539 | Input/Output: [(-59 41 8 55) -59]
Test Case: 540 | Input/Output: [(-71 45 -87 -8) -87]
Test Case: 541 | Input/Output: [(-2 -34 -3 83) -34]
Test Case: 542 | Input/Output: [(-82 -33 17 55) -82]
Test Case: 543 | Input/Output: [(-21 -97 -18 94) -97]
Test Case: 544 | Input/Output: [(-97 45 -55 -21) -97]
Test Case: 545 | Input/Output: [(15 -18 -63 44) -63]
Test Case: 546 | Input/Output: [(2 70 32 98) 2]
Test Case: 547 | Input/Output: [(89 -64 -88 -83) -88]
Test Case: 548 | Input/Output: [(66 -79 37 20) -79]
Test Case: 549 | Input/Output: [(92 47 10 -46) -46]
Test Case: 550 | Input/Output: [(13 43 -19 82) -19]
Test Case: 551 | Input/Output: [(-23 43 62 77) -23]
Test Case: 552 | Input/Output: [(-96 -90 -44 -46) -96]
Test Case: 553 | Input/Output: [(58 -14 37 57) -14]
Test Case: 554 | Input/Output: [(64 16 -19 -42) -42]
Test Case: 555 | Input/Output: [(8 87 -72 79) -72]
Test Case: 556 | Input/Output: [(12 14 -36 3) -36]
Test Case: 557 | Input/Output: [(-75 46 12 -1) -75]
Test Case: 558 | Input/Output: [(-81 -4 -16 -74) -81]
Test Case: 559 | Input/Output: [(-74 -50 51 -29) -74]
Test Case: 560 | Input/Output: [(-87 -73 -68 -71) -87]
Test Case: 561 | Input/Output: [(-12 -48 5 68) -48]
Test Case: 562 | Input/Output: [(-26 -61 -24 -73) -73]
Test Case: 563 | Input/Output: [(-4 -28 -100 -44) -100]
Test Case: 564 | Input/Output: [(9 23 84 -1) -1]
Test Case: 565 | Input/Output: [(3 -95 32 88) -95]
Test Case: 566 | Input/Output: [(2 3 33 63) 2]
Test Case: 567 | Input/Output: [(75 -91 -55 -37) -91]
Test Case: 568 | Input/Output: [(56 2 -4 86) -4]
Test Case: 569 | Input/Output: [(-72 93 28 49) -72]
Test Case: 570 | Input/Output: [(-63 -47 -88 -97) -97]
Test Case: 571 | Input/Output: [(77 11 92 20) 11]
Test Case: 572 | Input/Output: [(76 -59 96 74) -59]
Test Case: 573 | Input/Output: [(30 -96 -71 18) -96]
Test Case: 574 | Input/Output: [(-61 -96 57 -76) -96]
Test Case: 575 | Input/Output: [(-46 91 69 -17) -46]
Test Case: 576 | Input/Output: [(24 32 -96 55) -96]
Test Case: 577 | Input/Output: [(-95 17 -53 -16) -95]
Test Case: 578 | Input/Output: [(47 -9 7 -10) -10]
Test Case: 579 | Input/Output: [(-74 21 -46 2) -74]
Test Case: 580 | Input/Output: [(-76 -87 -98 -80) -98]
Test Case: 581 | Input/Output: [(70 39 2 -44) -44]
Test Case: 582 | Input/Output: [(7 96 -96 86) -96]
Test Case: 583 | Input/Output: [(27 8 -12 1) -12]
Test Case: 584 | Input/Output: [(-94 -59 62 -47) -94]
Test Case: 585 | Input/Output: [(-82 -40 65 43) -82]
Test Case: 586 | Input/Output: [(40 -40 20 63) -40]
Test Case: 587 | Input/Output: [(51 18 -15 -86) -86]
Test Case: 588 | Input/Output: [(-71 -68 28 14) -71]
Test Case: 589 | Input/Output: [(-21 23 -78 62) -78]
Test Case: 590 | Input/Output: [(-17 58 15 41) -17]
Test Case: 591 | Input/Output: [(-13 -32 24 -17) -32]
Test Case: 592 | Input/Output: [(-72 48 17 -7) -72]
Test Case: 593 | Input/Output: [(-41 -4 -3 79) -41]
Test Case: 594 | Input/Output: [(-44 -65 -44 10) -65]
Test Case: 595 | Input/Output: [(-33 -91 33 -85) -91]
Test Case: 596 | Input/Output: [(-23 -14 -41 61) -41]
Test Case: 597 | Input/Output: [(-52 25 26 55) -52]
Test Case: 598 | Input/Output: [(31 -88 -12 -91) -91]
Test Case: 599 | Input/Output: [(-47 47 76 8) -47]
Test Case: 600 | Input/Output: [(-67 20 28 23) -67]
Test Case: 601 | Input/Output: [(-77 -29 -23 -49) -77]
Test Case: 602 | Input/Output: [(20 13 53 -79) -79]
Test Case: 603 | Input/Output: [(-18 -96 8 -2) -96]
Test Case: 604 | Input/Output: [(56 16 -30 -48) -48]
Test Case: 605 | Input/Output: [(2 -89 21 23) -89]
Test Case: 606 | Input/Output: [(34 -68 -99 56) -99]
Test Case: 607 | Input/Output: [(64 36 -11 -31) -31]
Test Case: 608 | Input/Output: [(41 -25 26 -65) -65]
Test Case: 609 | Input/Output: [(-46 77 99 -35) -46]
Test Case: 610 | Input/Output: [(43 -49 -97 -62) -97]
Test Case: 611 | Input/Output: [(29 -70 -86 60) -86]
Test Case: 612 | Input/Output: [(9 -59 14 78) -59]
Test Case: 613 | Input/Output: [(59 70 46 47) 46]
Test Case: 614 | Input/Output: [(-88 -88 61 -28) -88]
Test Case: 615 | Input/Output: [(-94 -79 -47 33) -94]
Test Case: 616 | Input/Output: [(4 -71 52 40) -71]
Test Case: 617 | Input/Output: [(8 87 -34 77) -34]
Test Case: 618 | Input/Output: [(58 -66 24 -52) -66]
Test Case: 619 | Input/Output: [(-11 -90 -34 -12) -90]
Test Case: 620 | Input/Output: [(-10 -55 -82 26) -82]
Test Case: 621 | Input/Output: [(-68 96 -32 -30) -68]
Test Case: 622 | Input/Output: [(-92 -79 48 -96) -96]
Test Case: 623 | Input/Output: [(-39 59 -39 5) -39]
Test Case: 624 | Input/Output: [(-18 -5 82 20) -18]
Test Case: 625 | Input/Output: [(15 100 13 93) 13]
Test Case: 626 | Input/Output: [(81 95 -44 14) -44]
Test Case: 627 | Input/Output: [(82 55 3 0) 0]
Test Case: 628 | Input/Output: [(83 48 47 -67) -67]
Test Case: 629 | Input/Output: [(39 29 -57 20) -57]
Test Case: 630 | Input/Output: [(4 -7 67 -18) -18]
Test Case: 631 | Input/Output: [(-65 -28 -98 -56) -98]
Test Case: 632 | Input/Output: [(-64 58 -4 -70) -70]
Test Case: 633 | Input/Output: [(-38 -56 79 78) -56]
Test Case: 634 | Input/Output: [(59 -24 19 14) -24]
Test Case: 635 | Input/Output: [(21 65 79 -90) -90]
Test Case: 636 | Input/Output: [(-34 -86 -72 56) -86]
Test Case: 637 | Input/Output: [(65 11 -44 -79) -79]
Test Case: 638 | Input/Output: [(95 50 53 -74) -74]
Test Case: 639 | Input/Output: [(28 -37 -27 41) -37]
Test Case: 640 | Input/Output: [(51 69 55 -35) -35]
Test Case: 641 | Input/Output: [(44 32 58 43) 32]
Test Case: 642 | Input/Output: [(93 -100 61 -88) -100]
Test Case: 643 | Input/Output: [(98 -34 36 44) -34]
Test Case: 644 | Input/Output: [(19 -75 8 -33) -75]
Test Case: 645 | Input/Output: [(93 19 -47 -76) -76]
Test Case: 646 | Input/Output: [(41 69 -73 -4) -73]
Test Case: 647 | Input/Output: [(84 -64 -48 -43) -64]
Test Case: 648 | Input/Output: [(-9 4 -27 -42) -42]
Test Case: 649 | Input/Output: [(-57 -19 -53 32) -57]
Test Case: 650 | Input/Output: [(-87 2 68 -40) -87]
Test Case: 651 | Input/Output: [(82 42 75 -40) -40]
Test Case: 652 | Input/Output: [(31 -75 18 42) -75]
Test Case: 653 | Input/Output: [(51 -29 -12 85) -29]
Test Case: 654 | Input/Output: [(-81 -80 82 -79) -81]
Test Case: 655 | Input/Output: [(-97 81 -72 4) -97]
Test Case: 656 | Input/Output: [(-62 -66 -68 24) -68]
Test Case: 657 | Input/Output: [(56 45 -81 62) -81]
Test Case: 658 | Input/Output: [(50 -55 -61 7) -61]
Test Case: 659 | Input/Output: [(30 -74 67 -19) -74]
Test Case: 660 | Input/Output: [(96 69 15 72) 15]
Test Case: 661 | Input/Output: [(-86 53 -22 -83) -86]
Test Case: 662 | Input/Output: [(35 88 -26 97) -26]
Test Case: 663 | Input/Output: [(-98 -32 -45 -15) -98]
Test Case: 664 | Input/Output: [(-30 95 -37 -34) -37]
Test Case: 665 | Input/Output: [(-71 -59 -76 -32) -76]
Test Case: 666 | Input/Output: [(80 15 -73 -14) -73]
Test Case: 667 | Input/Output: [(-30 66 -92 3) -92]
Test Case: 668 | Input/Output: [(66 -9 69 31) -9]
Test Case: 669 | Input/Output: [(-15 -63 -27 -93) -93]
Test Case: 670 | Input/Output: [(54 96 -92 -2) -92]
Test Case: 671 | Input/Output: [(57 -75 56 -58) -75]
Test Case: 672 | Input/Output: [(22 -28 -63 -20) -63]
Test Case: 673 | Input/Output: [(54 62 -34 95) -34]
Test Case: 674 | Input/Output: [(-21 84 90 -36) -36]
Test Case: 675 | Input/Output: [(-90 -60 -23 69) -90]
Test Case: 676 | Input/Output: [(-65 -30 -73 -92) -92]
Test Case: 677 | Input/Output: [(-66 39 56 -2) -66]
Test Case: 678 | Input/Output: [(-84 93 -9 -77) -84]
Test Case: 679 | Input/Output: [(-39 -68 -62 -70) -70]
Test Case: 680 | Input/Output: [(-14 -73 62 -88) -88]
Test Case: 681 | Input/Output: [(85 66 -33 2) -33]
Test Case: 682 | Input/Output: [(13 -37 -77 -17) -77]
Test Case: 683 | Input/Output: [(-78 95 55 -73) -78]
Test Case: 684 | Input/Output: [(68 36 74 -59) -59]
Test Case: 685 | Input/Output: [(32 -74 -29 -11) -74]
Test Case: 686 | Input/Output: [(-94 -49 73 36) -94]
Test Case: 687 | Input/Output: [(89 -99 -68 -64) -99]
Test Case: 688 | Input/Output: [(77 58 79 49) 49]
Test Case: 689 | Input/Output: [(17 85 -7 17) -7]
Test Case: 690 | Input/Output: [(-16 -21 57 -21) -21]
Test Case: 691 | Input/Output: [(-69 -99 -79 0) -99]
Test Case: 692 | Input/Output: [(-56 -59 -37 25) -59]
Test Case: 693 | Input/Output: [(-92 23 -98 28) -98]
Test Case: 694 | Input/Output: [(64 62 -44 73) -44]
Test Case: 695 | Input/Output: [(80 -83 -32 -26) -83]
Test Case: 696 | Input/Output: [(88 -33 -78 -24) -78]
Test Case: 697 | Input/Output: [(53 -58 72 32) -58]
Test Case: 698 | Input/Output: [(78 -48 20 86) -48]
Test Case: 699 | Input/Output: [(-62 -93 -69 -81) -93]
Test Case: 700 | Input/Output: [(53 -33 -2 100) -33]
Test Case: 701 | Input/Output: [(66 4 -29 -40) -40]
Test Case: 702 | Input/Output: [(0 -3 -17 -41) -41]
Test Case: 703 | Input/Output: [(47 96 -99 -49) -99]
Test Case: 704 | Input/Output: [(-21 -50 -45 -83) -83]
Test Case: 705 | Input/Output: [(69 -89 64 67) -89]
Test Case: 706 | Input/Output: [(-8 -63 -47 90) -63]
Test Case: 707 | Input/Output: [(92 8 70 -95) -95]
Test Case: 708 | Input/Output: [(50 59 95 -37) -37]
Test Case: 709 | Input/Output: [(46 50 1 20) 1]
Test Case: 710 | Input/Output: [(59 -94 29 86) -94]
Test Case: 711 | Input/Output: [(54 -88 -100 -26) -100]
Test Case: 712 | Input/Output: [(32 -4 -83 99) -83]
Test Case: 713 | Input/Output: [(23 80 76 42) 23]
Test Case: 714 | Input/Output: [(-16 -15 70 9) -16]
Test Case: 715 | Input/Output: [(-77 -9 59 -73) -77]
Test Case: 716 | Input/Output: [(68 -48 -76 30) -76]
Test Case: 717 | Input/Output: [(-60 -81 -78 45) -81]
Test Case: 718 | Input/Output: [(73 27 -79 -70) -79]
Test Case: 719 | Input/Output: [(95 -78 -88 22) -88]
Test Case: 720 | Input/Output: [(58 99 -82 -39) -82]
Test Case: 721 | Input/Output: [(-61 -99 -83 45) -99]
Test Case: 722 | Input/Output: [(54 6 57 -76) -76]
Test Case: 723 | Input/Output: [(-63 16 29 46) -63]
Test Case: 724 | Input/Output: [(-65 53 -15 -56) -65]
Test Case: 725 | Input/Output: [(-27 18 -79 -57) -79]
Test Case: 726 | Input/Output: [(-29 61 96 28) -29]
Test Case: 727 | Input/Output: [(-89 -53 -36 1) -89]
Test Case: 728 | Input/Output: [(43 79 91 -82) -82]
Test Case: 729 | Input/Output: [(4 81 -60 99) -60]
Test Case: 730 | Input/Output: [(-42 6 20 -69) -69]
Test Case: 731 | Input/Output: [(25 -38 -25 -17) -38]
Test Case: 732 | Input/Output: [(78 -90 40 -51) -90]
Test Case: 733 | Input/Output: [(38 94 45 -83) -83]
Test Case: 734 | Input/Output: [(57 -78 2 68) -78]
Test Case: 735 | Input/Output: [(48 23 13 -1) -1]
Test Case: 736 | Input/Output: [(-63 -38 -88 -86) -88]
Test Case: 737 | Input/Output: [(-29 -60 -59 98) -60]
Test Case: 738 | Input/Output: [(-87 75 -70 46) -87]
Test Case: 739 | Input/Output: [(24 30 30 62) 24]
Test Case: 740 | Input/Output: [(21 97 24 96) 21]
Test Case: 741 | Input/Output: [(-50 -71 69 -88) -88]
Test Case: 742 | Input/Output: [(4 38 -95 43) -95]
Test Case: 743 | Input/Output: [(-67 -57 -30 -55) -67]
Test Case: 744 | Input/Output: [(16 81 -82 99) -82]
Test Case: 745 | Input/Output: [(-51 -12 48 -6) -51]
Test Case: 746 | Input/Output: [(-18 40 -15 -45) -45]
Test Case: 747 | Input/Output: [(70 -69 3 16) -69]
Test Case: 748 | Input/Output: [(50 -46 -10 55) -46]
Test Case: 749 | Input/Output: [(-99 -98 100 -82) -99]
Test Case: 750 | Input/Output: [(-93 -86 84 29) -93]
Test Case: 751 | Input/Output: [(47 66 37 -100) -100]
Test Case: 752 | Input/Output: [(-66 -46 -49 85) -66]
Test Case: 753 | Input/Output: [(-68 -30 -19 15) -68]
Test Case: 754 | Input/Output: [(-90 -56 -45 11) -90]
Test Case: 755 | Input/Output: [(-39 -82 74 83) -82]
Test Case: 756 | Input/Output: [(-2 -29 -26 77) -29]
Test Case: 757 | Input/Output: [(-66 -10 30 19) -66]
Test Case: 758 | Input/Output: [(93 81 -41 -68) -68]
Test Case: 759 | Input/Output: [(13 85 -87 37) -87]
Test Case: 760 | Input/Output: [(-84 -3 -60 -66) -84]
Test Case: 761 | Input/Output: [(-5 -47 -89 2) -89]
Test Case: 762 | Input/Output: [(-27 22 32 -46) -46]
Test Case: 763 | Input/Output: [(-60 -27 11 -40) -60]
Test Case: 764 | Input/Output: [(29 13 -29 -26) -29]
Test Case: 765 | Input/Output: [(-44 -98 67 98) -98]
Test Case: 766 | Input/Output: [(-44 27 87 -35) -44]
Test Case: 767 | Input/Output: [(3 -57 -37 75) -57]
Test Case: 768 | Input/Output: [(-26 98 -11 39) -26]
Test Case: 769 | Input/Output: [(-12 38 -61 -42) -61]
Test Case: 770 | Input/Output: [(-55 3 7 62) -55]
Test Case: 771 | Input/Output: [(-52 -9 98 37) -52]
Test Case: 772 | Input/Output: [(32 -90 -89 -42) -90]
Test Case: 773 | Input/Output: [(94 -18 100 37) -18]
Test Case: 774 | Input/Output: [(-26 -38 85 4) -38]
Test Case: 775 | Input/Output: [(-49 68 29 -28) -49]
Test Case: 776 | Input/Output: [(63 74 66 17) 17]
Test Case: 777 | Input/Output: [(48 3 -8 76) -8]
Test Case: 778 | Input/Output: [(9 -83 -34 39) -83]
Test Case: 779 | Input/Output: [(-93 -37 26 73) -93]
Test Case: 780 | Input/Output: [(68 56 -20 -94) -94]
Test Case: 781 | Input/Output: [(66 13 -1 -36) -36]
Test Case: 782 | Input/Output: [(15 27 34 90) 15]
Test Case: 783 | Input/Output: [(91 82 -12 -94) -94]
Test Case: 784 | Input/Output: [(-8 87 84 27) -8]
Test Case: 785 | Input/Output: [(56 13 -38 -63) -63]
Test Case: 786 | Input/Output: [(69 45 -87 15) -87]
Test Case: 787 | Input/Output: [(-43 -76 -32 -55) -76]
Test Case: 788 | Input/Output: [(-45 -8 -94 -70) -94]
Test Case: 789 | Input/Output: [(86 -61 -73 -2) -73]
Test Case: 790 | Input/Output: [(35 -54 27 2) -54]
Test Case: 791 | Input/Output: [(60 49 -8 92) -8]
Test Case: 792 | Input/Output: [(79 -57 -59 2) -59]
Test Case: 793 | Input/Output: [(82 -98 -17 34) -98]
Test Case: 794 | Input/Output: [(-82 39 -39 22) -82]
Test Case: 795 | Input/Output: [(62 -92 36 -42) -92]
Test Case: 796 | Input/Output: [(6 -62 44 92) -62]
Test Case: 797 | Input/Output: [(42 41 84 -19) -19]
Test Case: 798 | Input/Output: [(25 -51 19 -23) -51]
Test Case: 799 | Input/Output: [(4 -7 34 -17) -17]
Test Case: 800 | Input/Output: [(-8 52 2 -3) -8]
Test Case: 801 | Input/Output: [(4 -48 -93 61) -93]
Test Case: 802 | Input/Output: [(-39 -14 93 75) -39]
Test Case: 803 | Input/Output: [(-96 78 -52 -5) -96]
Test Case: 804 | Input/Output: [(-58 80 99 72) -58]
Test Case: 805 | Input/Output: [(37 28 86 83) 28]
Test Case: 806 | Input/Output: [(-89 -53 58 -31) -89]
Test Case: 807 | Input/Output: [(54 59 63 97) 54]
Test Case: 808 | Input/Output: [(52 20 97 -57) -57]
Test Case: 809 | Input/Output: [(63 -100 -3 -17) -100]
Test Case: 810 | Input/Output: [(-55 -73 98 22) -73]
Test Case: 811 | Input/Output: [(51 84 -25 -75) -75]
Test Case: 812 | Input/Output: [(-75 30 -9 -14) -75]
Test Case: 813 | Input/Output: [(37 -1 -62 6) -62]
Test Case: 814 | Input/Output: [(-55 -81 0 -6) -81]
Test Case: 815 | Input/Output: [(30 -99 -51 57) -99]
Test Case: 816 | Input/Output: [(-40 63 54 -5) -40]
Test Case: 817 | Input/Output: [(-18 73 -39 0) -39]
Test Case: 818 | Input/Output: [(73 54 23 -10) -10]
Test Case: 819 | Input/Output: [(34 19 -56 35) -56]
Test Case: 820 | Input/Output: [(-84 -84 97 10) -84]
Test Case: 821 | Input/Output: [(-89 68 20 -5) -89]
Test Case: 822 | Input/Output: [(97 -86 -75 -84) -86]
Test Case: 823 | Input/Output: [(27 85 -65 32) -65]
Test Case: 824 | Input/Output: [(-68 -68 81 -12) -68]
Test Case: 825 | Input/Output: [(87 31 -82 -18) -82]
Test Case: 826 | Input/Output: [(81 45 16 35) 16]
Test Case: 827 | Input/Output: [(68 25 -50 -71) -71]
Test Case: 828 | Input/Output: [(-26 48 -79 47) -79]
Test Case: 829 | Input/Output: [(-46 35 -86 -71) -86]
Test Case: 830 | Input/Output: [(75 24 -39 -25) -39]
Test Case: 831 | Input/Output: [(77 -67 9 32) -67]
Test Case: 832 | Input/Output: [(79 -77 -21 -54) -77]
Test Case: 833 | Input/Output: [(27 -22 -75 2) -75]
Test Case: 834 | Input/Output: [(-17 -69 -30 20) -69]
Test Case: 835 | Input/Output: [(-21 74 44 -29) -29]
Test Case: 836 | Input/Output: [(-93 9 -95 -26) -95]
Test Case: 837 | Input/Output: [(20 59 46 -41) -41]
Test Case: 838 | Input/Output: [(-80 -38 72 100) -80]
Test Case: 839 | Input/Output: [(81 1 -23 72) -23]
Test Case: 840 | Input/Output: [(28 -63 -41 48) -63]
Test Case: 841 | Input/Output: [(40 26 56 -66) -66]
Test Case: 842 | Input/Output: [(68 -70 -82 -27) -82]
Test Case: 843 | Input/Output: [(-59 -56 72 28) -59]
Test Case: 844 | Input/Output: [(47 -78 -27 -80) -80]
Test Case: 845 | Input/Output: [(-58 -33 -22 -23) -58]
Test Case: 846 | Input/Output: [(-66 -20 37 41) -66]
Test Case: 847 | Input/Output: [(-28 -19 -74 -80) -80]
Test Case: 848 | Input/Output: [(68 -28 -85 -41) -85]
Test Case: 849 | Input/Output: [(36 -42 12 17) -42]
Test Case: 850 | Input/Output: [(66 -59 21 66) -59]
Test Case: 851 | Input/Output: [(54 74 99 57) 54]
Test Case: 852 | Input/Output: [(-8 -100 -51 -96) -100]
Test Case: 853 | Input/Output: [(-3 1 21 -53) -53]
Test Case: 854 | Input/Output: [(23 -11 -17 92) -17]
Test Case: 855 | Input/Output: [(48 -64 -38 37) -64]
Test Case: 856 | Input/Output: [(-18 9 0 -10) -18]
Test Case: 857 | Input/Output: [(-98 -3 -7 -20) -98]
Test Case: 858 | Input/Output: [(99 -91 -92 -84) -92]
Test Case: 859 | Input/Output: [(-85 -4 -53 -14) -85]
Test Case: 860 | Input/Output: [(-8 37 -62 -52) -62]
Test Case: 861 | Input/Output: [(-74 -67 70 -69) -74]
Test Case: 862 | Input/Output: [(75 -53 65 31) -53]
Test Case: 863 | Input/Output: [(-67 -49 -98 -87) -98]
Test Case: 864 | Input/Output: [(-10 -53 -71 32) -71]
Test Case: 865 | Input/Output: [(-83 38 -90 -19) -90]
Test Case: 866 | Input/Output: [(-14 41 60 -7) -14]
Test Case: 867 | Input/Output: [(5 -43 77 0) -43]
Test Case: 868 | Input/Output: [(-25 7 -41 -17) -41]
Test Case: 869 | Input/Output: [(60 69 10 38) 10]
Test Case: 870 | Input/Output: [(-35 80 -57 9) -57]
Test Case: 871 | Input/Output: [(-65 -76 10 12) -76]
Test Case: 872 | Input/Output: [(18 -92 -9 -68) -92]
Test Case: 873 | Input/Output: [(-88 13 48 -99) -99]
Test Case: 874 | Input/Output: [(-9 -12 -62 88) -62]
Test Case: 875 | Input/Output: [(94 11 -40 -92) -92]
Test Case: 876 | Input/Output: [(35 99 -30 -1) -30]
Test Case: 877 | Input/Output: [(-79 94 81 80) -79]
Test Case: 878 | Input/Output: [(94 80 99 14) 14]
Test Case: 879 | Input/Output: [(-44 13 -66 29) -66]
Test Case: 880 | Input/Output: [(49 -90 48 54) -90]
Test Case: 881 | Input/Output: [(-11 23 76 -38) -38]
Test Case: 882 | Input/Output: [(22 -90 -35 -23) -90]
Test Case: 883 | Input/Output: [(-2 -99 74 -8) -99]
Test Case: 884 | Input/Output: [(85 -100 40 85) -100]
Test Case: 885 | Input/Output: [(40 77 79 47) 40]
Test Case: 886 | Input/Output: [(78 -41 12 6) -41]
Test Case: 887 | Input/Output: [(-26 23 -73 -15) -73]
Test Case: 888 | Input/Output: [(1 -47 33 37) -47]
Test Case: 889 | Input/Output: [(-53 22 66 4) -53]
Test Case: 890 | Input/Output: [(-39 -39 -96 -18) -96]
Test Case: 891 | Input/Output: [(25 -81 -49 61) -81]
Test Case: 892 | Input/Output: [(19 60 25 68) 19]
Test Case: 893 | Input/Output: [(-42 38 -68 -89) -89]
Test Case: 894 | Input/Output: [(-97 -75 -47 -29) -97]
Test Case: 895 | Input/Output: [(-87 -46 91 63) -87]
Test Case: 896 | Input/Output: [(3 -54 -89 49) -89]
Test Case: 897 | Input/Output: [(-28 -14 37 53) -28]
Test Case: 898 | Input/Output: [(20 75 27 10) 10]
Test Case: 899 | Input/Output: [(-82 59 -23 -22) -82]
Test Case: 900 | Input/Output: [(43 0 -80 90) -80]
Test Case: 901 | Input/Output: [(-12 27 -40 -77) -77]
Test Case: 902 | Input/Output: [(21 -47 -3 34) -47]
Test Case: 903 | Input/Output: [(13 -90 66 -15) -90]
Test Case: 904 | Input/Output: [(-44 40 -20 84) -44]
Test Case: 905 | Input/Output: [(-64 9 -22 6) -64]
Test Case: 906 | Input/Output: [(15 39 -78 75) -78]
Test Case: 907 | Input/Output: [(60 -57 16 24) -57]
Test Case: 908 | Input/Output: [(100 -57 -6 -73) -73]
Test Case: 909 | Input/Output: [(-34 -54 -26 -44) -54]
Test Case: 910 | Input/Output: [(-13 -64 4 -1) -64]
Test Case: 911 | Input/Output: [(-45 28 -56 36) -56]
Test Case: 912 | Input/Output: [(-58 -94 61 46) -94]
Test Case: 913 | Input/Output: [(-50 22 -67 31) -67]
Test Case: 914 | Input/Output: [(32 -7 67 -77) -77]
Test Case: 915 | Input/Output: [(60 88 82 62) 60]
Test Case: 916 | Input/Output: [(-57 -28 75 -38) -57]
Test Case: 917 | Input/Output: [(-97 92 -72 93) -97]
Test Case: 918 | Input/Output: [(46 -84 25 81) -84]
Test Case: 919 | Input/Output: [(0 1 69 -42) -42]
Test Case: 920 | Input/Output: [(34 23 -35 -9) -35]
Test Case: 921 | Input/Output: [(-59 95 15 -29) -59]
Test Case: 922 | Input/Output: [(20 21 -50 -97) -97]
Test Case: 923 | Input/Output: [(22 30 56 52) 22]
Test Case: 924 | Input/Output: [(-39 83 -97 -69) -97]
Test Case: 925 | Input/Output: [(52 -23 -10 5) -23]
Test Case: 926 | Input/Output: [(-16 -14 88 23) -16]
Test Case: 927 | Input/Output: [(-70 -8 42 -24) -70]
Test Case: 928 | Input/Output: [(9 -64 -100 -9) -100]
Test Case: 929 | Input/Output: [(-92 46 80 96) -92]
Test Case: 930 | Input/Output: [(-86 17 -41 -34) -86]
Test Case: 931 | Input/Output: [(-62 -39 -20 98) -62]
Test Case: 932 | Input/Output: [(16 -88 -38 -95) -95]
Test Case: 933 | Input/Output: [(46 24 -18 28) -18]
Test Case: 934 | Input/Output: [(-82 41 42 73) -82]
Test Case: 935 | Input/Output: [(14 92 94 -20) -20]
Test Case: 936 | Input/Output: [(-4 70 58 -61) -61]
Test Case: 937 | Input/Output: [(16 85 94 -23) -23]
Test Case: 938 | Input/Output: [(-100 -76 -55 -98) -100]
Test Case: 939 | Input/Output: [(-14 -55 -46 15) -55]
Test Case: 940 | Input/Output: [(95 -81 18 58) -81]
Test Case: 941 | Input/Output: [(44 -3 -67 -14) -67]
Test Case: 942 | Input/Output: [(93 -7 34 12) -7]
Test Case: 943 | Input/Output: [(30 -55 -15 -58) -58]
Test Case: 944 | Input/Output: [(-60 -48 -52 -74) -74]
Test Case: 945 | Input/Output: [(17 -97 -44 72) -97]
Test Case: 946 | Input/Output: [(-24 -8 -50 84) -50]
Test Case: 947 | Input/Output: [(83 86 -56 -94) -94]
Test Case: 948 | Input/Output: [(61 4 77 84) 4]
Test Case: 949 | Input/Output: [(-39 86 -62 -61) -62]
Test Case: 950 | Input/Output: [(64 -77 -45 49) -77]
Test Case: 951 | Input/Output: [(31 -76 -67 -75) -76]
Test Case: 952 | Input/Output: [(-91 54 -51 -83) -91]
Test Case: 953 | Input/Output: [(83 -84 61 94) -84]
Test Case: 954 | Input/Output: [(-44 30 95 -34) -44]
Test Case: 955 | Input/Output: [(-38 65 58 31) -38]
Test Case: 956 | Input/Output: [(-91 -41 -46 -94) -94]
Test Case: 957 | Input/Output: [(99 74 27 -22) -22]
Test Case: 958 | Input/Output: [(-51 -86 -95 -72) -95]
Test Case: 959 | Input/Output: [(29 82 -28 95) -28]
Test Case: 960 | Input/Output: [(-46 74 -30 -91) -91]
Test Case: 961 | Input/Output: [(84 4 -8 -34) -34]
Test Case: 962 | Input/Output: [(-25 -26 23 -59) -59]
Test Case: 963 | Input/Output: [(-42 -54 -99 88) -99]
Test Case: 964 | Input/Output: [(-65 90 85 -52) -65]
Test Case: 965 | Input/Output: [(-70 -55 -51 -46) -70]
Test Case: 966 | Input/Output: [(79 9 -35 70) -35]
Test Case: 967 | Input/Output: [(9 -57 54 -52) -57]
Test Case: 968 | Input/Output: [(-39 -17 2 -89) -89]
Test Case: 969 | Input/Output: [(-69 -52 89 -81) -81]
Test Case: 970 | Input/Output: [(-2 -24 33 72) -24]
Test Case: 971 | Input/Output: [(-34 86 19 -49) -49]
Test Case: 972 | Input/Output: [(89 6 -26 86) -26]
Test Case: 973 | Input/Output: [(4 -38 76 -79) -79]
Test Case: 974 | Input/Output: [(98 18 -12 73) -12]
Test Case: 975 | Input/Output: [(32 -46 -12 38) -46]
Test Case: 976 | Input/Output: [(-65 25 -37 34) -65]
Test Case: 977 | Input/Output: [(-97 -74 51 -2) -97]
Test Case: 978 | Input/Output: [(21 -79 -65 84) -79]
Test Case: 979 | Input/Output: [(97 -49 88 -89) -89]
Test Case: 980 | Input/Output: [(47 41 -69 -53) -69]
Test Case: 981 | Input/Output: [(2 -91 96 17) -91]
Test Case: 982 | Input/Output: [(-11 -56 -61 -68) -68]
Test Case: 983 | Input/Output: [(-31 85 -7 -35) -35]
Test Case: 984 | Input/Output: [(-21 56 -93 -12) -93]
Test Case: 985 | Input/Output: [(-57 15 -26 82) -57]
Test Case: 986 | Input/Output: [(58 37 -37 42) -37]
Test Case: 987 | Input/Output: [(13 84 73 -4) -4]
Test Case: 988 | Input/Output: [(-58 28 -17 -60) -60]
Test Case: 989 | Input/Output: [(16 19 -11 -8) -11]
Test Case: 990 | Input/Output: [(-86 1 -42 -60) -86]
Test Case: 991 | Input/Output: [(-54 -51 -83 -7) -83]
Test Case: 992 | Input/Output: [(62 66 -20 21) -20]
Test Case: 993 | Input/Output: [(66 -98 -47 71) -98]
Test Case: 994 | Input/Output: [(-38 51 5 100) -38]
Test Case: 995 | Input/Output: [(4 -80 -59 40) -80]
Test Case: 996 | Input/Output: [(80 68 45 29) 29]
Test Case: 997 | Input/Output: [(-36 -74 55 33) -74]
Test Case: 998 | Input/Output: [(-53 56 36 -43) -53]
Test Case: 999 | Input/Output: [(35 30 74 39) 30]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = -128 -40 121 52 37 95 31 126 61 -45 -107 -45 -27 -23 1 67
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-8 -8 -47 -8] -47] [[26 26 92 26] 26] [[-39 -39 -39 -64] -64] [[-45 -45 -45 23] -45] [[-57 -53 -57 -57] -57] [[31 31 31 -30] -30] [[53 31 31 31] 31] [[-88 -88 7 -88] -88] [[47 47 47 -53] -53] [[-54 98 -54 -54] -54] [(-23 -23 -23 -23) -23] [(67 67 67 67) 67] [(-6 -6 -6 -6) -6] [(-9 -9 -9 -9) -9] [(-17 -17 -17 -17) -17] [(5 74 66 49) 5] [(15 42 33 52) 15] [(97 1 64 93) 1] [(66 3 52 64) 3] [(95 50 91 46) 46] [(83 87 12 98) 12] [(43 3 73 22) 3] [(17 76 82 70) 17] [(71 54 80 18) 18] [(43 42 90 11) 11] [(65 59 89 65) 59] [(92 95 63 68) 63] [(9 63 82 30) 9] [(59 68 51 30) 30] [(3 72 38 31) 3] [(26 78 20 98) 20] [(16 28 54 78) 16] [(85 76 78 63) 63] [(78 20 38 91) 20] [(48 14 93 23) 14] [(57 44 24 64) 24] [(31 -85 21 83) -85] [(-34 57 -92 58) -92] [(20 1 -41 -88) -88] [(-32 26 -20 25) -32] [(70 -28 92 -56) -56] [(87 36 1 -18) -18] [(-87 -70 76 -63) -87] [(10 7 -23 61) -23] [(-77 65 89 -93) -93] [(28 -49 82 -92) -92] [(-86 -40 97 -80) -86] [(-14 4 -51 -80) -80] [(72 -34 86 -6) -34] [(-51 81 21 59) -51] [(4 1 -12 -38) -38] [(14 19 26 61) 14] [(-26 44 -83 -57) -83] [(22 34 69 -38) -38] [(-57 -13 80 76) -57] [(-14 -64 -77 -14) -77] [(-34 -57 61 96) -57] [(41 -20 100 -37) -37] [(-93 21 -29 56) -93] [(-21 -47 -20 25) -47] [(-84 69 -63 76) -84] [(12 6 -15 88) -15] [(42 98 -45 86) -45] [(-79 -95 32 67) -95] [(-20 -18 -53 23) -53] [(84 -1 -31 -5) -31] [(-1 29 80 93) -1] [(-50 -3 -49 -13) -50] [(-15 -12 -38 59) -38] [(-62 -88 46 -5) -88] [(65 0 -64 51) -64] [(35 -12 60 -53) -53] [(94 91 15 -15) -15] [(49 65 -71 -15) -71] [(-74 44 -53 -77) -77] [(-43 3 3 -78) -78] [(5 -24 -64 -79) -79] [(-59 -38 99 0) -59] [(44 90 -55 22) -55] [(-72 -40 93 -16) -72] [(-73 78 -45 43) -73] [(85 24 35 -26) -26] [(63 -86 23 87) -86] [(80 -50 14 -54) -54] [(-52 43 35 -45) -52] [(32 -80 -52 73) -80] [(-93 -42 78 44) -93] [(55 -68 -16 38) -68] [(-90 58 -66 -45) -90] [(56 82 44 51) 44] [(-82 61 56 76) -82] [(-51 -39 35 -15) -51] [(-51 93 -3 25) -51] [(30 4 -97 64) -97] [(85 16 91 -66) -66])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 53                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 97                 
Correct output: 3                   | Program output: 66                 
Correct output: 46                  | Program output: 95                 
Correct output: 12                  | Program output: 83                 
Correct output: 3                   | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 71                 
Correct output: 11                  | Program output: 43                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 92                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 59                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 26                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 85                 
Correct output: 20                  | Program output: 78                 
Correct output: 14                  | Program output: 48                 
Correct output: 24                  | Program output: 57                 
Correct output: -85                 | Program output: 31                 
Correct output: -92                 | Program output: -34                
Correct output: -88                 | Program output: 20                 
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: 70                 
Correct output: -18                 | Program output: 87                 
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: 10                 
Correct output: -93                 | Program output: -77                
Correct output: -92                 | Program output: 28                 
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -14                
Correct output: -34                 | Program output: 72                 
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: 4                  
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -26                
Correct output: -38                 | Program output: 22                 
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: -34                
Correct output: -37                 | Program output: 41                 
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -21                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: 12                 
Correct output: -45                 | Program output: 42                 
Correct output: -95                 | Program output: -79                
Correct output: -53                 | Program output: -20                
Correct output: -31                 | Program output: 84                 
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -15                
Correct output: -88                 | Program output: -62                
Correct output: -64                 | Program output: 65                 
Correct output: -53                 | Program output: 35                 
Correct output: -15                 | Program output: 94                 
Correct output: -71                 | Program output: 49                 
Correct output: -77                 | Program output: -74                
Correct output: -78                 | Program output: -43                
Correct output: -79                 | Program output: 5                  
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: 44                 
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: 85                 
Correct output: -86                 | Program output: 63                 
Correct output: -54                 | Program output: 80                 
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: 32                 
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 56                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: 30                 
Correct output: -66                 | Program output: 85                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_swap} {:close 1, :instruction integer_sub} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_inc} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction boolean_and} {:close 0, :instruction tagged_341} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_if})
Lexicase best program: (integer_dup_times boolean_rot boolean_dup integer_gte exec_rot (boolean_swap integer_sub) (boolean_and integer_inc boolean_frominteger) (boolean_and) tagged_341 exec_do*range (integer_fromboolean integer_fromboolean integer_eq) boolean_flush boolean_and integer_shove integer_gt in1 print_integer integer_stackdepth integer_lte exec_shove (exec_noop exec_if () ()))
Lexicase best errors: [0 0 0 1 0 1 1 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 35
Percent parens: 0.229
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_swap} {:close 1, :instruction integer_sub} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_inc} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction boolean_and} {:close 0, :instruction tagged_341} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_if})
Zero cases best program: (integer_dup_times boolean_rot boolean_dup integer_gte exec_rot (boolean_swap integer_sub) (boolean_and integer_inc boolean_frominteger) (boolean_and) tagged_341 exec_do*range (integer_fromboolean integer_fromboolean integer_eq) boolean_flush boolean_and integer_shove integer_gt in1 print_integer integer_stackdepth integer_lte exec_shove (exec_noop exec_if () ()))
Zero cases best errors: [0 0 0 1 0 1 1 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 35
Percent parens: 0.229
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 6 2 2 7 2 2 2 2 11)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (2 6 2 2 7 2 2 2 2 11)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer})
Best program: (in1 exec_k_when_autoconstructing () () print_integer)
Errors: [0 0 0 1 0 1 1 0 0 0]
Total: 3
Mean: 0.3
Genome size: 3
Size: 6
Percent parens: 0.500
--- Population Statistics ---
Average total errors in population: 9.962
Median total errors in population: 10
Error averages by case: (0.998 0.994 0.998 0.998 0.993 0.998 0.998 0.998 0.998 0.989)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.484
Average program size in population (points): 70.899
Average percent parens in population: 0.281
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.006
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.306
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 484515
--- Timings ---
Current time: 1559594017178 milliseconds
Total Time:           2.6 seconds
Initialization:       0.1 seconds,  3.9%
Reproduction:         0.8 seconds, 29.9%
Fitness Testing:      1.7 seconds, 66.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 53                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 97                 
Correct output: 3                   | Program output: 66                 
Correct output: 46                  | Program output: 95                 
Correct output: 12                  | Program output: 83                 
Correct output: 3                   | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 71                 
Correct output: 11                  | Program output: 43                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 92                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 59                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 26                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 85                 
Correct output: 20                  | Program output: 78                 
Correct output: 14                  | Program output: 48                 
Correct output: 24                  | Program output: 57                 
Correct output: -85                 | Program output: 31                 
Correct output: -92                 | Program output: -34                
Correct output: -88                 | Program output: 20                 
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: 70                 
Correct output: -18                 | Program output: 87                 
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: 10                 
Correct output: -93                 | Program output: -77                
Correct output: -92                 | Program output: 28                 
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -14                
Correct output: -34                 | Program output: 72                 
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: 4                  
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -26                
Correct output: -38                 | Program output: 22                 
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: -34                
Correct output: -37                 | Program output: 41                 
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -21                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: 12                 
Correct output: -45                 | Program output: 42                 
Correct output: -95                 | Program output: -79                
Correct output: -53                 | Program output: -20                
Correct output: -31                 | Program output: 84                 
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -15                
Correct output: -88                 | Program output: -62                
Correct output: -64                 | Program output: 65                 
Correct output: -53                 | Program output: 35                 
Correct output: -15                 | Program output: 94                 
Correct output: -71                 | Program output: 49                 
Correct output: -77                 | Program output: -74                
Correct output: -78                 | Program output: -43                
Correct output: -79                 | Program output: 5                  
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: 44                 
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: 85                 
Correct output: -86                 | Program output: 63                 
Correct output: -54                 | Program output: 80                 
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: 32                 
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 56                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: 30                 
Correct output: -66                 | Program output: 85                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_k} {:close 1, :instruction integer_div} {:close 2, :instruction integer_gte} {:close 0, :instruction in4} {:close 0, :instruction in4} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_not} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_shove} {:close 1, :instruction print_exec} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_add} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction boolean_eq} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_yankdup} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_noop} {:close 2, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_when} {:close 0, :instruction in2} {:close 1, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_mult} {:close 0, :instruction print_exec} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_when} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_shove} {:close 1, :instruction print_newline} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction print_boolean} {:close 0, :instruction integer_eq})
Lexicase best program: (exec_y_when_autoconstructing (print_boolean boolean_stackdepth exec_k () (integer_div) integer_gte) in4 in4 print_integer boolean_empty boolean_yankdup exec_pop (boolean_not exec_s_when_autoconstructing () (integer_rot in2 exec_rot (exec_shove (print_exec () exec_do*while () integer_empty boolean_empty integer_add boolean_dup_times) boolean_eq exec_eq) (integer_flush integer_swap boolean_pop exec_k_when_autoconstructing (boolean_shove) (integer_yankdup) integer_min) (integer_min exec_swap (integer_min boolean_dup_times exec_rot () (exec_dup_items exec_noop integer_swap) () boolean_frominteger exec_pop (exec_when (in2 print_integer) exec_noop exec_while (boolean_dup_times boolean_invert_second_then_and) exec_empty integer_mult) print_exec (integer_rot exec_do*count (exec_do*while (exec_when () integer_max) boolean_yank boolean_shove integer_shove) boolean_shove exec_shove (print_newline) exec_k_when_autoconstructing (integer_pop exec_stackdepth print_boolean) (integer_eq))) ())) ()))
Lexicase best errors: [0 1 1 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 100
Percent parens: 0.310
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_k} {:close 1, :instruction integer_div} {:close 2, :instruction integer_gte} {:close 0, :instruction in4} {:close 0, :instruction in4} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_not} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction in2} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_shove} {:close 1, :instruction print_exec} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_add} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction boolean_eq} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_yankdup} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_noop} {:close 2, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_when} {:close 0, :instruction in2} {:close 1, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_mult} {:close 0, :instruction print_exec} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_when} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_shove} {:close 1, :instruction print_newline} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction print_boolean} {:close 0, :instruction integer_eq})
Zero cases best program: (exec_y_when_autoconstructing (print_boolean boolean_stackdepth exec_k () (integer_div) integer_gte) in4 in4 print_integer boolean_empty boolean_yankdup exec_pop (boolean_not exec_s_when_autoconstructing () (integer_rot in2 exec_rot (exec_shove (print_exec () exec_do*while () integer_empty boolean_empty integer_add boolean_dup_times) boolean_eq exec_eq) (integer_flush integer_swap boolean_pop exec_k_when_autoconstructing (boolean_shove) (integer_yankdup) integer_min) (integer_min exec_swap (integer_min boolean_dup_times exec_rot () (exec_dup_items exec_noop integer_swap) () boolean_frominteger exec_pop (exec_when (in2 print_integer) exec_noop exec_while (boolean_dup_times boolean_invert_second_then_and) exec_empty integer_mult) print_exec (integer_rot exec_do*count (exec_do*while (exec_when () integer_max) boolean_yank boolean_shove integer_shove) boolean_shove exec_shove (print_newline) exec_k_when_autoconstructing (integer_pop exec_stackdepth print_boolean) (integer_eq))) ())) ()))
Zero cases best errors: [0 1 1 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 100
Percent parens: 0.310
--- Lexicase Population Statistics ---
Count of elite individuals by case: (278 423 423 423 291 294 293 423 1000 717)
Population mean number of elite cases: 4.57
Count of perfect (error zero) individuals by case: (278 423 423 423 291 294 293 423 0 717)
Population mean number of perfect (error zero) cases: 3.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer})
Best program: (in1 exec_k_when_autoconstructing () () print_integer)
Errors: [1 0 0 0 1 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 3
Size: 6
Percent parens: 0.500
--- Population Statistics ---
Average total errors in population: 6.435
Median total errors in population: 5
Error averages by case: (0.722 0.577 0.577 0.577 0.709 0.706 0.707 0.577 1.0 0.283)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 26.438
Average program size in population (points): 37.135
Average percent parens in population: 0.313
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 170
Genome diversity (% unique genomes):	 0.72
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 170
Syntactic diversity (% unique Push programs):	 0.72
Total error diversity:				 0.006
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.106
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 866980
--- Timings ---
Current time: 1559594018915 milliseconds
Total Time:           4.5 seconds
Initialization:       0.1 seconds,  2.3%
Reproduction:         1.8 seconds, 39.6%
Fitness Testing:      2.3 seconds, 51.9%
Report:               0.3 seconds,  6.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -53                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: 98                 
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 74                 
Correct output: 15                  | Program output: 42                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 50                 
Correct output: 12                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: 17                  | Program output: 76                 
Correct output: 18                  | Program output: 54                 
Correct output: 11                  | Program output: 42                 
Correct output: 59                  | Program output: 59                 
Correct output: 63                  | Program output: 95                 
Correct output: 9                   | Program output: 63                 
Correct output: 30                  | Program output: 68                 
Correct output: 3                   | Program output: 72                 
Correct output: 20                  | Program output: 78                 
Correct output: 16                  | Program output: 28                 
Correct output: 63                  | Program output: 76                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 24                  | Program output: 44                 
Correct output: -85                 | Program output: -85                
Correct output: -92                 | Program output: 57                 
Correct output: -88                 | Program output: 1                  
Correct output: -32                 | Program output: 26                 
Correct output: -56                 | Program output: -28                
Correct output: -18                 | Program output: 36                 
Correct output: -87                 | Program output: -70                
Correct output: -23                 | Program output: 7                  
Correct output: -93                 | Program output: 65                 
Correct output: -92                 | Program output: -49                
Correct output: -86                 | Program output: -40                
Correct output: -80                 | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: 81                 
Correct output: -38                 | Program output: 1                  
Correct output: 14                  | Program output: 19                 
Correct output: -83                 | Program output: 44                 
Correct output: -38                 | Program output: 34                 
Correct output: -57                 | Program output: -13                
Correct output: -77                 | Program output: -64                
Correct output: -57                 | Program output: -57                
Correct output: -37                 | Program output: -20                
Correct output: -93                 | Program output: 21                 
Correct output: -47                 | Program output: -47                
Correct output: -84                 | Program output: 69                 
Correct output: -15                 | Program output: 6                  
Correct output: -45                 | Program output: 98                 
Correct output: -95                 | Program output: -95                
Correct output: -53                 | Program output: -18                
Correct output: -31                 | Program output: -1                 
Correct output: -1                  | Program output: 29                 
Correct output: -50                 | Program output: -3                 
Correct output: -38                 | Program output: -12                
Correct output: -88                 | Program output: -88                
Correct output: -64                 | Program output: 0                  
Correct output: -53                 | Program output: -12                
Correct output: -15                 | Program output: 91                 
Correct output: -71                 | Program output: 65                 
Correct output: -77                 | Program output: 44                 
Correct output: -78                 | Program output: 3                  
Correct output: -79                 | Program output: -24                
Correct output: -59                 | Program output: -38                
Correct output: -55                 | Program output: 90                 
Correct output: -72                 | Program output: -40                
Correct output: -73                 | Program output: 78                 
Correct output: -26                 | Program output: 24                 
Correct output: -86                 | Program output: -86                
Correct output: -54                 | Program output: -50                
Correct output: -52                 | Program output: 43                 
Correct output: -80                 | Program output: -80                
Correct output: -93                 | Program output: -42                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: 58                 
Correct output: 44                  | Program output: 82                 
Correct output: -82                 | Program output: 61                 
Correct output: -51                 | Program output: -39                
Correct output: -51                 | Program output: 93                 
Correct output: -97                 | Program output: 4                  
Correct output: -66                 | Program output: 16                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Lexicase best program: (integer_empty integer_div integer_sub in4 in2 print_integer in3 boolean_flush exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Lexicase best errors: [0 0 1 1 0 1 1 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 15
Percent parens: 0.133
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Zero cases best program: (integer_empty integer_div integer_sub in4 in2 print_integer in3 boolean_flush exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Zero cases best errors: [0 0 1 1 0 1 1 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 15
Percent parens: 0.133
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 369 1000 730 359 369 370 5 1)
Population mean number of elite cases: 3.20
Count of perfect (error zero) individuals by case: (1 1 369 0 730 359 369 370 5 1)
Population mean number of perfect (error zero) cases: 2.20
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Best program: (integer_empty integer_div integer_sub in4 in2 print_integer in3 boolean_flush exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Errors: [0 0 1 1 0 1 1 0 0 0]
Total: 4
Mean: 0.4
Genome size: 13
Size: 15
Percent parens: 0.133
--- Population Statistics ---
Average total errors in population: 7.795
Median total errors in population: 8
Error averages by case: (0.999 0.999 0.631 1.0 0.27 0.641 0.631 0.63 0.995 0.999)
Error minima by case: (0 0 0 1 0 0 0 0 0 0)
Average genome size in population (length): 26.006
Average program size in population (points): 36.489
Average percent parens in population: 0.298
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 121
Genome diversity (% unique genomes):	 0.796
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 121
Syntactic diversity (% unique Push programs):	 0.795
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.091
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1304032
--- Timings ---
Current time: 1559594021509 milliseconds
Total Time:           6.4 seconds
Initialization:       0.1 seconds,  1.6%
Reproduction:         3.0 seconds, 47.0%
Fitness Testing:      2.9 seconds, 45.0%
Report:               0.4 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -53                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: 98                 
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 74                 
Correct output: 15                  | Program output: 42                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 50                 
Correct output: 12                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: 17                  | Program output: 76                 
Correct output: 18                  | Program output: 54                 
Correct output: 11                  | Program output: 42                 
Correct output: 59                  | Program output: 59                 
Correct output: 63                  | Program output: 95                 
Correct output: 9                   | Program output: 63                 
Correct output: 30                  | Program output: 68                 
Correct output: 3                   | Program output: 72                 
Correct output: 20                  | Program output: 78                 
Correct output: 16                  | Program output: 28                 
Correct output: 63                  | Program output: 76                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 24                  | Program output: 44                 
Correct output: -85                 | Program output: -85                
Correct output: -92                 | Program output: 57                 
Correct output: -88                 | Program output: 1                  
Correct output: -32                 | Program output: 26                 
Correct output: -56                 | Program output: -28                
Correct output: -18                 | Program output: 36                 
Correct output: -87                 | Program output: -70                
Correct output: -23                 | Program output: 7                  
Correct output: -93                 | Program output: 65                 
Correct output: -92                 | Program output: -49                
Correct output: -86                 | Program output: -40                
Correct output: -80                 | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: 81                 
Correct output: -38                 | Program output: 1                  
Correct output: 14                  | Program output: 19                 
Correct output: -83                 | Program output: 44                 
Correct output: -38                 | Program output: 34                 
Correct output: -57                 | Program output: -13                
Correct output: -77                 | Program output: -64                
Correct output: -57                 | Program output: -57                
Correct output: -37                 | Program output: -20                
Correct output: -93                 | Program output: 21                 
Correct output: -47                 | Program output: -47                
Correct output: -84                 | Program output: 69                 
Correct output: -15                 | Program output: 6                  
Correct output: -45                 | Program output: 98                 
Correct output: -95                 | Program output: -95                
Correct output: -53                 | Program output: -18                
Correct output: -31                 | Program output: -1                 
Correct output: -1                  | Program output: 29                 
Correct output: -50                 | Program output: -3                 
Correct output: -38                 | Program output: -12                
Correct output: -88                 | Program output: -88                
Correct output: -64                 | Program output: 0                  
Correct output: -53                 | Program output: -12                
Correct output: -15                 | Program output: 91                 
Correct output: -71                 | Program output: 65                 
Correct output: -77                 | Program output: 44                 
Correct output: -78                 | Program output: 3                  
Correct output: -79                 | Program output: -24                
Correct output: -59                 | Program output: -38                
Correct output: -55                 | Program output: 90                 
Correct output: -72                 | Program output: -40                
Correct output: -73                 | Program output: 78                 
Correct output: -26                 | Program output: 24                 
Correct output: -86                 | Program output: -86                
Correct output: -54                 | Program output: -50                
Correct output: -52                 | Program output: 43                 
Correct output: -80                 | Program output: -80                
Correct output: -93                 | Program output: -42                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: 58                 
Correct output: 44                  | Program output: 82                 
Correct output: -82                 | Program output: 61                 
Correct output: -51                 | Program output: -39                
Correct output: -51                 | Program output: 93                 
Correct output: -97                 | Program output: 4                  
Correct output: -66                 | Program output: 16                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 1, :instruction integer_lte} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Lexicase best program: (integer_empty integer_div integer_sub in4 in2 print_integer in3 integer_lte boolean_flush exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Lexicase best errors: [0 0 1 1 0 1 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 16
Percent parens: 0.125
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 1, :instruction integer_lte} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Zero cases best program: (integer_empty integer_div integer_sub in4 in2 print_integer in3 integer_lte boolean_flush exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Zero cases best errors: [0 0 1 1 0 1 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 16
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (431 807 152 219 434 219 1000 1000 432 219)
Population mean number of elite cases: 4.91
Count of perfect (error zero) individuals by case: (431 807 152 219 434 219 0 0 432 219)
Population mean number of perfect (error zero) cases: 2.91
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction in4} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Best program: (integer_empty integer_div in4 in2 print_integer in3 boolean_flush exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Errors: [0 0 1 1 0 1 1 1 0 1]
Total: 6
Mean: 0.6
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 7.087
Median total errors in population: 6
Error averages by case: (0.569 0.193 0.848 0.781 0.566 0.781 1.0 1.0 0.568 0.781)
Error minima by case: (0 0 0 0 0 0 1 1 0 0)
Average genome size in population (length): 16.029
Average program size in population (points): 20.655
Average percent parens in population: 0.220
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 73
Genome diversity (% unique genomes):	 0.766
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 73
Syntactic diversity (% unique Push programs):	 0.766
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1995048
--- Timings ---
Current time: 1559594024350 milliseconds
Total Time:           9.3 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         4.3 seconds, 46.1%
Fitness Testing:      3.7 seconds, 39.9%
Report:               1.2 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 53                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 97                 
Correct output: 3                   | Program output: 66                 
Correct output: 46                  | Program output: 95                 
Correct output: 12                  | Program output: 83                 
Correct output: 3                   | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 71                 
Correct output: 11                  | Program output: 43                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 92                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 59                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 26                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 85                 
Correct output: 20                  | Program output: 78                 
Correct output: 14                  | Program output: 48                 
Correct output: 24                  | Program output: 57                 
Correct output: -85                 | Program output: 31                 
Correct output: -92                 | Program output: -34                
Correct output: -88                 | Program output: 20                 
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: 70                 
Correct output: -18                 | Program output: 87                 
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: 10                 
Correct output: -93                 | Program output: -77                
Correct output: -92                 | Program output: 28                 
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -14                
Correct output: -34                 | Program output: 72                 
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: 4                  
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -26                
Correct output: -38                 | Program output: 22                 
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: -34                
Correct output: -37                 | Program output: 41                 
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -21                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: 12                 
Correct output: -45                 | Program output: 42                 
Correct output: -95                 | Program output: -79                
Correct output: -53                 | Program output: -20                
Correct output: -31                 | Program output: 84                 
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -15                
Correct output: -88                 | Program output: -62                
Correct output: -64                 | Program output: 65                 
Correct output: -53                 | Program output: 35                 
Correct output: -15                 | Program output: 94                 
Correct output: -71                 | Program output: 49                 
Correct output: -77                 | Program output: -74                
Correct output: -78                 | Program output: -43                
Correct output: -79                 | Program output: 5                  
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: 44                 
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: 85                 
Correct output: -86                 | Program output: 63                 
Correct output: -54                 | Program output: 80                 
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: 32                 
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 56                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: 30                 
Correct output: -66                 | Program output: 85                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction print_integer} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_and} {:close 1, :instruction boolean_and} {:close 0, :instruction tagged_341} {:close 1, :instruction boolean_empty} {:close 1, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in4} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction print_integer} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_noop})
Lexicase best program: (print_integer integer_dup_times boolean_and boolean_and tagged_341 boolean_empty in3 exec_do*range (integer_fromboolean in4 integer_fromboolean integer_eq) integer_eq boolean_flush boolean_and integer_shove integer_gt in1 integer_fromboolean print_integer integer_stackdepth integer_lte boolean_empty exec_noop)
Lexicase best errors: [1 1 1 0 0 1 1 0 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 26
Percent parens: 0.077
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction print_integer} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_and} {:close 1, :instruction boolean_and} {:close 0, :instruction tagged_341} {:close 1, :instruction boolean_empty} {:close 1, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in4} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction print_integer} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_noop})
Zero cases best program: (print_integer integer_dup_times boolean_and boolean_and tagged_341 boolean_empty in3 exec_do*range (integer_fromboolean in4 integer_fromboolean integer_eq) integer_eq boolean_flush boolean_and integer_shove integer_gt in1 integer_fromboolean print_integer integer_stackdepth integer_lte boolean_empty exec_noop)
Zero cases best errors: [1 1 1 0 0 1 1 0 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 26
Percent parens: 0.077
--- Lexicase Population Statistics ---
Count of elite individuals by case: (134 133 4 329 329 322 132 329 325 790)
Population mean number of elite cases: 2.83
Count of perfect (error zero) individuals by case: (134 133 4 329 329 322 132 329 325 790)
Population mean number of perfect (error zero) cases: 2.83
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_yank} {:close 0, :instruction boolean_and} {:close 1, :instruction boolean_and} {:close 0, :instruction tagged_341} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_pop} {:close 0, :instruction boolean_invert_second_then_and})
Best program: (integer_dup_times exec_do*times (boolean_rot exec_swap (boolean_dup integer_gte exec_rot (boolean_swap boolean_invert_first_then_and) (exec_yank) (boolean_and boolean_and) tagged_341 integer_fromboolean integer_fromboolean boolean_flush boolean_and integer_shove integer_gt in1 print_integer exec_stackdepth boolean_frominteger integer_lte exec_noop exec_pop () boolean_invert_second_then_and) ()))
Errors: [1 1 1 0 0 1 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 27
Size: 35
Percent parens: 0.229
--- Population Statistics ---
Average total errors in population: 7.173
Median total errors in population: 8
Error averages by case: (0.866 0.867 0.996 0.671 0.671 0.678 0.868 0.671 0.675 0.21)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 15.233
Average program size in population (points): 20.055
Average percent parens in population: 0.254
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 65
Genome diversity (% unique genomes):	 0.844
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.842
Total error diversity:				 0.006
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.063
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2538565
--- Timings ---
Current time: 1559594026420 milliseconds
Total Time:          11.9 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.6 seconds, 46.9%
Fitness Testing:      4.3 seconds, 36.2%
Report:               1.9 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 53                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 97                 
Correct output: 3                   | Program output: 66                 
Correct output: 46                  | Program output: 95                 
Correct output: 12                  | Program output: 83                 
Correct output: 3                   | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 71                 
Correct output: 11                  | Program output: 43                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 92                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 59                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 26                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 85                 
Correct output: 20                  | Program output: 78                 
Correct output: 14                  | Program output: 48                 
Correct output: 24                  | Program output: 57                 
Correct output: -85                 | Program output: 31                 
Correct output: -92                 | Program output: -34                
Correct output: -88                 | Program output: 20                 
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: 70                 
Correct output: -18                 | Program output: 87                 
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: 10                 
Correct output: -93                 | Program output: -77                
Correct output: -92                 | Program output: 28                 
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -14                
Correct output: -34                 | Program output: 72                 
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: 4                  
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -26                
Correct output: -38                 | Program output: 22                 
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: -34                
Correct output: -37                 | Program output: 41                 
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -21                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: 12                 
Correct output: -45                 | Program output: 42                 
Correct output: -95                 | Program output: -79                
Correct output: -53                 | Program output: -20                
Correct output: -31                 | Program output: 84                 
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -15                
Correct output: -88                 | Program output: -62                
Correct output: -64                 | Program output: 65                 
Correct output: -53                 | Program output: 35                 
Correct output: -15                 | Program output: 94                 
Correct output: -71                 | Program output: 49                 
Correct output: -77                 | Program output: -74                
Correct output: -78                 | Program output: -43                
Correct output: -79                 | Program output: 5                  
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: 44                 
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: 85                 
Correct output: -86                 | Program output: 63                 
Correct output: -54                 | Program output: 80                 
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: 32                 
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: 55                 
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 56                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: 30                 
Correct output: -66                 | Program output: 85                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 2, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer})
Lexicase best program: (in1 print_integer exec_k_when_autoconstructing () () print_integer)
Lexicase best errors: [0 1 1 1 0 0 0 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 7
Percent parens: 0.429
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 2, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer})
Zero cases best program: (in1 print_integer exec_k_when_autoconstructing () () print_integer)
Zero cases best errors: [0 1 1 1 0 0 0 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 7
Percent parens: 0.429
--- Lexicase Population Statistics ---
Count of elite individuals by case: (323 85 245 85 322 322 326 325 325 88)
Population mean number of elite cases: 2.45
Count of perfect (error zero) individuals by case: (323 85 245 85 322 322 326 325 325 88)
Population mean number of perfect (error zero) cases: 2.45
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction integer_max} {:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Best program: (integer_empty integer_sub in4 integer_max in1 print_integer in3 boolean_rot boolean_flush exec_dup_items exec_y (tag_integer_177) integer_mult exec_yank integer_empty)
Errors: [0 1 1 1 0 0 0 0 0 1]
Total: 4
Mean: 0.4
Genome size: 15
Size: 17
Percent parens: 0.118
--- Population Statistics ---
Average total errors in population: 7.554
Median total errors in population: 9
Error averages by case: (0.677 0.915 0.755 0.915 0.678 0.678 0.674 0.675 0.675 0.912)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 17.381
Average program size in population (points): 23.507
Average percent parens in population: 0.279
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 43
Genome diversity (% unique genomes):	 0.853
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2951366
--- Timings ---
Current time: 1559594028778 milliseconds
Total Time:          13.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.8 seconds, 49.3%
Fitness Testing:      4.8 seconds, 34.8%
Report:               2.1 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 683
Test mean error for best: 0.68300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: 23                 
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 49                 
Correct output: 15                  | Program output: 52                 
Correct output: 1                   | Program output: 93                 
Correct output: 3                   | Program output: 64                 
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 98                 
Correct output: 3                   | Program output: 22                 
Correct output: 17                  | Program output: 70                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 30                 
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 31                 
Correct output: 20                  | Program output: 98                 
Correct output: 16                  | Program output: 78                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 91                 
Correct output: 14                  | Program output: 23                 
Correct output: 24                  | Program output: 64                 
Correct output: -85                 | Program output: 83                 
Correct output: -92                 | Program output: 58                 
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: 25                 
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -63                
Correct output: -23                 | Program output: 61                 
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -80                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -6                 
Correct output: -51                 | Program output: 59                 
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 61                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: 76                 
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: 96                 
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: 56                 
Correct output: -47                 | Program output: 25                 
Correct output: -84                 | Program output: 76                 
Correct output: -15                 | Program output: 88                 
Correct output: -45                 | Program output: 86                 
Correct output: -95                 | Program output: 67                 
Correct output: -53                 | Program output: 23                 
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: 93                 
Correct output: -50                 | Program output: -13                
Correct output: -38                 | Program output: 59                 
Correct output: -88                 | Program output: -5                 
Correct output: -64                 | Program output: 51                 
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: 0                  
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -16                
Correct output: -73                 | Program output: 43                 
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 87                 
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -45                
Correct output: -80                 | Program output: 73                 
Correct output: -93                 | Program output: 44                 
Correct output: -68                 | Program output: 38                 
Correct output: -90                 | Program output: -45                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: 76                 
Correct output: -51                 | Program output: -15                
Correct output: -51                 | Program output: 25                 
Correct output: -97                 | Program output: 64                 
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Lexicase best program: (boolean_eq integer_empty integer_sub in4 print_integer in3 exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Lexicase best errors: [1 0 0 0 0 0 1 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 13
Percent parens: 0.154
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 1, :instruction tag_integer_177} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Zero cases best program: (boolean_eq integer_empty integer_sub in4 print_integer in3 exec_dup_items exec_y (tag_integer_177) exec_yank integer_empty)
Zero cases best errors: [1 0 0 0 0 0 1 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 13
Percent parens: 0.154
--- Lexicase Population Statistics ---
Count of elite individuals by case: (461 692 760 79 79 79 147 79 68 145)
Population mean number of elite cases: 2.59
Count of perfect (error zero) individuals by case: (461 692 760 79 79 79 147 79 68 145)
Population mean number of perfect (error zero) cases: 2.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_div} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_empty} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_pop})
Best program: (integer_empty integer_empty integer_rot integer_div in4 print_integer exec_dup_items in3 boolean_flush exec_empty exec_dup_items exec_yank integer_empty exec_pop ())
Errors: [1 0 0 0 0 0 1 0 1 1]
Total: 4
Mean: 0.4
Genome size: 14
Size: 16
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 7.411
Median total errors in population: 7
Error averages by case: (0.539 0.308 0.24 0.921 0.921 0.921 0.853 0.921 0.932 0.855)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.274
Average program size in population (points): 19.272
Average percent parens in population: 0.297
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 44
Genome diversity (% unique genomes):	 0.801
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.796
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 3238958
--- Timings ---
Current time: 1559594030637 milliseconds
Total Time:          16.2 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.2 seconds, 50.5%
Fitness Testing:      5.1 seconds, 31.5%
Report:               2.8 seconds, 17.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 683
Test mean error for best: 0.68300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: 23                 
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 49                 
Correct output: 15                  | Program output: 52                 
Correct output: 1                   | Program output: 93                 
Correct output: 3                   | Program output: 64                 
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 98                 
Correct output: 3                   | Program output: 22                 
Correct output: 17                  | Program output: 70                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 30                 
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 31                 
Correct output: 20                  | Program output: 98                 
Correct output: 16                  | Program output: 78                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 91                 
Correct output: 14                  | Program output: 23                 
Correct output: 24                  | Program output: 64                 
Correct output: -85                 | Program output: 83                 
Correct output: -92                 | Program output: 58                 
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: 25                 
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -63                
Correct output: -23                 | Program output: 61                 
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -80                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -6                 
Correct output: -51                 | Program output: 59                 
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 61                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: 76                 
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: 96                 
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: 56                 
Correct output: -47                 | Program output: 25                 
Correct output: -84                 | Program output: 76                 
Correct output: -15                 | Program output: 88                 
Correct output: -45                 | Program output: 86                 
Correct output: -95                 | Program output: 67                 
Correct output: -53                 | Program output: 23                 
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: 93                 
Correct output: -50                 | Program output: -13                
Correct output: -38                 | Program output: 59                 
Correct output: -88                 | Program output: -5                 
Correct output: -64                 | Program output: 51                 
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: 0                  
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -16                
Correct output: -73                 | Program output: 43                 
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 87                 
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -45                
Correct output: -80                 | Program output: 73                 
Correct output: -93                 | Program output: 44                 
Correct output: -68                 | Program output: 38                 
Correct output: -90                 | Program output: -45                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: 76                 
Correct output: -51                 | Program output: -15                
Correct output: -51                 | Program output: 25                 
Correct output: -97                 | Program output: 64                 
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_div} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_sub} {:close 2, :instruction integer_dec} {:close 0, :instruction in4} {:close 1, :instruction exec_k} {:close 0, :instruction in2} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_yank})
Lexicase best program: (integer_div integer_dec integer_shove integer_sub integer_dec in4 exec_k () (in2 exec_yankdup) print_integer in3 boolean_flush exec_dup_items exec_y (integer_dup exec_yank))
Lexicase best errors: [0 1 0 0 0 1 0 1 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 20
Percent parens: 0.200
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_div} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_sub} {:close 2, :instruction integer_dec} {:close 0, :instruction in4} {:close 1, :instruction exec_k} {:close 0, :instruction in2} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_yank})
Zero cases best program: (integer_div integer_dec integer_shove integer_sub integer_dec in4 exec_k () (in2 exec_yankdup) print_integer in3 boolean_flush exec_dup_items exec_y (integer_dup exec_yank))
Zero cases best errors: [0 1 0 0 0 1 0 1 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 20
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (594 99 371 763 371 176 370 98 173 123)
Population mean number of elite cases: 3.14
Count of perfect (error zero) individuals by case: (594 99 371 763 371 176 370 98 173 123)
Population mean number of perfect (error zero) cases: 3.14
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_swap} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty})
Best program: (integer_sub in4 print_integer in3 integer_dup boolean_flush exec_empty boolean_invert_second_then_and integer_swap exec_dup_items exec_y (integer_fromboolean exec_swap (exec_yank integer_empty) ()))
Errors: [0 1 0 0 0 1 0 1 1 1]
Total: 5
Mean: 0.5
Genome size: 15
Size: 19
Percent parens: 0.211
--- Population Statistics ---
Average total errors in population: 6.862
Median total errors in population: 7
Error averages by case: (0.406 0.901 0.629 0.237 0.629 0.824 0.63 0.902 0.827 0.877)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.713
Average program size in population (points): 18.007
Average percent parens in population: 0.251
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 14
Genome diversity (% unique genomes):	 0.87
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.869
Total error diversity:				 0.006
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.057
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 3729731
--- Timings ---
Current time: 1559594033068 milliseconds
Total Time:          18.1 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         9.4 seconds, 52.1%
Fitness Testing:      5.6 seconds, 31.1%
Report:               2.9 seconds, 16.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 683
Test mean error for best: 0.68300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: 23                 
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 49                 
Correct output: 15                  | Program output: 52                 
Correct output: 1                   | Program output: 93                 
Correct output: 3                   | Program output: 64                 
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 98                 
Correct output: 3                   | Program output: 22                 
Correct output: 17                  | Program output: 70                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 30                 
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 31                 
Correct output: 20                  | Program output: 98                 
Correct output: 16                  | Program output: 78                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 91                 
Correct output: 14                  | Program output: 23                 
Correct output: 24                  | Program output: 64                 
Correct output: -85                 | Program output: 83                 
Correct output: -92                 | Program output: 58                 
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: 25                 
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -63                
Correct output: -23                 | Program output: 61                 
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -80                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -6                 
Correct output: -51                 | Program output: 59                 
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 61                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: 76                 
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: 96                 
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: 56                 
Correct output: -47                 | Program output: 25                 
Correct output: -84                 | Program output: 76                 
Correct output: -15                 | Program output: 88                 
Correct output: -45                 | Program output: 86                 
Correct output: -95                 | Program output: 67                 
Correct output: -53                 | Program output: 23                 
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: 93                 
Correct output: -50                 | Program output: -13                
Correct output: -38                 | Program output: 59                 
Correct output: -88                 | Program output: -5                 
Correct output: -64                 | Program output: 51                 
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: 0                  
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -16                
Correct output: -73                 | Program output: 43                 
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 87                 
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -45                
Correct output: -80                 | Program output: 73                 
Correct output: -93                 | Program output: 44                 
Correct output: -68                 | Program output: 38                 
Correct output: -90                 | Program output: -45                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: 76                 
Correct output: -51                 | Program output: -15                
Correct output: -51                 | Program output: 25                 
Correct output: -97                 | Program output: 64                 
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_y} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_yankdup})
Lexicase best program: (boolean_stackdepth integer_empty integer_sub in4 print_integer integer_gt boolean_flush exec_rot (exec_y (exec_dup_items integer_gt exec_swap (integer_yankdup) ())) () ())
Lexicase best errors: [0 1 1 0 0 1 1 1 1 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 20
Percent parens: 0.350
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_y} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_yankdup})
Zero cases best program: (boolean_stackdepth integer_empty integer_sub in4 print_integer integer_gt boolean_flush exec_rot (exec_y (exec_dup_items integer_gt exec_swap (integer_yankdup) ())) () ())
Zero cases best errors: [0 1 1 0 0 1 1 1 1 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 20
Percent parens: 0.350
--- Lexicase Population Statistics ---
Count of elite individuals by case: (316 115 196 317 316 115 168 196 115 316)
Population mean number of elite cases: 2.17
Count of perfect (error zero) individuals by case: (316 115 196 317 316 115 168 196 115 316)
Population mean number of perfect (error zero) cases: 2.17
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_sub} {:close 0, :instruction integer_yankdup} {:close 1, :instruction integer_eq} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in4} {:close 0, :instruction boolean_xor} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup_items} {:close 0, :instruction boolean_flush} {:close 1, :instruction integer_gte})
Best program: (integer_sub integer_yankdup integer_eq exec_stackdepth boolean_frominteger in4 boolean_xor print_integer in3 boolean_flush exec_dup_items boolean_flush integer_gte)
Errors: [0 1 1 0 0 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 7.83
Median total errors in population: 8
Error averages by case: (0.684 0.885 0.804 0.683 0.684 0.885 0.832 0.804 0.885 0.684)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.511
Average program size in population (points): 17.701
Average percent parens in population: 0.244
Minimum age in population: 8.0
Maximum age in population: 8.0
Average age in population: 8.0
Median age in population: 8.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 16
Genome diversity (% unique genomes):	 0.903
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.903
Total error diversity:				 0.005
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 4212463
--- Timings ---
Current time: 1559594034807 milliseconds
Total Time:          20.4 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        10.5 seconds, 51.7%
Fitness Testing:      6.1 seconds, 30.1%
Report:               3.6 seconds, 17.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 683
Test mean error for best: 0.68300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: 23                 
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 49                 
Correct output: 15                  | Program output: 52                 
Correct output: 1                   | Program output: 93                 
Correct output: 3                   | Program output: 64                 
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 98                 
Correct output: 3                   | Program output: 22                 
Correct output: 17                  | Program output: 70                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 30                 
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 31                 
Correct output: 20                  | Program output: 98                 
Correct output: 16                  | Program output: 78                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 91                 
Correct output: 14                  | Program output: 23                 
Correct output: 24                  | Program output: 64                 
Correct output: -85                 | Program output: 83                 
Correct output: -92                 | Program output: 58                 
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: 25                 
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -63                
Correct output: -23                 | Program output: 61                 
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -80                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -6                 
Correct output: -51                 | Program output: 59                 
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 61                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: 76                 
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: 96                 
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: 56                 
Correct output: -47                 | Program output: 25                 
Correct output: -84                 | Program output: 76                 
Correct output: -15                 | Program output: 88                 
Correct output: -45                 | Program output: 86                 
Correct output: -95                 | Program output: 67                 
Correct output: -53                 | Program output: 23                 
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: 93                 
Correct output: -50                 | Program output: -13                
Correct output: -38                 | Program output: 59                 
Correct output: -88                 | Program output: -5                 
Correct output: -64                 | Program output: 51                 
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: 0                  
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -16                
Correct output: -73                 | Program output: 43                 
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 87                 
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -45                
Correct output: -80                 | Program output: 73                 
Correct output: -93                 | Program output: 44                 
Correct output: -68                 | Program output: 38                 
Correct output: -90                 | Program output: -45                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: 76                 
Correct output: -51                 | Program output: -15                
Correct output: -51                 | Program output: 25                 
Correct output: -97                 | Program output: 64                 
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_dup})
Lexicase best program: (integer_sub in4 print_integer in3 integer_dup exec_empty boolean_invert_second_then_and exec_dup_items exec_y (integer_fromboolean exec_swap (exec_yank integer_empty boolean_dup) ()))
Lexicase best errors: [1 0 1 0 1 0 1 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 18
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_dup})
Zero cases best program: (integer_sub in4 print_integer in3 integer_dup exec_empty boolean_invert_second_then_and exec_dup_items exec_y (integer_fromboolean exec_swap (exec_yank integer_empty boolean_dup) ()))
Zero cases best errors: [1 0 1 0 1 0 1 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 18
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (252 339 64 341 251 339 251 338 339 656)
Population mean number of elite cases: 3.17
Count of perfect (error zero) individuals by case: (252 339 64 341 251 339 251 338 339 656)
Population mean number of perfect (error zero) cases: 3.17
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_div} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction tag_integer_177} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_flush})
Best program: (integer_empty integer_flush integer_div integer_add exec_do*count (in4 print_integer boolean_invert_first_then_and) integer_swap boolean_flush tag_integer_177 integer_sub exec_yank integer_empty boolean_flush)
Errors: [1 0 1 0 1 0 1 0 0 0]
Total: 4
Mean: 0.4
Genome size: 15
Size: 17
Percent parens: 0.118
--- Population Statistics ---
Average total errors in population: 6.83
Median total errors in population: 6
Error averages by case: (0.748 0.661 0.936 0.659 0.749 0.661 0.749 0.662 0.661 0.344)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.124
Average program size in population (points): 17.334
Average percent parens in population: 0.256
Minimum age in population: 9.0
Maximum age in population: 9.0
Average age in population: 9.0
Median age in population: 9.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 33
Genome diversity (% unique genomes):	 0.87
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.869
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 4648717
--- Timings ---
Current time: 1559594036702 milliseconds
Total Time:          22.3 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        11.8 seconds, 53.1%
Fitness Testing:      6.6 seconds, 29.7%
Report:               3.7 seconds, 16.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Smallest problem report - generation 10
Test total error for best: 683
Test mean error for best: 0.68300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: 23                 
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 49                 
Correct output: 15                  | Program output: 52                 
Correct output: 1                   | Program output: 93                 
Correct output: 3                   | Program output: 64                 
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 98                 
Correct output: 3                   | Program output: 22                 
Correct output: 17                  | Program output: 70                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 30                 
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 31                 
Correct output: 20                  | Program output: 98                 
Correct output: 16                  | Program output: 78                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 91                 
Correct output: 14                  | Program output: 23                 
Correct output: 24                  | Program output: 64                 
Correct output: -85                 | Program output: 83                 
Correct output: -92                 | Program output: 58                 
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: 25                 
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -63                
Correct output: -23                 | Program output: 61                 
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -80                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -6                 
Correct output: -51                 | Program output: 59                 
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 61                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: 76                 
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: 96                 
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: 56                 
Correct output: -47                 | Program output: 25                 
Correct output: -84                 | Program output: 76                 
Correct output: -15                 | Program output: 88                 
Correct output: -45                 | Program output: 86                 
Correct output: -95                 | Program output: 67                 
Correct output: -53                 | Program output: 23                 
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: 93                 
Correct output: -50                 | Program output: -13                
Correct output: -38                 | Program output: 59                 
Correct output: -88                 | Program output: -5                 
Correct output: -64                 | Program output: 51                 
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: 0                  
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -16                
Correct output: -73                 | Program output: 43                 
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 87                 
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -45                
Correct output: -80                 | Program output: 73                 
Correct output: -93                 | Program output: 44                 
Correct output: -68                 | Program output: 38                 
Correct output: -90                 | Program output: -45                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: 76                 
Correct output: -51                 | Program output: -15                
Correct output: -51                 | Program output: 25                 
Correct output: -97                 | Program output: 64                 
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_empty} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction print_integer})
Lexicase best program: (integer_empty in3 in1 print_integer)
Lexicase best errors: [0 1 1 1 0 0 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.200
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_empty} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction print_integer})
Zero cases best program: (integer_empty in3 in1 print_integer)
Zero cases best errors: [0 1 1 1 0 0 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (300 436 1000 435 298 458 1000 436 300 43)
Population mean number of elite cases: 4.71
Count of perfect (error zero) individuals by case: (300 436 0 435 298 458 0 436 300 43)
Population mean number of perfect (error zero) cases: 2.71
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction exec_yank} {:close 1, :instruction boolean_yank})
Best program: (in4 print_integer exec_dup_items exec_y (exec_yank boolean_yank))
Errors: [1 0 1 0 1 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 6
Size: 8
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 7.294
Median total errors in population: 7
Error averages by case: (0.7 0.564 1.0 0.565 0.702 0.542 1.0 0.564 0.7 0.957)
Error minima by case: (0 0 1 0 0 0 1 0 0 0)
Average genome size in population (length): 10.025
Average program size in population (points): 13.664
Average percent parens in population: 0.274
Minimum age in population: 10.0
Maximum age in population: 10.0
Average age in population: 10.0
Median age in population: 10.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 135
Genome diversity (% unique genomes):	 0.746
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 135
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.005
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.073
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 5250109
--- Timings ---
Current time: 1559594038984 milliseconds
Total Time:          24.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.0 seconds, 54.0%
Fitness Testing:      7.2 seconds, 29.7%
Report:               3.8 seconds, 15.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 683
Test mean error for best: 0.68300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: 23                 
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 49                 
Correct output: 15                  | Program output: 52                 
Correct output: 1                   | Program output: 93                 
Correct output: 3                   | Program output: 64                 
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 98                 
Correct output: 3                   | Program output: 22                 
Correct output: 17                  | Program output: 70                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 30                 
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 31                 
Correct output: 20                  | Program output: 98                 
Correct output: 16                  | Program output: 78                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 91                 
Correct output: 14                  | Program output: 23                 
Correct output: 24                  | Program output: 64                 
Correct output: -85                 | Program output: 83                 
Correct output: -92                 | Program output: 58                 
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: 25                 
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -63                
Correct output: -23                 | Program output: 61                 
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -80                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -6                 
Correct output: -51                 | Program output: 59                 
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 61                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: 76                 
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: 96                 
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: 56                 
Correct output: -47                 | Program output: 25                 
Correct output: -84                 | Program output: 76                 
Correct output: -15                 | Program output: 88                 
Correct output: -45                 | Program output: 86                 
Correct output: -95                 | Program output: 67                 
Correct output: -53                 | Program output: 23                 
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: 93                 
Correct output: -50                 | Program output: -13                
Correct output: -38                 | Program output: 59                 
Correct output: -88                 | Program output: -5                 
Correct output: -64                 | Program output: 51                 
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: 0                  
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -16                
Correct output: -73                 | Program output: 43                 
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 87                 
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -45                
Correct output: -80                 | Program output: 73                 
Correct output: -93                 | Program output: 44                 
Correct output: -68                 | Program output: 38                 
Correct output: -90                 | Program output: -45                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: 76                 
Correct output: -51                 | Program output: -15                
Correct output: -51                 | Program output: 25                 
Correct output: -97                 | Program output: 64                 
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction print_integer} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_empty} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction tag_integer_177} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty})
Lexicase best program: (print_integer integer_empty integer_div integer_yank integer_sub integer_mod exec_empty in4 print_integer in3 integer_fromboolean integer_stackdepth tag_integer_177 integer_add boolean_not integer_empty)
Lexicase best errors: [0 0 0 0 1 0 1 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 17
Percent parens: 0.059
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction print_integer} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_div} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_empty} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction tag_integer_177} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty})
Zero cases best program: (print_integer integer_empty integer_div integer_yank integer_sub integer_mod exec_empty in4 print_integer in3 integer_fromboolean integer_stackdepth tag_integer_177 integer_add boolean_not integer_empty)
Zero cases best errors: [0 0 0 0 1 0 1 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 17
Percent parens: 0.059
--- Lexicase Population Statistics ---
Count of elite individuals by case: (319 320 320 320 356 798 350 321 5 355)
Population mean number of elite cases: 3.46
Count of perfect (error zero) individuals by case: (319 320 320 320 356 798 350 321 5 355)
Population mean number of perfect (error zero) cases: 3.46
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_empty} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_dup_times} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_shove})
Best program: (integer_empty boolean_shove integer_sub integer_gt exec_dup_times () in4 print_integer in3 boolean_pop in3 boolean_invert_second_then_and integer_empty exec_shove ())
Errors: [0 0 0 0 1 0 1 0 1 1]
Total: 4
Mean: 0.4
Genome size: 13
Size: 16
Percent parens: 0.188
--- Population Statistics ---
Average total errors in population: 6.536
Median total errors in population: 6
Error averages by case: (0.681 0.68 0.68 0.68 0.644 0.202 0.65 0.679 0.995 0.645)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.467
Average program size in population (points): 11.495
Average percent parens in population: 0.268
Minimum age in population: 11.0
Maximum age in population: 11.0
Average age in population: 11.0
Median age in population: 11.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 79
Genome diversity (% unique genomes):	 0.724
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.722
Total error diversity:				 0.007
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 5585840
--- Timings ---
Current time: 1559594040807 milliseconds
Total Time:          26.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        14.4 seconds, 54.6%
Fitness Testing:      7.5 seconds, 28.4%
Report:               4.4 seconds, 16.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Smallest problem report - generation 12
Test total error for best: 407
Test mean error for best: 0.40700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -47                
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 64                 
Correct output: 3                   | Program output: 52                 
Correct output: 46                  | Program output: 91                 
Correct output: 12                  | Program output: 12                 
Correct output: 3                   | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 71                 
Correct output: 11                  | Program output: 43                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 63                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 51                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 78                 
Correct output: 20                  | Program output: 38                 
Correct output: 14                  | Program output: 48                 
Correct output: 24                  | Program output: 24                 
Correct output: -85                 | Program output: 21                 
Correct output: -92                 | Program output: -92                
Correct output: -88                 | Program output: -41                
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: 70                 
Correct output: -18                 | Program output: 1                  
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: -23                
Correct output: -93                 | Program output: -77                
Correct output: -92                 | Program output: 28                 
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -51                
Correct output: -34                 | Program output: 72                 
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: -12                
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -38                 | Program output: 22                 
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -77                
Correct output: -57                 | Program output: -34                
Correct output: -37                 | Program output: 41                 
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -21                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: -15                
Correct output: -45                 | Program output: -45                
Correct output: -95                 | Program output: -79                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -38                
Correct output: -88                 | Program output: -62                
Correct output: -64                 | Program output: -64                
Correct output: -53                 | Program output: 35                 
Correct output: -15                 | Program output: 15                 
Correct output: -71                 | Program output: -71                
Correct output: -77                 | Program output: -74                
Correct output: -78                 | Program output: -43                
Correct output: -79                 | Program output: -64                
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: -55                
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: 35                 
Correct output: -86                 | Program output: 23                 
Correct output: -54                 | Program output: 14                 
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: -52                
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: -16                
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 44                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: -97                
Correct output: -66                 | Program output: 85                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Lexicase best program: (boolean_eq integer_empty integer_shove exec_when (in3) in1 exec_y_when_autoconstructing (integer_min print_integer))
Lexicase best errors: [0 0 1 1 0 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 12
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Zero cases best program: (boolean_eq integer_empty integer_shove exec_when (in3) in1 exec_y_when_autoconstructing (integer_min print_integer))
Zero cases best errors: [0 0 1 1 0 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 12
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (20 240 431 99 242 241 793 21 21 20)
Population mean number of elite cases: 2.13
Count of perfect (error zero) individuals by case: (20 240 431 99 242 241 793 21 21 20)
Population mean number of perfect (error zero) cases: 2.13
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Best program: (boolean_eq integer_empty integer_shove exec_when (in3) in1 exec_y_when_autoconstructing (integer_min print_integer))
Errors: [0 0 1 1 0 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 9
Size: 12
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 7.872
Median total errors in population: 8
Error averages by case: (0.98 0.76 0.569 0.901 0.758 0.759 0.207 0.979 0.979 0.98)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.447
Average program size in population (points): 13.891
Average percent parens in population: 0.251
Minimum age in population: 12.0
Maximum age in population: 12.0
Average age in population: 12.0
Median age in population: 12.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 40
Genome diversity (% unique genomes):	 0.838
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 40
Syntactic diversity (% unique Push programs):	 0.833
Total error diversity:				 0.007
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 6038012
--- Timings ---
Current time: 1559594042533 milliseconds
Total Time:          28.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        15.6 seconds, 55.4%
Fitness Testing:      8.0 seconds, 28.3%
Report:               4.5 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Smallest problem report - generation 13
Test total error for best: 457
Test mean error for best: 0.45700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 93                 
Correct output: 3                   | Program output: 64                 
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 83                 
Correct output: 3                   | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 65                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 26                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 78                 
Correct output: 14                  | Program output: 23                 
Correct output: 24                  | Program output: 57                 
Correct output: -85                 | Program output: 31                 
Correct output: -92                 | Program output: -34                
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: 10                 
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -6                 
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -14                
Correct output: -57                 | Program output: -34                
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -21                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: 12                 
Correct output: -45                 | Program output: 42                 
Correct output: -95                 | Program output: -79                
Correct output: -53                 | Program output: -20                
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -15                
Correct output: -88                 | Program output: -62                
Correct output: -64                 | Program output: 51                 
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: 63                 
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: 32                 
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: 38                 
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: 30                 
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Lexicase best program: (in4 integer_empty exec_k_when_autoconstructing (integer_shove exec_when (in3) in1 exec_y_when_autoconstructing (integer_min print_integer)) ())
Lexicase best errors: [0 0 0 1 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Zero cases best program: (in4 integer_empty exec_k_when_autoconstructing (integer_shove exec_when (in3) in1 exec_y_when_autoconstructing (integer_min print_integer)) ())
Zero cases best errors: [0 0 0 1 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (723 834 115 81 115 834 755 574 572 114)
Population mean number of elite cases: 4.72
Count of perfect (error zero) individuals by case: (723 834 115 81 115 834 755 574 572 114)
Population mean number of perfect (error zero) cases: 4.72
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Best program: (boolean_eq in4 integer_empty integer_shove exec_when (in3) in1 exec_y_when_autoconstructing (integer_min print_integer))
Errors: [0 0 0 1 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 10
Size: 13
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 5.283
Median total errors in population: 4
Error averages by case: (0.277 0.166 0.885 0.919 0.885 0.166 0.245 0.426 0.428 0.886)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.955
Average program size in population (points): 13.208
Average percent parens in population: 0.246
Minimum age in population: 13.0
Maximum age in population: 13.0
Average age in population: 13.0
Median age in population: 13.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 164
Genome diversity (% unique genomes):	 0.675
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 164
Syntactic diversity (% unique Push programs):	 0.673
Total error diversity:				 0.008
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 6271137
--- Timings ---
Current time: 1559594044253 milliseconds
Total Time:          29.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.9 seconds, 56.7%
Fitness Testing:      8.2 seconds, 27.5%
Report:               4.6 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Smallest problem report - generation 14
Test total error for best: 180
Test mean error for best: 0.18000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -47                
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -39                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: 31                 
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: 47                 
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 50                 
Correct output: 12                  | Program output: 12                 
Correct output: 3                   | Program output: 3                  
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 54                 
Correct output: 11                  | Program output: 42                 
Correct output: 59                  | Program output: 59                 
Correct output: 63                  | Program output: 63                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 51                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 76                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 24                  | Program output: 24                 
Correct output: -85                 | Program output: -85                
Correct output: -92                 | Program output: -92                
Correct output: -88                 | Program output: -41                
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: -28                
Correct output: -18                 | Program output: 1                  
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: -23                
Correct output: -93                 | Program output: -77                
Correct output: -92                 | Program output: -49                
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -51                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: -12                
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -38                 | Program output: 22                 
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -77                
Correct output: -57                 | Program output: -57                
Correct output: -37                 | Program output: -20                
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -47                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: -15                
Correct output: -45                 | Program output: -45                
Correct output: -95                 | Program output: -95                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -38                
Correct output: -88                 | Program output: -88                
Correct output: -64                 | Program output: -64                
Correct output: -53                 | Program output: -12                
Correct output: -15                 | Program output: 15                 
Correct output: -71                 | Program output: -71                
Correct output: -77                 | Program output: -74                
Correct output: -78                 | Program output: -43                
Correct output: -79                 | Program output: -64                
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: -55                
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: 24                 
Correct output: -86                 | Program output: -86                
Correct output: -54                 | Program output: -50                
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: -80                
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 44                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: -97                
Correct output: -66                 | Program output: 16                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction in2} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Lexicase best program: (boolean_eq integer_empty integer_shove exec_when (in3) in1 integer_min exec_y_when_autoconstructing (in2) boolean_xor integer_min print_integer)
Lexicase best errors: [0 0 1 1 0 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 15
Percent parens: 0.200
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction in2} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Zero cases best program: (boolean_eq integer_empty integer_shove exec_when (in3) in1 integer_min exec_y_when_autoconstructing (in2) boolean_xor integer_min print_integer)
Zero cases best errors: [0 0 1 1 0 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 15
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (725 156 394 391 636 650 637 152 153 187)
Population mean number of elite cases: 4.08
Count of perfect (error zero) individuals by case: (725 156 394 391 636 650 637 152 153 187)
Population mean number of perfect (error zero) cases: 4.08
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction in2} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Best program: (boolean_eq integer_empty integer_shove exec_when (in3) in1 integer_min exec_y_when_autoconstructing (in2) boolean_xor integer_min print_integer)
Errors: [0 0 1 1 0 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 12
Size: 15
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 5.919
Median total errors in population: 5
Error averages by case: (0.275 0.844 0.606 0.609 0.364 0.35 0.363 0.848 0.847 0.813)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.91
Average program size in population (points): 13.521
Average percent parens in population: 0.263
Minimum age in population: 14.0
Maximum age in population: 14.0
Average age in population: 14.0
Median age in population: 14.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 47
Genome diversity (% unique genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.71
Total error diversity:				 0.009
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 6382428
--- Timings ---
Current time: 1559594045623 milliseconds
Total Time:          31.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        18.1 seconds, 57.9%
Fitness Testing:      8.4 seconds, 26.8%
Report:               4.7 seconds, 15.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Smallest problem report - generation 15
Test total error for best: 229
Test mean error for best: 0.22900
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 1
Test Case    4 | Error: 1
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 1
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 1
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 1
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 1
Test Case   36 | Error: 1
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 1
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 1
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 1
Test Case   60 | Error: 1
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 1
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 1
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 1
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 1
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 1
Test Case  227 | Error: 0
Test Case  228 | Error: 1
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 1
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 1
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 1
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 1
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 1
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 1
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 1
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 0
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 1
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 1
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 1
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 1
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 1
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 1
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 1
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 1
Test Case  414 | Error: 1
Test Case  415 | Error: 1
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 1
Test Case  442 | Error: 0
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 1
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 1
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 1
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 1
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 1
Test Case  626 | Error: 1
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 1
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 1
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 1
Test Case  666 | Error: 1
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 1
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 1
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 1
Test Case  694 | Error: 1
Test Case  695 | Error: 0
Test Case  696 | Error: 1
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 1
Test Case  710 | Error: 0
Test Case  711 | Error: 1
Test Case  712 | Error: 1
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 1
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 1
Test Case  789 | Error: 1
Test Case  790 | Error: 0
Test Case  791 | Error: 1
Test Case  792 | Error: 1
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 1
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 1
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 1
Test Case  864 | Error: 1
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 1
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 1
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 1
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 1
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 1
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 1
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 1
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 83                 
Correct output: 3                   | Program output: 3                  
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 59                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 26                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 24                  | Program output: 44                 
Correct output: -85                 | Program output: -85                
Correct output: -92                 | Program output: -34                
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: 7                  
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -64                
Correct output: -57                 | Program output: -57                
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -47                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: 6                  
Correct output: -45                 | Program output: 42                 
Correct output: -95                 | Program output: -95                
Correct output: -53                 | Program output: -20                
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -15                
Correct output: -88                 | Program output: -88                
Correct output: -64                 | Program output: 0                  
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: -86                
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: -80                
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: 4                  
Correct output: -66                 | Program output: -66                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Lexicase best program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 17
Percent parens: 0.235
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Zero cases best program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 17
Percent parens: 0.235
--- Lexicase Population Statistics ---
Count of elite individuals by case: (346 305 228 516 514 301 301 439 301 364)
Population mean number of elite cases: 3.62
Count of perfect (error zero) individuals by case: (346 305 228 516 514 301 301 439 301 364)
Population mean number of perfect (error zero) cases: 3.62
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_when} {:close 1, :instruction in3} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer})
Best program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 13
Size: 17
Percent parens: 0.235
--- Population Statistics ---
Average total errors in population: 6.385
Median total errors in population: 5
Error averages by case: (0.654 0.695 0.772 0.484 0.486 0.699 0.699 0.561 0.699 0.636)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.351
Average program size in population (points): 14.886
Average percent parens in population: 0.235
Minimum age in population: 15.0
Maximum age in population: 15.0
Average age in population: 15.0
Median age in population: 15.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 71
Genome diversity (% unique genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 71
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.01
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.13
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 6564922
--- Timings ---
Current time: 1559594047061 milliseconds
Total Time:          32.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.2 seconds, 58.7%
Fitness Testing:      8.6 seconds, 26.3%
Report:               4.8 seconds, 14.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 15
Successful program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 17


Auto-simplifying with starting size: 17
step: 0
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 500
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 1000
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 1500
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 2000
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 2500
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 3000
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 3500
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 4000
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 4500
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

step: 5000
program: (integer_shove exec_when (in3) in4 in1 integer_min exec_do*while (exec_y_when_autoconstructing (in2) boolean_or boolean_xor integer_min print_integer))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 17

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 15
Test total error for best: 229
Test mean error for best: 0.22900
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 1
Test Case    4 | Error: 1
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 1
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 1
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 1
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 1
Test Case   36 | Error: 1
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 1
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 1
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 1
Test Case   60 | Error: 1
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 1
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 1
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 1
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 1
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 1
Test Case  227 | Error: 0
Test Case  228 | Error: 1
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 1
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 1
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 1
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 1
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 1
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 1
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 1
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 0
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 1
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 1
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 1
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 1
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 1
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 1
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 1
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 1
Test Case  414 | Error: 1
Test Case  415 | Error: 1
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 1
Test Case  442 | Error: 0
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 1
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 1
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 1
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 1
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 1
Test Case  626 | Error: 1
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 1
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 1
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 1
Test Case  666 | Error: 1
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 1
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 1
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 1
Test Case  694 | Error: 1
Test Case  695 | Error: 0
Test Case  696 | Error: 1
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 1
Test Case  710 | Error: 0
Test Case  711 | Error: 1
Test Case  712 | Error: 1
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 1
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 1
Test Case  789 | Error: 1
Test Case  790 | Error: 0
Test Case  791 | Error: 1
Test Case  792 | Error: 1
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 1
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 1
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 1
Test Case  864 | Error: 1
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 1
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 1
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 1
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 1
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 1
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 1
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 1
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -47                 | Program output: -8                 
Correct output: 26                  | Program output: 26                 
Correct output: -64                 | Program output: -64                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: -30                 | Program output: -30                
Correct output: 31                  | Program output: 31                 
Correct output: -88                 | Program output: -88                
Correct output: -53                 | Program output: -53                
Correct output: -54                 | Program output: -54                
Correct output: -23                 | Program output: -23                
Correct output: 67                  | Program output: 67                 
Correct output: -6                  | Program output: -6                 
Correct output: -9                  | Program output: -9                 
Correct output: -17                 | Program output: -17                
Correct output: 5                   | Program output: 5                  
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 46                 
Correct output: 12                  | Program output: 83                 
Correct output: 3                   | Program output: 3                  
Correct output: 17                  | Program output: 17                 
Correct output: 18                  | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 59                  | Program output: 59                 
Correct output: 63                  | Program output: 68                 
Correct output: 9                   | Program output: 9                  
Correct output: 30                  | Program output: 30                 
Correct output: 3                   | Program output: 3                  
Correct output: 20                  | Program output: 26                 
Correct output: 16                  | Program output: 16                 
Correct output: 63                  | Program output: 63                 
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 24                  | Program output: 44                 
Correct output: -85                 | Program output: -85                
Correct output: -92                 | Program output: -34                
Correct output: -88                 | Program output: -88                
Correct output: -32                 | Program output: -32                
Correct output: -56                 | Program output: -56                
Correct output: -18                 | Program output: -18                
Correct output: -87                 | Program output: -87                
Correct output: -23                 | Program output: 7                  
Correct output: -93                 | Program output: -93                
Correct output: -92                 | Program output: -92                
Correct output: -86                 | Program output: -86                
Correct output: -80                 | Program output: -80                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -38                 | Program output: -38                
Correct output: 14                  | Program output: 14                 
Correct output: -83                 | Program output: -57                
Correct output: -38                 | Program output: -38                
Correct output: -57                 | Program output: -57                
Correct output: -77                 | Program output: -64                
Correct output: -57                 | Program output: -57                
Correct output: -37                 | Program output: -37                
Correct output: -93                 | Program output: -93                
Correct output: -47                 | Program output: -47                
Correct output: -84                 | Program output: -84                
Correct output: -15                 | Program output: 6                  
Correct output: -45                 | Program output: 42                 
Correct output: -95                 | Program output: -95                
Correct output: -53                 | Program output: -20                
Correct output: -31                 | Program output: -5                 
Correct output: -1                  | Program output: -1                 
Correct output: -50                 | Program output: -50                
Correct output: -38                 | Program output: -15                
Correct output: -88                 | Program output: -88                
Correct output: -64                 | Program output: 0                  
Correct output: -53                 | Program output: -53                
Correct output: -15                 | Program output: -15                
Correct output: -71                 | Program output: -15                
Correct output: -77                 | Program output: -77                
Correct output: -78                 | Program output: -78                
Correct output: -79                 | Program output: -79                
Correct output: -59                 | Program output: -59                
Correct output: -55                 | Program output: 22                 
Correct output: -72                 | Program output: -72                
Correct output: -73                 | Program output: -73                
Correct output: -26                 | Program output: -26                
Correct output: -86                 | Program output: -86                
Correct output: -54                 | Program output: -54                
Correct output: -52                 | Program output: -52                
Correct output: -80                 | Program output: -80                
Correct output: -93                 | Program output: -93                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: 44                  | Program output: 51                 
Correct output: -82                 | Program output: -82                
Correct output: -51                 | Program output: -51                
Correct output: -51                 | Program output: -51                
Correct output: -97                 | Program output: 4                  
Correct output: -66                 | Program output: -66                
;;******************************
