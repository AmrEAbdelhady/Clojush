Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-30 -30 12 -30] -30] [[93 93 65 93] 65] [[-58 55 55 55] -58] [[96 95 96 96] 95] [[-92 62 62 62] -92] [[83 83 -55 83] -55] [[-28 -28 -28 -96] -96] [[81 81 81 -27] -27] [[-6 -93 -93 -93] -93] [[93 -31 -31 -31] -31] [(-37 -37 -37 -37) -37] [(-44 -44 -44 -44) -44] [(4 4 4 4) 4] [(-64 -64 -64 -64) -64] [(36 36 36 36) 36] [(55 96 60 58) 55] [(30 11 2 4) 2] [(33 28 37 12) 12] [(62 67 17 41) 17] [(43 3 10 8) 3] [(75 73 0 42) 0] [(55 17 84 91) 17] [(23 58 60 98) 23] [(3 90 67 15) 3] [(77 46 66 21) 21] [(76 70 47 71) 47] [(73 95 87 58) 58] [(95 48 44 99) 44] [(47 38 77 48) 38] [(31 2 59 55) 2] [(97 30 23 31) 23] [(33 28 89 21) 21] [(15 34 18 40) 15] [(23 24 73 8) 8] [(54 71 81 1) 1] [(3 -86 64 92) -86] [(75 99 91 -77) -77] [(3 40 -69 62) -69] [(56 -45 75 0) -45] [(50 20 87 -34) -34] [(-31 -13 -43 -16) -43] [(-34 80 3 11) -34] [(47 -35 -51 28) -51] [(60 -66 62 -49) -66] [(7 -86 -90 100) -90] [(-35 -98 -38 70) -98] [(17 -20 -53 -28) -53] [(-31 12 -13 41) -31] [(-2 31 93 33) -2] [(-4 34 -68 43) -68] [(7 -78 -85 -8) -85] [(-63 -97 -64 -4) -97] [(15 100 58 11) 11] [(-11 -93 -24 -46) -93] [(57 -17 -21 -58) -58] [(-65 -78 -46 86) -78] [(24 -98 97 39) -98] [(-2 -77 -11 51) -77] [(-58 -27 58 -13) -58] [(96 -17 -79 44) -79] [(15 31 -39 43) -39] [(-91 -12 -50 43) -91] [(-96 -58 4 58) -96] [(85 69 78 -85) -85] [(-54 -12 -38 1) -54] [(-71 -65 33 -22) -71] [(40 -59 -74 5) -74] [(42 4 87 -64) -64] [(-70 4 15 -35) -70] [(6 -20 16 66) -20] [(78 -11 -100 -13) -100] [(30 -36 -53 -10) -53] [(-42 -38 -17 -37) -42] [(43 50 1 46) 1] [(-49 -97 42 -41) -97] [(20 -56 -27 22) -56] [(15 86 24 30) 15] [(24 44 -33 88) -33] [(79 -71 91 -74) -74] [(80 -66 -99 60) -99] [(94 33 -2 -52) -52] [(21 43 -73 -21) -73] [(9 -94 -16 12) -94] [(-96 -24 -7 21) -96] [(-98 -21 34 -44) -98] [(-47 -35 -89 -14) -89] [(-66 21 2 36) -66] [(-3 66 -97 -39) -97] [(-59 -76 78 -98) -98] [(-77 -53 55 42) -77] [(11 68 97 47) 11] [(-1 -22 9 66) -22] [(20 -84 100 39) -84] [(79 66 35 97) 35] [(-5 -5 -55 64) -55])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-30 -30 12 -30] -30]
Train Case:   6 | Input/Output: [[93 93 65 93] 65]
Train Case:   7 | Input/Output: [[-58 55 55 55] -58]
Train Case:   8 | Input/Output: [[96 95 96 96] 95]
Train Case:   9 | Input/Output: [[-92 62 62 62] -92]
Train Case:  10 | Input/Output: [[83 83 -55 83] -55]
Train Case:  11 | Input/Output: [[-28 -28 -28 -96] -96]
Train Case:  12 | Input/Output: [[81 81 81 -27] -27]
Train Case:  13 | Input/Output: [[-6 -93 -93 -93] -93]
Train Case:  14 | Input/Output: [[93 -31 -31 -31] -31]
Train Case:  15 | Input/Output: [(-37 -37 -37 -37) -37]
Train Case:  16 | Input/Output: [(-44 -44 -44 -44) -44]
Train Case:  17 | Input/Output: [(4 4 4 4) 4]
Train Case:  18 | Input/Output: [(-64 -64 -64 -64) -64]
Train Case:  19 | Input/Output: [(36 36 36 36) 36]
Train Case:  20 | Input/Output: [(55 96 60 58) 55]
Train Case:  21 | Input/Output: [(30 11 2 4) 2]
Train Case:  22 | Input/Output: [(33 28 37 12) 12]
Train Case:  23 | Input/Output: [(62 67 17 41) 17]
Train Case:  24 | Input/Output: [(43 3 10 8) 3]
Train Case:  25 | Input/Output: [(75 73 0 42) 0]
Train Case:  26 | Input/Output: [(55 17 84 91) 17]
Train Case:  27 | Input/Output: [(23 58 60 98) 23]
Train Case:  28 | Input/Output: [(3 90 67 15) 3]
Train Case:  29 | Input/Output: [(77 46 66 21) 21]
Train Case:  30 | Input/Output: [(76 70 47 71) 47]
Train Case:  31 | Input/Output: [(73 95 87 58) 58]
Train Case:  32 | Input/Output: [(95 48 44 99) 44]
Train Case:  33 | Input/Output: [(47 38 77 48) 38]
Train Case:  34 | Input/Output: [(31 2 59 55) 2]
Train Case:  35 | Input/Output: [(97 30 23 31) 23]
Train Case:  36 | Input/Output: [(33 28 89 21) 21]
Train Case:  37 | Input/Output: [(15 34 18 40) 15]
Train Case:  38 | Input/Output: [(23 24 73 8) 8]
Train Case:  39 | Input/Output: [(54 71 81 1) 1]
Train Case:  40 | Input/Output: [(3 -86 64 92) -86]
Train Case:  41 | Input/Output: [(75 99 91 -77) -77]
Train Case:  42 | Input/Output: [(3 40 -69 62) -69]
Train Case:  43 | Input/Output: [(56 -45 75 0) -45]
Train Case:  44 | Input/Output: [(50 20 87 -34) -34]
Train Case:  45 | Input/Output: [(-31 -13 -43 -16) -43]
Train Case:  46 | Input/Output: [(-34 80 3 11) -34]
Train Case:  47 | Input/Output: [(47 -35 -51 28) -51]
Train Case:  48 | Input/Output: [(60 -66 62 -49) -66]
Train Case:  49 | Input/Output: [(7 -86 -90 100) -90]
Train Case:  50 | Input/Output: [(-35 -98 -38 70) -98]
Train Case:  51 | Input/Output: [(17 -20 -53 -28) -53]
Train Case:  52 | Input/Output: [(-31 12 -13 41) -31]
Train Case:  53 | Input/Output: [(-2 31 93 33) -2]
Train Case:  54 | Input/Output: [(-4 34 -68 43) -68]
Train Case:  55 | Input/Output: [(7 -78 -85 -8) -85]
Train Case:  56 | Input/Output: [(-63 -97 -64 -4) -97]
Train Case:  57 | Input/Output: [(15 100 58 11) 11]
Train Case:  58 | Input/Output: [(-11 -93 -24 -46) -93]
Train Case:  59 | Input/Output: [(57 -17 -21 -58) -58]
Train Case:  60 | Input/Output: [(-65 -78 -46 86) -78]
Train Case:  61 | Input/Output: [(24 -98 97 39) -98]
Train Case:  62 | Input/Output: [(-2 -77 -11 51) -77]
Train Case:  63 | Input/Output: [(-58 -27 58 -13) -58]
Train Case:  64 | Input/Output: [(96 -17 -79 44) -79]
Train Case:  65 | Input/Output: [(15 31 -39 43) -39]
Train Case:  66 | Input/Output: [(-91 -12 -50 43) -91]
Train Case:  67 | Input/Output: [(-96 -58 4 58) -96]
Train Case:  68 | Input/Output: [(85 69 78 -85) -85]
Train Case:  69 | Input/Output: [(-54 -12 -38 1) -54]
Train Case:  70 | Input/Output: [(-71 -65 33 -22) -71]
Train Case:  71 | Input/Output: [(40 -59 -74 5) -74]
Train Case:  72 | Input/Output: [(42 4 87 -64) -64]
Train Case:  73 | Input/Output: [(-70 4 15 -35) -70]
Train Case:  74 | Input/Output: [(6 -20 16 66) -20]
Train Case:  75 | Input/Output: [(78 -11 -100 -13) -100]
Train Case:  76 | Input/Output: [(30 -36 -53 -10) -53]
Train Case:  77 | Input/Output: [(-42 -38 -17 -37) -42]
Train Case:  78 | Input/Output: [(43 50 1 46) 1]
Train Case:  79 | Input/Output: [(-49 -97 42 -41) -97]
Train Case:  80 | Input/Output: [(20 -56 -27 22) -56]
Train Case:  81 | Input/Output: [(15 86 24 30) 15]
Train Case:  82 | Input/Output: [(24 44 -33 88) -33]
Train Case:  83 | Input/Output: [(79 -71 91 -74) -74]
Train Case:  84 | Input/Output: [(80 -66 -99 60) -99]
Train Case:  85 | Input/Output: [(94 33 -2 -52) -52]
Train Case:  86 | Input/Output: [(21 43 -73 -21) -73]
Train Case:  87 | Input/Output: [(9 -94 -16 12) -94]
Train Case:  88 | Input/Output: [(-96 -24 -7 21) -96]
Train Case:  89 | Input/Output: [(-98 -21 34 -44) -98]
Train Case:  90 | Input/Output: [(-47 -35 -89 -14) -89]
Train Case:  91 | Input/Output: [(-66 21 2 36) -66]
Train Case:  92 | Input/Output: [(-3 66 -97 -39) -97]
Train Case:  93 | Input/Output: [(-59 -76 78 -98) -98]
Train Case:  94 | Input/Output: [(-77 -53 55 42) -77]
Train Case:  95 | Input/Output: [(11 68 97 47) 11]
Train Case:  96 | Input/Output: [(-1 -22 9 66) -22]
Train Case:  97 | Input/Output: [(20 -84 100 39) -84]
Train Case:  98 | Input/Output: [(79 66 35 97) 35]
Train Case:  99 | Input/Output: [(-5 -5 -55 64) -55]
Test Case:   0 | Input/Output: [[93 93 93 -51] -51]
Test Case:   1 | Input/Output: [[-95 -95 -95 14] -95]
Test Case:   2 | Input/Output: [[-79 -79 -79 -44] -79]
Test Case:   3 | Input/Output: [[50 50 -67 50] -67]
Test Case:   4 | Input/Output: [[93 96 93 93] 93]
Test Case:   5 | Input/Output: [[-55 -55 -74 -55] -74]
Test Case:   6 | Input/Output: [[42 42 30 42] 30]
Test Case:   7 | Input/Output: [[2 2 44 2] 2]
Test Case:   8 | Input/Output: [[58 34 34 34] 34]
Test Case:   9 | Input/Output: [[33 14 14 14] 14]
Test Case:  10 | Input/Output: [[19 -2 -2 -2] -2]
Test Case:  11 | Input/Output: [[-13 -13 -13 55] -13]
Test Case:  12 | Input/Output: [[-7 -7 -7 -21] -21]
Test Case:  13 | Input/Output: [[-78 -1 -1 -1] -78]
Test Case:  14 | Input/Output: [[9 46 9 9] 9]
Test Case:  15 | Input/Output: [[42 42 42 -26] -26]
Test Case:  16 | Input/Output: [[-75 -75 -74 -75] -75]
Test Case:  17 | Input/Output: [[-88 77 -88 -88] -88]
Test Case:  18 | Input/Output: [[2 44 44 44] 2]
Test Case:  19 | Input/Output: [[80 80 80 -93] -93]
Test Case:  20 | Input/Output: [[24 -31 -31 -31] -31]
Test Case:  21 | Input/Output: [[33 33 33 -61] -61]
Test Case:  22 | Input/Output: [[34 34 34 85] 34]
Test Case:  23 | Input/Output: [[-44 -44 -44 -8] -44]
Test Case:  24 | Input/Output: [[17 -42 17 17] -42]
Test Case:  25 | Input/Output: [[94 -13 -13 -13] -13]
Test Case:  26 | Input/Output: [[62 62 62 -40] -40]
Test Case:  27 | Input/Output: [[93 -66 93 93] -66]
Test Case:  28 | Input/Output: [[-54 51 -54 -54] -54]
Test Case:  29 | Input/Output: [[83 -74 -74 -74] -74]
Test Case:  30 | Input/Output: [[41 41 41 -23] -23]
Test Case:  31 | Input/Output: [[-38 -38 -38 48] -38]
Test Case:  32 | Input/Output: [[44 44 44 -20] -20]
Test Case:  33 | Input/Output: [[-61 -1 -61 -61] -61]
Test Case:  34 | Input/Output: [[-68 -35 -68 -68] -68]
Test Case:  35 | Input/Output: [[-63 -63 -63 -90] -90]
Test Case:  36 | Input/Output: [[-8 -93 -93 -93] -93]
Test Case:  37 | Input/Output: [[-73 28 -73 -73] -73]
Test Case:  38 | Input/Output: [[-56 71 71 71] -56]
Test Case:  39 | Input/Output: [[54 99 99 99] 54]
Test Case:  40 | Input/Output: [[-53 -53 76 -53] -53]
Test Case:  41 | Input/Output: [[81 81 24 81] 24]
Test Case:  42 | Input/Output: [[18 18 -11 18] -11]
Test Case:  43 | Input/Output: [[34 34 34 -25] -25]
Test Case:  44 | Input/Output: [[-52 -52 -52 -52] -52]
Test Case:  45 | Input/Output: [[-99 -33 -99 -99] -99]
Test Case:  46 | Input/Output: [[97 97 97 48] 48]
Test Case:  47 | Input/Output: [[74 74 -11 74] -11]
Test Case:  48 | Input/Output: [[73 -8 73 73] -8]
Test Case:  49 | Input/Output: [[92 48 48 48] 48]
Test Case:  50 | Input/Output: [[-12 -60 -12 -12] -60]
Test Case:  51 | Input/Output: [[-53 -49 -49 -49] -53]
Test Case:  52 | Input/Output: [[-80 -80 -80 -27] -80]
Test Case:  53 | Input/Output: [[-79 -40 -79 -79] -79]
Test Case:  54 | Input/Output: [[-99 -99 -99 -18] -99]
Test Case:  55 | Input/Output: [[-23 -23 -2 -23] -23]
Test Case:  56 | Input/Output: [[97 -70 97 97] -70]
Test Case:  57 | Input/Output: [[-80 -80 -80 -39] -80]
Test Case:  58 | Input/Output: [[46 46 46 32] 32]
Test Case:  59 | Input/Output: [[-58 -58 -77 -58] -77]
Test Case:  60 | Input/Output: [[-89 46 -89 -89] -89]
Test Case:  61 | Input/Output: [[27 90 27 27] 27]
Test Case:  62 | Input/Output: [[-50 -50 -50 -20] -50]
Test Case:  63 | Input/Output: [[76 76 76 -37] -37]
Test Case:  64 | Input/Output: [[-36 -36 -75 -36] -75]
Test Case:  65 | Input/Output: [[52 -40 -40 -40] -40]
Test Case:  66 | Input/Output: [[47 47 -78 47] -78]
Test Case:  67 | Input/Output: [[24 24 24 17] 17]
Test Case:  68 | Input/Output: [[-76 -64 -64 -64] -76]
Test Case:  69 | Input/Output: [[-67 27 27 27] -67]
Test Case:  70 | Input/Output: [[-74 -83 -83 -83] -83]
Test Case:  71 | Input/Output: [[10 11 10 10] 10]
Test Case:  72 | Input/Output: [[-48 -48 -48 -14] -48]
Test Case:  73 | Input/Output: [[21 -2 21 21] -2]
Test Case:  74 | Input/Output: [[16 16 -9 16] -9]
Test Case:  75 | Input/Output: [[-70 -70 59 -70] -70]
Test Case:  76 | Input/Output: [[-7 -7 27 -7] -7]
Test Case:  77 | Input/Output: [[-25 -25 -25 -74] -74]
Test Case:  78 | Input/Output: [[57 57 -42 57] -42]
Test Case:  79 | Input/Output: [[-85 -17 -17 -17] -85]
Test Case:  80 | Input/Output: [[100 -44 100 100] -44]
Test Case:  81 | Input/Output: [[-46 85 -46 -46] -46]
Test Case:  82 | Input/Output: [[-3 -3 -3 21] -3]
Test Case:  83 | Input/Output: [[-5 -5 87 -5] -5]
Test Case:  84 | Input/Output: [[98 98 98 96] 96]
Test Case:  85 | Input/Output: [[21 21 21 -2] -2]
Test Case:  86 | Input/Output: [[-52 81 -52 -52] -52]
Test Case:  87 | Input/Output: [[-67 59 -67 -67] -67]
Test Case:  88 | Input/Output: [[50 -65 50 50] -65]
Test Case:  89 | Input/Output: [[-7 41 41 41] -7]
Test Case:  90 | Input/Output: [[67 67 54 67] 54]
Test Case:  91 | Input/Output: [[-37 -31 -31 -31] -37]
Test Case:  92 | Input/Output: [[-4 -4 -53 -4] -53]
Test Case:  93 | Input/Output: [[-38 -72 -72 -72] -72]
Test Case:  94 | Input/Output: [[-96 -86 -86 -86] -96]
Test Case:  95 | Input/Output: [[56 42 42 42] 42]
Test Case:  96 | Input/Output: [[-26 -27 -27 -27] -27]
Test Case:  97 | Input/Output: [[-5 -5 -88 -5] -88]
Test Case:  98 | Input/Output: [[40 0 40 40] 0]
Test Case:  99 | Input/Output: [[-62 -62 42 -62] -62]
Test Case: 100 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 101 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 102 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 103 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 104 | Input/Output: [(63 63 63 63) 63]
Test Case: 105 | Input/Output: [(69 69 69 69) 69]
Test Case: 106 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 107 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 108 | Input/Output: [(13 13 13 13) 13]
Test Case: 109 | Input/Output: [(92 92 92 92) 92]
Test Case: 110 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 111 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 112 | Input/Output: [(-57 -57 -57 -57) -57]
Test Case: 113 | Input/Output: [(58 58 58 58) 58]
Test Case: 114 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 115 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 116 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 117 | Input/Output: [(-57 -57 -57 -57) -57]
Test Case: 118 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 119 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 120 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 121 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 122 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 123 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 124 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 125 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 126 | Input/Output: [(-54 -54 -54 -54) -54]
Test Case: 127 | Input/Output: [(59 59 59 59) 59]
Test Case: 128 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 129 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 130 | Input/Output: [(56 56 56 56) 56]
Test Case: 131 | Input/Output: [(75 75 75 75) 75]
Test Case: 132 | Input/Output: [(74 74 74 74) 74]
Test Case: 133 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 134 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 135 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 136 | Input/Output: [(17 17 17 17) 17]
Test Case: 137 | Input/Output: [(75 75 75 75) 75]
Test Case: 138 | Input/Output: [(13 13 13 13) 13]
Test Case: 139 | Input/Output: [(97 97 97 97) 97]
Test Case: 140 | Input/Output: [(23 23 23 23) 23]
Test Case: 141 | Input/Output: [(97 97 97 97) 97]
Test Case: 142 | Input/Output: [(25 25 25 25) 25]
Test Case: 143 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 144 | Input/Output: [(53 53 53 53) 53]
Test Case: 145 | Input/Output: [(82 82 82 82) 82]
Test Case: 146 | Input/Output: [(69 69 69 69) 69]
Test Case: 147 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 148 | Input/Output: [(37 37 37 37) 37]
Test Case: 149 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 150 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 151 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 152 | Input/Output: [(50 50 50 50) 50]
Test Case: 153 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 154 | Input/Output: [(53 53 53 53) 53]
Test Case: 155 | Input/Output: [(28 28 28 28) 28]
Test Case: 156 | Input/Output: [(87 87 87 87) 87]
Test Case: 157 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 158 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 159 | Input/Output: [(11 11 11 11) 11]
Test Case: 160 | Input/Output: [(71 71 71 71) 71]
Test Case: 161 | Input/Output: [(3 3 3 3) 3]
Test Case: 162 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 163 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 164 | Input/Output: [(29 29 29 29) 29]
Test Case: 165 | Input/Output: [(5 5 5 5) 5]
Test Case: 166 | Input/Output: [(41 41 41 41) 41]
Test Case: 167 | Input/Output: [(47 47 47 47) 47]
Test Case: 168 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 169 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 170 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 171 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 172 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 173 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 174 | Input/Output: [(15 15 15 15) 15]
Test Case: 175 | Input/Output: [(55 55 55 55) 55]
Test Case: 176 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 177 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 178 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 179 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 180 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 181 | Input/Output: [(85 85 85 85) 85]
Test Case: 182 | Input/Output: [(13 13 13 13) 13]
Test Case: 183 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 184 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 185 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 186 | Input/Output: [(42 42 42 42) 42]
Test Case: 187 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 188 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 189 | Input/Output: [(14 14 14 14) 14]
Test Case: 190 | Input/Output: [(75 75 75 75) 75]
Test Case: 191 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 192 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 193 | Input/Output: [(28 28 28 28) 28]
Test Case: 194 | Input/Output: [(14 14 14 14) 14]
Test Case: 195 | Input/Output: [(86 86 86 86) 86]
Test Case: 196 | Input/Output: [(14 14 14 14) 14]
Test Case: 197 | Input/Output: [(59 59 59 59) 59]
Test Case: 198 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 199 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 200 | Input/Output: [(18 30 90 65) 18]
Test Case: 201 | Input/Output: [(7 100 13 49) 7]
Test Case: 202 | Input/Output: [(48 25 72 46) 25]
Test Case: 203 | Input/Output: [(57 58 51 28) 28]
Test Case: 204 | Input/Output: [(36 3 36 38) 3]
Test Case: 205 | Input/Output: [(89 56 26 21) 21]
Test Case: 206 | Input/Output: [(71 66 31 51) 31]
Test Case: 207 | Input/Output: [(62 90 10 99) 10]
Test Case: 208 | Input/Output: [(24 0 71 95) 0]
Test Case: 209 | Input/Output: [(53 49 92 13) 13]
Test Case: 210 | Input/Output: [(41 43 41 57) 41]
Test Case: 211 | Input/Output: [(58 24 45 96) 24]
Test Case: 212 | Input/Output: [(35 72 28 81) 28]
Test Case: 213 | Input/Output: [(26 53 8 80) 8]
Test Case: 214 | Input/Output: [(21 76 40 62) 21]
Test Case: 215 | Input/Output: [(92 61 30 71) 30]
Test Case: 216 | Input/Output: [(32 52 87 58) 32]
Test Case: 217 | Input/Output: [(95 53 1 54) 1]
Test Case: 218 | Input/Output: [(31 68 19 63) 19]
Test Case: 219 | Input/Output: [(92 24 37 52) 24]
Test Case: 220 | Input/Output: [(88 63 55 33) 33]
Test Case: 221 | Input/Output: [(43 11 58 10) 10]
Test Case: 222 | Input/Output: [(53 85 27 64) 27]
Test Case: 223 | Input/Output: [(87 43 55 32) 32]
Test Case: 224 | Input/Output: [(82 83 86 60) 60]
Test Case: 225 | Input/Output: [(29 49 88 13) 13]
Test Case: 226 | Input/Output: [(99 56 54 11) 11]
Test Case: 227 | Input/Output: [(67 81 75 80) 67]
Test Case: 228 | Input/Output: [(90 0 99 42) 0]
Test Case: 229 | Input/Output: [(87 93 59 39) 39]
Test Case: 230 | Input/Output: [(36 4 27 35) 4]
Test Case: 231 | Input/Output: [(72 89 56 75) 56]
Test Case: 232 | Input/Output: [(59 60 10 38) 10]
Test Case: 233 | Input/Output: [(40 19 28 89) 19]
Test Case: 234 | Input/Output: [(49 14 24 5) 5]
Test Case: 235 | Input/Output: [(26 19 2 33) 2]
Test Case: 236 | Input/Output: [(50 73 33 20) 20]
Test Case: 237 | Input/Output: [(22 23 18 24) 18]
Test Case: 238 | Input/Output: [(98 90 51 48) 48]
Test Case: 239 | Input/Output: [(18 55 12 17) 12]
Test Case: 240 | Input/Output: [(38 54 21 0) 0]
Test Case: 241 | Input/Output: [(8 30 3 95) 3]
Test Case: 242 | Input/Output: [(76 52 42 28) 28]
Test Case: 243 | Input/Output: [(47 78 19 44) 19]
Test Case: 244 | Input/Output: [(26 11 29 40) 11]
Test Case: 245 | Input/Output: [(59 45 33 25) 25]
Test Case: 246 | Input/Output: [(80 2 0 52) 0]
Test Case: 247 | Input/Output: [(17 42 61 36) 17]
Test Case: 248 | Input/Output: [(80 56 14 31) 14]
Test Case: 249 | Input/Output: [(100 22 84 92) 22]
Test Case: 250 | Input/Output: [(19 89 80 99) 19]
Test Case: 251 | Input/Output: [(76 86 21 7) 7]
Test Case: 252 | Input/Output: [(36 62 7 9) 7]
Test Case: 253 | Input/Output: [(69 76 2 10) 2]
Test Case: 254 | Input/Output: [(17 92 19 79) 17]
Test Case: 255 | Input/Output: [(41 27 61 90) 27]
Test Case: 256 | Input/Output: [(86 92 94 39) 39]
Test Case: 257 | Input/Output: [(69 45 20 20) 20]
Test Case: 258 | Input/Output: [(32 97 47 39) 32]
Test Case: 259 | Input/Output: [(7 82 66 100) 7]
Test Case: 260 | Input/Output: [(95 97 80 16) 16]
Test Case: 261 | Input/Output: [(51 70 13 26) 13]
Test Case: 262 | Input/Output: [(88 95 83 56) 56]
Test Case: 263 | Input/Output: [(6 56 74 8) 6]
Test Case: 264 | Input/Output: [(73 48 72 64) 48]
Test Case: 265 | Input/Output: [(54 13 2 29) 2]
Test Case: 266 | Input/Output: [(72 83 96 77) 72]
Test Case: 267 | Input/Output: [(3 80 67 61) 3]
Test Case: 268 | Input/Output: [(80 52 73 23) 23]
Test Case: 269 | Input/Output: [(8 56 33 59) 8]
Test Case: 270 | Input/Output: [(71 82 77 68) 68]
Test Case: 271 | Input/Output: [(81 33 9 63) 9]
Test Case: 272 | Input/Output: [(51 23 8 57) 8]
Test Case: 273 | Input/Output: [(46 9 69 88) 9]
Test Case: 274 | Input/Output: [(100 76 100 83) 76]
Test Case: 275 | Input/Output: [(67 54 21 93) 21]
Test Case: 276 | Input/Output: [(70 17 83 96) 17]
Test Case: 277 | Input/Output: [(25 15 37 1) 1]
Test Case: 278 | Input/Output: [(81 95 3 70) 3]
Test Case: 279 | Input/Output: [(20 7 29 97) 7]
Test Case: 280 | Input/Output: [(26 93 21 75) 21]
Test Case: 281 | Input/Output: [(9 73 52 36) 9]
Test Case: 282 | Input/Output: [(54 33 72 65) 33]
Test Case: 283 | Input/Output: [(53 22 30 87) 22]
Test Case: 284 | Input/Output: [(40 52 88 11) 11]
Test Case: 285 | Input/Output: [(57 32 46 72) 32]
Test Case: 286 | Input/Output: [(18 60 1 2) 1]
Test Case: 287 | Input/Output: [(14 15 59 9) 9]
Test Case: 288 | Input/Output: [(67 40 48 54) 40]
Test Case: 289 | Input/Output: [(13 80 48 27) 13]
Test Case: 290 | Input/Output: [(60 82 4 38) 4]
Test Case: 291 | Input/Output: [(4 0 47 58) 0]
Test Case: 292 | Input/Output: [(89 93 77 30) 30]
Test Case: 293 | Input/Output: [(15 18 39 64) 15]
Test Case: 294 | Input/Output: [(54 86 87 31) 31]
Test Case: 295 | Input/Output: [(94 22 42 76) 22]
Test Case: 296 | Input/Output: [(1 34 5 52) 1]
Test Case: 297 | Input/Output: [(26 67 66 22) 22]
Test Case: 298 | Input/Output: [(94 72 63 46) 46]
Test Case: 299 | Input/Output: [(100 82 15 69) 15]
Test Case: 300 | Input/Output: [(31 82 14 74) 14]
Test Case: 301 | Input/Output: [(90 95 82 48) 48]
Test Case: 302 | Input/Output: [(16 58 98 53) 16]
Test Case: 303 | Input/Output: [(23 89 37 100) 23]
Test Case: 304 | Input/Output: [(99 89 18 59) 18]
Test Case: 305 | Input/Output: [(56 58 66 5) 5]
Test Case: 306 | Input/Output: [(11 46 49 19) 11]
Test Case: 307 | Input/Output: [(22 10 7 29) 7]
Test Case: 308 | Input/Output: [(6 12 21 65) 6]
Test Case: 309 | Input/Output: [(34 21 98 42) 21]
Test Case: 310 | Input/Output: [(36 23 94 84) 23]
Test Case: 311 | Input/Output: [(54 1 84 41) 1]
Test Case: 312 | Input/Output: [(4 45 88 44) 4]
Test Case: 313 | Input/Output: [(39 30 60 12) 12]
Test Case: 314 | Input/Output: [(41 82 56 57) 41]
Test Case: 315 | Input/Output: [(77 9 19 43) 9]
Test Case: 316 | Input/Output: [(0 83 70 32) 0]
Test Case: 317 | Input/Output: [(6 93 31 46) 6]
Test Case: 318 | Input/Output: [(12 15 41 77) 12]
Test Case: 319 | Input/Output: [(2 23 18 81) 2]
Test Case: 320 | Input/Output: [(55 6 23 85) 6]
Test Case: 321 | Input/Output: [(23 78 64 46) 23]
Test Case: 322 | Input/Output: [(7 69 63 89) 7]
Test Case: 323 | Input/Output: [(68 24 76 74) 24]
Test Case: 324 | Input/Output: [(65 60 71 59) 59]
Test Case: 325 | Input/Output: [(53 13 73 11) 11]
Test Case: 326 | Input/Output: [(75 92 15 84) 15]
Test Case: 327 | Input/Output: [(60 33 72 65) 33]
Test Case: 328 | Input/Output: [(0 57 48 55) 0]
Test Case: 329 | Input/Output: [(1 79 67 57) 1]
Test Case: 330 | Input/Output: [(80 32 61 30) 30]
Test Case: 331 | Input/Output: [(11 95 25 55) 11]
Test Case: 332 | Input/Output: [(32 28 48 95) 28]
Test Case: 333 | Input/Output: [(96 6 5 63) 5]
Test Case: 334 | Input/Output: [(85 80 32 21) 21]
Test Case: 335 | Input/Output: [(73 36 85 52) 36]
Test Case: 336 | Input/Output: [(72 89 40 14) 14]
Test Case: 337 | Input/Output: [(33 76 20 24) 20]
Test Case: 338 | Input/Output: [(41 0 41 79) 0]
Test Case: 339 | Input/Output: [(90 27 58 95) 27]
Test Case: 340 | Input/Output: [(31 100 67 96) 31]
Test Case: 341 | Input/Output: [(55 33 1 3) 1]
Test Case: 342 | Input/Output: [(62 73 59 76) 59]
Test Case: 343 | Input/Output: [(63 65 9 29) 9]
Test Case: 344 | Input/Output: [(33 1 15 88) 1]
Test Case: 345 | Input/Output: [(1 82 89 80) 1]
Test Case: 346 | Input/Output: [(86 44 0 51) 0]
Test Case: 347 | Input/Output: [(34 86 86 38) 34]
Test Case: 348 | Input/Output: [(72 24 19 100) 19]
Test Case: 349 | Input/Output: [(99 25 86 25) 25]
Test Case: 350 | Input/Output: [(36 88 10 12) 10]
Test Case: 351 | Input/Output: [(49 53 100 95) 49]
Test Case: 352 | Input/Output: [(90 63 43 33) 33]
Test Case: 353 | Input/Output: [(4 18 31 97) 4]
Test Case: 354 | Input/Output: [(77 71 36 37) 36]
Test Case: 355 | Input/Output: [(67 44 6 91) 6]
Test Case: 356 | Input/Output: [(1 89 63 30) 1]
Test Case: 357 | Input/Output: [(38 26 41 40) 26]
Test Case: 358 | Input/Output: [(78 29 5 86) 5]
Test Case: 359 | Input/Output: [(76 44 43 57) 43]
Test Case: 360 | Input/Output: [(15 26 53 8) 8]
Test Case: 361 | Input/Output: [(65 91 70 19) 19]
Test Case: 362 | Input/Output: [(9 48 30 3) 3]
Test Case: 363 | Input/Output: [(22 5 42 20) 5]
Test Case: 364 | Input/Output: [(44 66 100 59) 44]
Test Case: 365 | Input/Output: [(100 49 0 81) 0]
Test Case: 366 | Input/Output: [(26 97 21 7) 7]
Test Case: 367 | Input/Output: [(78 4 44 3) 3]
Test Case: 368 | Input/Output: [(73 63 2 31) 2]
Test Case: 369 | Input/Output: [(10 65 4 2) 2]
Test Case: 370 | Input/Output: [(64 94 69 33) 33]
Test Case: 371 | Input/Output: [(78 9 28 63) 9]
Test Case: 372 | Input/Output: [(37 70 85 62) 37]
Test Case: 373 | Input/Output: [(32 43 29 67) 29]
Test Case: 374 | Input/Output: [(31 79 16 8) 8]
Test Case: 375 | Input/Output: [(14 50 83 10) 10]
Test Case: 376 | Input/Output: [(20 20 93 49) 20]
Test Case: 377 | Input/Output: [(35 44 97 45) 35]
Test Case: 378 | Input/Output: [(58 56 25 45) 25]
Test Case: 379 | Input/Output: [(71 46 58 54) 46]
Test Case: 380 | Input/Output: [(77 40 4 27) 4]
Test Case: 381 | Input/Output: [(80 52 49 96) 49]
Test Case: 382 | Input/Output: [(46 87 57 7) 7]
Test Case: 383 | Input/Output: [(76 44 84 72) 44]
Test Case: 384 | Input/Output: [(42 46 35 81) 35]
Test Case: 385 | Input/Output: [(0 17 16 80) 0]
Test Case: 386 | Input/Output: [(76 63 0 4) 0]
Test Case: 387 | Input/Output: [(46 64 1 47) 1]
Test Case: 388 | Input/Output: [(80 66 31 0) 0]
Test Case: 389 | Input/Output: [(3 78 84 5) 3]
Test Case: 390 | Input/Output: [(32 92 74 10) 10]
Test Case: 391 | Input/Output: [(51 63 61 3) 3]
Test Case: 392 | Input/Output: [(86 35 52 64) 35]
Test Case: 393 | Input/Output: [(84 19 35 96) 19]
Test Case: 394 | Input/Output: [(10 11 35 29) 10]
Test Case: 395 | Input/Output: [(54 76 70 78) 54]
Test Case: 396 | Input/Output: [(75 43 28 23) 23]
Test Case: 397 | Input/Output: [(2 64 77 78) 2]
Test Case: 398 | Input/Output: [(88 31 72 15) 15]
Test Case: 399 | Input/Output: [(24 33 20 36) 20]
Test Case: 400 | Input/Output: [(88 -74 75 51) -74]
Test Case: 401 | Input/Output: [(-59 -33 -92 98) -92]
Test Case: 402 | Input/Output: [(50 -20 9 97) -20]
Test Case: 403 | Input/Output: [(-17 -74 22 -88) -88]
Test Case: 404 | Input/Output: [(-39 -39 20 41) -39]
Test Case: 405 | Input/Output: [(33 48 36 -6) -6]
Test Case: 406 | Input/Output: [(-34 -17 -59 59) -59]
Test Case: 407 | Input/Output: [(-82 31 -31 85) -82]
Test Case: 408 | Input/Output: [(46 -41 -61 -45) -61]
Test Case: 409 | Input/Output: [(3 -66 -97 30) -97]
Test Case: 410 | Input/Output: [(-20 32 -75 -86) -86]
Test Case: 411 | Input/Output: [(-10 14 -87 -3) -87]
Test Case: 412 | Input/Output: [(2 -40 -28 -29) -40]
Test Case: 413 | Input/Output: [(53 -27 89 -55) -55]
Test Case: 414 | Input/Output: [(73 47 -60 -15) -60]
Test Case: 415 | Input/Output: [(-76 9 10 40) -76]
Test Case: 416 | Input/Output: [(-90 25 13 -6) -90]
Test Case: 417 | Input/Output: [(-55 86 -68 -23) -68]
Test Case: 418 | Input/Output: [(14 -28 93 -38) -38]
Test Case: 419 | Input/Output: [(43 -24 54 -84) -84]
Test Case: 420 | Input/Output: [(-35 100 -67 27) -67]
Test Case: 421 | Input/Output: [(-55 42 24 16) -55]
Test Case: 422 | Input/Output: [(-48 61 -84 -97) -97]
Test Case: 423 | Input/Output: [(78 -74 75 -66) -74]
Test Case: 424 | Input/Output: [(53 -63 -63 -98) -98]
Test Case: 425 | Input/Output: [(-28 -69 64 98) -69]
Test Case: 426 | Input/Output: [(-84 -67 94 -18) -84]
Test Case: 427 | Input/Output: [(40 -29 50 51) -29]
Test Case: 428 | Input/Output: [(-67 30 -15 -59) -67]
Test Case: 429 | Input/Output: [(22 80 -27 -52) -52]
Test Case: 430 | Input/Output: [(-29 71 -21 -31) -31]
Test Case: 431 | Input/Output: [(75 -9 -6 61) -9]
Test Case: 432 | Input/Output: [(-21 -70 -77 -54) -77]
Test Case: 433 | Input/Output: [(-8 32 -49 96) -49]
Test Case: 434 | Input/Output: [(-82 -82 58 -15) -82]
Test Case: 435 | Input/Output: [(-51 44 2 -42) -51]
Test Case: 436 | Input/Output: [(81 -77 -61 -83) -83]
Test Case: 437 | Input/Output: [(-88 42 -61 -74) -88]
Test Case: 438 | Input/Output: [(-9 10 78 -85) -85]
Test Case: 439 | Input/Output: [(96 -68 -35 -88) -88]
Test Case: 440 | Input/Output: [(-99 95 -25 70) -99]
Test Case: 441 | Input/Output: [(-92 98 31 -13) -92]
Test Case: 442 | Input/Output: [(55 85 60 18) 18]
Test Case: 443 | Input/Output: [(31 -27 -94 -49) -94]
Test Case: 444 | Input/Output: [(-24 50 -28 -82) -82]
Test Case: 445 | Input/Output: [(-15 -40 17 19) -40]
Test Case: 446 | Input/Output: [(-40 -94 52 -5) -94]
Test Case: 447 | Input/Output: [(-15 -93 -40 -15) -93]
Test Case: 448 | Input/Output: [(-34 -79 39 6) -79]
Test Case: 449 | Input/Output: [(-66 12 80 -33) -66]
Test Case: 450 | Input/Output: [(72 97 -70 -80) -80]
Test Case: 451 | Input/Output: [(-39 17 -71 -27) -71]
Test Case: 452 | Input/Output: [(-48 29 -67 -100) -100]
Test Case: 453 | Input/Output: [(4 -13 -32 -100) -100]
Test Case: 454 | Input/Output: [(58 23 -3 4) -3]
Test Case: 455 | Input/Output: [(-28 -39 39 68) -39]
Test Case: 456 | Input/Output: [(36 -85 -14 -80) -85]
Test Case: 457 | Input/Output: [(-47 -30 67 54) -47]
Test Case: 458 | Input/Output: [(44 0 -4 66) -4]
Test Case: 459 | Input/Output: [(64 6 26 14) 6]
Test Case: 460 | Input/Output: [(-8 5 -64 -82) -82]
Test Case: 461 | Input/Output: [(39 -62 -51 -30) -62]
Test Case: 462 | Input/Output: [(-35 -60 27 -43) -60]
Test Case: 463 | Input/Output: [(-100 -61 -86 -24) -100]
Test Case: 464 | Input/Output: [(58 -66 -81 -49) -81]
Test Case: 465 | Input/Output: [(70 78 -95 -16) -95]
Test Case: 466 | Input/Output: [(17 84 -89 -100) -100]
Test Case: 467 | Input/Output: [(-58 69 -67 -70) -70]
Test Case: 468 | Input/Output: [(-36 34 -42 -30) -42]
Test Case: 469 | Input/Output: [(-25 59 91 -6) -25]
Test Case: 470 | Input/Output: [(98 100 -35 -63) -63]
Test Case: 471 | Input/Output: [(-75 -46 -61 -58) -75]
Test Case: 472 | Input/Output: [(1 -7 19 19) -7]
Test Case: 473 | Input/Output: [(59 -78 20 61) -78]
Test Case: 474 | Input/Output: [(5 -84 -49 -89) -89]
Test Case: 475 | Input/Output: [(34 41 -8 -59) -59]
Test Case: 476 | Input/Output: [(-90 8 -60 -98) -98]
Test Case: 477 | Input/Output: [(14 1 99 89) 1]
Test Case: 478 | Input/Output: [(-85 -78 82 -13) -85]
Test Case: 479 | Input/Output: [(89 -93 -2 3) -93]
Test Case: 480 | Input/Output: [(47 -52 75 75) -52]
Test Case: 481 | Input/Output: [(-96 -76 -33 -87) -96]
Test Case: 482 | Input/Output: [(-62 95 28 -55) -62]
Test Case: 483 | Input/Output: [(-58 44 -41 97) -58]
Test Case: 484 | Input/Output: [(62 -50 -77 -75) -77]
Test Case: 485 | Input/Output: [(25 75 -87 -60) -87]
Test Case: 486 | Input/Output: [(74 -99 37 -17) -99]
Test Case: 487 | Input/Output: [(78 -20 -90 41) -90]
Test Case: 488 | Input/Output: [(11 80 94 -18) -18]
Test Case: 489 | Input/Output: [(45 -79 -46 92) -79]
Test Case: 490 | Input/Output: [(-80 46 4 -54) -80]
Test Case: 491 | Input/Output: [(21 72 -85 43) -85]
Test Case: 492 | Input/Output: [(-55 -9 -92 76) -92]
Test Case: 493 | Input/Output: [(-99 66 37 91) -99]
Test Case: 494 | Input/Output: [(-74 73 74 82) -74]
Test Case: 495 | Input/Output: [(36 -8 -59 94) -59]
Test Case: 496 | Input/Output: [(94 -24 81 61) -24]
Test Case: 497 | Input/Output: [(69 -98 -43 -86) -98]
Test Case: 498 | Input/Output: [(-37 -30 34 -24) -37]
Test Case: 499 | Input/Output: [(38 75 -65 76) -65]
Test Case: 500 | Input/Output: [(25 -57 -29 -42) -57]
Test Case: 501 | Input/Output: [(-47 -55 55 94) -55]
Test Case: 502 | Input/Output: [(3 56 -70 22) -70]
Test Case: 503 | Input/Output: [(-52 8 -73 13) -73]
Test Case: 504 | Input/Output: [(-67 37 23 35) -67]
Test Case: 505 | Input/Output: [(-37 -88 1 -66) -88]
Test Case: 506 | Input/Output: [(-66 86 -48 65) -66]
Test Case: 507 | Input/Output: [(21 10 -17 98) -17]
Test Case: 508 | Input/Output: [(29 -11 92 -84) -84]
Test Case: 509 | Input/Output: [(-85 -41 79 80) -85]
Test Case: 510 | Input/Output: [(59 -1 33 -41) -41]
Test Case: 511 | Input/Output: [(-91 -9 -89 7) -91]
Test Case: 512 | Input/Output: [(-53 87 -23 -48) -53]
Test Case: 513 | Input/Output: [(6 13 71 4) 4]
Test Case: 514 | Input/Output: [(-97 -77 -34 16) -97]
Test Case: 515 | Input/Output: [(-96 84 -14 -56) -96]
Test Case: 516 | Input/Output: [(-25 -20 -71 -47) -71]
Test Case: 517 | Input/Output: [(86 -41 25 77) -41]
Test Case: 518 | Input/Output: [(93 -24 95 38) -24]
Test Case: 519 | Input/Output: [(-52 64 34 -27) -52]
Test Case: 520 | Input/Output: [(84 71 67 47) 47]
Test Case: 521 | Input/Output: [(-55 -39 59 -22) -55]
Test Case: 522 | Input/Output: [(-79 -32 22 -48) -79]
Test Case: 523 | Input/Output: [(-85 23 -70 -94) -94]
Test Case: 524 | Input/Output: [(-93 14 -34 -87) -93]
Test Case: 525 | Input/Output: [(-41 -47 -39 9) -47]
Test Case: 526 | Input/Output: [(-74 -97 -74 16) -97]
Test Case: 527 | Input/Output: [(31 94 9 44) 9]
Test Case: 528 | Input/Output: [(96 -93 41 54) -93]
Test Case: 529 | Input/Output: [(-55 -94 47 14) -94]
Test Case: 530 | Input/Output: [(-61 22 -86 -30) -86]
Test Case: 531 | Input/Output: [(21 -95 55 65) -95]
Test Case: 532 | Input/Output: [(-6 13 82 4) -6]
Test Case: 533 | Input/Output: [(41 -5 34 -90) -90]
Test Case: 534 | Input/Output: [(-83 93 -97 41) -97]
Test Case: 535 | Input/Output: [(83 -77 14 -87) -87]
Test Case: 536 | Input/Output: [(55 40 27 85) 27]
Test Case: 537 | Input/Output: [(-10 84 6 34) -10]
Test Case: 538 | Input/Output: [(-99 8 62 -12) -99]
Test Case: 539 | Input/Output: [(-45 99 -47 -79) -79]
Test Case: 540 | Input/Output: [(26 -78 -93 -82) -93]
Test Case: 541 | Input/Output: [(34 100 -42 10) -42]
Test Case: 542 | Input/Output: [(61 -10 -62 -35) -62]
Test Case: 543 | Input/Output: [(29 -12 68 24) -12]
Test Case: 544 | Input/Output: [(-85 -78 -41 16) -85]
Test Case: 545 | Input/Output: [(40 82 97 63) 40]
Test Case: 546 | Input/Output: [(-36 -30 62 -60) -60]
Test Case: 547 | Input/Output: [(93 -100 -73 -5) -100]
Test Case: 548 | Input/Output: [(-67 6 22 -68) -68]
Test Case: 549 | Input/Output: [(37 -50 -74 -50) -74]
Test Case: 550 | Input/Output: [(67 37 58 67) 37]
Test Case: 551 | Input/Output: [(23 28 84 -40) -40]
Test Case: 552 | Input/Output: [(87 45 -40 -41) -41]
Test Case: 553 | Input/Output: [(2 -84 -10 -52) -84]
Test Case: 554 | Input/Output: [(45 -37 -91 5) -91]
Test Case: 555 | Input/Output: [(84 -72 -9 -44) -72]
Test Case: 556 | Input/Output: [(55 -61 96 -100) -100]
Test Case: 557 | Input/Output: [(-13 -81 24 -17) -81]
Test Case: 558 | Input/Output: [(6 67 -30 32) -30]
Test Case: 559 | Input/Output: [(36 -82 -59 63) -82]
Test Case: 560 | Input/Output: [(98 -83 -86 69) -86]
Test Case: 561 | Input/Output: [(-95 41 -17 -43) -95]
Test Case: 562 | Input/Output: [(20 17 70 -40) -40]
Test Case: 563 | Input/Output: [(61 -82 -99 -16) -99]
Test Case: 564 | Input/Output: [(42 95 36 43) 36]
Test Case: 565 | Input/Output: [(49 -82 18 -61) -82]
Test Case: 566 | Input/Output: [(98 81 96 -11) -11]
Test Case: 567 | Input/Output: [(-28 19 -58 -37) -58]
Test Case: 568 | Input/Output: [(-19 49 49 -15) -19]
Test Case: 569 | Input/Output: [(70 49 -91 72) -91]
Test Case: 570 | Input/Output: [(41 -50 -45 -8) -50]
Test Case: 571 | Input/Output: [(-8 -91 57 -20) -91]
Test Case: 572 | Input/Output: [(-33 -87 -95 -86) -95]
Test Case: 573 | Input/Output: [(-13 -50 -44 -98) -98]
Test Case: 574 | Input/Output: [(-27 17 -52 -47) -52]
Test Case: 575 | Input/Output: [(74 68 22 0) 0]
Test Case: 576 | Input/Output: [(97 -81 -18 72) -81]
Test Case: 577 | Input/Output: [(25 -25 -66 83) -66]
Test Case: 578 | Input/Output: [(-43 53 -80 38) -80]
Test Case: 579 | Input/Output: [(-76 -4 51 49) -76]
Test Case: 580 | Input/Output: [(91 100 92 -78) -78]
Test Case: 581 | Input/Output: [(28 58 30 -24) -24]
Test Case: 582 | Input/Output: [(38 -33 -30 45) -33]
Test Case: 583 | Input/Output: [(-30 48 -85 -28) -85]
Test Case: 584 | Input/Output: [(36 -30 -42 -40) -42]
Test Case: 585 | Input/Output: [(69 65 69 -82) -82]
Test Case: 586 | Input/Output: [(60 -82 42 -42) -82]
Test Case: 587 | Input/Output: [(32 -20 -32 65) -32]
Test Case: 588 | Input/Output: [(-13 -72 -80 -29) -80]
Test Case: 589 | Input/Output: [(-62 -84 -93 5) -93]
Test Case: 590 | Input/Output: [(56 -75 -43 80) -75]
Test Case: 591 | Input/Output: [(-87 -80 94 16) -87]
Test Case: 592 | Input/Output: [(61 -67 66 -95) -95]
Test Case: 593 | Input/Output: [(11 -74 92 -85) -85]
Test Case: 594 | Input/Output: [(50 -84 52 -3) -84]
Test Case: 595 | Input/Output: [(62 -61 -58 -84) -84]
Test Case: 596 | Input/Output: [(90 98 77 43) 43]
Test Case: 597 | Input/Output: [(-22 -38 -94 -74) -94]
Test Case: 598 | Input/Output: [(20 30 1 -27) -27]
Test Case: 599 | Input/Output: [(-85 75 68 -93) -93]
Test Case: 600 | Input/Output: [(41 -7 -76 89) -76]
Test Case: 601 | Input/Output: [(28 -4 70 -4) -4]
Test Case: 602 | Input/Output: [(92 22 -48 -38) -48]
Test Case: 603 | Input/Output: [(-5 -53 -17 41) -53]
Test Case: 604 | Input/Output: [(-78 16 66 -20) -78]
Test Case: 605 | Input/Output: [(78 -45 -41 -44) -45]
Test Case: 606 | Input/Output: [(50 45 2 -56) -56]
Test Case: 607 | Input/Output: [(3 4 81 -66) -66]
Test Case: 608 | Input/Output: [(96 -47 -22 -96) -96]
Test Case: 609 | Input/Output: [(-41 48 -10 29) -41]
Test Case: 610 | Input/Output: [(43 -99 24 -61) -99]
Test Case: 611 | Input/Output: [(80 -8 20 75) -8]
Test Case: 612 | Input/Output: [(-5 28 98 58) -5]
Test Case: 613 | Input/Output: [(-64 -23 5 14) -64]
Test Case: 614 | Input/Output: [(64 2 54 29) 2]
Test Case: 615 | Input/Output: [(-82 -22 78 91) -82]
Test Case: 616 | Input/Output: [(-15 85 -14 84) -15]
Test Case: 617 | Input/Output: [(80 47 -84 20) -84]
Test Case: 618 | Input/Output: [(45 47 66 43) 43]
Test Case: 619 | Input/Output: [(3 26 -42 -4) -42]
Test Case: 620 | Input/Output: [(21 -36 -70 83) -70]
Test Case: 621 | Input/Output: [(98 60 94 -59) -59]
Test Case: 622 | Input/Output: [(-80 32 22 -68) -80]
Test Case: 623 | Input/Output: [(72 -82 -40 -55) -82]
Test Case: 624 | Input/Output: [(37 -86 -76 -53) -86]
Test Case: 625 | Input/Output: [(52 -76 -76 24) -76]
Test Case: 626 | Input/Output: [(56 83 100 68) 56]
Test Case: 627 | Input/Output: [(-45 -88 90 -81) -88]
Test Case: 628 | Input/Output: [(53 54 55 -76) -76]
Test Case: 629 | Input/Output: [(-25 -84 -37 23) -84]
Test Case: 630 | Input/Output: [(26 93 -41 55) -41]
Test Case: 631 | Input/Output: [(-32 55 -96 -1) -96]
Test Case: 632 | Input/Output: [(79 -53 57 -54) -54]
Test Case: 633 | Input/Output: [(61 69 -2 -65) -65]
Test Case: 634 | Input/Output: [(63 43 -17 -29) -29]
Test Case: 635 | Input/Output: [(0 13 -6 -54) -54]
Test Case: 636 | Input/Output: [(92 -49 67 90) -49]
Test Case: 637 | Input/Output: [(-94 -8 60 -2) -94]
Test Case: 638 | Input/Output: [(-96 -86 25 20) -96]
Test Case: 639 | Input/Output: [(-43 -86 -40 89) -86]
Test Case: 640 | Input/Output: [(-58 -19 77 38) -58]
Test Case: 641 | Input/Output: [(-48 11 50 -32) -48]
Test Case: 642 | Input/Output: [(-81 76 -89 11) -89]
Test Case: 643 | Input/Output: [(43 -73 -80 46) -80]
Test Case: 644 | Input/Output: [(-54 98 -41 -49) -54]
Test Case: 645 | Input/Output: [(8 -80 79 -91) -91]
Test Case: 646 | Input/Output: [(86 94 -79 70) -79]
Test Case: 647 | Input/Output: [(-71 30 -56 -34) -71]
Test Case: 648 | Input/Output: [(-26 -31 55 86) -31]
Test Case: 649 | Input/Output: [(-66 -88 -85 21) -88]
Test Case: 650 | Input/Output: [(25 -31 -80 -86) -86]
Test Case: 651 | Input/Output: [(-100 42 -61 -70) -100]
Test Case: 652 | Input/Output: [(-22 95 14 95) -22]
Test Case: 653 | Input/Output: [(38 78 45 -50) -50]
Test Case: 654 | Input/Output: [(55 -69 -39 34) -69]
Test Case: 655 | Input/Output: [(-66 -13 -43 47) -66]
Test Case: 656 | Input/Output: [(-99 39 65 8) -99]
Test Case: 657 | Input/Output: [(-57 36 11 10) -57]
Test Case: 658 | Input/Output: [(-70 -14 -74 54) -74]
Test Case: 659 | Input/Output: [(9 44 99 -46) -46]
Test Case: 660 | Input/Output: [(-90 -11 100 -53) -90]
Test Case: 661 | Input/Output: [(-17 98 35 98) -17]
Test Case: 662 | Input/Output: [(-98 -83 -39 55) -98]
Test Case: 663 | Input/Output: [(97 87 -75 -46) -75]
Test Case: 664 | Input/Output: [(-49 -78 57 76) -78]
Test Case: 665 | Input/Output: [(86 17 66 -53) -53]
Test Case: 666 | Input/Output: [(-91 68 49 -80) -91]
Test Case: 667 | Input/Output: [(11 -17 75 -45) -45]
Test Case: 668 | Input/Output: [(37 -51 -18 100) -51]
Test Case: 669 | Input/Output: [(52 4 -15 -88) -88]
Test Case: 670 | Input/Output: [(-49 15 -23 -4) -49]
Test Case: 671 | Input/Output: [(34 38 28 -39) -39]
Test Case: 672 | Input/Output: [(26 4 50 90) 4]
Test Case: 673 | Input/Output: [(45 95 -38 -86) -86]
Test Case: 674 | Input/Output: [(95 95 56 -81) -81]
Test Case: 675 | Input/Output: [(18 40 -63 -26) -63]
Test Case: 676 | Input/Output: [(32 -92 97 89) -92]
Test Case: 677 | Input/Output: [(-77 -61 -11 -62) -77]
Test Case: 678 | Input/Output: [(93 -14 40 -9) -14]
Test Case: 679 | Input/Output: [(71 -39 50 81) -39]
Test Case: 680 | Input/Output: [(-97 79 -36 78) -97]
Test Case: 681 | Input/Output: [(15 -23 -33 12) -33]
Test Case: 682 | Input/Output: [(0 51 32 81) 0]
Test Case: 683 | Input/Output: [(61 96 7 58) 7]
Test Case: 684 | Input/Output: [(-62 63 -37 44) -62]
Test Case: 685 | Input/Output: [(14 31 -61 87) -61]
Test Case: 686 | Input/Output: [(-17 -50 75 -54) -54]
Test Case: 687 | Input/Output: [(-46 -17 63 -75) -75]
Test Case: 688 | Input/Output: [(9 42 -50 48) -50]
Test Case: 689 | Input/Output: [(-54 -74 -96 72) -96]
Test Case: 690 | Input/Output: [(3 41 -84 -82) -84]
Test Case: 691 | Input/Output: [(27 15 33 95) 15]
Test Case: 692 | Input/Output: [(-39 -47 -72 -19) -72]
Test Case: 693 | Input/Output: [(-37 69 94 -12) -37]
Test Case: 694 | Input/Output: [(47 65 6 -41) -41]
Test Case: 695 | Input/Output: [(81 -63 -19 -48) -63]
Test Case: 696 | Input/Output: [(-84 -38 -19 -90) -90]
Test Case: 697 | Input/Output: [(27 -76 13 56) -76]
Test Case: 698 | Input/Output: [(-85 27 30 -37) -85]
Test Case: 699 | Input/Output: [(-21 -66 35 -37) -66]
Test Case: 700 | Input/Output: [(-53 98 -60 21) -60]
Test Case: 701 | Input/Output: [(61 -7 -51 -20) -51]
Test Case: 702 | Input/Output: [(43 56 -57 -49) -57]
Test Case: 703 | Input/Output: [(6 -28 2 68) -28]
Test Case: 704 | Input/Output: [(-15 19 -15 9) -15]
Test Case: 705 | Input/Output: [(10 6 -98 1) -98]
Test Case: 706 | Input/Output: [(-78 -84 -99 -98) -99]
Test Case: 707 | Input/Output: [(-95 -23 -16 90) -95]
Test Case: 708 | Input/Output: [(17 -34 -20 77) -34]
Test Case: 709 | Input/Output: [(-86 -36 -92 89) -92]
Test Case: 710 | Input/Output: [(93 75 34 88) 34]
Test Case: 711 | Input/Output: [(-24 92 50 64) -24]
Test Case: 712 | Input/Output: [(-95 48 19 -12) -95]
Test Case: 713 | Input/Output: [(-87 88 -7 37) -87]
Test Case: 714 | Input/Output: [(-27 -81 -6 21) -81]
Test Case: 715 | Input/Output: [(-13 29 33 -19) -19]
Test Case: 716 | Input/Output: [(-70 -78 43 43) -78]
Test Case: 717 | Input/Output: [(89 8 53 44) 8]
Test Case: 718 | Input/Output: [(13 -60 29 -39) -60]
Test Case: 719 | Input/Output: [(68 -22 -40 85) -40]
Test Case: 720 | Input/Output: [(-57 -5 -16 33) -57]
Test Case: 721 | Input/Output: [(-46 -96 4 -62) -96]
Test Case: 722 | Input/Output: [(46 92 64 26) 26]
Test Case: 723 | Input/Output: [(-10 -67 14 78) -67]
Test Case: 724 | Input/Output: [(-50 73 100 23) -50]
Test Case: 725 | Input/Output: [(85 -39 48 29) -39]
Test Case: 726 | Input/Output: [(24 55 58 35) 24]
Test Case: 727 | Input/Output: [(-60 48 -35 86) -60]
Test Case: 728 | Input/Output: [(-5 -39 -79 36) -79]
Test Case: 729 | Input/Output: [(44 32 13 74) 13]
Test Case: 730 | Input/Output: [(-64 -75 -3 60) -75]
Test Case: 731 | Input/Output: [(-91 84 72 8) -91]
Test Case: 732 | Input/Output: [(-96 78 -53 70) -96]
Test Case: 733 | Input/Output: [(86 -20 13 36) -20]
Test Case: 734 | Input/Output: [(84 -100 -14 44) -100]
Test Case: 735 | Input/Output: [(-1 66 50 -18) -18]
Test Case: 736 | Input/Output: [(-80 6 -78 82) -80]
Test Case: 737 | Input/Output: [(78 88 38 -93) -93]
Test Case: 738 | Input/Output: [(-8 41 52 62) -8]
Test Case: 739 | Input/Output: [(12 12 -68 -11) -68]
Test Case: 740 | Input/Output: [(61 -18 -17 51) -18]
Test Case: 741 | Input/Output: [(52 -5 85 34) -5]
Test Case: 742 | Input/Output: [(-57 -24 29 -36) -57]
Test Case: 743 | Input/Output: [(87 -45 -78 -81) -81]
Test Case: 744 | Input/Output: [(43 -70 -44 23) -70]
Test Case: 745 | Input/Output: [(-71 38 75 -3) -71]
Test Case: 746 | Input/Output: [(-51 -33 54 5) -51]
Test Case: 747 | Input/Output: [(43 -13 -61 -30) -61]
Test Case: 748 | Input/Output: [(-96 -25 -64 45) -96]
Test Case: 749 | Input/Output: [(31 85 -11 -9) -11]
Test Case: 750 | Input/Output: [(14 -7 11 93) -7]
Test Case: 751 | Input/Output: [(68 20 -73 -30) -73]
Test Case: 752 | Input/Output: [(52 71 -64 -15) -64]
Test Case: 753 | Input/Output: [(42 93 90 -69) -69]
Test Case: 754 | Input/Output: [(93 11 39 -7) -7]
Test Case: 755 | Input/Output: [(68 68 -64 -52) -64]
Test Case: 756 | Input/Output: [(38 53 -64 -71) -71]
Test Case: 757 | Input/Output: [(-91 -33 27 51) -91]
Test Case: 758 | Input/Output: [(-70 -76 87 -57) -76]
Test Case: 759 | Input/Output: [(21 -74 91 -32) -74]
Test Case: 760 | Input/Output: [(12 44 -71 -91) -91]
Test Case: 761 | Input/Output: [(28 1 8 -5) -5]
Test Case: 762 | Input/Output: [(73 -99 -67 47) -99]
Test Case: 763 | Input/Output: [(37 40 38 -7) -7]
Test Case: 764 | Input/Output: [(-23 -82 -43 -79) -82]
Test Case: 765 | Input/Output: [(-14 90 19 -19) -19]
Test Case: 766 | Input/Output: [(-7 14 11 -64) -64]
Test Case: 767 | Input/Output: [(-27 77 56 36) -27]
Test Case: 768 | Input/Output: [(-62 32 -52 -99) -99]
Test Case: 769 | Input/Output: [(59 -2 30 -23) -23]
Test Case: 770 | Input/Output: [(66 62 -24 -90) -90]
Test Case: 771 | Input/Output: [(48 -95 -18 94) -95]
Test Case: 772 | Input/Output: [(-15 -82 83 -8) -82]
Test Case: 773 | Input/Output: [(-25 56 77 -12) -25]
Test Case: 774 | Input/Output: [(45 73 9 69) 9]
Test Case: 775 | Input/Output: [(-22 80 -53 -76) -76]
Test Case: 776 | Input/Output: [(-75 -61 19 -56) -75]
Test Case: 777 | Input/Output: [(12 -59 -20 15) -59]
Test Case: 778 | Input/Output: [(27 56 13 97) 13]
Test Case: 779 | Input/Output: [(-63 -94 86 -10) -94]
Test Case: 780 | Input/Output: [(54 20 49 -23) -23]
Test Case: 781 | Input/Output: [(-99 52 19 -86) -99]
Test Case: 782 | Input/Output: [(70 42 8 86) 8]
Test Case: 783 | Input/Output: [(-53 -74 -96 -61) -96]
Test Case: 784 | Input/Output: [(28 83 -44 -60) -60]
Test Case: 785 | Input/Output: [(-14 -33 97 -85) -85]
Test Case: 786 | Input/Output: [(-84 -15 -9 -46) -84]
Test Case: 787 | Input/Output: [(-74 69 -40 90) -74]
Test Case: 788 | Input/Output: [(77 -70 42 52) -70]
Test Case: 789 | Input/Output: [(-66 93 48 5) -66]
Test Case: 790 | Input/Output: [(91 -63 -17 -1) -63]
Test Case: 791 | Input/Output: [(-52 -46 -79 97) -79]
Test Case: 792 | Input/Output: [(83 74 -80 -7) -80]
Test Case: 793 | Input/Output: [(60 76 -95 -66) -95]
Test Case: 794 | Input/Output: [(-78 29 2 -2) -78]
Test Case: 795 | Input/Output: [(-69 99 -45 -61) -69]
Test Case: 796 | Input/Output: [(58 -77 68 -38) -77]
Test Case: 797 | Input/Output: [(-14 -39 87 -77) -77]
Test Case: 798 | Input/Output: [(26 55 -91 88) -91]
Test Case: 799 | Input/Output: [(-32 12 18 86) -32]
Test Case: 800 | Input/Output: [(2 -7 -35 23) -35]
Test Case: 801 | Input/Output: [(77 -18 -42 32) -42]
Test Case: 802 | Input/Output: [(44 22 -64 17) -64]
Test Case: 803 | Input/Output: [(82 -80 -8 -3) -80]
Test Case: 804 | Input/Output: [(84 -54 35 91) -54]
Test Case: 805 | Input/Output: [(-60 -54 -68 39) -68]
Test Case: 806 | Input/Output: [(-78 51 68 -74) -78]
Test Case: 807 | Input/Output: [(-12 35 -31 -29) -31]
Test Case: 808 | Input/Output: [(-86 -90 -75 16) -90]
Test Case: 809 | Input/Output: [(-77 95 14 76) -77]
Test Case: 810 | Input/Output: [(45 -82 -47 -22) -82]
Test Case: 811 | Input/Output: [(77 37 -68 6) -68]
Test Case: 812 | Input/Output: [(24 13 46 100) 13]
Test Case: 813 | Input/Output: [(22 -39 -39 30) -39]
Test Case: 814 | Input/Output: [(44 9 -62 -66) -66]
Test Case: 815 | Input/Output: [(85 -28 85 51) -28]
Test Case: 816 | Input/Output: [(72 48 3 -37) -37]
Test Case: 817 | Input/Output: [(-86 14 46 -12) -86]
Test Case: 818 | Input/Output: [(32 50 60 32) 32]
Test Case: 819 | Input/Output: [(-68 -62 97 95) -68]
Test Case: 820 | Input/Output: [(73 42 39 -90) -90]
Test Case: 821 | Input/Output: [(19 -3 -44 -84) -84]
Test Case: 822 | Input/Output: [(-33 44 -6 -61) -61]
Test Case: 823 | Input/Output: [(-60 27 97 82) -60]
Test Case: 824 | Input/Output: [(-74 22 70 37) -74]
Test Case: 825 | Input/Output: [(11 68 -93 97) -93]
Test Case: 826 | Input/Output: [(-65 -71 -65 -100) -100]
Test Case: 827 | Input/Output: [(87 -71 62 -39) -71]
Test Case: 828 | Input/Output: [(-79 -95 -26 24) -95]
Test Case: 829 | Input/Output: [(33 -73 -12 74) -73]
Test Case: 830 | Input/Output: [(-3 74 39 -94) -94]
Test Case: 831 | Input/Output: [(19 42 56 62) 19]
Test Case: 832 | Input/Output: [(-57 70 4 -87) -87]
Test Case: 833 | Input/Output: [(85 41 -72 -86) -86]
Test Case: 834 | Input/Output: [(29 -68 74 -85) -85]
Test Case: 835 | Input/Output: [(-99 41 -97 -100) -100]
Test Case: 836 | Input/Output: [(-46 88 -38 -76) -76]
Test Case: 837 | Input/Output: [(-5 -27 88 99) -27]
Test Case: 838 | Input/Output: [(60 -9 96 97) -9]
Test Case: 839 | Input/Output: [(-99 -40 -30 36) -99]
Test Case: 840 | Input/Output: [(-71 -68 -74 7) -74]
Test Case: 841 | Input/Output: [(-77 -25 7 6) -77]
Test Case: 842 | Input/Output: [(-22 17 54 96) -22]
Test Case: 843 | Input/Output: [(-69 95 -15 87) -69]
Test Case: 844 | Input/Output: [(29 24 0 69) 0]
Test Case: 845 | Input/Output: [(91 17 -17 -76) -76]
Test Case: 846 | Input/Output: [(53 100 79 -15) -15]
Test Case: 847 | Input/Output: [(65 11 -96 -84) -96]
Test Case: 848 | Input/Output: [(-46 -100 86 52) -100]
Test Case: 849 | Input/Output: [(-35 15 -37 8) -37]
Test Case: 850 | Input/Output: [(98 70 67 12) 12]
Test Case: 851 | Input/Output: [(84 -58 57 -56) -58]
Test Case: 852 | Input/Output: [(82 -2 -56 76) -56]
Test Case: 853 | Input/Output: [(-49 59 14 68) -49]
Test Case: 854 | Input/Output: [(-57 20 86 -45) -57]
Test Case: 855 | Input/Output: [(-27 46 -68 -94) -94]
Test Case: 856 | Input/Output: [(-13 -9 -68 91) -68]
Test Case: 857 | Input/Output: [(35 94 -42 7) -42]
Test Case: 858 | Input/Output: [(-31 -62 42 -90) -90]
Test Case: 859 | Input/Output: [(76 -97 -97 91) -97]
Test Case: 860 | Input/Output: [(-83 43 -56 -19) -83]
Test Case: 861 | Input/Output: [(-83 35 37 -5) -83]
Test Case: 862 | Input/Output: [(-11 -7 -18 -89) -89]
Test Case: 863 | Input/Output: [(-82 -40 -6 29) -82]
Test Case: 864 | Input/Output: [(-24 -87 84 15) -87]
Test Case: 865 | Input/Output: [(-27 34 -34 52) -34]
Test Case: 866 | Input/Output: [(-23 -14 22 14) -23]
Test Case: 867 | Input/Output: [(91 -11 -55 -42) -55]
Test Case: 868 | Input/Output: [(-57 -69 17 89) -69]
Test Case: 869 | Input/Output: [(-11 -69 21 75) -69]
Test Case: 870 | Input/Output: [(97 43 12 79) 12]
Test Case: 871 | Input/Output: [(-8 75 24 -86) -86]
Test Case: 872 | Input/Output: [(77 67 -74 39) -74]
Test Case: 873 | Input/Output: [(52 -21 56 -57) -57]
Test Case: 874 | Input/Output: [(-3 11 18 -61) -61]
Test Case: 875 | Input/Output: [(-91 -62 -67 66) -91]
Test Case: 876 | Input/Output: [(33 72 9 58) 9]
Test Case: 877 | Input/Output: [(90 -82 -16 -19) -82]
Test Case: 878 | Input/Output: [(34 31 41 57) 31]
Test Case: 879 | Input/Output: [(-10 63 -56 15) -56]
Test Case: 880 | Input/Output: [(-31 1 78 68) -31]
Test Case: 881 | Input/Output: [(84 20 19 58) 19]
Test Case: 882 | Input/Output: [(52 -69 -13 -48) -69]
Test Case: 883 | Input/Output: [(-46 -14 -38 85) -46]
Test Case: 884 | Input/Output: [(84 96 -35 37) -35]
Test Case: 885 | Input/Output: [(-69 69 -48 -88) -88]
Test Case: 886 | Input/Output: [(-73 -42 -15 4) -73]
Test Case: 887 | Input/Output: [(-66 -9 60 -55) -66]
Test Case: 888 | Input/Output: [(-3 -53 73 -88) -88]
Test Case: 889 | Input/Output: [(-57 -45 -22 -25) -57]
Test Case: 890 | Input/Output: [(56 0 25 -54) -54]
Test Case: 891 | Input/Output: [(-87 -70 -3 61) -87]
Test Case: 892 | Input/Output: [(25 91 42 -55) -55]
Test Case: 893 | Input/Output: [(-93 -97 -34 46) -97]
Test Case: 894 | Input/Output: [(-25 18 -94 -36) -94]
Test Case: 895 | Input/Output: [(47 -21 35 -11) -21]
Test Case: 896 | Input/Output: [(34 72 -81 81) -81]
Test Case: 897 | Input/Output: [(41 -45 -19 95) -45]
Test Case: 898 | Input/Output: [(-7 -6 -47 62) -47]
Test Case: 899 | Input/Output: [(-70 -78 28 62) -78]
Test Case: 900 | Input/Output: [(-95 1 -18 90) -95]
Test Case: 901 | Input/Output: [(62 -45 62 -50) -50]
Test Case: 902 | Input/Output: [(-35 63 -80 90) -80]
Test Case: 903 | Input/Output: [(96 -69 87 62) -69]
Test Case: 904 | Input/Output: [(-25 84 41 -32) -32]
Test Case: 905 | Input/Output: [(-63 57 -17 95) -63]
Test Case: 906 | Input/Output: [(-6 84 98 77) -6]
Test Case: 907 | Input/Output: [(-33 -62 -37 -80) -80]
Test Case: 908 | Input/Output: [(-99 55 38 -87) -99]
Test Case: 909 | Input/Output: [(-73 16 28 75) -73]
Test Case: 910 | Input/Output: [(4 -55 -54 37) -55]
Test Case: 911 | Input/Output: [(-67 -7 47 19) -67]
Test Case: 912 | Input/Output: [(29 -72 -81 -27) -81]
Test Case: 913 | Input/Output: [(-88 -30 35 90) -88]
Test Case: 914 | Input/Output: [(64 -11 52 88) -11]
Test Case: 915 | Input/Output: [(-4 89 5 -81) -81]
Test Case: 916 | Input/Output: [(-67 12 -6 -27) -67]
Test Case: 917 | Input/Output: [(-83 -83 70 70) -83]
Test Case: 918 | Input/Output: [(72 61 -26 67) -26]
Test Case: 919 | Input/Output: [(8 26 8 12) 8]
Test Case: 920 | Input/Output: [(-12 -33 22 -79) -79]
Test Case: 921 | Input/Output: [(62 -90 -71 -70) -90]
Test Case: 922 | Input/Output: [(-33 -94 55 29) -94]
Test Case: 923 | Input/Output: [(23 -8 -47 7) -47]
Test Case: 924 | Input/Output: [(99 1 79 -5) -5]
Test Case: 925 | Input/Output: [(-12 76 -61 -68) -68]
Test Case: 926 | Input/Output: [(82 -87 -23 88) -87]
Test Case: 927 | Input/Output: [(8 -35 -22 -58) -58]
Test Case: 928 | Input/Output: [(84 69 -1 58) -1]
Test Case: 929 | Input/Output: [(-76 96 -12 -3) -76]
Test Case: 930 | Input/Output: [(-7 -97 66 68) -97]
Test Case: 931 | Input/Output: [(54 -33 -66 14) -66]
Test Case: 932 | Input/Output: [(35 24 -42 32) -42]
Test Case: 933 | Input/Output: [(2 65 -43 -26) -43]
Test Case: 934 | Input/Output: [(47 53 5 -67) -67]
Test Case: 935 | Input/Output: [(85 62 15 99) 15]
Test Case: 936 | Input/Output: [(20 -11 75 -28) -28]
Test Case: 937 | Input/Output: [(-24 13 -70 83) -70]
Test Case: 938 | Input/Output: [(-5 82 50 22) -5]
Test Case: 939 | Input/Output: [(-8 19 91 80) -8]
Test Case: 940 | Input/Output: [(11 82 -50 10) -50]
Test Case: 941 | Input/Output: [(94 25 -91 -4) -91]
Test Case: 942 | Input/Output: [(-45 -33 -39 27) -45]
Test Case: 943 | Input/Output: [(-13 90 16 39) -13]
Test Case: 944 | Input/Output: [(-95 -57 -87 81) -95]
Test Case: 945 | Input/Output: [(-73 70 -42 -65) -73]
Test Case: 946 | Input/Output: [(-16 76 -40 24) -40]
Test Case: 947 | Input/Output: [(45 93 58 -70) -70]
Test Case: 948 | Input/Output: [(77 5 -94 31) -94]
Test Case: 949 | Input/Output: [(-33 29 42 49) -33]
Test Case: 950 | Input/Output: [(68 -87 5 35) -87]
Test Case: 951 | Input/Output: [(-87 -49 -28 -85) -87]
Test Case: 952 | Input/Output: [(65 60 60 42) 42]
Test Case: 953 | Input/Output: [(78 -80 -46 -95) -95]
Test Case: 954 | Input/Output: [(-78 -96 66 -94) -96]
Test Case: 955 | Input/Output: [(3 13 -87 98) -87]
Test Case: 956 | Input/Output: [(-91 31 -75 79) -91]
Test Case: 957 | Input/Output: [(18 -49 -52 -82) -82]
Test Case: 958 | Input/Output: [(0 84 -57 -21) -57]
Test Case: 959 | Input/Output: [(-76 -42 50 4) -76]
Test Case: 960 | Input/Output: [(-6 -43 98 23) -43]
Test Case: 961 | Input/Output: [(64 -36 -41 13) -41]
Test Case: 962 | Input/Output: [(-34 -3 -100 -12) -100]
Test Case: 963 | Input/Output: [(-16 -53 -61 -93) -93]
Test Case: 964 | Input/Output: [(60 -62 -34 77) -62]
Test Case: 965 | Input/Output: [(42 52 -96 -23) -96]
Test Case: 966 | Input/Output: [(47 22 18 -49) -49]
Test Case: 967 | Input/Output: [(-88 83 -100 89) -100]
Test Case: 968 | Input/Output: [(-42 17 41 12) -42]
Test Case: 969 | Input/Output: [(-49 82 73 -29) -49]
Test Case: 970 | Input/Output: [(5 99 -91 87) -91]
Test Case: 971 | Input/Output: [(-21 57 57 29) -21]
Test Case: 972 | Input/Output: [(41 6 82 40) 6]
Test Case: 973 | Input/Output: [(-100 -44 65 -48) -100]
Test Case: 974 | Input/Output: [(-93 -50 17 -75) -93]
Test Case: 975 | Input/Output: [(61 -94 -86 6) -94]
Test Case: 976 | Input/Output: [(74 -56 98 -46) -56]
Test Case: 977 | Input/Output: [(-44 -40 -1 32) -44]
Test Case: 978 | Input/Output: [(87 -14 -47 79) -47]
Test Case: 979 | Input/Output: [(35 -99 -36 -22) -99]
Test Case: 980 | Input/Output: [(-30 -72 3 -24) -72]
Test Case: 981 | Input/Output: [(-49 37 -45 65) -49]
Test Case: 982 | Input/Output: [(-7 30 11 -11) -11]
Test Case: 983 | Input/Output: [(-48 63 24 9) -48]
Test Case: 984 | Input/Output: [(95 59 -100 -74) -100]
Test Case: 985 | Input/Output: [(76 -19 -40 3) -40]
Test Case: 986 | Input/Output: [(0 33 89 -8) -8]
Test Case: 987 | Input/Output: [(81 43 -70 -35) -70]
Test Case: 988 | Input/Output: [(65 62 -36 -89) -89]
Test Case: 989 | Input/Output: [(-87 76 -55 -78) -87]
Test Case: 990 | Input/Output: [(-13 -92 53 65) -92]
Test Case: 991 | Input/Output: [(39 45 49 32) 32]
Test Case: 992 | Input/Output: [(24 -4 -39 -82) -82]
Test Case: 993 | Input/Output: [(84 6 88 54) 6]
Test Case: 994 | Input/Output: [(96 -13 -31 47) -31]
Test Case: 995 | Input/Output: [(-40 85 -91 30) -91]
Test Case: 996 | Input/Output: [(-55 -80 -25 -60) -80]
Test Case: 997 | Input/Output: [(-96 -73 77 67) -96]
Test Case: 998 | Input/Output: [(9 -100 -58 -37) -100]
Test Case: 999 | Input/Output: [(75 -50 11 -32) -50]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = -99 87 5 40 -96 60 -115 48 -72 27 -66 -45 -127 -117 -18 -127
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-30 -30 12 -30] -30] [[93 93 65 93] 65] [[-58 55 55 55] -58] [[96 95 96 96] 95] [[-92 62 62 62] -92] [[83 83 -55 83] -55] [[-28 -28 -28 -96] -96] [[81 81 81 -27] -27] [[-6 -93 -93 -93] -93] [[93 -31 -31 -31] -31] [(-37 -37 -37 -37) -37] [(-44 -44 -44 -44) -44] [(4 4 4 4) 4] [(-64 -64 -64 -64) -64] [(36 36 36 36) 36] [(55 96 60 58) 55] [(30 11 2 4) 2] [(33 28 37 12) 12] [(62 67 17 41) 17] [(43 3 10 8) 3] [(75 73 0 42) 0] [(55 17 84 91) 17] [(23 58 60 98) 23] [(3 90 67 15) 3] [(77 46 66 21) 21] [(76 70 47 71) 47] [(73 95 87 58) 58] [(95 48 44 99) 44] [(47 38 77 48) 38] [(31 2 59 55) 2] [(97 30 23 31) 23] [(33 28 89 21) 21] [(15 34 18 40) 15] [(23 24 73 8) 8] [(54 71 81 1) 1] [(3 -86 64 92) -86] [(75 99 91 -77) -77] [(3 40 -69 62) -69] [(56 -45 75 0) -45] [(50 20 87 -34) -34] [(-31 -13 -43 -16) -43] [(-34 80 3 11) -34] [(47 -35 -51 28) -51] [(60 -66 62 -49) -66] [(7 -86 -90 100) -90] [(-35 -98 -38 70) -98] [(17 -20 -53 -28) -53] [(-31 12 -13 41) -31] [(-2 31 93 33) -2] [(-4 34 -68 43) -68] [(7 -78 -85 -8) -85] [(-63 -97 -64 -4) -97] [(15 100 58 11) 11] [(-11 -93 -24 -46) -93] [(57 -17 -21 -58) -58] [(-65 -78 -46 86) -78] [(24 -98 97 39) -98] [(-2 -77 -11 51) -77] [(-58 -27 58 -13) -58] [(96 -17 -79 44) -79] [(15 31 -39 43) -39] [(-91 -12 -50 43) -91] [(-96 -58 4 58) -96] [(85 69 78 -85) -85] [(-54 -12 -38 1) -54] [(-71 -65 33 -22) -71] [(40 -59 -74 5) -74] [(42 4 87 -64) -64] [(-70 4 15 -35) -70] [(6 -20 16 66) -20] [(78 -11 -100 -13) -100] [(30 -36 -53 -10) -53] [(-42 -38 -17 -37) -42] [(43 50 1 46) 1] [(-49 -97 42 -41) -97] [(20 -56 -27 22) -56] [(15 86 24 30) 15] [(24 44 -33 88) -33] [(79 -71 91 -74) -74] [(80 -66 -99 60) -99] [(94 33 -2 -52) -52] [(21 43 -73 -21) -73] [(9 -94 -16 12) -94] [(-96 -24 -7 21) -96] [(-98 -21 34 -44) -98] [(-47 -35 -89 -14) -89] [(-66 21 2 36) -66] [(-3 66 -97 -39) -97] [(-59 -76 78 -98) -98] [(-77 -53 55 42) -77] [(11 68 97 47) 11] [(-1 -22 9 66) -22] [(20 -84 100 39) -84] [(79 66 35 97) 35] [(-5 -5 -55 64) -55])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 634
Test mean error for best: 0.63400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: 12                 
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: 55                 
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: 62                 
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -28                
Correct output: -27                 | Program output: 81                 
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 60                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 37                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 10                 
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 84                 
Correct output: 23                  | Program output: 60                 
Correct output: 3                   | Program output: 67                 
Correct output: 21                  | Program output: 66                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 87                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 77                 
Correct output: 2                   | Program output: 59                 
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 89                 
Correct output: 15                  | Program output: 18                 
Correct output: 8                   | Program output: 73                 
Correct output: 1                   | Program output: 81                 
Correct output: -86                 | Program output: 64                 
Correct output: -77                 | Program output: 91                 
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: 75                 
Correct output: -34                 | Program output: 87                 
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: 62                 
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -38                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -13                
Correct output: -2                  | Program output: 93                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -64                
Correct output: 11                  | Program output: 58                 
Correct output: -93                 | Program output: -24                
Correct output: -58                 | Program output: -21                
Correct output: -78                 | Program output: -46                
Correct output: -98                 | Program output: 97                 
Correct output: -77                 | Program output: -11                
Correct output: -58                 | Program output: 58                 
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -50                
Correct output: -96                 | Program output: 4                  
Correct output: -85                 | Program output: 78                 
Correct output: -54                 | Program output: -38                
Correct output: -71                 | Program output: 33                 
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: 87                 
Correct output: -70                 | Program output: 15                 
Correct output: -20                 | Program output: 16                 
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -17                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: 42                 
Correct output: -56                 | Program output: -27                
Correct output: 15                  | Program output: 24                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: 91                 
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -2                 
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -16                
Correct output: -96                 | Program output: -7                 
Correct output: -98                 | Program output: 34                 
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: 2                  
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: 78                 
Correct output: -77                 | Program output: 55                 
Correct output: 11                  | Program output: 97                 
Correct output: -22                 | Program output: 9                  
Correct output: -84                 | Program output: 100                
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Lexicase best program: (in3 integer_yank integer_dup exec_dup_items boolean_pop integer_min exec_if (integer_swap boolean_pop) (integer_lte exec_rot () (boolean_dup print_integer boolean_pop boolean_shove exec_y () exec_while (exec_dup_items integer_empty integer_dup boolean_flush -62) exec_do*range (exec_swap (integer_inc integer_dup_items boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ())) ()))
Lexicase best errors: [0 0 1 1 1 1 0 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 43
Percent parens: 0.279
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Zero cases best program: (in3 integer_yank integer_dup exec_dup_items boolean_pop integer_min exec_if (integer_swap boolean_pop) (integer_lte exec_rot () (boolean_dup print_integer boolean_pop boolean_shove exec_y () exec_while (exec_dup_items integer_empty integer_dup boolean_flush -62) exec_do*range (exec_swap (integer_inc integer_dup_items boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ())) ()))
Zero cases best errors: [0 0 1 1 1 1 0 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 43
Percent parens: 0.279
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 3 5 6 5 2 3 3 5 3)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (3 3 5 6 5 2 3 3 5 3)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction 45} {:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 1, :instruction in3} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_eq})
Best program: (45 integer_max boolean_shove boolean_dup_items integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or integer_lt in3) boolean_shove exec_s_when_autoconstructing () (boolean_flush print_integer integer_mult boolean_yankdup integer_dup exec_flush exec_dup_items boolean_swap exec_eq) ())
Errors: [0 0 1 1 1 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 23
Size: 29
Percent parens: 0.207
--- Population Statistics ---
Average total errors in population: 9.962
Median total errors in population: 10
Error averages by case: (0.997 0.997 0.995 0.994 0.995 0.998 0.997 0.997 0.995 0.997)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 52.05
Average program size in population (points): 71.268
Average percent parens in population: 0.277
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.283
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 469680
--- Timings ---
Current time: 1559594138082 milliseconds
Total Time:           2.4 seconds
Initialization:       0.1 seconds,  4.7%
Reproduction:         0.8 seconds, 34.1%
Fitness Testing:      1.4 seconds, 61.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 416
Test mean error for best: 0.41600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: -58                
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: -92                
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -28                
Correct output: -27                 | Program output: 81                 
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 55                 
Correct output: 2                   | Program output:                    
Correct output: 12                  | Program output: 33                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 10                 
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 55                 
Correct output: 23                  | Program output: 23                 
Correct output: 3                   | Program output: 3                  
Correct output: 21                  | Program output: 66                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 73                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 47                 
Correct output: 2                   | Program output: 31                 
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 33                 
Correct output: 15                  | Program output: 15                 
Correct output: 8                   | Program output: 23                 
Correct output: 1                   | Program output: 54                 
Correct output: -86                 | Program output: 3                  
Correct output: -77                 | Program output: 75                 
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: 56                 
Correct output: -34                 | Program output: 50                 
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: 60                 
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -38                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -2                  | Program output: -2                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -64                
Correct output: 11                  | Program output: 15                 
Correct output: -93                 | Program output: -24                
Correct output: -58                 | Program output: -21                
Correct output: -78                 | Program output: -65                
Correct output: -98                 | Program output: 24                 
Correct output: -77                 | Program output: -11                
Correct output: -58                 | Program output: -58                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -91                
Correct output: -96                 | Program output: -96                
Correct output: -85                 | Program output: 78                 
Correct output: -54                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: 42                 
Correct output: -70                 | Program output: -70                
Correct output: -20                 | Program output: 6                  
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -42                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -49                
Correct output: -56                 | Program output: -27                
Correct output: 15                  | Program output: 15                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: 79                 
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -2                 
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -16                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output:                    
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -59                
Correct output: -77                 | Program output: -77                
Correct output: 11                  | Program output: 11                 
Correct output: -22                 | Program output: -1                 
Correct output: -84                 | Program output: 20                 
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Lexicase best program: (in3 integer_yank integer_dup exec_dup_items boolean_pop in1 integer_min exec_if (integer_swap boolean_pop) (integer_lte exec_rot () (boolean_dup print_integer boolean_pop boolean_shove exec_y () exec_while (exec_dup_items integer_empty integer_dup boolean_flush -62) exec_do*range (exec_swap (integer_inc integer_dup_items boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ())) ()))
Lexicase best errors: [0 0 1 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 44
Percent parens: 0.273
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Zero cases best program: (in3 integer_yank integer_dup exec_dup_items boolean_pop in1 integer_min exec_if (integer_swap boolean_pop) (integer_lte exec_rot () (boolean_dup print_integer boolean_pop boolean_shove exec_y () exec_while (exec_dup_items integer_empty integer_dup boolean_flush -62) exec_do*range (exec_swap (integer_inc integer_dup_items boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ())) ()))
Zero cases best errors: [0 0 1 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 44
Percent parens: 0.273
--- Lexicase Population Statistics ---
Count of elite individuals by case: (263 578 64 201 311 199 306 306 306 578)
Population mean number of elite cases: 3.11
Count of perfect (error zero) individuals by case: (263 578 64 201 311 199 306 306 306 578)
Population mean number of perfect (error zero) cases: 3.11
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Best program: (in3 integer_yank integer_dup exec_dup_items boolean_pop in1 integer_min exec_if (integer_swap boolean_pop) (integer_lte exec_rot () (boolean_dup print_integer boolean_pop boolean_shove exec_y () exec_while (exec_dup_items integer_empty integer_dup boolean_flush -62) exec_do*range (exec_swap (integer_inc integer_dup_items boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ())) ()))
Errors: [0 0 1 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 32
Size: 44
Percent parens: 0.273
--- Population Statistics ---
Average total errors in population: 6.888
Median total errors in population: 6
Error averages by case: (0.737 0.422 0.936 0.799 0.689 0.801 0.694 0.694 0.694 0.422)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 58.681
Average program size in population (points): 77.871
Average percent parens in population: 0.245
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 5
Genome diversity (% unique genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 5
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.009
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.181
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 957784
--- Timings ---
Current time: 1559594140361 milliseconds
Total Time:           4.4 seconds
Initialization:       0.1 seconds,  2.5%
Reproduction:         1.8 seconds, 40.1%
Fitness Testing:      2.1 seconds, 47.0%
Report:               0.5 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 416
Test mean error for best: 0.41600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 93                 
Correct output: -58                 | Program output: -58                
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: -92                
Correct output: -55                 | Program output: 83                 
Correct output: -96                 | Program output: -96                
Correct output: -27                 | Program output: -27                
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 55                 
Correct output: 2                   | Program output: 4                  
Correct output: 12                  | Program output: 12                 
Correct output: 17                  | Program output: 41                 
Correct output: 3                   | Program output: 8                  
Correct output: 0                   | Program output: 42                 
Correct output: 17                  | Program output: 55                 
Correct output: 23                  | Program output: 23                 
Correct output: 3                   | Program output: 3                  
Correct output: 21                  | Program output: 21                 
Correct output: 47                  | Program output: 71                 
Correct output: 58                  | Program output: 58                 
Correct output: 44                  | Program output: 95                 
Correct output: 38                  | Program output: 47                 
Correct output: 2                   | Program output: 31                 
Correct output: 23                  | Program output: 31                 
Correct output: 21                  | Program output: 21                 
Correct output: 15                  | Program output: 15                 
Correct output: 8                   | Program output: 8                  
Correct output: 1                   | Program output: 1                  
Correct output: -86                 | Program output: 3                  
Correct output: -77                 | Program output: -77                
Correct output: -69                 | Program output: 3                  
Correct output: -45                 | Program output: 0                  
Correct output: -34                 | Program output: -34                
Correct output: -43                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: 28                 
Correct output: -66                 | Program output: -49                
Correct output: -90                 | Program output: 7                  
Correct output: -98                 | Program output: -35                
Correct output: -53                 | Program output: -28                
Correct output: -31                 | Program output: -31                
Correct output: -2                  | Program output: -2                 
Correct output: -68                 | Program output: -4                 
Correct output: -85                 | Program output: -8                 
Correct output: -97                 | Program output: -63                
Correct output: 11                  | Program output: 11                 
Correct output: -93                 | Program output: -46                
Correct output: -58                 | Program output: -58                
Correct output: -78                 | Program output: -65                
Correct output: -98                 | Program output: 24                 
Correct output: -77                 | Program output: -2                 
Correct output: -58                 | Program output: -58                
Correct output: -79                 | Program output: 44                 
Correct output: -39                 | Program output: 15                 
Correct output: -91                 | Program output: -91                
Correct output: -96                 | Program output: -96                
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -74                 | Program output: 5                  
Correct output: -64                 | Program output: -64                
Correct output: -70                 | Program output: -70                
Correct output: -20                 | Program output: 6                  
Correct output: -100                | Program output: -13                
Correct output: -53                 | Program output: -10                
Correct output: -42                 | Program output: -42                
Correct output: 1                   | Program output: 43                 
Correct output: -97                 | Program output: -49                
Correct output: -56                 | Program output: 20                 
Correct output: 15                  | Program output: 15                 
Correct output: -33                 | Program output: 24                 
Correct output: -74                 | Program output: -74                
Correct output: -99                 | Program output: 60                 
Correct output: -52                 | Program output: -52                
Correct output: -73                 | Program output: -21                
Correct output: -94                 | Program output: 9                  
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -47                
Correct output: -66                 | Program output: -66                
Correct output: -97                 | Program output: -39                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -77                
Correct output: 11                  | Program output: 11                 
Correct output: -22                 | Program output: -1                 
Correct output: -84                 | Program output: 20                 
Correct output: 35                  | Program output: 79                 
Correct output: -55                 | Program output: -5                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 2, :instruction exec_dup} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Lexicase best program: (integer_yank integer_dup exec_dup_items boolean_pop exec_dup () in1 in4 integer_min exec_if (integer_swap boolean_pop) (integer_lte boolean_dup print_integer boolean_shove exec_y () exec_while (boolean_xor exec_dup_items integer_empty integer_dup integer_mult boolean_flush -62) exec_swap (integer_inc integer_dup_items exec_noop boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ()))
Lexicase best errors: [0 0 0 0 0 1 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 42
Percent parens: 0.214
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 2, :instruction exec_dup} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Zero cases best program: (integer_yank integer_dup exec_dup_items boolean_pop exec_dup () in1 in4 integer_min exec_if (integer_swap boolean_pop) (integer_lte boolean_dup print_integer boolean_shove exec_y () exec_while (boolean_xor exec_dup_items integer_empty integer_dup integer_mult boolean_flush -62) exec_swap (integer_inc integer_dup_items exec_noop boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ()))
Zero cases best errors: [0 0 0 0 0 1 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 42
Percent parens: 0.214
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 348 5 5 578 443 330 137 137 524)
Population mean number of elite cases: 2.51
Count of perfect (error zero) individuals by case: (5 348 5 5 578 443 330 137 137 524)
Population mean number of perfect (error zero) cases: 2.51
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 2, :instruction exec_dup} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_flush} {:close 1, :instruction -62} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot})
Best program: (integer_yank integer_dup exec_dup_items boolean_pop exec_dup () in1 in4 integer_min exec_if (integer_swap boolean_pop) (integer_lte boolean_dup print_integer boolean_shove exec_y () exec_while (boolean_xor exec_dup_items integer_empty integer_dup integer_mult boolean_flush -62) exec_swap (integer_inc integer_dup_items exec_noop boolean_rot print_boolean exec_dup_times (in3 boolean_rot)) ()))
Errors: [0 0 0 0 0 1 0 1 1 0]
Total: 3
Mean: 0.3
Genome size: 33
Size: 42
Percent parens: 0.214
--- Population Statistics ---
Average total errors in population: 7.488
Median total errors in population: 7
Error averages by case: (0.995 0.652 0.995 0.995 0.422 0.557 0.67 0.863 0.863 0.476)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 29.186
Average program size in population (points): 40.243
Average percent parens in population: 0.274
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.993
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.993
Total error diversity:				 0.008
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.104
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1494289
--- Timings ---
Current time: 1559594142740 milliseconds
Total Time:           6.9 seconds
Initialization:       0.1 seconds,  1.6%
Reproduction:         2.9 seconds, 42.4%
Fitness Testing:      2.7 seconds, 39.2%
Report:               1.2 seconds, 16.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 410
Test mean error for best: 0.41000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: 55                 
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: 62                 
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -96                
Correct output: -27                 | Program output: -27                
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 58                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 84                 
Correct output: 23                  | Program output: 60                 
Correct output: 3                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 58                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 48                 
Correct output: 2                   | Program output: 55                 
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 21                 
Correct output: 15                  | Program output: 18                 
Correct output: 8                   | Program output: 8                  
Correct output: 1                   | Program output: 1                  
Correct output: -86                 | Program output: 64                 
Correct output: -77                 | Program output: -77                
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: 0                  
Correct output: -34                 | Program output: -34                
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: -49                
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -38                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -13                
Correct output: -2                  | Program output: 33                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -64                
Correct output: 11                  | Program output: 11                 
Correct output: -93                 | Program output: -46                
Correct output: -58                 | Program output: -58                
Correct output: -78                 | Program output: -46                
Correct output: -98                 | Program output: 39                 
Correct output: -77                 | Program output: -11                
Correct output: -58                 | Program output: -13                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -50                
Correct output: -96                 | Program output: 4                  
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -38                
Correct output: -71                 | Program output: -22                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: -64                
Correct output: -70                 | Program output: -35                
Correct output: -20                 | Program output: 16                 
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -37                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -41                
Correct output: -56                 | Program output: -27                
Correct output: 15                  | Program output: 24                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: -74                
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -52                
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -16                
Correct output: -96                 | Program output: -7                 
Correct output: -98                 | Program output: -44                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: 2                  
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: 42                 
Correct output: 11                  | Program output: 47                 
Correct output: -22                 | Program output: 9                  
Correct output: -84                 | Program output: 39                 
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Lexicase best program: (integer_max boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or boolean_dup integer_lt in4 in3) integer_min exec_s_when_autoconstructing () (boolean_flush print_integer integer_mult boolean_yankdup integer_dup exec_flush exec_dup_items boolean_swap exec_s () (exec_eq) ()) ())
Lexicase best errors: [0 0 1 0 0 1 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 33
Percent parens: 0.273
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Zero cases best program: (integer_max boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or boolean_dup integer_lt in4 in3) integer_min exec_s_when_autoconstructing () (boolean_flush print_integer integer_mult boolean_yankdup integer_dup exec_flush exec_dup_items boolean_swap exec_s () (exec_eq) ()) ())
Zero cases best errors: [0 0 1 0 0 1 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 33
Percent parens: 0.273
--- Lexicase Population Statistics ---
Count of elite individuals by case: (366 370 304 315 290 328 298 371 369 368)
Population mean number of elite cases: 3.38
Count of perfect (error zero) individuals by case: (366 370 304 315 290 328 298 371 369 368)
Population mean number of perfect (error zero) cases: 3.38
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Best program: (integer_max boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or integer_lt in4 in3) integer_min exec_s_when_autoconstructing () (boolean_flush print_integer integer_mult boolean_yankdup integer_dup exec_flush boolean_swap exec_s () (exec_eq) ()) ())
Errors: [0 0 1 0 0 1 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 22
Size: 31
Percent parens: 0.290
--- Population Statistics ---
Average total errors in population: 6.621
Median total errors in population: 7
Error averages by case: (0.634 0.63 0.696 0.685 0.71 0.672 0.702 0.629 0.631 0.632)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 28.657
Average program size in population (points): 38.138
Average percent parens in population: 0.250
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.009
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.118
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1973877
--- Timings ---
Current time: 1559594144586 milliseconds
Total Time:           9.1 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.0 seconds, 44.1%
Fitness Testing:      3.3 seconds, 35.7%
Report:               1.7 seconds, 18.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 211
Test mean error for best: 0.21100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: 55                 
Correct output: 95                  | Program output: 95                 
Correct output: -92                 | Program output: 62                 
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -96                
Correct output: -27                 | Program output: -27                
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 58                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 17                 
Correct output: 23                  | Program output: 58                 
Correct output: 3                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 58                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 21                 
Correct output: 15                  | Program output: 18                 
Correct output: 8                   | Program output: 8                  
Correct output: 1                   | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -77                 | Program output: -77                
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: -45                
Correct output: -34                 | Program output: -34                
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: -66                
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -98                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -13                
Correct output: -2                  | Program output: 31                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -97                
Correct output: 11                  | Program output: 11                 
Correct output: -93                 | Program output: -93                
Correct output: -58                 | Program output: -58                
Correct output: -78                 | Program output: -78                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -77                
Correct output: -58                 | Program output: -27                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -50                
Correct output: -96                 | Program output: -58                
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -38                
Correct output: -71                 | Program output: -65                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: -64                
Correct output: -70                 | Program output: -35                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -38                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -56                
Correct output: 15                  | Program output: 24                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: -74                
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -52                
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -94                
Correct output: -96                 | Program output: -24                
Correct output: -98                 | Program output: -44                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: 2                  
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -53                
Correct output: 11                  | Program output: 47                 
Correct output: -22                 | Program output: -22                
Correct output: -84                 | Program output: -84                
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup})
Lexicase best program: (integer_max boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or in4 in3) integer_min integer_min exec_s_when_autoconstructing () (boolean_flush exec_y_when_autoconstructing (print_integer integer_mult boolean_yankdup integer_dup exec_flush exec_dup_items boolean_swap exec_eq boolean_dup)) ())
Lexicase best errors: [0 0 0 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 31
Percent parens: 0.226
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup})
Zero cases best program: (integer_max boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or in4 in3) integer_min integer_min exec_s_when_autoconstructing () (boolean_flush exec_y_when_autoconstructing (print_integer integer_mult boolean_yankdup integer_dup exec_flush exec_dup_items boolean_swap exec_eq boolean_dup)) ())
Zero cases best errors: [0 0 0 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 31
Percent parens: 0.226
--- Lexicase Population Statistics ---
Count of elite individuals by case: (53 490 393 394 273 394 393 394 378 392)
Population mean number of elite cases: 3.55
Count of perfect (error zero) individuals by case: (53 490 393 394 273 394 393 394 378 392)
Population mean number of perfect (error zero) cases: 3.55
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Best program: (integer_max integer_dup_items boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or integer_lt in4 in3) integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup integer_dup exec_flush boolean_swap exec_s () (exec_eq) ()) ())
Errors: [0 0 0 0 1 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 24
Size: 33
Percent parens: 0.273
--- Population Statistics ---
Average total errors in population: 6.446
Median total errors in population: 8
Error averages by case: (0.947 0.51 0.607 0.606 0.727 0.606 0.607 0.606 0.622 0.608)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 28.091
Average program size in population (points): 37.589
Average percent parens in population: 0.253
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.01
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.133
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2392354
--- Timings ---
Current time: 1559594146362 milliseconds
Total Time:          10.9 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.1 seconds, 47.1%
Fitness Testing:      3.7 seconds, 34.2%
Report:               1.9 seconds, 17.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 195
Test mean error for best: 0.19500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: -58                
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: -92                
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -96                
Correct output: -27                 | Program output: -27                
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 55                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 55                 
Correct output: 23                  | Program output: 23                 
Correct output: 3                   | Program output: 3                  
Correct output: 21                  | Program output: 21                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 58                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 47                 
Correct output: 2                   | Program output: 31                 
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 21                 
Correct output: 15                  | Program output: 15                 
Correct output: 8                   | Program output: 8                  
Correct output: 1                   | Program output: 1                  
Correct output: -86                 | Program output: 3                  
Correct output: -77                 | Program output: -77                
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: 0                  
Correct output: -34                 | Program output: -34                
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: -49                
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -38                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -2                  | Program output: -2                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -64                
Correct output: 11                  | Program output: 11                 
Correct output: -93                 | Program output: -46                
Correct output: -58                 | Program output: -58                
Correct output: -78                 | Program output: -65                
Correct output: -98                 | Program output: 24                 
Correct output: -77                 | Program output: -11                
Correct output: -58                 | Program output: -58                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -91                
Correct output: -96                 | Program output: -96                
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: -64                
Correct output: -70                 | Program output: -70                
Correct output: -20                 | Program output: 6                  
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -42                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -49                
Correct output: -56                 | Program output: -27                
Correct output: 15                  | Program output: 15                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: -74                
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -52                
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -16                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: -66                
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -77                
Correct output: 11                  | Program output: 11                 
Correct output: -22                 | Program output: -1                 
Correct output: -84                 | Program output: 20                 
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_yank} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup})
Lexicase best program: (integer_max boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or in1 in4 in3) integer_min integer_min exec_s_when_autoconstructing () (boolean_flush exec_y_when_autoconstructing (print_integer integer_mult boolean_yankdup integer_dup exec_yank) boolean_swap exec_eq boolean_dup) ())
Lexicase best errors: [0 0 0 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 31
Percent parens: 0.226
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_yank} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup})
Zero cases best program: (integer_max boolean_shove integer_eq exec_yankdup boolean_rot exec_if (in2) (boolean_or in1 in4 in3) integer_min integer_min exec_s_when_autoconstructing () (boolean_flush exec_y_when_autoconstructing (print_integer integer_mult boolean_yankdup integer_dup exec_yank) boolean_swap exec_eq boolean_dup) ())
Zero cases best errors: [0 0 0 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 31
Percent parens: 0.226
--- Lexicase Population Statistics ---
Count of elite individuals by case: (177 566 178 531 565 408 348 349 179 536)
Population mean number of elite cases: 3.84
Count of perfect (error zero) individuals by case: (177 566 178 531 565 408 348 349 179 536)
Population mean number of perfect (error zero) cases: 3.84
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Best program: (integer_max integer_dup_items boolean_shove boolean_invert_second_then_and exec_yankdup boolean_rot exec_if (in2) (boolean_or integer_lt in4 in1 in3) integer_min boolean_yank integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup integer_dup exec_flush boolean_swap exec_s () (exec_eq) ()) ())
Errors: [0 0 0 0 0 0 1 1 0 0]
Total: 2
Mean: 0.2
Genome size: 26
Size: 35
Percent parens: 0.257
--- Population Statistics ---
Average total errors in population: 6.163
Median total errors in population: 6
Error averages by case: (0.823 0.434 0.822 0.469 0.435 0.592 0.652 0.651 0.821 0.464)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 26.916
Average program size in population (points): 36.233
Average percent parens in population: 0.254
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 11
Genome diversity (% unique genomes):	 0.982
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.982
Total error diversity:				 0.009
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2744288
--- Timings ---
Current time: 1559594148032 milliseconds
Total Time:          12.5 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         6.2 seconds, 49.5%
Fitness Testing:      4.1 seconds, 32.6%
Report:               2.1 seconds, 17.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 195
Test mean error for best: 0.19500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: -58                
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: -92                
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -96                
Correct output: -27                 | Program output: -27                
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 55                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 55                 
Correct output: 23                  | Program output: 23                 
Correct output: 3                   | Program output: 3                  
Correct output: 21                  | Program output: 21                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 58                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 47                 
Correct output: 2                   | Program output: 31                 
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 21                 
Correct output: 15                  | Program output: 15                 
Correct output: 8                   | Program output: 8                  
Correct output: 1                   | Program output: 1                  
Correct output: -86                 | Program output: 3                  
Correct output: -77                 | Program output: -77                
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: 0                  
Correct output: -34                 | Program output: -34                
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: -49                
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -38                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -2                  | Program output: -2                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -64                
Correct output: 11                  | Program output: 11                 
Correct output: -93                 | Program output: -46                
Correct output: -58                 | Program output: -58                
Correct output: -78                 | Program output: -65                
Correct output: -98                 | Program output: 24                 
Correct output: -77                 | Program output: -11                
Correct output: -58                 | Program output: -58                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -91                
Correct output: -96                 | Program output: -96                
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: -64                
Correct output: -70                 | Program output: -70                
Correct output: -20                 | Program output: 6                  
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -42                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -49                
Correct output: -56                 | Program output: -27                
Correct output: 15                  | Program output: 15                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: -74                
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -52                
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -16                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: -66                
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -77                
Correct output: 11                  | Program output: 11                 
Correct output: -22                 | Program output: -1                 
Correct output: -84                 | Program output: 20                 
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in1} {:close 1, :instruction in2} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Lexicase best program: (integer_max integer_dup_items boolean_shove integer_eq exec_yankdup exec_do*while (boolean_rot exec_if (boolean_or integer_lt in1 in2) (in3) integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_pop (exec_flush boolean_swap exec_s () (exec_eq) ())) ()))
Lexicase best errors: [0 0 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 36
Percent parens: 0.306
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in1} {:close 1, :instruction in2} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Zero cases best program: (integer_max integer_dup_items boolean_shove integer_eq exec_yankdup exec_do*while (boolean_rot exec_if (boolean_or integer_lt in1 in2) (in3) integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_pop (exec_flush boolean_swap exec_s () (exec_eq) ())) ()))
Zero cases best errors: [0 0 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 36
Percent parens: 0.306
--- Lexicase Population Statistics ---
Count of elite individuals by case: (335 591 329 738 296 569 341 589 602 337)
Population mean number of elite cases: 4.73
Count of perfect (error zero) individuals by case: (335 591 329 738 296 569 341 589 602 337)
Population mean number of perfect (error zero) cases: 4.73
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Best program: (integer_max integer_inc boolean_invert_second_then_and exec_yankdup boolean_rot exec_if (in2) (boolean_or integer_lt in4 in1 in3) integer_min boolean_yank integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq integer_dup exec_flush exec_s () (boolean_swap exec_s () (exec_eq) ()) ()) ())
Errors: [0 0 0 0 1 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 25
Size: 37
Percent parens: 0.324
--- Population Statistics ---
Average total errors in population: 5.273
Median total errors in population: 5
Error averages by case: (0.665 0.409 0.671 0.262 0.704 0.431 0.659 0.411 0.398 0.663)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 23.94
Average program size in population (points): 31.633
Average percent parens in population: 0.238
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.992
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.992
Total error diversity:				 0.01
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2970454
--- Timings ---
Current time: 1559594149560 milliseconds
Total Time:          14.1 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         7.3 seconds, 51.9%
Fitness Testing:      4.3 seconds, 30.6%
Report:               2.4 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 213
Test mean error for best: 0.21300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: -58                
Correct output: 95                  | Program output: 95                 
Correct output: -92                 | Program output: -92                
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -28                
Correct output: -27                 | Program output: 81                 
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 55                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 28                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 17                 
Correct output: 23                  | Program output: 23                 
Correct output: 3                   | Program output: 3                  
Correct output: 21                  | Program output: 46                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 73                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 38                 
Correct output: 2                   | Program output: 2                  
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 28                 
Correct output: 15                  | Program output: 15                 
Correct output: 8                   | Program output: 23                 
Correct output: 1                   | Program output: 54                 
Correct output: -86                 | Program output: -86                
Correct output: -77                 | Program output: 75                 
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: -45                
Correct output: -34                 | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: -66                
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -98                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -2                  | Program output: -2                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -97                
Correct output: 11                  | Program output: 15                 
Correct output: -93                 | Program output: -93                
Correct output: -58                 | Program output: -21                
Correct output: -78                 | Program output: -78                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -77                
Correct output: -58                 | Program output: -58                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -91                
Correct output: -96                 | Program output: -96                
Correct output: -85                 | Program output: 69                 
Correct output: -54                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: 4                  
Correct output: -70                 | Program output: -70                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -42                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -56                
Correct output: 15                  | Program output: 15                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: -71                
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -2                 
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -94                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: -66                
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -76                
Correct output: -77                 | Program output: -77                
Correct output: 11                  | Program output: 11                 
Correct output: -22                 | Program output: -22                
Correct output: -84                 | Program output: -84                
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_flush} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Lexicase best program: (integer_max integer_dup_items boolean_shove exec_noop integer_eq exec_yankdup boolean_rot exec_if (boolean_or integer_lt in4 in1 boolean_yankdup in3) (integer_min integer_min exec_swap () (print_integer boolean_eq boolean_yankdup exec_flush exec_s () (exec_eq) ())))
Lexicase best errors: [0 0 0 0 0 1 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 31
Percent parens: 0.258
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_flush} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Zero cases best program: (integer_max integer_dup_items boolean_shove exec_noop integer_eq exec_yankdup boolean_rot exec_if (boolean_or integer_lt in4 in1 boolean_yankdup in3) (integer_min integer_min exec_swap () (print_integer boolean_eq boolean_yankdup exec_flush exec_s () (exec_eq) ())))
Zero cases best errors: [0 0 0 0 0 1 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 31
Percent parens: 0.258
--- Lexicase Population Statistics ---
Count of elite individuals by case: (517 523 534 562 497 349 324 516 561 536)
Population mean number of elite cases: 4.92
Count of perfect (error zero) individuals by case: (517 523 534 562 497 349 324 516 561 536)
Population mean number of perfect (error zero) cases: 4.92
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in1} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_yank} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Best program: (integer_max integer_dup_items boolean_shove boolean_invert_second_then_and exec_yankdup boolean_rot exec_if (in2) (boolean_or integer_lt in1 in3) integer_min boolean_yank boolean_yankdup integer_min boolean_flush print_integer boolean_eq integer_dup exec_flush boolean_swap exec_s () (exec_eq) ())
Errors: [0 0 0 0 0 0 1 0 0 0]
Total: 1
Mean: 0.1
Genome size: 24
Size: 30
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 5.081
Median total errors in population: 5
Error averages by case: (0.483 0.477 0.466 0.438 0.503 0.651 0.676 0.484 0.439 0.464)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 23.815
Average program size in population (points): 31.317
Average percent parens in population: 0.233
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.997
Total error diversity:				 0.01
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 3206138
--- Timings ---
Current time: 1559594151107 milliseconds
Total Time:          15.6 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         8.4 seconds, 53.8%
Fitness Testing:      4.5 seconds, 29.1%
Report:               2.6 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 195
Test mean error for best: 0.19500
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 1
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 1
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 1
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 1
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 1
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 1
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 1
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 1
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 1
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 1
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 0
Test Case  402 | Error: 1
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 0
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 1
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 1
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 1
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 1
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 1
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 1
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 1
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 1
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 1
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 0
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 1
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 1
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 1
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 1
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 1
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 1
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 1
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 1
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 1
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 1
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 1
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 1
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: -58                
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: -92                
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -96                
Correct output: -27                 | Program output: -27                
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 55                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 55                 
Correct output: 23                  | Program output: 23                 
Correct output: 3                   | Program output: 3                  
Correct output: 21                  | Program output: 21                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 58                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 47                 
Correct output: 2                   | Program output: 31                 
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 21                 
Correct output: 15                  | Program output: 15                 
Correct output: 8                   | Program output: 8                  
Correct output: 1                   | Program output: 1                  
Correct output: -86                 | Program output: 3                  
Correct output: -77                 | Program output: -77                
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: 0                  
Correct output: -34                 | Program output: -34                
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: -49                
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -38                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -2                  | Program output: -2                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -64                
Correct output: 11                  | Program output: 11                 
Correct output: -93                 | Program output: -46                
Correct output: -58                 | Program output: -58                
Correct output: -78                 | Program output: -65                
Correct output: -98                 | Program output: 24                 
Correct output: -77                 | Program output: -11                
Correct output: -58                 | Program output: -58                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -91                
Correct output: -96                 | Program output: -96                
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: -64                
Correct output: -70                 | Program output: -70                
Correct output: -20                 | Program output: 6                  
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -42                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -49                
Correct output: -56                 | Program output: -27                
Correct output: 15                  | Program output: 15                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: -74                
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -52                
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -16                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: -66                
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -77                
Correct output: 11                  | Program output: 11                 
Correct output: -22                 | Program output: -1                 
Correct output: -84                 | Program output: 20                 
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Lexicase best program: (integer_max integer_dup_items boolean_shove exec_do*times (boolean_rot exec_if (boolean_or integer_lt integer_max in4 in1 in3) (integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq exec_dup (boolean_yankdup exec_flush exec_do*times (boolean_swap exec_s () (exec_eq) ()))) ())))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 37
Percent parens: 0.324
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction exec_eq})
Zero cases best program: (integer_max integer_dup_items boolean_shove exec_do*times (boolean_rot exec_if (boolean_or integer_lt integer_max in4 in1 in3) (integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq exec_dup (boolean_yankdup exec_flush exec_do*times (boolean_swap exec_s () (exec_eq) ()))) ())))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 37
Percent parens: 0.324
--- Lexicase Population Statistics ---
Count of elite individuals by case: (695 594 338 331 618 734 614 520 520 331)
Population mean number of elite cases: 5.30
Count of perfect (error zero) individuals by case: (695 594 338 331 618 734 614 520 520 331)
Population mean number of perfect (error zero) cases: 5.30
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_max} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 1, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_eq})
Best program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 25
Size: 32
Percent parens: 0.219
--- Population Statistics ---
Average total errors in population: 4.705
Median total errors in population: 3
Error averages by case: (0.305 0.406 0.662 0.669 0.382 0.266 0.386 0.48 0.48 0.669)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 23.839
Average program size in population (points): 31.669
Average percent parens in population: 0.241
Minimum age in population: 8.0
Maximum age in population: 8.0
Average age in population: 8.0
Median age in population: 8.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.01
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.135
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 3450752
--- Timings ---
Current time: 1559594152672 milliseconds
Total Time:          17.2 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         9.5 seconds, 55.4%
Fitness Testing:      4.8 seconds, 27.9%
Report:               2.8 seconds, 16.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 8
Successful program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 32


Auto-simplifying with starting size: 32
step: 0
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 500
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 1000
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 1500
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 2000
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 2500
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 3000
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 3500
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 4000
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 4500
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

step: 5000
program: (integer_max integer_max boolean_invert_second_then_and integer_dup_items boolean_shove integer_eq boolean_rot boolean_dup_items boolean_or integer_lt in4 in1 in3 integer_min integer_min exec_s_when_autoconstructing () (boolean_flush print_integer boolean_eq boolean_yankdup exec_flush boolean_swap exec_s () (boolean_flush exec_eq) ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 32

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 195
Test mean error for best: 0.19500
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 1
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 1
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 1
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 1
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 1
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 1
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 1
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 1
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 1
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 1
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 0
Test Case  402 | Error: 1
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 0
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 1
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 1
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 1
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 1
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 1
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 1
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 1
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 1
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 1
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 0
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 1
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 1
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 1
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 1
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 1
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 1
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 1
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 1
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 1
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 1
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 1
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 1
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -30                 | Program output: -30                
Correct output: 65                  | Program output: 65                 
Correct output: -58                 | Program output: -58                
Correct output: 95                  | Program output: 96                 
Correct output: -92                 | Program output: -92                
Correct output: -55                 | Program output: -55                
Correct output: -96                 | Program output: -96                
Correct output: -27                 | Program output: -27                
Correct output: -93                 | Program output: -93                
Correct output: -31                 | Program output: -31                
Correct output: -37                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: 4                   | Program output: 4                  
Correct output: -64                 | Program output: -64                
Correct output: 36                  | Program output: 36                 
Correct output: 55                  | Program output: 55                 
Correct output: 2                   | Program output: 2                  
Correct output: 12                  | Program output: 12                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 55                 
Correct output: 23                  | Program output: 23                 
Correct output: 3                   | Program output: 3                  
Correct output: 21                  | Program output: 21                 
Correct output: 47                  | Program output: 47                 
Correct output: 58                  | Program output: 58                 
Correct output: 44                  | Program output: 44                 
Correct output: 38                  | Program output: 47                 
Correct output: 2                   | Program output: 31                 
Correct output: 23                  | Program output: 23                 
Correct output: 21                  | Program output: 21                 
Correct output: 15                  | Program output: 15                 
Correct output: 8                   | Program output: 8                  
Correct output: 1                   | Program output: 1                  
Correct output: -86                 | Program output: 3                  
Correct output: -77                 | Program output: -77                
Correct output: -69                 | Program output: -69                
Correct output: -45                 | Program output: 0                  
Correct output: -34                 | Program output: -34                
Correct output: -43                 | Program output: -43                
Correct output: -34                 | Program output: -34                
Correct output: -51                 | Program output: -51                
Correct output: -66                 | Program output: -49                
Correct output: -90                 | Program output: -90                
Correct output: -98                 | Program output: -38                
Correct output: -53                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -2                  | Program output: -2                 
Correct output: -68                 | Program output: -68                
Correct output: -85                 | Program output: -85                
Correct output: -97                 | Program output: -64                
Correct output: 11                  | Program output: 11                 
Correct output: -93                 | Program output: -46                
Correct output: -58                 | Program output: -58                
Correct output: -78                 | Program output: -65                
Correct output: -98                 | Program output: 24                 
Correct output: -77                 | Program output: -11                
Correct output: -58                 | Program output: -58                
Correct output: -79                 | Program output: -79                
Correct output: -39                 | Program output: -39                
Correct output: -91                 | Program output: -91                
Correct output: -96                 | Program output: -96                
Correct output: -85                 | Program output: -85                
Correct output: -54                 | Program output: -54                
Correct output: -71                 | Program output: -71                
Correct output: -74                 | Program output: -74                
Correct output: -64                 | Program output: -64                
Correct output: -70                 | Program output: -70                
Correct output: -20                 | Program output: 6                  
Correct output: -100                | Program output: -100               
Correct output: -53                 | Program output: -53                
Correct output: -42                 | Program output: -42                
Correct output: 1                   | Program output: 1                  
Correct output: -97                 | Program output: -49                
Correct output: -56                 | Program output: -27                
Correct output: 15                  | Program output: 15                 
Correct output: -33                 | Program output: -33                
Correct output: -74                 | Program output: -74                
Correct output: -99                 | Program output: -99                
Correct output: -52                 | Program output: -52                
Correct output: -73                 | Program output: -73                
Correct output: -94                 | Program output: -16                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
Correct output: -89                 | Program output: -89                
Correct output: -66                 | Program output: -66                
Correct output: -97                 | Program output: -97                
Correct output: -98                 | Program output: -98                
Correct output: -77                 | Program output: -77                
Correct output: 11                  | Program output: 11                 
Correct output: -22                 | Program output: -1                 
Correct output: -84                 | Program output: 20                 
Correct output: 35                  | Program output: 35                 
Correct output: -55                 | Program output: -55                
;;******************************
