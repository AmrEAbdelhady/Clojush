Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-49 -59 -49 -49] -59] [[-41 -41 -41 95] -41] [[-35 -35 -35 79] -35] [[-71 -71 -71 97] -71] [[-40 -100 -100 -100] -100] [[66 -11 66 66] -11] [[45 -22 -22 -22] -22] [[-41 -41 42 -41] -41] [[-18 57 -18 -18] -18] [[-35 84 84 84] -35] [(-35 -35 -35 -35) -35] [(-24 -24 -24 -24) -24] [(62 62 62 62) 62] [(-61 -61 -61 -61) -61] [(13 13 13 13) 13] [(32 52 98 41) 32] [(81 88 98 41) 41] [(73 62 93 35) 35] [(92 9 76 29) 9] [(91 70 97 51) 51] [(42 82 12 98) 12] [(25 100 52 85) 25] [(47 67 34 50) 34] [(20 11 21 8) 8] [(27 8 74 75) 8] [(52 9 38 51) 9] [(35 13 74 4) 4] [(94 63 29 55) 29] [(81 9 84 42) 9] [(69 79 77 17) 17] [(80 0 94 30) 0] [(68 10 28 5) 5] [(59 39 10 15) 10] [(20 79 9 69) 9] [(14 40 80 62) 14] [(-40 -36 -48 -70) -70] [(-26 48 -27 63) -27] [(55 -35 12 -7) -35] [(-79 -4 -20 -84) -84] [(9 40 -93 26) -93] [(55 12 -4 -53) -53] [(24 -46 12 -97) -97] [(-77 86 -33 26) -77] [(-31 70 63 -94) -94] [(39 92 -25 -41) -41] [(52 15 44 8) 8] [(-30 35 -98 27) -98] [(54 -67 77 -61) -67] [(40 53 75 -90) -90] [(-15 -47 -9 42) -47] [(-20 -42 -80 63) -80] [(-41 -76 34 -17) -76] [(-27 -79 68 95) -79] [(-48 -62 19 81) -62] [(2 -31 -13 8) -31] [(89 91 -34 5) -34] [(-76 -93 51 -60) -93] [(-13 -42 100 78) -42] [(-24 58 -11 -74) -74] [(6 -21 9 10) -21] [(-64 77 -35 88) -64] [(-94 -45 79 98) -94] [(-88 -34 -12 -62) -88] [(60 -68 47 85) -68] [(-96 4 41 46) -96] [(-37 40 71 35) -37] [(-40 45 -78 66) -78] [(93 63 90 11) 11] [(50 53 62 -79) -79] [(-40 -92 55 63) -92] [(-31 26 87 31) -31] [(96 -68 -27 -32) -68] [(95 95 -21 -22) -22] [(-65 66 -3 -59) -65] [(87 59 -98 -93) -98] [(57 30 76 -41) -41] [(-75 13 49 0) -75] [(87 -74 -36 71) -74] [(-76 -7 -22 23) -76] [(-52 -53 -19 100) -53] [(-51 44 -7 2) -51] [(-49 -18 12 58) -49] [(16 -94 -93 -70) -94] [(-52 -58 64 -74) -74] [(96 -63 94 -86) -86] [(-51 -50 -31 21) -51] [(-84 -47 21 71) -84] [(-63 -66 -12 67) -66] [(54 88 -13 34) -13] [(72 25 -68 15) -68] [(37 -54 -42 89) -54] [(93 19 73 -94) -94] [(-83 55 -58 28) -83] [(-91 -86 20 -99) -99] [(-91 83 -24 28) -91])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-49 -59 -49 -49] -59]
Train Case:   6 | Input/Output: [[-41 -41 -41 95] -41]
Train Case:   7 | Input/Output: [[-35 -35 -35 79] -35]
Train Case:   8 | Input/Output: [[-71 -71 -71 97] -71]
Train Case:   9 | Input/Output: [[-40 -100 -100 -100] -100]
Train Case:  10 | Input/Output: [[66 -11 66 66] -11]
Train Case:  11 | Input/Output: [[45 -22 -22 -22] -22]
Train Case:  12 | Input/Output: [[-41 -41 42 -41] -41]
Train Case:  13 | Input/Output: [[-18 57 -18 -18] -18]
Train Case:  14 | Input/Output: [[-35 84 84 84] -35]
Train Case:  15 | Input/Output: [(-35 -35 -35 -35) -35]
Train Case:  16 | Input/Output: [(-24 -24 -24 -24) -24]
Train Case:  17 | Input/Output: [(62 62 62 62) 62]
Train Case:  18 | Input/Output: [(-61 -61 -61 -61) -61]
Train Case:  19 | Input/Output: [(13 13 13 13) 13]
Train Case:  20 | Input/Output: [(32 52 98 41) 32]
Train Case:  21 | Input/Output: [(81 88 98 41) 41]
Train Case:  22 | Input/Output: [(73 62 93 35) 35]
Train Case:  23 | Input/Output: [(92 9 76 29) 9]
Train Case:  24 | Input/Output: [(91 70 97 51) 51]
Train Case:  25 | Input/Output: [(42 82 12 98) 12]
Train Case:  26 | Input/Output: [(25 100 52 85) 25]
Train Case:  27 | Input/Output: [(47 67 34 50) 34]
Train Case:  28 | Input/Output: [(20 11 21 8) 8]
Train Case:  29 | Input/Output: [(27 8 74 75) 8]
Train Case:  30 | Input/Output: [(52 9 38 51) 9]
Train Case:  31 | Input/Output: [(35 13 74 4) 4]
Train Case:  32 | Input/Output: [(94 63 29 55) 29]
Train Case:  33 | Input/Output: [(81 9 84 42) 9]
Train Case:  34 | Input/Output: [(69 79 77 17) 17]
Train Case:  35 | Input/Output: [(80 0 94 30) 0]
Train Case:  36 | Input/Output: [(68 10 28 5) 5]
Train Case:  37 | Input/Output: [(59 39 10 15) 10]
Train Case:  38 | Input/Output: [(20 79 9 69) 9]
Train Case:  39 | Input/Output: [(14 40 80 62) 14]
Train Case:  40 | Input/Output: [(-40 -36 -48 -70) -70]
Train Case:  41 | Input/Output: [(-26 48 -27 63) -27]
Train Case:  42 | Input/Output: [(55 -35 12 -7) -35]
Train Case:  43 | Input/Output: [(-79 -4 -20 -84) -84]
Train Case:  44 | Input/Output: [(9 40 -93 26) -93]
Train Case:  45 | Input/Output: [(55 12 -4 -53) -53]
Train Case:  46 | Input/Output: [(24 -46 12 -97) -97]
Train Case:  47 | Input/Output: [(-77 86 -33 26) -77]
Train Case:  48 | Input/Output: [(-31 70 63 -94) -94]
Train Case:  49 | Input/Output: [(39 92 -25 -41) -41]
Train Case:  50 | Input/Output: [(52 15 44 8) 8]
Train Case:  51 | Input/Output: [(-30 35 -98 27) -98]
Train Case:  52 | Input/Output: [(54 -67 77 -61) -67]
Train Case:  53 | Input/Output: [(40 53 75 -90) -90]
Train Case:  54 | Input/Output: [(-15 -47 -9 42) -47]
Train Case:  55 | Input/Output: [(-20 -42 -80 63) -80]
Train Case:  56 | Input/Output: [(-41 -76 34 -17) -76]
Train Case:  57 | Input/Output: [(-27 -79 68 95) -79]
Train Case:  58 | Input/Output: [(-48 -62 19 81) -62]
Train Case:  59 | Input/Output: [(2 -31 -13 8) -31]
Train Case:  60 | Input/Output: [(89 91 -34 5) -34]
Train Case:  61 | Input/Output: [(-76 -93 51 -60) -93]
Train Case:  62 | Input/Output: [(-13 -42 100 78) -42]
Train Case:  63 | Input/Output: [(-24 58 -11 -74) -74]
Train Case:  64 | Input/Output: [(6 -21 9 10) -21]
Train Case:  65 | Input/Output: [(-64 77 -35 88) -64]
Train Case:  66 | Input/Output: [(-94 -45 79 98) -94]
Train Case:  67 | Input/Output: [(-88 -34 -12 -62) -88]
Train Case:  68 | Input/Output: [(60 -68 47 85) -68]
Train Case:  69 | Input/Output: [(-96 4 41 46) -96]
Train Case:  70 | Input/Output: [(-37 40 71 35) -37]
Train Case:  71 | Input/Output: [(-40 45 -78 66) -78]
Train Case:  72 | Input/Output: [(93 63 90 11) 11]
Train Case:  73 | Input/Output: [(50 53 62 -79) -79]
Train Case:  74 | Input/Output: [(-40 -92 55 63) -92]
Train Case:  75 | Input/Output: [(-31 26 87 31) -31]
Train Case:  76 | Input/Output: [(96 -68 -27 -32) -68]
Train Case:  77 | Input/Output: [(95 95 -21 -22) -22]
Train Case:  78 | Input/Output: [(-65 66 -3 -59) -65]
Train Case:  79 | Input/Output: [(87 59 -98 -93) -98]
Train Case:  80 | Input/Output: [(57 30 76 -41) -41]
Train Case:  81 | Input/Output: [(-75 13 49 0) -75]
Train Case:  82 | Input/Output: [(87 -74 -36 71) -74]
Train Case:  83 | Input/Output: [(-76 -7 -22 23) -76]
Train Case:  84 | Input/Output: [(-52 -53 -19 100) -53]
Train Case:  85 | Input/Output: [(-51 44 -7 2) -51]
Train Case:  86 | Input/Output: [(-49 -18 12 58) -49]
Train Case:  87 | Input/Output: [(16 -94 -93 -70) -94]
Train Case:  88 | Input/Output: [(-52 -58 64 -74) -74]
Train Case:  89 | Input/Output: [(96 -63 94 -86) -86]
Train Case:  90 | Input/Output: [(-51 -50 -31 21) -51]
Train Case:  91 | Input/Output: [(-84 -47 21 71) -84]
Train Case:  92 | Input/Output: [(-63 -66 -12 67) -66]
Train Case:  93 | Input/Output: [(54 88 -13 34) -13]
Train Case:  94 | Input/Output: [(72 25 -68 15) -68]
Train Case:  95 | Input/Output: [(37 -54 -42 89) -54]
Train Case:  96 | Input/Output: [(93 19 73 -94) -94]
Train Case:  97 | Input/Output: [(-83 55 -58 28) -83]
Train Case:  98 | Input/Output: [(-91 -86 20 -99) -99]
Train Case:  99 | Input/Output: [(-91 83 -24 28) -91]
Test Case:   0 | Input/Output: [[83 -96 -96 -96] -96]
Test Case:   1 | Input/Output: [[95 -49 95 95] -49]
Test Case:   2 | Input/Output: [[-44 -44 -44 -76] -76]
Test Case:   3 | Input/Output: [[34 34 34 -12] -12]
Test Case:   4 | Input/Output: [[-95 -38 -95 -95] -95]
Test Case:   5 | Input/Output: [[-26 -26 -26 -42] -42]
Test Case:   6 | Input/Output: [[-40 -40 4 -40] -40]
Test Case:   7 | Input/Output: [[-42 -26 -42 -42] -42]
Test Case:   8 | Input/Output: [[33 -35 -35 -35] -35]
Test Case:   9 | Input/Output: [[41 41 -36 41] -36]
Test Case:  10 | Input/Output: [[84 84 84 -23] -23]
Test Case:  11 | Input/Output: [[89 -28 -28 -28] -28]
Test Case:  12 | Input/Output: [[-60 -17 -60 -60] -60]
Test Case:  13 | Input/Output: [[51 -99 -99 -99] -99]
Test Case:  14 | Input/Output: [[-43 -43 -69 -43] -69]
Test Case:  15 | Input/Output: [[47 -40 47 47] -40]
Test Case:  16 | Input/Output: [[42 42 81 42] 42]
Test Case:  17 | Input/Output: [[63 63 -80 63] -80]
Test Case:  18 | Input/Output: [[65 65 65 80] 65]
Test Case:  19 | Input/Output: [[39 65 65 65] 39]
Test Case:  20 | Input/Output: [[50 50 93 50] 50]
Test Case:  21 | Input/Output: [[3 57 3 3] 3]
Test Case:  22 | Input/Output: [[0 12 12 12] 0]
Test Case:  23 | Input/Output: [[39 39 39 -84] -84]
Test Case:  24 | Input/Output: [[94 94 -21 94] -21]
Test Case:  25 | Input/Output: [[-26 -26 -26 11] -26]
Test Case:  26 | Input/Output: [[-59 -64 -64 -64] -64]
Test Case:  27 | Input/Output: [[-94 -15 -94 -94] -94]
Test Case:  28 | Input/Output: [[-85 -85 -85 50] -85]
Test Case:  29 | Input/Output: [[-58 78 78 78] -58]
Test Case:  30 | Input/Output: [[19 19 -19 19] -19]
Test Case:  31 | Input/Output: [[87 -98 -98 -98] -98]
Test Case:  32 | Input/Output: [[16 22 22 22] 16]
Test Case:  33 | Input/Output: [[-21 -84 -21 -21] -84]
Test Case:  34 | Input/Output: [[-82 25 -82 -82] -82]
Test Case:  35 | Input/Output: [[32 66 32 32] 32]
Test Case:  36 | Input/Output: [[-63 -57 -63 -63] -63]
Test Case:  37 | Input/Output: [[-47 -47 -47 95] -47]
Test Case:  38 | Input/Output: [[-39 -90 -39 -39] -90]
Test Case:  39 | Input/Output: [[-37 -45 -45 -45] -45]
Test Case:  40 | Input/Output: [[79 11 79 79] 11]
Test Case:  41 | Input/Output: [[-95 -95 -95 -10] -95]
Test Case:  42 | Input/Output: [[43 43 -77 43] -77]
Test Case:  43 | Input/Output: [[-76 97 97 97] -76]
Test Case:  44 | Input/Output: [[-37 -60 -60 -60] -60]
Test Case:  45 | Input/Output: [[3 3 3 48] 3]
Test Case:  46 | Input/Output: [[23 23 -92 23] -92]
Test Case:  47 | Input/Output: [[4 4 63 4] 4]
Test Case:  48 | Input/Output: [[10 10 10 41] 10]
Test Case:  49 | Input/Output: [[-72 -72 29 -72] -72]
Test Case:  50 | Input/Output: [[61 61 23 61] 23]
Test Case:  51 | Input/Output: [[-58 -58 -47 -58] -58]
Test Case:  52 | Input/Output: [[-47 16 16 16] -47]
Test Case:  53 | Input/Output: [[-16 -16 18 -16] -16]
Test Case:  54 | Input/Output: [[14 14 14 -77] -77]
Test Case:  55 | Input/Output: [[-68 -68 -68 -27] -68]
Test Case:  56 | Input/Output: [[-52 -65 -65 -65] -65]
Test Case:  57 | Input/Output: [[-36 -36 37 -36] -36]
Test Case:  58 | Input/Output: [[21 66 21 21] 21]
Test Case:  59 | Input/Output: [[90 49 49 49] 49]
Test Case:  60 | Input/Output: [[-26 -67 -26 -26] -67]
Test Case:  61 | Input/Output: [[19 19 20 19] 19]
Test Case:  62 | Input/Output: [[70 70 55 70] 55]
Test Case:  63 | Input/Output: [[1 1 1 38] 1]
Test Case:  64 | Input/Output: [[-68 -68 -61 -68] -68]
Test Case:  65 | Input/Output: [[56 91 91 91] 56]
Test Case:  66 | Input/Output: [[-59 -59 -59 93] -59]
Test Case:  67 | Input/Output: [[-17 -17 -17 -68] -68]
Test Case:  68 | Input/Output: [[-14 10 -14 -14] -14]
Test Case:  69 | Input/Output: [[-74 -74 -70 -74] -74]
Test Case:  70 | Input/Output: [[-20 44 44 44] -20]
Test Case:  71 | Input/Output: [[88 88 88 -71] -71]
Test Case:  72 | Input/Output: [[65 65 -29 65] -29]
Test Case:  73 | Input/Output: [[-39 14 14 14] -39]
Test Case:  74 | Input/Output: [[-23 -79 -23 -23] -79]
Test Case:  75 | Input/Output: [[-73 -73 -56 -73] -73]
Test Case:  76 | Input/Output: [[-85 -85 -57 -85] -85]
Test Case:  77 | Input/Output: [[-38 -38 -95 -38] -95]
Test Case:  78 | Input/Output: [[-19 89 89 89] -19]
Test Case:  79 | Input/Output: [[29 43 43 43] 29]
Test Case:  80 | Input/Output: [[-37 -37 55 -37] -37]
Test Case:  81 | Input/Output: [[38 38 38 68] 38]
Test Case:  82 | Input/Output: [[-41 -87 -87 -87] -87]
Test Case:  83 | Input/Output: [[52 52 52 -3] -3]
Test Case:  84 | Input/Output: [[-74 -74 -74 25] -74]
Test Case:  85 | Input/Output: [[-80 -80 -80 -69] -80]
Test Case:  86 | Input/Output: [[17 17 -58 17] -58]
Test Case:  87 | Input/Output: [[-8 -6 -6 -6] -8]
Test Case:  88 | Input/Output: [[-61 -61 -61 -100] -100]
Test Case:  89 | Input/Output: [[-67 -67 -67 -63] -67]
Test Case:  90 | Input/Output: [[-19 58 58 58] -19]
Test Case:  91 | Input/Output: [[-86 15 -86 -86] -86]
Test Case:  92 | Input/Output: [[35 61 61 61] 35]
Test Case:  93 | Input/Output: [[-5 -72 -72 -72] -72]
Test Case:  94 | Input/Output: [[98 98 98 -35] -35]
Test Case:  95 | Input/Output: [[-7 -7 -7 -67] -67]
Test Case:  96 | Input/Output: [[53 53 53 -97] -97]
Test Case:  97 | Input/Output: [[-6 -21 -21 -21] -21]
Test Case:  98 | Input/Output: [[18 -27 18 18] -27]
Test Case:  99 | Input/Output: [[20 82 20 20] 20]
Test Case: 100 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 101 | Input/Output: [(44 44 44 44) 44]
Test Case: 102 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 103 | Input/Output: [(5 5 5 5) 5]
Test Case: 104 | Input/Output: [(17 17 17 17) 17]
Test Case: 105 | Input/Output: [(45 45 45 45) 45]
Test Case: 106 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 107 | Input/Output: [(19 19 19 19) 19]
Test Case: 108 | Input/Output: [(79 79 79 79) 79]
Test Case: 109 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 110 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 111 | Input/Output: [(74 74 74 74) 74]
Test Case: 112 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 113 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 114 | Input/Output: [(60 60 60 60) 60]
Test Case: 115 | Input/Output: [(9 9 9 9) 9]
Test Case: 116 | Input/Output: [(46 46 46 46) 46]
Test Case: 117 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 118 | Input/Output: [(28 28 28 28) 28]
Test Case: 119 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 120 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 121 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 122 | Input/Output: [(-57 -57 -57 -57) -57]
Test Case: 123 | Input/Output: [(57 57 57 57) 57]
Test Case: 124 | Input/Output: [(12 12 12 12) 12]
Test Case: 125 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 126 | Input/Output: [(64 64 64 64) 64]
Test Case: 127 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 128 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 129 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 130 | Input/Output: [(43 43 43 43) 43]
Test Case: 131 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 132 | Input/Output: [(4 4 4 4) 4]
Test Case: 133 | Input/Output: [(86 86 86 86) 86]
Test Case: 134 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 135 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 136 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 137 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 138 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 139 | Input/Output: [(28 28 28 28) 28]
Test Case: 140 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 141 | Input/Output: [(84 84 84 84) 84]
Test Case: 142 | Input/Output: [(88 88 88 88) 88]
Test Case: 143 | Input/Output: [(49 49 49 49) 49]
Test Case: 144 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 145 | Input/Output: [(70 70 70 70) 70]
Test Case: 146 | Input/Output: [(68 68 68 68) 68]
Test Case: 147 | Input/Output: [(16 16 16 16) 16]
Test Case: 148 | Input/Output: [(10 10 10 10) 10]
Test Case: 149 | Input/Output: [(67 67 67 67) 67]
Test Case: 150 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 151 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 152 | Input/Output: [(57 57 57 57) 57]
Test Case: 153 | Input/Output: [(11 11 11 11) 11]
Test Case: 154 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 155 | Input/Output: [(83 83 83 83) 83]
Test Case: 156 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 157 | Input/Output: [(5 5 5 5) 5]
Test Case: 158 | Input/Output: [(15 15 15 15) 15]
Test Case: 159 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 160 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 161 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 162 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 163 | Input/Output: [(76 76 76 76) 76]
Test Case: 164 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 165 | Input/Output: [(32 32 32 32) 32]
Test Case: 166 | Input/Output: [(80 80 80 80) 80]
Test Case: 167 | Input/Output: [(83 83 83 83) 83]
Test Case: 168 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 169 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 170 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 171 | Input/Output: [(80 80 80 80) 80]
Test Case: 172 | Input/Output: [(7 7 7 7) 7]
Test Case: 173 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 174 | Input/Output: [(53 53 53 53) 53]
Test Case: 175 | Input/Output: [(92 92 92 92) 92]
Test Case: 176 | Input/Output: [(95 95 95 95) 95]
Test Case: 177 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 178 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 179 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 180 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 181 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 182 | Input/Output: [(12 12 12 12) 12]
Test Case: 183 | Input/Output: [(57 57 57 57) 57]
Test Case: 184 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 185 | Input/Output: [(88 88 88 88) 88]
Test Case: 186 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 187 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 188 | Input/Output: [(98 98 98 98) 98]
Test Case: 189 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 190 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 191 | Input/Output: [(62 62 62 62) 62]
Test Case: 192 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 193 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 194 | Input/Output: [(97 97 97 97) 97]
Test Case: 195 | Input/Output: [(20 20 20 20) 20]
Test Case: 196 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 197 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 198 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 199 | Input/Output: [(88 88 88 88) 88]
Test Case: 200 | Input/Output: [(33 1 99 42) 1]
Test Case: 201 | Input/Output: [(43 79 2 53) 2]
Test Case: 202 | Input/Output: [(45 41 45 59) 41]
Test Case: 203 | Input/Output: [(87 47 86 32) 32]
Test Case: 204 | Input/Output: [(86 29 27 23) 23]
Test Case: 205 | Input/Output: [(77 100 86 72) 72]
Test Case: 206 | Input/Output: [(73 42 94 18) 18]
Test Case: 207 | Input/Output: [(84 44 35 78) 35]
Test Case: 208 | Input/Output: [(2 72 57 40) 2]
Test Case: 209 | Input/Output: [(13 9 71 5) 5]
Test Case: 210 | Input/Output: [(9 85 12 83) 9]
Test Case: 211 | Input/Output: [(46 25 65 75) 25]
Test Case: 212 | Input/Output: [(38 18 16 89) 16]
Test Case: 213 | Input/Output: [(61 99 77 57) 57]
Test Case: 214 | Input/Output: [(44 89 67 50) 44]
Test Case: 215 | Input/Output: [(52 6 31 95) 6]
Test Case: 216 | Input/Output: [(10 14 29 50) 10]
Test Case: 217 | Input/Output: [(39 85 17 50) 17]
Test Case: 218 | Input/Output: [(56 5 43 29) 5]
Test Case: 219 | Input/Output: [(74 32 72 9) 9]
Test Case: 220 | Input/Output: [(20 52 22 41) 20]
Test Case: 221 | Input/Output: [(5 96 99 76) 5]
Test Case: 222 | Input/Output: [(37 85 47 75) 37]
Test Case: 223 | Input/Output: [(50 31 68 62) 31]
Test Case: 224 | Input/Output: [(69 22 69 28) 22]
Test Case: 225 | Input/Output: [(94 38 61 55) 38]
Test Case: 226 | Input/Output: [(54 50 78 67) 50]
Test Case: 227 | Input/Output: [(25 81 31 76) 25]
Test Case: 228 | Input/Output: [(12 62 21 72) 12]
Test Case: 229 | Input/Output: [(55 62 71 46) 46]
Test Case: 230 | Input/Output: [(6 78 3 78) 3]
Test Case: 231 | Input/Output: [(32 35 26 97) 26]
Test Case: 232 | Input/Output: [(100 60 33 93) 33]
Test Case: 233 | Input/Output: [(70 46 80 87) 46]
Test Case: 234 | Input/Output: [(36 96 78 55) 36]
Test Case: 235 | Input/Output: [(2 58 15 13) 2]
Test Case: 236 | Input/Output: [(11 82 5 16) 5]
Test Case: 237 | Input/Output: [(97 64 30 78) 30]
Test Case: 238 | Input/Output: [(14 88 0 86) 0]
Test Case: 239 | Input/Output: [(57 41 47 70) 41]
Test Case: 240 | Input/Output: [(21 49 81 6) 6]
Test Case: 241 | Input/Output: [(94 35 19 90) 19]
Test Case: 242 | Input/Output: [(24 72 27 26) 24]
Test Case: 243 | Input/Output: [(1 37 34 57) 1]
Test Case: 244 | Input/Output: [(43 48 1 53) 1]
Test Case: 245 | Input/Output: [(76 12 54 39) 12]
Test Case: 246 | Input/Output: [(70 96 47 40) 40]
Test Case: 247 | Input/Output: [(72 90 10 46) 10]
Test Case: 248 | Input/Output: [(11 80 55 14) 11]
Test Case: 249 | Input/Output: [(84 43 12 6) 6]
Test Case: 250 | Input/Output: [(89 36 89 94) 36]
Test Case: 251 | Input/Output: [(7 50 10 54) 7]
Test Case: 252 | Input/Output: [(54 60 89 71) 54]
Test Case: 253 | Input/Output: [(29 20 16 75) 16]
Test Case: 254 | Input/Output: [(22 59 55 74) 22]
Test Case: 255 | Input/Output: [(32 84 2 19) 2]
Test Case: 256 | Input/Output: [(46 22 53 94) 22]
Test Case: 257 | Input/Output: [(94 6 37 74) 6]
Test Case: 258 | Input/Output: [(79 12 93 80) 12]
Test Case: 259 | Input/Output: [(15 58 13 34) 13]
Test Case: 260 | Input/Output: [(31 67 46 38) 31]
Test Case: 261 | Input/Output: [(99 63 34 62) 34]
Test Case: 262 | Input/Output: [(60 83 85 8) 8]
Test Case: 263 | Input/Output: [(77 37 0 47) 0]
Test Case: 264 | Input/Output: [(94 80 13 48) 13]
Test Case: 265 | Input/Output: [(25 16 33 93) 16]
Test Case: 266 | Input/Output: [(71 69 53 12) 12]
Test Case: 267 | Input/Output: [(30 48 75 9) 9]
Test Case: 268 | Input/Output: [(74 24 61 75) 24]
Test Case: 269 | Input/Output: [(79 21 80 8) 8]
Test Case: 270 | Input/Output: [(100 48 83 14) 14]
Test Case: 271 | Input/Output: [(30 10 43 51) 10]
Test Case: 272 | Input/Output: [(48 45 82 12) 12]
Test Case: 273 | Input/Output: [(84 36 6 41) 6]
Test Case: 274 | Input/Output: [(84 69 62 20) 20]
Test Case: 275 | Input/Output: [(97 18 95 80) 18]
Test Case: 276 | Input/Output: [(66 58 36 12) 12]
Test Case: 277 | Input/Output: [(60 10 53 46) 10]
Test Case: 278 | Input/Output: [(82 11 88 15) 11]
Test Case: 279 | Input/Output: [(87 53 38 88) 38]
Test Case: 280 | Input/Output: [(36 4 34 10) 4]
Test Case: 281 | Input/Output: [(26 87 47 96) 26]
Test Case: 282 | Input/Output: [(29 7 100 66) 7]
Test Case: 283 | Input/Output: [(3 47 68 92) 3]
Test Case: 284 | Input/Output: [(87 20 54 37) 20]
Test Case: 285 | Input/Output: [(13 46 41 1) 1]
Test Case: 286 | Input/Output: [(54 44 62 49) 44]
Test Case: 287 | Input/Output: [(27 15 51 62) 15]
Test Case: 288 | Input/Output: [(50 17 68 29) 17]
Test Case: 289 | Input/Output: [(90 68 48 2) 2]
Test Case: 290 | Input/Output: [(52 3 14 81) 3]
Test Case: 291 | Input/Output: [(41 25 38 55) 25]
Test Case: 292 | Input/Output: [(79 1 100 37) 1]
Test Case: 293 | Input/Output: [(15 6 41 73) 6]
Test Case: 294 | Input/Output: [(86 20 51 21) 20]
Test Case: 295 | Input/Output: [(48 21 50 45) 21]
Test Case: 296 | Input/Output: [(100 91 29 80) 29]
Test Case: 297 | Input/Output: [(96 56 70 48) 48]
Test Case: 298 | Input/Output: [(37 52 5 86) 5]
Test Case: 299 | Input/Output: [(96 35 72 39) 35]
Test Case: 300 | Input/Output: [(20 0 3 1) 0]
Test Case: 301 | Input/Output: [(63 3 22 50) 3]
Test Case: 302 | Input/Output: [(47 12 7 28) 7]
Test Case: 303 | Input/Output: [(99 30 92 82) 30]
Test Case: 304 | Input/Output: [(28 91 63 62) 28]
Test Case: 305 | Input/Output: [(47 56 91 80) 47]
Test Case: 306 | Input/Output: [(11 78 4 83) 4]
Test Case: 307 | Input/Output: [(32 85 18 73) 18]
Test Case: 308 | Input/Output: [(12 77 4 94) 4]
Test Case: 309 | Input/Output: [(60 21 65 4) 4]
Test Case: 310 | Input/Output: [(71 80 24 9) 9]
Test Case: 311 | Input/Output: [(91 72 98 20) 20]
Test Case: 312 | Input/Output: [(56 11 85 19) 11]
Test Case: 313 | Input/Output: [(16 71 82 35) 16]
Test Case: 314 | Input/Output: [(81 4 39 27) 4]
Test Case: 315 | Input/Output: [(2 72 2 66) 2]
Test Case: 316 | Input/Output: [(97 4 27 13) 4]
Test Case: 317 | Input/Output: [(97 89 92 25) 25]
Test Case: 318 | Input/Output: [(100 18 32 94) 18]
Test Case: 319 | Input/Output: [(76 45 88 76) 45]
Test Case: 320 | Input/Output: [(91 71 48 25) 25]
Test Case: 321 | Input/Output: [(24 15 62 11) 11]
Test Case: 322 | Input/Output: [(50 11 45 1) 1]
Test Case: 323 | Input/Output: [(23 48 9 82) 9]
Test Case: 324 | Input/Output: [(88 34 85 65) 34]
Test Case: 325 | Input/Output: [(95 24 22 9) 9]
Test Case: 326 | Input/Output: [(90 28 99 57) 28]
Test Case: 327 | Input/Output: [(53 34 70 65) 34]
Test Case: 328 | Input/Output: [(35 8 28 26) 8]
Test Case: 329 | Input/Output: [(81 14 96 36) 14]
Test Case: 330 | Input/Output: [(57 3 80 58) 3]
Test Case: 331 | Input/Output: [(77 73 78 90) 73]
Test Case: 332 | Input/Output: [(34 69 32 79) 32]
Test Case: 333 | Input/Output: [(86 91 9 68) 9]
Test Case: 334 | Input/Output: [(66 26 88 67) 26]
Test Case: 335 | Input/Output: [(62 31 3 100) 3]
Test Case: 336 | Input/Output: [(35 41 32 50) 32]
Test Case: 337 | Input/Output: [(54 65 89 16) 16]
Test Case: 338 | Input/Output: [(56 62 32 20) 20]
Test Case: 339 | Input/Output: [(51 42 63 28) 28]
Test Case: 340 | Input/Output: [(56 56 30 60) 30]
Test Case: 341 | Input/Output: [(35 46 45 21) 21]
Test Case: 342 | Input/Output: [(93 26 49 74) 26]
Test Case: 343 | Input/Output: [(96 20 55 51) 20]
Test Case: 344 | Input/Output: [(54 37 32 14) 14]
Test Case: 345 | Input/Output: [(46 82 18 57) 18]
Test Case: 346 | Input/Output: [(40 90 4 72) 4]
Test Case: 347 | Input/Output: [(63 26 99 88) 26]
Test Case: 348 | Input/Output: [(89 15 33 80) 15]
Test Case: 349 | Input/Output: [(10 91 84 21) 10]
Test Case: 350 | Input/Output: [(80 91 71 62) 62]
Test Case: 351 | Input/Output: [(67 35 29 59) 29]
Test Case: 352 | Input/Output: [(1 87 100 39) 1]
Test Case: 353 | Input/Output: [(17 54 24 31) 17]
Test Case: 354 | Input/Output: [(39 38 66 3) 3]
Test Case: 355 | Input/Output: [(7 84 75 47) 7]
Test Case: 356 | Input/Output: [(85 65 53 72) 53]
Test Case: 357 | Input/Output: [(89 67 65 61) 61]
Test Case: 358 | Input/Output: [(21 76 89 34) 21]
Test Case: 359 | Input/Output: [(56 54 92 43) 43]
Test Case: 360 | Input/Output: [(45 15 88 23) 15]
Test Case: 361 | Input/Output: [(28 23 78 58) 23]
Test Case: 362 | Input/Output: [(88 92 12 90) 12]
Test Case: 363 | Input/Output: [(58 98 57 28) 28]
Test Case: 364 | Input/Output: [(41 27 93 56) 27]
Test Case: 365 | Input/Output: [(45 7 68 68) 7]
Test Case: 366 | Input/Output: [(32 25 30 100) 25]
Test Case: 367 | Input/Output: [(77 42 27 91) 27]
Test Case: 368 | Input/Output: [(56 93 37 46) 37]
Test Case: 369 | Input/Output: [(59 71 83 26) 26]
Test Case: 370 | Input/Output: [(46 20 0 75) 0]
Test Case: 371 | Input/Output: [(66 42 13 54) 13]
Test Case: 372 | Input/Output: [(55 20 28 99) 20]
Test Case: 373 | Input/Output: [(23 49 100 7) 7]
Test Case: 374 | Input/Output: [(92 20 57 55) 20]
Test Case: 375 | Input/Output: [(54 73 29 9) 9]
Test Case: 376 | Input/Output: [(9 0 13 4) 0]
Test Case: 377 | Input/Output: [(82 52 2 26) 2]
Test Case: 378 | Input/Output: [(37 66 13 65) 13]
Test Case: 379 | Input/Output: [(61 74 70 7) 7]
Test Case: 380 | Input/Output: [(9 7 77 57) 7]
Test Case: 381 | Input/Output: [(28 12 89 27) 12]
Test Case: 382 | Input/Output: [(22 97 25 85) 22]
Test Case: 383 | Input/Output: [(5 41 53 3) 3]
Test Case: 384 | Input/Output: [(5 63 68 47) 5]
Test Case: 385 | Input/Output: [(81 92 5 43) 5]
Test Case: 386 | Input/Output: [(88 69 100 48) 48]
Test Case: 387 | Input/Output: [(73 33 10 24) 10]
Test Case: 388 | Input/Output: [(88 3 21 79) 3]
Test Case: 389 | Input/Output: [(73 47 98 68) 47]
Test Case: 390 | Input/Output: [(84 62 50 25) 25]
Test Case: 391 | Input/Output: [(65 67 65 28) 28]
Test Case: 392 | Input/Output: [(24 46 85 48) 24]
Test Case: 393 | Input/Output: [(34 95 72 72) 34]
Test Case: 394 | Input/Output: [(19 96 78 99) 19]
Test Case: 395 | Input/Output: [(5 12 49 66) 5]
Test Case: 396 | Input/Output: [(15 30 35 39) 15]
Test Case: 397 | Input/Output: [(18 25 69 49) 18]
Test Case: 398 | Input/Output: [(30 53 96 33) 30]
Test Case: 399 | Input/Output: [(97 99 33 86) 33]
Test Case: 400 | Input/Output: [(-37 94 -99 33) -99]
Test Case: 401 | Input/Output: [(-25 90 -99 42) -99]
Test Case: 402 | Input/Output: [(76 -83 18 53) -83]
Test Case: 403 | Input/Output: [(17 -42 -3 85) -42]
Test Case: 404 | Input/Output: [(57 -41 86 79) -41]
Test Case: 405 | Input/Output: [(-9 94 86 -18) -18]
Test Case: 406 | Input/Output: [(-90 100 -34 49) -90]
Test Case: 407 | Input/Output: [(-84 -75 -43 85) -84]
Test Case: 408 | Input/Output: [(-38 60 -94 -19) -94]
Test Case: 409 | Input/Output: [(58 -77 -79 -51) -79]
Test Case: 410 | Input/Output: [(-50 -44 48 98) -50]
Test Case: 411 | Input/Output: [(53 -54 -35 -59) -59]
Test Case: 412 | Input/Output: [(-5 57 26 13) -5]
Test Case: 413 | Input/Output: [(86 83 99 -48) -48]
Test Case: 414 | Input/Output: [(-2 -81 -52 38) -81]
Test Case: 415 | Input/Output: [(-29 -40 -11 54) -40]
Test Case: 416 | Input/Output: [(100 68 23 52) 23]
Test Case: 417 | Input/Output: [(74 -24 14 -99) -99]
Test Case: 418 | Input/Output: [(-13 68 -39 -87) -87]
Test Case: 419 | Input/Output: [(38 7 57 -11) -11]
Test Case: 420 | Input/Output: [(55 6 -10 -9) -10]
Test Case: 421 | Input/Output: [(16 80 19 33) 16]
Test Case: 422 | Input/Output: [(99 2 19 -33) -33]
Test Case: 423 | Input/Output: [(-65 -3 84 -49) -65]
Test Case: 424 | Input/Output: [(-100 -98 -67 -41) -100]
Test Case: 425 | Input/Output: [(78 -51 81 80) -51]
Test Case: 426 | Input/Output: [(-25 -52 -7 84) -52]
Test Case: 427 | Input/Output: [(95 71 -32 86) -32]
Test Case: 428 | Input/Output: [(20 54 83 74) 20]
Test Case: 429 | Input/Output: [(81 88 -1 -60) -60]
Test Case: 430 | Input/Output: [(-55 -94 -50 -85) -94]
Test Case: 431 | Input/Output: [(-70 80 23 -61) -70]
Test Case: 432 | Input/Output: [(-17 -41 12 -31) -41]
Test Case: 433 | Input/Output: [(-92 -90 -50 -59) -92]
Test Case: 434 | Input/Output: [(23 -1 9 23) -1]
Test Case: 435 | Input/Output: [(-11 -71 82 -50) -71]
Test Case: 436 | Input/Output: [(61 51 42 29) 29]
Test Case: 437 | Input/Output: [(90 -81 80 -43) -81]
Test Case: 438 | Input/Output: [(-99 30 -92 -55) -99]
Test Case: 439 | Input/Output: [(91 30 35 64) 30]
Test Case: 440 | Input/Output: [(60 80 -34 10) -34]
Test Case: 441 | Input/Output: [(50 16 77 44) 16]
Test Case: 442 | Input/Output: [(-28 -10 -23 20) -28]
Test Case: 443 | Input/Output: [(42 57 -12 -68) -68]
Test Case: 444 | Input/Output: [(-68 -22 -22 81) -68]
Test Case: 445 | Input/Output: [(68 -92 59 17) -92]
Test Case: 446 | Input/Output: [(64 -96 -21 -47) -96]
Test Case: 447 | Input/Output: [(19 -50 -25 70) -50]
Test Case: 448 | Input/Output: [(33 82 43 20) 20]
Test Case: 449 | Input/Output: [(98 -32 -3 61) -32]
Test Case: 450 | Input/Output: [(14 26 73 -60) -60]
Test Case: 451 | Input/Output: [(72 13 3 40) 3]
Test Case: 452 | Input/Output: [(12 47 -90 28) -90]
Test Case: 453 | Input/Output: [(98 29 14 -77) -77]
Test Case: 454 | Input/Output: [(-29 -25 -66 88) -66]
Test Case: 455 | Input/Output: [(55 9 53 -1) -1]
Test Case: 456 | Input/Output: [(-45 88 -31 31) -45]
Test Case: 457 | Input/Output: [(71 -77 -90 -62) -90]
Test Case: 458 | Input/Output: [(93 -36 40 -44) -44]
Test Case: 459 | Input/Output: [(-85 13 10 91) -85]
Test Case: 460 | Input/Output: [(21 -83 -21 -10) -83]
Test Case: 461 | Input/Output: [(98 58 8 -47) -47]
Test Case: 462 | Input/Output: [(33 16 28 -6) -6]
Test Case: 463 | Input/Output: [(-50 83 91 -14) -50]
Test Case: 464 | Input/Output: [(19 -82 -73 -9) -82]
Test Case: 465 | Input/Output: [(-94 -89 23 -42) -94]
Test Case: 466 | Input/Output: [(-64 -76 -28 78) -76]
Test Case: 467 | Input/Output: [(90 99 -99 -44) -99]
Test Case: 468 | Input/Output: [(-82 -4 99 33) -82]
Test Case: 469 | Input/Output: [(28 78 43 -36) -36]
Test Case: 470 | Input/Output: [(-100 27 -2 28) -100]
Test Case: 471 | Input/Output: [(43 71 73 7) 7]
Test Case: 472 | Input/Output: [(-25 11 69 -28) -28]
Test Case: 473 | Input/Output: [(48 -52 70 -34) -52]
Test Case: 474 | Input/Output: [(48 26 17 59) 17]
Test Case: 475 | Input/Output: [(-78 75 -61 67) -78]
Test Case: 476 | Input/Output: [(-27 16 -10 49) -27]
Test Case: 477 | Input/Output: [(43 -72 25 55) -72]
Test Case: 478 | Input/Output: [(10 80 3 -17) -17]
Test Case: 479 | Input/Output: [(43 -65 42 -79) -79]
Test Case: 480 | Input/Output: [(96 74 -89 -16) -89]
Test Case: 481 | Input/Output: [(13 -95 35 -3) -95]
Test Case: 482 | Input/Output: [(-47 29 80 -94) -94]
Test Case: 483 | Input/Output: [(-60 17 -18 -79) -79]
Test Case: 484 | Input/Output: [(-39 43 -57 -61) -61]
Test Case: 485 | Input/Output: [(41 -56 40 -21) -56]
Test Case: 486 | Input/Output: [(-39 85 12 -2) -39]
Test Case: 487 | Input/Output: [(20 -67 65 75) -67]
Test Case: 488 | Input/Output: [(-83 -87 95 -65) -87]
Test Case: 489 | Input/Output: [(-52 -72 -18 -6) -72]
Test Case: 490 | Input/Output: [(74 -95 19 78) -95]
Test Case: 491 | Input/Output: [(-14 6 -28 -69) -69]
Test Case: 492 | Input/Output: [(23 -2 34 78) -2]
Test Case: 493 | Input/Output: [(-97 -97 14 48) -97]
Test Case: 494 | Input/Output: [(82 -18 54 68) -18]
Test Case: 495 | Input/Output: [(-86 97 26 3) -86]
Test Case: 496 | Input/Output: [(-26 16 -46 -51) -51]
Test Case: 497 | Input/Output: [(-44 73 94 10) -44]
Test Case: 498 | Input/Output: [(-80 51 86 29) -80]
Test Case: 499 | Input/Output: [(24 -45 -65 43) -65]
Test Case: 500 | Input/Output: [(49 9 -61 -30) -61]
Test Case: 501 | Input/Output: [(21 70 -41 -93) -93]
Test Case: 502 | Input/Output: [(21 -77 1 93) -77]
Test Case: 503 | Input/Output: [(-60 7 70 97) -60]
Test Case: 504 | Input/Output: [(32 79 34 30) 30]
Test Case: 505 | Input/Output: [(29 -9 -22 -33) -33]
Test Case: 506 | Input/Output: [(35 9 -3 -28) -28]
Test Case: 507 | Input/Output: [(-11 38 -98 80) -98]
Test Case: 508 | Input/Output: [(88 -94 -76 -31) -94]
Test Case: 509 | Input/Output: [(-41 8 27 66) -41]
Test Case: 510 | Input/Output: [(-89 -41 -25 73) -89]
Test Case: 511 | Input/Output: [(-55 88 24 95) -55]
Test Case: 512 | Input/Output: [(-95 -66 51 81) -95]
Test Case: 513 | Input/Output: [(11 64 -8 -83) -83]
Test Case: 514 | Input/Output: [(14 39 -25 -68) -68]
Test Case: 515 | Input/Output: [(36 2 -40 -15) -40]
Test Case: 516 | Input/Output: [(-87 -99 80 -87) -99]
Test Case: 517 | Input/Output: [(74 -52 -65 2) -65]
Test Case: 518 | Input/Output: [(83 -62 -100 36) -100]
Test Case: 519 | Input/Output: [(-33 -63 88 46) -63]
Test Case: 520 | Input/Output: [(15 97 -25 79) -25]
Test Case: 521 | Input/Output: [(-24 -79 75 60) -79]
Test Case: 522 | Input/Output: [(-47 73 2 48) -47]
Test Case: 523 | Input/Output: [(31 -19 88 16) -19]
Test Case: 524 | Input/Output: [(14 -86 68 11) -86]
Test Case: 525 | Input/Output: [(71 41 76 80) 41]
Test Case: 526 | Input/Output: [(68 -69 31 45) -69]
Test Case: 527 | Input/Output: [(-52 30 87 -43) -52]
Test Case: 528 | Input/Output: [(26 -3 83 -31) -31]
Test Case: 529 | Input/Output: [(-1 -76 -49 -52) -76]
Test Case: 530 | Input/Output: [(52 76 47 14) 14]
Test Case: 531 | Input/Output: [(67 51 -53 -37) -53]
Test Case: 532 | Input/Output: [(69 41 -74 91) -74]
Test Case: 533 | Input/Output: [(-74 23 -20 -65) -74]
Test Case: 534 | Input/Output: [(-45 34 3 -62) -62]
Test Case: 535 | Input/Output: [(-46 -93 -13 9) -93]
Test Case: 536 | Input/Output: [(98 -57 12 94) -57]
Test Case: 537 | Input/Output: [(0 -35 -14 32) -35]
Test Case: 538 | Input/Output: [(86 -56 -98 37) -98]
Test Case: 539 | Input/Output: [(94 -13 41 -19) -19]
Test Case: 540 | Input/Output: [(-35 16 39 39) -35]
Test Case: 541 | Input/Output: [(-63 67 45 75) -63]
Test Case: 542 | Input/Output: [(-76 -2 -8 9) -76]
Test Case: 543 | Input/Output: [(-3 -55 -54 -85) -85]
Test Case: 544 | Input/Output: [(36 -41 -68 -45) -68]
Test Case: 545 | Input/Output: [(58 -79 -36 22) -79]
Test Case: 546 | Input/Output: [(-39 -50 -96 7) -96]
Test Case: 547 | Input/Output: [(0 100 25 -90) -90]
Test Case: 548 | Input/Output: [(-44 30 45 16) -44]
Test Case: 549 | Input/Output: [(-76 97 94 -52) -76]
Test Case: 550 | Input/Output: [(-66 -77 -58 11) -77]
Test Case: 551 | Input/Output: [(-88 -3 12 69) -88]
Test Case: 552 | Input/Output: [(-96 60 35 55) -96]
Test Case: 553 | Input/Output: [(91 95 13 95) 13]
Test Case: 554 | Input/Output: [(-83 11 -37 -56) -83]
Test Case: 555 | Input/Output: [(75 57 -97 -82) -97]
Test Case: 556 | Input/Output: [(-45 -8 -10 1) -45]
Test Case: 557 | Input/Output: [(55 -65 4 36) -65]
Test Case: 558 | Input/Output: [(5 -65 13 85) -65]
Test Case: 559 | Input/Output: [(53 0 -99 -94) -99]
Test Case: 560 | Input/Output: [(-84 -41 -81 21) -84]
Test Case: 561 | Input/Output: [(-32 64 -100 49) -100]
Test Case: 562 | Input/Output: [(-22 79 -50 -84) -84]
Test Case: 563 | Input/Output: [(6 -22 -48 19) -48]
Test Case: 564 | Input/Output: [(-31 44 59 -56) -56]
Test Case: 565 | Input/Output: [(82 -5 39 -55) -55]
Test Case: 566 | Input/Output: [(-26 -41 31 -68) -68]
Test Case: 567 | Input/Output: [(-40 -60 -3 -49) -60]
Test Case: 568 | Input/Output: [(57 22 41 39) 22]
Test Case: 569 | Input/Output: [(100 70 -31 16) -31]
Test Case: 570 | Input/Output: [(76 87 -45 -96) -96]
Test Case: 571 | Input/Output: [(21 52 -89 59) -89]
Test Case: 572 | Input/Output: [(-68 5 -74 -8) -74]
Test Case: 573 | Input/Output: [(-24 44 -15 -100) -100]
Test Case: 574 | Input/Output: [(-84 85 -85 -62) -85]
Test Case: 575 | Input/Output: [(35 80 -52 53) -52]
Test Case: 576 | Input/Output: [(-79 -54 18 58) -79]
Test Case: 577 | Input/Output: [(29 -63 71 36) -63]
Test Case: 578 | Input/Output: [(-27 -97 -93 -78) -97]
Test Case: 579 | Input/Output: [(-6 74 -60 27) -60]
Test Case: 580 | Input/Output: [(-71 -59 20 17) -71]
Test Case: 581 | Input/Output: [(5 -21 -42 -51) -51]
Test Case: 582 | Input/Output: [(-57 82 -24 63) -57]
Test Case: 583 | Input/Output: [(-13 100 9 94) -13]
Test Case: 584 | Input/Output: [(-15 65 -46 -97) -97]
Test Case: 585 | Input/Output: [(-89 21 91 -42) -89]
Test Case: 586 | Input/Output: [(-12 -50 7 75) -50]
Test Case: 587 | Input/Output: [(94 90 54 -100) -100]
Test Case: 588 | Input/Output: [(38 -6 36 -71) -71]
Test Case: 589 | Input/Output: [(79 33 24 55) 24]
Test Case: 590 | Input/Output: [(-54 -58 55 -57) -58]
Test Case: 591 | Input/Output: [(-3 -15 -89 -57) -89]
Test Case: 592 | Input/Output: [(77 -27 -97 86) -97]
Test Case: 593 | Input/Output: [(6 100 -11 -43) -43]
Test Case: 594 | Input/Output: [(-45 -18 50 92) -45]
Test Case: 595 | Input/Output: [(-62 45 -98 -40) -98]
Test Case: 596 | Input/Output: [(16 65 -22 27) -22]
Test Case: 597 | Input/Output: [(-86 29 10 -47) -86]
Test Case: 598 | Input/Output: [(-83 -14 7 13) -83]
Test Case: 599 | Input/Output: [(82 -8 -98 -94) -98]
Test Case: 600 | Input/Output: [(-67 -68 64 24) -68]
Test Case: 601 | Input/Output: [(28 -62 -72 -30) -72]
Test Case: 602 | Input/Output: [(12 -13 -61 47) -61]
Test Case: 603 | Input/Output: [(79 -87 53 6) -87]
Test Case: 604 | Input/Output: [(-1 -85 61 31) -85]
Test Case: 605 | Input/Output: [(69 -38 -20 27) -38]
Test Case: 606 | Input/Output: [(81 -13 48 37) -13]
Test Case: 607 | Input/Output: [(87 64 31 -12) -12]
Test Case: 608 | Input/Output: [(66 -11 79 2) -11]
Test Case: 609 | Input/Output: [(-75 27 82 -18) -75]
Test Case: 610 | Input/Output: [(-66 31 -94 82) -94]
Test Case: 611 | Input/Output: [(-47 59 -1 1) -47]
Test Case: 612 | Input/Output: [(-1 64 83 -41) -41]
Test Case: 613 | Input/Output: [(55 10 75 36) 10]
Test Case: 614 | Input/Output: [(95 100 -37 74) -37]
Test Case: 615 | Input/Output: [(63 -8 49 -36) -36]
Test Case: 616 | Input/Output: [(-89 96 -66 -60) -89]
Test Case: 617 | Input/Output: [(95 51 72 -20) -20]
Test Case: 618 | Input/Output: [(-34 -13 -55 -35) -55]
Test Case: 619 | Input/Output: [(-47 93 55 -54) -54]
Test Case: 620 | Input/Output: [(9 -26 62 9) -26]
Test Case: 621 | Input/Output: [(-96 71 17 -36) -96]
Test Case: 622 | Input/Output: [(12 62 -59 -100) -100]
Test Case: 623 | Input/Output: [(53 -57 -99 -83) -99]
Test Case: 624 | Input/Output: [(-53 19 -47 -79) -79]
Test Case: 625 | Input/Output: [(-70 -37 -21 3) -70]
Test Case: 626 | Input/Output: [(-15 2 85 -13) -15]
Test Case: 627 | Input/Output: [(50 20 -99 61) -99]
Test Case: 628 | Input/Output: [(61 -43 -79 31) -79]
Test Case: 629 | Input/Output: [(69 -66 -56 -77) -77]
Test Case: 630 | Input/Output: [(-92 -86 76 -80) -92]
Test Case: 631 | Input/Output: [(24 94 -61 20) -61]
Test Case: 632 | Input/Output: [(-87 -61 80 -42) -87]
Test Case: 633 | Input/Output: [(35 34 -94 -58) -94]
Test Case: 634 | Input/Output: [(36 12 -97 51) -97]
Test Case: 635 | Input/Output: [(-56 76 -8 -86) -86]
Test Case: 636 | Input/Output: [(-29 -39 -72 -58) -72]
Test Case: 637 | Input/Output: [(74 -30 0 -1) -30]
Test Case: 638 | Input/Output: [(17 -99 -29 -50) -99]
Test Case: 639 | Input/Output: [(-43 -11 11 -8) -43]
Test Case: 640 | Input/Output: [(94 74 40 5) 5]
Test Case: 641 | Input/Output: [(-6 24 -92 21) -92]
Test Case: 642 | Input/Output: [(11 61 88 28) 11]
Test Case: 643 | Input/Output: [(14 -46 62 1) -46]
Test Case: 644 | Input/Output: [(0 27 -33 23) -33]
Test Case: 645 | Input/Output: [(10 -4 -58 -61) -61]
Test Case: 646 | Input/Output: [(37 -24 52 20) -24]
Test Case: 647 | Input/Output: [(-20 19 26 77) -20]
Test Case: 648 | Input/Output: [(-45 -24 91 -24) -45]
Test Case: 649 | Input/Output: [(19 67 99 -48) -48]
Test Case: 650 | Input/Output: [(-13 31 -81 71) -81]
Test Case: 651 | Input/Output: [(-28 9 58 -67) -67]
Test Case: 652 | Input/Output: [(-68 -9 -59 100) -68]
Test Case: 653 | Input/Output: [(77 -67 -84 22) -84]
Test Case: 654 | Input/Output: [(49 -80 29 -36) -80]
Test Case: 655 | Input/Output: [(-29 -52 -21 -74) -74]
Test Case: 656 | Input/Output: [(76 -37 37 77) -37]
Test Case: 657 | Input/Output: [(-30 -20 -98 9) -98]
Test Case: 658 | Input/Output: [(-12 95 22 -21) -21]
Test Case: 659 | Input/Output: [(43 15 -86 98) -86]
Test Case: 660 | Input/Output: [(70 97 54 -51) -51]
Test Case: 661 | Input/Output: [(-14 89 -56 46) -56]
Test Case: 662 | Input/Output: [(31 50 79 74) 31]
Test Case: 663 | Input/Output: [(3 -59 20 93) -59]
Test Case: 664 | Input/Output: [(93 -32 -60 16) -60]
Test Case: 665 | Input/Output: [(-68 7 -40 82) -68]
Test Case: 666 | Input/Output: [(-87 45 99 15) -87]
Test Case: 667 | Input/Output: [(-23 36 71 77) -23]
Test Case: 668 | Input/Output: [(-15 -53 84 -64) -64]
Test Case: 669 | Input/Output: [(-45 33 66 -34) -45]
Test Case: 670 | Input/Output: [(12 9 -78 63) -78]
Test Case: 671 | Input/Output: [(46 34 41 13) 13]
Test Case: 672 | Input/Output: [(-35 -15 22 -83) -83]
Test Case: 673 | Input/Output: [(99 88 31 -53) -53]
Test Case: 674 | Input/Output: [(-23 -64 -18 -71) -71]
Test Case: 675 | Input/Output: [(-44 51 -28 75) -44]
Test Case: 676 | Input/Output: [(22 61 -78 45) -78]
Test Case: 677 | Input/Output: [(-89 22 -14 -39) -89]
Test Case: 678 | Input/Output: [(-25 -35 46 -22) -35]
Test Case: 679 | Input/Output: [(-40 85 38 61) -40]
Test Case: 680 | Input/Output: [(28 80 -59 86) -59]
Test Case: 681 | Input/Output: [(-80 -28 45 -30) -80]
Test Case: 682 | Input/Output: [(-10 -93 88 -83) -93]
Test Case: 683 | Input/Output: [(-11 -94 17 -23) -94]
Test Case: 684 | Input/Output: [(59 -25 31 -42) -42]
Test Case: 685 | Input/Output: [(-83 36 4 55) -83]
Test Case: 686 | Input/Output: [(-68 -43 -43 -26) -68]
Test Case: 687 | Input/Output: [(20 -15 -82 92) -82]
Test Case: 688 | Input/Output: [(-59 87 51 -7) -59]
Test Case: 689 | Input/Output: [(-14 92 -80 -94) -94]
Test Case: 690 | Input/Output: [(5 -64 -35 -55) -64]
Test Case: 691 | Input/Output: [(35 -28 -96 74) -96]
Test Case: 692 | Input/Output: [(-89 4 15 -10) -89]
Test Case: 693 | Input/Output: [(66 50 54 92) 50]
Test Case: 694 | Input/Output: [(-99 45 21 26) -99]
Test Case: 695 | Input/Output: [(-66 -75 -54 28) -75]
Test Case: 696 | Input/Output: [(-16 85 96 78) -16]
Test Case: 697 | Input/Output: [(-53 -52 34 -4) -53]
Test Case: 698 | Input/Output: [(-63 -47 -75 -42) -75]
Test Case: 699 | Input/Output: [(-6 99 -30 50) -30]
Test Case: 700 | Input/Output: [(-46 18 -11 61) -46]
Test Case: 701 | Input/Output: [(22 62 76 96) 22]
Test Case: 702 | Input/Output: [(-64 49 -73 44) -73]
Test Case: 703 | Input/Output: [(60 29 -49 55) -49]
Test Case: 704 | Input/Output: [(-91 -59 -82 53) -91]
Test Case: 705 | Input/Output: [(67 83 -89 -45) -89]
Test Case: 706 | Input/Output: [(0 -9 15 82) -9]
Test Case: 707 | Input/Output: [(85 18 35 -36) -36]
Test Case: 708 | Input/Output: [(62 23 39 86) 23]
Test Case: 709 | Input/Output: [(-68 55 82 -68) -68]
Test Case: 710 | Input/Output: [(-27 94 -82 66) -82]
Test Case: 711 | Input/Output: [(-86 -72 -85 100) -86]
Test Case: 712 | Input/Output: [(-32 64 -64 -44) -64]
Test Case: 713 | Input/Output: [(-30 -4 -53 52) -53]
Test Case: 714 | Input/Output: [(92 -60 -63 -48) -63]
Test Case: 715 | Input/Output: [(58 37 -88 -82) -88]
Test Case: 716 | Input/Output: [(-67 -41 35 -3) -67]
Test Case: 717 | Input/Output: [(-76 -41 -11 -78) -78]
Test Case: 718 | Input/Output: [(-52 -44 -60 45) -60]
Test Case: 719 | Input/Output: [(-39 50 -99 29) -99]
Test Case: 720 | Input/Output: [(-28 -77 6 -24) -77]
Test Case: 721 | Input/Output: [(100 -27 -56 -88) -88]
Test Case: 722 | Input/Output: [(74 -16 72 75) -16]
Test Case: 723 | Input/Output: [(-88 -20 27 38) -88]
Test Case: 724 | Input/Output: [(26 -33 -12 -53) -53]
Test Case: 725 | Input/Output: [(-58 -62 69 -66) -66]
Test Case: 726 | Input/Output: [(-88 7 -69 -57) -88]
Test Case: 727 | Input/Output: [(-35 -41 80 -73) -73]
Test Case: 728 | Input/Output: [(16 79 -8 -49) -49]
Test Case: 729 | Input/Output: [(-83 -54 -29 53) -83]
Test Case: 730 | Input/Output: [(91 -26 -38 97) -38]
Test Case: 731 | Input/Output: [(-65 -86 51 -8) -86]
Test Case: 732 | Input/Output: [(-88 -18 -20 -83) -88]
Test Case: 733 | Input/Output: [(-62 59 33 81) -62]
Test Case: 734 | Input/Output: [(68 10 -61 -95) -95]
Test Case: 735 | Input/Output: [(-47 -57 -36 71) -57]
Test Case: 736 | Input/Output: [(77 49 -13 94) -13]
Test Case: 737 | Input/Output: [(-73 -78 -2 99) -78]
Test Case: 738 | Input/Output: [(-24 22 -96 -34) -96]
Test Case: 739 | Input/Output: [(36 23 -38 -88) -88]
Test Case: 740 | Input/Output: [(65 -44 20 99) -44]
Test Case: 741 | Input/Output: [(-55 95 74 -18) -55]
Test Case: 742 | Input/Output: [(-10 -96 -58 -15) -96]
Test Case: 743 | Input/Output: [(-79 57 -100 -7) -100]
Test Case: 744 | Input/Output: [(52 -53 -21 -56) -56]
Test Case: 745 | Input/Output: [(30 21 -27 26) -27]
Test Case: 746 | Input/Output: [(98 -58 -40 -20) -58]
Test Case: 747 | Input/Output: [(88 3 96 99) 3]
Test Case: 748 | Input/Output: [(88 -5 -11 80) -11]
Test Case: 749 | Input/Output: [(-10 -3 24 -13) -13]
Test Case: 750 | Input/Output: [(-36 48 -91 -46) -91]
Test Case: 751 | Input/Output: [(69 -79 -52 -64) -79]
Test Case: 752 | Input/Output: [(72 78 -17 45) -17]
Test Case: 753 | Input/Output: [(40 -61 -21 -2) -61]
Test Case: 754 | Input/Output: [(44 -48 -65 75) -65]
Test Case: 755 | Input/Output: [(-15 -75 -64 -75) -75]
Test Case: 756 | Input/Output: [(60 81 -26 4) -26]
Test Case: 757 | Input/Output: [(-70 -30 -12 91) -70]
Test Case: 758 | Input/Output: [(-90 62 15 93) -90]
Test Case: 759 | Input/Output: [(-67 -34 -71 -94) -94]
Test Case: 760 | Input/Output: [(-15 -14 -55 84) -55]
Test Case: 761 | Input/Output: [(53 -96 -48 -57) -96]
Test Case: 762 | Input/Output: [(-79 52 54 -79) -79]
Test Case: 763 | Input/Output: [(-7 50 -60 -3) -60]
Test Case: 764 | Input/Output: [(27 -81 93 74) -81]
Test Case: 765 | Input/Output: [(-100 62 63 -8) -100]
Test Case: 766 | Input/Output: [(-62 79 -66 74) -66]
Test Case: 767 | Input/Output: [(-27 73 -98 43) -98]
Test Case: 768 | Input/Output: [(50 -46 -13 46) -46]
Test Case: 769 | Input/Output: [(30 -83 70 5) -83]
Test Case: 770 | Input/Output: [(-35 -32 85 -64) -64]
Test Case: 771 | Input/Output: [(-80 60 -79 -9) -80]
Test Case: 772 | Input/Output: [(90 57 -51 -51) -51]
Test Case: 773 | Input/Output: [(20 3 100 -23) -23]
Test Case: 774 | Input/Output: [(23 2 71 83) 2]
Test Case: 775 | Input/Output: [(78 91 -20 -27) -27]
Test Case: 776 | Input/Output: [(-54 -50 93 -89) -89]
Test Case: 777 | Input/Output: [(74 -78 71 34) -78]
Test Case: 778 | Input/Output: [(-6 44 -28 87) -28]
Test Case: 779 | Input/Output: [(35 -52 87 -33) -52]
Test Case: 780 | Input/Output: [(59 24 10 91) 10]
Test Case: 781 | Input/Output: [(-97 70 -12 53) -97]
Test Case: 782 | Input/Output: [(-1 6 73 61) -1]
Test Case: 783 | Input/Output: [(-99 -25 51 -30) -99]
Test Case: 784 | Input/Output: [(-55 50 -58 49) -58]
Test Case: 785 | Input/Output: [(-18 -44 42 26) -44]
Test Case: 786 | Input/Output: [(-29 -53 79 -38) -53]
Test Case: 787 | Input/Output: [(73 8 -47 -24) -47]
Test Case: 788 | Input/Output: [(-15 64 83 34) -15]
Test Case: 789 | Input/Output: [(8 -50 96 59) -50]
Test Case: 790 | Input/Output: [(17 58 -16 79) -16]
Test Case: 791 | Input/Output: [(87 47 -69 -73) -73]
Test Case: 792 | Input/Output: [(-84 36 -94 47) -94]
Test Case: 793 | Input/Output: [(-20 -14 -50 -36) -50]
Test Case: 794 | Input/Output: [(38 25 -1 -17) -17]
Test Case: 795 | Input/Output: [(-37 73 38 -27) -37]
Test Case: 796 | Input/Output: [(-6 -97 -1 -36) -97]
Test Case: 797 | Input/Output: [(-14 28 -71 -44) -71]
Test Case: 798 | Input/Output: [(13 -48 92 19) -48]
Test Case: 799 | Input/Output: [(44 -30 2 -24) -30]
Test Case: 800 | Input/Output: [(10 4 84 -60) -60]
Test Case: 801 | Input/Output: [(-44 -74 -93 -37) -93]
Test Case: 802 | Input/Output: [(-12 -38 80 -24) -38]
Test Case: 803 | Input/Output: [(-57 29 -11 36) -57]
Test Case: 804 | Input/Output: [(64 80 91 -5) -5]
Test Case: 805 | Input/Output: [(34 -54 -43 -6) -54]
Test Case: 806 | Input/Output: [(-39 53 -44 -23) -44]
Test Case: 807 | Input/Output: [(75 57 36 -19) -19]
Test Case: 808 | Input/Output: [(64 59 92 10) 10]
Test Case: 809 | Input/Output: [(-16 93 -82 -51) -82]
Test Case: 810 | Input/Output: [(46 38 85 5) 5]
Test Case: 811 | Input/Output: [(22 -46 56 34) -46]
Test Case: 812 | Input/Output: [(-63 83 -18 -30) -63]
Test Case: 813 | Input/Output: [(-20 -8 79 -78) -78]
Test Case: 814 | Input/Output: [(-70 -86 14 -27) -86]
Test Case: 815 | Input/Output: [(-40 3 75 -33) -40]
Test Case: 816 | Input/Output: [(29 -52 59 63) -52]
Test Case: 817 | Input/Output: [(95 23 56 -58) -58]
Test Case: 818 | Input/Output: [(-54 33 -69 -36) -69]
Test Case: 819 | Input/Output: [(95 22 -96 -54) -96]
Test Case: 820 | Input/Output: [(-10 96 42 78) -10]
Test Case: 821 | Input/Output: [(29 31 -56 -52) -56]
Test Case: 822 | Input/Output: [(-21 -43 -70 20) -70]
Test Case: 823 | Input/Output: [(-59 12 -95 81) -95]
Test Case: 824 | Input/Output: [(75 -19 96 85) -19]
Test Case: 825 | Input/Output: [(-6 95 93 12) -6]
Test Case: 826 | Input/Output: [(-10 76 -4 50) -10]
Test Case: 827 | Input/Output: [(4 72 84 -40) -40]
Test Case: 828 | Input/Output: [(-88 -56 -75 100) -88]
Test Case: 829 | Input/Output: [(58 69 -94 -93) -94]
Test Case: 830 | Input/Output: [(-21 56 15 -54) -54]
Test Case: 831 | Input/Output: [(55 -33 52 -69) -69]
Test Case: 832 | Input/Output: [(64 37 -92 6) -92]
Test Case: 833 | Input/Output: [(82 86 -39 -6) -39]
Test Case: 834 | Input/Output: [(22 53 5 37) 5]
Test Case: 835 | Input/Output: [(-92 46 -77 -46) -92]
Test Case: 836 | Input/Output: [(-45 -98 83 -79) -98]
Test Case: 837 | Input/Output: [(22 -5 -16 39) -16]
Test Case: 838 | Input/Output: [(77 -51 13 15) -51]
Test Case: 839 | Input/Output: [(-86 86 77 26) -86]
Test Case: 840 | Input/Output: [(-61 -88 67 47) -88]
Test Case: 841 | Input/Output: [(-58 -51 -74 -1) -74]
Test Case: 842 | Input/Output: [(20 99 30 -41) -41]
Test Case: 843 | Input/Output: [(-29 44 88 -94) -94]
Test Case: 844 | Input/Output: [(72 -75 37 18) -75]
Test Case: 845 | Input/Output: [(-50 67 39 49) -50]
Test Case: 846 | Input/Output: [(-85 55 18 -64) -85]
Test Case: 847 | Input/Output: [(7 30 93 73) 7]
Test Case: 848 | Input/Output: [(-55 -54 -66 -28) -66]
Test Case: 849 | Input/Output: [(93 45 31 45) 31]
Test Case: 850 | Input/Output: [(2 11 80 91) 2]
Test Case: 851 | Input/Output: [(3 -49 94 6) -49]
Test Case: 852 | Input/Output: [(76 -18 -24 -45) -45]
Test Case: 853 | Input/Output: [(-92 51 -80 -58) -92]
Test Case: 854 | Input/Output: [(-80 -40 -44 71) -80]
Test Case: 855 | Input/Output: [(-47 67 33 -7) -47]
Test Case: 856 | Input/Output: [(-62 69 45 23) -62]
Test Case: 857 | Input/Output: [(94 -19 -79 18) -79]
Test Case: 858 | Input/Output: [(-98 -39 -51 -68) -98]
Test Case: 859 | Input/Output: [(63 -13 -55 34) -55]
Test Case: 860 | Input/Output: [(-46 -66 1 -56) -66]
Test Case: 861 | Input/Output: [(39 52 97 47) 39]
Test Case: 862 | Input/Output: [(-71 -22 76 51) -71]
Test Case: 863 | Input/Output: [(56 3 47 12) 3]
Test Case: 864 | Input/Output: [(-23 -85 19 -43) -85]
Test Case: 865 | Input/Output: [(36 58 -67 -95) -95]
Test Case: 866 | Input/Output: [(59 86 -33 85) -33]
Test Case: 867 | Input/Output: [(-54 79 -14 39) -54]
Test Case: 868 | Input/Output: [(91 30 33 -61) -61]
Test Case: 869 | Input/Output: [(68 -27 38 42) -27]
Test Case: 870 | Input/Output: [(-17 47 -85 18) -85]
Test Case: 871 | Input/Output: [(84 -43 -6 93) -43]
Test Case: 872 | Input/Output: [(9 -54 -10 2) -54]
Test Case: 873 | Input/Output: [(-59 33 87 36) -59]
Test Case: 874 | Input/Output: [(-49 74 -74 -50) -74]
Test Case: 875 | Input/Output: [(-26 49 -18 -61) -61]
Test Case: 876 | Input/Output: [(91 2 62 8) 2]
Test Case: 877 | Input/Output: [(53 -25 -1 -46) -46]
Test Case: 878 | Input/Output: [(31 84 91 -56) -56]
Test Case: 879 | Input/Output: [(-28 95 59 -48) -48]
Test Case: 880 | Input/Output: [(-77 -43 99 -3) -77]
Test Case: 881 | Input/Output: [(-59 35 -58 -23) -59]
Test Case: 882 | Input/Output: [(37 -78 -77 35) -78]
Test Case: 883 | Input/Output: [(1 -97 -92 -35) -97]
Test Case: 884 | Input/Output: [(9 -72 21 -21) -72]
Test Case: 885 | Input/Output: [(30 -79 -61 -5) -79]
Test Case: 886 | Input/Output: [(-84 -63 82 -19) -84]
Test Case: 887 | Input/Output: [(57 43 50 57) 43]
Test Case: 888 | Input/Output: [(-74 93 100 -92) -92]
Test Case: 889 | Input/Output: [(-64 -55 -96 84) -96]
Test Case: 890 | Input/Output: [(-88 0 49 30) -88]
Test Case: 891 | Input/Output: [(62 -56 -54 -60) -60]
Test Case: 892 | Input/Output: [(76 -54 7 92) -54]
Test Case: 893 | Input/Output: [(43 -9 51 -73) -73]
Test Case: 894 | Input/Output: [(17 -95 -86 -27) -95]
Test Case: 895 | Input/Output: [(68 57 -93 -43) -93]
Test Case: 896 | Input/Output: [(-71 -31 -30 84) -71]
Test Case: 897 | Input/Output: [(37 -41 -39 -23) -41]
Test Case: 898 | Input/Output: [(19 63 -74 -99) -99]
Test Case: 899 | Input/Output: [(-68 70 -46 9) -68]
Test Case: 900 | Input/Output: [(-40 57 -62 63) -62]
Test Case: 901 | Input/Output: [(74 -57 90 72) -57]
Test Case: 902 | Input/Output: [(-62 -16 -17 -60) -62]
Test Case: 903 | Input/Output: [(96 19 53 -63) -63]
Test Case: 904 | Input/Output: [(11 -84 -8 -28) -84]
Test Case: 905 | Input/Output: [(7 60 -95 -4) -95]
Test Case: 906 | Input/Output: [(40 75 25 64) 25]
Test Case: 907 | Input/Output: [(-78 -10 -77 -7) -78]
Test Case: 908 | Input/Output: [(-65 13 27 74) -65]
Test Case: 909 | Input/Output: [(95 39 -21 60) -21]
Test Case: 910 | Input/Output: [(-46 -7 77 -77) -77]
Test Case: 911 | Input/Output: [(-44 88 -38 21) -44]
Test Case: 912 | Input/Output: [(-35 67 22 27) -35]
Test Case: 913 | Input/Output: [(-18 -99 23 -20) -99]
Test Case: 914 | Input/Output: [(-86 -41 10 -4) -86]
Test Case: 915 | Input/Output: [(79 6 -58 55) -58]
Test Case: 916 | Input/Output: [(-53 -23 86 -65) -65]
Test Case: 917 | Input/Output: [(48 -61 -67 -64) -67]
Test Case: 918 | Input/Output: [(25 -15 -21 77) -21]
Test Case: 919 | Input/Output: [(-87 -80 18 50) -87]
Test Case: 920 | Input/Output: [(-69 22 -58 30) -69]
Test Case: 921 | Input/Output: [(77 25 89 -93) -93]
Test Case: 922 | Input/Output: [(77 -25 11 96) -25]
Test Case: 923 | Input/Output: [(-97 -92 49 -50) -97]
Test Case: 924 | Input/Output: [(62 -88 35 40) -88]
Test Case: 925 | Input/Output: [(64 -13 -79 -28) -79]
Test Case: 926 | Input/Output: [(7 -93 -29 -25) -93]
Test Case: 927 | Input/Output: [(-49 10 46 -11) -49]
Test Case: 928 | Input/Output: [(60 56 93 99) 56]
Test Case: 929 | Input/Output: [(78 63 -95 -42) -95]
Test Case: 930 | Input/Output: [(36 -63 -90 -72) -90]
Test Case: 931 | Input/Output: [(-61 67 76 19) -61]
Test Case: 932 | Input/Output: [(48 -76 -45 3) -76]
Test Case: 933 | Input/Output: [(65 -27 8 -48) -48]
Test Case: 934 | Input/Output: [(85 33 78 -25) -25]
Test Case: 935 | Input/Output: [(43 58 -6 13) -6]
Test Case: 936 | Input/Output: [(-44 37 85 -47) -47]
Test Case: 937 | Input/Output: [(-94 -43 -81 46) -94]
Test Case: 938 | Input/Output: [(-23 -81 80 -3) -81]
Test Case: 939 | Input/Output: [(4 -21 47 79) -21]
Test Case: 940 | Input/Output: [(-75 -55 -58 -60) -75]
Test Case: 941 | Input/Output: [(-36 -29 7 -20) -36]
Test Case: 942 | Input/Output: [(-88 -37 27 -42) -88]
Test Case: 943 | Input/Output: [(75 90 75 -9) -9]
Test Case: 944 | Input/Output: [(78 -49 20 -93) -93]
Test Case: 945 | Input/Output: [(-74 54 29 -39) -74]
Test Case: 946 | Input/Output: [(-79 -21 -37 -20) -79]
Test Case: 947 | Input/Output: [(14 -21 -50 71) -50]
Test Case: 948 | Input/Output: [(-74 -59 59 84) -74]
Test Case: 949 | Input/Output: [(-3 70 27 27) -3]
Test Case: 950 | Input/Output: [(35 -41 12 -33) -41]
Test Case: 951 | Input/Output: [(-75 -53 -23 20) -75]
Test Case: 952 | Input/Output: [(64 -99 0 -60) -99]
Test Case: 953 | Input/Output: [(14 -60 -44 72) -60]
Test Case: 954 | Input/Output: [(62 58 60 -77) -77]
Test Case: 955 | Input/Output: [(23 97 -1 -89) -89]
Test Case: 956 | Input/Output: [(52 -85 -60 -80) -85]
Test Case: 957 | Input/Output: [(18 91 29 48) 18]
Test Case: 958 | Input/Output: [(48 -48 30 -68) -68]
Test Case: 959 | Input/Output: [(35 35 -5 -2) -5]
Test Case: 960 | Input/Output: [(99 45 -71 -82) -82]
Test Case: 961 | Input/Output: [(-100 -35 74 23) -100]
Test Case: 962 | Input/Output: [(-11 -47 74 -19) -47]
Test Case: 963 | Input/Output: [(-84 39 16 -43) -84]
Test Case: 964 | Input/Output: [(-64 23 3 -64) -64]
Test Case: 965 | Input/Output: [(-17 -93 61 -58) -93]
Test Case: 966 | Input/Output: [(-23 20 -39 62) -39]
Test Case: 967 | Input/Output: [(-79 49 -67 -86) -86]
Test Case: 968 | Input/Output: [(-39 -58 -76 -95) -95]
Test Case: 969 | Input/Output: [(-72 -51 -36 89) -72]
Test Case: 970 | Input/Output: [(-24 -53 32 -44) -53]
Test Case: 971 | Input/Output: [(61 45 -58 27) -58]
Test Case: 972 | Input/Output: [(77 -71 10 48) -71]
Test Case: 973 | Input/Output: [(-67 -93 10 -92) -93]
Test Case: 974 | Input/Output: [(56 12 94 -45) -45]
Test Case: 975 | Input/Output: [(19 46 -42 -94) -94]
Test Case: 976 | Input/Output: [(53 27 -68 31) -68]
Test Case: 977 | Input/Output: [(91 76 -95 96) -95]
Test Case: 978 | Input/Output: [(6 18 34 23) 6]
Test Case: 979 | Input/Output: [(29 -68 4 21) -68]
Test Case: 980 | Input/Output: [(52 -19 100 31) -19]
Test Case: 981 | Input/Output: [(-62 81 72 -99) -99]
Test Case: 982 | Input/Output: [(78 -31 47 -93) -93]
Test Case: 983 | Input/Output: [(-71 82 38 -12) -71]
Test Case: 984 | Input/Output: [(11 18 -94 -49) -94]
Test Case: 985 | Input/Output: [(81 -24 -90 97) -90]
Test Case: 986 | Input/Output: [(-86 -48 -8 40) -86]
Test Case: 987 | Input/Output: [(49 -82 -21 -17) -82]
Test Case: 988 | Input/Output: [(-61 -28 -74 53) -74]
Test Case: 989 | Input/Output: [(29 -62 -84 -32) -84]
Test Case: 990 | Input/Output: [(-69 -62 -92 72) -92]
Test Case: 991 | Input/Output: [(49 51 61 66) 49]
Test Case: 992 | Input/Output: [(-50 -83 3 -16) -83]
Test Case: 993 | Input/Output: [(38 0 51 -61) -61]
Test Case: 994 | Input/Output: [(-47 -22 -27 -66) -66]
Test Case: 995 | Input/Output: [(-31 -81 -90 -19) -90]
Test Case: 996 | Input/Output: [(-9 -3 -82 -14) -82]
Test Case: 997 | Input/Output: [(95 49 94 58) 49]
Test Case: 998 | Input/Output: [(35 -3 -94 -26) -94]
Test Case: 999 | Input/Output: [(-98 -12 28 83) -98]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 10 90 46 -126 -6 -51 126 53 -50 40 30 10 -68 -115 -119 -7
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-49 -59 -49 -49] -59] [[-41 -41 -41 95] -41] [[-35 -35 -35 79] -35] [[-71 -71 -71 97] -71] [[-40 -100 -100 -100] -100] [[66 -11 66 66] -11] [[45 -22 -22 -22] -22] [[-41 -41 42 -41] -41] [[-18 57 -18 -18] -18] [[-35 84 84 84] -35] [(-35 -35 -35 -35) -35] [(-24 -24 -24 -24) -24] [(62 62 62 62) 62] [(-61 -61 -61 -61) -61] [(13 13 13 13) 13] [(32 52 98 41) 32] [(81 88 98 41) 41] [(73 62 93 35) 35] [(92 9 76 29) 9] [(91 70 97 51) 51] [(42 82 12 98) 12] [(25 100 52 85) 25] [(47 67 34 50) 34] [(20 11 21 8) 8] [(27 8 74 75) 8] [(52 9 38 51) 9] [(35 13 74 4) 4] [(94 63 29 55) 29] [(81 9 84 42) 9] [(69 79 77 17) 17] [(80 0 94 30) 0] [(68 10 28 5) 5] [(59 39 10 15) 10] [(20 79 9 69) 9] [(14 40 80 62) 14] [(-40 -36 -48 -70) -70] [(-26 48 -27 63) -27] [(55 -35 12 -7) -35] [(-79 -4 -20 -84) -84] [(9 40 -93 26) -93] [(55 12 -4 -53) -53] [(24 -46 12 -97) -97] [(-77 86 -33 26) -77] [(-31 70 63 -94) -94] [(39 92 -25 -41) -41] [(52 15 44 8) 8] [(-30 35 -98 27) -98] [(54 -67 77 -61) -67] [(40 53 75 -90) -90] [(-15 -47 -9 42) -47] [(-20 -42 -80 63) -80] [(-41 -76 34 -17) -76] [(-27 -79 68 95) -79] [(-48 -62 19 81) -62] [(2 -31 -13 8) -31] [(89 91 -34 5) -34] [(-76 -93 51 -60) -93] [(-13 -42 100 78) -42] [(-24 58 -11 -74) -74] [(6 -21 9 10) -21] [(-64 77 -35 88) -64] [(-94 -45 79 98) -94] [(-88 -34 -12 -62) -88] [(60 -68 47 85) -68] [(-96 4 41 46) -96] [(-37 40 71 35) -37] [(-40 45 -78 66) -78] [(93 63 90 11) 11] [(50 53 62 -79) -79] [(-40 -92 55 63) -92] [(-31 26 87 31) -31] [(96 -68 -27 -32) -68] [(95 95 -21 -22) -22] [(-65 66 -3 -59) -65] [(87 59 -98 -93) -98] [(57 30 76 -41) -41] [(-75 13 49 0) -75] [(87 -74 -36 71) -74] [(-76 -7 -22 23) -76] [(-52 -53 -19 100) -53] [(-51 44 -7 2) -51] [(-49 -18 12 58) -49] [(16 -94 -93 -70) -94] [(-52 -58 64 -74) -74] [(96 -63 94 -86) -86] [(-51 -50 -31 21) -51] [(-84 -47 21 71) -84] [(-63 -66 -12 67) -66] [(54 88 -13 34) -13] [(72 25 -68 15) -68] [(37 -54 -42 89) -54] [(93 19 73 -94) -94] [(-83 55 -58 28) -83] [(-91 -86 20 -99) -99] [(-91 83 -24 28) -91])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 631
Test mean error for best: 0.63100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: 57                 
Correct output: -35                 | Program output: 84                 
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 52                 
Correct output: 41                  | Program output: 88                 
Correct output: 35                  | Program output: 62                 
Correct output: 9                   | Program output: 9                  
Correct output: 51                  | Program output: 70                 
Correct output: 12                  | Program output: 82                 
Correct output: 25                  | Program output: 100                
Correct output: 34                  | Program output: 67                 
Correct output: 8                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 9                   | Program output: 9                  
Correct output: 4                   | Program output: 13                 
Correct output: 29                  | Program output: 63                 
Correct output: 9                   | Program output: 9                  
Correct output: 17                  | Program output: 79                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 10                 
Correct output: 10                  | Program output: 39                 
Correct output: 9                   | Program output: 79                 
Correct output: 14                  | Program output: 40                 
Correct output: -70                 | Program output: -36                
Correct output: -27                 | Program output: 48                 
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -4                 
Correct output: -93                 | Program output: 40                 
Correct output: -53                 | Program output: 12                 
Correct output: -97                 | Program output: -46                
Correct output: -77                 | Program output: 86                 
Correct output: -94                 | Program output: 70                 
Correct output: -41                 | Program output: 92                 
Correct output: 8                   | Program output: 15                 
Correct output: -98                 | Program output: 35                 
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: 53                 
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -42                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: 91                 
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: 58                 
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: 77                 
Correct output: -94                 | Program output: -45                
Correct output: -88                 | Program output: -34                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: 4                  
Correct output: -37                 | Program output: 40                 
Correct output: -78                 | Program output: 45                 
Correct output: 11                  | Program output: 63                 
Correct output: -79                 | Program output: 53                 
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: 26                 
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: 95                 
Correct output: -65                 | Program output: 66                 
Correct output: -98                 | Program output: 59                 
Correct output: -41                 | Program output: 30                 
Correct output: -75                 | Program output: 13                 
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -7                 
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: 44                 
Correct output: -49                 | Program output: -18                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -58                
Correct output: -86                 | Program output: -63                
Correct output: -51                 | Program output: -50                
Correct output: -84                 | Program output: -47                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: 88                 
Correct output: -68                 | Program output: 25                 
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: 19                 
Correct output: -83                 | Program output: 55                 
Correct output: -99                 | Program output: -86                
Correct output: -91                 | Program output: 83                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_dec} {:close 0, :instruction integer_div} {:close 0, :instruction tagged_340} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction tagged_135} {:close 1, :instruction boolean_yank} {:close 0, :instruction in2} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_flush} {:close 1, :instruction -76} {:close 0, :instruction tagged_969} {:close 1, :instruction integer_dup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 2, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction in2} {:close 1, :instruction integer_max} {:close 1, :instruction integer_inc} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_pop} {:close 2, :instruction exec_do*count} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_gte} {:close 1, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_k} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec} {:close 0, :instruction in1} {:close 1, :instruction integer_mult} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_s} {:close 1, :instruction integer_stackdepth} {:close 2, :instruction integer_yank} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_while} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_while} {:close 0, :instruction exec_do*times} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction in4} {:close 1, :instruction integer_shove} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_eq})
Lexicase best program: (integer_dec integer_div tagged_340 exec_do*times (integer_yankdup integer_fromboolean tagged_135 boolean_yank) in2 integer_fromboolean in4 boolean_dup_items boolean_yankdup boolean_yank integer_flush -76 tagged_969 integer_dup boolean_invert_second_then_and in2 print_integer integer_pop exec_k_when_autoconstructing () (exec_s_when_autoconstructing () () (integer_rot) exec_s_when_autoconstructing (boolean_pop boolean_stackdepth exec_do*count (boolean_yankdup) boolean_dup_items in2 integer_max) (integer_inc) (integer_sub integer_max) boolean_pop exec_do*count ()) integer_dup_times integer_lte boolean_pop boolean_rot integer_dec integer_gte boolean_shove exec_flush boolean_stackdepth boolean_swap boolean_empty exec_yankdup exec_k (boolean_swap) (integer_gte exec_k (integer_dec in1 integer_mult) (integer_rot exec_s (integer_stackdepth) (integer_yank) () exec_do*times (exec_dup_times (exec_rot () (integer_min boolean_invert_first_then_and) (integer_yank exec_y_when_autoconstructing () exec_while (integer_fromboolean integer_lte integer_empty boolean_pop) exec_while (exec_do*times (integer_add) exec_dup_times (boolean_eq exec_do*times (in4 integer_shove) exec_dup_items boolean_dup_items integer_stackdepth integer_mult in2 exec_s (integer_flush boolean_yank print_integer) (boolean_eq) ()))))))))
Lexicase best errors: [0 0 1 0 1 1 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 124
Percent parens: 0.266
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_dec} {:close 0, :instruction integer_div} {:close 0, :instruction tagged_340} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction tagged_135} {:close 1, :instruction boolean_yank} {:close 0, :instruction in2} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_flush} {:close 1, :instruction -76} {:close 0, :instruction tagged_969} {:close 1, :instruction integer_dup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 2, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction in2} {:close 1, :instruction integer_max} {:close 1, :instruction integer_inc} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_pop} {:close 2, :instruction exec_do*count} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_gte} {:close 1, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_k} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec} {:close 0, :instruction in1} {:close 1, :instruction integer_mult} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_s} {:close 1, :instruction integer_stackdepth} {:close 2, :instruction integer_yank} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_while} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_while} {:close 0, :instruction exec_do*times} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction in4} {:close 1, :instruction integer_shove} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_yank} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_eq})
Zero cases best program: (integer_dec integer_div tagged_340 exec_do*times (integer_yankdup integer_fromboolean tagged_135 boolean_yank) in2 integer_fromboolean in4 boolean_dup_items boolean_yankdup boolean_yank integer_flush -76 tagged_969 integer_dup boolean_invert_second_then_and in2 print_integer integer_pop exec_k_when_autoconstructing () (exec_s_when_autoconstructing () () (integer_rot) exec_s_when_autoconstructing (boolean_pop boolean_stackdepth exec_do*count (boolean_yankdup) boolean_dup_items in2 integer_max) (integer_inc) (integer_sub integer_max) boolean_pop exec_do*count ()) integer_dup_times integer_lte boolean_pop boolean_rot integer_dec integer_gte boolean_shove exec_flush boolean_stackdepth boolean_swap boolean_empty exec_yankdup exec_k (boolean_swap) (integer_gte exec_k (integer_dec in1 integer_mult) (integer_rot exec_s (integer_stackdepth) (integer_yank) () exec_do*times (exec_dup_times (exec_rot () (integer_min boolean_invert_first_then_and) (integer_yank exec_y_when_autoconstructing () exec_while (integer_fromboolean integer_lte integer_empty boolean_pop) exec_while (exec_do*times (integer_add) exec_dup_times (boolean_eq exec_do*times (in4 integer_shove) exec_dup_items boolean_dup_items integer_stackdepth integer_mult in2 exec_s (integer_flush boolean_yank print_integer) (boolean_eq) ()))))))))
Zero cases best errors: [0 0 1 0 1 1 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 124
Percent parens: 0.266
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 7 1 5 1 1 5 1 10 3)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (5 7 1 5 1 1 5 1 10 3)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_flush} {:close 2, :instruction boolean_and} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_add} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_k} {:close 0, :instruction integer_empty} {:close 1, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_rot} {:close 2, :instruction integer_eq} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_when} {:close 1, :instruction integer_swap} {:close 0, :instruction integer_div} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_yankdup} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction in2} {:close 0, :instruction integer_max} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_pop} {:close 0, :instruction in1} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_gt} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_yank} {:close 0, :instruction exec_do*count} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_dup})
Best program: (in1 in4 integer_mult boolean_flush boolean_and integer_yank exec_pop (integer_shove) integer_swap exec_y_when_autoconstructing (integer_dup integer_add exec_yankdup exec_k (integer_empty in2) (integer_dup_items boolean_pop exec_dup_items integer_pop exec_rot (integer_eq) () (integer_dup_times) exec_when (integer_swap) integer_div integer_min boolean_yank) integer_yankdup boolean_yankdup) in2 integer_max integer_yank print_integer integer_mult boolean_empty exec_pop (in1 exec_stackdepth exec_dup_items integer_lt integer_gt) integer_yank exec_yank exec_do*count (exec_while () boolean_shove exec_pop (exec_do*count (boolean_flush exec_dup ()))))
Errors: [0 0 1 0 1 1 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 51
Size: 66
Percent parens: 0.227
--- Population Statistics ---
Average total errors in population: 9.961
Median total errors in population: 10
Error averages by case: (0.995 0.993 0.999 0.995 0.999 0.999 0.995 0.999 0.99 0.997)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.342
Average program size in population (points): 70.488
Average percent parens in population: 0.279
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.299
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 499970
--- Timings ---
Current time: 1559593812560 milliseconds
Total Time:           2.8 seconds
Initialization:       0.1 seconds,  3.6%
Reproduction:         0.8 seconds, 26.8%
Fitness Testing:      1.9 seconds, 69.5%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 660
Test mean error for best: 0.66000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -59                 | Program output: -49                
Correct output: -41                 | Program output: 95                 
Correct output: -35                 | Program output: 79                 
Correct output: -71                 | Program output: 97                 
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: 66                 
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: 84                 
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 41                 
Correct output: 41                  | Program output: 41                 
Correct output: 35                  | Program output: 35                 
Correct output: 9                   | Program output: 29                 
Correct output: 51                  | Program output: 51                 
Correct output: 12                  | Program output: 98                 
Correct output: 25                  | Program output: 85                 
Correct output: 34                  | Program output: 50                 
Correct output: 8                   | Program output: 8                  
Correct output: 8                   | Program output: 75                 
Correct output: 9                   | Program output: 51                 
Correct output: 4                   | Program output: 4                  
Correct output: 29                  | Program output: 55                 
Correct output: 9                   | Program output: 42                 
Correct output: 17                  | Program output: 17                 
Correct output: 0                   | Program output: 30                 
Correct output: 5                   | Program output: 5                  
Correct output: 10                  | Program output: 15                 
Correct output: 9                   | Program output: 69                 
Correct output: 14                  | Program output: 62                 
Correct output: -70                 | Program output: -70                
Correct output: -27                 | Program output: 63                 
Correct output: -35                 | Program output: -7                 
Correct output: -84                 | Program output: -84                
Correct output: -93                 | Program output: 26                 
Correct output: -53                 | Program output: -53                
Correct output: -97                 | Program output: -97                
Correct output: -77                 | Program output: 26                 
Correct output: -94                 | Program output: -94                
Correct output: -41                 | Program output: -41                
Correct output: 8                   | Program output: 8                  
Correct output: -98                 | Program output: 27                 
Correct output: -67                 | Program output: -61                
Correct output: -90                 | Program output: -90                
Correct output: -47                 | Program output: 42                 
Correct output: -80                 | Program output: 63                 
Correct output: -76                 | Program output: -17                
Correct output: -79                 | Program output: 95                 
Correct output: -62                 | Program output: 81                 
Correct output: -31                 | Program output: 8                  
Correct output: -34                 | Program output: 5                  
Correct output: -93                 | Program output: -60                
Correct output: -42                 | Program output: 78                 
Correct output: -74                 | Program output: -74                
Correct output: -21                 | Program output: 10                 
Correct output: -64                 | Program output: 88                 
Correct output: -94                 | Program output: 98                 
Correct output: -88                 | Program output: -62                
Correct output: -68                 | Program output: 85                 
Correct output: -96                 | Program output: 46                 
Correct output: -37                 | Program output: 35                 
Correct output: -78                 | Program output: 66                 
Correct output: 11                  | Program output: 11                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: 63                 
Correct output: -31                 | Program output: 31                 
Correct output: -68                 | Program output: -32                
Correct output: -22                 | Program output: -22                
Correct output: -65                 | Program output: -59                
Correct output: -98                 | Program output: -93                
Correct output: -41                 | Program output: -41                
Correct output: -75                 | Program output: 0                  
Correct output: -74                 | Program output: 71                 
Correct output: -76                 | Program output: 23                 
Correct output: -53                 | Program output: 100                
Correct output: -51                 | Program output: 2                  
Correct output: -49                 | Program output: 58                 
Correct output: -94                 | Program output: -70                
Correct output: -74                 | Program output: -74                
Correct output: -86                 | Program output: -86                
Correct output: -51                 | Program output: 21                 
Correct output: -84                 | Program output: 71                 
Correct output: -66                 | Program output: 67                 
Correct output: -13                 | Program output: 34                 
Correct output: -68                 | Program output: 15                 
Correct output: -54                 | Program output: 89                 
Correct output: -94                 | Program output: -94                
Correct output: -83                 | Program output: 28                 
Correct output: -99                 | Program output: -99                
Correct output: -91                 | Program output: 28                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction in4} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction print_integer} {:close 0, :instruction 21} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_rot})
Lexicase best program: (integer_yank integer_flush exec_do*times (in4 boolean_invert_second_then_and print_integer) 21 exec_empty exec_dup_times (exec_k_when_autoconstructing () (integer_swap boolean_not integer_pop integer_dup_times integer_eq exec_noop integer_dec boolean_rot)))
Lexicase best errors: [0 0 0 1 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 23
Percent parens: 0.217
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction in4} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction print_integer} {:close 0, :instruction 21} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_rot})
Zero cases best program: (integer_yank integer_flush exec_do*times (in4 boolean_invert_second_then_and print_integer) 21 exec_empty exec_dup_times (exec_k_when_autoconstructing () (integer_swap boolean_not integer_pop integer_dup_times integer_eq exec_noop integer_dec boolean_rot)))
Zero cases best errors: [0 0 0 1 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 23
Percent parens: 0.217
--- Lexicase Population Statistics ---
Count of elite individuals by case: (318 324 317 53 317 317 65 250 317 317)
Population mean number of elite cases: 2.60
Count of perfect (error zero) individuals by case: (318 324 317 53 317 317 65 250 317 317)
Population mean number of perfect (error zero) cases: 2.60
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction in4} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction print_integer} {:close 0, :instruction 21} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_dec} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_rot})
Best program: (integer_flush exec_do*times (in4 boolean_invert_second_then_and) boolean_invert_second_then_and print_integer 21 exec_empty exec_dup_times (boolean_flush exec_k_when_autoconstructing () (integer_swap boolean_not exec_empty integer_pop integer_dup_times integer_eq exec_noop integer_dec integer_div) boolean_rot))
Errors: [0 0 0 1 0 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 21
Size: 26
Percent parens: 0.192
--- Population Statistics ---
Average total errors in population: 7.405
Median total errors in population: 9
Error averages by case: (0.682 0.676 0.683 0.947 0.683 0.683 0.935 0.75 0.683 0.683)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 44.643
Average program size in population (points): 60.87
Average percent parens in population: 0.254
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 17
Genome diversity (% unique genomes):	 0.956
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.956
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.121
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1281544
--- Timings ---
Current time: 1559593815189 milliseconds
Total Time:           5.2 seconds
Initialization:       0.1 seconds,  2.0%
Reproduction:         1.7 seconds, 33.4%
Fitness Testing:      2.9 seconds, 56.2%
Report:               0.4 seconds,  8.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -49                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: 66                 
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: 42                 
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: 84                 
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 98                 
Correct output: 41                  | Program output: 98                 
Correct output: 35                  | Program output: 93                 
Correct output: 9                   | Program output: 76                 
Correct output: 51                  | Program output: 97                 
Correct output: 12                  | Program output: 12                 
Correct output: 25                  | Program output: 52                 
Correct output: 34                  | Program output: 34                 
Correct output: 8                   | Program output: 21                 
Correct output: 8                   | Program output: 74                 
Correct output: 9                   | Program output: 38                 
Correct output: 4                   | Program output: 74                 
Correct output: 29                  | Program output: 29                 
Correct output: 9                   | Program output: 84                 
Correct output: 17                  | Program output: 77                 
Correct output: 0                   | Program output: 94                 
Correct output: 5                   | Program output: 28                 
Correct output: 10                  | Program output: 10                 
Correct output: 9                   | Program output: 9                  
Correct output: 14                  | Program output: 80                 
Correct output: -70                 | Program output: -48                
Correct output: -27                 | Program output: -27                
Correct output: -35                 | Program output: 12                 
Correct output: -84                 | Program output: -20                
Correct output: -93                 | Program output: -93                
Correct output: -53                 | Program output: -4                 
Correct output: -97                 | Program output: 12                 
Correct output: -77                 | Program output: -33                
Correct output: -94                 | Program output: 63                 
Correct output: -41                 | Program output: -25                
Correct output: 8                   | Program output: 44                 
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: 77                 
Correct output: -90                 | Program output: 75                 
Correct output: -47                 | Program output: -9                 
Correct output: -80                 | Program output: -80                
Correct output: -76                 | Program output: 34                 
Correct output: -79                 | Program output: 68                 
Correct output: -62                 | Program output: 19                 
Correct output: -31                 | Program output: -13                
Correct output: -34                 | Program output: -34                
Correct output: -93                 | Program output: 51                 
Correct output: -42                 | Program output: 100                
Correct output: -74                 | Program output: -11                
Correct output: -21                 | Program output: 9                  
Correct output: -64                 | Program output: -35                
Correct output: -94                 | Program output: 79                 
Correct output: -88                 | Program output: -12                
Correct output: -68                 | Program output: 47                 
Correct output: -96                 | Program output: 41                 
Correct output: -37                 | Program output: 71                 
Correct output: -78                 | Program output: -78                
Correct output: 11                  | Program output: 90                 
Correct output: -79                 | Program output: 62                 
Correct output: -92                 | Program output: 55                 
Correct output: -31                 | Program output: 87                 
Correct output: -68                 | Program output: -27                
Correct output: -22                 | Program output: -21                
Correct output: -65                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -41                 | Program output: 76                 
Correct output: -75                 | Program output: 49                 
Correct output: -74                 | Program output: -36                
Correct output: -76                 | Program output: -22                
Correct output: -53                 | Program output: -19                
Correct output: -51                 | Program output: -7                 
Correct output: -49                 | Program output: 12                 
Correct output: -94                 | Program output: -93                
Correct output: -74                 | Program output: 64                 
Correct output: -86                 | Program output: 94                 
Correct output: -51                 | Program output: -31                
Correct output: -84                 | Program output: 21                 
Correct output: -66                 | Program output: -12                
Correct output: -13                 | Program output: -13                
Correct output: -68                 | Program output: -68                
Correct output: -54                 | Program output: -42                
Correct output: -94                 | Program output: 73                 
Correct output: -83                 | Program output: -58                
Correct output: -99                 | Program output: 20                 
Correct output: -91                 | Program output: -24                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_lte} {:close 1, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_swap} {:close 0, :instruction -74} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction print_integer} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 1, :instruction tag_exec_603} {:close 0, :instruction integer_eq})
Lexicase best program: (integer_lte in3 integer_mult exec_swap (-74 exec_k (boolean_shove boolean_dup boolean_not) (in2) in1 integer_fromboolean) (print_integer integer_inc) exec_empty boolean_flush exec_do*count () in2 boolean_yankdup exec_if (integer_gte) (boolean_invert_second_then_and) tag_exec_603 () integer_eq)
Lexicase best errors: [0 0 1 0 0 1 1 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 33
Percent parens: 0.273
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_lte} {:close 1, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_swap} {:close 0, :instruction -74} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction print_integer} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 1, :instruction tag_exec_603} {:close 0, :instruction integer_eq})
Zero cases best program: (integer_lte in3 integer_mult exec_swap (-74 exec_k (boolean_shove boolean_dup boolean_not) (in2) in1 integer_fromboolean) (print_integer integer_inc) exec_empty boolean_flush exec_do*count () in2 boolean_yankdup exec_if (integer_gte) (boolean_invert_second_then_and) tag_exec_603 () integer_eq)
Zero cases best errors: [0 0 1 0 0 1 1 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 33
Percent parens: 0.273
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 3 61 3 670 147 145 727 3 521)
Population mean number of elite cases: 2.28
Count of perfect (error zero) individuals by case: (3 3 61 3 670 147 145 727 3 521)
Population mean number of perfect (error zero) cases: 2.28
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*times} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction print_integer} {:close 0, :instruction 21} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_rot})
Best program: (integer_flush exec_do*times (in4 in3 boolean_invert_second_then_and print_integer) 21 exec_empty exec_rot (exec_dup_times (exec_k_when_autoconstructing () (integer_swap boolean_swap boolean_not integer_pop integer_dup_times integer_eq integer_dec boolean_rot))) () ())
Errors: [0 0 1 0 0 1 1 0 0 1]
Total: 4
Mean: 0.4
Genome size: 19
Size: 27
Percent parens: 0.296
--- Population Statistics ---
Average total errors in population: 7.717
Median total errors in population: 7
Error averages by case: (0.997 0.997 0.939 0.997 0.33 0.853 0.855 0.273 0.997 0.479)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 27.998
Average program size in population (points): 37.941
Average percent parens in population: 0.242
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.006
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.069
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 2037505
--- Timings ---
Current time: 1559593817768 milliseconds
Total Time:           7.8 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.0 seconds, 37.7%
Fitness Testing:      3.6 seconds, 46.6%
Report:               1.1 seconds, 14.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 631
Test mean error for best: 0.63100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: 57                 
Correct output: -35                 | Program output: 84                 
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 52                 
Correct output: 41                  | Program output: 88                 
Correct output: 35                  | Program output: 62                 
Correct output: 9                   | Program output: 9                  
Correct output: 51                  | Program output: 70                 
Correct output: 12                  | Program output: 82                 
Correct output: 25                  | Program output: 100                
Correct output: 34                  | Program output: 67                 
Correct output: 8                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 9                   | Program output: 9                  
Correct output: 4                   | Program output: 13                 
Correct output: 29                  | Program output: 63                 
Correct output: 9                   | Program output: 9                  
Correct output: 17                  | Program output: 79                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 10                 
Correct output: 10                  | Program output: 39                 
Correct output: 9                   | Program output: 79                 
Correct output: 14                  | Program output: 40                 
Correct output: -70                 | Program output: -36                
Correct output: -27                 | Program output: 48                 
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -4                 
Correct output: -93                 | Program output: 40                 
Correct output: -53                 | Program output: 12                 
Correct output: -97                 | Program output: -46                
Correct output: -77                 | Program output: 86                 
Correct output: -94                 | Program output: 70                 
Correct output: -41                 | Program output: 92                 
Correct output: 8                   | Program output: 15                 
Correct output: -98                 | Program output: 35                 
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: 53                 
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -42                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: 91                 
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: 58                 
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: 77                 
Correct output: -94                 | Program output: -45                
Correct output: -88                 | Program output: -34                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: 4                  
Correct output: -37                 | Program output: 40                 
Correct output: -78                 | Program output: 45                 
Correct output: 11                  | Program output: 63                 
Correct output: -79                 | Program output: 53                 
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: 26                 
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: 95                 
Correct output: -65                 | Program output: 66                 
Correct output: -98                 | Program output: 59                 
Correct output: -41                 | Program output: 30                 
Correct output: -75                 | Program output: 13                 
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -7                 
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: 44                 
Correct output: -49                 | Program output: -18                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -58                
Correct output: -86                 | Program output: -63                
Correct output: -51                 | Program output: -50                
Correct output: -84                 | Program output: -47                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: 88                 
Correct output: -68                 | Program output: 25                 
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: 19                 
Correct output: -83                 | Program output: 55                 
Correct output: -99                 | Program output: -86                
Correct output: -91                 | Program output: 83                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_lte} {:close 1, :instruction in3} {:close 0, :instruction -74} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger})
Lexicase best program: (boolean_dup_items integer_lte in3 -74 exec_shove (boolean_dup boolean_not) in2 integer_fromboolean print_integer exec_empty boolean_flush exec_do*count () in2 boolean_yankdup integer_flush boolean_invert_second_then_and integer_dup_items integer_eq boolean_frominteger)
Lexicase best errors: [0 1 1 0 1 0 1 1 1 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 23
Percent parens: 0.130
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_lte} {:close 1, :instruction in3} {:close 0, :instruction -74} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger})
Zero cases best program: (boolean_dup_items integer_lte in3 -74 exec_shove (boolean_dup boolean_not) in2 integer_fromboolean print_integer exec_empty boolean_flush exec_do*count () in2 boolean_yankdup integer_flush boolean_invert_second_then_and integer_dup_items integer_eq boolean_frominteger)
Zero cases best errors: [0 1 1 0 1 0 1 1 1 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 23
Percent parens: 0.130
--- Lexicase Population Statistics ---
Count of elite individuals by case: (123 200 284 121 119 117 118 200 202 119)
Population mean number of elite cases: 1.60
Count of perfect (error zero) individuals by case: (123 200 284 121 119 117 118 200 202 119)
Population mean number of perfect (error zero) cases: 1.60
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_lte} {:close 1, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction -74} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction exec_y_when_autoconstructing} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_eq})
Best program: (integer_lte in3 exec_rot (-74 boolean_dup boolean_not) (in2) (in1 integer_fromboolean) print_integer boolean_dup_items exec_empty boolean_flush exec_do*count () boolean_yankdup exec_y_when_autoconstructing () boolean_invert_second_then_and integer_eq)
Errors: [0 1 1 0 1 0 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 18
Size: 24
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 8.397
Median total errors in population: 9
Error averages by case: (0.877 0.8 0.716 0.879 0.881 0.883 0.882 0.8 0.798 0.881)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 31.199
Average program size in population (points): 42.139
Average percent parens in population: 0.241
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 6
Genome diversity (% unique genomes):	 0.984
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.984
Total error diversity:				 0.005
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.108
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2636290
--- Timings ---
Current time: 1559593819843 milliseconds
Total Time:          10.2 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.2 seconds, 41.0%
Fitness Testing:      4.2 seconds, 41.0%
Report:               1.7 seconds, 17.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 423
Test mean error for best: 0.42300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -49                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: 66                 
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: -35                
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 32                 
Correct output: 41                  | Program output: 81                 
Correct output: 35                  | Program output: 73                 
Correct output: 9                   | Program output: 76                 
Correct output: 51                  | Program output: 91                 
Correct output: 12                  | Program output: 12                 
Correct output: 25                  | Program output: 25                 
Correct output: 34                  | Program output: 34                 
Correct output: 8                   | Program output: 20                 
Correct output: 8                   | Program output: 27                 
Correct output: 9                   | Program output: 38                 
Correct output: 4                   | Program output: 35                 
Correct output: 29                  | Program output: 29                 
Correct output: 9                   | Program output: 81                 
Correct output: 17                  | Program output: 69                 
Correct output: 0                   | Program output: 80                 
Correct output: 5                   | Program output: 28                 
Correct output: 10                  | Program output: 10                 
Correct output: 9                   | Program output: 9                  
Correct output: 14                  | Program output: 14                 
Correct output: -70                 | Program output: -48                
Correct output: -27                 | Program output: -27                
Correct output: -35                 | Program output: 12                 
Correct output: -84                 | Program output: -79                
Correct output: -93                 | Program output: -93                
Correct output: -53                 | Program output: -4                 
Correct output: -97                 | Program output: 12                 
Correct output: -77                 | Program output: -77                
Correct output: -94                 | Program output: -31                
Correct output: -41                 | Program output: -25                
Correct output: 8                   | Program output: 44                 
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: 54                 
Correct output: -90                 | Program output: 40                 
Correct output: -47                 | Program output: -15                
Correct output: -80                 | Program output: -80                
Correct output: -76                 | Program output: -41                
Correct output: -79                 | Program output: -27                
Correct output: -62                 | Program output: -48                
Correct output: -31                 | Program output: -13                
Correct output: -34                 | Program output: -34                
Correct output: -93                 | Program output: -76                
Correct output: -42                 | Program output: -13                
Correct output: -74                 | Program output: -24                
Correct output: -21                 | Program output: 6                  
Correct output: -64                 | Program output: -64                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -68                 | Program output: 47                 
Correct output: -96                 | Program output: -96                
Correct output: -37                 | Program output: -37                
Correct output: -78                 | Program output: -78                
Correct output: 11                  | Program output: 90                 
Correct output: -79                 | Program output: 50                 
Correct output: -92                 | Program output: -40                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -27                
Correct output: -22                 | Program output: -21                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -98                
Correct output: -41                 | Program output: 57                 
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -36                
Correct output: -76                 | Program output: -76                
Correct output: -53                 | Program output: -52                
Correct output: -51                 | Program output: -51                
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -93                
Correct output: -74                 | Program output: -52                
Correct output: -86                 | Program output: 94                 
Correct output: -51                 | Program output: -51                
Correct output: -84                 | Program output: -84                
Correct output: -66                 | Program output: -63                
Correct output: -13                 | Program output: -13                
Correct output: -68                 | Program output: -68                
Correct output: -54                 | Program output: -42                
Correct output: -94                 | Program output: 73                 
Correct output: -83                 | Program output: -83                
Correct output: -99                 | Program output: -91                
Correct output: -91                 | Program output: -91                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Lexicase best program: (boolean_dup_items in3 -74 print_boolean exec_shove (boolean_dup in1 integer_min boolean_not) in2 integer_yank print_integer exec_empty boolean_flush exec_do*count () in2 boolean_yankdup integer_gte boolean_invert_second_then_and integer_dup_items integer_eq)
Lexicase best errors: [1 0 1 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 24
Percent parens: 0.125
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Zero cases best program: (boolean_dup_items in3 -74 print_boolean exec_shove (boolean_dup in1 integer_min boolean_not) in2 integer_yank print_integer exec_empty boolean_flush exec_do*count () in2 boolean_yankdup integer_gte boolean_invert_second_then_and integer_dup_items integer_eq)
Zero cases best errors: [1 0 1 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 24
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (122 284 299 454 148 99 720 219 283 102)
Population mean number of elite cases: 2.73
Count of perfect (error zero) individuals by case: (122 284 299 454 148 99 720 219 283 102)
Population mean number of perfect (error zero) cases: 2.73
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Best program: (boolean_dup_items in3 -74 print_boolean exec_shove (boolean_dup in1 integer_min boolean_not) in2 integer_yank print_integer exec_empty boolean_flush exec_do*count () in2 boolean_yankdup integer_gte boolean_invert_second_then_and integer_dup_items integer_eq)
Errors: [1 0 1 0 1 0 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 21
Size: 24
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 7.27
Median total errors in population: 7
Error averages by case: (0.878 0.716 0.701 0.546 0.852 0.901 0.28 0.781 0.717 0.898)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.975
Average program size in population (points): 45.471
Average percent parens in population: 0.220
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.007
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.112
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 3069339
--- Timings ---
Current time: 1559593821668 milliseconds
Total Time:          12.1 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.4 seconds, 44.6%
Fitness Testing:      4.6 seconds, 37.7%
Report:               2.0 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 407
Test mean error for best: 0.40700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: -35                
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 32                 
Correct output: 41                  | Program output: 81                 
Correct output: 35                  | Program output: 62                 
Correct output: 9                   | Program output: 9                  
Correct output: 51                  | Program output: 70                 
Correct output: 12                  | Program output: 42                 
Correct output: 25                  | Program output: 25                 
Correct output: 34                  | Program output: 47                 
Correct output: 8                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 9                   | Program output: 9                  
Correct output: 4                   | Program output: 13                 
Correct output: 29                  | Program output: 63                 
Correct output: 9                   | Program output: 9                  
Correct output: 17                  | Program output: 69                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 10                 
Correct output: 10                  | Program output: 39                 
Correct output: 9                   | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -70                 | Program output: -40                
Correct output: -27                 | Program output: -26                
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -79                
Correct output: -93                 | Program output: 9                  
Correct output: -53                 | Program output: 12                 
Correct output: -97                 | Program output: -46                
Correct output: -77                 | Program output: -77                
Correct output: -94                 | Program output: -31                
Correct output: -41                 | Program output: 39                 
Correct output: 8                   | Program output: 15                 
Correct output: -98                 | Program output: -30                
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: 40                 
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -42                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: 89                 
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: -24                
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: -64                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: -96                
Correct output: -37                 | Program output: -37                
Correct output: -78                 | Program output: -40                
Correct output: 11                  | Program output: 63                 
Correct output: -79                 | Program output: 50                 
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: 95                 
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: 59                 
Correct output: -41                 | Program output: 30                 
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: -51                
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -58                
Correct output: -86                 | Program output: -63                
Correct output: -51                 | Program output: -51                
Correct output: -84                 | Program output: -84                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: 54                 
Correct output: -68                 | Program output: 25                 
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: 19                 
Correct output: -83                 | Program output: -83                
Correct output: -99                 | Program output: -91                
Correct output: -91                 | Program output: -91                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction -74} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Lexicase best program: (boolean_dup_items in3 boolean_eq -74 exec_shove (integer_rot boolean_dup in1 exec_rot () (integer_min boolean_not) (in2) print_integer exec_empty boolean_flush) exec_do*count () boolean_yankdup integer_gte boolean_invert_second_then_and integer_dup_items integer_eq)
Lexicase best errors: [0 0 0 0 0 0 1 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 27
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction -74} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Zero cases best program: (boolean_dup_items in3 boolean_eq -74 exec_shove (integer_rot boolean_dup in1 exec_rot () (integer_min boolean_not) (in2) print_integer exec_empty boolean_flush) exec_do*count () boolean_yankdup integer_gte boolean_invert_second_then_and integer_dup_items integer_eq)
Zero cases best errors: [0 0 0 0 0 0 1 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 27
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (378 307 379 298 738 273 377 369 691 323)
Population mean number of elite cases: 4.13
Count of perfect (error zero) individuals by case: (378 307 379 298 738 273 377 369 691 323)
Population mean number of perfect (error zero) cases: 4.13
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction -74} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_do*count} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Best program: (boolean_dup_items in3 boolean_eq -74 exec_shove (integer_rot boolean_dup in1 exec_rot () (integer_min boolean_not) (in2) print_integer exec_empty boolean_flush) exec_do*count () boolean_yankdup integer_gte boolean_invert_second_then_and integer_dup_items integer_eq)
Errors: [0 0 0 0 0 0 1 0 0 0]
Total: 1
Mean: 0.1
Genome size: 21
Size: 27
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 5.867
Median total errors in population: 5
Error averages by case: (0.622 0.693 0.621 0.702 0.262 0.727 0.623 0.631 0.309 0.677)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.436
Average program size in population (points): 22.616
Average percent parens in population: 0.138
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 22
Genome diversity (% unique genomes):	 0.934
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.934
Total error diversity:				 0.01
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 3382005
--- Timings ---
Current time: 1559593823378 milliseconds
Total Time:          13.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.5 seconds, 47.4%
Fitness Testing:      4.9 seconds, 35.6%
Report:               2.2 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 486
Test mean error for best: 0.48600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: 84                 
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 98                 
Correct output: 41                  | Program output: 98                 
Correct output: 35                  | Program output: 93                 
Correct output: 9                   | Program output: 76                 
Correct output: 51                  | Program output: 97                 
Correct output: 12                  | Program output: 12                 
Correct output: 25                  | Program output: 52                 
Correct output: 34                  | Program output: 34                 
Correct output: 8                   | Program output: 21                 
Correct output: 8                   | Program output: 74                 
Correct output: 9                   | Program output: 38                 
Correct output: 4                   | Program output: 74                 
Correct output: 29                  | Program output: 29                 
Correct output: 9                   | Program output: 84                 
Correct output: 17                  | Program output: 77                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 28                 
Correct output: 10                  | Program output: 10                 
Correct output: 9                   | Program output: 9                  
Correct output: 14                  | Program output: 80                 
Correct output: -70                 | Program output: -40                
Correct output: -27                 | Program output: -27                
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -79                
Correct output: -93                 | Program output: -93                
Correct output: -53                 | Program output: -4                 
Correct output: -97                 | Program output: -46                
Correct output: -77                 | Program output: -33                
Correct output: -94                 | Program output: 63                 
Correct output: -41                 | Program output: -25                
Correct output: 8                   | Program output: 44                 
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: 75                 
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -42                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: -11                
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: -35                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: 41                 
Correct output: -37                 | Program output: 71                 
Correct output: -78                 | Program output: -78                
Correct output: 11                  | Program output: 90                 
Correct output: -79                 | Program output: 62                 
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: 87                 
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: -21                
Correct output: -65                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -41                 | Program output: 76                 
Correct output: -75                 | Program output: 49                 
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: -7                 
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -58                
Correct output: -86                 | Program output: -63                
Correct output: -51                 | Program output: -51                
Correct output: -84                 | Program output: -84                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: -13                
Correct output: -68                 | Program output: -68                
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: 73                 
Correct output: -83                 | Program output: -58                
Correct output: -99                 | Program output: -91                
Correct output: -91                 | Program output: -24                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction tagged_958} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Lexicase best program: (in3 in2 -74 print_boolean exec_shove (boolean_dup in1 tagged_958 integer_min boolean_not) in2 integer_yank print_integer exec_empty exec_do*count () in2 boolean_invert_second_then_and integer_dup_items integer_eq)
Lexicase best errors: [0 1 0 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 22
Percent parens: 0.136
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction tagged_958} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Zero cases best program: (in3 in2 -74 print_boolean exec_shove (boolean_dup in1 tagged_958 integer_min boolean_not) in2 integer_yank print_integer exec_empty exec_do*count () in2 boolean_invert_second_then_and integer_dup_items integer_eq)
Zero cases best errors: [0 1 0 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 22
Percent parens: 0.136
--- Lexicase Population Statistics ---
Count of elite individuals by case: (490 9 759 566 223 766 565 560 3 224)
Population mean number of elite cases: 4.16
Count of perfect (error zero) individuals by case: (490 9 759 566 223 766 565 560 3 224)
Population mean number of perfect (error zero) cases: 4.16
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction tagged_866} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction exec_do*count} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Best program: (boolean_dup_items in3 in2 -74 tagged_866 print_boolean exec_shove (boolean_dup integer_fromboolean in1 integer_min boolean_not) in2 integer_yank print_integer exec_empty exec_do*count () in2 boolean_yankdup boolean_invert_second_then_and integer_dup_items integer_eq)
Errors: [0 1 0 0 0 0 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 22
Size: 25
Percent parens: 0.120
--- Population Statistics ---
Average total errors in population: 5.835
Median total errors in population: 5
Error averages by case: (0.51 0.991 0.241 0.434 0.777 0.234 0.435 0.44 0.997 0.776)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 20.928
Average program size in population (points): 26.208
Average percent parens in population: 0.198
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 16
Genome diversity (% unique genomes):	 0.957
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.957
Total error diversity:				 0.009
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.162
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 3824524
--- Timings ---
Current time: 1559593825198 milliseconds
Total Time:          15.6 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         7.6 seconds, 48.9%
Fitness Testing:      5.3 seconds, 34.1%
Report:               2.5 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 196
Test mean error for best: 0.19600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: -35                
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 32                 
Correct output: 41                  | Program output: 81                 
Correct output: 35                  | Program output: 62                 
Correct output: 9                   | Program output: 9                  
Correct output: 51                  | Program output: 70                 
Correct output: 12                  | Program output: 12                 
Correct output: 25                  | Program output: 25                 
Correct output: 34                  | Program output: 34                 
Correct output: 8                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 9                   | Program output: 9                  
Correct output: 4                   | Program output: 13                 
Correct output: 29                  | Program output: 29                 
Correct output: 9                   | Program output: 9                  
Correct output: 17                  | Program output: 69                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 9                   | Program output: 9                  
Correct output: 14                  | Program output: 14                 
Correct output: -70                 | Program output: -48                
Correct output: -27                 | Program output: -27                
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -79                
Correct output: -93                 | Program output: -93                
Correct output: -53                 | Program output: -4                 
Correct output: -97                 | Program output: -46                
Correct output: -77                 | Program output: -77                
Correct output: -94                 | Program output: -31                
Correct output: -41                 | Program output: -25                
Correct output: 8                   | Program output: 15                 
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: 40                 
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -80                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: -24                
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: -64                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: -96                
Correct output: -37                 | Program output: -37                
Correct output: -78                 | Program output: -78                
Correct output: 11                  | Program output: 63                 
Correct output: -79                 | Program output: 50                 
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: -21                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -98                
Correct output: -41                 | Program output: 30                 
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: -51                
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -58                
Correct output: -86                 | Program output: -63                
Correct output: -51                 | Program output: -51                
Correct output: -84                 | Program output: -84                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: -13                
Correct output: -68                 | Program output: -68                
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: 19                 
Correct output: -83                 | Program output: -83                
Correct output: -99                 | Program output: -91                
Correct output: -91                 | Program output: -91                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Lexicase best program: (boolean_dup_items in3 in2 -74 print_boolean exec_shove (boolean_dup in1 exec_dup (integer_min boolean_not) in2) integer_yank print_integer exec_y_when_autoconstructing (exec_empty in2 integer_gte) boolean_invert_second_then_and integer_dup_items integer_eq)
Lexicase best errors: [0 0 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 25
Percent parens: 0.160
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_gte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Zero cases best program: (boolean_dup_items in3 in2 -74 print_boolean exec_shove (boolean_dup in1 exec_dup (integer_min boolean_not) in2) integer_yank print_integer exec_y_when_autoconstructing (exec_empty in2 integer_gte) boolean_invert_second_then_and integer_dup_items integer_eq)
Zero cases best errors: [0 0 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 25
Percent parens: 0.160
--- Lexicase Population Statistics ---
Count of elite individuals by case: (726 114 113 224 401 417 439 115 421 397)
Population mean number of elite cases: 3.37
Count of perfect (error zero) individuals by case: (726 114 113 224 401 417 439 115 421 397)
Population mean number of perfect (error zero) cases: 3.37
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Best program: (boolean_dup_items in3 exec_s_when_autoconstructing (in2 -74 print_boolean exec_shove (boolean_dup in1 exec_dup (integer_min boolean_not) in2) integer_yank) (print_integer exec_y_when_autoconstructing (exec_empty in2 boolean_yankdup) boolean_invert_second_then_and) (integer_dup_items integer_eq))
Errors: [0 0 0 0 0 0 0 1 0 0]
Total: 1
Mean: 0.1
Genome size: 22
Size: 29
Percent parens: 0.241
--- Population Statistics ---
Average total errors in population: 6.633
Median total errors in population: 7
Error averages by case: (0.274 0.886 0.887 0.776 0.599 0.583 0.561 0.885 0.579 0.603)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 20.975
Average program size in population (points): 25.401
Average percent parens in population: 0.170
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.99
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.99
Total error diversity:				 0.01
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.203
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 4255142
--- Timings ---
Current time: 1559593826904 milliseconds
Total Time:          17.4 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.7 seconds, 50.2%
Fitness Testing:      5.7 seconds, 33.0%
Report:               2.8 seconds, 16.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 196
Test mean error for best: 0.19600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: -35                
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 32                 
Correct output: 41                  | Program output: 81                 
Correct output: 35                  | Program output: 62                 
Correct output: 9                   | Program output: 9                  
Correct output: 51                  | Program output: 70                 
Correct output: 12                  | Program output: 12                 
Correct output: 25                  | Program output: 25                 
Correct output: 34                  | Program output: 34                 
Correct output: 8                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 9                   | Program output: 9                  
Correct output: 4                   | Program output: 13                 
Correct output: 29                  | Program output: 29                 
Correct output: 9                   | Program output: 9                  
Correct output: 17                  | Program output: 69                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 9                   | Program output: 9                  
Correct output: 14                  | Program output: 14                 
Correct output: -70                 | Program output: -48                
Correct output: -27                 | Program output: -27                
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -79                
Correct output: -93                 | Program output: -93                
Correct output: -53                 | Program output: -4                 
Correct output: -97                 | Program output: -46                
Correct output: -77                 | Program output: -77                
Correct output: -94                 | Program output: -31                
Correct output: -41                 | Program output: -25                
Correct output: 8                   | Program output: 15                 
Correct output: -98                 | Program output: -98                
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: 40                 
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -80                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: -24                
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: -64                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: -96                
Correct output: -37                 | Program output: -37                
Correct output: -78                 | Program output: -78                
Correct output: 11                  | Program output: 63                 
Correct output: -79                 | Program output: 50                 
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: -21                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -98                
Correct output: -41                 | Program output: 30                 
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: -51                
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -58                
Correct output: -86                 | Program output: -63                
Correct output: -51                 | Program output: -51                
Correct output: -84                 | Program output: -84                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: -13                
Correct output: -68                 | Program output: -68                
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: 19                 
Correct output: -83                 | Program output: -83                
Correct output: -99                 | Program output: -91                
Correct output: -91                 | Program output: -91                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Lexicase best program: (boolean_dup_items in3 in2 -74 print_boolean exec_shove (boolean_dup in1 exec_dup (integer_min boolean_not) in2) integer_yank print_integer exec_empty in2 boolean_yankdup integer_gte boolean_yank exec_if (boolean_invert_second_then_and) (integer_dup_items integer_eq))
Lexicase best errors: [0 0 0 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 28
Percent parens: 0.179
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Zero cases best program: (boolean_dup_items in3 in2 -74 print_boolean exec_shove (boolean_dup in1 exec_dup (integer_min boolean_not) in2) integer_yank print_integer exec_empty in2 boolean_yankdup integer_gte boolean_yank exec_if (boolean_invert_second_then_and) (integer_dup_items integer_eq))
Zero cases best errors: [0 0 0 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 28
Percent parens: 0.179
--- Lexicase Population Statistics ---
Count of elite individuals by case: (478 455 510 440 611 478 695 435 73 451)
Population mean number of elite cases: 4.63
Count of perfect (error zero) individuals by case: (478 455 510 440 611 478 695 435 73 451)
Population mean number of perfect (error zero) cases: 4.63
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_gte} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Best program: (boolean_dup_items in3 in2 -74 print_boolean exec_shove (boolean_eq boolean_dup in1 exec_dup (integer_min boolean_not) in2) integer_yank print_integer exec_y_when_autoconstructing (exec_empty in2 integer_gte) integer_dup_items integer_eq)
Errors: [0 0 0 0 0 0 0 0 1 0]
Total: 1
Mean: 0.1
Genome size: 21
Size: 25
Percent parens: 0.160
--- Population Statistics ---
Average total errors in population: 5.374
Median total errors in population: 5
Error averages by case: (0.522 0.545 0.49 0.56 0.389 0.522 0.305 0.565 0.927 0.549)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 21.459
Average program size in population (points): 26.708
Average percent parens in population: 0.192
Minimum age in population: 8.0
Maximum age in population: 8.0
Average age in population: 8.0
Median age in population: 8.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 7
Genome diversity (% unique genomes):	 0.974
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.974
Total error diversity:				 0.01
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.231
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 4550807
--- Timings ---
Current time: 1559593828511 milliseconds
Total Time:          19.0 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.9 seconds, 51.9%
Fitness Testing:      6.0 seconds, 31.7%
Report:               3.0 seconds, 15.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 210
Test mean error for best: 0.21000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 1
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 1
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 1
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 1
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 1
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 1
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 1
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 1
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 1
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 1
Test Case  264 | Error: 1
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 1
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 1
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 1
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 1
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 1
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 1
Test Case  400 | Error: 1
Test Case  401 | Error: 1
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 1
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 1
Test Case  453 | Error: 0
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 1
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 1
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 1
Test Case  500 | Error: 1
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 1
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 1
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 1
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 1
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 1
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 1
Test Case  713 | Error: 1
Test Case  714 | Error: 1
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 1
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 1
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 1
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 1
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 1
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 1
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 1
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 1
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 1
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 1
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 1
Test Case  985 | Error: 1
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 1
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: -35                
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 32                 
Correct output: 41                  | Program output: 41                 
Correct output: 35                  | Program output: 35                 
Correct output: 9                   | Program output: 9                  
Correct output: 51                  | Program output: 51                 
Correct output: 12                  | Program output: 42                 
Correct output: 25                  | Program output: 25                 
Correct output: 34                  | Program output: 47                 
Correct output: 8                   | Program output: 8                  
Correct output: 8                   | Program output: 8                  
Correct output: 9                   | Program output: 9                  
Correct output: 4                   | Program output: 4                  
Correct output: 29                  | Program output: 55                 
Correct output: 9                   | Program output: 9                  
Correct output: 17                  | Program output: 17                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 10                  | Program output: 15                 
Correct output: 9                   | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -70                 | Program output: -70                
Correct output: -27                 | Program output: -26                
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -84                
Correct output: -93                 | Program output: 9                  
Correct output: -53                 | Program output: -53                
Correct output: -97                 | Program output: -97                
Correct output: -77                 | Program output: -77                
Correct output: -94                 | Program output: -94                
Correct output: -41                 | Program output: -41                
Correct output: 8                   | Program output: 8                  
Correct output: -98                 | Program output: -30                
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: -90                
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -42                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: 5                  
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: -74                
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: -64                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: -96                
Correct output: -37                 | Program output: -37                
Correct output: -78                 | Program output: -40                
Correct output: 11                  | Program output: 11                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: -22                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -93                
Correct output: -41                 | Program output: -41                
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: -51                
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -74                
Correct output: -86                 | Program output: -86                
Correct output: -51                 | Program output: -51                
Correct output: -84                 | Program output: -84                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: 34                 
Correct output: -68                 | Program output: 15                 
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: -94                
Correct output: -83                 | Program output: -83                
Correct output: -99                 | Program output: -99                
Correct output: -91                 | Program output: -91                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Lexicase best program: (boolean_dup_items in3 in2 -74 print_boolean exec_shove (boolean_dup in1 in4) exec_dup (exec_dup (integer_min boolean_not) in2) integer_yank print_integer exec_y_when_autoconstructing (exec_empty in2 integer_gte) boolean_eq exec_dup_times (boolean_invert_second_then_and) integer_dup_items integer_eq)
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 31
Percent parens: 0.194
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_dup_items} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction -74} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_eq})
Zero cases best program: (boolean_dup_items in3 in2 -74 print_boolean exec_shove (boolean_dup in1 in4) exec_dup (exec_dup (integer_min boolean_not) in2) integer_yank print_integer exec_y_when_autoconstructing (exec_empty in2 integer_gte) boolean_eq exec_dup_times (boolean_invert_second_then_and) integer_dup_items integer_eq)
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 31
Percent parens: 0.194
--- Lexicase Population Statistics ---
Count of elite individuals by case: (466 648 363 425 139 139 238 430 628 466)
Population mean number of elite cases: 3.94
Count of perfect (error zero) individuals by case: (466 648 363 425 139 139 238 430 628 466)
Population mean number of perfect (error zero) cases: 3.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_dup_items} {:close 0, :instruction -74} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction in4} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_not} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_and} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items})
Best program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 21
Size: 23
Percent parens: 0.087
--- Population Statistics ---
Average total errors in population: 6.058
Median total errors in population: 7
Error averages by case: (0.534 0.352 0.637 0.575 0.861 0.861 0.762 0.57 0.372 0.534)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 21.636
Average program size in population (points): 26.627
Average percent parens in population: 0.182
Minimum age in population: 9.0
Maximum age in population: 9.0
Average age in population: 9.0
Median age in population: 9.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.997
Total error diversity:				 0.011
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.217
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 4856191
--- Timings ---
Current time: 1559593830171 milliseconds
Total Time:          20.7 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        11.0 seconds, 53.3%
Fitness Testing:      6.4 seconds, 30.8%
Report:               3.2 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 9
Successful program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 23


Auto-simplifying with starting size: 23
step: 0
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 500
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 1000
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 1500
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 2000
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 2500
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 3000
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 3500
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 4000
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 4500
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

step: 5000
program: (boolean_dup_items -74 exec_shove (integer_fromboolean in4) boolean_dup in2 in1 integer_min boolean_not integer_min in2 integer_yank print_integer exec_empty in2 integer_gte boolean_frominteger boolean_and boolean_invert_second_then_and integer_dup_items)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 23

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 210
Test mean error for best: 0.21000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 1
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 1
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 1
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 1
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 1
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 1
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 1
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 1
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 1
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 1
Test Case  264 | Error: 1
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 1
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 1
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 1
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 1
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 1
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 1
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 1
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 1
Test Case  400 | Error: 1
Test Case  401 | Error: 1
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 1
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 1
Test Case  453 | Error: 0
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 1
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 1
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 1
Test Case  500 | Error: 1
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 1
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 1
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 1
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 1
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 1
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 1
Test Case  713 | Error: 1
Test Case  714 | Error: 1
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 1
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 1
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 1
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 1
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 1
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 1
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 1
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 1
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 1
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 1
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 1
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 1
Test Case  985 | Error: 1
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 1
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -59                 | Program output: -59                
Correct output: -41                 | Program output: -41                
Correct output: -35                 | Program output: -35                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -11                 | Program output: -11                
Correct output: -22                 | Program output: -22                
Correct output: -41                 | Program output: -41                
Correct output: -18                 | Program output: -18                
Correct output: -35                 | Program output: -35                
Correct output: -35                 | Program output: -35                
Correct output: -24                 | Program output: -24                
Correct output: 62                  | Program output: 62                 
Correct output: -61                 | Program output: -61                
Correct output: 13                  | Program output: 13                 
Correct output: 32                  | Program output: 32                 
Correct output: 41                  | Program output: 41                 
Correct output: 35                  | Program output: 35                 
Correct output: 9                   | Program output: 9                  
Correct output: 51                  | Program output: 51                 
Correct output: 12                  | Program output: 42                 
Correct output: 25                  | Program output: 25                 
Correct output: 34                  | Program output: 47                 
Correct output: 8                   | Program output: 8                  
Correct output: 8                   | Program output: 8                  
Correct output: 9                   | Program output: 9                  
Correct output: 4                   | Program output: 4                  
Correct output: 29                  | Program output: 55                 
Correct output: 9                   | Program output: 9                  
Correct output: 17                  | Program output: 17                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 10                  | Program output: 15                 
Correct output: 9                   | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: -70                 | Program output: -70                
Correct output: -27                 | Program output: -26                
Correct output: -35                 | Program output: -35                
Correct output: -84                 | Program output: -84                
Correct output: -93                 | Program output: 9                  
Correct output: -53                 | Program output: -53                
Correct output: -97                 | Program output: -97                
Correct output: -77                 | Program output: -77                
Correct output: -94                 | Program output: -94                
Correct output: -41                 | Program output: -41                
Correct output: 8                   | Program output: 8                  
Correct output: -98                 | Program output: -30                
Correct output: -67                 | Program output: -67                
Correct output: -90                 | Program output: -90                
Correct output: -47                 | Program output: -47                
Correct output: -80                 | Program output: -42                
Correct output: -76                 | Program output: -76                
Correct output: -79                 | Program output: -79                
Correct output: -62                 | Program output: -62                
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: 5                  
Correct output: -93                 | Program output: -93                
Correct output: -42                 | Program output: -42                
Correct output: -74                 | Program output: -74                
Correct output: -21                 | Program output: -21                
Correct output: -64                 | Program output: -64                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -68                 | Program output: -68                
Correct output: -96                 | Program output: -96                
Correct output: -37                 | Program output: -37                
Correct output: -78                 | Program output: -40                
Correct output: 11                  | Program output: 11                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -68                
Correct output: -22                 | Program output: -22                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -93                
Correct output: -41                 | Program output: -41                
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -53                 | Program output: -53                
Correct output: -51                 | Program output: -51                
Correct output: -49                 | Program output: -49                
Correct output: -94                 | Program output: -94                
Correct output: -74                 | Program output: -74                
Correct output: -86                 | Program output: -86                
Correct output: -51                 | Program output: -51                
Correct output: -84                 | Program output: -84                
Correct output: -66                 | Program output: -66                
Correct output: -13                 | Program output: 34                 
Correct output: -68                 | Program output: 15                 
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: -94                
Correct output: -83                 | Program output: -83                
Correct output: -99                 | Program output: -99                
Correct output: -91                 | Program output: -91                
;;******************************
