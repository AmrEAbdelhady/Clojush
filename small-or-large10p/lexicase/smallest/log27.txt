Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[7 -51 -51 -51] -51] [[-3 50 -3 -3] -3] [[-89 33 -89 -89] -89] [[11 11 11 -28] -28] [[-18 -39 -39 -39] -39] [[90 72 72 72] 72] [[39 39 100 39] 39] [[50 -90 50 50] -90] [[-26 -26 -26 -10] -26] [[20 27 20 20] 20] [(-46 -46 -46 -46) -46] [(-67 -67 -67 -67) -67] [(29 29 29 29) 29] [(32 32 32 32) 32] [(61 61 61 61) 61] [(96 65 56 48) 48] [(93 45 75 91) 45] [(54 14 34 40) 14] [(14 66 28 17) 14] [(69 50 96 56) 50] [(64 24 31 95) 24] [(29 89 47 90) 29] [(34 49 30 38) 30] [(24 93 9 43) 9] [(49 9 14 91) 9] [(88 82 94 22) 22] [(61 46 92 3) 3] [(13 71 38 38) 13] [(55 71 4 69) 4] [(36 8 94 54) 8] [(66 74 53 52) 52] [(84 61 1 14) 1] [(29 23 94 9) 9] [(27 21 50 60) 21] [(47 81 85 0) 0] [(13 69 71 36) 13] [(-79 1 -37 66) -79] [(-72 -50 46 -92) -92] [(10 38 -19 -93) -93] [(7 62 -3 75) -3] [(39 74 55 88) 39] [(42 -74 72 -33) -74] [(45 -5 -34 -36) -36] [(98 14 -92 -36) -92] [(-83 12 -89 60) -89] [(-94 -72 11 -71) -94] [(-76 47 4 0) -76] [(-55 33 32 -64) -64] [(80 69 -80 -39) -80] [(-85 -41 -19 -69) -85] [(-55 -42 93 -83) -83] [(98 39 74 -73) -73] [(-44 80 84 65) -44] [(-91 -78 -16 -19) -91] [(-22 -31 63 -95) -95] [(-92 54 1 -49) -92] [(-7 -66 -94 -25) -94] [(13 31 -74 -97) -97] [(-93 100 -93 50) -93] [(20 20 -75 -51) -75] [(-99 99 -62 17) -99] [(23 83 -14 -94) -94] [(-99 -94 92 3) -99] [(-65 -88 -83 43) -88] [(94 -81 -5 27) -81] [(34 41 -79 -4) -79] [(59 -81 87 52) -81] [(66 -92 59 8) -92] [(-85 -80 -94 -52) -94] [(-6 -6 28 80) -6] [(-49 -79 -31 14) -79] [(-96 5 -11 32) -96] [(20 2 95 -30) -30] [(-45 83 -96 55) -96] [(-33 46 -49 20) -49] [(-63 -68 -7 39) -68] [(-17 16 -11 -27) -27] [(58 -45 84 -5) -45] [(-94 73 14 0) -94] [(-85 -70 -75 22) -85] [(35 -35 26 47) -35] [(-76 63 -62 24) -76] [(-39 -91 -83 -52) -91] [(-75 52 -22 -1) -75] [(-29 -32 3 -74) -74] [(12 32 -49 -22) -49] [(47 36 12 13) 12] [(-38 32 7 0) -38] [(-61 9 59 79) -61] [(64 -2 -96 -89) -96] [(-2 -41 -24 -52) -52] [(-97 79 -79 -25) -97] [(-35 8 -9 -85) -85] [(-56 -36 -83 -4) -83] [(79 30 -10 -77) -77])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[7 -51 -51 -51] -51]
Train Case:   6 | Input/Output: [[-3 50 -3 -3] -3]
Train Case:   7 | Input/Output: [[-89 33 -89 -89] -89]
Train Case:   8 | Input/Output: [[11 11 11 -28] -28]
Train Case:   9 | Input/Output: [[-18 -39 -39 -39] -39]
Train Case:  10 | Input/Output: [[90 72 72 72] 72]
Train Case:  11 | Input/Output: [[39 39 100 39] 39]
Train Case:  12 | Input/Output: [[50 -90 50 50] -90]
Train Case:  13 | Input/Output: [[-26 -26 -26 -10] -26]
Train Case:  14 | Input/Output: [[20 27 20 20] 20]
Train Case:  15 | Input/Output: [(-46 -46 -46 -46) -46]
Train Case:  16 | Input/Output: [(-67 -67 -67 -67) -67]
Train Case:  17 | Input/Output: [(29 29 29 29) 29]
Train Case:  18 | Input/Output: [(32 32 32 32) 32]
Train Case:  19 | Input/Output: [(61 61 61 61) 61]
Train Case:  20 | Input/Output: [(96 65 56 48) 48]
Train Case:  21 | Input/Output: [(93 45 75 91) 45]
Train Case:  22 | Input/Output: [(54 14 34 40) 14]
Train Case:  23 | Input/Output: [(14 66 28 17) 14]
Train Case:  24 | Input/Output: [(69 50 96 56) 50]
Train Case:  25 | Input/Output: [(64 24 31 95) 24]
Train Case:  26 | Input/Output: [(29 89 47 90) 29]
Train Case:  27 | Input/Output: [(34 49 30 38) 30]
Train Case:  28 | Input/Output: [(24 93 9 43) 9]
Train Case:  29 | Input/Output: [(49 9 14 91) 9]
Train Case:  30 | Input/Output: [(88 82 94 22) 22]
Train Case:  31 | Input/Output: [(61 46 92 3) 3]
Train Case:  32 | Input/Output: [(13 71 38 38) 13]
Train Case:  33 | Input/Output: [(55 71 4 69) 4]
Train Case:  34 | Input/Output: [(36 8 94 54) 8]
Train Case:  35 | Input/Output: [(66 74 53 52) 52]
Train Case:  36 | Input/Output: [(84 61 1 14) 1]
Train Case:  37 | Input/Output: [(29 23 94 9) 9]
Train Case:  38 | Input/Output: [(27 21 50 60) 21]
Train Case:  39 | Input/Output: [(47 81 85 0) 0]
Train Case:  40 | Input/Output: [(13 69 71 36) 13]
Train Case:  41 | Input/Output: [(-79 1 -37 66) -79]
Train Case:  42 | Input/Output: [(-72 -50 46 -92) -92]
Train Case:  43 | Input/Output: [(10 38 -19 -93) -93]
Train Case:  44 | Input/Output: [(7 62 -3 75) -3]
Train Case:  45 | Input/Output: [(39 74 55 88) 39]
Train Case:  46 | Input/Output: [(42 -74 72 -33) -74]
Train Case:  47 | Input/Output: [(45 -5 -34 -36) -36]
Train Case:  48 | Input/Output: [(98 14 -92 -36) -92]
Train Case:  49 | Input/Output: [(-83 12 -89 60) -89]
Train Case:  50 | Input/Output: [(-94 -72 11 -71) -94]
Train Case:  51 | Input/Output: [(-76 47 4 0) -76]
Train Case:  52 | Input/Output: [(-55 33 32 -64) -64]
Train Case:  53 | Input/Output: [(80 69 -80 -39) -80]
Train Case:  54 | Input/Output: [(-85 -41 -19 -69) -85]
Train Case:  55 | Input/Output: [(-55 -42 93 -83) -83]
Train Case:  56 | Input/Output: [(98 39 74 -73) -73]
Train Case:  57 | Input/Output: [(-44 80 84 65) -44]
Train Case:  58 | Input/Output: [(-91 -78 -16 -19) -91]
Train Case:  59 | Input/Output: [(-22 -31 63 -95) -95]
Train Case:  60 | Input/Output: [(-92 54 1 -49) -92]
Train Case:  61 | Input/Output: [(-7 -66 -94 -25) -94]
Train Case:  62 | Input/Output: [(13 31 -74 -97) -97]
Train Case:  63 | Input/Output: [(-93 100 -93 50) -93]
Train Case:  64 | Input/Output: [(20 20 -75 -51) -75]
Train Case:  65 | Input/Output: [(-99 99 -62 17) -99]
Train Case:  66 | Input/Output: [(23 83 -14 -94) -94]
Train Case:  67 | Input/Output: [(-99 -94 92 3) -99]
Train Case:  68 | Input/Output: [(-65 -88 -83 43) -88]
Train Case:  69 | Input/Output: [(94 -81 -5 27) -81]
Train Case:  70 | Input/Output: [(34 41 -79 -4) -79]
Train Case:  71 | Input/Output: [(59 -81 87 52) -81]
Train Case:  72 | Input/Output: [(66 -92 59 8) -92]
Train Case:  73 | Input/Output: [(-85 -80 -94 -52) -94]
Train Case:  74 | Input/Output: [(-6 -6 28 80) -6]
Train Case:  75 | Input/Output: [(-49 -79 -31 14) -79]
Train Case:  76 | Input/Output: [(-96 5 -11 32) -96]
Train Case:  77 | Input/Output: [(20 2 95 -30) -30]
Train Case:  78 | Input/Output: [(-45 83 -96 55) -96]
Train Case:  79 | Input/Output: [(-33 46 -49 20) -49]
Train Case:  80 | Input/Output: [(-63 -68 -7 39) -68]
Train Case:  81 | Input/Output: [(-17 16 -11 -27) -27]
Train Case:  82 | Input/Output: [(58 -45 84 -5) -45]
Train Case:  83 | Input/Output: [(-94 73 14 0) -94]
Train Case:  84 | Input/Output: [(-85 -70 -75 22) -85]
Train Case:  85 | Input/Output: [(35 -35 26 47) -35]
Train Case:  86 | Input/Output: [(-76 63 -62 24) -76]
Train Case:  87 | Input/Output: [(-39 -91 -83 -52) -91]
Train Case:  88 | Input/Output: [(-75 52 -22 -1) -75]
Train Case:  89 | Input/Output: [(-29 -32 3 -74) -74]
Train Case:  90 | Input/Output: [(12 32 -49 -22) -49]
Train Case:  91 | Input/Output: [(47 36 12 13) 12]
Train Case:  92 | Input/Output: [(-38 32 7 0) -38]
Train Case:  93 | Input/Output: [(-61 9 59 79) -61]
Train Case:  94 | Input/Output: [(64 -2 -96 -89) -96]
Train Case:  95 | Input/Output: [(-2 -41 -24 -52) -52]
Train Case:  96 | Input/Output: [(-97 79 -79 -25) -97]
Train Case:  97 | Input/Output: [(-35 8 -9 -85) -85]
Train Case:  98 | Input/Output: [(-56 -36 -83 -4) -83]
Train Case:  99 | Input/Output: [(79 30 -10 -77) -77]
Test Case:   0 | Input/Output: [[-34 61 61 61] -34]
Test Case:   1 | Input/Output: [[-47 -47 -70 -47] -70]
Test Case:   2 | Input/Output: [[77 1 77 77] 1]
Test Case:   3 | Input/Output: [[81 81 81 -63] -63]
Test Case:   4 | Input/Output: [[43 43 -7 43] -7]
Test Case:   5 | Input/Output: [[16 -97 16 16] -97]
Test Case:   6 | Input/Output: [[-90 -90 -90 74] -90]
Test Case:   7 | Input/Output: [[79 13 13 13] 13]
Test Case:   8 | Input/Output: [[23 53 23 23] 23]
Test Case:   9 | Input/Output: [[-37 -37 -42 -37] -42]
Test Case:  10 | Input/Output: [[-80 47 47 47] -80]
Test Case:  11 | Input/Output: [[-22 -22 -22 -17] -22]
Test Case:  12 | Input/Output: [[-86 -21 -21 -21] -86]
Test Case:  13 | Input/Output: [[85 88 85 85] 85]
Test Case:  14 | Input/Output: [[54 61 61 61] 54]
Test Case:  15 | Input/Output: [[-68 -68 3 -68] -68]
Test Case:  16 | Input/Output: [[-86 -86 -86 -98] -98]
Test Case:  17 | Input/Output: [[-1 -32 -1 -1] -32]
Test Case:  18 | Input/Output: [[-34 0 -34 -34] -34]
Test Case:  19 | Input/Output: [[48 48 -40 48] -40]
Test Case:  20 | Input/Output: [[39 39 -22 39] -22]
Test Case:  21 | Input/Output: [[-61 -61 -60 -61] -61]
Test Case:  22 | Input/Output: [[-97 -97 -97 -12] -97]
Test Case:  23 | Input/Output: [[47 47 47 94] 47]
Test Case:  24 | Input/Output: [[7 -37 7 7] -37]
Test Case:  25 | Input/Output: [[6 10 10 10] 6]
Test Case:  26 | Input/Output: [[-21 -21 -21 -96] -96]
Test Case:  27 | Input/Output: [[26 -11 -11 -11] -11]
Test Case:  28 | Input/Output: [[-49 -84 -49 -49] -84]
Test Case:  29 | Input/Output: [[-97 -97 -35 -97] -97]
Test Case:  30 | Input/Output: [[-18 65 65 65] -18]
Test Case:  31 | Input/Output: [[29 -58 29 29] -58]
Test Case:  32 | Input/Output: [[-1 -1 -1 -69] -69]
Test Case:  33 | Input/Output: [[78 69 69 69] 69]
Test Case:  34 | Input/Output: [[-43 -100 -100 -100] -100]
Test Case:  35 | Input/Output: [[-8 -8 27 -8] -8]
Test Case:  36 | Input/Output: [[-37 -34 -34 -34] -37]
Test Case:  37 | Input/Output: [[-72 -72 -72 -93] -93]
Test Case:  38 | Input/Output: [[-81 -81 14 -81] -81]
Test Case:  39 | Input/Output: [[82 -5 -5 -5] -5]
Test Case:  40 | Input/Output: [[12 12 -49 12] -49]
Test Case:  41 | Input/Output: [[-97 -52 -97 -97] -97]
Test Case:  42 | Input/Output: [[-48 -62 -48 -48] -62]
Test Case:  43 | Input/Output: [[-56 -56 -56 -80] -80]
Test Case:  44 | Input/Output: [[81 81 81 44] 44]
Test Case:  45 | Input/Output: [[72 -52 -52 -52] -52]
Test Case:  46 | Input/Output: [[-60 -60 -60 1] -60]
Test Case:  47 | Input/Output: [[-73 -73 46 -73] -73]
Test Case:  48 | Input/Output: [[-16 -16 -16 0] -16]
Test Case:  49 | Input/Output: [[87 -41 87 87] -41]
Test Case:  50 | Input/Output: [[91 91 -26 91] -26]
Test Case:  51 | Input/Output: [[20 20 -7 20] -7]
Test Case:  52 | Input/Output: [[90 90 90 -30] -30]
Test Case:  53 | Input/Output: [[-30 -36 -30 -30] -36]
Test Case:  54 | Input/Output: [[-28 -28 -15 -28] -28]
Test Case:  55 | Input/Output: [[70 70 70 11] 11]
Test Case:  56 | Input/Output: [[75 -77 -77 -77] -77]
Test Case:  57 | Input/Output: [[34 76 34 34] 34]
Test Case:  58 | Input/Output: [[-91 14 -91 -91] -91]
Test Case:  59 | Input/Output: [[-5 -46 -5 -5] -46]
Test Case:  60 | Input/Output: [[0 54 54 54] 0]
Test Case:  61 | Input/Output: [[-15 -15 -15 72] -15]
Test Case:  62 | Input/Output: [[4 65 4 4] 4]
Test Case:  63 | Input/Output: [[-19 -31 -19 -19] -31]
Test Case:  64 | Input/Output: [[29 29 23 29] 23]
Test Case:  65 | Input/Output: [[67 4 4 4] 4]
Test Case:  66 | Input/Output: [[63 -48 -48 -48] -48]
Test Case:  67 | Input/Output: [[57 -36 57 57] -36]
Test Case:  68 | Input/Output: [[-53 -20 -20 -20] -53]
Test Case:  69 | Input/Output: [[41 88 88 88] 41]
Test Case:  70 | Input/Output: [[93 49 93 93] 49]
Test Case:  71 | Input/Output: [[-6 -77 -77 -77] -77]
Test Case:  72 | Input/Output: [[48 48 48 98] 48]
Test Case:  73 | Input/Output: [[-58 -58 -58 -56] -58]
Test Case:  74 | Input/Output: [[-32 -32 -32 -69] -69]
Test Case:  75 | Input/Output: [[-55 -55 -55 59] -55]
Test Case:  76 | Input/Output: [[68 68 31 68] 31]
Test Case:  77 | Input/Output: [[69 -10 -10 -10] -10]
Test Case:  78 | Input/Output: [[33 4 4 4] 4]
Test Case:  79 | Input/Output: [[54 -7 -7 -7] -7]
Test Case:  80 | Input/Output: [[-44 -85 -85 -85] -85]
Test Case:  81 | Input/Output: [[23 70 23 23] 23]
Test Case:  82 | Input/Output: [[53 53 53 45] 45]
Test Case:  83 | Input/Output: [[51 51 51 84] 51]
Test Case:  84 | Input/Output: [[14 14 14 -57] -57]
Test Case:  85 | Input/Output: [[52 -31 52 52] -31]
Test Case:  86 | Input/Output: [[98 46 98 98] 46]
Test Case:  87 | Input/Output: [[-83 -83 -87 -83] -87]
Test Case:  88 | Input/Output: [[-43 36 -43 -43] -43]
Test Case:  89 | Input/Output: [[63 63 24 63] 24]
Test Case:  90 | Input/Output: [[-41 -90 -41 -41] -90]
Test Case:  91 | Input/Output: [[92 71 71 71] 71]
Test Case:  92 | Input/Output: [[89 16 16 16] 16]
Test Case:  93 | Input/Output: [[65 -13 65 65] -13]
Test Case:  94 | Input/Output: [[58 58 58 -13] -13]
Test Case:  95 | Input/Output: [[-7 9 9 9] -7]
Test Case:  96 | Input/Output: [[10 -6 10 10] -6]
Test Case:  97 | Input/Output: [[59 59 61 59] 59]
Test Case:  98 | Input/Output: [[-48 99 99 99] -48]
Test Case:  99 | Input/Output: [[-59 -76 -59 -59] -76]
Test Case: 100 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 101 | Input/Output: [(64 64 64 64) 64]
Test Case: 102 | Input/Output: [(91 91 91 91) 91]
Test Case: 103 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 104 | Input/Output: [(97 97 97 97) 97]
Test Case: 105 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 106 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 107 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 108 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 109 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 110 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 111 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 112 | Input/Output: [(26 26 26 26) 26]
Test Case: 113 | Input/Output: [(58 58 58 58) 58]
Test Case: 114 | Input/Output: [(13 13 13 13) 13]
Test Case: 115 | Input/Output: [(93 93 93 93) 93]
Test Case: 116 | Input/Output: [(38 38 38 38) 38]
Test Case: 117 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 118 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 119 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 120 | Input/Output: [(16 16 16 16) 16]
Test Case: 121 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 122 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 123 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 124 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 125 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 126 | Input/Output: [(81 81 81 81) 81]
Test Case: 127 | Input/Output: [(51 51 51 51) 51]
Test Case: 128 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 129 | Input/Output: [(53 53 53 53) 53]
Test Case: 130 | Input/Output: [(38 38 38 38) 38]
Test Case: 131 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 132 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 133 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 134 | Input/Output: [(33 33 33 33) 33]
Test Case: 135 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 136 | Input/Output: [(87 87 87 87) 87]
Test Case: 137 | Input/Output: [(38 38 38 38) 38]
Test Case: 138 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 139 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 140 | Input/Output: [(58 58 58 58) 58]
Test Case: 141 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 142 | Input/Output: [(-54 -54 -54 -54) -54]
Test Case: 143 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 144 | Input/Output: [(63 63 63 63) 63]
Test Case: 145 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 146 | Input/Output: [(64 64 64 64) 64]
Test Case: 147 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 148 | Input/Output: [(61 61 61 61) 61]
Test Case: 149 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 150 | Input/Output: [(71 71 71 71) 71]
Test Case: 151 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 152 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 153 | Input/Output: [(-54 -54 -54 -54) -54]
Test Case: 154 | Input/Output: [(96 96 96 96) 96]
Test Case: 155 | Input/Output: [(97 97 97 97) 97]
Test Case: 156 | Input/Output: [(41 41 41 41) 41]
Test Case: 157 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 158 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 159 | Input/Output: [(92 92 92 92) 92]
Test Case: 160 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 161 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 162 | Input/Output: [(39 39 39 39) 39]
Test Case: 163 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 164 | Input/Output: [(57 57 57 57) 57]
Test Case: 165 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 166 | Input/Output: [(74 74 74 74) 74]
Test Case: 167 | Input/Output: [(52 52 52 52) 52]
Test Case: 168 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 169 | Input/Output: [(26 26 26 26) 26]
Test Case: 170 | Input/Output: [(63 63 63 63) 63]
Test Case: 171 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 172 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 173 | Input/Output: [(9 9 9 9) 9]
Test Case: 174 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 175 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 176 | Input/Output: [(68 68 68 68) 68]
Test Case: 177 | Input/Output: [(14 14 14 14) 14]
Test Case: 178 | Input/Output: [(43 43 43 43) 43]
Test Case: 179 | Input/Output: [(6 6 6 6) 6]
Test Case: 180 | Input/Output: [(28 28 28 28) 28]
Test Case: 181 | Input/Output: [(20 20 20 20) 20]
Test Case: 182 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 183 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 184 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 185 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 186 | Input/Output: [(36 36 36 36) 36]
Test Case: 187 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 188 | Input/Output: [(15 15 15 15) 15]
Test Case: 189 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 190 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 191 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 192 | Input/Output: [(23 23 23 23) 23]
Test Case: 193 | Input/Output: [(75 75 75 75) 75]
Test Case: 194 | Input/Output: [(31 31 31 31) 31]
Test Case: 195 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 196 | Input/Output: [(59 59 59 59) 59]
Test Case: 197 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 198 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 199 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 200 | Input/Output: [(13 23 11 97) 11]
Test Case: 201 | Input/Output: [(5 95 53 85) 5]
Test Case: 202 | Input/Output: [(17 28 76 17) 17]
Test Case: 203 | Input/Output: [(24 38 29 51) 24]
Test Case: 204 | Input/Output: [(54 83 73 100) 54]
Test Case: 205 | Input/Output: [(82 7 10 81) 7]
Test Case: 206 | Input/Output: [(47 8 81 42) 8]
Test Case: 207 | Input/Output: [(86 27 21 45) 21]
Test Case: 208 | Input/Output: [(38 60 44 96) 38]
Test Case: 209 | Input/Output: [(90 64 7 18) 7]
Test Case: 210 | Input/Output: [(32 64 43 17) 17]
Test Case: 211 | Input/Output: [(52 10 89 13) 10]
Test Case: 212 | Input/Output: [(49 43 72 2) 2]
Test Case: 213 | Input/Output: [(89 56 80 45) 45]
Test Case: 214 | Input/Output: [(10 45 41 65) 10]
Test Case: 215 | Input/Output: [(50 97 41 73) 41]
Test Case: 216 | Input/Output: [(82 38 70 74) 38]
Test Case: 217 | Input/Output: [(17 80 15 80) 15]
Test Case: 218 | Input/Output: [(80 62 24 2) 2]
Test Case: 219 | Input/Output: [(61 90 68 69) 61]
Test Case: 220 | Input/Output: [(31 65 22 2) 2]
Test Case: 221 | Input/Output: [(25 75 66 56) 25]
Test Case: 222 | Input/Output: [(95 25 80 25) 25]
Test Case: 223 | Input/Output: [(70 74 46 22) 22]
Test Case: 224 | Input/Output: [(97 95 73 50) 50]
Test Case: 225 | Input/Output: [(84 48 43 65) 43]
Test Case: 226 | Input/Output: [(42 94 6 0) 0]
Test Case: 227 | Input/Output: [(55 7 100 16) 7]
Test Case: 228 | Input/Output: [(23 78 47 50) 23]
Test Case: 229 | Input/Output: [(9 28 26 79) 9]
Test Case: 230 | Input/Output: [(24 30 51 0) 0]
Test Case: 231 | Input/Output: [(43 8 38 77) 8]
Test Case: 232 | Input/Output: [(70 87 6 68) 6]
Test Case: 233 | Input/Output: [(75 23 32 99) 23]
Test Case: 234 | Input/Output: [(33 32 59 56) 32]
Test Case: 235 | Input/Output: [(4 17 30 4) 4]
Test Case: 236 | Input/Output: [(94 14 74 15) 14]
Test Case: 237 | Input/Output: [(30 80 78 62) 30]
Test Case: 238 | Input/Output: [(20 49 97 34) 20]
Test Case: 239 | Input/Output: [(43 84 62 55) 43]
Test Case: 240 | Input/Output: [(55 58 50 34) 34]
Test Case: 241 | Input/Output: [(6 10 0 12) 0]
Test Case: 242 | Input/Output: [(33 82 78 34) 33]
Test Case: 243 | Input/Output: [(49 85 74 19) 19]
Test Case: 244 | Input/Output: [(30 60 63 66) 30]
Test Case: 245 | Input/Output: [(73 26 30 57) 26]
Test Case: 246 | Input/Output: [(85 11 81 7) 7]
Test Case: 247 | Input/Output: [(41 55 36 5) 5]
Test Case: 248 | Input/Output: [(88 15 93 82) 15]
Test Case: 249 | Input/Output: [(70 94 66 83) 66]
Test Case: 250 | Input/Output: [(18 75 98 76) 18]
Test Case: 251 | Input/Output: [(18 78 93 75) 18]
Test Case: 252 | Input/Output: [(61 60 6 97) 6]
Test Case: 253 | Input/Output: [(7 79 44 45) 7]
Test Case: 254 | Input/Output: [(15 10 67 0) 0]
Test Case: 255 | Input/Output: [(72 48 36 2) 2]
Test Case: 256 | Input/Output: [(29 100 44 47) 29]
Test Case: 257 | Input/Output: [(46 57 98 7) 7]
Test Case: 258 | Input/Output: [(41 9 62 81) 9]
Test Case: 259 | Input/Output: [(41 38 87 55) 38]
Test Case: 260 | Input/Output: [(8 91 25 20) 8]
Test Case: 261 | Input/Output: [(94 14 39 25) 14]
Test Case: 262 | Input/Output: [(92 36 85 11) 11]
Test Case: 263 | Input/Output: [(20 87 56 94) 20]
Test Case: 264 | Input/Output: [(26 84 91 63) 26]
Test Case: 265 | Input/Output: [(15 91 1 26) 1]
Test Case: 266 | Input/Output: [(97 91 7 98) 7]
Test Case: 267 | Input/Output: [(68 67 33 30) 30]
Test Case: 268 | Input/Output: [(2 11 98 93) 2]
Test Case: 269 | Input/Output: [(67 64 59 98) 59]
Test Case: 270 | Input/Output: [(72 45 67 73) 45]
Test Case: 271 | Input/Output: [(45 56 43 15) 15]
Test Case: 272 | Input/Output: [(7 45 51 13) 7]
Test Case: 273 | Input/Output: [(42 30 89 30) 30]
Test Case: 274 | Input/Output: [(70 83 77 73) 70]
Test Case: 275 | Input/Output: [(16 52 92 69) 16]
Test Case: 276 | Input/Output: [(10 8 23 87) 8]
Test Case: 277 | Input/Output: [(0 19 30 8) 0]
Test Case: 278 | Input/Output: [(44 40 39 16) 16]
Test Case: 279 | Input/Output: [(98 77 39 34) 34]
Test Case: 280 | Input/Output: [(35 31 58 7) 7]
Test Case: 281 | Input/Output: [(4 27 59 20) 4]
Test Case: 282 | Input/Output: [(85 53 7 29) 7]
Test Case: 283 | Input/Output: [(30 94 40 72) 30]
Test Case: 284 | Input/Output: [(17 82 73 79) 17]
Test Case: 285 | Input/Output: [(41 2 27 75) 2]
Test Case: 286 | Input/Output: [(69 77 20 74) 20]
Test Case: 287 | Input/Output: [(55 32 14 40) 14]
Test Case: 288 | Input/Output: [(30 63 75 30) 30]
Test Case: 289 | Input/Output: [(91 17 99 32) 17]
Test Case: 290 | Input/Output: [(43 18 71 61) 18]
Test Case: 291 | Input/Output: [(4 40 58 27) 4]
Test Case: 292 | Input/Output: [(96 27 97 74) 27]
Test Case: 293 | Input/Output: [(71 39 8 48) 8]
Test Case: 294 | Input/Output: [(45 81 92 1) 1]
Test Case: 295 | Input/Output: [(10 16 39 50) 10]
Test Case: 296 | Input/Output: [(71 73 90 36) 36]
Test Case: 297 | Input/Output: [(7 82 76 72) 7]
Test Case: 298 | Input/Output: [(26 39 39 80) 26]
Test Case: 299 | Input/Output: [(82 30 9 12) 9]
Test Case: 300 | Input/Output: [(44 48 61 53) 44]
Test Case: 301 | Input/Output: [(22 91 86 36) 22]
Test Case: 302 | Input/Output: [(83 5 12 65) 5]
Test Case: 303 | Input/Output: [(41 37 65 9) 9]
Test Case: 304 | Input/Output: [(72 17 98 56) 17]
Test Case: 305 | Input/Output: [(74 89 0 63) 0]
Test Case: 306 | Input/Output: [(43 10 34 47) 10]
Test Case: 307 | Input/Output: [(41 33 45 60) 33]
Test Case: 308 | Input/Output: [(31 12 8 95) 8]
Test Case: 309 | Input/Output: [(15 16 56 70) 15]
Test Case: 310 | Input/Output: [(87 11 26 51) 11]
Test Case: 311 | Input/Output: [(40 100 52 81) 40]
Test Case: 312 | Input/Output: [(44 99 58 34) 34]
Test Case: 313 | Input/Output: [(12 60 32 19) 12]
Test Case: 314 | Input/Output: [(58 75 66 64) 58]
Test Case: 315 | Input/Output: [(75 28 17 66) 17]
Test Case: 316 | Input/Output: [(40 6 12 6) 6]
Test Case: 317 | Input/Output: [(100 69 87 63) 63]
Test Case: 318 | Input/Output: [(42 84 32 90) 32]
Test Case: 319 | Input/Output: [(31 94 25 18) 18]
Test Case: 320 | Input/Output: [(81 8 96 10) 8]
Test Case: 321 | Input/Output: [(61 65 22 98) 22]
Test Case: 322 | Input/Output: [(81 90 34 65) 34]
Test Case: 323 | Input/Output: [(65 47 45 15) 15]
Test Case: 324 | Input/Output: [(13 59 78 63) 13]
Test Case: 325 | Input/Output: [(16 92 98 39) 16]
Test Case: 326 | Input/Output: [(64 55 6 42) 6]
Test Case: 327 | Input/Output: [(41 5 82 32) 5]
Test Case: 328 | Input/Output: [(69 47 44 68) 44]
Test Case: 329 | Input/Output: [(29 35 65 4) 4]
Test Case: 330 | Input/Output: [(74 79 13 31) 13]
Test Case: 331 | Input/Output: [(52 21 46 74) 21]
Test Case: 332 | Input/Output: [(11 48 53 27) 11]
Test Case: 333 | Input/Output: [(76 47 40 90) 40]
Test Case: 334 | Input/Output: [(29 98 83 33) 29]
Test Case: 335 | Input/Output: [(92 88 55 100) 55]
Test Case: 336 | Input/Output: [(20 15 51 9) 9]
Test Case: 337 | Input/Output: [(55 5 15 13) 5]
Test Case: 338 | Input/Output: [(88 43 51 17) 17]
Test Case: 339 | Input/Output: [(15 30 73 7) 7]
Test Case: 340 | Input/Output: [(37 37 64 62) 37]
Test Case: 341 | Input/Output: [(73 47 25 79) 25]
Test Case: 342 | Input/Output: [(47 45 12 65) 12]
Test Case: 343 | Input/Output: [(94 64 87 3) 3]
Test Case: 344 | Input/Output: [(33 94 57 25) 25]
Test Case: 345 | Input/Output: [(4 86 55 26) 4]
Test Case: 346 | Input/Output: [(58 41 85 5) 5]
Test Case: 347 | Input/Output: [(43 28 14 18) 14]
Test Case: 348 | Input/Output: [(48 81 6 3) 3]
Test Case: 349 | Input/Output: [(16 23 69 84) 16]
Test Case: 350 | Input/Output: [(36 43 54 34) 34]
Test Case: 351 | Input/Output: [(22 96 52 9) 9]
Test Case: 352 | Input/Output: [(11 5 63 51) 5]
Test Case: 353 | Input/Output: [(73 38 37 59) 37]
Test Case: 354 | Input/Output: [(2 55 83 32) 2]
Test Case: 355 | Input/Output: [(6 91 44 43) 6]
Test Case: 356 | Input/Output: [(76 64 49 75) 49]
Test Case: 357 | Input/Output: [(19 8 60 43) 8]
Test Case: 358 | Input/Output: [(91 0 25 65) 0]
Test Case: 359 | Input/Output: [(43 63 74 9) 9]
Test Case: 360 | Input/Output: [(42 89 48 47) 42]
Test Case: 361 | Input/Output: [(62 56 91 60) 56]
Test Case: 362 | Input/Output: [(77 38 63 92) 38]
Test Case: 363 | Input/Output: [(71 92 99 56) 56]
Test Case: 364 | Input/Output: [(24 19 9 9) 9]
Test Case: 365 | Input/Output: [(48 29 58 24) 24]
Test Case: 366 | Input/Output: [(0 85 0 2) 0]
Test Case: 367 | Input/Output: [(22 61 28 38) 22]
Test Case: 368 | Input/Output: [(14 60 91 39) 14]
Test Case: 369 | Input/Output: [(40 25 38 58) 25]
Test Case: 370 | Input/Output: [(33 69 9 75) 9]
Test Case: 371 | Input/Output: [(64 40 82 38) 38]
Test Case: 372 | Input/Output: [(33 18 15 85) 15]
Test Case: 373 | Input/Output: [(96 27 48 10) 10]
Test Case: 374 | Input/Output: [(29 11 97 59) 11]
Test Case: 375 | Input/Output: [(62 79 93 87) 62]
Test Case: 376 | Input/Output: [(50 29 97 80) 29]
Test Case: 377 | Input/Output: [(22 15 72 68) 15]
Test Case: 378 | Input/Output: [(36 75 94 38) 36]
Test Case: 379 | Input/Output: [(82 20 33 73) 20]
Test Case: 380 | Input/Output: [(68 3 11 53) 3]
Test Case: 381 | Input/Output: [(78 46 3 41) 3]
Test Case: 382 | Input/Output: [(97 98 64 15) 15]
Test Case: 383 | Input/Output: [(26 16 67 52) 16]
Test Case: 384 | Input/Output: [(12 11 39 59) 11]
Test Case: 385 | Input/Output: [(80 44 95 78) 44]
Test Case: 386 | Input/Output: [(69 30 50 52) 30]
Test Case: 387 | Input/Output: [(62 50 65 30) 30]
Test Case: 388 | Input/Output: [(0 59 30 46) 0]
Test Case: 389 | Input/Output: [(97 99 33 90) 33]
Test Case: 390 | Input/Output: [(89 7 78 65) 7]
Test Case: 391 | Input/Output: [(82 36 12 17) 12]
Test Case: 392 | Input/Output: [(5 48 21 36) 5]
Test Case: 393 | Input/Output: [(80 23 28 25) 23]
Test Case: 394 | Input/Output: [(3 56 37 29) 3]
Test Case: 395 | Input/Output: [(54 91 64 48) 48]
Test Case: 396 | Input/Output: [(90 32 37 90) 32]
Test Case: 397 | Input/Output: [(87 25 18 97) 18]
Test Case: 398 | Input/Output: [(6 71 51 5) 5]
Test Case: 399 | Input/Output: [(93 84 66 43) 43]
Test Case: 400 | Input/Output: [(-53 16 -71 -43) -71]
Test Case: 401 | Input/Output: [(-75 3 -55 9) -75]
Test Case: 402 | Input/Output: [(33 -1 -86 -96) -96]
Test Case: 403 | Input/Output: [(-23 67 -72 -17) -72]
Test Case: 404 | Input/Output: [(-12 -6 -75 -63) -75]
Test Case: 405 | Input/Output: [(-52 57 44 -36) -52]
Test Case: 406 | Input/Output: [(34 68 -86 -94) -94]
Test Case: 407 | Input/Output: [(38 -70 7 87) -70]
Test Case: 408 | Input/Output: [(24 -26 81 23) -26]
Test Case: 409 | Input/Output: [(-73 -1 18 21) -73]
Test Case: 410 | Input/Output: [(69 23 62 -92) -92]
Test Case: 411 | Input/Output: [(-61 60 36 63) -61]
Test Case: 412 | Input/Output: [(35 -95 -32 38) -95]
Test Case: 413 | Input/Output: [(67 84 -98 -44) -98]
Test Case: 414 | Input/Output: [(-80 -73 -73 77) -80]
Test Case: 415 | Input/Output: [(-41 -88 60 -32) -88]
Test Case: 416 | Input/Output: [(33 -9 65 72) -9]
Test Case: 417 | Input/Output: [(0 -66 68 3) -66]
Test Case: 418 | Input/Output: [(80 20 49 99) 20]
Test Case: 419 | Input/Output: [(-5 -32 -34 -84) -84]
Test Case: 420 | Input/Output: [(-90 -49 82 -7) -90]
Test Case: 421 | Input/Output: [(-43 99 -23 33) -43]
Test Case: 422 | Input/Output: [(45 43 78 -6) -6]
Test Case: 423 | Input/Output: [(-6 39 -50 65) -50]
Test Case: 424 | Input/Output: [(96 32 -56 -70) -70]
Test Case: 425 | Input/Output: [(71 -79 18 45) -79]
Test Case: 426 | Input/Output: [(51 8 -26 -62) -62]
Test Case: 427 | Input/Output: [(53 60 -93 -10) -93]
Test Case: 428 | Input/Output: [(61 62 1 21) 1]
Test Case: 429 | Input/Output: [(71 11 24 -98) -98]
Test Case: 430 | Input/Output: [(-6 -26 -44 -13) -44]
Test Case: 431 | Input/Output: [(9 81 -95 -73) -95]
Test Case: 432 | Input/Output: [(-45 -79 85 -88) -88]
Test Case: 433 | Input/Output: [(-91 -66 -69 -38) -91]
Test Case: 434 | Input/Output: [(-66 70 -42 -52) -66]
Test Case: 435 | Input/Output: [(-56 -57 -92 97) -92]
Test Case: 436 | Input/Output: [(-32 -62 26 92) -62]
Test Case: 437 | Input/Output: [(-93 -31 -53 -62) -93]
Test Case: 438 | Input/Output: [(61 -67 11 -67) -67]
Test Case: 439 | Input/Output: [(-15 -75 -31 31) -75]
Test Case: 440 | Input/Output: [(-39 -59 -52 65) -59]
Test Case: 441 | Input/Output: [(31 -40 13 -88) -88]
Test Case: 442 | Input/Output: [(5 100 1 -67) -67]
Test Case: 443 | Input/Output: [(35 90 78 -47) -47]
Test Case: 444 | Input/Output: [(-57 -90 70 82) -90]
Test Case: 445 | Input/Output: [(15 -89 34 -21) -89]
Test Case: 446 | Input/Output: [(78 -56 -41 -12) -56]
Test Case: 447 | Input/Output: [(-16 -58 19 -81) -81]
Test Case: 448 | Input/Output: [(-54 58 31 -31) -54]
Test Case: 449 | Input/Output: [(70 -75 63 -8) -75]
Test Case: 450 | Input/Output: [(17 37 28 -16) -16]
Test Case: 451 | Input/Output: [(89 -45 -25 -73) -73]
Test Case: 452 | Input/Output: [(-85 -1 91 6) -85]
Test Case: 453 | Input/Output: [(-46 19 67 -11) -46]
Test Case: 454 | Input/Output: [(45 66 72 -11) -11]
Test Case: 455 | Input/Output: [(-54 -16 22 -11) -54]
Test Case: 456 | Input/Output: [(80 -21 -14 -13) -21]
Test Case: 457 | Input/Output: [(-41 -90 31 59) -90]
Test Case: 458 | Input/Output: [(90 -37 -4 26) -37]
Test Case: 459 | Input/Output: [(54 -53 28 -19) -53]
Test Case: 460 | Input/Output: [(-49 -66 27 -61) -66]
Test Case: 461 | Input/Output: [(73 -58 -36 100) -58]
Test Case: 462 | Input/Output: [(10 -32 93 -59) -59]
Test Case: 463 | Input/Output: [(-80 -35 -97 -5) -97]
Test Case: 464 | Input/Output: [(1 52 -12 -40) -40]
Test Case: 465 | Input/Output: [(-36 15 70 -71) -71]
Test Case: 466 | Input/Output: [(6 32 -13 31) -13]
Test Case: 467 | Input/Output: [(38 -33 -91 -9) -91]
Test Case: 468 | Input/Output: [(-24 -85 -60 -79) -85]
Test Case: 469 | Input/Output: [(-20 -33 25 -81) -81]
Test Case: 470 | Input/Output: [(-58 53 -25 7) -58]
Test Case: 471 | Input/Output: [(89 -73 -82 -88) -88]
Test Case: 472 | Input/Output: [(-55 -48 -99 60) -99]
Test Case: 473 | Input/Output: [(63 -8 82 33) -8]
Test Case: 474 | Input/Output: [(-94 81 -59 11) -94]
Test Case: 475 | Input/Output: [(21 7 27 -48) -48]
Test Case: 476 | Input/Output: [(-96 -84 -33 -97) -97]
Test Case: 477 | Input/Output: [(-22 61 -23 -75) -75]
Test Case: 478 | Input/Output: [(80 19 63 -34) -34]
Test Case: 479 | Input/Output: [(-92 -14 -59 85) -92]
Test Case: 480 | Input/Output: [(-94 64 66 22) -94]
Test Case: 481 | Input/Output: [(-24 -15 -75 -16) -75]
Test Case: 482 | Input/Output: [(-98 34 -51 -69) -98]
Test Case: 483 | Input/Output: [(41 20 7 2) 2]
Test Case: 484 | Input/Output: [(7 -10 -56 58) -56]
Test Case: 485 | Input/Output: [(-48 0 -73 -84) -84]
Test Case: 486 | Input/Output: [(12 30 -19 -6) -19]
Test Case: 487 | Input/Output: [(65 5 95 -63) -63]
Test Case: 488 | Input/Output: [(-4 38 12 64) -4]
Test Case: 489 | Input/Output: [(70 32 -36 55) -36]
Test Case: 490 | Input/Output: [(-18 53 -83 14) -83]
Test Case: 491 | Input/Output: [(-84 -69 15 -62) -84]
Test Case: 492 | Input/Output: [(-59 -60 98 -48) -60]
Test Case: 493 | Input/Output: [(24 91 -48 60) -48]
Test Case: 494 | Input/Output: [(47 5 22 -2) -2]
Test Case: 495 | Input/Output: [(-92 -13 -42 42) -92]
Test Case: 496 | Input/Output: [(10 -34 -9 83) -34]
Test Case: 497 | Input/Output: [(53 -34 99 97) -34]
Test Case: 498 | Input/Output: [(49 0 -93 35) -93]
Test Case: 499 | Input/Output: [(82 14 -73 18) -73]
Test Case: 500 | Input/Output: [(74 76 -24 -34) -34]
Test Case: 501 | Input/Output: [(46 96 -5 70) -5]
Test Case: 502 | Input/Output: [(89 -70 -31 -63) -70]
Test Case: 503 | Input/Output: [(-89 -46 72 90) -89]
Test Case: 504 | Input/Output: [(1 -51 -58 55) -58]
Test Case: 505 | Input/Output: [(-34 90 27 97) -34]
Test Case: 506 | Input/Output: [(32 -48 -45 33) -48]
Test Case: 507 | Input/Output: [(-40 -65 46 -37) -65]
Test Case: 508 | Input/Output: [(-14 39 -76 -91) -91]
Test Case: 509 | Input/Output: [(96 24 -77 54) -77]
Test Case: 510 | Input/Output: [(30 -3 18 74) -3]
Test Case: 511 | Input/Output: [(19 -78 70 89) -78]
Test Case: 512 | Input/Output: [(-21 -82 -4 95) -82]
Test Case: 513 | Input/Output: [(41 -94 33 97) -94]
Test Case: 514 | Input/Output: [(-1 95 25 20) -1]
Test Case: 515 | Input/Output: [(-24 19 -34 57) -34]
Test Case: 516 | Input/Output: [(45 12 -15 70) -15]
Test Case: 517 | Input/Output: [(13 -89 68 -48) -89]
Test Case: 518 | Input/Output: [(78 -70 -85 53) -85]
Test Case: 519 | Input/Output: [(63 98 84 -93) -93]
Test Case: 520 | Input/Output: [(-47 64 -7 -86) -86]
Test Case: 521 | Input/Output: [(54 -31 -81 33) -81]
Test Case: 522 | Input/Output: [(-18 86 6 15) -18]
Test Case: 523 | Input/Output: [(-77 -85 -16 71) -85]
Test Case: 524 | Input/Output: [(-25 -23 87 55) -25]
Test Case: 525 | Input/Output: [(-6 -42 77 80) -42]
Test Case: 526 | Input/Output: [(-84 63 -29 63) -84]
Test Case: 527 | Input/Output: [(-27 81 63 -46) -46]
Test Case: 528 | Input/Output: [(71 81 69 -1) -1]
Test Case: 529 | Input/Output: [(-35 -31 -55 16) -55]
Test Case: 530 | Input/Output: [(-59 -77 -26 22) -77]
Test Case: 531 | Input/Output: [(32 47 23 82) 23]
Test Case: 532 | Input/Output: [(-78 -82 21 -54) -82]
Test Case: 533 | Input/Output: [(80 36 -31 -66) -66]
Test Case: 534 | Input/Output: [(45 -6 -32 -36) -36]
Test Case: 535 | Input/Output: [(11 13 -83 53) -83]
Test Case: 536 | Input/Output: [(70 70 -80 48) -80]
Test Case: 537 | Input/Output: [(17 20 -95 -50) -95]
Test Case: 538 | Input/Output: [(20 -81 -7 18) -81]
Test Case: 539 | Input/Output: [(99 -48 -19 61) -48]
Test Case: 540 | Input/Output: [(-98 61 13 85) -98]
Test Case: 541 | Input/Output: [(-4 65 91 27) -4]
Test Case: 542 | Input/Output: [(-89 -77 -10 -20) -89]
Test Case: 543 | Input/Output: [(-81 -34 -9 4) -81]
Test Case: 544 | Input/Output: [(74 37 -28 4) -28]
Test Case: 545 | Input/Output: [(-14 -33 -22 22) -33]
Test Case: 546 | Input/Output: [(12 -5 48 -32) -32]
Test Case: 547 | Input/Output: [(40 93 -84 -90) -90]
Test Case: 548 | Input/Output: [(91 -37 41 -44) -44]
Test Case: 549 | Input/Output: [(63 -46 -75 30) -75]
Test Case: 550 | Input/Output: [(-59 -20 -78 -33) -78]
Test Case: 551 | Input/Output: [(95 -17 2 -32) -32]
Test Case: 552 | Input/Output: [(24 -93 -23 -67) -93]
Test Case: 553 | Input/Output: [(-51 -94 76 -44) -94]
Test Case: 554 | Input/Output: [(2 66 -97 -74) -97]
Test Case: 555 | Input/Output: [(62 -74 -54 20) -74]
Test Case: 556 | Input/Output: [(9 -77 -1 52) -77]
Test Case: 557 | Input/Output: [(39 -36 -47 -19) -47]
Test Case: 558 | Input/Output: [(45 30 49 57) 30]
Test Case: 559 | Input/Output: [(-8 38 21 -88) -88]
Test Case: 560 | Input/Output: [(47 -5 -47 -34) -47]
Test Case: 561 | Input/Output: [(-7 21 -1 -20) -20]
Test Case: 562 | Input/Output: [(-24 69 6 -47) -47]
Test Case: 563 | Input/Output: [(-51 -97 -21 -97) -97]
Test Case: 564 | Input/Output: [(96 66 42 94) 42]
Test Case: 565 | Input/Output: [(45 -73 94 40) -73]
Test Case: 566 | Input/Output: [(60 -6 55 8) -6]
Test Case: 567 | Input/Output: [(-95 92 1 7) -95]
Test Case: 568 | Input/Output: [(-73 -100 34 0) -100]
Test Case: 569 | Input/Output: [(-97 -29 -3 26) -97]
Test Case: 570 | Input/Output: [(-87 85 -78 15) -87]
Test Case: 571 | Input/Output: [(-45 100 75 -9) -45]
Test Case: 572 | Input/Output: [(-23 -8 32 70) -23]
Test Case: 573 | Input/Output: [(-4 52 40 -74) -74]
Test Case: 574 | Input/Output: [(89 -39 86 40) -39]
Test Case: 575 | Input/Output: [(-71 -2 -51 -52) -71]
Test Case: 576 | Input/Output: [(-14 -98 54 70) -98]
Test Case: 577 | Input/Output: [(69 95 -14 24) -14]
Test Case: 578 | Input/Output: [(29 -18 -44 98) -44]
Test Case: 579 | Input/Output: [(-66 -65 -96 90) -96]
Test Case: 580 | Input/Output: [(51 11 73 -10) -10]
Test Case: 581 | Input/Output: [(41 27 66 10) 10]
Test Case: 582 | Input/Output: [(38 -21 -80 31) -80]
Test Case: 583 | Input/Output: [(94 -70 -87 -56) -87]
Test Case: 584 | Input/Output: [(-16 14 -95 89) -95]
Test Case: 585 | Input/Output: [(-56 -73 -97 -69) -97]
Test Case: 586 | Input/Output: [(81 6 82 89) 6]
Test Case: 587 | Input/Output: [(-61 88 0 21) -61]
Test Case: 588 | Input/Output: [(47 -83 26 -70) -83]
Test Case: 589 | Input/Output: [(-5 54 87 -45) -45]
Test Case: 590 | Input/Output: [(-96 30 10 -5) -96]
Test Case: 591 | Input/Output: [(29 1 54 -56) -56]
Test Case: 592 | Input/Output: [(-20 25 93 53) -20]
Test Case: 593 | Input/Output: [(29 12 41 -15) -15]
Test Case: 594 | Input/Output: [(-34 -72 77 57) -72]
Test Case: 595 | Input/Output: [(45 43 -57 66) -57]
Test Case: 596 | Input/Output: [(-73 -11 39 -71) -73]
Test Case: 597 | Input/Output: [(81 53 -72 60) -72]
Test Case: 598 | Input/Output: [(83 -55 48 -1) -55]
Test Case: 599 | Input/Output: [(46 38 64 77) 38]
Test Case: 600 | Input/Output: [(23 -28 -99 8) -99]
Test Case: 601 | Input/Output: [(21 -12 19 78) -12]
Test Case: 602 | Input/Output: [(69 38 -59 -6) -59]
Test Case: 603 | Input/Output: [(-62 6 18 -44) -62]
Test Case: 604 | Input/Output: [(56 -53 -76 40) -76]
Test Case: 605 | Input/Output: [(-92 95 1 -27) -92]
Test Case: 606 | Input/Output: [(86 -83 61 41) -83]
Test Case: 607 | Input/Output: [(88 91 47 87) 47]
Test Case: 608 | Input/Output: [(-54 20 -3 90) -54]
Test Case: 609 | Input/Output: [(29 21 43 -5) -5]
Test Case: 610 | Input/Output: [(10 -15 -89 79) -89]
Test Case: 611 | Input/Output: [(-84 1 -34 -25) -84]
Test Case: 612 | Input/Output: [(98 -24 100 26) -24]
Test Case: 613 | Input/Output: [(-16 -61 -66 -30) -66]
Test Case: 614 | Input/Output: [(-31 24 -87 -40) -87]
Test Case: 615 | Input/Output: [(65 61 -91 100) -91]
Test Case: 616 | Input/Output: [(-17 -35 -3 69) -35]
Test Case: 617 | Input/Output: [(100 36 100 -51) -51]
Test Case: 618 | Input/Output: [(-39 -50 -93 30) -93]
Test Case: 619 | Input/Output: [(-89 -43 56 -26) -89]
Test Case: 620 | Input/Output: [(82 67 63 -70) -70]
Test Case: 621 | Input/Output: [(63 32 25 76) 25]
Test Case: 622 | Input/Output: [(-98 60 -51 -27) -98]
Test Case: 623 | Input/Output: [(87 -10 -22 -3) -22]
Test Case: 624 | Input/Output: [(24 -38 -62 91) -62]
Test Case: 625 | Input/Output: [(48 8 -65 71) -65]
Test Case: 626 | Input/Output: [(67 41 -91 8) -91]
Test Case: 627 | Input/Output: [(77 48 -9 84) -9]
Test Case: 628 | Input/Output: [(-20 -15 -8 31) -20]
Test Case: 629 | Input/Output: [(76 18 -76 -55) -76]
Test Case: 630 | Input/Output: [(-18 59 -79 96) -79]
Test Case: 631 | Input/Output: [(-98 26 -1 53) -98]
Test Case: 632 | Input/Output: [(-27 -9 38 80) -27]
Test Case: 633 | Input/Output: [(-78 98 -50 -8) -78]
Test Case: 634 | Input/Output: [(6 43 -18 44) -18]
Test Case: 635 | Input/Output: [(25 2 15 -33) -33]
Test Case: 636 | Input/Output: [(9 21 69 85) 9]
Test Case: 637 | Input/Output: [(-81 53 -24 -98) -98]
Test Case: 638 | Input/Output: [(31 93 -93 22) -93]
Test Case: 639 | Input/Output: [(-31 41 67 29) -31]
Test Case: 640 | Input/Output: [(-63 42 100 27) -63]
Test Case: 641 | Input/Output: [(33 -85 93 -45) -85]
Test Case: 642 | Input/Output: [(-79 -95 -51 29) -95]
Test Case: 643 | Input/Output: [(-3 -4 -26 10) -26]
Test Case: 644 | Input/Output: [(16 -67 75 -72) -72]
Test Case: 645 | Input/Output: [(-1 53 41 71) -1]
Test Case: 646 | Input/Output: [(-57 -51 -37 -51) -57]
Test Case: 647 | Input/Output: [(23 19 87 56) 19]
Test Case: 648 | Input/Output: [(-79 32 -44 18) -79]
Test Case: 649 | Input/Output: [(0 -25 -98 -44) -98]
Test Case: 650 | Input/Output: [(42 41 38 92) 38]
Test Case: 651 | Input/Output: [(19 32 54 -48) -48]
Test Case: 652 | Input/Output: [(-10 63 26 -58) -58]
Test Case: 653 | Input/Output: [(30 53 51 47) 30]
Test Case: 654 | Input/Output: [(49 75 -57 -74) -74]
Test Case: 655 | Input/Output: [(-76 76 -46 72) -76]
Test Case: 656 | Input/Output: [(-9 49 13 -24) -24]
Test Case: 657 | Input/Output: [(61 16 -39 69) -39]
Test Case: 658 | Input/Output: [(27 -37 -42 -3) -42]
Test Case: 659 | Input/Output: [(15 93 49 -54) -54]
Test Case: 660 | Input/Output: [(-61 -73 78 -75) -75]
Test Case: 661 | Input/Output: [(-53 -59 98 -100) -100]
Test Case: 662 | Input/Output: [(-24 69 -74 -17) -74]
Test Case: 663 | Input/Output: [(59 29 50 59) 29]
Test Case: 664 | Input/Output: [(-57 -81 -30 87) -81]
Test Case: 665 | Input/Output: [(29 -64 -74 66) -74]
Test Case: 666 | Input/Output: [(-93 28 4 81) -93]
Test Case: 667 | Input/Output: [(-5 -44 -34 97) -44]
Test Case: 668 | Input/Output: [(16 17 41 19) 16]
Test Case: 669 | Input/Output: [(-72 -64 60 100) -72]
Test Case: 670 | Input/Output: [(5 -17 -44 -85) -85]
Test Case: 671 | Input/Output: [(-64 -86 18 94) -86]
Test Case: 672 | Input/Output: [(43 -23 60 100) -23]
Test Case: 673 | Input/Output: [(83 80 -87 -90) -90]
Test Case: 674 | Input/Output: [(-90 53 25 -88) -90]
Test Case: 675 | Input/Output: [(78 -80 5 -27) -80]
Test Case: 676 | Input/Output: [(100 -15 48 11) -15]
Test Case: 677 | Input/Output: [(-38 -53 -1 -56) -56]
Test Case: 678 | Input/Output: [(-38 -9 93 88) -38]
Test Case: 679 | Input/Output: [(-84 8 32 -66) -84]
Test Case: 680 | Input/Output: [(-44 32 93 -5) -44]
Test Case: 681 | Input/Output: [(36 37 -59 22) -59]
Test Case: 682 | Input/Output: [(35 25 11 -15) -15]
Test Case: 683 | Input/Output: [(64 -58 14 82) -58]
Test Case: 684 | Input/Output: [(-55 -1 -82 80) -82]
Test Case: 685 | Input/Output: [(8 78 -56 35) -56]
Test Case: 686 | Input/Output: [(-98 48 92 -75) -98]
Test Case: 687 | Input/Output: [(-95 -20 -77 -3) -95]
Test Case: 688 | Input/Output: [(60 -83 -59 -73) -83]
Test Case: 689 | Input/Output: [(9 -67 -78 -100) -100]
Test Case: 690 | Input/Output: [(-12 -77 15 3) -77]
Test Case: 691 | Input/Output: [(51 -97 70 -32) -97]
Test Case: 692 | Input/Output: [(15 72 -97 84) -97]
Test Case: 693 | Input/Output: [(86 0 -23 92) -23]
Test Case: 694 | Input/Output: [(-59 -29 -16 -78) -78]
Test Case: 695 | Input/Output: [(-33 -2 -27 -39) -39]
Test Case: 696 | Input/Output: [(27 84 48 86) 27]
Test Case: 697 | Input/Output: [(-91 -46 38 -17) -91]
Test Case: 698 | Input/Output: [(77 -34 31 -17) -34]
Test Case: 699 | Input/Output: [(19 57 47 -60) -60]
Test Case: 700 | Input/Output: [(50 36 71 -94) -94]
Test Case: 701 | Input/Output: [(61 -99 1 25) -99]
Test Case: 702 | Input/Output: [(-21 -86 81 -22) -86]
Test Case: 703 | Input/Output: [(-31 -43 49 -38) -43]
Test Case: 704 | Input/Output: [(-85 -96 -89 100) -96]
Test Case: 705 | Input/Output: [(-23 -70 -10 -81) -81]
Test Case: 706 | Input/Output: [(46 -67 -91 87) -91]
Test Case: 707 | Input/Output: [(-18 -96 -98 -92) -98]
Test Case: 708 | Input/Output: [(59 -60 16 -40) -60]
Test Case: 709 | Input/Output: [(-39 90 32 -52) -52]
Test Case: 710 | Input/Output: [(-85 -91 -46 60) -91]
Test Case: 711 | Input/Output: [(89 -15 14 76) -15]
Test Case: 712 | Input/Output: [(45 78 -36 66) -36]
Test Case: 713 | Input/Output: [(-27 -81 30 28) -81]
Test Case: 714 | Input/Output: [(31 4 32 -48) -48]
Test Case: 715 | Input/Output: [(1 -86 -27 37) -86]
Test Case: 716 | Input/Output: [(42 -10 70 -67) -67]
Test Case: 717 | Input/Output: [(90 -87 -87 44) -87]
Test Case: 718 | Input/Output: [(55 3 10 67) 3]
Test Case: 719 | Input/Output: [(-99 58 -82 -93) -99]
Test Case: 720 | Input/Output: [(50 -69 -54 -52) -69]
Test Case: 721 | Input/Output: [(-35 13 93 7) -35]
Test Case: 722 | Input/Output: [(-53 23 70 28) -53]
Test Case: 723 | Input/Output: [(72 35 -41 86) -41]
Test Case: 724 | Input/Output: [(6 -77 63 8) -77]
Test Case: 725 | Input/Output: [(88 -26 -36 -22) -36]
Test Case: 726 | Input/Output: [(-49 26 -50 83) -50]
Test Case: 727 | Input/Output: [(59 -1 42 -95) -95]
Test Case: 728 | Input/Output: [(-25 -55 -61 61) -61]
Test Case: 729 | Input/Output: [(51 -52 -88 64) -88]
Test Case: 730 | Input/Output: [(-68 49 -48 57) -68]
Test Case: 731 | Input/Output: [(-94 -2 80 -97) -97]
Test Case: 732 | Input/Output: [(72 79 3 67) 3]
Test Case: 733 | Input/Output: [(4 -68 95 -54) -68]
Test Case: 734 | Input/Output: [(-13 98 -21 60) -21]
Test Case: 735 | Input/Output: [(-24 -71 -66 67) -71]
Test Case: 736 | Input/Output: [(54 5 -91 -89) -91]
Test Case: 737 | Input/Output: [(-80 -63 -12 60) -80]
Test Case: 738 | Input/Output: [(91 -27 15 48) -27]
Test Case: 739 | Input/Output: [(-59 69 -31 -15) -59]
Test Case: 740 | Input/Output: [(86 84 1 39) 1]
Test Case: 741 | Input/Output: [(-32 -50 69 20) -50]
Test Case: 742 | Input/Output: [(39 2 37 63) 2]
Test Case: 743 | Input/Output: [(97 -45 -70 -68) -70]
Test Case: 744 | Input/Output: [(40 34 -60 -12) -60]
Test Case: 745 | Input/Output: [(-35 -75 56 30) -75]
Test Case: 746 | Input/Output: [(-81 -76 -36 24) -81]
Test Case: 747 | Input/Output: [(-49 92 -20 -81) -81]
Test Case: 748 | Input/Output: [(53 -5 -82 28) -82]
Test Case: 749 | Input/Output: [(40 21 3 74) 3]
Test Case: 750 | Input/Output: [(-72 -22 -20 69) -72]
Test Case: 751 | Input/Output: [(-27 -59 -28 -93) -93]
Test Case: 752 | Input/Output: [(-29 83 68 62) -29]
Test Case: 753 | Input/Output: [(-23 -61 -74 -88) -88]
Test Case: 754 | Input/Output: [(33 -78 66 70) -78]
Test Case: 755 | Input/Output: [(-54 -99 1 -43) -99]
Test Case: 756 | Input/Output: [(-47 92 72 38) -47]
Test Case: 757 | Input/Output: [(57 -100 -99 96) -100]
Test Case: 758 | Input/Output: [(96 84 -6 25) -6]
Test Case: 759 | Input/Output: [(-77 -21 20 -60) -77]
Test Case: 760 | Input/Output: [(44 49 100 -32) -32]
Test Case: 761 | Input/Output: [(-73 77 -22 69) -73]
Test Case: 762 | Input/Output: [(-16 -13 -57 69) -57]
Test Case: 763 | Input/Output: [(-100 77 19 0) -100]
Test Case: 764 | Input/Output: [(-30 -93 67 81) -93]
Test Case: 765 | Input/Output: [(-3 -54 58 -13) -54]
Test Case: 766 | Input/Output: [(12 -20 28 73) -20]
Test Case: 767 | Input/Output: [(-36 -76 98 -43) -76]
Test Case: 768 | Input/Output: [(-76 23 -66 -91) -91]
Test Case: 769 | Input/Output: [(60 61 12 19) 12]
Test Case: 770 | Input/Output: [(79 18 -100 -79) -100]
Test Case: 771 | Input/Output: [(59 -37 -52 26) -52]
Test Case: 772 | Input/Output: [(96 -4 -11 -38) -38]
Test Case: 773 | Input/Output: [(86 -57 32 32) -57]
Test Case: 774 | Input/Output: [(-44 53 85 23) -44]
Test Case: 775 | Input/Output: [(-36 -64 -91 -53) -91]
Test Case: 776 | Input/Output: [(23 89 62 -56) -56]
Test Case: 777 | Input/Output: [(23 -31 -87 -69) -87]
Test Case: 778 | Input/Output: [(62 -15 16 29) -15]
Test Case: 779 | Input/Output: [(89 -73 11 15) -73]
Test Case: 780 | Input/Output: [(-21 -17 70 -40) -40]
Test Case: 781 | Input/Output: [(-52 12 22 63) -52]
Test Case: 782 | Input/Output: [(38 75 -82 -57) -82]
Test Case: 783 | Input/Output: [(-5 -33 29 62) -33]
Test Case: 784 | Input/Output: [(1 78 -23 10) -23]
Test Case: 785 | Input/Output: [(-77 -98 -41 -8) -98]
Test Case: 786 | Input/Output: [(54 1 -33 9) -33]
Test Case: 787 | Input/Output: [(-27 -98 49 34) -98]
Test Case: 788 | Input/Output: [(66 99 63 51) 51]
Test Case: 789 | Input/Output: [(-60 -56 -57 -95) -95]
Test Case: 790 | Input/Output: [(-20 92 -84 95) -84]
Test Case: 791 | Input/Output: [(-60 94 4 -57) -60]
Test Case: 792 | Input/Output: [(38 75 13 4) 4]
Test Case: 793 | Input/Output: [(-62 51 100 85) -62]
Test Case: 794 | Input/Output: [(20 -47 -89 97) -89]
Test Case: 795 | Input/Output: [(64 -32 97 -90) -90]
Test Case: 796 | Input/Output: [(88 -63 26 3) -63]
Test Case: 797 | Input/Output: [(-99 74 57 69) -99]
Test Case: 798 | Input/Output: [(47 -32 -74 -94) -94]
Test Case: 799 | Input/Output: [(-33 17 -75 93) -75]
Test Case: 800 | Input/Output: [(72 -5 -41 -6) -41]
Test Case: 801 | Input/Output: [(-69 24 36 62) -69]
Test Case: 802 | Input/Output: [(-95 10 56 -31) -95]
Test Case: 803 | Input/Output: [(-79 -6 -4 14) -79]
Test Case: 804 | Input/Output: [(-97 -61 78 -44) -97]
Test Case: 805 | Input/Output: [(45 -57 86 12) -57]
Test Case: 806 | Input/Output: [(-91 -91 -97 -2) -97]
Test Case: 807 | Input/Output: [(-10 -66 -13 -97) -97]
Test Case: 808 | Input/Output: [(-38 59 54 -53) -53]
Test Case: 809 | Input/Output: [(91 37 17 57) 17]
Test Case: 810 | Input/Output: [(59 -26 -75 82) -75]
Test Case: 811 | Input/Output: [(-42 -14 52 -88) -88]
Test Case: 812 | Input/Output: [(-58 68 61 -27) -58]
Test Case: 813 | Input/Output: [(-44 -92 94 -27) -92]
Test Case: 814 | Input/Output: [(23 -14 77 -96) -96]
Test Case: 815 | Input/Output: [(-61 -96 22 24) -96]
Test Case: 816 | Input/Output: [(-66 82 83 62) -66]
Test Case: 817 | Input/Output: [(45 38 -57 -100) -100]
Test Case: 818 | Input/Output: [(-25 10 -83 -58) -83]
Test Case: 819 | Input/Output: [(-61 61 -66 -35) -66]
Test Case: 820 | Input/Output: [(23 -21 20 38) -21]
Test Case: 821 | Input/Output: [(34 14 44 42) 14]
Test Case: 822 | Input/Output: [(-77 59 -100 -54) -100]
Test Case: 823 | Input/Output: [(-46 -29 -71 -8) -71]
Test Case: 824 | Input/Output: [(26 31 14 -76) -76]
Test Case: 825 | Input/Output: [(39 -83 20 -74) -83]
Test Case: 826 | Input/Output: [(79 77 39 53) 39]
Test Case: 827 | Input/Output: [(-11 -18 22 20) -18]
Test Case: 828 | Input/Output: [(33 15 -69 35) -69]
Test Case: 829 | Input/Output: [(42 -59 -86 -50) -86]
Test Case: 830 | Input/Output: [(6 18 41 -10) -10]
Test Case: 831 | Input/Output: [(-65 -71 71 -4) -71]
Test Case: 832 | Input/Output: [(-24 65 -31 -5) -31]
Test Case: 833 | Input/Output: [(60 -91 67 20) -91]
Test Case: 834 | Input/Output: [(51 -79 -97 -49) -97]
Test Case: 835 | Input/Output: [(68 -8 -45 99) -45]
Test Case: 836 | Input/Output: [(-55 52 -57 -86) -86]
Test Case: 837 | Input/Output: [(-5 17 -79 58) -79]
Test Case: 838 | Input/Output: [(50 38 74 -16) -16]
Test Case: 839 | Input/Output: [(8 -92 -9 -50) -92]
Test Case: 840 | Input/Output: [(-47 -50 19 -50) -50]
Test Case: 841 | Input/Output: [(49 1 -24 -82) -82]
Test Case: 842 | Input/Output: [(14 24 -1 -72) -72]
Test Case: 843 | Input/Output: [(73 -34 -93 -40) -93]
Test Case: 844 | Input/Output: [(68 -13 -8 91) -13]
Test Case: 845 | Input/Output: [(-60 -77 -3 23) -77]
Test Case: 846 | Input/Output: [(-12 82 46 -48) -48]
Test Case: 847 | Input/Output: [(99 41 22 18) 18]
Test Case: 848 | Input/Output: [(22 -76 72 -67) -76]
Test Case: 849 | Input/Output: [(17 -10 14 -22) -22]
Test Case: 850 | Input/Output: [(-81 3 60 11) -81]
Test Case: 851 | Input/Output: [(-3 31 -55 50) -55]
Test Case: 852 | Input/Output: [(22 -66 -83 52) -83]
Test Case: 853 | Input/Output: [(23 5 -61 39) -61]
Test Case: 854 | Input/Output: [(-96 -61 -54 53) -96]
Test Case: 855 | Input/Output: [(-71 -96 -18 54) -96]
Test Case: 856 | Input/Output: [(-7 -31 11 -36) -36]
Test Case: 857 | Input/Output: [(-73 -31 -12 49) -73]
Test Case: 858 | Input/Output: [(-100 -15 -15 -57) -100]
Test Case: 859 | Input/Output: [(5 -50 -74 -45) -74]
Test Case: 860 | Input/Output: [(-86 -70 -45 80) -86]
Test Case: 861 | Input/Output: [(38 18 -79 -20) -79]
Test Case: 862 | Input/Output: [(28 33 -77 -10) -77]
Test Case: 863 | Input/Output: [(-88 -69 -59 -56) -88]
Test Case: 864 | Input/Output: [(62 -81 23 68) -81]
Test Case: 865 | Input/Output: [(-72 -26 -14 -53) -72]
Test Case: 866 | Input/Output: [(8 84 5 10) 5]
Test Case: 867 | Input/Output: [(38 78 -61 -92) -92]
Test Case: 868 | Input/Output: [(-19 61 -69 -72) -72]
Test Case: 869 | Input/Output: [(67 -65 -1 4) -65]
Test Case: 870 | Input/Output: [(75 -3 60 -26) -26]
Test Case: 871 | Input/Output: [(-96 31 -4 56) -96]
Test Case: 872 | Input/Output: [(32 -63 -38 83) -63]
Test Case: 873 | Input/Output: [(-13 -23 -94 13) -94]
Test Case: 874 | Input/Output: [(97 -13 78 -1) -13]
Test Case: 875 | Input/Output: [(-53 42 72 6) -53]
Test Case: 876 | Input/Output: [(-1 -89 -33 -47) -89]
Test Case: 877 | Input/Output: [(-80 -56 31 48) -80]
Test Case: 878 | Input/Output: [(5 -75 -45 -50) -75]
Test Case: 879 | Input/Output: [(11 -21 -6 -5) -21]
Test Case: 880 | Input/Output: [(-90 85 25 47) -90]
Test Case: 881 | Input/Output: [(-69 11 -6 -34) -69]
Test Case: 882 | Input/Output: [(-56 -72 78 -24) -72]
Test Case: 883 | Input/Output: [(-98 45 -57 -67) -98]
Test Case: 884 | Input/Output: [(8 79 -73 36) -73]
Test Case: 885 | Input/Output: [(-69 43 -83 -93) -93]
Test Case: 886 | Input/Output: [(-84 -15 -68 79) -84]
Test Case: 887 | Input/Output: [(31 -53 -94 20) -94]
Test Case: 888 | Input/Output: [(-68 -77 17 -70) -77]
Test Case: 889 | Input/Output: [(-77 -17 42 -17) -77]
Test Case: 890 | Input/Output: [(-75 53 -54 96) -75]
Test Case: 891 | Input/Output: [(-90 64 68 -43) -90]
Test Case: 892 | Input/Output: [(-88 -90 -81 29) -90]
Test Case: 893 | Input/Output: [(63 0 27 -41) -41]
Test Case: 894 | Input/Output: [(40 -17 96 96) -17]
Test Case: 895 | Input/Output: [(-3 87 8 43) -3]
Test Case: 896 | Input/Output: [(52 -39 -93 -90) -93]
Test Case: 897 | Input/Output: [(-85 32 -62 38) -85]
Test Case: 898 | Input/Output: [(-37 -69 -91 65) -91]
Test Case: 899 | Input/Output: [(31 66 60 -5) -5]
Test Case: 900 | Input/Output: [(68 18 -82 -29) -82]
Test Case: 901 | Input/Output: [(84 -35 49 -88) -88]
Test Case: 902 | Input/Output: [(69 -8 37 20) -8]
Test Case: 903 | Input/Output: [(-84 10 -41 79) -84]
Test Case: 904 | Input/Output: [(78 -56 70 -9) -56]
Test Case: 905 | Input/Output: [(77 67 98 28) 28]
Test Case: 906 | Input/Output: [(-71 78 -8 95) -71]
Test Case: 907 | Input/Output: [(88 53 -58 24) -58]
Test Case: 908 | Input/Output: [(-87 -27 -60 68) -87]
Test Case: 909 | Input/Output: [(92 35 -44 -16) -44]
Test Case: 910 | Input/Output: [(82 87 -10 63) -10]
Test Case: 911 | Input/Output: [(42 -78 87 -85) -85]
Test Case: 912 | Input/Output: [(-84 5 -97 -46) -97]
Test Case: 913 | Input/Output: [(-43 46 -45 38) -45]
Test Case: 914 | Input/Output: [(66 -72 63 44) -72]
Test Case: 915 | Input/Output: [(-63 -94 23 36) -94]
Test Case: 916 | Input/Output: [(51 -30 77 35) -30]
Test Case: 917 | Input/Output: [(-56 51 -24 -24) -56]
Test Case: 918 | Input/Output: [(-31 -88 18 56) -88]
Test Case: 919 | Input/Output: [(-39 54 -90 28) -90]
Test Case: 920 | Input/Output: [(73 95 81 91) 73]
Test Case: 921 | Input/Output: [(22 -13 16 -7) -13]
Test Case: 922 | Input/Output: [(-78 56 -26 -66) -78]
Test Case: 923 | Input/Output: [(-15 58 -4 -26) -26]
Test Case: 924 | Input/Output: [(4 -98 -87 -21) -98]
Test Case: 925 | Input/Output: [(55 79 -51 23) -51]
Test Case: 926 | Input/Output: [(-78 53 21 -58) -78]
Test Case: 927 | Input/Output: [(15 84 -33 -6) -33]
Test Case: 928 | Input/Output: [(-25 -52 -13 -32) -52]
Test Case: 929 | Input/Output: [(-64 43 -45 -20) -64]
Test Case: 930 | Input/Output: [(-33 -69 90 11) -69]
Test Case: 931 | Input/Output: [(-11 -38 42 -33) -38]
Test Case: 932 | Input/Output: [(-24 -50 -84 -1) -84]
Test Case: 933 | Input/Output: [(-10 30 -4 72) -10]
Test Case: 934 | Input/Output: [(61 -75 -25 -49) -75]
Test Case: 935 | Input/Output: [(-36 -47 -29 -37) -47]
Test Case: 936 | Input/Output: [(-70 93 55 -28) -70]
Test Case: 937 | Input/Output: [(-34 100 -9 61) -34]
Test Case: 938 | Input/Output: [(-45 -46 66 39) -46]
Test Case: 939 | Input/Output: [(-34 -51 60 74) -51]
Test Case: 940 | Input/Output: [(-28 29 60 27) -28]
Test Case: 941 | Input/Output: [(41 -22 39 -9) -22]
Test Case: 942 | Input/Output: [(90 -96 -93 4) -96]
Test Case: 943 | Input/Output: [(-5 1 -12 -13) -13]
Test Case: 944 | Input/Output: [(74 17 50 -54) -54]
Test Case: 945 | Input/Output: [(22 77 66 44) 22]
Test Case: 946 | Input/Output: [(-86 -65 -36 45) -86]
Test Case: 947 | Input/Output: [(-99 29 95 15) -99]
Test Case: 948 | Input/Output: [(-63 -74 0 -61) -74]
Test Case: 949 | Input/Output: [(30 23 -45 -17) -45]
Test Case: 950 | Input/Output: [(87 -54 89 14) -54]
Test Case: 951 | Input/Output: [(-76 37 -1 -56) -76]
Test Case: 952 | Input/Output: [(-76 38 10 -10) -76]
Test Case: 953 | Input/Output: [(7 39 9 -47) -47]
Test Case: 954 | Input/Output: [(95 73 52 97) 52]
Test Case: 955 | Input/Output: [(-74 91 -22 53) -74]
Test Case: 956 | Input/Output: [(75 -48 -6 -53) -53]
Test Case: 957 | Input/Output: [(56 -45 91 39) -45]
Test Case: 958 | Input/Output: [(12 33 -31 -10) -31]
Test Case: 959 | Input/Output: [(7 58 -43 -11) -43]
Test Case: 960 | Input/Output: [(-51 92 -10 32) -51]
Test Case: 961 | Input/Output: [(18 -60 17 11) -60]
Test Case: 962 | Input/Output: [(-12 66 73 77) -12]
Test Case: 963 | Input/Output: [(-55 100 44 49) -55]
Test Case: 964 | Input/Output: [(-6 46 -59 -64) -64]
Test Case: 965 | Input/Output: [(46 -39 -52 -10) -52]
Test Case: 966 | Input/Output: [(-67 46 -92 71) -92]
Test Case: 967 | Input/Output: [(-95 35 22 -2) -95]
Test Case: 968 | Input/Output: [(0 -80 60 88) -80]
Test Case: 969 | Input/Output: [(-76 64 52 44) -76]
Test Case: 970 | Input/Output: [(-32 -74 92 -61) -74]
Test Case: 971 | Input/Output: [(97 -26 -40 -78) -78]
Test Case: 972 | Input/Output: [(99 -25 67 -47) -47]
Test Case: 973 | Input/Output: [(-82 72 -25 -80) -82]
Test Case: 974 | Input/Output: [(12 47 1 -76) -76]
Test Case: 975 | Input/Output: [(69 -77 27 -45) -77]
Test Case: 976 | Input/Output: [(-98 -55 -65 24) -98]
Test Case: 977 | Input/Output: [(41 77 -51 92) -51]
Test Case: 978 | Input/Output: [(7 -22 11 -38) -38]
Test Case: 979 | Input/Output: [(-33 28 -51 40) -51]
Test Case: 980 | Input/Output: [(-22 78 -31 -61) -61]
Test Case: 981 | Input/Output: [(-48 50 -9 -1) -48]
Test Case: 982 | Input/Output: [(77 -47 2 -55) -55]
Test Case: 983 | Input/Output: [(52 -83 53 -67) -83]
Test Case: 984 | Input/Output: [(46 32 -48 27) -48]
Test Case: 985 | Input/Output: [(75 90 38 76) 38]
Test Case: 986 | Input/Output: [(-47 -87 -71 53) -87]
Test Case: 987 | Input/Output: [(23 28 -42 50) -42]
Test Case: 988 | Input/Output: [(15 56 -85 -83) -85]
Test Case: 989 | Input/Output: [(57 -5 2 57) -5]
Test Case: 990 | Input/Output: [(-36 -84 -7 -18) -84]
Test Case: 991 | Input/Output: [(84 25 -14 89) -14]
Test Case: 992 | Input/Output: [(-44 -28 35 96) -44]
Test Case: 993 | Input/Output: [(-94 -31 -73 60) -94]
Test Case: 994 | Input/Output: [(-88 -41 7 33) -88]
Test Case: 995 | Input/Output: [(-28 -83 -75 94) -83]
Test Case: 996 | Input/Output: [(-9 -86 -56 30) -86]
Test Case: 997 | Input/Output: [(-57 86 42 98) -57]
Test Case: 998 | Input/Output: [(-83 12 46 44) -83]
Test Case: 999 | Input/Output: [(-43 -74 67 64) -74]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 78 71 -85 49 -123 -105 -99 -101 -23 28 64 -58 -49 119 -107 -108
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[7 -51 -51 -51] -51] [[-3 50 -3 -3] -3] [[-89 33 -89 -89] -89] [[11 11 11 -28] -28] [[-18 -39 -39 -39] -39] [[90 72 72 72] 72] [[39 39 100 39] 39] [[50 -90 50 50] -90] [[-26 -26 -26 -10] -26] [[20 27 20 20] 20] [(-46 -46 -46 -46) -46] [(-67 -67 -67 -67) -67] [(29 29 29 29) 29] [(32 32 32 32) 32] [(61 61 61 61) 61] [(96 65 56 48) 48] [(93 45 75 91) 45] [(54 14 34 40) 14] [(14 66 28 17) 14] [(69 50 96 56) 50] [(64 24 31 95) 24] [(29 89 47 90) 29] [(34 49 30 38) 30] [(24 93 9 43) 9] [(49 9 14 91) 9] [(88 82 94 22) 22] [(61 46 92 3) 3] [(13 71 38 38) 13] [(55 71 4 69) 4] [(36 8 94 54) 8] [(66 74 53 52) 52] [(84 61 1 14) 1] [(29 23 94 9) 9] [(27 21 50 60) 21] [(47 81 85 0) 0] [(13 69 71 36) 13] [(-79 1 -37 66) -79] [(-72 -50 46 -92) -92] [(10 38 -19 -93) -93] [(7 62 -3 75) -3] [(39 74 55 88) 39] [(42 -74 72 -33) -74] [(45 -5 -34 -36) -36] [(98 14 -92 -36) -92] [(-83 12 -89 60) -89] [(-94 -72 11 -71) -94] [(-76 47 4 0) -76] [(-55 33 32 -64) -64] [(80 69 -80 -39) -80] [(-85 -41 -19 -69) -85] [(-55 -42 93 -83) -83] [(98 39 74 -73) -73] [(-44 80 84 65) -44] [(-91 -78 -16 -19) -91] [(-22 -31 63 -95) -95] [(-92 54 1 -49) -92] [(-7 -66 -94 -25) -94] [(13 31 -74 -97) -97] [(-93 100 -93 50) -93] [(20 20 -75 -51) -75] [(-99 99 -62 17) -99] [(23 83 -14 -94) -94] [(-99 -94 92 3) -99] [(-65 -88 -83 43) -88] [(94 -81 -5 27) -81] [(34 41 -79 -4) -79] [(59 -81 87 52) -81] [(66 -92 59 8) -92] [(-85 -80 -94 -52) -94] [(-6 -6 28 80) -6] [(-49 -79 -31 14) -79] [(-96 5 -11 32) -96] [(20 2 95 -30) -30] [(-45 83 -96 55) -96] [(-33 46 -49 20) -49] [(-63 -68 -7 39) -68] [(-17 16 -11 -27) -27] [(58 -45 84 -5) -45] [(-94 73 14 0) -94] [(-85 -70 -75 22) -85] [(35 -35 26 47) -35] [(-76 63 -62 24) -76] [(-39 -91 -83 -52) -91] [(-75 52 -22 -1) -75] [(-29 -32 3 -74) -74] [(12 32 -49 -22) -49] [(47 36 12 13) 12] [(-38 32 7 0) -38] [(-61 9 59 79) -61] [(64 -2 -96 -89) -96] [(-2 -41 -24 -52) -52] [(-97 79 -79 -25) -97] [(-35 8 -9 -85) -85] [(-56 -36 -83 -4) -83] [(79 30 -10 -77) -77])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 691
Test mean error for best: 0.69100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output:                    
Correct output: -51                 | Program output: 7                  
Correct output: -3                  | Program output: -3                 
Correct output: -89                 | Program output: -89                
Correct output: -28                 | Program output: 11                 
Correct output: -39                 | Program output: -18                
Correct output: 72                  | Program output:                    
Correct output: 39                  | Program output: 39                 
Correct output: -90                 | Program output:                    
Correct output: -26                 | Program output: -26                
Correct output: 20                  | Program output: 20                 
Correct output: -46                 | Program output: -46                
Correct output: -67                 | Program output: -67                
Correct output: 29                  | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 61                  | Program output:                    
Correct output: 48                  | Program output:                    
Correct output: 45                  | Program output:                    
Correct output: 14                  | Program output:                    
Correct output: 14                  | Program output: 14                 
Correct output: 50                  | Program output:                    
Correct output: 24                  | Program output:                    
Correct output: 29                  | Program output: 29                 
Correct output: 30                  | Program output: 34                 
Correct output: 9                   | Program output: 24                 
Correct output: 9                   | Program output:                    
Correct output: 22                  | Program output:                    
Correct output: 3                   | Program output:                    
Correct output: 13                  | Program output: 13                 
Correct output: 4                   | Program output:                    
Correct output: 8                   | Program output: 36                 
Correct output: 52                  | Program output:                    
Correct output: 1                   | Program output:                    
Correct output: 9                   | Program output: 29                 
Correct output: 21                  | Program output: 27                 
Correct output: 0                   | Program output:                    
Correct output: 13                  | Program output: 13                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: -72                
Correct output: -93                 | Program output: 10                 
Correct output: -3                  | Program output: 7                  
Correct output: 39                  | Program output: 39                 
Correct output: -74                 | Program output: 42                 
Correct output: -36                 | Program output:                    
Correct output: -92                 | Program output:                    
Correct output: -89                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -76                 | Program output: -76                
Correct output: -64                 | Program output: -55                
Correct output: -80                 | Program output:                    
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -55                
Correct output: -73                 | Program output:                    
Correct output: -44                 | Program output: -44                
Correct output: -91                 | Program output: -91                
Correct output: -95                 | Program output: -22                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -7                 
Correct output: -97                 | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -75                 | Program output: 20                 
Correct output: -99                 | Program output: -99                
Correct output: -94                 | Program output: 23                 
Correct output: -99                 | Program output: -99                
Correct output: -88                 | Program output: -65                
Correct output: -81                 | Program output:                    
Correct output: -79                 | Program output: 34                 
Correct output: -81                 | Program output:                    
Correct output: -92                 | Program output:                    
Correct output: -94                 | Program output: -85                
Correct output: -6                  | Program output: -6                 
Correct output: -79                 | Program output: -49                
Correct output: -96                 | Program output: -96                
Correct output: -30                 | Program output: 20                 
Correct output: -96                 | Program output: -45                
Correct output: -49                 | Program output: -33                
Correct output: -68                 | Program output: -63                
Correct output: -27                 | Program output: -17                
Correct output: -45                 | Program output:                    
Correct output: -94                 | Program output: -94                
Correct output: -85                 | Program output: -85                
Correct output: -35                 | Program output: 35                 
Correct output: -76                 | Program output: -76                
Correct output: -91                 | Program output: -39                
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -29                
Correct output: -49                 | Program output: 12                 
Correct output: 12                  | Program output:                    
Correct output: -38                 | Program output: -38                
Correct output: -61                 | Program output: -61                
Correct output: -96                 | Program output:                    
Correct output: -52                 | Program output: -2                 
Correct output: -97                 | Program output: -97                
Correct output: -85                 | Program output: -35                
Correct output: -83                 | Program output: -56                
Correct output: -77                 | Program output:                    
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_not} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 1, :instruction integer_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 0, :instruction exec_when} {:close 0, :instruction exec_while} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_dec} {:close 1, :instruction integer_min} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_s} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction 18} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 0, :instruction in1} {:close 0, :instruction exec_flush} {:close 1, :instruction print_exec} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_dup_items} {:close 1, :instruction in3} {:close 1, :instruction tag_boolean_214} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_shove} {:close 2, :instruction exec_noop} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_yankdup})
Lexicase best program: (exec_if (exec_dup_times (boolean_dup_items) boolean_and exec_s_when_autoconstructing (boolean_invert_first_then_and integer_lte exec_dup_times (boolean_flush integer_dup integer_lte boolean_not) boolean_dup_items integer_gte in1 boolean_not) (integer_shove) (integer_mod boolean_dup_times integer_mod print_integer exec_when (exec_while (integer_lt exec_flush integer_eq exec_dup (integer_dec integer_min) exec_y (boolean_invert_second_then_and integer_yankdup exec_s (integer_inc integer_shove integer_div boolean_dup_items) (integer_min exec_stackdepth 18 in2 boolean_pop exec_dup_items) (in1 exec_flush print_exec () exec_while (integer_rot) print_boolean integer_dup_items boolean_eq integer_min integer_max boolean_rot integer_sub boolean_flush) integer_dup_times exec_y (boolean_rot boolean_dup integer_eq exec_do*count () exec_do*while (integer_shove integer_stackdepth exec_dup_times ()) integer_dup exec_k (exec_dup_items in3) (tag_boolean_214) integer_sub integer_dup_items) boolean_empty exec_dup (exec_stackdepth) boolean_yank exec_shove (exec_noop)) integer_dup_items) exec_dup_items integer_yankdup))) ())
Lexicase best errors: [0 0 1 1 0 1 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 107
Percent parens: 0.234
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_not} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 1, :instruction integer_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 0, :instruction exec_when} {:close 0, :instruction exec_while} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_dec} {:close 1, :instruction integer_min} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_s} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction 18} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 0, :instruction in1} {:close 0, :instruction exec_flush} {:close 1, :instruction print_exec} {:close 0, :instruction exec_while} {:close 1, :instruction integer_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_dup_items} {:close 1, :instruction in3} {:close 1, :instruction tag_boolean_214} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_shove} {:close 2, :instruction exec_noop} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_yankdup})
Zero cases best program: (exec_if (exec_dup_times (boolean_dup_items) boolean_and exec_s_when_autoconstructing (boolean_invert_first_then_and integer_lte exec_dup_times (boolean_flush integer_dup integer_lte boolean_not) boolean_dup_items integer_gte in1 boolean_not) (integer_shove) (integer_mod boolean_dup_times integer_mod print_integer exec_when (exec_while (integer_lt exec_flush integer_eq exec_dup (integer_dec integer_min) exec_y (boolean_invert_second_then_and integer_yankdup exec_s (integer_inc integer_shove integer_div boolean_dup_items) (integer_min exec_stackdepth 18 in2 boolean_pop exec_dup_items) (in1 exec_flush print_exec () exec_while (integer_rot) print_boolean integer_dup_items boolean_eq integer_min integer_max boolean_rot integer_sub boolean_flush) integer_dup_times exec_y (boolean_rot boolean_dup integer_eq exec_do*count () exec_do*while (integer_shove integer_stackdepth exec_dup_times ()) integer_dup exec_k (exec_dup_items in3) (tag_boolean_214) integer_sub integer_dup_items) boolean_empty exec_dup (exec_stackdepth) boolean_yank exec_shove (exec_noop)) integer_dup_items) exec_dup_items integer_yankdup))) ())
Zero cases best errors: [0 0 1 1 0 1 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 107
Percent parens: 0.234
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 3 1000 3 3 1 10 3 1000 1)
Population mean number of elite cases: 2.03
Count of perfect (error zero) individuals by case: (3 3 0 3 3 1 10 3 0 1)
Population mean number of perfect (error zero) cases: 0.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_s} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction tagged_197} {:close 0, :instruction integer_mod} {:close 1, :instruction in1} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_dup_items} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction print_integer} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_eq} {:close 2, :instruction boolean_not} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction in1} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction tagged_742} {:close 0, :instruction exec_y} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_items})
Best program: (exec_s (boolean_not) (exec_dup (boolean_yank integer_mult tagged_197 integer_mod in1) exec_dup_times (boolean_stackdepth integer_dup_items boolean_flush) boolean_yankdup print_integer) (print_boolean) boolean_yank boolean_frominteger integer_mod exec_do*while (boolean_eq boolean_not) boolean_invert_second_then_and exec_do*times (integer_yank exec_do*while (integer_dup in3 exec_flush in1 boolean_empty integer_mult integer_empty exec_s_when_autoconstructing (tagged_742) (exec_y (exec_dup (exec_s_when_autoconstructing () (integer_rot) (exec_s (boolean_flush exec_k_when_autoconstructing (exec_dup_times (in2 integer_flush boolean_dup_items)) ()) () ())))) ())))
Errors: [0 0 1 1 0 1 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 45
Size: 68
Percent parens: 0.338
--- Population Statistics ---
Average total errors in population: 9.973
Median total errors in population: 10
Error averages by case: (0.997 0.997 1.0 0.997 0.997 0.999 0.99 0.997 1.0 0.999)
Error minima by case: (0 0 1 0 0 0 0 0 1 0)
Average genome size in population (length): 50.536
Average program size in population (points): 69.487
Average percent parens in population: 0.280
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.273
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 478504
--- Timings ---
Current time: 1559593830214 milliseconds
Total Time:           2.2 seconds
Initialization:       0.1 seconds,  4.4%
Reproduction:         0.8 seconds, 36.2%
Fitness Testing:      1.3 seconds, 59.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 668
Test mean error for best: 0.66800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -51                 | Program output: -51                
Correct output: -3                  | Program output: -3                 
Correct output: -89                 | Program output: -89                
Correct output: -28                 | Program output: -28                
Correct output: -39                 | Program output: -39                
Correct output: 72                  | Program output: 72                 
Correct output: 39                  | Program output: 39                 
Correct output: -90                 | Program output: 50                 
Correct output: -26                 | Program output: -10                
Correct output: 20                  | Program output: 20                 
Correct output: -46                 | Program output: -46                
Correct output: -67                 | Program output: -67                
Correct output: 29                  | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 61                  | Program output: 61                 
Correct output: 48                  | Program output: 48                 
Correct output: 45                  | Program output: 91                 
Correct output: 14                  | Program output: 40                 
Correct output: 14                  | Program output: 17                 
Correct output: 50                  | Program output: 56                 
Correct output: 24                  | Program output: 95                 
Correct output: 29                  | Program output: 90                 
Correct output: 30                  | Program output: 38                 
Correct output: 9                   | Program output: 43                 
Correct output: 9                   | Program output: 91                 
Correct output: 22                  | Program output: 22                 
Correct output: 3                   | Program output: 3                  
Correct output: 13                  | Program output: 38                 
Correct output: 4                   | Program output: 69                 
Correct output: 8                   | Program output: 54                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 21                  | Program output: 60                 
Correct output: 0                   | Program output: 0                  
Correct output: 13                  | Program output: 36                 
Correct output: -79                 | Program output: 66                 
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: -3                  | Program output: 75                 
Correct output: 39                  | Program output: 88                 
Correct output: -74                 | Program output: -33                
Correct output: -36                 | Program output: -36                
Correct output: -92                 | Program output: -36                
Correct output: -89                 | Program output: 60                 
Correct output: -94                 | Program output: -71                
Correct output: -76                 | Program output: 0                  
Correct output: -64                 | Program output: -64                
Correct output: -80                 | Program output: -39                
Correct output: -85                 | Program output: -69                
Correct output: -83                 | Program output: -83                
Correct output: -73                 | Program output: -73                
Correct output: -44                 | Program output: 65                 
Correct output: -91                 | Program output: -19                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -49                
Correct output: -94                 | Program output: -25                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: 50                 
Correct output: -75                 | Program output: -51                
Correct output: -99                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: 3                  
Correct output: -88                 | Program output: 43                 
Correct output: -81                 | Program output: 27                 
Correct output: -79                 | Program output: -4                 
Correct output: -81                 | Program output: 52                 
Correct output: -92                 | Program output: 8                  
Correct output: -94                 | Program output: -52                
Correct output: -6                  | Program output: 80                 
Correct output: -79                 | Program output: 14                 
Correct output: -96                 | Program output: 32                 
Correct output: -30                 | Program output: -30                
Correct output: -96                 | Program output: 55                 
Correct output: -49                 | Program output: 20                 
Correct output: -68                 | Program output: 39                 
Correct output: -27                 | Program output: -27                
Correct output: -45                 | Program output: -5                 
Correct output: -94                 | Program output: 0                  
Correct output: -85                 | Program output: 22                 
Correct output: -35                 | Program output: 47                 
Correct output: -76                 | Program output: 24                 
Correct output: -91                 | Program output: -52                
Correct output: -75                 | Program output: -1                 
Correct output: -74                 | Program output: -74                
Correct output: -49                 | Program output: -22                
Correct output: 12                  | Program output: 13                 
Correct output: -38                 | Program output: 0                  
Correct output: -61                 | Program output: 79                 
Correct output: -96                 | Program output: -89                
Correct output: -52                 | Program output: -52                
Correct output: -97                 | Program output: -25                
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -4                 
Correct output: -77                 | Program output: -77                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_59} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 1, :instruction exec_do*while} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_max} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_stackdepth})
Lexicase best program: (boolean_flush exec_pop (tagged_59 integer_add integer_dup_times in2 in1 exec_when () exec_do*while () integer_div) boolean_not integer_sub in4 exec_empty integer_gte boolean_invert_first_then_and integer_max integer_mult exec_swap (print_integer exec_do*count () exec_yank exec_do*range () exec_dup_times (boolean_eq boolean_or in2 integer_stackdepth)) ())
Lexicase best errors: [1 1 0 0 0 1 0 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 37
Percent parens: 0.243
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_59} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 1, :instruction exec_do*while} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_max} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_stackdepth})
Zero cases best program: (boolean_flush exec_pop (tagged_59 integer_add integer_dup_times in2 in1 exec_when () exec_do*while () integer_div) boolean_not integer_sub in4 exec_empty integer_gte boolean_invert_first_then_and integer_max integer_mult exec_swap (print_integer exec_do*count () exec_yank exec_do*range () exec_dup_times (boolean_eq boolean_or in2 integer_stackdepth)) ())
Zero cases best errors: [1 1 0 0 0 1 0 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 37
Percent parens: 0.243
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6 368 76 466 98 4 104 465 76 5)
Population mean number of elite cases: 1.67
Count of perfect (error zero) individuals by case: (6 368 76 466 98 4 104 465 76 5)
Population mean number of perfect (error zero) cases: 1.67
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_div} {:close 0, :instruction integer_lte} {:close 0, :instruction in4} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_k} {:close 0, :instruction exec_s} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_max} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_yankdup} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_flush} {:close 0, :instruction integer_shove} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_while} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction integer_mult} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_yankdup})
Best program: (boolean_rot boolean_dup_items exec_y_when_autoconstructing (integer_gt boolean_shove integer_div integer_lte in4 integer_mod integer_rot print_integer exec_k (exec_s (exec_shove () exec_shove (integer_gt in1 exec_y (boolean_rot) integer_max in4 exec_rot (exec_yankdup integer_inc) (boolean_stackdepth integer_sub integer_dup_items integer_add boolean_dup_items boolean_invert_first_then_and integer_mod integer_empty exec_empty boolean_pop integer_pop) (integer_inc boolean_stackdepth boolean_yank exec_empty boolean_flush) integer_shove integer_dup_items) exec_while (exec_do*range (integer_flush exec_y_when_autoconstructing (integer_mult) integer_gte exec_do*times (boolean_yankdup)))) () ()) ()))
Errors: [1 1 0 0 0 1 0 0 0 1]
Total: 4
Mean: 0.4
Genome size: 50
Size: 67
Percent parens: 0.254
--- Population Statistics ---
Average total errors in population: 8.332
Median total errors in population: 9
Error averages by case: (0.994 0.632 0.924 0.534 0.902 0.996 0.896 0.535 0.924 0.995)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 39.69
Average program size in population (points): 53.419
Average percent parens in population: 0.257
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 55
Genome diversity (% unique genomes):	 0.879
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.879
Total error diversity:				 0.007
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.128
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 855510
--- Timings ---
Current time: 1559593832469 milliseconds
Total Time:           4.5 seconds
Initialization:       0.1 seconds,  2.2%
Reproduction:         1.8 seconds, 40.9%
Fitness Testing:      1.9 seconds, 41.5%
Report:               0.7 seconds, 15.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 653
Test mean error for best: 0.65300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output:                    
Correct output: -51                 | Program output: -51                
Correct output: -3                  | Program output: -3                 
Correct output: -89                 | Program output: -89                
Correct output: -28                 | Program output: 11                 
Correct output: -39                 | Program output: -18                
Correct output: 72                  | Program output:                    
Correct output: 39                  | Program output: 100                
Correct output: -90                 | Program output: 50                 
Correct output: -26                 | Program output: -26                
Correct output: 20                  | Program output: 20                 
Correct output: -46                 | Program output: -46                
Correct output: -67                 | Program output: -67                
Correct output: 29                  | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 61                  | Program output:                    
Correct output: 48                  | Program output:                    
Correct output: 45                  | Program output:                    
Correct output: 14                  | Program output: 34                 
Correct output: 14                  | Program output: 28                 
Correct output: 50                  | Program output:                    
Correct output: 24                  | Program output:                    
Correct output: 29                  | Program output: 47                 
Correct output: 30                  | Program output: 30                 
Correct output: 9                   | Program output: 9                  
Correct output: 9                   | Program output: 14                 
Correct output: 22                  | Program output:                    
Correct output: 3                   | Program output:                    
Correct output: 13                  | Program output: 38                 
Correct output: 4                   | Program output: 4                  
Correct output: 8                   | Program output: 94                 
Correct output: 52                  | Program output:                    
Correct output: 1                   | Program output:                    
Correct output: 9                   | Program output: 94                 
Correct output: 21                  | Program output: 50                 
Correct output: 0                   | Program output: 85                 
Correct output: 13                  | Program output: 71                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: -72                
Correct output: -93                 | Program output: -19                
Correct output: -3                  | Program output: -3                 
Correct output: 39                  | Program output: 55                 
Correct output: -74                 | Program output: 72                 
Correct output: -36                 | Program output: -34                
Correct output: -92                 | Program output:                    
Correct output: -89                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -76                 | Program output: -76                
Correct output: -64                 | Program output: -55                
Correct output: -80                 | Program output:                    
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -55                
Correct output: -73                 | Program output:                    
Correct output: -44                 | Program output: -44                
Correct output: -91                 | Program output: -91                
Correct output: -95                 | Program output: -22                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -7                 
Correct output: -97                 | Program output: -74                
Correct output: -93                 | Program output: -93                
Correct output: -75                 | Program output: -75                
Correct output: -99                 | Program output: -99                
Correct output: -94                 | Program output: -14                
Correct output: -99                 | Program output: -99                
Correct output: -88                 | Program output: -65                
Correct output: -81                 | Program output:                    
Correct output: -79                 | Program output: -79                
Correct output: -81                 | Program output:                    
Correct output: -92                 | Program output:                    
Correct output: -94                 | Program output: -85                
Correct output: -6                  | Program output: -6                 
Correct output: -79                 | Program output: -49                
Correct output: -96                 | Program output: -96                
Correct output: -30                 | Program output: 95                 
Correct output: -96                 | Program output: -45                
Correct output: -49                 | Program output: -33                
Correct output: -68                 | Program output: -63                
Correct output: -27                 | Program output: -17                
Correct output: -45                 | Program output:                    
Correct output: -94                 | Program output: -94                
Correct output: -85                 | Program output: -85                
Correct output: -35                 | Program output: 26                 
Correct output: -76                 | Program output: -76                
Correct output: -91                 | Program output: -39                
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -29                
Correct output: -49                 | Program output: -49                
Correct output: 12                  | Program output: 12                 
Correct output: -38                 | Program output: -38                
Correct output: -61                 | Program output: -61                
Correct output: -96                 | Program output:                    
Correct output: -52                 | Program output: -2                 
Correct output: -97                 | Program output: -97                
Correct output: -85                 | Program output: -35                
Correct output: -83                 | Program output: -56                
Correct output: -77                 | Program output:                    
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_s} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction tagged_197} {:close 0, :instruction integer_mod} {:close 1, :instruction in1} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction in3} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction print_integer} {:close 0, :instruction exec_when} {:close 1, :instruction print_boolean} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_dup} {:close 2, :instruction boolean_not} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction tagged_742} {:close 0, :instruction exec_dup} {:close 1, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_items})
Lexicase best program: (exec_s (boolean_not) (exec_dup (boolean_yank boolean_not integer_mult boolean_yankdup tagged_197 integer_mod in1) exec_dup_times (boolean_stackdepth in3) boolean_flush) (boolean_yankdup print_integer) exec_when (print_boolean) exec_flush integer_gte boolean_yank boolean_shove boolean_frominteger integer_mod exec_do*while (boolean_dup boolean_not) exec_do*times (integer_yank exec_do*while (integer_dup in3 exec_flush in1 boolean_invert_second_then_and tagged_742) exec_dup (boolean_dup) exec_s_when_autoconstructing () (integer_rot) (exec_s (boolean_flush exec_k_when_autoconstructing (exec_dup_times (in2 integer_flush boolean_dup_items)) ()) () ())))
Lexicase best errors: [0 0 1 0 1 0 0 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 67
Percent parens: 0.299
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_s} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction tagged_197} {:close 0, :instruction integer_mod} {:close 1, :instruction in1} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction in3} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction print_integer} {:close 0, :instruction exec_when} {:close 1, :instruction print_boolean} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_dup} {:close 2, :instruction boolean_not} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction tagged_742} {:close 0, :instruction exec_dup} {:close 1, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_items})
Zero cases best program: (exec_s (boolean_not) (exec_dup (boolean_yank boolean_not integer_mult boolean_yankdup tagged_197 integer_mod in1) exec_dup_times (boolean_stackdepth in3) boolean_flush) (boolean_yankdup print_integer) exec_when (print_boolean) exec_flush integer_gte boolean_yank boolean_shove boolean_frominteger integer_mod exec_do*while (boolean_dup boolean_not) exec_do*times (integer_yank exec_do*while (integer_dup in3 exec_flush in1 boolean_invert_second_then_and tagged_742) exec_dup (boolean_dup) exec_s_when_autoconstructing () (integer_rot) (exec_s (boolean_flush exec_k_when_autoconstructing (exec_dup_times (in2 integer_flush boolean_dup_items)) ()) () ())))
Zero cases best errors: [0 0 1 0 1 0 0 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 67
Percent parens: 0.299
--- Lexicase Population Statistics ---
Count of elite individuals by case: (113 115 137 531 8 114 261 114 140 3)
Population mean number of elite cases: 1.54
Count of perfect (error zero) individuals by case: (113 115 137 531 8 114 261 114 140 3)
Population mean number of perfect (error zero) cases: 1.54
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_s} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_mod} {:close 1, :instruction in1} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction in3} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction print_integer} {:close 0, :instruction exec_when} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 2, :instruction boolean_not} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction in1} {:close 1, :instruction exec_eq} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_empty} {:close 1, :instruction tagged_742} {:close 0, :instruction exec_dup} {:close 1, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_dup_items})
Best program: (exec_s (boolean_not) (exec_dup (boolean_yank integer_mult boolean_yankdup integer_mod in1) exec_dup_times (boolean_stackdepth in3) boolean_flush) (boolean_yankdup print_integer) exec_when (print_boolean) boolean_yank boolean_frominteger integer_mod exec_do*while (boolean_not) exec_do*times (integer_yank exec_do*while (integer_dup in3 exec_flush in1 exec_eq) boolean_empty integer_mult integer_empty tagged_742) exec_dup (boolean_dup) exec_s_when_autoconstructing () (integer_rot) (exec_s (boolean_flush exec_k_when_autoconstructing (exec_dup_times (in2 integer_flush boolean_dup_items)) ()) () ()))
Errors: [0 0 1 0 1 0 0 0 1 1]
Total: 4
Mean: 0.4
Genome size: 44
Size: 64
Percent parens: 0.313
--- Population Statistics ---
Average total errors in population: 8.464
Median total errors in population: 9
Error averages by case: (0.887 0.885 0.863 0.469 0.992 0.886 0.739 0.886 0.86 0.997)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 46.936
Average program size in population (points): 64.031
Average percent parens in population: 0.274
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.007
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.165
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1424825
--- Timings ---
Current time: 1559593834969 milliseconds
Total Time:           7.1 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         3.1 seconds, 43.3%
Fitness Testing:      2.6 seconds, 35.9%
Report:               1.4 seconds, 19.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 670
Test mean error for best: 0.67000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output:                    
Correct output: -51                 | Program output: -51                
Correct output: -3                  | Program output: -3                 
Correct output: -89                 | Program output: -89                
Correct output: -28                 | Program output: 11                 
Correct output: -39                 | Program output: -39                
Correct output: 72                  | Program output: 72                 
Correct output: 39                  | Program output: 100                
Correct output: -90                 | Program output: 50                 
Correct output: -26                 | Program output: -26                
Correct output: 20                  | Program output: 20                 
Correct output: -46                 | Program output: -46                
Correct output: -67                 | Program output: -67                
Correct output: 29                  | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 61                  | Program output: 61                 
Correct output: 48                  | Program output: 56                 
Correct output: 45                  | Program output: 75                 
Correct output: 14                  | Program output: 34                 
Correct output: 14                  | Program output: 28                 
Correct output: 50                  | Program output: 96                 
Correct output: 24                  | Program output: 31                 
Correct output: 29                  | Program output:                    
Correct output: 30                  | Program output: 30                 
Correct output: 9                   | Program output:                    
Correct output: 9                   | Program output: 14                 
Correct output: 22                  | Program output: 94                 
Correct output: 3                   | Program output: 92                 
Correct output: 13                  | Program output: 38                 
Correct output: 4                   | Program output: 4                  
Correct output: 8                   | Program output: 94                 
Correct output: 52                  | Program output: 53                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 94                 
Correct output: 21                  | Program output: 50                 
Correct output: 0                   | Program output: 85                 
Correct output: 13                  | Program output: 71                 
Correct output: -79                 | Program output: -37                
Correct output: -92                 | Program output: 46                 
Correct output: -93                 | Program output: -19                
Correct output: -3                  | Program output: -3                 
Correct output: 39                  | Program output: 55                 
Correct output: -74                 | Program output: 72                 
Correct output: -36                 | Program output: -34                
Correct output: -92                 | Program output: -92                
Correct output: -89                 | Program output: -89                
Correct output: -94                 | Program output: 11                 
Correct output: -76                 | Program output: 4                  
Correct output: -64                 | Program output: 32                 
Correct output: -80                 | Program output: -80                
Correct output: -85                 | Program output: -19                
Correct output: -83                 | Program output: 93                 
Correct output: -73                 | Program output: 74                 
Correct output: -44                 | Program output: 84                 
Correct output: -91                 | Program output: -16                
Correct output: -95                 | Program output: 63                 
Correct output: -92                 | Program output: 1                  
Correct output: -94                 | Program output: -94                
Correct output: -97                 | Program output: -74                
Correct output: -93                 | Program output:                    
Correct output: -75                 | Program output: -75                
Correct output: -99                 | Program output:                    
Correct output: -94                 | Program output: -14                
Correct output: -99                 | Program output: 92                 
Correct output: -88                 | Program output: -83                
Correct output: -81                 | Program output: -5                 
Correct output: -79                 | Program output: -79                
Correct output: -81                 | Program output: 87                 
Correct output: -92                 | Program output: 59                 
Correct output: -94                 | Program output: -94                
Correct output: -6                  | Program output: 28                 
Correct output: -79                 | Program output: -31                
Correct output: -96                 | Program output: -11                
Correct output: -30                 | Program output: 95                 
Correct output: -96                 | Program output: -96                
Correct output: -49                 | Program output: -49                
Correct output: -68                 | Program output: -7                 
Correct output: -27                 | Program output: -11                
Correct output: -45                 | Program output: 84                 
Correct output: -94                 | Program output: 14                 
Correct output: -85                 | Program output: -75                
Correct output: -35                 | Program output: 26                 
Correct output: -76                 | Program output: -62                
Correct output: -91                 | Program output: -83                
Correct output: -75                 | Program output: -22                
Correct output: -74                 | Program output: 3                  
Correct output: -49                 | Program output: -49                
Correct output: 12                  | Program output: 12                 
Correct output: -38                 | Program output: 7                  
Correct output: -61                 | Program output: 59                 
Correct output: -96                 | Program output: -96                
Correct output: -52                 | Program output: -24                
Correct output: -97                 | Program output: -79                
Correct output: -85                 | Program output: -9                 
Correct output: -83                 | Program output: -83                
Correct output: -77                 | Program output: -10                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_eq} {:close 0, :instruction in4} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction integer_lt} {:close 2, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_noop} {:close 2, :instruction exec_do*while} {:close 0, :instruction integer_rot})
Lexicase best program: (integer_eq in4 boolean_pop exec_s (integer_dup exec_empty) (integer_mod integer_min integer_yank print_integer boolean_shove boolean_yankdup integer_lt) (exec_s_when_autoconstructing () () (integer_eq in3) exec_noop exec_do*while ()) integer_rot)
Lexicase best errors: [1 1 0 0 0 1 1 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 27
Percent parens: 0.296
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_eq} {:close 0, :instruction in4} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction integer_lt} {:close 2, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_noop} {:close 2, :instruction exec_do*while} {:close 0, :instruction integer_rot})
Zero cases best program: (integer_eq in4 boolean_pop exec_s (integer_dup exec_empty) (integer_mod integer_min integer_yank print_integer boolean_shove boolean_yankdup integer_lt) (exec_s_when_autoconstructing () () (integer_eq in3) exec_noop exec_do*while ()) integer_rot)
Zero cases best errors: [1 1 0 0 0 1 1 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 27
Percent parens: 0.296
--- Lexicase Population Statistics ---
Count of elite individuals by case: (38 38 284 546 429 253 38 29 172 499)
Population mean number of elite cases: 2.33
Count of perfect (error zero) individuals by case: (38 38 284 546 429 253 38 29 172 499)
Population mean number of perfect (error zero) cases: 2.33
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_div} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction boolean_not} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction in3} {:close 0, :instruction integer_gte} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 0, :instruction exec_when} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_dec} {:close 1, :instruction integer_eq} {:close 0, :instruction exec_y} {:close 0, :instruction -94} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_s} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction 18} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_flush} {:close 1, :instruction print_exec} {:close 0, :instruction exec_while} {:close 0, :instruction integer_lte} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in4} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_k} {:close 0, :instruction exec_dup_items} {:close 0, :instruction tag_boolean_535} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_k} {:close 2, :instruction exec_noop} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_dup_items})
Best program: (in2 exec_dup_times (boolean_dup_items) boolean_frominteger boolean_yank boolean_and exec_s_when_autoconstructing (integer_div integer_dup boolean_invert_first_then_and boolean_not) (boolean_dup_items in3 integer_gte in1 boolean_not) (integer_shove) boolean_dup_times integer_mod print_integer exec_when (integer_eq integer_rot integer_dec integer_eq) exec_y (-94 boolean_invert_second_then_and integer_yankdup boolean_invert_second_then_and exec_s (exec_do*while (integer_inc integer_div boolean_dup_items) exec_stackdepth 18 in2 boolean_pop exec_dup_items) (in1 boolean_frominteger exec_flush print_exec () exec_while (integer_lte print_boolean boolean_eq boolean_rot boolean_frominteger in4 integer_dup_times exec_y (exec_y_when_autoconstructing (boolean_rot integer_eq exec_do*count () exec_do*while (integer_stackdepth exec_k (exec_dup_items tag_boolean_535 integer_sub integer_dup_items) (boolean_empty exec_k (exec_noop) () integer_dup_items) exec_dup_items))))) ()))
Errors: [1 1 0 0 0 1 1 1 0 0]
Total: 5
Mean: 0.5
Genome size: 69
Size: 90
Percent parens: 0.233
--- Population Statistics ---
Average total errors in population: 7.674
Median total errors in population: 7
Error averages by case: (0.962 0.962 0.716 0.454 0.571 0.747 0.962 0.971 0.828 0.501)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 52.438
Average program size in population (points): 71.777
Average percent parens in population: 0.276
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.006
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.191
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1984015
--- Timings ---
Current time: 1559593837306 milliseconds
Total Time:           9.5 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.3 seconds, 45.4%
Fitness Testing:      3.2 seconds, 33.3%
Report:               1.9 seconds, 20.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 403
Test mean error for best: 0.40300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -51                 | Program output: -51                
Correct output: -3                  | Program output: -3                 
Correct output: -89                 | Program output: -89                
Correct output: -28                 | Program output: 11                 
Correct output: -39                 | Program output: -39                
Correct output: 72                  | Program output: 72                 
Correct output: 39                  | Program output: 39                 
Correct output: -90                 | Program output: -90                
Correct output: -26                 | Program output: -26                
Correct output: 20                  | Program output: 20                 
Correct output: -46                 | Program output: -46                
Correct output: -67                 | Program output: -67                
Correct output: 29                  | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 61                  | Program output: 61                 
Correct output: 48                  | Program output: 65                 
Correct output: 45                  | Program output: 45                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 14                 
Correct output: 50                  | Program output: 50                 
Correct output: 24                  | Program output: 24                 
Correct output: 29                  | Program output: 29                 
Correct output: 30                  | Program output: 34                 
Correct output: 9                   | Program output: 24                 
Correct output: 9                   | Program output: 9                  
Correct output: 22                  | Program output: 82                 
Correct output: 3                   | Program output: 46                 
Correct output: 13                  | Program output: 13                 
Correct output: 4                   | Program output: 55                 
Correct output: 8                   | Program output: 8                  
Correct output: 52                  | Program output: 66                 
Correct output: 1                   | Program output: 61                 
Correct output: 9                   | Program output: 23                 
Correct output: 21                  | Program output: 21                 
Correct output: 0                   | Program output: 47                 
Correct output: 13                  | Program output: 13                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: -72                
Correct output: -93                 | Program output: 10                 
Correct output: -3                  | Program output: 7                  
Correct output: 39                  | Program output: 39                 
Correct output: -74                 | Program output: -74                
Correct output: -36                 | Program output: -5                 
Correct output: -92                 | Program output: 14                 
Correct output: -89                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -76                 | Program output: -76                
Correct output: -64                 | Program output: -55                
Correct output: -80                 | Program output: 69                 
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -55                
Correct output: -73                 | Program output: 39                 
Correct output: -44                 | Program output: -44                
Correct output: -91                 | Program output: -91                
Correct output: -95                 | Program output: -31                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -66                
Correct output: -97                 | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -75                 | Program output: 20                 
Correct output: -99                 | Program output: -99                
Correct output: -94                 | Program output: 23                 
Correct output: -99                 | Program output: -99                
Correct output: -88                 | Program output: -88                
Correct output: -81                 | Program output: -81                
Correct output: -79                 | Program output: 34                 
Correct output: -81                 | Program output: -81                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -85                
Correct output: -6                  | Program output: -6                 
Correct output: -79                 | Program output: -79                
Correct output: -96                 | Program output: -96                
Correct output: -30                 | Program output: 2                  
Correct output: -96                 | Program output: -45                
Correct output: -49                 | Program output: -33                
Correct output: -68                 | Program output: -68                
Correct output: -27                 | Program output: -17                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: -94                
Correct output: -85                 | Program output: -85                
Correct output: -35                 | Program output: -35                
Correct output: -76                 | Program output: -76                
Correct output: -91                 | Program output: -91                
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -32                
Correct output: -49                 | Program output: 12                 
Correct output: 12                  | Program output: 36                 
Correct output: -38                 | Program output: -38                
Correct output: -61                 | Program output: -61                
Correct output: -96                 | Program output: -2                 
Correct output: -52                 | Program output: -41                
Correct output: -97                 | Program output: -97                
Correct output: -85                 | Program output: -35                
Correct output: -83                 | Program output: -56                
Correct output: -77                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_eq} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_59} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_add} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction boolean_flush} {:close 0, :instruction in1} {:close 1, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_when} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_not} {:close 0, :instruction in4} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_max} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_pop})
Lexicase best program: (integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_min integer_dup_times in2 in1 boolean_flush in1 exec_s_when_autoconstructing () (exec_when () exec_eq integer_div) (boolean_not in4 exec_empty boolean_invert_first_then_and) integer_max integer_min exec_swap (boolean_shove) (print_integer exec_yank exec_k_when_autoconstructing () (exec_do*range () boolean_stackdepth boolean_eq boolean_or in2 integer_stackdepth boolean_pop)))
Lexicase best errors: [0 0 0 1 0 0 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 45
Percent parens: 0.244
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_eq} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_59} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_add} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction boolean_flush} {:close 0, :instruction in1} {:close 1, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_when} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_not} {:close 0, :instruction in4} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_max} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in2} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_pop})
Zero cases best program: (integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_min integer_dup_times in2 in1 boolean_flush in1 exec_s_when_autoconstructing () (exec_when () exec_eq integer_div) (boolean_not in4 exec_empty boolean_invert_first_then_and) integer_max integer_min exec_swap (boolean_shove) (print_integer exec_yank exec_k_when_autoconstructing () (exec_do*range () boolean_stackdepth boolean_eq boolean_or in2 integer_stackdepth boolean_pop)))
Zero cases best errors: [0 0 0 1 0 0 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 45
Percent parens: 0.244
--- Lexicase Population Statistics ---
Count of elite individuals by case: (104 117 44 127 117 536 134 140 134 117)
Population mean number of elite cases: 1.57
Count of perfect (error zero) individuals by case: (104 117 44 127 117 536 134 140 134 117)
Population mean number of perfect (error zero) cases: 1.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_pop} {:close 1, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_max} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*range} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_eq} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop})
Best program: (boolean_flush integer_yankdup exec_pop (boolean_yank) integer_dec integer_add integer_dup_times in2 in1 in1 exec_when () boolean_not exec_empty boolean_invert_first_then_and integer_max integer_min exec_swap (exec_eq integer_max boolean_shove) (print_integer exec_do*range (exec_do*count () exec_yank exec_k_when_autoconstructing () (exec_do*range () boolean_eq in2 boolean_pop))))
Errors: [0 0 0 1 0 0 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 29
Size: 39
Percent parens: 0.256
--- Population Statistics ---
Average total errors in population: 8.43
Median total errors in population: 9
Error averages by case: (0.896 0.883 0.956 0.873 0.883 0.464 0.866 0.86 0.866 0.883)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 41.482
Average program size in population (points): 57.157
Average percent parens in population: 0.274
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.009
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.215
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2507368
--- Timings ---
Current time: 1559593839321 milliseconds
Total Time:          11.8 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.5 seconds, 46.8%
Fitness Testing:      3.7 seconds, 31.8%
Report:               2.4 seconds, 20.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 443
Test mean error for best: 0.44300
Test Case    0 | Error: 0
Test Case    1 | Error: 1
Test Case    2 | Error: 1
Test Case    3 | Error: 0
Test Case    4 | Error: 1
Test Case    5 | Error: 1
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 1
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 1
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 1
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 1
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 1
Test Case   51 | Error: 1
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 1
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 1
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 1
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 1
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 1
Test Case   86 | Error: 1
Test Case   87 | Error: 1
Test Case   88 | Error: 0
Test Case   89 | Error: 1
Test Case   90 | Error: 1
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 1
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 1
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 1
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 1
Test Case  216 | Error: 1
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 1
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 1
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 1
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 1
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 1
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 1
Test Case  287 | Error: 1
Test Case  288 | Error: 0
Test Case  289 | Error: 1
Test Case  290 | Error: 1
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 1
Test Case  306 | Error: 1
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 1
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 1
Test Case  322 | Error: 1
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 1
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 1
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 1
Test Case  358 | Error: 1
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 1
Test Case  370 | Error: 1
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 1
Test Case  377 | Error: 1
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 1
Test Case  384 | Error: 1
Test Case  385 | Error: 1
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 1
Test Case  391 | Error: 1
Test Case  392 | Error: 0
Test Case  393 | Error: 1
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 1
Test Case  397 | Error: 1
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 1
Test Case  416 | Error: 1
Test Case  417 | Error: 1
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 0
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 1
Test Case  459 | Error: 1
Test Case  460 | Error: 1
Test Case  461 | Error: 1
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 1
Test Case  467 | Error: 1
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 1
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 1
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 0
Test Case  504 | Error: 1
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 1
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 1
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 1
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 1
Test Case  537 | Error: 1
Test Case  538 | Error: 1
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 1
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 1
Test Case  554 | Error: 1
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 1
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 1
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 1
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 1
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 1
Test Case  598 | Error: 1
Test Case  599 | Error: 1
Test Case  600 | Error: 1
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 1
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 1
Test Case  614 | Error: 1
Test Case  615 | Error: 1
Test Case  616 | Error: 1
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 1
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 1
Test Case  625 | Error: 1
Test Case  626 | Error: 1
Test Case  627 | Error: 1
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 1
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 1
Test Case  643 | Error: 1
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 1
Test Case  648 | Error: 0
Test Case  649 | Error: 1
Test Case  650 | Error: 1
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 1
Test Case  664 | Error: 1
Test Case  665 | Error: 1
Test Case  666 | Error: 0
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 1
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 1
Test Case  692 | Error: 1
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 1
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 1
Test Case  705 | Error: 0
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 1
Test Case  711 | Error: 1
Test Case  712 | Error: 1
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 1
Test Case  725 | Error: 1
Test Case  726 | Error: 1
Test Case  727 | Error: 0
Test Case  728 | Error: 1
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 1
Test Case  733 | Error: 1
Test Case  734 | Error: 1
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 0
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 1
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 1
Test Case  756 | Error: 0
Test Case  757 | Error: 1
Test Case  758 | Error: 1
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 1
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 1
Test Case  771 | Error: 1
Test Case  772 | Error: 0
Test Case  773 | Error: 1
Test Case  774 | Error: 0
Test Case  775 | Error: 1
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 1
Test Case  784 | Error: 1
Test Case  785 | Error: 1
Test Case  786 | Error: 1
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 1
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 1
Test Case  819 | Error: 1
Test Case  820 | Error: 1
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 1
Test Case  826 | Error: 1
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 1
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 1
Test Case  853 | Error: 1
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 1
Test Case  863 | Error: 0
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 1
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 1
Test Case  873 | Error: 1
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 1
Test Case  893 | Error: 0
Test Case  894 | Error: 1
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 0
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 1
Test Case  914 | Error: 1
Test Case  915 | Error: 1
Test Case  916 | Error: 1
Test Case  917 | Error: 0
Test Case  918 | Error: 1
Test Case  919 | Error: 1
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 1
Test Case  932 | Error: 1
Test Case  933 | Error: 0
Test Case  934 | Error: 1
Test Case  935 | Error: 1
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 1
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 1
Test Case  958 | Error: 1
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 1
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 1
Test Case  984 | Error: 1
Test Case  985 | Error: 1
Test Case  986 | Error: 1
Test Case  987 | Error: 1
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 1
Test Case  991 | Error: 1
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -51                 | Program output: -51                
Correct output: -3                  | Program output: -3                 
Correct output: -89                 | Program output: -89                
Correct output: -28                 | Program output: -28                
Correct output: -39                 | Program output: -39                
Correct output: 72                  | Program output: 72                 
Correct output: 39                  | Program output: 39                 
Correct output: -90                 | Program output: 50                 
Correct output: -26                 | Program output: -26                
Correct output: 20                  | Program output: 20                 
Correct output: -46                 | Program output: -46                
Correct output: -67                 | Program output: -67                
Correct output: 29                  | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 61                  | Program output: 61                 
Correct output: 48                  | Program output: 48                 
Correct output: 45                  | Program output: 91                 
Correct output: 14                  | Program output: 40                 
Correct output: 14                  | Program output: 14                 
Correct output: 50                  | Program output: 56                 
Correct output: 24                  | Program output: 64                 
Correct output: 29                  | Program output: 29                 
Correct output: 30                  | Program output: 34                 
Correct output: 9                   | Program output: 24                 
Correct output: 9                   | Program output: 49                 
Correct output: 22                  | Program output: 22                 
Correct output: 3                   | Program output: 3                  
Correct output: 13                  | Program output: 13                 
Correct output: 4                   | Program output: 55                 
Correct output: 8                   | Program output: 36                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 21                  | Program output: 27                 
Correct output: 0                   | Program output: 0                  
Correct output: 13                  | Program output: 13                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: -3                  | Program output: 7                  
Correct output: 39                  | Program output: 39                 
Correct output: -74                 | Program output: -33                
Correct output: -36                 | Program output: -36                
Correct output: -92                 | Program output: -36                
Correct output: -89                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -76                 | Program output: -76                
Correct output: -64                 | Program output: -64                
Correct output: -80                 | Program output: -39                
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -83                
Correct output: -73                 | Program output: -73                
Correct output: -44                 | Program output: -44                
Correct output: -91                 | Program output: -91                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -25                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: -93                
Correct output: -75                 | Program output: -51                
Correct output: -99                 | Program output: -99                
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: -99                
Correct output: -88                 | Program output: -65                
Correct output: -81                 | Program output: 27                 
Correct output: -79                 | Program output: -4                 
Correct output: -81                 | Program output: 52                 
Correct output: -92                 | Program output: 8                  
Correct output: -94                 | Program output: -85                
Correct output: -6                  | Program output: -6                 
Correct output: -79                 | Program output: -49                
Correct output: -96                 | Program output: -96                
Correct output: -30                 | Program output: -30                
Correct output: -96                 | Program output: -45                
Correct output: -49                 | Program output: -33                
Correct output: -68                 | Program output: -63                
Correct output: -27                 | Program output: -27                
Correct output: -45                 | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -85                 | Program output: -85                
Correct output: -35                 | Program output: 35                 
Correct output: -76                 | Program output: -76                
Correct output: -91                 | Program output: -52                
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -74                
Correct output: -49                 | Program output: -22                
Correct output: 12                  | Program output: 13                 
Correct output: -38                 | Program output: -38                
Correct output: -61                 | Program output: -61                
Correct output: -96                 | Program output: -89                
Correct output: -52                 | Program output: -52                
Correct output: -97                 | Program output: -97                
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -56                
Correct output: -77                 | Program output: -77                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_59} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction boolean_not} {:close 0, :instruction in4} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_pop})
Lexicase best program: (boolean_flush integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank exec_s_when_autoconstructing (boolean_invert_first_then_and exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 36
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_59} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction boolean_not} {:close 0, :instruction in4} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_pop})
Zero cases best program: (boolean_flush integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank exec_s_when_autoconstructing (boolean_invert_first_then_and exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 36
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (343 608 529 345 353 359 343 352 247 610)
Population mean number of elite cases: 4.09
Count of perfect (error zero) individuals by case: (343 608 529 345 353 359 343 352 247 610)
Population mean number of perfect (error zero) cases: 4.09
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_59} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in1} {:close 0, :instruction boolean_not} {:close 0, :instruction in4} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_pop})
Best program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 5.911
Median total errors in population: 7
Error averages by case: (0.657 0.392 0.471 0.655 0.647 0.641 0.657 0.648 0.753 0.39)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 31.229
Average program size in population (points): 41.633
Average percent parens in population: 0.249
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.011
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.172
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2976766
--- Timings ---
Current time: 1559593841378 milliseconds
Total Time:          13.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.7 seconds, 49.1%
Fitness Testing:      4.2 seconds, 30.7%
Report:               2.7 seconds, 19.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 5
Successful program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 38


Auto-simplifying with starting size: 38
step: 0
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 500
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 1000
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 1500
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 2000
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 2500
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 3000
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 3500
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 4000
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 4500
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

step: 5000
program: (boolean_flush boolean_and integer_eq integer_yankdup exec_pop (tagged_59 integer_dec) integer_add integer_dup_times in2 in1 in1 boolean_not in4 exec_empty boolean_invert_first_then_and integer_min exec_swap (boolean_shove) (print_integer exec_do*count () exec_yank integer_lt) exec_s_when_autoconstructing (exec_do*range () boolean_eq boolean_or integer_stackdepth boolean_pop) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 38

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 443
Test mean error for best: 0.44300
Test Case    0 | Error: 0
Test Case    1 | Error: 1
Test Case    2 | Error: 1
Test Case    3 | Error: 0
Test Case    4 | Error: 1
Test Case    5 | Error: 1
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 1
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 1
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 1
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 1
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 1
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 1
Test Case   51 | Error: 1
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 1
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 1
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 1
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 1
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 1
Test Case   86 | Error: 1
Test Case   87 | Error: 1
Test Case   88 | Error: 0
Test Case   89 | Error: 1
Test Case   90 | Error: 1
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 1
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 1
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 1
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 1
Test Case  216 | Error: 1
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 1
Test Case  232 | Error: 1
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 1
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 1
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 1
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 1
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 1
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 1
Test Case  287 | Error: 1
Test Case  288 | Error: 0
Test Case  289 | Error: 1
Test Case  290 | Error: 1
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 1
Test Case  306 | Error: 1
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 1
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 1
Test Case  322 | Error: 1
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 1
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 1
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 1
Test Case  358 | Error: 1
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 1
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 1
Test Case  370 | Error: 1
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 1
Test Case  377 | Error: 1
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 1
Test Case  384 | Error: 1
Test Case  385 | Error: 1
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 1
Test Case  391 | Error: 1
Test Case  392 | Error: 0
Test Case  393 | Error: 1
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 1
Test Case  397 | Error: 1
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 1
Test Case  416 | Error: 1
Test Case  417 | Error: 1
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 0
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 1
Test Case  459 | Error: 1
Test Case  460 | Error: 1
Test Case  461 | Error: 1
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 1
Test Case  467 | Error: 1
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 1
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 1
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 0
Test Case  504 | Error: 1
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 1
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 1
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 1
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 1
Test Case  537 | Error: 1
Test Case  538 | Error: 1
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 1
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 1
Test Case  554 | Error: 1
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 1
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 1
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 1
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 1
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 1
Test Case  598 | Error: 1
Test Case  599 | Error: 1
Test Case  600 | Error: 1
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 1
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 1
Test Case  614 | Error: 1
Test Case  615 | Error: 1
Test Case  616 | Error: 1
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 1
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 1
Test Case  625 | Error: 1
Test Case  626 | Error: 1
Test Case  627 | Error: 1
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 1
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 1
Test Case  643 | Error: 1
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 1
Test Case  648 | Error: 0
Test Case  649 | Error: 1
Test Case  650 | Error: 1
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 1
Test Case  664 | Error: 1
Test Case  665 | Error: 1
Test Case  666 | Error: 0
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 1
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 1
Test Case  692 | Error: 1
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 1
Test Case  702 | Error: 1
Test Case  703 | Error: 1
Test Case  704 | Error: 1
Test Case  705 | Error: 0
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 1
Test Case  711 | Error: 1
Test Case  712 | Error: 1
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 1
Test Case  725 | Error: 1
Test Case  726 | Error: 1
Test Case  727 | Error: 0
Test Case  728 | Error: 1
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 1
Test Case  733 | Error: 1
Test Case  734 | Error: 1
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 0
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 1
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 1
Test Case  756 | Error: 0
Test Case  757 | Error: 1
Test Case  758 | Error: 1
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 1
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 1
Test Case  771 | Error: 1
Test Case  772 | Error: 0
Test Case  773 | Error: 1
Test Case  774 | Error: 0
Test Case  775 | Error: 1
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 1
Test Case  784 | Error: 1
Test Case  785 | Error: 1
Test Case  786 | Error: 1
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 1
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 1
Test Case  819 | Error: 1
Test Case  820 | Error: 1
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 1
Test Case  826 | Error: 1
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 1
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 1
Test Case  853 | Error: 1
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 1
Test Case  863 | Error: 0
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 1
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 1
Test Case  873 | Error: 1
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 1
Test Case  893 | Error: 0
Test Case  894 | Error: 1
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 0
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 1
Test Case  914 | Error: 1
Test Case  915 | Error: 1
Test Case  916 | Error: 1
Test Case  917 | Error: 0
Test Case  918 | Error: 1
Test Case  919 | Error: 1
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 1
Test Case  932 | Error: 1
Test Case  933 | Error: 0
Test Case  934 | Error: 1
Test Case  935 | Error: 1
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 1
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 1
Test Case  958 | Error: 1
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 1
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 1
Test Case  984 | Error: 1
Test Case  985 | Error: 1
Test Case  986 | Error: 1
Test Case  987 | Error: 1
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 1
Test Case  991 | Error: 1
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -51                 | Program output: -51                
Correct output: -3                  | Program output: -3                 
Correct output: -89                 | Program output: -89                
Correct output: -28                 | Program output: -28                
Correct output: -39                 | Program output: -39                
Correct output: 72                  | Program output: 72                 
Correct output: 39                  | Program output: 39                 
Correct output: -90                 | Program output: 50                 
Correct output: -26                 | Program output: -26                
Correct output: 20                  | Program output: 20                 
Correct output: -46                 | Program output: -46                
Correct output: -67                 | Program output: -67                
Correct output: 29                  | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 61                  | Program output: 61                 
Correct output: 48                  | Program output: 48                 
Correct output: 45                  | Program output: 91                 
Correct output: 14                  | Program output: 40                 
Correct output: 14                  | Program output: 14                 
Correct output: 50                  | Program output: 56                 
Correct output: 24                  | Program output: 64                 
Correct output: 29                  | Program output: 29                 
Correct output: 30                  | Program output: 34                 
Correct output: 9                   | Program output: 24                 
Correct output: 9                   | Program output: 49                 
Correct output: 22                  | Program output: 22                 
Correct output: 3                   | Program output: 3                  
Correct output: 13                  | Program output: 13                 
Correct output: 4                   | Program output: 55                 
Correct output: 8                   | Program output: 36                 
Correct output: 52                  | Program output: 52                 
Correct output: 1                   | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 21                  | Program output: 27                 
Correct output: 0                   | Program output: 0                  
Correct output: 13                  | Program output: 13                 
Correct output: -79                 | Program output: -79                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: -3                  | Program output: 7                  
Correct output: 39                  | Program output: 39                 
Correct output: -74                 | Program output: -33                
Correct output: -36                 | Program output: -36                
Correct output: -92                 | Program output: -36                
Correct output: -89                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -76                 | Program output: -76                
Correct output: -64                 | Program output: -64                
Correct output: -80                 | Program output: -39                
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -83                
Correct output: -73                 | Program output: -73                
Correct output: -44                 | Program output: -44                
Correct output: -91                 | Program output: -91                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -25                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: -93                
Correct output: -75                 | Program output: -51                
Correct output: -99                 | Program output: -99                
Correct output: -94                 | Program output: -94                
Correct output: -99                 | Program output: -99                
Correct output: -88                 | Program output: -65                
Correct output: -81                 | Program output: 27                 
Correct output: -79                 | Program output: -4                 
Correct output: -81                 | Program output: 52                 
Correct output: -92                 | Program output: 8                  
Correct output: -94                 | Program output: -85                
Correct output: -6                  | Program output: -6                 
Correct output: -79                 | Program output: -49                
Correct output: -96                 | Program output: -96                
Correct output: -30                 | Program output: -30                
Correct output: -96                 | Program output: -45                
Correct output: -49                 | Program output: -33                
Correct output: -68                 | Program output: -63                
Correct output: -27                 | Program output: -27                
Correct output: -45                 | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -85                 | Program output: -85                
Correct output: -35                 | Program output: 35                 
Correct output: -76                 | Program output: -76                
Correct output: -91                 | Program output: -52                
Correct output: -75                 | Program output: -75                
Correct output: -74                 | Program output: -74                
Correct output: -49                 | Program output: -22                
Correct output: 12                  | Program output: 13                 
Correct output: -38                 | Program output: -38                
Correct output: -61                 | Program output: -61                
Correct output: -96                 | Program output: -89                
Correct output: -52                 | Program output: -52                
Correct output: -97                 | Program output: -97                
Correct output: -85                 | Program output: -85                
Correct output: -83                 | Program output: -56                
Correct output: -77                 | Program output: -77                
;;******************************
