Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-37 -37 -37 -56] -56] [[76 76 79 76] 76] [[-26 -26 -32 -26] -32] [[-71 -71 -82 -71] -82] [[14 14 14 61] 14] [[-24 26 26 26] -24] [[15 -29 15 15] -29] [[-100 18 -100 -100] -100] [[98 30 98 98] 30] [[-52 -52 -83 -52] -83] [(-28 -28 -28 -28) -28] [(-89 -89 -89 -89) -89] [(99 99 99 99) 99] [(92 92 92 92) 92] [(-49 -49 -49 -49) -49] [(41 37 80 52) 37] [(96 99 82 56) 56] [(81 26 66 21) 21] [(26 52 13 77) 13] [(99 73 54 60) 54] [(76 23 32 12) 12] [(29 52 37 52) 29] [(23 70 67 0) 0] [(41 27 33 50) 27] [(24 5 59 52) 5] [(46 100 14 51) 14] [(58 8 22 100) 8] [(54 72 99 55) 54] [(89 68 83 53) 53] [(80 65 17 47) 17] [(96 35 7 37) 7] [(94 40 87 82) 40] [(93 99 47 23) 23] [(62 100 23 97) 23] [(93 19 19 100) 19] [(-89 42 41 99) -89] [(9 -33 24 -40) -40] [(-26 -59 67 -2) -59] [(43 -84 -66 18) -84] [(-17 14 5 86) -17] [(58 -41 13 27) -41] [(-90 70 55 -40) -90] [(45 -34 64 -28) -34] [(10 -21 -88 -50) -88] [(8 2 -51 72) -51] [(-73 70 2 -31) -73] [(11 83 -99 -5) -99] [(-67 45 37 91) -67] [(-36 69 -57 -26) -57] [(-82 -16 -55 -7) -82] [(-53 9 10 -4) -53] [(-15 61 57 -87) -87] [(88 4 -1 13) -1] [(-37 87 -71 97) -71] [(-96 72 -65 -42) -96] [(19 -58 82 -11) -58] [(6 50 63 -91) -91] [(45 -38 -82 -71) -82] [(-39 39 48 -95) -95] [(-16 92 39 -34) -34] [(44 87 -39 81) -39] [(36 -97 82 -80) -97] [(-56 13 -37 -58) -58] [(98 -64 55 -88) -88] [(26 18 -88 -40) -88] [(12 -31 -30 86) -31] [(35 14 -55 -81) -81] [(-1 79 66 63) -1] [(-71 36 91 -92) -92] [(100 -35 79 -47) -47] [(-74 -14 77 18) -74] [(-97 8 85 -39) -97] [(31 -71 -58 -27) -71] [(62 12 31 71) 12] [(-60 91 89 -52) -60] [(28 -29 59 0) -29] [(-6 -11 74 -74) -74] [(16 35 -33 -6) -33] [(97 -37 81 73) -37] [(83 -29 -50 26) -50] [(64 -91 57 51) -91] [(72 21 -51 40) -51] [(69 75 5 98) 5] [(-97 -95 -41 -72) -97] [(-54 -49 -86 -32) -86] [(87 53 69 -86) -86] [(3 69 -8 -27) -27] [(76 -37 -2 20) -37] [(-90 -55 -31 -28) -90] [(-83 31 -28 45) -83] [(-100 78 49 -22) -100] [(23 32 10 37) 10] [(-34 87 67 -77) -77] [(-61 23 92 -57) -61] [(58 -4 67 47) -4])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-37 -37 -37 -56] -56]
Train Case:   6 | Input/Output: [[76 76 79 76] 76]
Train Case:   7 | Input/Output: [[-26 -26 -32 -26] -32]
Train Case:   8 | Input/Output: [[-71 -71 -82 -71] -82]
Train Case:   9 | Input/Output: [[14 14 14 61] 14]
Train Case:  10 | Input/Output: [[-24 26 26 26] -24]
Train Case:  11 | Input/Output: [[15 -29 15 15] -29]
Train Case:  12 | Input/Output: [[-100 18 -100 -100] -100]
Train Case:  13 | Input/Output: [[98 30 98 98] 30]
Train Case:  14 | Input/Output: [[-52 -52 -83 -52] -83]
Train Case:  15 | Input/Output: [(-28 -28 -28 -28) -28]
Train Case:  16 | Input/Output: [(-89 -89 -89 -89) -89]
Train Case:  17 | Input/Output: [(99 99 99 99) 99]
Train Case:  18 | Input/Output: [(92 92 92 92) 92]
Train Case:  19 | Input/Output: [(-49 -49 -49 -49) -49]
Train Case:  20 | Input/Output: [(41 37 80 52) 37]
Train Case:  21 | Input/Output: [(96 99 82 56) 56]
Train Case:  22 | Input/Output: [(81 26 66 21) 21]
Train Case:  23 | Input/Output: [(26 52 13 77) 13]
Train Case:  24 | Input/Output: [(99 73 54 60) 54]
Train Case:  25 | Input/Output: [(76 23 32 12) 12]
Train Case:  26 | Input/Output: [(29 52 37 52) 29]
Train Case:  27 | Input/Output: [(23 70 67 0) 0]
Train Case:  28 | Input/Output: [(41 27 33 50) 27]
Train Case:  29 | Input/Output: [(24 5 59 52) 5]
Train Case:  30 | Input/Output: [(46 100 14 51) 14]
Train Case:  31 | Input/Output: [(58 8 22 100) 8]
Train Case:  32 | Input/Output: [(54 72 99 55) 54]
Train Case:  33 | Input/Output: [(89 68 83 53) 53]
Train Case:  34 | Input/Output: [(80 65 17 47) 17]
Train Case:  35 | Input/Output: [(96 35 7 37) 7]
Train Case:  36 | Input/Output: [(94 40 87 82) 40]
Train Case:  37 | Input/Output: [(93 99 47 23) 23]
Train Case:  38 | Input/Output: [(62 100 23 97) 23]
Train Case:  39 | Input/Output: [(93 19 19 100) 19]
Train Case:  40 | Input/Output: [(-89 42 41 99) -89]
Train Case:  41 | Input/Output: [(9 -33 24 -40) -40]
Train Case:  42 | Input/Output: [(-26 -59 67 -2) -59]
Train Case:  43 | Input/Output: [(43 -84 -66 18) -84]
Train Case:  44 | Input/Output: [(-17 14 5 86) -17]
Train Case:  45 | Input/Output: [(58 -41 13 27) -41]
Train Case:  46 | Input/Output: [(-90 70 55 -40) -90]
Train Case:  47 | Input/Output: [(45 -34 64 -28) -34]
Train Case:  48 | Input/Output: [(10 -21 -88 -50) -88]
Train Case:  49 | Input/Output: [(8 2 -51 72) -51]
Train Case:  50 | Input/Output: [(-73 70 2 -31) -73]
Train Case:  51 | Input/Output: [(11 83 -99 -5) -99]
Train Case:  52 | Input/Output: [(-67 45 37 91) -67]
Train Case:  53 | Input/Output: [(-36 69 -57 -26) -57]
Train Case:  54 | Input/Output: [(-82 -16 -55 -7) -82]
Train Case:  55 | Input/Output: [(-53 9 10 -4) -53]
Train Case:  56 | Input/Output: [(-15 61 57 -87) -87]
Train Case:  57 | Input/Output: [(88 4 -1 13) -1]
Train Case:  58 | Input/Output: [(-37 87 -71 97) -71]
Train Case:  59 | Input/Output: [(-96 72 -65 -42) -96]
Train Case:  60 | Input/Output: [(19 -58 82 -11) -58]
Train Case:  61 | Input/Output: [(6 50 63 -91) -91]
Train Case:  62 | Input/Output: [(45 -38 -82 -71) -82]
Train Case:  63 | Input/Output: [(-39 39 48 -95) -95]
Train Case:  64 | Input/Output: [(-16 92 39 -34) -34]
Train Case:  65 | Input/Output: [(44 87 -39 81) -39]
Train Case:  66 | Input/Output: [(36 -97 82 -80) -97]
Train Case:  67 | Input/Output: [(-56 13 -37 -58) -58]
Train Case:  68 | Input/Output: [(98 -64 55 -88) -88]
Train Case:  69 | Input/Output: [(26 18 -88 -40) -88]
Train Case:  70 | Input/Output: [(12 -31 -30 86) -31]
Train Case:  71 | Input/Output: [(35 14 -55 -81) -81]
Train Case:  72 | Input/Output: [(-1 79 66 63) -1]
Train Case:  73 | Input/Output: [(-71 36 91 -92) -92]
Train Case:  74 | Input/Output: [(100 -35 79 -47) -47]
Train Case:  75 | Input/Output: [(-74 -14 77 18) -74]
Train Case:  76 | Input/Output: [(-97 8 85 -39) -97]
Train Case:  77 | Input/Output: [(31 -71 -58 -27) -71]
Train Case:  78 | Input/Output: [(62 12 31 71) 12]
Train Case:  79 | Input/Output: [(-60 91 89 -52) -60]
Train Case:  80 | Input/Output: [(28 -29 59 0) -29]
Train Case:  81 | Input/Output: [(-6 -11 74 -74) -74]
Train Case:  82 | Input/Output: [(16 35 -33 -6) -33]
Train Case:  83 | Input/Output: [(97 -37 81 73) -37]
Train Case:  84 | Input/Output: [(83 -29 -50 26) -50]
Train Case:  85 | Input/Output: [(64 -91 57 51) -91]
Train Case:  86 | Input/Output: [(72 21 -51 40) -51]
Train Case:  87 | Input/Output: [(69 75 5 98) 5]
Train Case:  88 | Input/Output: [(-97 -95 -41 -72) -97]
Train Case:  89 | Input/Output: [(-54 -49 -86 -32) -86]
Train Case:  90 | Input/Output: [(87 53 69 -86) -86]
Train Case:  91 | Input/Output: [(3 69 -8 -27) -27]
Train Case:  92 | Input/Output: [(76 -37 -2 20) -37]
Train Case:  93 | Input/Output: [(-90 -55 -31 -28) -90]
Train Case:  94 | Input/Output: [(-83 31 -28 45) -83]
Train Case:  95 | Input/Output: [(-100 78 49 -22) -100]
Train Case:  96 | Input/Output: [(23 32 10 37) 10]
Train Case:  97 | Input/Output: [(-34 87 67 -77) -77]
Train Case:  98 | Input/Output: [(-61 23 92 -57) -61]
Train Case:  99 | Input/Output: [(58 -4 67 47) -4]
Test Case:   0 | Input/Output: [[-58 -8 -8 -8] -58]
Test Case:   1 | Input/Output: [[20 -93 20 20] -93]
Test Case:   2 | Input/Output: [[-28 -28 -28 69] -28]
Test Case:   3 | Input/Output: [[53 53 53 -29] -29]
Test Case:   4 | Input/Output: [[1 1 1 36] 1]
Test Case:   5 | Input/Output: [[-15 -15 -15 15] -15]
Test Case:   6 | Input/Output: [[-60 -60 -67 -60] -67]
Test Case:   7 | Input/Output: [[-63 -63 -63 79] -63]
Test Case:   8 | Input/Output: [[95 95 -14 95] -14]
Test Case:   9 | Input/Output: [[26 26 40 26] 26]
Test Case:  10 | Input/Output: [[-31 -31 79 -31] -31]
Test Case:  11 | Input/Output: [[38 -60 38 38] -60]
Test Case:  12 | Input/Output: [[-69 -69 -69 95] -69]
Test Case:  13 | Input/Output: [[43 43 43 -29] -29]
Test Case:  14 | Input/Output: [[-98 -98 -1 -98] -98]
Test Case:  15 | Input/Output: [[31 -30 -30 -30] -30]
Test Case:  16 | Input/Output: [[13 58 58 58] 13]
Test Case:  17 | Input/Output: [[75 25 75 75] 25]
Test Case:  18 | Input/Output: [[99 99 99 88] 88]
Test Case:  19 | Input/Output: [[100 100 100 67] 67]
Test Case:  20 | Input/Output: [[-44 -44 -44 -43] -44]
Test Case:  21 | Input/Output: [[32 17 17 17] 17]
Test Case:  22 | Input/Output: [[60 -60 60 60] -60]
Test Case:  23 | Input/Output: [[-35 -35 -35 -95] -95]
Test Case:  24 | Input/Output: [[-71 91 -71 -71] -71]
Test Case:  25 | Input/Output: [[91 12 91 91] 12]
Test Case:  26 | Input/Output: [[-80 85 85 85] -80]
Test Case:  27 | Input/Output: [[-99 -99 -99 -87] -99]
Test Case:  28 | Input/Output: [[31 31 -37 31] -37]
Test Case:  29 | Input/Output: [[44 44 -4 44] -4]
Test Case:  30 | Input/Output: [[27 27 27 74] 27]
Test Case:  31 | Input/Output: [[57 57 2 57] 2]
Test Case:  32 | Input/Output: [[35 35 35 91] 35]
Test Case:  33 | Input/Output: [[71 -60 71 71] -60]
Test Case:  34 | Input/Output: [[-62 -34 -62 -62] -62]
Test Case:  35 | Input/Output: [[-74 97 -74 -74] -74]
Test Case:  36 | Input/Output: [[97 97 97 -14] -14]
Test Case:  37 | Input/Output: [[65 -73 65 65] -73]
Test Case:  38 | Input/Output: [[-24 76 76 76] -24]
Test Case:  39 | Input/Output: [[46 -63 46 46] -63]
Test Case:  40 | Input/Output: [[53 53 -93 53] -93]
Test Case:  41 | Input/Output: [[47 68 47 47] 47]
Test Case:  42 | Input/Output: [[-16 -16 -16 -87] -87]
Test Case:  43 | Input/Output: [[-97 -97 -97 80] -97]
Test Case:  44 | Input/Output: [[-64 -64 -64 27] -64]
Test Case:  45 | Input/Output: [[14 14 38 14] 14]
Test Case:  46 | Input/Output: [[4 42 4 4] 4]
Test Case:  47 | Input/Output: [[1 -54 -54 -54] -54]
Test Case:  48 | Input/Output: [[59 96 96 96] 59]
Test Case:  49 | Input/Output: [[61 -12 61 61] -12]
Test Case:  50 | Input/Output: [[-34 -34 -57 -34] -57]
Test Case:  51 | Input/Output: [[30 30 26 30] 26]
Test Case:  52 | Input/Output: [[-1 -1 -91 -1] -91]
Test Case:  53 | Input/Output: [[-93 -93 65 -93] -93]
Test Case:  54 | Input/Output: [[-37 -44 -44 -44] -44]
Test Case:  55 | Input/Output: [[50 7 7 7] 7]
Test Case:  56 | Input/Output: [[26 95 95 95] 26]
Test Case:  57 | Input/Output: [[-73 -73 -73 -27] -73]
Test Case:  58 | Input/Output: [[-76 -76 -76 -94] -94]
Test Case:  59 | Input/Output: [[-12 82 82 82] -12]
Test Case:  60 | Input/Output: [[68 63 63 63] 63]
Test Case:  61 | Input/Output: [[-78 -78 -32 -78] -78]
Test Case:  62 | Input/Output: [[30 -20 30 30] -20]
Test Case:  63 | Input/Output: [[60 60 60 38] 38]
Test Case:  64 | Input/Output: [[-27 -18 -18 -18] -27]
Test Case:  65 | Input/Output: [[-44 -44 -44 -76] -76]
Test Case:  66 | Input/Output: [[90 -2 90 90] -2]
Test Case:  67 | Input/Output: [[65 -74 -74 -74] -74]
Test Case:  68 | Input/Output: [[71 71 34 71] 34]
Test Case:  69 | Input/Output: [[-64 -64 -64 88] -64]
Test Case:  70 | Input/Output: [[76 76 76 -49] -49]
Test Case:  71 | Input/Output: [[-60 -60 -60 52] -60]
Test Case:  72 | Input/Output: [[5 5 8 5] 5]
Test Case:  73 | Input/Output: [[-67 44 -67 -67] -67]
Test Case:  74 | Input/Output: [[40 -29 -29 -29] -29]
Test Case:  75 | Input/Output: [[-60 -60 -60 -75] -75]
Test Case:  76 | Input/Output: [[44 44 44 44] 44]
Test Case:  77 | Input/Output: [[100 100 100 -40] -40]
Test Case:  78 | Input/Output: [[18 18 18 -69] -69]
Test Case:  79 | Input/Output: [[-44 -88 -88 -88] -88]
Test Case:  80 | Input/Output: [[20 -16 20 20] -16]
Test Case:  81 | Input/Output: [[4 4 4 -21] -21]
Test Case:  82 | Input/Output: [[-25 -25 -90 -25] -90]
Test Case:  83 | Input/Output: [[-68 78 78 78] -68]
Test Case:  84 | Input/Output: [[3 33 3 3] 3]
Test Case:  85 | Input/Output: [[20 20 88 20] 20]
Test Case:  86 | Input/Output: [[11 11 11 28] 11]
Test Case:  87 | Input/Output: [[85 85 -100 85] -100]
Test Case:  88 | Input/Output: [[15 12 12 12] 12]
Test Case:  89 | Input/Output: [[56 -98 -98 -98] -98]
Test Case:  90 | Input/Output: [[-35 -65 -65 -65] -65]
Test Case:  91 | Input/Output: [[-23 7 -23 -23] -23]
Test Case:  92 | Input/Output: [[-1 -49 -49 -49] -49]
Test Case:  93 | Input/Output: [[-31 90 -31 -31] -31]
Test Case:  94 | Input/Output: [[-31 -16 -31 -31] -31]
Test Case:  95 | Input/Output: [[95 -65 95 95] -65]
Test Case:  96 | Input/Output: [[-74 -37 -37 -37] -74]
Test Case:  97 | Input/Output: [[-95 38 -95 -95] -95]
Test Case:  98 | Input/Output: [[90 -21 90 90] -21]
Test Case:  99 | Input/Output: [[-57 -57 29 -57] -57]
Test Case: 100 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 101 | Input/Output: [(55 55 55 55) 55]
Test Case: 102 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 103 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 104 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 105 | Input/Output: [(60 60 60 60) 60]
Test Case: 106 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 107 | Input/Output: [(59 59 59 59) 59]
Test Case: 108 | Input/Output: [(73 73 73 73) 73]
Test Case: 109 | Input/Output: [(70 70 70 70) 70]
Test Case: 110 | Input/Output: [(81 81 81 81) 81]
Test Case: 111 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 112 | Input/Output: [(40 40 40 40) 40]
Test Case: 113 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 114 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 115 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 116 | Input/Output: [(43 43 43 43) 43]
Test Case: 117 | Input/Output: [(41 41 41 41) 41]
Test Case: 118 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 119 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 120 | Input/Output: [(37 37 37 37) 37]
Test Case: 121 | Input/Output: [(82 82 82 82) 82]
Test Case: 122 | Input/Output: [(74 74 74 74) 74]
Test Case: 123 | Input/Output: [(97 97 97 97) 97]
Test Case: 124 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 125 | Input/Output: [(53 53 53 53) 53]
Test Case: 126 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 127 | Input/Output: [(29 29 29 29) 29]
Test Case: 128 | Input/Output: [(32 32 32 32) 32]
Test Case: 129 | Input/Output: [(70 70 70 70) 70]
Test Case: 130 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 131 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 132 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 133 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 134 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 135 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 136 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 137 | Input/Output: [(9 9 9 9) 9]
Test Case: 138 | Input/Output: [(20 20 20 20) 20]
Test Case: 139 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 140 | Input/Output: [(55 55 55 55) 55]
Test Case: 141 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 142 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 143 | Input/Output: [(30 30 30 30) 30]
Test Case: 144 | Input/Output: [(69 69 69 69) 69]
Test Case: 145 | Input/Output: [(97 97 97 97) 97]
Test Case: 146 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 147 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 148 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 149 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 150 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 151 | Input/Output: [(88 88 88 88) 88]
Test Case: 152 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 153 | Input/Output: [(11 11 11 11) 11]
Test Case: 154 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 155 | Input/Output: [(89 89 89 89) 89]
Test Case: 156 | Input/Output: [(86 86 86 86) 86]
Test Case: 157 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 158 | Input/Output: [(73 73 73 73) 73]
Test Case: 159 | Input/Output: [(60 60 60 60) 60]
Test Case: 160 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 161 | Input/Output: [(62 62 62 62) 62]
Test Case: 162 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 163 | Input/Output: [(57 57 57 57) 57]
Test Case: 164 | Input/Output: [(13 13 13 13) 13]
Test Case: 165 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 166 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 167 | Input/Output: [(21 21 21 21) 21]
Test Case: 168 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 169 | Input/Output: [(43 43 43 43) 43]
Test Case: 170 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 171 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 172 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 173 | Input/Output: [(7 7 7 7) 7]
Test Case: 174 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 175 | Input/Output: [(46 46 46 46) 46]
Test Case: 176 | Input/Output: [(48 48 48 48) 48]
Test Case: 177 | Input/Output: [(39 39 39 39) 39]
Test Case: 178 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 179 | Input/Output: [(36 36 36 36) 36]
Test Case: 180 | Input/Output: [(56 56 56 56) 56]
Test Case: 181 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 182 | Input/Output: [(76 76 76 76) 76]
Test Case: 183 | Input/Output: [(55 55 55 55) 55]
Test Case: 184 | Input/Output: [(7 7 7 7) 7]
Test Case: 185 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 186 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 187 | Input/Output: [(46 46 46 46) 46]
Test Case: 188 | Input/Output: [(6 6 6 6) 6]
Test Case: 189 | Input/Output: [(67 67 67 67) 67]
Test Case: 190 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 191 | Input/Output: [(57 57 57 57) 57]
Test Case: 192 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 193 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 194 | Input/Output: [(26 26 26 26) 26]
Test Case: 195 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 196 | Input/Output: [(40 40 40 40) 40]
Test Case: 197 | Input/Output: [(38 38 38 38) 38]
Test Case: 198 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 199 | Input/Output: [(59 59 59 59) 59]
Test Case: 200 | Input/Output: [(22 94 75 83) 22]
Test Case: 201 | Input/Output: [(94 59 57 57) 57]
Test Case: 202 | Input/Output: [(63 51 21 80) 21]
Test Case: 203 | Input/Output: [(39 1 63 22) 1]
Test Case: 204 | Input/Output: [(94 19 90 48) 19]
Test Case: 205 | Input/Output: [(52 9 31 98) 9]
Test Case: 206 | Input/Output: [(8 10 43 23) 8]
Test Case: 207 | Input/Output: [(96 76 26 75) 26]
Test Case: 208 | Input/Output: [(1 35 20 33) 1]
Test Case: 209 | Input/Output: [(100 29 45 72) 29]
Test Case: 210 | Input/Output: [(80 81 2 84) 2]
Test Case: 211 | Input/Output: [(98 57 81 25) 25]
Test Case: 212 | Input/Output: [(65 12 79 4) 4]
Test Case: 213 | Input/Output: [(63 38 22 61) 22]
Test Case: 214 | Input/Output: [(6 45 15 72) 6]
Test Case: 215 | Input/Output: [(2 52 58 94) 2]
Test Case: 216 | Input/Output: [(5 44 96 45) 5]
Test Case: 217 | Input/Output: [(52 27 67 90) 27]
Test Case: 218 | Input/Output: [(70 44 2 84) 2]
Test Case: 219 | Input/Output: [(72 25 15 58) 15]
Test Case: 220 | Input/Output: [(1 75 63 19) 1]
Test Case: 221 | Input/Output: [(89 54 27 19) 19]
Test Case: 222 | Input/Output: [(28 51 74 38) 28]
Test Case: 223 | Input/Output: [(70 88 22 4) 4]
Test Case: 224 | Input/Output: [(1 59 1 70) 1]
Test Case: 225 | Input/Output: [(89 62 29 31) 29]
Test Case: 226 | Input/Output: [(26 47 15 12) 12]
Test Case: 227 | Input/Output: [(52 62 62 43) 43]
Test Case: 228 | Input/Output: [(65 86 22 79) 22]
Test Case: 229 | Input/Output: [(38 20 59 12) 12]
Test Case: 230 | Input/Output: [(52 2 9 18) 2]
Test Case: 231 | Input/Output: [(66 42 15 61) 15]
Test Case: 232 | Input/Output: [(25 91 100 55) 25]
Test Case: 233 | Input/Output: [(78 74 82 35) 35]
Test Case: 234 | Input/Output: [(14 83 91 3) 3]
Test Case: 235 | Input/Output: [(78 71 84 65) 65]
Test Case: 236 | Input/Output: [(58 19 80 59) 19]
Test Case: 237 | Input/Output: [(69 5 100 42) 5]
Test Case: 238 | Input/Output: [(61 3 12 87) 3]
Test Case: 239 | Input/Output: [(16 92 98 76) 16]
Test Case: 240 | Input/Output: [(40 99 84 56) 40]
Test Case: 241 | Input/Output: [(20 58 45 77) 20]
Test Case: 242 | Input/Output: [(52 94 92 45) 45]
Test Case: 243 | Input/Output: [(61 38 49 59) 38]
Test Case: 244 | Input/Output: [(18 43 17 68) 17]
Test Case: 245 | Input/Output: [(18 86 31 87) 18]
Test Case: 246 | Input/Output: [(52 99 38 62) 38]
Test Case: 247 | Input/Output: [(12 16 97 85) 12]
Test Case: 248 | Input/Output: [(72 73 19 51) 19]
Test Case: 249 | Input/Output: [(46 21 89 64) 21]
Test Case: 250 | Input/Output: [(33 79 54 52) 33]
Test Case: 251 | Input/Output: [(43 84 36 55) 36]
Test Case: 252 | Input/Output: [(81 87 42 27) 27]
Test Case: 253 | Input/Output: [(78 32 8 14) 8]
Test Case: 254 | Input/Output: [(45 22 68 41) 22]
Test Case: 255 | Input/Output: [(32 6 88 73) 6]
Test Case: 256 | Input/Output: [(12 86 44 41) 12]
Test Case: 257 | Input/Output: [(69 53 90 79) 53]
Test Case: 258 | Input/Output: [(67 81 65 87) 65]
Test Case: 259 | Input/Output: [(69 62 68 45) 45]
Test Case: 260 | Input/Output: [(81 66 57 7) 7]
Test Case: 261 | Input/Output: [(60 50 70 64) 50]
Test Case: 262 | Input/Output: [(40 32 33 73) 32]
Test Case: 263 | Input/Output: [(63 50 55 45) 45]
Test Case: 264 | Input/Output: [(6 22 95 70) 6]
Test Case: 265 | Input/Output: [(76 41 84 30) 30]
Test Case: 266 | Input/Output: [(6 64 42 63) 6]
Test Case: 267 | Input/Output: [(48 68 68 73) 48]
Test Case: 268 | Input/Output: [(4 8 25 16) 4]
Test Case: 269 | Input/Output: [(74 13 0 47) 0]
Test Case: 270 | Input/Output: [(27 42 60 29) 27]
Test Case: 271 | Input/Output: [(23 24 50 61) 23]
Test Case: 272 | Input/Output: [(91 86 45 57) 45]
Test Case: 273 | Input/Output: [(74 45 86 92) 45]
Test Case: 274 | Input/Output: [(54 44 41 2) 2]
Test Case: 275 | Input/Output: [(48 42 85 83) 42]
Test Case: 276 | Input/Output: [(70 66 61 9) 9]
Test Case: 277 | Input/Output: [(66 5 67 0) 0]
Test Case: 278 | Input/Output: [(94 24 39 40) 24]
Test Case: 279 | Input/Output: [(98 71 63 73) 63]
Test Case: 280 | Input/Output: [(37 64 22 69) 22]
Test Case: 281 | Input/Output: [(90 61 8 78) 8]
Test Case: 282 | Input/Output: [(7 99 67 67) 7]
Test Case: 283 | Input/Output: [(48 94 56 55) 48]
Test Case: 284 | Input/Output: [(47 98 34 45) 34]
Test Case: 285 | Input/Output: [(13 40 39 56) 13]
Test Case: 286 | Input/Output: [(30 85 80 39) 30]
Test Case: 287 | Input/Output: [(19 69 83 9) 9]
Test Case: 288 | Input/Output: [(51 74 74 24) 24]
Test Case: 289 | Input/Output: [(96 24 35 18) 18]
Test Case: 290 | Input/Output: [(22 40 80 58) 22]
Test Case: 291 | Input/Output: [(13 43 0 90) 0]
Test Case: 292 | Input/Output: [(43 19 31 87) 19]
Test Case: 293 | Input/Output: [(56 61 1 60) 1]
Test Case: 294 | Input/Output: [(2 39 74 7) 2]
Test Case: 295 | Input/Output: [(21 94 44 11) 11]
Test Case: 296 | Input/Output: [(90 32 96 13) 13]
Test Case: 297 | Input/Output: [(65 9 20 41) 9]
Test Case: 298 | Input/Output: [(31 95 19 83) 19]
Test Case: 299 | Input/Output: [(15 67 63 96) 15]
Test Case: 300 | Input/Output: [(72 83 84 49) 49]
Test Case: 301 | Input/Output: [(31 91 24 63) 24]
Test Case: 302 | Input/Output: [(14 68 56 63) 14]
Test Case: 303 | Input/Output: [(13 3 54 91) 3]
Test Case: 304 | Input/Output: [(56 57 82 69) 56]
Test Case: 305 | Input/Output: [(76 61 31 30) 30]
Test Case: 306 | Input/Output: [(17 41 22 10) 10]
Test Case: 307 | Input/Output: [(77 77 62 95) 62]
Test Case: 308 | Input/Output: [(99 59 67 65) 59]
Test Case: 309 | Input/Output: [(99 82 31 65) 31]
Test Case: 310 | Input/Output: [(41 39 27 19) 19]
Test Case: 311 | Input/Output: [(38 44 25 73) 25]
Test Case: 312 | Input/Output: [(35 41 86 56) 35]
Test Case: 313 | Input/Output: [(56 69 87 51) 51]
Test Case: 314 | Input/Output: [(100 66 62 32) 32]
Test Case: 315 | Input/Output: [(88 94 28 17) 17]
Test Case: 316 | Input/Output: [(4 88 59 74) 4]
Test Case: 317 | Input/Output: [(97 1 98 93) 1]
Test Case: 318 | Input/Output: [(81 13 12 46) 12]
Test Case: 319 | Input/Output: [(15 50 92 39) 15]
Test Case: 320 | Input/Output: [(92 13 90 57) 13]
Test Case: 321 | Input/Output: [(65 3 30 47) 3]
Test Case: 322 | Input/Output: [(37 75 46 85) 37]
Test Case: 323 | Input/Output: [(99 78 86 94) 78]
Test Case: 324 | Input/Output: [(65 25 85 28) 25]
Test Case: 325 | Input/Output: [(52 9 48 82) 9]
Test Case: 326 | Input/Output: [(50 32 15 100) 15]
Test Case: 327 | Input/Output: [(91 16 5 52) 5]
Test Case: 328 | Input/Output: [(18 37 5 23) 5]
Test Case: 329 | Input/Output: [(37 14 82 43) 14]
Test Case: 330 | Input/Output: [(100 18 47 50) 18]
Test Case: 331 | Input/Output: [(80 40 61 34) 34]
Test Case: 332 | Input/Output: [(97 47 94 49) 47]
Test Case: 333 | Input/Output: [(60 97 73 44) 44]
Test Case: 334 | Input/Output: [(15 86 37 97) 15]
Test Case: 335 | Input/Output: [(44 47 25 6) 6]
Test Case: 336 | Input/Output: [(13 33 12 20) 12]
Test Case: 337 | Input/Output: [(74 3 14 35) 3]
Test Case: 338 | Input/Output: [(78 41 54 30) 30]
Test Case: 339 | Input/Output: [(47 87 81 53) 47]
Test Case: 340 | Input/Output: [(59 26 8 46) 8]
Test Case: 341 | Input/Output: [(49 47 85 89) 47]
Test Case: 342 | Input/Output: [(58 5 67 21) 5]
Test Case: 343 | Input/Output: [(91 10 9 38) 9]
Test Case: 344 | Input/Output: [(90 19 75 66) 19]
Test Case: 345 | Input/Output: [(54 23 63 54) 23]
Test Case: 346 | Input/Output: [(55 71 73 34) 34]
Test Case: 347 | Input/Output: [(67 85 22 28) 22]
Test Case: 348 | Input/Output: [(44 67 39 55) 39]
Test Case: 349 | Input/Output: [(55 68 20 26) 20]
Test Case: 350 | Input/Output: [(95 100 7 84) 7]
Test Case: 351 | Input/Output: [(12 24 51 41) 12]
Test Case: 352 | Input/Output: [(0 21 51 21) 0]
Test Case: 353 | Input/Output: [(26 98 8 66) 8]
Test Case: 354 | Input/Output: [(62 5 28 27) 5]
Test Case: 355 | Input/Output: [(61 13 7 38) 7]
Test Case: 356 | Input/Output: [(84 3 57 1) 1]
Test Case: 357 | Input/Output: [(3 9 73 3) 3]
Test Case: 358 | Input/Output: [(91 62 63 16) 16]
Test Case: 359 | Input/Output: [(100 88 83 25) 25]
Test Case: 360 | Input/Output: [(85 86 86 65) 65]
Test Case: 361 | Input/Output: [(87 27 33 55) 27]
Test Case: 362 | Input/Output: [(34 50 25 68) 25]
Test Case: 363 | Input/Output: [(11 3 95 98) 3]
Test Case: 364 | Input/Output: [(63 62 58 86) 58]
Test Case: 365 | Input/Output: [(70 15 27 54) 15]
Test Case: 366 | Input/Output: [(86 74 98 0) 0]
Test Case: 367 | Input/Output: [(93 95 72 5) 5]
Test Case: 368 | Input/Output: [(63 39 53 61) 39]
Test Case: 369 | Input/Output: [(44 85 77 55) 44]
Test Case: 370 | Input/Output: [(35 73 88 96) 35]
Test Case: 371 | Input/Output: [(93 59 31 45) 31]
Test Case: 372 | Input/Output: [(53 55 93 29) 29]
Test Case: 373 | Input/Output: [(88 43 3 47) 3]
Test Case: 374 | Input/Output: [(8 58 35 62) 8]
Test Case: 375 | Input/Output: [(19 50 54 14) 14]
Test Case: 376 | Input/Output: [(51 47 84 45) 45]
Test Case: 377 | Input/Output: [(31 88 14 64) 14]
Test Case: 378 | Input/Output: [(3 33 71 12) 3]
Test Case: 379 | Input/Output: [(71 41 11 71) 11]
Test Case: 380 | Input/Output: [(94 87 41 46) 41]
Test Case: 381 | Input/Output: [(37 14 16 89) 14]
Test Case: 382 | Input/Output: [(91 24 84 43) 24]
Test Case: 383 | Input/Output: [(80 24 66 99) 24]
Test Case: 384 | Input/Output: [(52 52 11 41) 11]
Test Case: 385 | Input/Output: [(28 22 25 56) 22]
Test Case: 386 | Input/Output: [(68 34 40 100) 34]
Test Case: 387 | Input/Output: [(11 11 77 6) 6]
Test Case: 388 | Input/Output: [(37 93 34 22) 22]
Test Case: 389 | Input/Output: [(5 72 69 43) 5]
Test Case: 390 | Input/Output: [(75 23 13 35) 13]
Test Case: 391 | Input/Output: [(49 79 75 50) 49]
Test Case: 392 | Input/Output: [(89 59 80 63) 59]
Test Case: 393 | Input/Output: [(80 50 20 80) 20]
Test Case: 394 | Input/Output: [(69 68 34 29) 29]
Test Case: 395 | Input/Output: [(97 99 76 64) 64]
Test Case: 396 | Input/Output: [(6 36 38 90) 6]
Test Case: 397 | Input/Output: [(72 61 80 32) 32]
Test Case: 398 | Input/Output: [(19 32 46 74) 19]
Test Case: 399 | Input/Output: [(55 82 53 74) 53]
Test Case: 400 | Input/Output: [(14 6 15 -42) -42]
Test Case: 401 | Input/Output: [(36 -99 -67 53) -99]
Test Case: 402 | Input/Output: [(78 67 -31 9) -31]
Test Case: 403 | Input/Output: [(4 -85 -18 -89) -89]
Test Case: 404 | Input/Output: [(-26 -15 -73 -5) -73]
Test Case: 405 | Input/Output: [(21 29 -53 39) -53]
Test Case: 406 | Input/Output: [(-31 92 -17 47) -31]
Test Case: 407 | Input/Output: [(-97 19 41 -72) -97]
Test Case: 408 | Input/Output: [(79 77 94 80) 77]
Test Case: 409 | Input/Output: [(-13 -63 -10 -65) -65]
Test Case: 410 | Input/Output: [(-84 -92 -17 9) -92]
Test Case: 411 | Input/Output: [(-40 62 74 -47) -47]
Test Case: 412 | Input/Output: [(-81 85 68 -78) -81]
Test Case: 413 | Input/Output: [(19 54 -83 53) -83]
Test Case: 414 | Input/Output: [(-97 27 68 57) -97]
Test Case: 415 | Input/Output: [(-62 12 43 -91) -91]
Test Case: 416 | Input/Output: [(91 44 28 32) 28]
Test Case: 417 | Input/Output: [(57 19 13 90) 13]
Test Case: 418 | Input/Output: [(38 -15 81 53) -15]
Test Case: 419 | Input/Output: [(99 -63 -28 -75) -75]
Test Case: 420 | Input/Output: [(18 -69 81 -36) -69]
Test Case: 421 | Input/Output: [(80 66 -5 90) -5]
Test Case: 422 | Input/Output: [(83 72 -49 -4) -49]
Test Case: 423 | Input/Output: [(35 -85 -68 28) -85]
Test Case: 424 | Input/Output: [(33 74 -53 -91) -91]
Test Case: 425 | Input/Output: [(-73 -39 7 -3) -73]
Test Case: 426 | Input/Output: [(-75 -22 38 -75) -75]
Test Case: 427 | Input/Output: [(17 -18 -59 -67) -67]
Test Case: 428 | Input/Output: [(-29 4 -99 75) -99]
Test Case: 429 | Input/Output: [(-58 28 -63 -21) -63]
Test Case: 430 | Input/Output: [(14 51 9 87) 9]
Test Case: 431 | Input/Output: [(-84 5 40 15) -84]
Test Case: 432 | Input/Output: [(-89 94 -83 56) -89]
Test Case: 433 | Input/Output: [(-92 56 -37 47) -92]
Test Case: 434 | Input/Output: [(16 -79 100 74) -79]
Test Case: 435 | Input/Output: [(81 -42 1 88) -42]
Test Case: 436 | Input/Output: [(91 -22 -32 -43) -43]
Test Case: 437 | Input/Output: [(76 27 -36 -93) -93]
Test Case: 438 | Input/Output: [(15 27 46 -49) -49]
Test Case: 439 | Input/Output: [(-70 -21 41 68) -70]
Test Case: 440 | Input/Output: [(43 21 93 36) 21]
Test Case: 441 | Input/Output: [(24 -67 -41 32) -67]
Test Case: 442 | Input/Output: [(-58 -75 19 12) -75]
Test Case: 443 | Input/Output: [(-28 13 90 -100) -100]
Test Case: 444 | Input/Output: [(79 42 -61 -39) -61]
Test Case: 445 | Input/Output: [(89 10 51 23) 10]
Test Case: 446 | Input/Output: [(-3 -69 49 -100) -100]
Test Case: 447 | Input/Output: [(55 70 -72 -21) -72]
Test Case: 448 | Input/Output: [(92 75 -52 -9) -52]
Test Case: 449 | Input/Output: [(-37 -13 34 7) -37]
Test Case: 450 | Input/Output: [(-78 67 -78 -34) -78]
Test Case: 451 | Input/Output: [(-20 -86 52 26) -86]
Test Case: 452 | Input/Output: [(-44 -16 -29 52) -44]
Test Case: 453 | Input/Output: [(-82 54 49 -79) -82]
Test Case: 454 | Input/Output: [(-80 -21 -57 10) -80]
Test Case: 455 | Input/Output: [(-39 -83 -44 12) -83]
Test Case: 456 | Input/Output: [(39 -81 45 -12) -81]
Test Case: 457 | Input/Output: [(-91 -86 88 -55) -91]
Test Case: 458 | Input/Output: [(-88 8 -8 -59) -88]
Test Case: 459 | Input/Output: [(-92 -26 -62 -65) -92]
Test Case: 460 | Input/Output: [(-84 6 -26 -74) -84]
Test Case: 461 | Input/Output: [(-89 -89 5 -67) -89]
Test Case: 462 | Input/Output: [(30 71 -88 79) -88]
Test Case: 463 | Input/Output: [(38 95 -36 -31) -36]
Test Case: 464 | Input/Output: [(-79 -96 -23 26) -96]
Test Case: 465 | Input/Output: [(15 -77 29 -86) -86]
Test Case: 466 | Input/Output: [(43 -83 -5 -30) -83]
Test Case: 467 | Input/Output: [(-22 -36 16 40) -36]
Test Case: 468 | Input/Output: [(-21 -92 22 -17) -92]
Test Case: 469 | Input/Output: [(-90 73 71 -85) -90]
Test Case: 470 | Input/Output: [(-76 -96 -19 88) -96]
Test Case: 471 | Input/Output: [(-19 -33 89 97) -33]
Test Case: 472 | Input/Output: [(42 43 100 93) 42]
Test Case: 473 | Input/Output: [(-56 -39 28 80) -56]
Test Case: 474 | Input/Output: [(30 -94 -18 -9) -94]
Test Case: 475 | Input/Output: [(46 96 -26 34) -26]
Test Case: 476 | Input/Output: [(-39 -55 92 -28) -55]
Test Case: 477 | Input/Output: [(35 -33 -80 69) -80]
Test Case: 478 | Input/Output: [(-78 85 94 -82) -82]
Test Case: 479 | Input/Output: [(-34 -64 84 5) -64]
Test Case: 480 | Input/Output: [(-44 69 -80 -69) -80]
Test Case: 481 | Input/Output: [(14 59 59 -91) -91]
Test Case: 482 | Input/Output: [(94 -94 11 39) -94]
Test Case: 483 | Input/Output: [(44 14 -2 84) -2]
Test Case: 484 | Input/Output: [(-32 -79 99 -16) -79]
Test Case: 485 | Input/Output: [(20 54 -82 48) -82]
Test Case: 486 | Input/Output: [(82 -11 -67 -22) -67]
Test Case: 487 | Input/Output: [(50 -26 66 16) -26]
Test Case: 488 | Input/Output: [(-31 29 13 -90) -90]
Test Case: 489 | Input/Output: [(-83 -32 -91 -36) -91]
Test Case: 490 | Input/Output: [(82 88 -43 58) -43]
Test Case: 491 | Input/Output: [(-64 56 35 -7) -64]
Test Case: 492 | Input/Output: [(83 48 -48 -98) -98]
Test Case: 493 | Input/Output: [(17 -37 52 56) -37]
Test Case: 494 | Input/Output: [(-37 -45 95 -19) -45]
Test Case: 495 | Input/Output: [(-79 93 -28 -50) -79]
Test Case: 496 | Input/Output: [(53 69 94 -81) -81]
Test Case: 497 | Input/Output: [(13 5 22 56) 5]
Test Case: 498 | Input/Output: [(-71 2 92 65) -71]
Test Case: 499 | Input/Output: [(11 -36 -100 89) -100]
Test Case: 500 | Input/Output: [(-76 73 -31 56) -76]
Test Case: 501 | Input/Output: [(-40 39 -29 95) -40]
Test Case: 502 | Input/Output: [(-16 -17 25 99) -17]
Test Case: 503 | Input/Output: [(5 -15 -68 6) -68]
Test Case: 504 | Input/Output: [(-22 -62 -71 61) -71]
Test Case: 505 | Input/Output: [(17 75 -64 -2) -64]
Test Case: 506 | Input/Output: [(-80 -37 -63 56) -80]
Test Case: 507 | Input/Output: [(-48 69 -79 -90) -90]
Test Case: 508 | Input/Output: [(-65 62 -28 81) -65]
Test Case: 509 | Input/Output: [(-78 -34 -23 -16) -78]
Test Case: 510 | Input/Output: [(52 27 12 2) 2]
Test Case: 511 | Input/Output: [(-58 -88 -99 -73) -99]
Test Case: 512 | Input/Output: [(97 -79 -68 -45) -79]
Test Case: 513 | Input/Output: [(-90 20 1 47) -90]
Test Case: 514 | Input/Output: [(-26 60 62 67) -26]
Test Case: 515 | Input/Output: [(-11 -77 44 -38) -77]
Test Case: 516 | Input/Output: [(69 -65 36 72) -65]
Test Case: 517 | Input/Output: [(27 74 18 68) 18]
Test Case: 518 | Input/Output: [(-27 43 -65 -94) -94]
Test Case: 519 | Input/Output: [(-30 -84 -55 -24) -84]
Test Case: 520 | Input/Output: [(65 95 -33 47) -33]
Test Case: 521 | Input/Output: [(41 -42 -7 -18) -42]
Test Case: 522 | Input/Output: [(-86 54 79 25) -86]
Test Case: 523 | Input/Output: [(-66 -48 -5 -76) -76]
Test Case: 524 | Input/Output: [(-86 -58 -84 -22) -86]
Test Case: 525 | Input/Output: [(92 -16 13 -38) -38]
Test Case: 526 | Input/Output: [(-25 77 68 1) -25]
Test Case: 527 | Input/Output: [(62 24 59 3) 3]
Test Case: 528 | Input/Output: [(-64 -77 51 -62) -77]
Test Case: 529 | Input/Output: [(18 3 -69 -98) -98]
Test Case: 530 | Input/Output: [(-86 1 -85 -31) -86]
Test Case: 531 | Input/Output: [(-69 -6 -96 7) -96]
Test Case: 532 | Input/Output: [(-48 16 -9 31) -48]
Test Case: 533 | Input/Output: [(93 -63 -68 -1) -68]
Test Case: 534 | Input/Output: [(93 -83 9 82) -83]
Test Case: 535 | Input/Output: [(-71 94 -40 -56) -71]
Test Case: 536 | Input/Output: [(57 -14 17 60) -14]
Test Case: 537 | Input/Output: [(-21 -66 -98 44) -98]
Test Case: 538 | Input/Output: [(-14 32 92 42) -14]
Test Case: 539 | Input/Output: [(-69 11 -67 55) -69]
Test Case: 540 | Input/Output: [(-41 37 -66 -31) -66]
Test Case: 541 | Input/Output: [(67 -26 -6 56) -26]
Test Case: 542 | Input/Output: [(-84 49 -54 -20) -84]
Test Case: 543 | Input/Output: [(-71 -23 29 -66) -71]
Test Case: 544 | Input/Output: [(-80 29 -80 -24) -80]
Test Case: 545 | Input/Output: [(-38 84 -92 -57) -92]
Test Case: 546 | Input/Output: [(-5 52 -96 -32) -96]
Test Case: 547 | Input/Output: [(-100 -10 -4 -7) -100]
Test Case: 548 | Input/Output: [(-69 36 -61 53) -69]
Test Case: 549 | Input/Output: [(32 -67 75 -80) -80]
Test Case: 550 | Input/Output: [(92 74 -84 88) -84]
Test Case: 551 | Input/Output: [(15 -5 -33 55) -33]
Test Case: 552 | Input/Output: [(91 -53 -7 -23) -53]
Test Case: 553 | Input/Output: [(4 58 18 85) 4]
Test Case: 554 | Input/Output: [(-97 36 -35 -6) -97]
Test Case: 555 | Input/Output: [(-30 -96 34 -5) -96]
Test Case: 556 | Input/Output: [(51 -9 -60 24) -60]
Test Case: 557 | Input/Output: [(-38 45 -25 87) -38]
Test Case: 558 | Input/Output: [(-3 -58 -39 19) -58]
Test Case: 559 | Input/Output: [(-61 61 85 -38) -61]
Test Case: 560 | Input/Output: [(-63 64 -76 -100) -100]
Test Case: 561 | Input/Output: [(-62 61 -82 54) -82]
Test Case: 562 | Input/Output: [(9 93 6 -16) -16]
Test Case: 563 | Input/Output: [(-87 -30 37 65) -87]
Test Case: 564 | Input/Output: [(-73 61 81 -63) -73]
Test Case: 565 | Input/Output: [(-33 92 47 -21) -33]
Test Case: 566 | Input/Output: [(-79 -83 83 31) -83]
Test Case: 567 | Input/Output: [(-95 17 2 -26) -95]
Test Case: 568 | Input/Output: [(-2 81 -63 -1) -63]
Test Case: 569 | Input/Output: [(83 -36 8 -73) -73]
Test Case: 570 | Input/Output: [(-62 33 41 71) -62]
Test Case: 571 | Input/Output: [(70 -31 -51 96) -51]
Test Case: 572 | Input/Output: [(-3 44 -89 93) -89]
Test Case: 573 | Input/Output: [(-100 53 -68 94) -100]
Test Case: 574 | Input/Output: [(-13 6 -17 -100) -100]
Test Case: 575 | Input/Output: [(44 77 5 -76) -76]
Test Case: 576 | Input/Output: [(51 66 69 -2) -2]
Test Case: 577 | Input/Output: [(71 -20 -20 -15) -20]
Test Case: 578 | Input/Output: [(4 -59 -21 52) -59]
Test Case: 579 | Input/Output: [(17 -51 -11 85) -51]
Test Case: 580 | Input/Output: [(17 47 12 9) 9]
Test Case: 581 | Input/Output: [(75 66 -49 12) -49]
Test Case: 582 | Input/Output: [(-45 -16 33 14) -45]
Test Case: 583 | Input/Output: [(82 -66 -15 -62) -66]
Test Case: 584 | Input/Output: [(65 -64 87 -67) -67]
Test Case: 585 | Input/Output: [(79 74 -2 -47) -47]
Test Case: 586 | Input/Output: [(84 -1 -3 -89) -89]
Test Case: 587 | Input/Output: [(-35 -69 42 -76) -76]
Test Case: 588 | Input/Output: [(25 71 52 12) 12]
Test Case: 589 | Input/Output: [(20 -67 2 37) -67]
Test Case: 590 | Input/Output: [(-56 73 12 -91) -91]
Test Case: 591 | Input/Output: [(90 -28 4 -66) -66]
Test Case: 592 | Input/Output: [(72 55 -58 -20) -58]
Test Case: 593 | Input/Output: [(-62 -23 89 72) -62]
Test Case: 594 | Input/Output: [(-1 -88 -45 -26) -88]
Test Case: 595 | Input/Output: [(-16 -65 -69 -11) -69]
Test Case: 596 | Input/Output: [(-89 0 -41 71) -89]
Test Case: 597 | Input/Output: [(2 -84 -81 -36) -84]
Test Case: 598 | Input/Output: [(-87 74 -15 8) -87]
Test Case: 599 | Input/Output: [(3 -20 43 24) -20]
Test Case: 600 | Input/Output: [(-32 98 -25 36) -32]
Test Case: 601 | Input/Output: [(-5 -72 -3 34) -72]
Test Case: 602 | Input/Output: [(89 0 -68 62) -68]
Test Case: 603 | Input/Output: [(24 -92 14 89) -92]
Test Case: 604 | Input/Output: [(34 85 42 -19) -19]
Test Case: 605 | Input/Output: [(-72 -58 -99 22) -99]
Test Case: 606 | Input/Output: [(-13 -96 41 -3) -96]
Test Case: 607 | Input/Output: [(-34 35 -37 10) -37]
Test Case: 608 | Input/Output: [(52 -57 -34 65) -57]
Test Case: 609 | Input/Output: [(87 59 4 -69) -69]
Test Case: 610 | Input/Output: [(-45 86 83 43) -45]
Test Case: 611 | Input/Output: [(45 -31 -18 27) -31]
Test Case: 612 | Input/Output: [(74 59 51 21) 21]
Test Case: 613 | Input/Output: [(-92 58 8 39) -92]
Test Case: 614 | Input/Output: [(-13 -5 -63 -91) -91]
Test Case: 615 | Input/Output: [(-61 -51 76 32) -61]
Test Case: 616 | Input/Output: [(60 -93 24 -5) -93]
Test Case: 617 | Input/Output: [(36 -95 52 28) -95]
Test Case: 618 | Input/Output: [(81 87 23 -96) -96]
Test Case: 619 | Input/Output: [(-15 81 43 54) -15]
Test Case: 620 | Input/Output: [(17 72 -17 1) -17]
Test Case: 621 | Input/Output: [(3 -39 36 -86) -86]
Test Case: 622 | Input/Output: [(5 29 -92 73) -92]
Test Case: 623 | Input/Output: [(-12 2 23 84) -12]
Test Case: 624 | Input/Output: [(-97 -28 40 -40) -97]
Test Case: 625 | Input/Output: [(-75 86 -13 -74) -75]
Test Case: 626 | Input/Output: [(38 83 11 -18) -18]
Test Case: 627 | Input/Output: [(-38 -73 -50 83) -73]
Test Case: 628 | Input/Output: [(-40 33 -59 43) -59]
Test Case: 629 | Input/Output: [(-89 38 -19 -3) -89]
Test Case: 630 | Input/Output: [(-96 71 17 -80) -96]
Test Case: 631 | Input/Output: [(27 -1 92 -90) -90]
Test Case: 632 | Input/Output: [(-23 13 -46 29) -46]
Test Case: 633 | Input/Output: [(-2 -59 -91 44) -91]
Test Case: 634 | Input/Output: [(100 -49 -3 -36) -49]
Test Case: 635 | Input/Output: [(-36 -36 44 -11) -36]
Test Case: 636 | Input/Output: [(18 77 -34 -68) -68]
Test Case: 637 | Input/Output: [(-75 9 49 -51) -75]
Test Case: 638 | Input/Output: [(-13 -45 57 65) -45]
Test Case: 639 | Input/Output: [(-12 54 66 55) -12]
Test Case: 640 | Input/Output: [(-40 51 -26 63) -40]
Test Case: 641 | Input/Output: [(-36 -70 -96 -13) -96]
Test Case: 642 | Input/Output: [(-52 98 -29 -99) -99]
Test Case: 643 | Input/Output: [(100 79 -97 90) -97]
Test Case: 644 | Input/Output: [(-81 69 -27 -40) -81]
Test Case: 645 | Input/Output: [(-28 50 -74 22) -74]
Test Case: 646 | Input/Output: [(50 -36 -36 39) -36]
Test Case: 647 | Input/Output: [(-58 19 58 -88) -88]
Test Case: 648 | Input/Output: [(78 -88 -68 52) -88]
Test Case: 649 | Input/Output: [(88 -89 -32 -57) -89]
Test Case: 650 | Input/Output: [(-66 32 24 -24) -66]
Test Case: 651 | Input/Output: [(-73 94 93 33) -73]
Test Case: 652 | Input/Output: [(-60 5 27 -30) -60]
Test Case: 653 | Input/Output: [(2 18 51 68) 2]
Test Case: 654 | Input/Output: [(48 22 63 42) 22]
Test Case: 655 | Input/Output: [(-41 -22 25 -57) -57]
Test Case: 656 | Input/Output: [(28 -23 -74 46) -74]
Test Case: 657 | Input/Output: [(-25 -2 -34 17) -34]
Test Case: 658 | Input/Output: [(-85 -21 55 80) -85]
Test Case: 659 | Input/Output: [(-27 -28 -78 44) -78]
Test Case: 660 | Input/Output: [(81 56 11 82) 11]
Test Case: 661 | Input/Output: [(87 19 -67 -16) -67]
Test Case: 662 | Input/Output: [(43 98 -48 71) -48]
Test Case: 663 | Input/Output: [(-91 -73 -84 26) -91]
Test Case: 664 | Input/Output: [(68 58 47 -59) -59]
Test Case: 665 | Input/Output: [(44 -66 33 -65) -66]
Test Case: 666 | Input/Output: [(-37 13 98 -21) -37]
Test Case: 667 | Input/Output: [(-80 -99 16 53) -99]
Test Case: 668 | Input/Output: [(31 -100 9 80) -100]
Test Case: 669 | Input/Output: [(-89 -74 80 11) -89]
Test Case: 670 | Input/Output: [(-39 -9 -26 -99) -99]
Test Case: 671 | Input/Output: [(-26 59 0 -42) -42]
Test Case: 672 | Input/Output: [(-81 -72 -67 84) -81]
Test Case: 673 | Input/Output: [(19 -70 58 -78) -78]
Test Case: 674 | Input/Output: [(-32 8 47 -78) -78]
Test Case: 675 | Input/Output: [(-21 50 39 -20) -21]
Test Case: 676 | Input/Output: [(18 -37 -68 -67) -68]
Test Case: 677 | Input/Output: [(-71 -69 -40 -92) -92]
Test Case: 678 | Input/Output: [(-13 58 19 20) -13]
Test Case: 679 | Input/Output: [(86 -38 29 -70) -70]
Test Case: 680 | Input/Output: [(-90 -18 64 38) -90]
Test Case: 681 | Input/Output: [(57 -42 -62 9) -62]
Test Case: 682 | Input/Output: [(-91 -38 -14 98) -91]
Test Case: 683 | Input/Output: [(-17 58 -1 12) -17]
Test Case: 684 | Input/Output: [(49 98 39 -26) -26]
Test Case: 685 | Input/Output: [(-65 35 -83 -18) -83]
Test Case: 686 | Input/Output: [(-72 27 -59 21) -72]
Test Case: 687 | Input/Output: [(2 30 0 -98) -98]
Test Case: 688 | Input/Output: [(-30 -32 -29 -6) -32]
Test Case: 689 | Input/Output: [(49 69 41 -89) -89]
Test Case: 690 | Input/Output: [(72 66 64 -76) -76]
Test Case: 691 | Input/Output: [(-83 99 -14 -75) -83]
Test Case: 692 | Input/Output: [(-43 63 -62 78) -62]
Test Case: 693 | Input/Output: [(90 28 75 6) 6]
Test Case: 694 | Input/Output: [(-78 -47 -17 -3) -78]
Test Case: 695 | Input/Output: [(51 -50 -82 33) -82]
Test Case: 696 | Input/Output: [(-85 14 40 27) -85]
Test Case: 697 | Input/Output: [(-17 -16 41 48) -17]
Test Case: 698 | Input/Output: [(83 97 -53 82) -53]
Test Case: 699 | Input/Output: [(-63 11 -13 60) -63]
Test Case: 700 | Input/Output: [(81 -71 98 49) -71]
Test Case: 701 | Input/Output: [(-84 48 -96 81) -96]
Test Case: 702 | Input/Output: [(-73 -80 52 -49) -80]
Test Case: 703 | Input/Output: [(28 -84 -37 -22) -84]
Test Case: 704 | Input/Output: [(51 46 -22 22) -22]
Test Case: 705 | Input/Output: [(75 -90 87 24) -90]
Test Case: 706 | Input/Output: [(28 -49 -32 78) -49]
Test Case: 707 | Input/Output: [(-29 -48 -58 65) -58]
Test Case: 708 | Input/Output: [(63 94 -14 89) -14]
Test Case: 709 | Input/Output: [(-79 -50 35 -41) -79]
Test Case: 710 | Input/Output: [(-70 64 14 -23) -70]
Test Case: 711 | Input/Output: [(68 22 -62 44) -62]
Test Case: 712 | Input/Output: [(98 58 86 86) 58]
Test Case: 713 | Input/Output: [(-55 -3 -1 86) -55]
Test Case: 714 | Input/Output: [(74 2 -71 -17) -71]
Test Case: 715 | Input/Output: [(30 41 4 -3) -3]
Test Case: 716 | Input/Output: [(-39 -67 50 59) -67]
Test Case: 717 | Input/Output: [(57 39 21 11) 11]
Test Case: 718 | Input/Output: [(-30 -99 76 -98) -99]
Test Case: 719 | Input/Output: [(-42 2 71 -39) -42]
Test Case: 720 | Input/Output: [(-44 15 89 -62) -62]
Test Case: 721 | Input/Output: [(3 57 -72 -59) -72]
Test Case: 722 | Input/Output: [(-17 -56 -74 -87) -87]
Test Case: 723 | Input/Output: [(92 69 72 -52) -52]
Test Case: 724 | Input/Output: [(-74 95 21 -85) -85]
Test Case: 725 | Input/Output: [(-20 -59 -11 -47) -59]
Test Case: 726 | Input/Output: [(-34 91 51 75) -34]
Test Case: 727 | Input/Output: [(93 21 -79 11) -79]
Test Case: 728 | Input/Output: [(-23 28 80 73) -23]
Test Case: 729 | Input/Output: [(-72 -16 60 -78) -78]
Test Case: 730 | Input/Output: [(61 7 56 -93) -93]
Test Case: 731 | Input/Output: [(38 48 -11 -48) -48]
Test Case: 732 | Input/Output: [(6 57 58 -58) -58]
Test Case: 733 | Input/Output: [(72 18 -39 11) -39]
Test Case: 734 | Input/Output: [(46 -53 -79 -29) -79]
Test Case: 735 | Input/Output: [(41 -47 38 60) -47]
Test Case: 736 | Input/Output: [(-45 -13 -12 -85) -85]
Test Case: 737 | Input/Output: [(18 -5 37 96) -5]
Test Case: 738 | Input/Output: [(7 -37 75 55) -37]
Test Case: 739 | Input/Output: [(-13 59 37 0) -13]
Test Case: 740 | Input/Output: [(5 88 -10 -93) -93]
Test Case: 741 | Input/Output: [(73 29 -68 -80) -80]
Test Case: 742 | Input/Output: [(-96 4 87 46) -96]
Test Case: 743 | Input/Output: [(-53 94 -100 -17) -100]
Test Case: 744 | Input/Output: [(25 -62 -6 -27) -62]
Test Case: 745 | Input/Output: [(64 1 2 54) 1]
Test Case: 746 | Input/Output: [(-48 -30 -47 63) -48]
Test Case: 747 | Input/Output: [(-90 -46 -8 -83) -90]
Test Case: 748 | Input/Output: [(-36 20 -69 -35) -69]
Test Case: 749 | Input/Output: [(24 -75 8 -63) -75]
Test Case: 750 | Input/Output: [(-79 4 -8 -15) -79]
Test Case: 751 | Input/Output: [(26 34 27 -42) -42]
Test Case: 752 | Input/Output: [(38 -90 -89 -9) -90]
Test Case: 753 | Input/Output: [(-91 20 -5 63) -91]
Test Case: 754 | Input/Output: [(-32 -99 -70 0) -99]
Test Case: 755 | Input/Output: [(-25 1 -24 -69) -69]
Test Case: 756 | Input/Output: [(-84 -53 -51 -59) -84]
Test Case: 757 | Input/Output: [(-4 -43 -36 35) -43]
Test Case: 758 | Input/Output: [(-54 49 -89 35) -89]
Test Case: 759 | Input/Output: [(-65 -69 100 61) -69]
Test Case: 760 | Input/Output: [(49 29 -9 -50) -50]
Test Case: 761 | Input/Output: [(99 87 62 94) 62]
Test Case: 762 | Input/Output: [(-41 -2 -44 -88) -88]
Test Case: 763 | Input/Output: [(77 73 -36 42) -36]
Test Case: 764 | Input/Output: [(55 -80 -2 98) -80]
Test Case: 765 | Input/Output: [(-97 73 -89 -75) -97]
Test Case: 766 | Input/Output: [(-72 -85 -76 39) -85]
Test Case: 767 | Input/Output: [(59 -88 -94 -88) -94]
Test Case: 768 | Input/Output: [(7 24 10 -95) -95]
Test Case: 769 | Input/Output: [(-24 -39 21 34) -39]
Test Case: 770 | Input/Output: [(-20 -84 -37 -1) -84]
Test Case: 771 | Input/Output: [(-52 -82 92 80) -82]
Test Case: 772 | Input/Output: [(-42 -92 24 93) -92]
Test Case: 773 | Input/Output: [(27 -32 14 -16) -32]
Test Case: 774 | Input/Output: [(-43 -100 72 17) -100]
Test Case: 775 | Input/Output: [(-5 40 13 -52) -52]
Test Case: 776 | Input/Output: [(-40 -48 96 36) -48]
Test Case: 777 | Input/Output: [(14 6 -74 -89) -89]
Test Case: 778 | Input/Output: [(-84 73 -3 75) -84]
Test Case: 779 | Input/Output: [(-51 55 -2 56) -51]
Test Case: 780 | Input/Output: [(96 -77 66 73) -77]
Test Case: 781 | Input/Output: [(46 -49 -4 -50) -50]
Test Case: 782 | Input/Output: [(55 56 28 66) 28]
Test Case: 783 | Input/Output: [(60 -73 64 -3) -73]
Test Case: 784 | Input/Output: [(-11 -96 -65 65) -96]
Test Case: 785 | Input/Output: [(-59 -90 -26 -54) -90]
Test Case: 786 | Input/Output: [(-93 72 55 -100) -100]
Test Case: 787 | Input/Output: [(-97 -80 26 -32) -97]
Test Case: 788 | Input/Output: [(-6 75 16 49) -6]
Test Case: 789 | Input/Output: [(-84 -32 10 -80) -84]
Test Case: 790 | Input/Output: [(27 -77 66 21) -77]
Test Case: 791 | Input/Output: [(95 -65 -14 -11) -65]
Test Case: 792 | Input/Output: [(-3 5 84 65) -3]
Test Case: 793 | Input/Output: [(-12 -43 -10 -88) -88]
Test Case: 794 | Input/Output: [(32 62 -54 41) -54]
Test Case: 795 | Input/Output: [(-60 -67 80 83) -67]
Test Case: 796 | Input/Output: [(-35 -58 35 -39) -58]
Test Case: 797 | Input/Output: [(-100 69 34 -52) -100]
Test Case: 798 | Input/Output: [(-1 35 28 61) -1]
Test Case: 799 | Input/Output: [(-87 -73 -61 -67) -87]
Test Case: 800 | Input/Output: [(59 -21 83 70) -21]
Test Case: 801 | Input/Output: [(72 -11 -47 0) -47]
Test Case: 802 | Input/Output: [(-7 24 66 -61) -61]
Test Case: 803 | Input/Output: [(33 70 53 77) 33]
Test Case: 804 | Input/Output: [(-34 3 17 -11) -34]
Test Case: 805 | Input/Output: [(48 25 -85 -62) -85]
Test Case: 806 | Input/Output: [(-15 -82 -99 -88) -99]
Test Case: 807 | Input/Output: [(20 -12 10 -64) -64]
Test Case: 808 | Input/Output: [(96 -38 -53 -37) -53]
Test Case: 809 | Input/Output: [(-83 68 24 -61) -83]
Test Case: 810 | Input/Output: [(-32 56 13 -100) -100]
Test Case: 811 | Input/Output: [(35 0 57 11) 0]
Test Case: 812 | Input/Output: [(-69 -86 -11 -90) -90]
Test Case: 813 | Input/Output: [(-52 89 -76 -52) -76]
Test Case: 814 | Input/Output: [(-43 -63 -98 52) -98]
Test Case: 815 | Input/Output: [(-46 -86 53 -77) -86]
Test Case: 816 | Input/Output: [(17 76 -58 -45) -58]
Test Case: 817 | Input/Output: [(46 -45 93 33) -45]
Test Case: 818 | Input/Output: [(-42 81 21 86) -42]
Test Case: 819 | Input/Output: [(-20 56 16 -19) -20]
Test Case: 820 | Input/Output: [(52 30 -27 75) -27]
Test Case: 821 | Input/Output: [(-52 49 -4 39) -52]
Test Case: 822 | Input/Output: [(90 87 -1 -45) -45]
Test Case: 823 | Input/Output: [(26 95 -43 32) -43]
Test Case: 824 | Input/Output: [(-32 81 47 -53) -53]
Test Case: 825 | Input/Output: [(76 39 74 -12) -12]
Test Case: 826 | Input/Output: [(37 11 74 76) 11]
Test Case: 827 | Input/Output: [(-1 -72 75 1) -72]
Test Case: 828 | Input/Output: [(46 40 83 57) 40]
Test Case: 829 | Input/Output: [(86 -98 -75 -66) -98]
Test Case: 830 | Input/Output: [(-93 -13 50 -9) -93]
Test Case: 831 | Input/Output: [(79 21 78 13) 13]
Test Case: 832 | Input/Output: [(91 97 0 -52) -52]
Test Case: 833 | Input/Output: [(61 -23 -64 12) -64]
Test Case: 834 | Input/Output: [(-77 -3 -31 -30) -77]
Test Case: 835 | Input/Output: [(-92 -64 80 -5) -92]
Test Case: 836 | Input/Output: [(-37 94 49 -1) -37]
Test Case: 837 | Input/Output: [(29 -6 30 18) -6]
Test Case: 838 | Input/Output: [(86 11 -12 58) -12]
Test Case: 839 | Input/Output: [(-45 -57 66 -35) -57]
Test Case: 840 | Input/Output: [(-66 -62 -39 8) -66]
Test Case: 841 | Input/Output: [(-34 -31 -90 -79) -90]
Test Case: 842 | Input/Output: [(7 75 34 -33) -33]
Test Case: 843 | Input/Output: [(-8 -79 37 88) -79]
Test Case: 844 | Input/Output: [(20 -43 8 52) -43]
Test Case: 845 | Input/Output: [(-56 30 66 -72) -72]
Test Case: 846 | Input/Output: [(54 13 -32 -67) -67]
Test Case: 847 | Input/Output: [(89 42 -18 -66) -66]
Test Case: 848 | Input/Output: [(-5 98 24 92) -5]
Test Case: 849 | Input/Output: [(-97 55 53 77) -97]
Test Case: 850 | Input/Output: [(75 79 -51 -93) -93]
Test Case: 851 | Input/Output: [(50 75 -92 -27) -92]
Test Case: 852 | Input/Output: [(-93 20 -53 -63) -93]
Test Case: 853 | Input/Output: [(100 5 95 -32) -32]
Test Case: 854 | Input/Output: [(73 -100 50 10) -100]
Test Case: 855 | Input/Output: [(33 -96 -32 56) -96]
Test Case: 856 | Input/Output: [(87 -84 70 -46) -84]
Test Case: 857 | Input/Output: [(56 -24 47 -94) -94]
Test Case: 858 | Input/Output: [(2 -4 26 -50) -50]
Test Case: 859 | Input/Output: [(-7 -76 53 57) -76]
Test Case: 860 | Input/Output: [(20 1 -40 -1) -40]
Test Case: 861 | Input/Output: [(-79 -37 -58 -65) -79]
Test Case: 862 | Input/Output: [(23 13 -91 -62) -91]
Test Case: 863 | Input/Output: [(-98 88 -21 -79) -98]
Test Case: 864 | Input/Output: [(7 -71 86 -6) -71]
Test Case: 865 | Input/Output: [(-72 39 7 -49) -72]
Test Case: 866 | Input/Output: [(53 -25 52 -43) -43]
Test Case: 867 | Input/Output: [(51 -43 50 -99) -99]
Test Case: 868 | Input/Output: [(-45 -10 -33 88) -45]
Test Case: 869 | Input/Output: [(-60 -87 47 44) -87]
Test Case: 870 | Input/Output: [(-19 -76 78 52) -76]
Test Case: 871 | Input/Output: [(-58 -85 -2 -91) -91]
Test Case: 872 | Input/Output: [(49 -71 57 58) -71]
Test Case: 873 | Input/Output: [(-77 -29 51 52) -77]
Test Case: 874 | Input/Output: [(-63 20 -83 94) -83]
Test Case: 875 | Input/Output: [(-66 -19 -37 79) -66]
Test Case: 876 | Input/Output: [(-95 -58 -36 44) -95]
Test Case: 877 | Input/Output: [(27 -42 -35 -21) -42]
Test Case: 878 | Input/Output: [(-42 -5 -10 -89) -89]
Test Case: 879 | Input/Output: [(30 -38 -4 -94) -94]
Test Case: 880 | Input/Output: [(36 96 -96 52) -96]
Test Case: 881 | Input/Output: [(86 5 -16 -72) -72]
Test Case: 882 | Input/Output: [(13 -39 -24 -2) -39]
Test Case: 883 | Input/Output: [(86 12 -70 -62) -70]
Test Case: 884 | Input/Output: [(42 -2 -34 -7) -34]
Test Case: 885 | Input/Output: [(28 0 -63 5) -63]
Test Case: 886 | Input/Output: [(-60 38 60 -36) -60]
Test Case: 887 | Input/Output: [(-72 26 60 7) -72]
Test Case: 888 | Input/Output: [(-14 95 68 -40) -40]
Test Case: 889 | Input/Output: [(46 -5 -80 -43) -80]
Test Case: 890 | Input/Output: [(-25 72 -89 -97) -97]
Test Case: 891 | Input/Output: [(-51 -29 -19 -81) -81]
Test Case: 892 | Input/Output: [(90 22 -55 -58) -58]
Test Case: 893 | Input/Output: [(-8 71 -22 -4) -22]
Test Case: 894 | Input/Output: [(-6 -63 -53 37) -63]
Test Case: 895 | Input/Output: [(-77 20 -45 54) -77]
Test Case: 896 | Input/Output: [(58 87 34 94) 34]
Test Case: 897 | Input/Output: [(90 93 -91 41) -91]
Test Case: 898 | Input/Output: [(-6 -97 -55 93) -97]
Test Case: 899 | Input/Output: [(-35 -95 -82 49) -95]
Test Case: 900 | Input/Output: [(24 93 -17 -56) -56]
Test Case: 901 | Input/Output: [(-52 -91 14 -60) -91]
Test Case: 902 | Input/Output: [(-34 -86 98 -90) -90]
Test Case: 903 | Input/Output: [(-55 -13 42 -79) -79]
Test Case: 904 | Input/Output: [(28 -90 49 -91) -91]
Test Case: 905 | Input/Output: [(-65 86 -29 -74) -74]
Test Case: 906 | Input/Output: [(-93 -64 -95 -26) -95]
Test Case: 907 | Input/Output: [(-38 31 8 43) -38]
Test Case: 908 | Input/Output: [(23 54 71 -60) -60]
Test Case: 909 | Input/Output: [(62 88 80 75) 62]
Test Case: 910 | Input/Output: [(32 -99 78 -81) -99]
Test Case: 911 | Input/Output: [(15 84 70 -27) -27]
Test Case: 912 | Input/Output: [(72 96 57 50) 50]
Test Case: 913 | Input/Output: [(-85 -44 -12 7) -85]
Test Case: 914 | Input/Output: [(44 -63 81 -18) -63]
Test Case: 915 | Input/Output: [(-60 -11 -35 81) -60]
Test Case: 916 | Input/Output: [(-26 -76 -27 27) -76]
Test Case: 917 | Input/Output: [(-53 -87 -6 77) -87]
Test Case: 918 | Input/Output: [(70 14 -71 -20) -71]
Test Case: 919 | Input/Output: [(35 26 63 -83) -83]
Test Case: 920 | Input/Output: [(-5 47 74 33) -5]
Test Case: 921 | Input/Output: [(63 98 -23 -81) -81]
Test Case: 922 | Input/Output: [(20 12 54 -11) -11]
Test Case: 923 | Input/Output: [(-90 -9 -48 -54) -90]
Test Case: 924 | Input/Output: [(-53 -59 6 -89) -89]
Test Case: 925 | Input/Output: [(-94 -12 76 -36) -94]
Test Case: 926 | Input/Output: [(-24 -80 -97 0) -97]
Test Case: 927 | Input/Output: [(1 27 50 94) 1]
Test Case: 928 | Input/Output: [(8 -66 -18 79) -66]
Test Case: 929 | Input/Output: [(61 78 -81 65) -81]
Test Case: 930 | Input/Output: [(-16 58 67 27) -16]
Test Case: 931 | Input/Output: [(32 -93 -38 -27) -93]
Test Case: 932 | Input/Output: [(-76 -6 -45 39) -76]
Test Case: 933 | Input/Output: [(79 33 -32 46) -32]
Test Case: 934 | Input/Output: [(95 -92 -72 84) -92]
Test Case: 935 | Input/Output: [(-15 -58 27 -9) -58]
Test Case: 936 | Input/Output: [(62 -94 22 18) -94]
Test Case: 937 | Input/Output: [(-64 50 -34 -33) -64]
Test Case: 938 | Input/Output: [(69 35 22 39) 22]
Test Case: 939 | Input/Output: [(-59 68 50 27) -59]
Test Case: 940 | Input/Output: [(27 -90 65 -38) -90]
Test Case: 941 | Input/Output: [(30 -62 -52 42) -62]
Test Case: 942 | Input/Output: [(9 -95 -87 34) -95]
Test Case: 943 | Input/Output: [(2 -99 -51 60) -99]
Test Case: 944 | Input/Output: [(14 7 59 -1) -1]
Test Case: 945 | Input/Output: [(57 32 8 -23) -23]
Test Case: 946 | Input/Output: [(-94 94 58 38) -94]
Test Case: 947 | Input/Output: [(-74 -83 23 11) -83]
Test Case: 948 | Input/Output: [(-47 -67 3 100) -67]
Test Case: 949 | Input/Output: [(-60 -87 -3 -64) -87]
Test Case: 950 | Input/Output: [(49 -75 93 13) -75]
Test Case: 951 | Input/Output: [(-17 39 89 -95) -95]
Test Case: 952 | Input/Output: [(30 -94 -98 -63) -98]
Test Case: 953 | Input/Output: [(-91 -59 -67 95) -91]
Test Case: 954 | Input/Output: [(-16 78 60 75) -16]
Test Case: 955 | Input/Output: [(-32 7 -43 43) -43]
Test Case: 956 | Input/Output: [(14 -64 -29 -25) -64]
Test Case: 957 | Input/Output: [(24 -92 -47 50) -92]
Test Case: 958 | Input/Output: [(64 8 7 -67) -67]
Test Case: 959 | Input/Output: [(-54 42 -18 -32) -54]
Test Case: 960 | Input/Output: [(-94 21 -49 -2) -94]
Test Case: 961 | Input/Output: [(-57 94 -23 21) -57]
Test Case: 962 | Input/Output: [(-35 94 28 54) -35]
Test Case: 963 | Input/Output: [(96 79 39 35) 35]
Test Case: 964 | Input/Output: [(-20 41 100 -76) -76]
Test Case: 965 | Input/Output: [(-4 59 36 12) -4]
Test Case: 966 | Input/Output: [(79 74 6 95) 6]
Test Case: 967 | Input/Output: [(-3 37 36 40) -3]
Test Case: 968 | Input/Output: [(-81 69 -97 -58) -97]
Test Case: 969 | Input/Output: [(62 48 34 40) 34]
Test Case: 970 | Input/Output: [(93 -66 6 85) -66]
Test Case: 971 | Input/Output: [(69 67 98 80) 67]
Test Case: 972 | Input/Output: [(-85 3 35 83) -85]
Test Case: 973 | Input/Output: [(4 -16 100 5) -16]
Test Case: 974 | Input/Output: [(-41 -55 45 7) -55]
Test Case: 975 | Input/Output: [(-20 -73 -82 -36) -82]
Test Case: 976 | Input/Output: [(60 100 -30 28) -30]
Test Case: 977 | Input/Output: [(10 13 44 14) 10]
Test Case: 978 | Input/Output: [(-38 -3 12 12) -38]
Test Case: 979 | Input/Output: [(19 -65 -76 49) -76]
Test Case: 980 | Input/Output: [(-16 51 -88 -24) -88]
Test Case: 981 | Input/Output: [(-23 20 -50 -50) -50]
Test Case: 982 | Input/Output: [(43 15 -79 -100) -100]
Test Case: 983 | Input/Output: [(19 -24 -53 -89) -89]
Test Case: 984 | Input/Output: [(-82 29 15 -20) -82]
Test Case: 985 | Input/Output: [(-74 -27 34 -43) -74]
Test Case: 986 | Input/Output: [(-34 -46 -24 -67) -67]
Test Case: 987 | Input/Output: [(-5 8 -50 37) -50]
Test Case: 988 | Input/Output: [(-66 28 76 -10) -66]
Test Case: 989 | Input/Output: [(-96 -90 50 71) -96]
Test Case: 990 | Input/Output: [(80 48 20 17) 17]
Test Case: 991 | Input/Output: [(-30 -38 45 -21) -38]
Test Case: 992 | Input/Output: [(-28 21 25 -69) -69]
Test Case: 993 | Input/Output: [(-64 -78 -40 -1) -78]
Test Case: 994 | Input/Output: [(-27 -71 -7 -72) -72]
Test Case: 995 | Input/Output: [(-3 -20 -43 43) -43]
Test Case: 996 | Input/Output: [(-55 -65 29 20) -65]
Test Case: 997 | Input/Output: [(100 -73 -84 75) -84]
Test Case: 998 | Input/Output: [(19 3 35 4) 3]
Test Case: 999 | Input/Output: [(0 -53 -98 -72) -98]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 61 -111 -48 -18 23 39 107 86 87 -22 -10 -32 111 77 -102 41
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-37 -37 -37 -56] -56] [[76 76 79 76] 76] [[-26 -26 -32 -26] -32] [[-71 -71 -82 -71] -82] [[14 14 14 61] 14] [[-24 26 26 26] -24] [[15 -29 15 15] -29] [[-100 18 -100 -100] -100] [[98 30 98 98] 30] [[-52 -52 -83 -52] -83] [(-28 -28 -28 -28) -28] [(-89 -89 -89 -89) -89] [(99 99 99 99) 99] [(92 92 92 92) 92] [(-49 -49 -49 -49) -49] [(41 37 80 52) 37] [(96 99 82 56) 56] [(81 26 66 21) 21] [(26 52 13 77) 13] [(99 73 54 60) 54] [(76 23 32 12) 12] [(29 52 37 52) 29] [(23 70 67 0) 0] [(41 27 33 50) 27] [(24 5 59 52) 5] [(46 100 14 51) 14] [(58 8 22 100) 8] [(54 72 99 55) 54] [(89 68 83 53) 53] [(80 65 17 47) 17] [(96 35 7 37) 7] [(94 40 87 82) 40] [(93 99 47 23) 23] [(62 100 23 97) 23] [(93 19 19 100) 19] [(-89 42 41 99) -89] [(9 -33 24 -40) -40] [(-26 -59 67 -2) -59] [(43 -84 -66 18) -84] [(-17 14 5 86) -17] [(58 -41 13 27) -41] [(-90 70 55 -40) -90] [(45 -34 64 -28) -34] [(10 -21 -88 -50) -88] [(8 2 -51 72) -51] [(-73 70 2 -31) -73] [(11 83 -99 -5) -99] [(-67 45 37 91) -67] [(-36 69 -57 -26) -57] [(-82 -16 -55 -7) -82] [(-53 9 10 -4) -53] [(-15 61 57 -87) -87] [(88 4 -1 13) -1] [(-37 87 -71 97) -71] [(-96 72 -65 -42) -96] [(19 -58 82 -11) -58] [(6 50 63 -91) -91] [(45 -38 -82 -71) -82] [(-39 39 48 -95) -95] [(-16 92 39 -34) -34] [(44 87 -39 81) -39] [(36 -97 82 -80) -97] [(-56 13 -37 -58) -58] [(98 -64 55 -88) -88] [(26 18 -88 -40) -88] [(12 -31 -30 86) -31] [(35 14 -55 -81) -81] [(-1 79 66 63) -1] [(-71 36 91 -92) -92] [(100 -35 79 -47) -47] [(-74 -14 77 18) -74] [(-97 8 85 -39) -97] [(31 -71 -58 -27) -71] [(62 12 31 71) 12] [(-60 91 89 -52) -60] [(28 -29 59 0) -29] [(-6 -11 74 -74) -74] [(16 35 -33 -6) -33] [(97 -37 81 73) -37] [(83 -29 -50 26) -50] [(64 -91 57 51) -91] [(72 21 -51 40) -51] [(69 75 5 98) 5] [(-97 -95 -41 -72) -97] [(-54 -49 -86 -32) -86] [(87 53 69 -86) -86] [(3 69 -8 -27) -27] [(76 -37 -2 20) -37] [(-90 -55 -31 -28) -90] [(-83 31 -28 45) -83] [(-100 78 49 -22) -100] [(23 32 10 37) 10] [(-34 87 67 -77) -77] [(-61 23 92 -57) -61] [(58 -4 67 47) -4])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -56                 | Program output: -37                
Correct output: 76                  | Program output: 76                 
Correct output: -32                 | Program output: -26                
Correct output: -82                 | Program output: -71                
Correct output: 14                  | Program output: 14                 
Correct output: -24                 | Program output: -24                
Correct output: -29                 | Program output: 15                 
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 98                 
Correct output: -83                 | Program output: -52                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 99                 
Correct output: 92                  | Program output: 92                 
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 41                 
Correct output: 56                  | Program output: 96                 
Correct output: 21                  | Program output: 81                 
Correct output: 13                  | Program output: 26                 
Correct output: 54                  | Program output: 99                 
Correct output: 12                  | Program output: 76                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 23                 
Correct output: 27                  | Program output: 41                 
Correct output: 5                   | Program output: 24                 
Correct output: 14                  | Program output: 46                 
Correct output: 8                   | Program output: 58                 
Correct output: 54                  | Program output: 54                 
Correct output: 53                  | Program output: 89                 
Correct output: 17                  | Program output: 80                 
Correct output: 7                   | Program output: 96                 
Correct output: 40                  | Program output: 94                 
Correct output: 23                  | Program output: 93                 
Correct output: 23                  | Program output: 62                 
Correct output: 19                  | Program output: 93                 
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: 9                  
Correct output: -59                 | Program output: -26                
Correct output: -84                 | Program output: 43                 
Correct output: -17                 | Program output: -17                
Correct output: -41                 | Program output: 58                 
Correct output: -90                 | Program output: -90                
Correct output: -34                 | Program output: 45                 
Correct output: -88                 | Program output: 10                 
Correct output: -51                 | Program output: 8                  
Correct output: -73                 | Program output: -73                
Correct output: -99                 | Program output: 11                 
Correct output: -67                 | Program output: -67                
Correct output: -57                 | Program output: -36                
Correct output: -82                 | Program output: -82                
Correct output: -53                 | Program output: -53                
Correct output: -87                 | Program output: -15                
Correct output: -1                  | Program output: 88                 
Correct output: -71                 | Program output: -37                
Correct output: -96                 | Program output: -96                
Correct output: -58                 | Program output: 19                 
Correct output: -91                 | Program output: 6                  
Correct output: -82                 | Program output: 45                 
Correct output: -95                 | Program output: -39                
Correct output: -34                 | Program output: -16                
Correct output: -39                 | Program output: 44                 
Correct output: -97                 | Program output: 36                 
Correct output: -58                 | Program output: -56                
Correct output: -88                 | Program output: 98                 
Correct output: -88                 | Program output: 26                 
Correct output: -31                 | Program output: 12                 
Correct output: -81                 | Program output: 35                 
Correct output: -1                  | Program output: -1                 
Correct output: -92                 | Program output: -71                
Correct output: -47                 | Program output: 100                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -71                 | Program output: 31                 
Correct output: 12                  | Program output: 62                 
Correct output: -60                 | Program output: -60                
Correct output: -29                 | Program output: 28                 
Correct output: -74                 | Program output: -6                 
Correct output: -33                 | Program output: 16                 
Correct output: -37                 | Program output: 97                 
Correct output: -50                 | Program output: 83                 
Correct output: -91                 | Program output: 64                 
Correct output: -51                 | Program output: 72                 
Correct output: 5                   | Program output: 69                 
Correct output: -97                 | Program output: -97                
Correct output: -86                 | Program output: -54                
Correct output: -86                 | Program output: 87                 
Correct output: -27                 | Program output: 3                  
Correct output: -37                 | Program output: 76                 
Correct output: -90                 | Program output: -90                
Correct output: -83                 | Program output: -83                
Correct output: -100                | Program output: -100               
Correct output: 10                  | Program output: 23                 
Correct output: -77                 | Program output: -34                
Correct output: -61                 | Program output: -61                
Correct output: -4                  | Program output: 58                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_empty} {:close 1, :instruction tagged_936} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_dec} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_s} {:close 1, :instruction integer_min} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction tagged_378} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_eq})
Lexicase best program: (integer_gt integer_flush boolean_yankdup in1 print_integer integer_yankdup exec_when (boolean_yank integer_dup_times boolean_empty tagged_936) exec_y_when_autoconstructing (integer_dec boolean_invert_second_then_and) boolean_or integer_lt exec_s (integer_min) (integer_sub integer_lt boolean_dup_times integer_fromboolean) (tagged_378) boolean_stackdepth exec_do*while () integer_eq)
Lexicase best errors: [0 0 0 0 0 1 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 33
Percent parens: 0.212
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_empty} {:close 1, :instruction tagged_936} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_dec} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_s} {:close 1, :instruction integer_min} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction tagged_378} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_eq})
Zero cases best program: (integer_gt integer_flush boolean_yankdup in1 print_integer integer_yankdup exec_when (boolean_yank integer_dup_times boolean_empty tagged_936) exec_y_when_autoconstructing (integer_dec boolean_invert_second_then_and) boolean_or integer_lt exec_s (integer_min) (integer_sub integer_lt boolean_dup_times integer_fromboolean) (tagged_378) boolean_stackdepth exec_do*while () integer_eq)
Zero cases best errors: [0 0 0 0 0 1 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 33
Percent parens: 0.212
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 4 4 4 4 4 4 3 4 4)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (4 4 4 4 4 4 4 3 4 4)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction 6} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_not} {:close 1, :instruction exec_rot} {:close 1, :instruction exec_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_pop} {:close 3, :instruction exec_s_when_autoconstructing} {:close 0, :instruction tagged_567} {:close 0, :instruction integer_gte} {:close 1, :instruction print_boolean} {:close 0, :instruction exec_s} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_while} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction tagged_70} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_434} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_dup_times} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_yank} {:close 2, :instruction integer_shove} {:close 1, :instruction boolean_eq} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_do*count})
Best program: (exec_dup_times (boolean_stackdepth boolean_or exec_eq integer_stackdepth boolean_yankdup boolean_pop) integer_dup_items boolean_empty integer_fromboolean 6 boolean_flush boolean_not exec_rot () (exec_yank) (boolean_xor) boolean_dup exec_noop integer_swap boolean_dup_items integer_dup exec_pop (exec_s_when_autoconstructing () () () tagged_567 integer_gte print_boolean) exec_s (exec_k_when_autoconstructing (boolean_flush exec_while (exec_shove (boolean_invert_first_then_and boolean_frominteger) integer_gte exec_do*count () integer_lte integer_min boolean_swap exec_eq) integer_yank tagged_70 exec_rot () (integer_sub in1 integer_swap integer_dup_times print_integer tag_exec_434 (integer_gt exec_do*count (boolean_flush) exec_yankdup integer_dup_items exec_pop (boolean_not exec_eq boolean_rot boolean_swap) exec_s_when_autoconstructing () (exec_empty integer_max) (exec_eq integer_dup_times) boolean_flush) exec_dup_items integer_yank) (integer_shove)) (boolean_eq) exec_k_when_autoconstructing (integer_shove exec_do*count ()) ()) () ())
Errors: [0 0 0 0 0 1 1 1 1 0]
Total: 4
Mean: 0.4
Genome size: 71
Size: 100
Percent parens: 0.290
--- Population Statistics ---
Average total errors in population: 9.961
Median total errors in population: 10
Error averages by case: (0.996 0.996 0.996 0.996 0.996 0.996 0.996 0.997 0.996 0.996)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 50.973
Average program size in population (points): 69.895
Average percent parens in population: 0.277
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.256
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 475307
--- Timings ---
Current time: 1559594052854 milliseconds
Total Time:           2.3 seconds
Initialization:       0.1 seconds,  4.8%
Reproduction:         0.8 seconds, 35.0%
Fitness Testing:      1.4 seconds, 60.3%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 0                  
Correct output: -56                 | Program output: -56                
Correct output: 76                  | Program output: 0                  
Correct output: -32                 | Program output: -32                
Correct output: -82                 | Program output: -82                
Correct output: 14                  | Program output: 0                  
Correct output: -24                 | Program output: 0                  
Correct output: -29                 | Program output: 0                  
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 0                  
Correct output: -83                 | Program output: -83                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 0                  
Correct output: 92                  | Program output: 0                  
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 0                  
Correct output: 56                  | Program output: 0                  
Correct output: 21                  | Program output: 0                  
Correct output: 13                  | Program output: 0                  
Correct output: 54                  | Program output: 0                  
Correct output: 12                  | Program output: 0                  
Correct output: 29                  | Program output: 0                  
Correct output: 0                   | Program output: 0                  
Correct output: 27                  | Program output: 0                  
Correct output: 5                   | Program output: 0                  
Correct output: 14                  | Program output: 0                  
Correct output: 8                   | Program output: 0                  
Correct output: 54                  | Program output: 0                  
Correct output: 53                  | Program output: 0                  
Correct output: 17                  | Program output: 0                  
Correct output: 7                   | Program output: 0                  
Correct output: 40                  | Program output: 0                  
Correct output: 23                  | Program output: 0                  
Correct output: 23                  | Program output: 0                  
Correct output: 19                  | Program output: 0                  
Correct output: -89                 | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -59                 | Program output: -2                 
Correct output: -84                 | Program output: -66                
Correct output: -17                 | Program output: 0                  
Correct output: -41                 | Program output: 0                  
Correct output: -90                 | Program output: -40                
Correct output: -34                 | Program output: -28                
Correct output: -88                 | Program output: -88                
Correct output: -51                 | Program output: -51                
Correct output: -73                 | Program output: -31                
Correct output: -99                 | Program output: -99                
Correct output: -67                 | Program output: 0                  
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -55                
Correct output: -53                 | Program output: -4                 
Correct output: -87                 | Program output: -87                
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -96                 | Program output: -65                
Correct output: -58                 | Program output: -11                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -82                
Correct output: -95                 | Program output: -95                
Correct output: -34                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -97                 | Program output: -80                
Correct output: -58                 | Program output: -58                
Correct output: -88                 | Program output: -88                
Correct output: -88                 | Program output: -88                
Correct output: -31                 | Program output: -30                
Correct output: -81                 | Program output: -81                
Correct output: -1                  | Program output: 0                  
Correct output: -92                 | Program output: -92                
Correct output: -47                 | Program output: -47                
Correct output: -74                 | Program output: 0                  
Correct output: -97                 | Program output: -39                
Correct output: -71                 | Program output: -58                
Correct output: 12                  | Program output: 0                  
Correct output: -60                 | Program output: -52                
Correct output: -29                 | Program output: 0                  
Correct output: -74                 | Program output: -74                
Correct output: -33                 | Program output: -33                
Correct output: -37                 | Program output: 0                  
Correct output: -50                 | Program output: -50                
Correct output: -91                 | Program output: 0                  
Correct output: -51                 | Program output: -51                
Correct output: 5                   | Program output: 0                  
Correct output: -97                 | Program output: -72                
Correct output: -86                 | Program output: -86                
Correct output: -86                 | Program output: -86                
Correct output: -27                 | Program output: -27                
Correct output: -37                 | Program output: -2                 
Correct output: -90                 | Program output: -31                
Correct output: -83                 | Program output: -28                
Correct output: -100                | Program output: -22                
Correct output: 10                  | Program output: 0                  
Correct output: -77                 | Program output: -77                
Correct output: -61                 | Program output: -57                
Correct output: -4                  | Program output: 0                  
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_div} {:close 0, :instruction in2} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction integer_div} {:close 0, :instruction exec_while} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_min} {:close 1, :instruction exec_do*while} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction exec_shove} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_yankdup} {:close 0, :instruction in4} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 0, :instruction print_boolean} {:close 1, :instruction integer_rot} {:close 1, :instruction tagged_844} {:close 0, :instruction in4} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_div} {:close 0, :instruction tagged_503} {:close 1, :instruction in2} {:close 1, :instruction tagged_691} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_when} {:close 0, :instruction in1} {:close 0, :instruction integer_dup_times} {:close 1, :instruction in4} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction -17} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_if} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction exec_flush} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 1, :instruction exec_if} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_noop} {:close 1, :instruction tag_integer_404} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup} {:close 0, :instruction tag_boolean_515} {:close 1, :instruction integer_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_dup_items} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_mod} {:close 0, :instruction print_newline} {:close 0, :instruction in4})
Lexicase best program: (integer_div in2 boolean_dup_times integer_div exec_while (exec_yankdup integer_dec integer_min exec_do*while () boolean_and exec_do*range (integer_stackdepth boolean_empty) boolean_not integer_dup_times integer_lte integer_lte boolean_pop boolean_dup_times) exec_shove () exec_shove () integer_gt boolean_dup_items integer_yankdup in4 integer_shove integer_mult boolean_pop print_integer print_boolean integer_rot tagged_844 in4 print_boolean boolean_frominteger integer_mult integer_div tagged_503 in2 tagged_691 integer_yankdup integer_lte exec_when (in1 integer_dup_times in4) integer_eq integer_empty boolean_swap boolean_frominteger -17 integer_yank exec_if () (boolean_dup_items exec_flush) boolean_dup_items boolean_and in4 exec_if () (integer_mult exec_noop tag_integer_404) integer_shove exec_do*range () boolean_pop integer_eq integer_yank integer_swap integer_lt exec_eq boolean_shove exec_swap (boolean_dup tag_boolean_515 integer_shove) (integer_gt exec_flush exec_noop exec_dup (integer_min exec_do*times (exec_noop integer_dup_items exec_rot () (integer_mod print_newline in4) ()))))
Lexicase best errors: [0 1 1 0 0 0 1 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 106
Percent parens: 0.179
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_div} {:close 0, :instruction in2} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction integer_div} {:close 0, :instruction exec_while} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_min} {:close 1, :instruction exec_do*while} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction exec_shove} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_yankdup} {:close 0, :instruction in4} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mult} {:close 1, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 0, :instruction print_boolean} {:close 1, :instruction integer_rot} {:close 1, :instruction tagged_844} {:close 0, :instruction in4} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_div} {:close 0, :instruction tagged_503} {:close 1, :instruction in2} {:close 1, :instruction tagged_691} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_when} {:close 0, :instruction in1} {:close 0, :instruction integer_dup_times} {:close 1, :instruction in4} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction -17} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_if} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction exec_flush} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 1, :instruction exec_if} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_noop} {:close 1, :instruction tag_integer_404} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup} {:close 0, :instruction tag_boolean_515} {:close 1, :instruction integer_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_min} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_dup_items} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_mod} {:close 0, :instruction print_newline} {:close 0, :instruction in4})
Zero cases best program: (integer_div in2 boolean_dup_times integer_div exec_while (exec_yankdup integer_dec integer_min exec_do*while () boolean_and exec_do*range (integer_stackdepth boolean_empty) boolean_not integer_dup_times integer_lte integer_lte boolean_pop boolean_dup_times) exec_shove () exec_shove () integer_gt boolean_dup_items integer_yankdup in4 integer_shove integer_mult boolean_pop print_integer print_boolean integer_rot tagged_844 in4 print_boolean boolean_frominteger integer_mult integer_div tagged_503 in2 tagged_691 integer_yankdup integer_lte exec_when (in1 integer_dup_times in4) integer_eq integer_empty boolean_swap boolean_frominteger -17 integer_yank exec_if () (boolean_dup_items exec_flush) boolean_dup_items boolean_and in4 exec_if () (integer_mult exec_noop tag_integer_404) integer_shove exec_do*range () boolean_pop integer_eq integer_yank integer_swap integer_lt exec_eq boolean_shove exec_swap (boolean_dup tag_boolean_515 integer_shove) (integer_gt exec_flush exec_noop exec_dup (integer_min exec_do*times (exec_noop integer_dup_items exec_rot () (integer_mod print_newline in4) ()))))
Zero cases best errors: [0 1 1 0 0 0 1 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 106
Percent parens: 0.179
--- Lexicase Population Statistics ---
Count of elite individuals by case: (11 76 98 349 537 13 312 113 83 312)
Population mean number of elite cases: 1.90
Count of perfect (error zero) individuals by case: (11 76 98 349 537 13 312 113 83 312)
Population mean number of perfect (error zero) cases: 1.90
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_if} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_when} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_div} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction integer_gt} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction 29})
Best program: (exec_do*range () in3 exec_do*count (exec_if (in4) (integer_min exec_when (integer_dup print_integer boolean_or) integer_swap integer_eq boolean_frominteger boolean_empty) integer_swap exec_y (exec_swap (integer_dup_items in1 boolean_dup integer_div) (exec_when ()) exec_swap (exec_if () (integer_inc boolean_eq boolean_yank boolean_dup_items print_integer integer_rot) exec_if (integer_gt integer_dup_items) (integer_min 29)) ())))
Errors: [0 1 1 1 0 0 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 35
Size: 51
Percent parens: 0.314
--- Population Statistics ---
Average total errors in population: 8.096
Median total errors in population: 7
Error averages by case: (0.989 0.924 0.902 0.651 0.463 0.987 0.688 0.887 0.917 0.688)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 57.478
Average program size in population (points): 75.915
Average percent parens in population: 0.243
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.006
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.227
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1240834
--- Timings ---
Current time: 1559594055578 milliseconds
Total Time:           4.7 seconds
Initialization:       0.1 seconds,  2.4%
Reproduction:         1.8 seconds, 37.7%
Fitness Testing:      2.3 seconds, 48.4%
Report:               0.5 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 443
Test mean error for best: 0.44300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -56                 | Program output: -56                
Correct output: 76                  | Program output: 76                 
Correct output: -32                 | Program output: -32                
Correct output: -82                 | Program output: -82                
Correct output: 14                  | Program output: 14                 
Correct output: -24                 | Program output: 26                 
Correct output: -29                 | Program output: 15                 
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 98                 
Correct output: -83                 | Program output: -83                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 99                 
Correct output: 92                  | Program output: 92                 
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 52                 
Correct output: 56                  | Program output: 56                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 13                 
Correct output: 54                  | Program output: 54                 
Correct output: 12                  | Program output: 12                 
Correct output: 29                  | Program output: 37                 
Correct output: 0                   | Program output: 0                  
Correct output: 27                  | Program output: 33                 
Correct output: 5                   | Program output: 52                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 22                 
Correct output: 54                  | Program output: 55                 
Correct output: 53                  | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 7                   | Program output: 7                  
Correct output: 40                  | Program output: 82                 
Correct output: 23                  | Program output: 23                 
Correct output: 23                  | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: -89                 | Program output: 41                 
Correct output: -40                 | Program output: -40                
Correct output: -59                 | Program output: -2                 
Correct output: -84                 | Program output: -66                
Correct output: -17                 | Program output: 5                  
Correct output: -41                 | Program output: 13                 
Correct output: -90                 | Program output: -40                
Correct output: -34                 | Program output: -28                
Correct output: -88                 | Program output: -88                
Correct output: -51                 | Program output: -51                
Correct output: -73                 | Program output: -31                
Correct output: -99                 | Program output: -99                
Correct output: -67                 | Program output: 37                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -55                
Correct output: -53                 | Program output: -4                 
Correct output: -87                 | Program output: -87                
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -96                 | Program output: -65                
Correct output: -58                 | Program output: -11                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -82                
Correct output: -95                 | Program output: -95                
Correct output: -34                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -97                 | Program output: -80                
Correct output: -58                 | Program output: -58                
Correct output: -88                 | Program output: -88                
Correct output: -88                 | Program output: -88                
Correct output: -31                 | Program output: -30                
Correct output: -81                 | Program output: -81                
Correct output: -1                  | Program output: 63                 
Correct output: -92                 | Program output: -92                
Correct output: -47                 | Program output: -47                
Correct output: -74                 | Program output: 18                 
Correct output: -97                 | Program output: -39                
Correct output: -71                 | Program output: -58                
Correct output: 12                  | Program output: 31                 
Correct output: -60                 | Program output: -52                
Correct output: -29                 | Program output: 0                  
Correct output: -74                 | Program output: -74                
Correct output: -33                 | Program output: -33                
Correct output: -37                 | Program output: 73                 
Correct output: -50                 | Program output: -50                
Correct output: -91                 | Program output: 51                 
Correct output: -51                 | Program output: -51                
Correct output: 5                   | Program output: 5                  
Correct output: -97                 | Program output: -72                
Correct output: -86                 | Program output: -86                
Correct output: -86                 | Program output: -86                
Correct output: -27                 | Program output: -27                
Correct output: -37                 | Program output: -2                 
Correct output: -90                 | Program output: -31                
Correct output: -83                 | Program output: -28                
Correct output: -100                | Program output: -22                
Correct output: 10                  | Program output: 10                 
Correct output: -77                 | Program output: -77                
Correct output: -61                 | Program output: -57                
Correct output: -4                  | Program output: 47                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_div} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction print_integer} {:close 0, :instruction exec_if} {:close 0, :instruction integer_gt} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction 29})
Lexicase best program: (exec_do*range () in3 exec_if (in4) (integer_min integer_dup print_integer boolean_or) integer_swap integer_eq boolean_frominteger boolean_empty integer_swap exec_y (exec_swap (integer_dup_items in1 boolean_dup integer_div) (exec_when ()) exec_swap (exec_if () (integer_inc boolean_eq boolean_yankdup boolean_yank exec_when (boolean_dup_items print_integer exec_if (integer_gt integer_dup_items) (integer_min 29)))) ()))
Lexicase best errors: [0 1 0 1 0 0 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 49
Percent parens: 0.306
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_div} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction print_integer} {:close 0, :instruction exec_if} {:close 0, :instruction integer_gt} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction 29})
Zero cases best program: (exec_do*range () in3 exec_if (in4) (integer_min integer_dup print_integer boolean_or) integer_swap integer_eq boolean_frominteger boolean_empty integer_swap exec_y (exec_swap (integer_dup_items in1 boolean_dup integer_div) (exec_when ()) exec_swap (exec_if () (integer_inc boolean_eq boolean_yankdup boolean_yank exec_when (boolean_dup_items print_integer exec_if (integer_gt integer_dup_items) (integer_min 29)))) ()))
Zero cases best errors: [0 1 0 1 0 0 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 49
Percent parens: 0.306
--- Lexicase Population Statistics ---
Count of elite individuals by case: (200 77 114 75 227 194 194 231 227 76)
Population mean number of elite cases: 1.62
Count of perfect (error zero) individuals by case: (200 77 114 75 227 194 194 231 227 76)
Population mean number of perfect (error zero) cases: 1.62
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_when} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_div} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_if} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction 29})
Best program: (exec_do*range () in3 exec_if (in4) (integer_min exec_when (integer_dup print_integer boolean_or) integer_swap integer_eq boolean_frominteger boolean_empty) integer_swap exec_y (exec_swap (integer_dup_items in1 boolean_dup integer_div) (exec_when ()) exec_swap (exec_if () (integer_inc boolean_eq boolean_yank boolean_dup_items print_integer exec_do*while (exec_if (integer_gt exec_empty integer_dup_items) (integer_min 29)))) ()))
Errors: [0 1 0 1 0 0 0 0 0 1]
Total: 3
Mean: 0.3
Genome size: 35
Size: 51
Percent parens: 0.314
--- Population Statistics ---
Average total errors in population: 8.385
Median total errors in population: 10
Error averages by case: (0.8 0.923 0.886 0.925 0.773 0.806 0.806 0.769 0.773 0.924)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 54.602
Average program size in population (points): 72.759
Average percent parens in population: 0.256
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.008
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.267
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 2070776
--- Timings ---
Current time: 1559594058404 milliseconds
Total Time:           7.5 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         2.9 seconds, 37.9%
Fitness Testing:      3.1 seconds, 41.1%
Report:               1.5 seconds, 19.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 420
Test mean error for best: 0.42000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -56                 | Program output: -56                
Correct output: 76                  | Program output: 76                 
Correct output: -32                 | Program output: -26                
Correct output: -82                 | Program output: -71                
Correct output: 14                  | Program output: 14                 
Correct output: -24                 | Program output: 26                 
Correct output: -29                 | Program output: -29                
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 30                 
Correct output: -83                 | Program output: -52                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 99                 
Correct output: 92                  | Program output: 92                 
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 37                 
Correct output: 56                  | Program output: 56                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 52                 
Correct output: 54                  | Program output: 60                 
Correct output: 12                  | Program output: 12                 
Correct output: 29                  | Program output: 52                 
Correct output: 0                   | Program output: 0                  
Correct output: 27                  | Program output: 27                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 51                 
Correct output: 8                   | Program output: 8                  
Correct output: 54                  | Program output: 55                 
Correct output: 53                  | Program output: 53                 
Correct output: 17                  | Program output: 47                 
Correct output: 7                   | Program output: 35                 
Correct output: 40                  | Program output: 40                 
Correct output: 23                  | Program output: 23                 
Correct output: 23                  | Program output: 97                 
Correct output: 19                  | Program output: 19                 
Correct output: -89                 | Program output: 42                 
Correct output: -40                 | Program output: -40                
Correct output: -59                 | Program output: -59                
Correct output: -84                 | Program output: -84                
Correct output: -17                 | Program output: 14                 
Correct output: -41                 | Program output: -41                
Correct output: -90                 | Program output: -40                
Correct output: -34                 | Program output: -34                
Correct output: -88                 | Program output: -50                
Correct output: -51                 | Program output: 2                  
Correct output: -73                 | Program output: -31                
Correct output: -99                 | Program output: -5                 
Correct output: -67                 | Program output: 45                 
Correct output: -57                 | Program output: -26                
Correct output: -82                 | Program output: -16                
Correct output: -53                 | Program output: -4                 
Correct output: -87                 | Program output: -87                
Correct output: -1                  | Program output: 4                  
Correct output: -71                 | Program output: 87                 
Correct output: -96                 | Program output: -42                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -71                
Correct output: -95                 | Program output: -95                
Correct output: -34                 | Program output: -34                
Correct output: -39                 | Program output: 81                 
Correct output: -97                 | Program output: -97                
Correct output: -58                 | Program output: -58                
Correct output: -88                 | Program output: -88                
Correct output: -88                 | Program output: -40                
Correct output: -31                 | Program output: -31                
Correct output: -81                 | Program output: -81                
Correct output: -1                  | Program output: 63                 
Correct output: -92                 | Program output: -92                
Correct output: -47                 | Program output: -47                
Correct output: -74                 | Program output: -14                
Correct output: -97                 | Program output: -39                
Correct output: -71                 | Program output: -71                
Correct output: 12                  | Program output: 12                 
Correct output: -60                 | Program output: -52                
Correct output: -29                 | Program output: -29                
Correct output: -74                 | Program output: -74                
Correct output: -33                 | Program output: -6                 
Correct output: -37                 | Program output: -37                
Correct output: -50                 | Program output: -29                
Correct output: -91                 | Program output: -91                
Correct output: -51                 | Program output: 21                 
Correct output: 5                   | Program output: 75                 
Correct output: -97                 | Program output: -95                
Correct output: -86                 | Program output: -49                
Correct output: -86                 | Program output: -86                
Correct output: -27                 | Program output: -27                
Correct output: -37                 | Program output: -37                
Correct output: -90                 | Program output: -55                
Correct output: -83                 | Program output: 31                 
Correct output: -100                | Program output: -22                
Correct output: 10                  | Program output: 32                 
Correct output: -77                 | Program output: -77                
Correct output: -61                 | Program output: -57                
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction 29})
Lexicase best program: (exec_do*range () in3 exec_if (in2) (in4) integer_min integer_dup print_integer boolean_or integer_swap integer_eq boolean_frominteger boolean_empty integer_swap exec_y_when_autoconstructing (exec_y (exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (boolean_invert_second_then_and integer_dup_items) (integer_min 29)))) ()))))
Lexicase best errors: [0 1 0 0 0 1 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 52
Percent parens: 0.327
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction 29})
Zero cases best program: (exec_do*range () in3 exec_if (in2) (in4) integer_min integer_dup print_integer boolean_or integer_swap integer_eq boolean_frominteger boolean_empty integer_swap exec_y_when_autoconstructing (exec_y (exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (boolean_invert_second_then_and integer_dup_items) (integer_min 29)))) ()))))
Zero cases best errors: [0 1 0 0 0 1 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 52
Percent parens: 0.327
--- Lexicase Population Statistics ---
Count of elite individuals by case: (448 413 139 139 141 2 449 143 542 401)
Population mean number of elite cases: 2.82
Count of perfect (error zero) individuals by case: (448 413 139 139 141 2 449 143 542 401)
Population mean number of perfect (error zero) cases: 2.82
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction 29})
Best program: (exec_do*range () in3 exec_if (in2) (in4) integer_min integer_dup print_integer boolean_or integer_swap integer_eq boolean_frominteger boolean_empty integer_swap exec_y_when_autoconstructing (exec_y (exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (boolean_invert_second_then_and integer_dup_items) (integer_min 29)))) ()))))
Errors: [0 1 0 0 0 1 0 0 0 1]
Total: 3
Mean: 0.3
Genome size: 35
Size: 52
Percent parens: 0.327
--- Population Statistics ---
Average total errors in population: 7.183
Median total errors in population: 7
Error averages by case: (0.552 0.587 0.861 0.861 0.859 0.998 0.551 0.857 0.458 0.599)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 43.531
Average program size in population (points): 61.022
Average percent parens in population: 0.291
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.007
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.214
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 3135684
--- Timings ---
Current time: 1559594061417 milliseconds
Total Time:          10.6 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         3.9 seconds, 37.4%
Fitness Testing:      4.1 seconds, 39.3%
Report:               2.3 seconds, 22.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 222
Test mean error for best: 0.22200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -56                 | Program output: -56                
Correct output: 76                  | Program output: 76                 
Correct output: -32                 | Program output: -32                
Correct output: -82                 | Program output: -82                
Correct output: 14                  | Program output: 14                 
Correct output: -24                 | Program output: 26                 
Correct output: -29                 | Program output: -29                
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 30                 
Correct output: -83                 | Program output: -83                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 99                 
Correct output: 92                  | Program output: 92                 
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 37                 
Correct output: 56                  | Program output: 56                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 13                 
Correct output: 54                  | Program output: 54                 
Correct output: 12                  | Program output: 12                 
Correct output: 29                  | Program output: 37                 
Correct output: 0                   | Program output: 0                  
Correct output: 27                  | Program output: 27                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 54                  | Program output: 55                 
Correct output: 53                  | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 7                   | Program output: 7                  
Correct output: 40                  | Program output: 40                 
Correct output: 23                  | Program output: 23                 
Correct output: 23                  | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: -89                 | Program output: 41                 
Correct output: -40                 | Program output: -40                
Correct output: -59                 | Program output: -59                
Correct output: -84                 | Program output: -84                
Correct output: -17                 | Program output: 5                  
Correct output: -41                 | Program output: -41                
Correct output: -90                 | Program output: -40                
Correct output: -34                 | Program output: -34                
Correct output: -88                 | Program output: -88                
Correct output: -51                 | Program output: -51                
Correct output: -73                 | Program output: -31                
Correct output: -99                 | Program output: -99                
Correct output: -67                 | Program output: 37                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -55                
Correct output: -53                 | Program output: -4                 
Correct output: -87                 | Program output: -87                
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -96                 | Program output: -65                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -82                
Correct output: -95                 | Program output: -95                
Correct output: -34                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -97                 | Program output: -97                
Correct output: -58                 | Program output: -58                
Correct output: -88                 | Program output: -88                
Correct output: -88                 | Program output: -88                
Correct output: -31                 | Program output: -31                
Correct output: -81                 | Program output: -81                
Correct output: -1                  | Program output: 63                 
Correct output: -92                 | Program output: -92                
Correct output: -47                 | Program output: -47                
Correct output: -74                 | Program output: -14                
Correct output: -97                 | Program output: -39                
Correct output: -71                 | Program output: -71                
Correct output: 12                  | Program output: 12                 
Correct output: -60                 | Program output: -52                
Correct output: -29                 | Program output: -29                
Correct output: -74                 | Program output: -74                
Correct output: -33                 | Program output: -33                
Correct output: -37                 | Program output: -37                
Correct output: -50                 | Program output: -50                
Correct output: -91                 | Program output: -91                
Correct output: -51                 | Program output: -51                
Correct output: 5                   | Program output: 5                  
Correct output: -97                 | Program output: -95                
Correct output: -86                 | Program output: -86                
Correct output: -86                 | Program output: -86                
Correct output: -27                 | Program output: -27                
Correct output: -37                 | Program output: -37                
Correct output: -90                 | Program output: -55                
Correct output: -83                 | Program output: -28                
Correct output: -100                | Program output: -22                
Correct output: 10                  | Program output: 10                 
Correct output: -77                 | Program output: -77                
Correct output: -61                 | Program output: -57                
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 0, :instruction 29})
Lexicase best program: (integer_flush exec_do*range () in3 exec_if (in2) (integer_min in4) integer_min integer_dup print_integer boolean_or integer_swap boolean_frominteger boolean_empty exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
Lexicase best errors: [0 1 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 53
Percent parens: 0.302
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 0, :instruction 29})
Zero cases best program: (integer_flush exec_do*range () in3 exec_if (in2) (integer_min in4) integer_min integer_dup print_integer boolean_or integer_swap boolean_frominteger boolean_empty exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
Zero cases best errors: [0 1 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 53
Percent parens: 0.302
--- Lexicase Population Statistics ---
Count of elite individuals by case: (230 88 230 750 567 363 590 590 738 758)
Population mean number of elite cases: 4.90
Count of perfect (error zero) individuals by case: (230 88 230 750 567 363 590 590 738 758)
Population mean number of perfect (error zero) cases: 4.90
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 0, :instruction 29})
Best program: (integer_flush exec_do*range () in3 exec_if (in2) (integer_min in4) integer_min integer_dup print_integer boolean_or integer_swap boolean_frominteger boolean_empty exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
Errors: [0 1 0 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 37
Size: 53
Percent parens: 0.302
--- Population Statistics ---
Average total errors in population: 5.096
Median total errors in population: 3
Error averages by case: (0.77 0.912 0.77 0.25 0.433 0.637 0.41 0.41 0.262 0.242)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 35.778
Average program size in population (points): 52.327
Average percent parens in population: 0.314
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 3
Genome diversity (% unique genomes):	 0.997
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.997
Total error diversity:				 0.01
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.142
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 4126281
--- Timings ---
Current time: 1559594063864 milliseconds
Total Time:          13.6 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.1 seconds, 37.4%
Fitness Testing:      5.2 seconds, 38.1%
Report:               3.2 seconds, 23.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 222
Test mean error for best: 0.22200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -56                 | Program output: -56                
Correct output: 76                  | Program output: 76                 
Correct output: -32                 | Program output: -32                
Correct output: -82                 | Program output: -82                
Correct output: 14                  | Program output: 14                 
Correct output: -24                 | Program output: 26                 
Correct output: -29                 | Program output: -29                
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 30                 
Correct output: -83                 | Program output: -83                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 99                 
Correct output: 92                  | Program output: 92                 
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 37                 
Correct output: 56                  | Program output: 56                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 13                 
Correct output: 54                  | Program output: 54                 
Correct output: 12                  | Program output: 12                 
Correct output: 29                  | Program output: 37                 
Correct output: 0                   | Program output: 0                  
Correct output: 27                  | Program output: 27                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 54                  | Program output: 55                 
Correct output: 53                  | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 7                   | Program output: 7                  
Correct output: 40                  | Program output: 40                 
Correct output: 23                  | Program output: 23                 
Correct output: 23                  | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: -89                 | Program output: 41                 
Correct output: -40                 | Program output: -40                
Correct output: -59                 | Program output: -59                
Correct output: -84                 | Program output: -84                
Correct output: -17                 | Program output: 5                  
Correct output: -41                 | Program output: -41                
Correct output: -90                 | Program output: -40                
Correct output: -34                 | Program output: -34                
Correct output: -88                 | Program output: -88                
Correct output: -51                 | Program output: -51                
Correct output: -73                 | Program output: -31                
Correct output: -99                 | Program output: -99                
Correct output: -67                 | Program output: 37                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -55                
Correct output: -53                 | Program output: -4                 
Correct output: -87                 | Program output: -87                
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -96                 | Program output: -65                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -82                
Correct output: -95                 | Program output: -95                
Correct output: -34                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -97                 | Program output: -97                
Correct output: -58                 | Program output: -58                
Correct output: -88                 | Program output: -88                
Correct output: -88                 | Program output: -88                
Correct output: -31                 | Program output: -31                
Correct output: -81                 | Program output: -81                
Correct output: -1                  | Program output: 63                 
Correct output: -92                 | Program output: -92                
Correct output: -47                 | Program output: -47                
Correct output: -74                 | Program output: -14                
Correct output: -97                 | Program output: -39                
Correct output: -71                 | Program output: -71                
Correct output: 12                  | Program output: 12                 
Correct output: -60                 | Program output: -52                
Correct output: -29                 | Program output: -29                
Correct output: -74                 | Program output: -74                
Correct output: -33                 | Program output: -33                
Correct output: -37                 | Program output: -37                
Correct output: -50                 | Program output: -50                
Correct output: -91                 | Program output: -91                
Correct output: -51                 | Program output: -51                
Correct output: 5                   | Program output: 5                  
Correct output: -97                 | Program output: -95                
Correct output: -86                 | Program output: -86                
Correct output: -86                 | Program output: -86                
Correct output: -27                 | Program output: -27                
Correct output: -37                 | Program output: -37                
Correct output: -90                 | Program output: -55                
Correct output: -83                 | Program output: -28                
Correct output: -100                | Program output: -22                
Correct output: 10                  | Program output: 10                 
Correct output: -77                 | Program output: -77                
Correct output: -61                 | Program output: -57                
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in2} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 1, :instruction boolean_dup})
Lexicase best program: (integer_flush exec_do*range () in3 exec_if (in2) (integer_min in4) integer_min integer_dup print_integer boolean_or integer_swap boolean_frominteger in2 boolean_empty exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (integer_mod exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (boolean_invert_first_then_and integer_eq integer_dup_items) (integer_min tag_integer_872) boolean_dup))) ()))
Lexicase best errors: [0 1 0 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 55
Percent parens: 0.291
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in2} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 1, :instruction boolean_dup})
Zero cases best program: (integer_flush exec_do*range () in3 exec_if (in2) (integer_min in4) integer_min integer_dup print_integer boolean_or integer_swap boolean_frominteger in2 boolean_empty exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (integer_mod exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (boolean_invert_first_then_and integer_eq integer_dup_items) (integer_min tag_integer_872) boolean_dup))) ()))
Zero cases best errors: [0 1 0 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 55
Percent parens: 0.291
--- Lexicase Population Statistics ---
Count of elite individuals by case: (667 134 440 497 561 445 646 647 135 777)
Population mean number of elite cases: 4.95
Count of perfect (error zero) individuals by case: (667 134 440 497 561 445 646 647 135 777)
Population mean number of perfect (error zero) cases: 4.95
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction boolean_empty} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min})
Best program: (integer_flush exec_do*range () in3 exec_if (in2) (integer_min in4) integer_min integer_dup print_integer boolean_or integer_swap boolean_frominteger boolean_empty exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (integer_eq exec_flush boolean_invert_second_then_and boolean_empty) (integer_dup_items) integer_min))) ()))
Errors: [0 1 0 0 0 0 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 37
Size: 53
Percent parens: 0.302
--- Population Statistics ---
Average total errors in population: 5.051
Median total errors in population: 4
Error averages by case: (0.333 0.866 0.56 0.503 0.439 0.555 0.354 0.353 0.865 0.223)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 37.197
Average program size in population (points): 53.306
Average percent parens in population: 0.301
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.009
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.133
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 4396006
--- Timings ---
Current time: 1559594065546 milliseconds
Total Time:          15.3 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.2 seconds, 40.7%
Fitness Testing:      5.5 seconds, 35.8%
Report:               3.5 seconds, 22.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 117
Test mean error for best: 0.11700
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 1
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 1
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 1
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 0
Test Case  223 | Error: 1
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 1
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 1
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 1
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 1
Test Case  288 | Error: 1
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 1
Test Case  306 | Error: 1
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 1
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 1
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 1
Test Case  359 | Error: 1
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 1
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 1
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 1
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 1
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 1
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 1
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 1
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 1
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -56                 | Program output: -56                
Correct output: 76                  | Program output: 76                 
Correct output: -32                 | Program output: -26                
Correct output: -82                 | Program output: -71                
Correct output: 14                  | Program output: 14                 
Correct output: -24                 | Program output: -24                
Correct output: -29                 | Program output: -29                
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 30                 
Correct output: -83                 | Program output: -52                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 99                 
Correct output: 92                  | Program output: 92                 
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 37                 
Correct output: 56                  | Program output: 82                 
Correct output: 21                  | Program output: 26                 
Correct output: 13                  | Program output: 13                 
Correct output: 54                  | Program output: 54                 
Correct output: 12                  | Program output: 23                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 0                  
Correct output: 27                  | Program output: 27                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 54                  | Program output: 54                 
Correct output: 53                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 7                   | Program output: 7                  
Correct output: 40                  | Program output: 40                 
Correct output: 23                  | Program output: 47                 
Correct output: 23                  | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: -40                
Correct output: -59                 | Program output: -59                
Correct output: -84                 | Program output: -84                
Correct output: -17                 | Program output: -17                
Correct output: -41                 | Program output: -41                
Correct output: -90                 | Program output: -90                
Correct output: -34                 | Program output: -34                
Correct output: -88                 | Program output: -50                
Correct output: -51                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -99                 | Program output: -5                 
Correct output: -67                 | Program output: -67                
Correct output: -57                 | Program output: -36                
Correct output: -82                 | Program output: -82                
Correct output: -53                 | Program output: -53                
Correct output: -87                 | Program output: -87                
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -96                 | Program output: -96                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -71                
Correct output: -95                 | Program output: -95                
Correct output: -34                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -97                 | Program output: -97                
Correct output: -58                 | Program output: -58                
Correct output: -88                 | Program output: -88                
Correct output: -88                 | Program output: -40                
Correct output: -31                 | Program output: -31                
Correct output: -81                 | Program output: -81                
Correct output: -1                  | Program output: -1                 
Correct output: -92                 | Program output: -92                
Correct output: -47                 | Program output: -47                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -71                 | Program output: -71                
Correct output: 12                  | Program output: 12                 
Correct output: -60                 | Program output: -60                
Correct output: -29                 | Program output: -29                
Correct output: -74                 | Program output: -74                
Correct output: -33                 | Program output: -6                 
Correct output: -37                 | Program output: -37                
Correct output: -50                 | Program output: -50                
Correct output: -91                 | Program output: -91                
Correct output: -51                 | Program output: -51                
Correct output: 5                   | Program output: 5                  
Correct output: -97                 | Program output: -97                
Correct output: -86                 | Program output: -54                
Correct output: -86                 | Program output: -86                
Correct output: -27                 | Program output: -27                
Correct output: -37                 | Program output: -37                
Correct output: -90                 | Program output: -90                
Correct output: -83                 | Program output: -83                
Correct output: -100                | Program output: -100               
Correct output: 10                  | Program output: 10                 
Correct output: -77                 | Program output: -77                
Correct output: -61                 | Program output: -61                
Correct output: -4                  | Program output: -4                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 0, :instruction 29})
Lexicase best program: (integer_flush exec_do*range () boolean_frominteger in3 exec_if (in2) (in1 integer_min boolean_dup_times integer_min in4) integer_min integer_dup print_integer boolean_or exec_shove (integer_swap boolean_frominteger exec_s_when_autoconstructing (exec_shove () integer_swap integer_dup_items exec_stackdepth in1 boolean_dup exec_when ()) (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer exec_do*count (integer_rot) exec_if (integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29)))) ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 59
Percent parens: 0.288
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_flush} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction in3} {:close 0, :instruction exec_if} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 2, :instruction exec_when} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 0, :instruction 29})
Zero cases best program: (integer_flush exec_do*range () boolean_frominteger in3 exec_if (in2) (in1 integer_min boolean_dup_times integer_min in4) integer_min integer_dup print_integer boolean_or exec_shove (integer_swap boolean_frominteger exec_s_when_autoconstructing (exec_shove () integer_swap integer_dup_items exec_stackdepth in1 boolean_dup exec_when ()) (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer exec_do*count (integer_rot) exec_if (integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29)))) ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 59
Percent parens: 0.288
--- Lexicase Population Statistics ---
Count of elite individuals by case: (672 667 674 672 503 388 809 382 332 503)
Population mean number of elite cases: 5.60
Count of perfect (error zero) individuals by case: (672 667 674 672 503 388 809 382 332 503)
Population mean number of perfect (error zero) cases: 5.60
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*range} {:close 1, :instruction in3} {:close 0, :instruction in2} {:close 2, :instruction in1} {:close 0, :instruction exec_if} {:close 0, :instruction integer_min} {:close 1, :instruction in4} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_empty} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 0, :instruction in1} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_pop} {:close 2, :instruction exec_when} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_min} {:close 1, :instruction tag_integer_872} {:close 0, :instruction 29})
Best program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 39
Size: 56
Percent parens: 0.304
--- Population Statistics ---
Average total errors in population: 4.398
Median total errors in population: 3
Error averages by case: (0.328 0.333 0.326 0.328 0.497 0.612 0.191 0.618 0.668 0.497)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 38.322
Average program size in population (points): 54.67
Average percent parens in population: 0.298
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.011
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.157
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 4682209
--- Timings ---
Current time: 1559594067437 milliseconds
Total Time:          17.0 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.3 seconds, 43.0%
Fitness Testing:      5.8 seconds, 34.2%
Report:               3.8 seconds, 22.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 6
Successful program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 56


Auto-simplifying with starting size: 56
step: 0
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 500
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 1000
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 1500
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 2000
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 2500
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 3000
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 3500
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 4000
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 4500
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

step: 5000
program: (exec_do*range () in3 in2 in1 exec_if (integer_min in4) (exec_do*times (integer_min print_integer boolean_or) integer_swap boolean_frominteger boolean_empty) exec_shove () integer_swap exec_swap (integer_dup_items in1 boolean_dup integer_pop exec_when ()) (exec_swap (exec_if () (exec_pop (boolean_eq boolean_yank exec_yankdup exec_dup_times (print_integer integer_rot) exec_if (in2 integer_eq boolean_invert_second_then_and integer_dup_items) (integer_min tag_integer_872) 29))) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 56

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 117
Test mean error for best: 0.11700
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 1
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 1
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 1
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 0
Test Case  223 | Error: 1
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 1
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 1
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 1
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 1
Test Case  288 | Error: 1
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 1
Test Case  306 | Error: 1
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 1
Test Case  314 | Error: 1
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 1
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 1
Test Case  359 | Error: 1
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 1
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 1
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 1
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 1
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 1
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 1
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 1
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 1
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -56                 | Program output: -56                
Correct output: 76                  | Program output: 76                 
Correct output: -32                 | Program output: -26                
Correct output: -82                 | Program output: -71                
Correct output: 14                  | Program output: 14                 
Correct output: -24                 | Program output: -24                
Correct output: -29                 | Program output: -29                
Correct output: -100                | Program output: -100               
Correct output: 30                  | Program output: 30                 
Correct output: -83                 | Program output: -52                
Correct output: -28                 | Program output: -28                
Correct output: -89                 | Program output: -89                
Correct output: 99                  | Program output: 99                 
Correct output: 92                  | Program output: 92                 
Correct output: -49                 | Program output: -49                
Correct output: 37                  | Program output: 37                 
Correct output: 56                  | Program output: 82                 
Correct output: 21                  | Program output: 26                 
Correct output: 13                  | Program output: 13                 
Correct output: 54                  | Program output: 54                 
Correct output: 12                  | Program output: 23                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 0                  
Correct output: 27                  | Program output: 27                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 54                  | Program output: 54                 
Correct output: 53                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 7                   | Program output: 7                  
Correct output: 40                  | Program output: 40                 
Correct output: 23                  | Program output: 47                 
Correct output: 23                  | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: -89                 | Program output: -89                
Correct output: -40                 | Program output: -40                
Correct output: -59                 | Program output: -59                
Correct output: -84                 | Program output: -84                
Correct output: -17                 | Program output: -17                
Correct output: -41                 | Program output: -41                
Correct output: -90                 | Program output: -90                
Correct output: -34                 | Program output: -34                
Correct output: -88                 | Program output: -50                
Correct output: -51                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -99                 | Program output: -5                 
Correct output: -67                 | Program output: -67                
Correct output: -57                 | Program output: -36                
Correct output: -82                 | Program output: -82                
Correct output: -53                 | Program output: -53                
Correct output: -87                 | Program output: -87                
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -96                 | Program output: -96                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -71                
Correct output: -95                 | Program output: -95                
Correct output: -34                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -97                 | Program output: -97                
Correct output: -58                 | Program output: -58                
Correct output: -88                 | Program output: -88                
Correct output: -88                 | Program output: -40                
Correct output: -31                 | Program output: -31                
Correct output: -81                 | Program output: -81                
Correct output: -1                  | Program output: -1                 
Correct output: -92                 | Program output: -92                
Correct output: -47                 | Program output: -47                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -71                 | Program output: -71                
Correct output: 12                  | Program output: 12                 
Correct output: -60                 | Program output: -60                
Correct output: -29                 | Program output: -29                
Correct output: -74                 | Program output: -74                
Correct output: -33                 | Program output: -6                 
Correct output: -37                 | Program output: -37                
Correct output: -50                 | Program output: -50                
Correct output: -91                 | Program output: -91                
Correct output: -51                 | Program output: -51                
Correct output: 5                   | Program output: 5                  
Correct output: -97                 | Program output: -97                
Correct output: -86                 | Program output: -54                
Correct output: -86                 | Program output: -86                
Correct output: -27                 | Program output: -27                
Correct output: -37                 | Program output: -37                
Correct output: -90                 | Program output: -90                
Correct output: -83                 | Program output: -83                
Correct output: -100                | Program output: -100               
Correct output: 10                  | Program output: 10                 
Correct output: -77                 | Program output: -77                
Correct output: -61                 | Program output: -61                
Correct output: -4                  | Program output: -4                 
;;******************************
