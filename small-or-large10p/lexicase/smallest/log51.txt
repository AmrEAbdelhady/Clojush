Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[73 -53 73 73] -53] [[-61 -61 84 -61] -61] [[59 59 -44 59] -44] [[-6 -50 -50 -50] -50] [[-4 -4 -4 -24] -24] [[11 -12 -12 -12] -12] [[-4 -4 -27 -4] -27] [[-10 -1 -10 -10] -10] [[-78 -78 1 -78] -78] [[35 35 35 -37] -37] [(71 71 71 71) 71] [(49 49 49 49) 49] [(-10 -10 -10 -10) -10] [(-27 -27 -27 -27) -27] [(-38 -38 -38 -38) -38] [(37 45 91 70) 37] [(7 67 28 21) 7] [(68 15 13 1) 1] [(34 3 71 49) 3] [(85 15 67 7) 7] [(88 32 96 99) 32] [(77 12 79 9) 9] [(32 59 59 8) 8] [(12 45 33 2) 2] [(78 54 50 0) 0] [(25 97 24 24) 24] [(37 72 23 11) 11] [(52 0 58 38) 0] [(63 94 1 57) 1] [(71 75 90 59) 59] [(75 65 42 97) 42] [(66 13 25 31) 13] [(44 65 30 95) 30] [(11 35 21 50) 11] [(32 39 77 0) 0] [(-75 33 43 97) -75] [(82 -94 84 -33) -94] [(-63 25 -17 73) -63] [(27 -52 -3 1) -52] [(-74 91 62 63) -74] [(10 -60 -43 -69) -69] [(-95 -55 -9 -22) -95] [(65 29 -7 43) -7] [(-10 57 -33 -93) -93] [(60 73 92 12) 12] [(-100 -57 -62 -14) -100] [(-8 60 90 -22) -22] [(-47 16 -50 -68) -68] [(-23 -76 44 66) -76] [(97 46 -10 42) -10] [(14 96 44 -69) -69] [(88 60 98 -43) -43] [(29 -54 -15 21) -54] [(-78 -78 21 92) -78] [(80 74 -63 85) -63] [(-52 46 7 -34) -52] [(18 56 -92 21) -92] [(47 -91 46 -93) -93] [(13 21 91 13) 13] [(-93 75 -13 -75) -93] [(-51 51 -76 -54) -76] [(53 -17 -30 21) -30] [(14 38 59 56) 14] [(-60 -80 -3 -44) -80] [(48 10 -98 -59) -98] [(30 -52 72 0) -52] [(-35 -60 -72 28) -72] [(-64 25 -82 68) -82] [(85 46 -90 38) -90] [(-71 -71 -39 33) -71] [(-5 78 23 46) -5] [(66 -65 51 -52) -65] [(1 -91 83 14) -91] [(34 -26 16 32) -26] [(-8 -61 51 -63) -63] [(30 11 96 7) 7] [(69 41 -99 19) -99] [(67 33 -90 -20) -90] [(-30 20 -56 97) -56] [(-95 -8 33 -78) -95] [(80 -73 34 -26) -73] [(68 -68 60 77) -68] [(-13 62 76 -72) -72] [(84 -95 -53 -69) -95] [(-50 39 -57 -49) -57] [(-65 2 79 -37) -65] [(-10 -98 96 64) -98] [(92 8 27 83) 8] [(-3 37 -47 -34) -47] [(83 83 94 -20) -20] [(76 66 -1 -91) -91] [(-76 -83 -42 11) -83] [(91 -95 -74 -82) -95] [(-16 57 -20 -10) -20] [(14 17 68 -46) -46])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[73 -53 73 73] -53]
Train Case:   6 | Input/Output: [[-61 -61 84 -61] -61]
Train Case:   7 | Input/Output: [[59 59 -44 59] -44]
Train Case:   8 | Input/Output: [[-6 -50 -50 -50] -50]
Train Case:   9 | Input/Output: [[-4 -4 -4 -24] -24]
Train Case:  10 | Input/Output: [[11 -12 -12 -12] -12]
Train Case:  11 | Input/Output: [[-4 -4 -27 -4] -27]
Train Case:  12 | Input/Output: [[-10 -1 -10 -10] -10]
Train Case:  13 | Input/Output: [[-78 -78 1 -78] -78]
Train Case:  14 | Input/Output: [[35 35 35 -37] -37]
Train Case:  15 | Input/Output: [(71 71 71 71) 71]
Train Case:  16 | Input/Output: [(49 49 49 49) 49]
Train Case:  17 | Input/Output: [(-10 -10 -10 -10) -10]
Train Case:  18 | Input/Output: [(-27 -27 -27 -27) -27]
Train Case:  19 | Input/Output: [(-38 -38 -38 -38) -38]
Train Case:  20 | Input/Output: [(37 45 91 70) 37]
Train Case:  21 | Input/Output: [(7 67 28 21) 7]
Train Case:  22 | Input/Output: [(68 15 13 1) 1]
Train Case:  23 | Input/Output: [(34 3 71 49) 3]
Train Case:  24 | Input/Output: [(85 15 67 7) 7]
Train Case:  25 | Input/Output: [(88 32 96 99) 32]
Train Case:  26 | Input/Output: [(77 12 79 9) 9]
Train Case:  27 | Input/Output: [(32 59 59 8) 8]
Train Case:  28 | Input/Output: [(12 45 33 2) 2]
Train Case:  29 | Input/Output: [(78 54 50 0) 0]
Train Case:  30 | Input/Output: [(25 97 24 24) 24]
Train Case:  31 | Input/Output: [(37 72 23 11) 11]
Train Case:  32 | Input/Output: [(52 0 58 38) 0]
Train Case:  33 | Input/Output: [(63 94 1 57) 1]
Train Case:  34 | Input/Output: [(71 75 90 59) 59]
Train Case:  35 | Input/Output: [(75 65 42 97) 42]
Train Case:  36 | Input/Output: [(66 13 25 31) 13]
Train Case:  37 | Input/Output: [(44 65 30 95) 30]
Train Case:  38 | Input/Output: [(11 35 21 50) 11]
Train Case:  39 | Input/Output: [(32 39 77 0) 0]
Train Case:  40 | Input/Output: [(-75 33 43 97) -75]
Train Case:  41 | Input/Output: [(82 -94 84 -33) -94]
Train Case:  42 | Input/Output: [(-63 25 -17 73) -63]
Train Case:  43 | Input/Output: [(27 -52 -3 1) -52]
Train Case:  44 | Input/Output: [(-74 91 62 63) -74]
Train Case:  45 | Input/Output: [(10 -60 -43 -69) -69]
Train Case:  46 | Input/Output: [(-95 -55 -9 -22) -95]
Train Case:  47 | Input/Output: [(65 29 -7 43) -7]
Train Case:  48 | Input/Output: [(-10 57 -33 -93) -93]
Train Case:  49 | Input/Output: [(60 73 92 12) 12]
Train Case:  50 | Input/Output: [(-100 -57 -62 -14) -100]
Train Case:  51 | Input/Output: [(-8 60 90 -22) -22]
Train Case:  52 | Input/Output: [(-47 16 -50 -68) -68]
Train Case:  53 | Input/Output: [(-23 -76 44 66) -76]
Train Case:  54 | Input/Output: [(97 46 -10 42) -10]
Train Case:  55 | Input/Output: [(14 96 44 -69) -69]
Train Case:  56 | Input/Output: [(88 60 98 -43) -43]
Train Case:  57 | Input/Output: [(29 -54 -15 21) -54]
Train Case:  58 | Input/Output: [(-78 -78 21 92) -78]
Train Case:  59 | Input/Output: [(80 74 -63 85) -63]
Train Case:  60 | Input/Output: [(-52 46 7 -34) -52]
Train Case:  61 | Input/Output: [(18 56 -92 21) -92]
Train Case:  62 | Input/Output: [(47 -91 46 -93) -93]
Train Case:  63 | Input/Output: [(13 21 91 13) 13]
Train Case:  64 | Input/Output: [(-93 75 -13 -75) -93]
Train Case:  65 | Input/Output: [(-51 51 -76 -54) -76]
Train Case:  66 | Input/Output: [(53 -17 -30 21) -30]
Train Case:  67 | Input/Output: [(14 38 59 56) 14]
Train Case:  68 | Input/Output: [(-60 -80 -3 -44) -80]
Train Case:  69 | Input/Output: [(48 10 -98 -59) -98]
Train Case:  70 | Input/Output: [(30 -52 72 0) -52]
Train Case:  71 | Input/Output: [(-35 -60 -72 28) -72]
Train Case:  72 | Input/Output: [(-64 25 -82 68) -82]
Train Case:  73 | Input/Output: [(85 46 -90 38) -90]
Train Case:  74 | Input/Output: [(-71 -71 -39 33) -71]
Train Case:  75 | Input/Output: [(-5 78 23 46) -5]
Train Case:  76 | Input/Output: [(66 -65 51 -52) -65]
Train Case:  77 | Input/Output: [(1 -91 83 14) -91]
Train Case:  78 | Input/Output: [(34 -26 16 32) -26]
Train Case:  79 | Input/Output: [(-8 -61 51 -63) -63]
Train Case:  80 | Input/Output: [(30 11 96 7) 7]
Train Case:  81 | Input/Output: [(69 41 -99 19) -99]
Train Case:  82 | Input/Output: [(67 33 -90 -20) -90]
Train Case:  83 | Input/Output: [(-30 20 -56 97) -56]
Train Case:  84 | Input/Output: [(-95 -8 33 -78) -95]
Train Case:  85 | Input/Output: [(80 -73 34 -26) -73]
Train Case:  86 | Input/Output: [(68 -68 60 77) -68]
Train Case:  87 | Input/Output: [(-13 62 76 -72) -72]
Train Case:  88 | Input/Output: [(84 -95 -53 -69) -95]
Train Case:  89 | Input/Output: [(-50 39 -57 -49) -57]
Train Case:  90 | Input/Output: [(-65 2 79 -37) -65]
Train Case:  91 | Input/Output: [(-10 -98 96 64) -98]
Train Case:  92 | Input/Output: [(92 8 27 83) 8]
Train Case:  93 | Input/Output: [(-3 37 -47 -34) -47]
Train Case:  94 | Input/Output: [(83 83 94 -20) -20]
Train Case:  95 | Input/Output: [(76 66 -1 -91) -91]
Train Case:  96 | Input/Output: [(-76 -83 -42 11) -83]
Train Case:  97 | Input/Output: [(91 -95 -74 -82) -95]
Train Case:  98 | Input/Output: [(-16 57 -20 -10) -20]
Train Case:  99 | Input/Output: [(14 17 68 -46) -46]
Test Case:   0 | Input/Output: [[-27 53 -27 -27] -27]
Test Case:   1 | Input/Output: [[35 35 62 35] 35]
Test Case:   2 | Input/Output: [[2 -12 -12 -12] -12]
Test Case:   3 | Input/Output: [[-20 -20 -20 77] -20]
Test Case:   4 | Input/Output: [[-26 -75 -26 -26] -75]
Test Case:   5 | Input/Output: [[-89 -90 -89 -89] -90]
Test Case:   6 | Input/Output: [[-27 -27 -58 -27] -58]
Test Case:   7 | Input/Output: [[-75 -75 -75 -28] -75]
Test Case:   8 | Input/Output: [[50 -86 -86 -86] -86]
Test Case:   9 | Input/Output: [[-73 -17 -73 -73] -73]
Test Case:  10 | Input/Output: [[-98 -74 -98 -98] -98]
Test Case:  11 | Input/Output: [[23 23 -71 23] -71]
Test Case:  12 | Input/Output: [[-14 46 -14 -14] -14]
Test Case:  13 | Input/Output: [[56 56 56 -29] -29]
Test Case:  14 | Input/Output: [[-81 41 41 41] -81]
Test Case:  15 | Input/Output: [[-38 -38 13 -38] -38]
Test Case:  16 | Input/Output: [[-75 -75 -75 11] -75]
Test Case:  17 | Input/Output: [[93 93 93 -79] -79]
Test Case:  18 | Input/Output: [[-90 -67 -67 -67] -90]
Test Case:  19 | Input/Output: [[-34 61 61 61] -34]
Test Case:  20 | Input/Output: [[3 3 48 3] 3]
Test Case:  21 | Input/Output: [[28 28 28 67] 28]
Test Case:  22 | Input/Output: [[-99 13 13 13] -99]
Test Case:  23 | Input/Output: [[93 40 93 93] 40]
Test Case:  24 | Input/Output: [[44 44 -3 44] -3]
Test Case:  25 | Input/Output: [[-29 -50 -50 -50] -50]
Test Case:  26 | Input/Output: [[-9 13 -9 -9] -9]
Test Case:  27 | Input/Output: [[84 84 84 55] 55]
Test Case:  28 | Input/Output: [[-76 39 39 39] -76]
Test Case:  29 | Input/Output: [[-65 -65 -65 54] -65]
Test Case:  30 | Input/Output: [[3 87 3 3] 3]
Test Case:  31 | Input/Output: [[52 52 52 15] 15]
Test Case:  32 | Input/Output: [[42 24 24 24] 24]
Test Case:  33 | Input/Output: [[34 88 34 34] 34]
Test Case:  34 | Input/Output: [[79 79 1 79] 1]
Test Case:  35 | Input/Output: [[-76 12 -76 -76] -76]
Test Case:  36 | Input/Output: [[-53 -61 -53 -53] -61]
Test Case:  37 | Input/Output: [[5 -63 5 5] -63]
Test Case:  38 | Input/Output: [[32 91 32 32] 32]
Test Case:  39 | Input/Output: [[16 16 -67 16] -67]
Test Case:  40 | Input/Output: [[-73 -73 -73 41] -73]
Test Case:  41 | Input/Output: [[-77 -77 17 -77] -77]
Test Case:  42 | Input/Output: [[92 55 92 92] 55]
Test Case:  43 | Input/Output: [[17 17 92 17] 17]
Test Case:  44 | Input/Output: [[-87 -76 -87 -87] -87]
Test Case:  45 | Input/Output: [[62 88 62 62] 62]
Test Case:  46 | Input/Output: [[-79 -79 94 -79] -79]
Test Case:  47 | Input/Output: [[12 -68 12 12] -68]
Test Case:  48 | Input/Output: [[-65 -7 -7 -7] -65]
Test Case:  49 | Input/Output: [[63 61 61 61] 61]
Test Case:  50 | Input/Output: [[17 33 33 33] 17]
Test Case:  51 | Input/Output: [[-60 -60 -60 -80] -80]
Test Case:  52 | Input/Output: [[-83 -83 -83 -83] -83]
Test Case:  53 | Input/Output: [[54 -39 54 54] -39]
Test Case:  54 | Input/Output: [[-8 50 50 50] -8]
Test Case:  55 | Input/Output: [[-53 51 51 51] -53]
Test Case:  56 | Input/Output: [[-60 42 -60 -60] -60]
Test Case:  57 | Input/Output: [[42 42 42 -87] -87]
Test Case:  58 | Input/Output: [[-73 -73 14 -73] -73]
Test Case:  59 | Input/Output: [[-22 38 -22 -22] -22]
Test Case:  60 | Input/Output: [[-46 -46 -46 48] -46]
Test Case:  61 | Input/Output: [[40 49 40 40] 40]
Test Case:  62 | Input/Output: [[40 -16 -16 -16] -16]
Test Case:  63 | Input/Output: [[-51 -51 -51 32] -51]
Test Case:  64 | Input/Output: [[53 -25 -25 -25] -25]
Test Case:  65 | Input/Output: [[-79 -85 -79 -79] -85]
Test Case:  66 | Input/Output: [[63 63 63 -17] -17]
Test Case:  67 | Input/Output: [[-49 -78 -49 -49] -78]
Test Case:  68 | Input/Output: [[35 35 35 -45] -45]
Test Case:  69 | Input/Output: [[48 48 -4 48] -4]
Test Case:  70 | Input/Output: [[-60 -60 -60 34] -60]
Test Case:  71 | Input/Output: [[58 -81 58 58] -81]
Test Case:  72 | Input/Output: [[91 -41 -41 -41] -41]
Test Case:  73 | Input/Output: [[93 78 93 93] 78]
Test Case:  74 | Input/Output: [[-47 -47 -72 -47] -72]
Test Case:  75 | Input/Output: [[38 -64 -64 -64] -64]
Test Case:  76 | Input/Output: [[16 16 16 16] 16]
Test Case:  77 | Input/Output: [[29 51 51 51] 29]
Test Case:  78 | Input/Output: [[97 -97 -97 -97] -97]
Test Case:  79 | Input/Output: [[-85 -67 -67 -67] -85]
Test Case:  80 | Input/Output: [[65 65 65 -53] -53]
Test Case:  81 | Input/Output: [[-34 -34 -34 -13] -34]
Test Case:  82 | Input/Output: [[87 6 87 87] 6]
Test Case:  83 | Input/Output: [[-49 24 24 24] -49]
Test Case:  84 | Input/Output: [[-20 -20 -20 -80] -80]
Test Case:  85 | Input/Output: [[11 0 0 0] 0]
Test Case:  86 | Input/Output: [[28 38 28 28] 28]
Test Case:  87 | Input/Output: [[-92 -22 -92 -92] -92]
Test Case:  88 | Input/Output: [[-7 85 85 85] -7]
Test Case:  89 | Input/Output: [[56 56 -19 56] -19]
Test Case:  90 | Input/Output: [[33 33 -9 33] -9]
Test Case:  91 | Input/Output: [[-92 1 1 1] -92]
Test Case:  92 | Input/Output: [[-16 65 -16 -16] -16]
Test Case:  93 | Input/Output: [[-32 -32 -32 26] -32]
Test Case:  94 | Input/Output: [[-13 99 99 99] -13]
Test Case:  95 | Input/Output: [[-21 -21 -21 77] -21]
Test Case:  96 | Input/Output: [[-99 -99 -99 -80] -99]
Test Case:  97 | Input/Output: [[-3 -12 -3 -3] -12]
Test Case:  98 | Input/Output: [[-2 -92 -92 -92] -92]
Test Case:  99 | Input/Output: [[8 8 5 8] 5]
Test Case: 100 | Input/Output: [(23 23 23 23) 23]
Test Case: 101 | Input/Output: [(81 81 81 81) 81]
Test Case: 102 | Input/Output: [(29 29 29 29) 29]
Test Case: 103 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 104 | Input/Output: [(46 46 46 46) 46]
Test Case: 105 | Input/Output: [(9 9 9 9) 9]
Test Case: 106 | Input/Output: [(90 90 90 90) 90]
Test Case: 107 | Input/Output: [(71 71 71 71) 71]
Test Case: 108 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 109 | Input/Output: [(51 51 51 51) 51]
Test Case: 110 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 111 | Input/Output: [(62 62 62 62) 62]
Test Case: 112 | Input/Output: [(77 77 77 77) 77]
Test Case: 113 | Input/Output: [(20 20 20 20) 20]
Test Case: 114 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 115 | Input/Output: [(62 62 62 62) 62]
Test Case: 116 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 117 | Input/Output: [(0 0 0 0) 0]
Test Case: 118 | Input/Output: [(27 27 27 27) 27]
Test Case: 119 | Input/Output: [(66 66 66 66) 66]
Test Case: 120 | Input/Output: [(62 62 62 62) 62]
Test Case: 121 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 122 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 123 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 124 | Input/Output: [(37 37 37 37) 37]
Test Case: 125 | Input/Output: [(84 84 84 84) 84]
Test Case: 126 | Input/Output: [(15 15 15 15) 15]
Test Case: 127 | Input/Output: [(97 97 97 97) 97]
Test Case: 128 | Input/Output: [(92 92 92 92) 92]
Test Case: 129 | Input/Output: [(67 67 67 67) 67]
Test Case: 130 | Input/Output: [(1 1 1 1) 1]
Test Case: 131 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 132 | Input/Output: [(6 6 6 6) 6]
Test Case: 133 | Input/Output: [(20 20 20 20) 20]
Test Case: 134 | Input/Output: [(65 65 65 65) 65]
Test Case: 135 | Input/Output: [(3 3 3 3) 3]
Test Case: 136 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 137 | Input/Output: [(73 73 73 73) 73]
Test Case: 138 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 139 | Input/Output: [(89 89 89 89) 89]
Test Case: 140 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 141 | Input/Output: [(28 28 28 28) 28]
Test Case: 142 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 143 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 144 | Input/Output: [(32 32 32 32) 32]
Test Case: 145 | Input/Output: [(-54 -54 -54 -54) -54]
Test Case: 146 | Input/Output: [(75 75 75 75) 75]
Test Case: 147 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 148 | Input/Output: [(57 57 57 57) 57]
Test Case: 149 | Input/Output: [(85 85 85 85) 85]
Test Case: 150 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 151 | Input/Output: [(100 100 100 100) 100]
Test Case: 152 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 153 | Input/Output: [(17 17 17 17) 17]
Test Case: 154 | Input/Output: [(56 56 56 56) 56]
Test Case: 155 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 156 | Input/Output: [(62 62 62 62) 62]
Test Case: 157 | Input/Output: [(68 68 68 68) 68]
Test Case: 158 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 159 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 160 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 161 | Input/Output: [(92 92 92 92) 92]
Test Case: 162 | Input/Output: [(41 41 41 41) 41]
Test Case: 163 | Input/Output: [(44 44 44 44) 44]
Test Case: 164 | Input/Output: [(30 30 30 30) 30]
Test Case: 165 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 166 | Input/Output: [(65 65 65 65) 65]
Test Case: 167 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 168 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 169 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 170 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 171 | Input/Output: [(95 95 95 95) 95]
Test Case: 172 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 173 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 174 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 175 | Input/Output: [(35 35 35 35) 35]
Test Case: 176 | Input/Output: [(37 37 37 37) 37]
Test Case: 177 | Input/Output: [(93 93 93 93) 93]
Test Case: 178 | Input/Output: [(74 74 74 74) 74]
Test Case: 179 | Input/Output: [(27 27 27 27) 27]
Test Case: 180 | Input/Output: [(36 36 36 36) 36]
Test Case: 181 | Input/Output: [(98 98 98 98) 98]
Test Case: 182 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 183 | Input/Output: [(94 94 94 94) 94]
Test Case: 184 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 185 | Input/Output: [(22 22 22 22) 22]
Test Case: 186 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 187 | Input/Output: [(84 84 84 84) 84]
Test Case: 188 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 189 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 190 | Input/Output: [(63 63 63 63) 63]
Test Case: 191 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 192 | Input/Output: [(4 4 4 4) 4]
Test Case: 193 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 194 | Input/Output: [(43 43 43 43) 43]
Test Case: 195 | Input/Output: [(99 99 99 99) 99]
Test Case: 196 | Input/Output: [(99 99 99 99) 99]
Test Case: 197 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 198 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 199 | Input/Output: [(57 57 57 57) 57]
Test Case: 200 | Input/Output: [(5 88 68 96) 5]
Test Case: 201 | Input/Output: [(33 74 93 0) 0]
Test Case: 202 | Input/Output: [(11 94 12 13) 11]
Test Case: 203 | Input/Output: [(24 89 87 99) 24]
Test Case: 204 | Input/Output: [(81 69 49 85) 49]
Test Case: 205 | Input/Output: [(84 46 66 31) 31]
Test Case: 206 | Input/Output: [(37 45 34 22) 22]
Test Case: 207 | Input/Output: [(10 58 47 54) 10]
Test Case: 208 | Input/Output: [(0 67 95 39) 0]
Test Case: 209 | Input/Output: [(72 87 11 60) 11]
Test Case: 210 | Input/Output: [(58 93 17 66) 17]
Test Case: 211 | Input/Output: [(58 85 19 61) 19]
Test Case: 212 | Input/Output: [(41 63 74 34) 34]
Test Case: 213 | Input/Output: [(4 0 28 34) 0]
Test Case: 214 | Input/Output: [(47 59 59 6) 6]
Test Case: 215 | Input/Output: [(44 70 26 22) 22]
Test Case: 216 | Input/Output: [(40 8 33 28) 8]
Test Case: 217 | Input/Output: [(26 81 71 33) 26]
Test Case: 218 | Input/Output: [(66 60 95 43) 43]
Test Case: 219 | Input/Output: [(44 11 9 81) 9]
Test Case: 220 | Input/Output: [(65 41 86 63) 41]
Test Case: 221 | Input/Output: [(58 99 100 68) 58]
Test Case: 222 | Input/Output: [(16 5 37 17) 5]
Test Case: 223 | Input/Output: [(99 18 10 31) 10]
Test Case: 224 | Input/Output: [(79 38 16 24) 16]
Test Case: 225 | Input/Output: [(81 82 9 72) 9]
Test Case: 226 | Input/Output: [(22 45 69 19) 19]
Test Case: 227 | Input/Output: [(29 13 52 58) 13]
Test Case: 228 | Input/Output: [(24 66 21 16) 16]
Test Case: 229 | Input/Output: [(87 80 21 79) 21]
Test Case: 230 | Input/Output: [(35 66 51 49) 35]
Test Case: 231 | Input/Output: [(38 74 73 61) 38]
Test Case: 232 | Input/Output: [(29 66 55 69) 29]
Test Case: 233 | Input/Output: [(3 90 52 75) 3]
Test Case: 234 | Input/Output: [(61 100 3 4) 3]
Test Case: 235 | Input/Output: [(67 30 6 54) 6]
Test Case: 236 | Input/Output: [(20 48 5 8) 5]
Test Case: 237 | Input/Output: [(99 80 78 64) 64]
Test Case: 238 | Input/Output: [(93 1 6 15) 1]
Test Case: 239 | Input/Output: [(97 32 53 14) 14]
Test Case: 240 | Input/Output: [(81 43 98 81) 43]
Test Case: 241 | Input/Output: [(30 34 37 71) 30]
Test Case: 242 | Input/Output: [(42 34 95 16) 16]
Test Case: 243 | Input/Output: [(34 60 0 39) 0]
Test Case: 244 | Input/Output: [(82 11 47 99) 11]
Test Case: 245 | Input/Output: [(12 69 48 72) 12]
Test Case: 246 | Input/Output: [(92 15 20 47) 15]
Test Case: 247 | Input/Output: [(32 69 16 52) 16]
Test Case: 248 | Input/Output: [(37 81 29 66) 29]
Test Case: 249 | Input/Output: [(93 13 52 92) 13]
Test Case: 250 | Input/Output: [(48 8 31 71) 8]
Test Case: 251 | Input/Output: [(43 72 62 51) 43]
Test Case: 252 | Input/Output: [(67 97 59 67) 59]
Test Case: 253 | Input/Output: [(97 72 65 36) 36]
Test Case: 254 | Input/Output: [(64 8 63 17) 8]
Test Case: 255 | Input/Output: [(19 71 83 97) 19]
Test Case: 256 | Input/Output: [(98 57 78 55) 55]
Test Case: 257 | Input/Output: [(43 24 88 30) 24]
Test Case: 258 | Input/Output: [(39 97 47 83) 39]
Test Case: 259 | Input/Output: [(18 86 79 77) 18]
Test Case: 260 | Input/Output: [(99 78 11 14) 11]
Test Case: 261 | Input/Output: [(30 23 24 70) 23]
Test Case: 262 | Input/Output: [(40 32 19 31) 19]
Test Case: 263 | Input/Output: [(6 86 27 7) 6]
Test Case: 264 | Input/Output: [(54 51 85 52) 51]
Test Case: 265 | Input/Output: [(38 6 8 28) 6]
Test Case: 266 | Input/Output: [(28 29 50 45) 28]
Test Case: 267 | Input/Output: [(23 81 70 93) 23]
Test Case: 268 | Input/Output: [(72 14 67 93) 14]
Test Case: 269 | Input/Output: [(81 85 27 24) 24]
Test Case: 270 | Input/Output: [(22 74 72 55) 22]
Test Case: 271 | Input/Output: [(44 21 32 9) 9]
Test Case: 272 | Input/Output: [(26 22 37 50) 22]
Test Case: 273 | Input/Output: [(45 81 35 49) 35]
Test Case: 274 | Input/Output: [(75 48 91 72) 48]
Test Case: 275 | Input/Output: [(41 86 54 62) 41]
Test Case: 276 | Input/Output: [(57 99 70 54) 54]
Test Case: 277 | Input/Output: [(66 34 8 81) 8]
Test Case: 278 | Input/Output: [(88 44 78 10) 10]
Test Case: 279 | Input/Output: [(56 3 19 82) 3]
Test Case: 280 | Input/Output: [(4 15 92 59) 4]
Test Case: 281 | Input/Output: [(2 12 33 34) 2]
Test Case: 282 | Input/Output: [(55 56 67 45) 45]
Test Case: 283 | Input/Output: [(23 84 59 53) 23]
Test Case: 284 | Input/Output: [(34 3 6 75) 3]
Test Case: 285 | Input/Output: [(77 98 43 61) 43]
Test Case: 286 | Input/Output: [(58 93 26 6) 6]
Test Case: 287 | Input/Output: [(81 45 81 37) 37]
Test Case: 288 | Input/Output: [(47 76 63 33) 33]
Test Case: 289 | Input/Output: [(21 29 2 64) 2]
Test Case: 290 | Input/Output: [(11 68 3 60) 3]
Test Case: 291 | Input/Output: [(47 41 9 6) 6]
Test Case: 292 | Input/Output: [(40 18 95 51) 18]
Test Case: 293 | Input/Output: [(76 9 11 12) 9]
Test Case: 294 | Input/Output: [(70 53 54 19) 19]
Test Case: 295 | Input/Output: [(36 54 76 44) 36]
Test Case: 296 | Input/Output: [(6 16 28 96) 6]
Test Case: 297 | Input/Output: [(75 15 33 27) 15]
Test Case: 298 | Input/Output: [(13 14 57 14) 13]
Test Case: 299 | Input/Output: [(75 6 74 20) 6]
Test Case: 300 | Input/Output: [(44 30 47 86) 30]
Test Case: 301 | Input/Output: [(33 32 6 96) 6]
Test Case: 302 | Input/Output: [(59 90 0 61) 0]
Test Case: 303 | Input/Output: [(85 9 23 95) 9]
Test Case: 304 | Input/Output: [(19 26 36 30) 19]
Test Case: 305 | Input/Output: [(48 66 54 89) 48]
Test Case: 306 | Input/Output: [(3 95 69 20) 3]
Test Case: 307 | Input/Output: [(80 1 21 73) 1]
Test Case: 308 | Input/Output: [(11 76 11 95) 11]
Test Case: 309 | Input/Output: [(99 96 21 23) 21]
Test Case: 310 | Input/Output: [(18 30 8 98) 8]
Test Case: 311 | Input/Output: [(97 98 52 81) 52]
Test Case: 312 | Input/Output: [(56 7 27 100) 7]
Test Case: 313 | Input/Output: [(17 84 7 73) 7]
Test Case: 314 | Input/Output: [(99 85 50 36) 36]
Test Case: 315 | Input/Output: [(8 13 62 56) 8]
Test Case: 316 | Input/Output: [(49 38 47 74) 38]
Test Case: 317 | Input/Output: [(7 53 88 37) 7]
Test Case: 318 | Input/Output: [(91 55 50 81) 50]
Test Case: 319 | Input/Output: [(80 60 2 21) 2]
Test Case: 320 | Input/Output: [(56 73 59 86) 56]
Test Case: 321 | Input/Output: [(22 18 77 78) 18]
Test Case: 322 | Input/Output: [(19 63 31 77) 19]
Test Case: 323 | Input/Output: [(53 45 76 77) 45]
Test Case: 324 | Input/Output: [(35 86 64 16) 16]
Test Case: 325 | Input/Output: [(40 33 98 19) 19]
Test Case: 326 | Input/Output: [(40 40 64 11) 11]
Test Case: 327 | Input/Output: [(76 3 99 26) 3]
Test Case: 328 | Input/Output: [(66 35 54 71) 35]
Test Case: 329 | Input/Output: [(11 77 44 63) 11]
Test Case: 330 | Input/Output: [(91 72 45 49) 45]
Test Case: 331 | Input/Output: [(1 73 61 63) 1]
Test Case: 332 | Input/Output: [(10 98 88 32) 10]
Test Case: 333 | Input/Output: [(87 97 0 84) 0]
Test Case: 334 | Input/Output: [(3 34 44 74) 3]
Test Case: 335 | Input/Output: [(88 26 96 39) 26]
Test Case: 336 | Input/Output: [(14 26 91 65) 14]
Test Case: 337 | Input/Output: [(41 65 28 53) 28]
Test Case: 338 | Input/Output: [(16 5 75 16) 5]
Test Case: 339 | Input/Output: [(39 76 31 61) 31]
Test Case: 340 | Input/Output: [(77 2 100 79) 2]
Test Case: 341 | Input/Output: [(93 19 88 32) 19]
Test Case: 342 | Input/Output: [(78 73 49 43) 43]
Test Case: 343 | Input/Output: [(93 14 30 54) 14]
Test Case: 344 | Input/Output: [(91 62 12 45) 12]
Test Case: 345 | Input/Output: [(35 86 33 90) 33]
Test Case: 346 | Input/Output: [(56 22 4 54) 4]
Test Case: 347 | Input/Output: [(5 82 82 29) 5]
Test Case: 348 | Input/Output: [(71 89 98 30) 30]
Test Case: 349 | Input/Output: [(79 98 37 87) 37]
Test Case: 350 | Input/Output: [(79 34 24 37) 24]
Test Case: 351 | Input/Output: [(89 5 67 18) 5]
Test Case: 352 | Input/Output: [(99 96 3 24) 3]
Test Case: 353 | Input/Output: [(28 95 31 33) 28]
Test Case: 354 | Input/Output: [(21 12 87 19) 12]
Test Case: 355 | Input/Output: [(95 74 100 89) 74]
Test Case: 356 | Input/Output: [(60 81 9 97) 9]
Test Case: 357 | Input/Output: [(67 43 12 83) 12]
Test Case: 358 | Input/Output: [(83 71 53 19) 19]
Test Case: 359 | Input/Output: [(17 98 32 18) 17]
Test Case: 360 | Input/Output: [(22 55 37 52) 22]
Test Case: 361 | Input/Output: [(8 60 57 96) 8]
Test Case: 362 | Input/Output: [(19 3 34 23) 3]
Test Case: 363 | Input/Output: [(42 82 90 12) 12]
Test Case: 364 | Input/Output: [(6 98 86 91) 6]
Test Case: 365 | Input/Output: [(68 60 70 26) 26]
Test Case: 366 | Input/Output: [(58 22 90 32) 22]
Test Case: 367 | Input/Output: [(73 71 84 78) 71]
Test Case: 368 | Input/Output: [(53 68 8 14) 8]
Test Case: 369 | Input/Output: [(50 72 55 32) 32]
Test Case: 370 | Input/Output: [(12 57 94 46) 12]
Test Case: 371 | Input/Output: [(93 29 45 24) 24]
Test Case: 372 | Input/Output: [(21 39 28 89) 21]
Test Case: 373 | Input/Output: [(4 25 78 72) 4]
Test Case: 374 | Input/Output: [(77 62 94 71) 62]
Test Case: 375 | Input/Output: [(41 57 85 26) 26]
Test Case: 376 | Input/Output: [(44 63 38 57) 38]
Test Case: 377 | Input/Output: [(39 42 25 50) 25]
Test Case: 378 | Input/Output: [(22 26 25 90) 22]
Test Case: 379 | Input/Output: [(48 2 14 57) 2]
Test Case: 380 | Input/Output: [(41 97 43 35) 35]
Test Case: 381 | Input/Output: [(74 6 42 34) 6]
Test Case: 382 | Input/Output: [(13 89 3 59) 3]
Test Case: 383 | Input/Output: [(18 27 50 97) 18]
Test Case: 384 | Input/Output: [(90 57 68 36) 36]
Test Case: 385 | Input/Output: [(47 46 80 100) 46]
Test Case: 386 | Input/Output: [(99 17 0 8) 0]
Test Case: 387 | Input/Output: [(53 81 38 71) 38]
Test Case: 388 | Input/Output: [(45 67 35 92) 35]
Test Case: 389 | Input/Output: [(36 98 60 90) 36]
Test Case: 390 | Input/Output: [(30 48 88 94) 30]
Test Case: 391 | Input/Output: [(6 96 23 36) 6]
Test Case: 392 | Input/Output: [(63 20 62 27) 20]
Test Case: 393 | Input/Output: [(73 38 1 54) 1]
Test Case: 394 | Input/Output: [(77 57 52 56) 52]
Test Case: 395 | Input/Output: [(36 80 28 23) 23]
Test Case: 396 | Input/Output: [(74 93 14 89) 14]
Test Case: 397 | Input/Output: [(24 58 5 0) 0]
Test Case: 398 | Input/Output: [(53 26 12 93) 12]
Test Case: 399 | Input/Output: [(26 74 45 35) 26]
Test Case: 400 | Input/Output: [(-58 8 64 18) -58]
Test Case: 401 | Input/Output: [(-56 28 35 48) -56]
Test Case: 402 | Input/Output: [(74 -47 90 83) -47]
Test Case: 403 | Input/Output: [(-18 -91 38 33) -91]
Test Case: 404 | Input/Output: [(-89 -42 -54 3) -89]
Test Case: 405 | Input/Output: [(99 -24 38 -43) -43]
Test Case: 406 | Input/Output: [(-7 79 -91 -16) -91]
Test Case: 407 | Input/Output: [(91 -82 81 9) -82]
Test Case: 408 | Input/Output: [(78 82 -78 87) -78]
Test Case: 409 | Input/Output: [(-54 -49 87 40) -54]
Test Case: 410 | Input/Output: [(-100 -85 9 29) -100]
Test Case: 411 | Input/Output: [(79 52 -57 100) -57]
Test Case: 412 | Input/Output: [(9 6 63 65) 6]
Test Case: 413 | Input/Output: [(99 -9 49 41) -9]
Test Case: 414 | Input/Output: [(12 39 -82 36) -82]
Test Case: 415 | Input/Output: [(-51 75 -25 -56) -56]
Test Case: 416 | Input/Output: [(-95 59 -40 -33) -95]
Test Case: 417 | Input/Output: [(91 -32 -41 -73) -73]
Test Case: 418 | Input/Output: [(-78 -85 65 -56) -85]
Test Case: 419 | Input/Output: [(-2 -46 -83 41) -83]
Test Case: 420 | Input/Output: [(88 70 -89 -87) -89]
Test Case: 421 | Input/Output: [(-23 -24 13 -41) -41]
Test Case: 422 | Input/Output: [(94 94 92 -33) -33]
Test Case: 423 | Input/Output: [(-10 51 82 90) -10]
Test Case: 424 | Input/Output: [(33 28 -76 72) -76]
Test Case: 425 | Input/Output: [(-20 -57 71 -82) -82]
Test Case: 426 | Input/Output: [(80 14 80 -94) -94]
Test Case: 427 | Input/Output: [(-25 94 17 -75) -75]
Test Case: 428 | Input/Output: [(66 69 24 45) 24]
Test Case: 429 | Input/Output: [(69 -87 -91 -58) -91]
Test Case: 430 | Input/Output: [(-95 51 3 26) -95]
Test Case: 431 | Input/Output: [(-35 12 -53 -28) -53]
Test Case: 432 | Input/Output: [(-60 83 35 -54) -60]
Test Case: 433 | Input/Output: [(-58 26 100 45) -58]
Test Case: 434 | Input/Output: [(-1 -3 -64 -82) -82]
Test Case: 435 | Input/Output: [(65 -82 -65 4) -82]
Test Case: 436 | Input/Output: [(69 -85 -25 66) -85]
Test Case: 437 | Input/Output: [(20 38 -35 -39) -39]
Test Case: 438 | Input/Output: [(-37 76 56 93) -37]
Test Case: 439 | Input/Output: [(-38 33 64 88) -38]
Test Case: 440 | Input/Output: [(79 -90 79 -70) -90]
Test Case: 441 | Input/Output: [(-56 39 -28 -32) -56]
Test Case: 442 | Input/Output: [(-28 -7 86 -2) -28]
Test Case: 443 | Input/Output: [(-48 -36 48 -61) -61]
Test Case: 444 | Input/Output: [(88 -100 54 -67) -100]
Test Case: 445 | Input/Output: [(72 54 15 -50) -50]
Test Case: 446 | Input/Output: [(54 -33 4 -43) -43]
Test Case: 447 | Input/Output: [(76 9 -50 63) -50]
Test Case: 448 | Input/Output: [(85 2 59 60) 2]
Test Case: 449 | Input/Output: [(-85 97 -11 -56) -85]
Test Case: 450 | Input/Output: [(90 62 67 33) 33]
Test Case: 451 | Input/Output: [(60 34 -74 -43) -74]
Test Case: 452 | Input/Output: [(90 12 -43 59) -43]
Test Case: 453 | Input/Output: [(47 24 -16 49) -16]
Test Case: 454 | Input/Output: [(25 -69 -33 -54) -69]
Test Case: 455 | Input/Output: [(77 55 -7 79) -7]
Test Case: 456 | Input/Output: [(-3 46 -86 -60) -86]
Test Case: 457 | Input/Output: [(-75 -86 25 -51) -86]
Test Case: 458 | Input/Output: [(-80 3 -59 53) -80]
Test Case: 459 | Input/Output: [(-10 -99 -20 72) -99]
Test Case: 460 | Input/Output: [(73 40 21 -45) -45]
Test Case: 461 | Input/Output: [(-97 -38 81 -8) -97]
Test Case: 462 | Input/Output: [(-71 84 71 46) -71]
Test Case: 463 | Input/Output: [(-65 26 13 -90) -90]
Test Case: 464 | Input/Output: [(-11 -93 22 -74) -93]
Test Case: 465 | Input/Output: [(-12 11 -94 45) -94]
Test Case: 466 | Input/Output: [(53 68 -67 -85) -85]
Test Case: 467 | Input/Output: [(1 33 -34 18) -34]
Test Case: 468 | Input/Output: [(-56 -67 5 -65) -67]
Test Case: 469 | Input/Output: [(-88 0 93 -96) -96]
Test Case: 470 | Input/Output: [(-67 66 -85 71) -85]
Test Case: 471 | Input/Output: [(-41 34 80 -97) -97]
Test Case: 472 | Input/Output: [(64 48 -16 -55) -55]
Test Case: 473 | Input/Output: [(-28 -62 32 56) -62]
Test Case: 474 | Input/Output: [(95 -39 -100 -60) -100]
Test Case: 475 | Input/Output: [(-83 8 45 86) -83]
Test Case: 476 | Input/Output: [(-34 15 79 84) -34]
Test Case: 477 | Input/Output: [(-39 -48 -15 -100) -100]
Test Case: 478 | Input/Output: [(73 11 83 80) 11]
Test Case: 479 | Input/Output: [(6 6 56 33) 6]
Test Case: 480 | Input/Output: [(7 46 -8 -60) -60]
Test Case: 481 | Input/Output: [(-38 59 47 61) -38]
Test Case: 482 | Input/Output: [(61 -45 45 -89) -89]
Test Case: 483 | Input/Output: [(-96 -66 41 -68) -96]
Test Case: 484 | Input/Output: [(90 92 -35 16) -35]
Test Case: 485 | Input/Output: [(22 -63 -66 90) -66]
Test Case: 486 | Input/Output: [(-24 60 -66 -33) -66]
Test Case: 487 | Input/Output: [(-67 -11 70 -98) -98]
Test Case: 488 | Input/Output: [(-78 -27 -96 44) -96]
Test Case: 489 | Input/Output: [(-91 78 50 10) -91]
Test Case: 490 | Input/Output: [(73 -24 74 0) -24]
Test Case: 491 | Input/Output: [(-75 -38 -11 19) -75]
Test Case: 492 | Input/Output: [(47 -54 -37 23) -54]
Test Case: 493 | Input/Output: [(95 33 -39 -43) -43]
Test Case: 494 | Input/Output: [(34 -59 36 70) -59]
Test Case: 495 | Input/Output: [(42 -27 -34 -8) -34]
Test Case: 496 | Input/Output: [(-47 -78 -58 88) -78]
Test Case: 497 | Input/Output: [(44 20 74 37) 20]
Test Case: 498 | Input/Output: [(59 15 -20 5) -20]
Test Case: 499 | Input/Output: [(-42 -98 54 -86) -98]
Test Case: 500 | Input/Output: [(-41 -56 -76 39) -76]
Test Case: 501 | Input/Output: [(-90 14 24 47) -90]
Test Case: 502 | Input/Output: [(62 -31 79 5) -31]
Test Case: 503 | Input/Output: [(-63 -96 -20 -49) -96]
Test Case: 504 | Input/Output: [(-50 92 73 -5) -50]
Test Case: 505 | Input/Output: [(44 28 78 -79) -79]
Test Case: 506 | Input/Output: [(-60 -3 87 -96) -96]
Test Case: 507 | Input/Output: [(-82 -13 7 69) -82]
Test Case: 508 | Input/Output: [(-48 -26 -32 -68) -68]
Test Case: 509 | Input/Output: [(-79 54 -42 2) -79]
Test Case: 510 | Input/Output: [(-79 -97 85 77) -97]
Test Case: 511 | Input/Output: [(96 -95 17 18) -95]
Test Case: 512 | Input/Output: [(10 -74 58 58) -74]
Test Case: 513 | Input/Output: [(78 51 -20 77) -20]
Test Case: 514 | Input/Output: [(-75 44 9 -8) -75]
Test Case: 515 | Input/Output: [(-92 -49 -1 -44) -92]
Test Case: 516 | Input/Output: [(80 41 -77 -47) -77]
Test Case: 517 | Input/Output: [(61 -46 68 71) -46]
Test Case: 518 | Input/Output: [(40 -87 -94 -73) -94]
Test Case: 519 | Input/Output: [(66 100 97 -6) -6]
Test Case: 520 | Input/Output: [(-51 31 -60 61) -60]
Test Case: 521 | Input/Output: [(87 -77 77 -45) -77]
Test Case: 522 | Input/Output: [(-36 -54 1 99) -54]
Test Case: 523 | Input/Output: [(-10 60 2 -8) -10]
Test Case: 524 | Input/Output: [(43 -21 83 69) -21]
Test Case: 525 | Input/Output: [(-71 70 -76 68) -76]
Test Case: 526 | Input/Output: [(21 -48 26 -23) -48]
Test Case: 527 | Input/Output: [(20 5 80 28) 5]
Test Case: 528 | Input/Output: [(-96 -44 -61 24) -96]
Test Case: 529 | Input/Output: [(39 91 95 38) 38]
Test Case: 530 | Input/Output: [(-62 57 -77 -42) -77]
Test Case: 531 | Input/Output: [(-58 -61 7 -66) -66]
Test Case: 532 | Input/Output: [(-63 -9 66 -32) -63]
Test Case: 533 | Input/Output: [(-18 44 15 -77) -77]
Test Case: 534 | Input/Output: [(12 87 40 62) 12]
Test Case: 535 | Input/Output: [(-53 81 43 -9) -53]
Test Case: 536 | Input/Output: [(2 -75 7 90) -75]
Test Case: 537 | Input/Output: [(11 -95 -5 -86) -95]
Test Case: 538 | Input/Output: [(98 94 56 48) 48]
Test Case: 539 | Input/Output: [(38 -69 -23 2) -69]
Test Case: 540 | Input/Output: [(65 74 14 91) 14]
Test Case: 541 | Input/Output: [(37 -34 -60 -55) -60]
Test Case: 542 | Input/Output: [(-4 36 -71 30) -71]
Test Case: 543 | Input/Output: [(-15 74 -29 67) -29]
Test Case: 544 | Input/Output: [(-36 -35 -31 42) -36]
Test Case: 545 | Input/Output: [(-46 81 -16 -39) -46]
Test Case: 546 | Input/Output: [(89 -20 -54 90) -54]
Test Case: 547 | Input/Output: [(-98 -60 -2 83) -98]
Test Case: 548 | Input/Output: [(-75 51 -32 -36) -75]
Test Case: 549 | Input/Output: [(14 -87 99 31) -87]
Test Case: 550 | Input/Output: [(54 -25 -28 -17) -28]
Test Case: 551 | Input/Output: [(-10 79 54 33) -10]
Test Case: 552 | Input/Output: [(-96 -41 -34 62) -96]
Test Case: 553 | Input/Output: [(41 -25 59 -86) -86]
Test Case: 554 | Input/Output: [(-94 46 61 -25) -94]
Test Case: 555 | Input/Output: [(-34 -53 25 -72) -72]
Test Case: 556 | Input/Output: [(23 5 97 -18) -18]
Test Case: 557 | Input/Output: [(12 -56 -65 17) -65]
Test Case: 558 | Input/Output: [(-71 -58 72 -56) -71]
Test Case: 559 | Input/Output: [(-24 28 -25 27) -25]
Test Case: 560 | Input/Output: [(86 -20 92 83) -20]
Test Case: 561 | Input/Output: [(21 -100 -55 36) -100]
Test Case: 562 | Input/Output: [(49 54 42 59) 42]
Test Case: 563 | Input/Output: [(-52 4 -75 38) -75]
Test Case: 564 | Input/Output: [(23 -4 46 -25) -25]
Test Case: 565 | Input/Output: [(25 51 -37 73) -37]
Test Case: 566 | Input/Output: [(52 -53 47 -80) -80]
Test Case: 567 | Input/Output: [(-55 4 -78 55) -78]
Test Case: 568 | Input/Output: [(-37 88 -50 75) -50]
Test Case: 569 | Input/Output: [(44 -68 -89 -20) -89]
Test Case: 570 | Input/Output: [(59 -76 72 -20) -76]
Test Case: 571 | Input/Output: [(31 14 58 79) 14]
Test Case: 572 | Input/Output: [(52 -14 -94 -15) -94]
Test Case: 573 | Input/Output: [(-81 36 62 -39) -81]
Test Case: 574 | Input/Output: [(78 43 15 78) 15]
Test Case: 575 | Input/Output: [(-64 95 -39 -94) -94]
Test Case: 576 | Input/Output: [(-22 -77 -77 79) -77]
Test Case: 577 | Input/Output: [(-57 -44 -79 -12) -79]
Test Case: 578 | Input/Output: [(30 23 -80 -56) -80]
Test Case: 579 | Input/Output: [(-72 -29 56 -54) -72]
Test Case: 580 | Input/Output: [(-17 37 -99 58) -99]
Test Case: 581 | Input/Output: [(-94 -18 27 -63) -94]
Test Case: 582 | Input/Output: [(84 -78 46 72) -78]
Test Case: 583 | Input/Output: [(50 -96 -23 30) -96]
Test Case: 584 | Input/Output: [(-41 71 -82 86) -82]
Test Case: 585 | Input/Output: [(77 23 -69 -96) -96]
Test Case: 586 | Input/Output: [(94 67 44 -62) -62]
Test Case: 587 | Input/Output: [(97 74 -20 -78) -78]
Test Case: 588 | Input/Output: [(27 -38 61 -69) -69]
Test Case: 589 | Input/Output: [(26 -35 -3 21) -35]
Test Case: 590 | Input/Output: [(40 47 83 -76) -76]
Test Case: 591 | Input/Output: [(49 -38 73 -67) -67]
Test Case: 592 | Input/Output: [(73 54 13 -91) -91]
Test Case: 593 | Input/Output: [(13 59 29 -45) -45]
Test Case: 594 | Input/Output: [(-33 10 60 77) -33]
Test Case: 595 | Input/Output: [(20 34 -60 -55) -60]
Test Case: 596 | Input/Output: [(13 -77 90 -15) -77]
Test Case: 597 | Input/Output: [(-54 -19 -5 95) -54]
Test Case: 598 | Input/Output: [(-28 -100 -59 -43) -100]
Test Case: 599 | Input/Output: [(85 41 6 50) 6]
Test Case: 600 | Input/Output: [(15 39 48 56) 15]
Test Case: 601 | Input/Output: [(-51 11 97 57) -51]
Test Case: 602 | Input/Output: [(-50 8 45 -93) -93]
Test Case: 603 | Input/Output: [(-7 -78 23 -78) -78]
Test Case: 604 | Input/Output: [(-34 67 65 43) -34]
Test Case: 605 | Input/Output: [(-61 -84 19 82) -84]
Test Case: 606 | Input/Output: [(-28 69 -83 44) -83]
Test Case: 607 | Input/Output: [(-48 -51 -88 -75) -88]
Test Case: 608 | Input/Output: [(-64 60 -2 -77) -77]
Test Case: 609 | Input/Output: [(87 -57 -66 0) -66]
Test Case: 610 | Input/Output: [(94 -76 -69 45) -76]
Test Case: 611 | Input/Output: [(-4 7 -15 -12) -15]
Test Case: 612 | Input/Output: [(-72 31 -97 99) -97]
Test Case: 613 | Input/Output: [(-92 -58 -51 87) -92]
Test Case: 614 | Input/Output: [(-16 -47 -35 94) -47]
Test Case: 615 | Input/Output: [(64 75 96 -29) -29]
Test Case: 616 | Input/Output: [(67 90 -37 56) -37]
Test Case: 617 | Input/Output: [(-65 5 10 -58) -65]
Test Case: 618 | Input/Output: [(32 78 27 -88) -88]
Test Case: 619 | Input/Output: [(-22 89 99 82) -22]
Test Case: 620 | Input/Output: [(82 -92 25 -81) -92]
Test Case: 621 | Input/Output: [(75 -80 -24 -15) -80]
Test Case: 622 | Input/Output: [(-32 86 -75 -68) -75]
Test Case: 623 | Input/Output: [(-3 -59 -42 -72) -72]
Test Case: 624 | Input/Output: [(4 70 80 -89) -89]
Test Case: 625 | Input/Output: [(48 -80 13 95) -80]
Test Case: 626 | Input/Output: [(-26 16 6 14) -26]
Test Case: 627 | Input/Output: [(-3 19 35 -3) -3]
Test Case: 628 | Input/Output: [(-46 35 74 -46) -46]
Test Case: 629 | Input/Output: [(-47 78 -27 83) -47]
Test Case: 630 | Input/Output: [(60 9 -16 -44) -44]
Test Case: 631 | Input/Output: [(-4 -2 -20 -60) -60]
Test Case: 632 | Input/Output: [(44 11 -61 4) -61]
Test Case: 633 | Input/Output: [(63 -99 -1 43) -99]
Test Case: 634 | Input/Output: [(-83 50 -14 29) -83]
Test Case: 635 | Input/Output: [(53 96 -29 15) -29]
Test Case: 636 | Input/Output: [(-54 -29 -98 -53) -98]
Test Case: 637 | Input/Output: [(-12 -97 61 3) -97]
Test Case: 638 | Input/Output: [(-10 -78 -16 0) -78]
Test Case: 639 | Input/Output: [(-8 -83 37 57) -83]
Test Case: 640 | Input/Output: [(-82 -90 -38 -99) -99]
Test Case: 641 | Input/Output: [(24 -31 -11 -89) -89]
Test Case: 642 | Input/Output: [(-76 -83 -93 -42) -93]
Test Case: 643 | Input/Output: [(94 38 -26 44) -26]
Test Case: 644 | Input/Output: [(-23 -80 -43 76) -80]
Test Case: 645 | Input/Output: [(19 59 85 34) 19]
Test Case: 646 | Input/Output: [(63 -92 -61 89) -92]
Test Case: 647 | Input/Output: [(-59 -60 -74 17) -74]
Test Case: 648 | Input/Output: [(47 84 61 93) 47]
Test Case: 649 | Input/Output: [(-79 -62 2 -22) -79]
Test Case: 650 | Input/Output: [(-30 -52 -27 95) -52]
Test Case: 651 | Input/Output: [(62 85 -82 -24) -82]
Test Case: 652 | Input/Output: [(64 77 46 -80) -80]
Test Case: 653 | Input/Output: [(-12 54 25 67) -12]
Test Case: 654 | Input/Output: [(-100 -78 -92 -28) -100]
Test Case: 655 | Input/Output: [(35 22 -23 22) -23]
Test Case: 656 | Input/Output: [(27 -61 93 68) -61]
Test Case: 657 | Input/Output: [(-24 -37 -95 -58) -95]
Test Case: 658 | Input/Output: [(-31 -76 -11 -92) -92]
Test Case: 659 | Input/Output: [(-19 -100 34 78) -100]
Test Case: 660 | Input/Output: [(-36 69 31 -56) -56]
Test Case: 661 | Input/Output: [(29 3 30 15) 3]
Test Case: 662 | Input/Output: [(-95 95 -46 49) -95]
Test Case: 663 | Input/Output: [(-6 9 -74 -36) -74]
Test Case: 664 | Input/Output: [(-96 -21 -53 70) -96]
Test Case: 665 | Input/Output: [(-90 -72 -53 -69) -90]
Test Case: 666 | Input/Output: [(-52 -15 -54 35) -54]
Test Case: 667 | Input/Output: [(14 1 22 -67) -67]
Test Case: 668 | Input/Output: [(99 61 14 23) 14]
Test Case: 669 | Input/Output: [(-1 15 3 -36) -36]
Test Case: 670 | Input/Output: [(-10 -7 -7 16) -10]
Test Case: 671 | Input/Output: [(93 -83 72 -10) -83]
Test Case: 672 | Input/Output: [(-49 -68 49 -80) -80]
Test Case: 673 | Input/Output: [(-87 -58 -48 15) -87]
Test Case: 674 | Input/Output: [(-84 45 -56 61) -84]
Test Case: 675 | Input/Output: [(90 -42 39 -38) -42]
Test Case: 676 | Input/Output: [(-69 -35 40 -2) -69]
Test Case: 677 | Input/Output: [(59 60 -6 -50) -50]
Test Case: 678 | Input/Output: [(39 -42 -83 -25) -83]
Test Case: 679 | Input/Output: [(-30 4 13 48) -30]
Test Case: 680 | Input/Output: [(6 -78 14 92) -78]
Test Case: 681 | Input/Output: [(-83 34 -48 -39) -83]
Test Case: 682 | Input/Output: [(38 -35 29 45) -35]
Test Case: 683 | Input/Output: [(-24 -1 85 -8) -24]
Test Case: 684 | Input/Output: [(98 -94 -20 -33) -94]
Test Case: 685 | Input/Output: [(-32 -22 52 58) -32]
Test Case: 686 | Input/Output: [(-26 -1 43 88) -26]
Test Case: 687 | Input/Output: [(-62 -5 58 61) -62]
Test Case: 688 | Input/Output: [(-49 -84 43 -67) -84]
Test Case: 689 | Input/Output: [(-10 11 -36 -39) -39]
Test Case: 690 | Input/Output: [(65 96 -11 99) -11]
Test Case: 691 | Input/Output: [(-76 51 70 -39) -76]
Test Case: 692 | Input/Output: [(30 7 -33 -8) -33]
Test Case: 693 | Input/Output: [(95 -31 45 57) -31]
Test Case: 694 | Input/Output: [(-12 14 6 87) -12]
Test Case: 695 | Input/Output: [(55 20 -92 50) -92]
Test Case: 696 | Input/Output: [(-96 31 21 56) -96]
Test Case: 697 | Input/Output: [(-48 21 3 28) -48]
Test Case: 698 | Input/Output: [(8 -24 38 40) -24]
Test Case: 699 | Input/Output: [(-99 0 -63 78) -99]
Test Case: 700 | Input/Output: [(-58 89 92 15) -58]
Test Case: 701 | Input/Output: [(98 19 3 -5) -5]
Test Case: 702 | Input/Output: [(-3 49 63 -13) -13]
Test Case: 703 | Input/Output: [(19 -49 91 85) -49]
Test Case: 704 | Input/Output: [(43 41 -98 -54) -98]
Test Case: 705 | Input/Output: [(9 2 -12 -52) -52]
Test Case: 706 | Input/Output: [(-90 -57 24 63) -90]
Test Case: 707 | Input/Output: [(44 17 76 32) 17]
Test Case: 708 | Input/Output: [(16 -13 51 30) -13]
Test Case: 709 | Input/Output: [(-73 -87 35 -54) -87]
Test Case: 710 | Input/Output: [(-46 -47 -39 -31) -47]
Test Case: 711 | Input/Output: [(-23 66 -20 27) -23]
Test Case: 712 | Input/Output: [(-33 -7 60 -64) -64]
Test Case: 713 | Input/Output: [(16 9 45 88) 9]
Test Case: 714 | Input/Output: [(39 73 -44 4) -44]
Test Case: 715 | Input/Output: [(55 2 60 46) 2]
Test Case: 716 | Input/Output: [(90 42 -92 -63) -92]
Test Case: 717 | Input/Output: [(59 45 -66 -61) -66]
Test Case: 718 | Input/Output: [(-35 39 34 57) -35]
Test Case: 719 | Input/Output: [(-71 60 31 36) -71]
Test Case: 720 | Input/Output: [(-77 84 -55 -45) -77]
Test Case: 721 | Input/Output: [(69 100 8 74) 8]
Test Case: 722 | Input/Output: [(-66 -31 -90 -32) -90]
Test Case: 723 | Input/Output: [(-94 66 -62 64) -94]
Test Case: 724 | Input/Output: [(88 88 53 -31) -31]
Test Case: 725 | Input/Output: [(-8 -5 -12 2) -12]
Test Case: 726 | Input/Output: [(-36 -28 40 -76) -76]
Test Case: 727 | Input/Output: [(-79 -72 -100 -19) -100]
Test Case: 728 | Input/Output: [(-74 -74 77 -2) -74]
Test Case: 729 | Input/Output: [(-57 -47 -73 -76) -76]
Test Case: 730 | Input/Output: [(-65 43 91 -44) -65]
Test Case: 731 | Input/Output: [(6 47 -69 64) -69]
Test Case: 732 | Input/Output: [(67 -4 -96 58) -96]
Test Case: 733 | Input/Output: [(-48 61 -11 34) -48]
Test Case: 734 | Input/Output: [(-86 95 -40 56) -86]
Test Case: 735 | Input/Output: [(-43 34 76 -76) -76]
Test Case: 736 | Input/Output: [(-9 58 55 90) -9]
Test Case: 737 | Input/Output: [(45 -38 -82 74) -82]
Test Case: 738 | Input/Output: [(-25 -58 -76 -88) -88]
Test Case: 739 | Input/Output: [(41 -79 -72 -51) -79]
Test Case: 740 | Input/Output: [(-27 87 46 42) -27]
Test Case: 741 | Input/Output: [(13 -29 -40 -49) -49]
Test Case: 742 | Input/Output: [(-35 85 77 46) -35]
Test Case: 743 | Input/Output: [(-81 18 -74 95) -81]
Test Case: 744 | Input/Output: [(-3 -35 -18 65) -35]
Test Case: 745 | Input/Output: [(-5 60 58 15) -5]
Test Case: 746 | Input/Output: [(59 -58 -42 -7) -58]
Test Case: 747 | Input/Output: [(-64 0 39 -55) -64]
Test Case: 748 | Input/Output: [(-18 95 -31 -81) -81]
Test Case: 749 | Input/Output: [(-59 41 -81 57) -81]
Test Case: 750 | Input/Output: [(-19 -21 -17 -19) -21]
Test Case: 751 | Input/Output: [(41 67 2 -48) -48]
Test Case: 752 | Input/Output: [(-49 -23 74 87) -49]
Test Case: 753 | Input/Output: [(-29 1 63 -31) -31]
Test Case: 754 | Input/Output: [(-57 7 68 30) -57]
Test Case: 755 | Input/Output: [(76 11 -27 35) -27]
Test Case: 756 | Input/Output: [(94 91 31 59) 31]
Test Case: 757 | Input/Output: [(-5 67 -95 90) -95]
Test Case: 758 | Input/Output: [(-45 -11 -9 -98) -98]
Test Case: 759 | Input/Output: [(70 28 -89 -33) -89]
Test Case: 760 | Input/Output: [(-97 -21 -81 35) -97]
Test Case: 761 | Input/Output: [(-91 -58 -77 76) -91]
Test Case: 762 | Input/Output: [(46 24 -1 -6) -6]
Test Case: 763 | Input/Output: [(33 60 51 -92) -92]
Test Case: 764 | Input/Output: [(-60 -20 47 32) -60]
Test Case: 765 | Input/Output: [(56 -35 -38 46) -38]
Test Case: 766 | Input/Output: [(82 -83 39 -62) -83]
Test Case: 767 | Input/Output: [(78 -7 -56 56) -56]
Test Case: 768 | Input/Output: [(-76 36 6 -3) -76]
Test Case: 769 | Input/Output: [(-84 55 56 97) -84]
Test Case: 770 | Input/Output: [(41 -58 -1 -22) -58]
Test Case: 771 | Input/Output: [(-22 -76 -91 -83) -91]
Test Case: 772 | Input/Output: [(11 75 -83 -43) -83]
Test Case: 773 | Input/Output: [(-66 -49 1 26) -66]
Test Case: 774 | Input/Output: [(-100 -60 69 49) -100]
Test Case: 775 | Input/Output: [(-34 32 78 11) -34]
Test Case: 776 | Input/Output: [(-65 76 -1 2) -65]
Test Case: 777 | Input/Output: [(-38 88 -36 -71) -71]
Test Case: 778 | Input/Output: [(71 20 -86 36) -86]
Test Case: 779 | Input/Output: [(-66 -78 54 57) -78]
Test Case: 780 | Input/Output: [(85 100 -84 70) -84]
Test Case: 781 | Input/Output: [(-29 52 25 93) -29]
Test Case: 782 | Input/Output: [(3 -80 47 -79) -80]
Test Case: 783 | Input/Output: [(-23 94 82 54) -23]
Test Case: 784 | Input/Output: [(-53 -12 -38 -19) -53]
Test Case: 785 | Input/Output: [(62 46 94 87) 46]
Test Case: 786 | Input/Output: [(-64 -92 -69 -1) -92]
Test Case: 787 | Input/Output: [(-1 52 78 88) -1]
Test Case: 788 | Input/Output: [(-84 69 -21 -79) -84]
Test Case: 789 | Input/Output: [(-24 -41 -1 -76) -76]
Test Case: 790 | Input/Output: [(50 -57 -64 56) -64]
Test Case: 791 | Input/Output: [(-29 -40 53 -84) -84]
Test Case: 792 | Input/Output: [(35 -97 19 96) -97]
Test Case: 793 | Input/Output: [(24 -56 -20 3) -56]
Test Case: 794 | Input/Output: [(-86 -33 -95 -57) -95]
Test Case: 795 | Input/Output: [(-75 95 46 70) -75]
Test Case: 796 | Input/Output: [(-22 31 28 39) -22]
Test Case: 797 | Input/Output: [(13 89 -5 51) -5]
Test Case: 798 | Input/Output: [(74 -25 -92 -32) -92]
Test Case: 799 | Input/Output: [(99 58 10 37) 10]
Test Case: 800 | Input/Output: [(-62 -41 64 59) -62]
Test Case: 801 | Input/Output: [(-83 43 30 -54) -83]
Test Case: 802 | Input/Output: [(-41 48 -95 -39) -95]
Test Case: 803 | Input/Output: [(41 -30 -38 -82) -82]
Test Case: 804 | Input/Output: [(-65 89 -18 -50) -65]
Test Case: 805 | Input/Output: [(-20 44 55 44) -20]
Test Case: 806 | Input/Output: [(-56 -34 -79 -58) -79]
Test Case: 807 | Input/Output: [(61 -13 -51 19) -51]
Test Case: 808 | Input/Output: [(86 -59 24 -15) -59]
Test Case: 809 | Input/Output: [(1 -78 -59 87) -78]
Test Case: 810 | Input/Output: [(-53 -81 -18 -54) -81]
Test Case: 811 | Input/Output: [(-19 -77 -84 28) -84]
Test Case: 812 | Input/Output: [(99 25 15 100) 15]
Test Case: 813 | Input/Output: [(76 -12 -63 5) -63]
Test Case: 814 | Input/Output: [(47 16 -72 -81) -81]
Test Case: 815 | Input/Output: [(-14 33 -58 10) -58]
Test Case: 816 | Input/Output: [(-27 -18 -68 -10) -68]
Test Case: 817 | Input/Output: [(-66 43 -68 -21) -68]
Test Case: 818 | Input/Output: [(-15 -2 16 -60) -60]
Test Case: 819 | Input/Output: [(-40 8 -11 59) -40]
Test Case: 820 | Input/Output: [(-98 -35 -84 2) -98]
Test Case: 821 | Input/Output: [(-48 76 45 70) -48]
Test Case: 822 | Input/Output: [(67 -1 -36 31) -36]
Test Case: 823 | Input/Output: [(-96 67 91 29) -96]
Test Case: 824 | Input/Output: [(-6 -41 -65 82) -65]
Test Case: 825 | Input/Output: [(-62 87 52 83) -62]
Test Case: 826 | Input/Output: [(-84 -64 -71 28) -84]
Test Case: 827 | Input/Output: [(0 -73 -86 83) -86]
Test Case: 828 | Input/Output: [(-45 -66 -74 -61) -74]
Test Case: 829 | Input/Output: [(-13 -81 4 -21) -81]
Test Case: 830 | Input/Output: [(73 31 -85 -76) -85]
Test Case: 831 | Input/Output: [(-3 26 -76 48) -76]
Test Case: 832 | Input/Output: [(-64 -100 86 -89) -100]
Test Case: 833 | Input/Output: [(58 2 26 29) 2]
Test Case: 834 | Input/Output: [(-88 -32 51 37) -88]
Test Case: 835 | Input/Output: [(-23 6 -78 -34) -78]
Test Case: 836 | Input/Output: [(1 6 77 -92) -92]
Test Case: 837 | Input/Output: [(-20 75 -35 -75) -75]
Test Case: 838 | Input/Output: [(34 34 -38 97) -38]
Test Case: 839 | Input/Output: [(-35 -76 13 -78) -78]
Test Case: 840 | Input/Output: [(41 14 64 -56) -56]
Test Case: 841 | Input/Output: [(-91 39 91 -89) -91]
Test Case: 842 | Input/Output: [(-31 -23 16 3) -31]
Test Case: 843 | Input/Output: [(-26 89 37 8) -26]
Test Case: 844 | Input/Output: [(-50 -56 -4 78) -56]
Test Case: 845 | Input/Output: [(90 -20 -53 12) -53]
Test Case: 846 | Input/Output: [(74 -75 74 -25) -75]
Test Case: 847 | Input/Output: [(-19 54 66 -29) -29]
Test Case: 848 | Input/Output: [(-16 55 -9 -71) -71]
Test Case: 849 | Input/Output: [(35 11 21 5) 5]
Test Case: 850 | Input/Output: [(4 -30 -20 78) -30]
Test Case: 851 | Input/Output: [(-79 30 69 -28) -79]
Test Case: 852 | Input/Output: [(78 -10 46 -85) -85]
Test Case: 853 | Input/Output: [(-70 -70 -8 -80) -80]
Test Case: 854 | Input/Output: [(35 -44 -72 36) -72]
Test Case: 855 | Input/Output: [(-5 78 -72 -25) -72]
Test Case: 856 | Input/Output: [(-99 -82 -72 10) -99]
Test Case: 857 | Input/Output: [(-11 67 -50 -49) -50]
Test Case: 858 | Input/Output: [(-98 22 26 83) -98]
Test Case: 859 | Input/Output: [(-25 61 1 37) -25]
Test Case: 860 | Input/Output: [(-91 51 33 -30) -91]
Test Case: 861 | Input/Output: [(-67 -9 -60 64) -67]
Test Case: 862 | Input/Output: [(-20 -99 85 3) -99]
Test Case: 863 | Input/Output: [(-53 65 68 -20) -53]
Test Case: 864 | Input/Output: [(-76 23 17 -30) -76]
Test Case: 865 | Input/Output: [(39 -91 -10 96) -91]
Test Case: 866 | Input/Output: [(26 -7 27 -74) -74]
Test Case: 867 | Input/Output: [(-24 78 -12 90) -24]
Test Case: 868 | Input/Output: [(65 75 -14 0) -14]
Test Case: 869 | Input/Output: [(-44 95 -98 -33) -98]
Test Case: 870 | Input/Output: [(59 74 68 44) 44]
Test Case: 871 | Input/Output: [(65 -3 99 22) -3]
Test Case: 872 | Input/Output: [(-34 51 -92 -22) -92]
Test Case: 873 | Input/Output: [(-21 -84 -6 -56) -84]
Test Case: 874 | Input/Output: [(-79 -69 59 83) -79]
Test Case: 875 | Input/Output: [(-70 -81 45 14) -81]
Test Case: 876 | Input/Output: [(2 -33 47 87) -33]
Test Case: 877 | Input/Output: [(1 -35 -65 -20) -65]
Test Case: 878 | Input/Output: [(-40 -74 -26 -50) -74]
Test Case: 879 | Input/Output: [(-3 59 -53 -22) -53]
Test Case: 880 | Input/Output: [(-61 6 22 -31) -61]
Test Case: 881 | Input/Output: [(86 -78 -37 73) -78]
Test Case: 882 | Input/Output: [(-46 85 85 32) -46]
Test Case: 883 | Input/Output: [(35 86 -21 -8) -21]
Test Case: 884 | Input/Output: [(-5 20 61 -69) -69]
Test Case: 885 | Input/Output: [(-63 -75 81 -5) -75]
Test Case: 886 | Input/Output: [(-53 -90 -56 -70) -90]
Test Case: 887 | Input/Output: [(-34 -46 50 -8) -46]
Test Case: 888 | Input/Output: [(-6 -89 85 46) -89]
Test Case: 889 | Input/Output: [(-15 -9 -21 -40) -40]
Test Case: 890 | Input/Output: [(98 55 -89 -9) -89]
Test Case: 891 | Input/Output: [(-73 86 14 -73) -73]
Test Case: 892 | Input/Output: [(49 -59 -13 -96) -96]
Test Case: 893 | Input/Output: [(77 15 -46 52) -46]
Test Case: 894 | Input/Output: [(61 22 51 -42) -42]
Test Case: 895 | Input/Output: [(-51 29 99 -83) -83]
Test Case: 896 | Input/Output: [(20 -54 88 26) -54]
Test Case: 897 | Input/Output: [(-20 -19 -64 -43) -64]
Test Case: 898 | Input/Output: [(37 37 -95 62) -95]
Test Case: 899 | Input/Output: [(-95 65 43 -11) -95]
Test Case: 900 | Input/Output: [(8 -20 30 72) -20]
Test Case: 901 | Input/Output: [(35 70 -6 98) -6]
Test Case: 902 | Input/Output: [(70 -84 26 -61) -84]
Test Case: 903 | Input/Output: [(-69 70 4 61) -69]
Test Case: 904 | Input/Output: [(24 -25 -15 3) -25]
Test Case: 905 | Input/Output: [(-35 42 97 -33) -35]
Test Case: 906 | Input/Output: [(-85 -95 -73 -25) -95]
Test Case: 907 | Input/Output: [(99 71 -46 -69) -69]
Test Case: 908 | Input/Output: [(84 19 21 -58) -58]
Test Case: 909 | Input/Output: [(-95 -56 -94 -91) -95]
Test Case: 910 | Input/Output: [(-64 84 -38 -93) -93]
Test Case: 911 | Input/Output: [(30 -69 -100 46) -100]
Test Case: 912 | Input/Output: [(-4 -65 25 70) -65]
Test Case: 913 | Input/Output: [(-99 -39 14 -31) -99]
Test Case: 914 | Input/Output: [(51 79 -45 -42) -45]
Test Case: 915 | Input/Output: [(94 2 -91 55) -91]
Test Case: 916 | Input/Output: [(64 -48 67 -100) -100]
Test Case: 917 | Input/Output: [(60 -78 -15 28) -78]
Test Case: 918 | Input/Output: [(-79 -40 -40 -23) -79]
Test Case: 919 | Input/Output: [(11 44 57 78) 11]
Test Case: 920 | Input/Output: [(79 1 -37 -55) -55]
Test Case: 921 | Input/Output: [(19 38 -47 -34) -47]
Test Case: 922 | Input/Output: [(76 75 72 -82) -82]
Test Case: 923 | Input/Output: [(13 -78 28 76) -78]
Test Case: 924 | Input/Output: [(52 -31 -42 -97) -97]
Test Case: 925 | Input/Output: [(-57 53 -59 -96) -96]
Test Case: 926 | Input/Output: [(77 -13 -32 49) -32]
Test Case: 927 | Input/Output: [(-53 -93 -1 -67) -93]
Test Case: 928 | Input/Output: [(49 -15 67 70) -15]
Test Case: 929 | Input/Output: [(65 -34 -84 -69) -84]
Test Case: 930 | Input/Output: [(-30 -73 -23 45) -73]
Test Case: 931 | Input/Output: [(-32 -31 19 -57) -57]
Test Case: 932 | Input/Output: [(-81 63 13 -62) -81]
Test Case: 933 | Input/Output: [(-43 -31 85 45) -43]
Test Case: 934 | Input/Output: [(-24 35 -43 87) -43]
Test Case: 935 | Input/Output: [(-62 35 68 49) -62]
Test Case: 936 | Input/Output: [(66 23 40 -51) -51]
Test Case: 937 | Input/Output: [(43 50 -12 10) -12]
Test Case: 938 | Input/Output: [(-36 -98 45 -69) -98]
Test Case: 939 | Input/Output: [(-41 -95 -40 95) -95]
Test Case: 940 | Input/Output: [(8 15 -96 -68) -96]
Test Case: 941 | Input/Output: [(-30 -49 -1 -72) -72]
Test Case: 942 | Input/Output: [(84 -38 -44 56) -44]
Test Case: 943 | Input/Output: [(85 -30 -30 -75) -75]
Test Case: 944 | Input/Output: [(-2 -70 -56 30) -70]
Test Case: 945 | Input/Output: [(-23 9 24 16) -23]
Test Case: 946 | Input/Output: [(-6 78 -45 -68) -68]
Test Case: 947 | Input/Output: [(-67 36 28 70) -67]
Test Case: 948 | Input/Output: [(-81 65 70 -62) -81]
Test Case: 949 | Input/Output: [(51 -58 -12 -35) -58]
Test Case: 950 | Input/Output: [(78 36 -61 -18) -61]
Test Case: 951 | Input/Output: [(23 35 -20 -86) -86]
Test Case: 952 | Input/Output: [(-5 54 -98 -47) -98]
Test Case: 953 | Input/Output: [(73 44 21 17) 17]
Test Case: 954 | Input/Output: [(23 -7 -28 -74) -74]
Test Case: 955 | Input/Output: [(-44 -75 34 87) -75]
Test Case: 956 | Input/Output: [(69 39 41 -61) -61]
Test Case: 957 | Input/Output: [(24 -61 -98 -69) -98]
Test Case: 958 | Input/Output: [(46 41 -83 59) -83]
Test Case: 959 | Input/Output: [(-72 30 5 -59) -72]
Test Case: 960 | Input/Output: [(-72 89 35 -33) -72]
Test Case: 961 | Input/Output: [(-17 77 -53 15) -53]
Test Case: 962 | Input/Output: [(19 53 -49 -8) -49]
Test Case: 963 | Input/Output: [(81 -88 -76 39) -88]
Test Case: 964 | Input/Output: [(-88 -80 63 48) -88]
Test Case: 965 | Input/Output: [(69 -40 -89 -78) -89]
Test Case: 966 | Input/Output: [(18 -96 -47 -90) -96]
Test Case: 967 | Input/Output: [(-72 -81 -60 -70) -81]
Test Case: 968 | Input/Output: [(-77 -50 81 -99) -99]
Test Case: 969 | Input/Output: [(32 92 64 -41) -41]
Test Case: 970 | Input/Output: [(67 77 -98 34) -98]
Test Case: 971 | Input/Output: [(34 -51 50 -58) -58]
Test Case: 972 | Input/Output: [(-64 -10 63 22) -64]
Test Case: 973 | Input/Output: [(90 -78 -35 -75) -78]
Test Case: 974 | Input/Output: [(-21 37 9 37) -21]
Test Case: 975 | Input/Output: [(-31 -11 48 -21) -31]
Test Case: 976 | Input/Output: [(56 19 -85 49) -85]
Test Case: 977 | Input/Output: [(47 -92 23 63) -92]
Test Case: 978 | Input/Output: [(26 -79 -96 30) -96]
Test Case: 979 | Input/Output: [(21 92 -30 -99) -99]
Test Case: 980 | Input/Output: [(-9 67 1 -85) -85]
Test Case: 981 | Input/Output: [(-8 -1 -70 90) -70]
Test Case: 982 | Input/Output: [(40 -99 94 -97) -99]
Test Case: 983 | Input/Output: [(21 94 53 -51) -51]
Test Case: 984 | Input/Output: [(4 -34 -66 29) -66]
Test Case: 985 | Input/Output: [(-58 -28 46 22) -58]
Test Case: 986 | Input/Output: [(65 -4 17 -69) -69]
Test Case: 987 | Input/Output: [(15 2 25 -57) -57]
Test Case: 988 | Input/Output: [(57 40 -6 10) -6]
Test Case: 989 | Input/Output: [(-97 -97 -76 98) -97]
Test Case: 990 | Input/Output: [(-34 72 84 -86) -86]
Test Case: 991 | Input/Output: [(-87 -60 -26 99) -87]
Test Case: 992 | Input/Output: [(74 34 -18 6) -18]
Test Case: 993 | Input/Output: [(-85 -51 59 16) -85]
Test Case: 994 | Input/Output: [(6 -26 95 -82) -82]
Test Case: 995 | Input/Output: [(46 55 65 -60) -60]
Test Case: 996 | Input/Output: [(71 -60 -39 -96) -96]
Test Case: 997 | Input/Output: [(73 -98 34 -22) -98]
Test Case: 998 | Input/Output: [(28 15 -65 83) -65]
Test Case: 999 | Input/Output: [(52 -27 46 -8) -27]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 68 68 -47 56 57 -49 -32 -115 -60 105 38 100 6 35 -32 11
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[73 -53 73 73] -53] [[-61 -61 84 -61] -61] [[59 59 -44 59] -44] [[-6 -50 -50 -50] -50] [[-4 -4 -4 -24] -24] [[11 -12 -12 -12] -12] [[-4 -4 -27 -4] -27] [[-10 -1 -10 -10] -10] [[-78 -78 1 -78] -78] [[35 35 35 -37] -37] [(71 71 71 71) 71] [(49 49 49 49) 49] [(-10 -10 -10 -10) -10] [(-27 -27 -27 -27) -27] [(-38 -38 -38 -38) -38] [(37 45 91 70) 37] [(7 67 28 21) 7] [(68 15 13 1) 1] [(34 3 71 49) 3] [(85 15 67 7) 7] [(88 32 96 99) 32] [(77 12 79 9) 9] [(32 59 59 8) 8] [(12 45 33 2) 2] [(78 54 50 0) 0] [(25 97 24 24) 24] [(37 72 23 11) 11] [(52 0 58 38) 0] [(63 94 1 57) 1] [(71 75 90 59) 59] [(75 65 42 97) 42] [(66 13 25 31) 13] [(44 65 30 95) 30] [(11 35 21 50) 11] [(32 39 77 0) 0] [(-75 33 43 97) -75] [(82 -94 84 -33) -94] [(-63 25 -17 73) -63] [(27 -52 -3 1) -52] [(-74 91 62 63) -74] [(10 -60 -43 -69) -69] [(-95 -55 -9 -22) -95] [(65 29 -7 43) -7] [(-10 57 -33 -93) -93] [(60 73 92 12) 12] [(-100 -57 -62 -14) -100] [(-8 60 90 -22) -22] [(-47 16 -50 -68) -68] [(-23 -76 44 66) -76] [(97 46 -10 42) -10] [(14 96 44 -69) -69] [(88 60 98 -43) -43] [(29 -54 -15 21) -54] [(-78 -78 21 92) -78] [(80 74 -63 85) -63] [(-52 46 7 -34) -52] [(18 56 -92 21) -92] [(47 -91 46 -93) -93] [(13 21 91 13) 13] [(-93 75 -13 -75) -93] [(-51 51 -76 -54) -76] [(53 -17 -30 21) -30] [(14 38 59 56) 14] [(-60 -80 -3 -44) -80] [(48 10 -98 -59) -98] [(30 -52 72 0) -52] [(-35 -60 -72 28) -72] [(-64 25 -82 68) -82] [(85 46 -90 38) -90] [(-71 -71 -39 33) -71] [(-5 78 23 46) -5] [(66 -65 51 -52) -65] [(1 -91 83 14) -91] [(34 -26 16 32) -26] [(-8 -61 51 -63) -63] [(30 11 96 7) 7] [(69 41 -99 19) -99] [(67 33 -90 -20) -90] [(-30 20 -56 97) -56] [(-95 -8 33 -78) -95] [(80 -73 34 -26) -73] [(68 -68 60 77) -68] [(-13 62 76 -72) -72] [(84 -95 -53 -69) -95] [(-50 39 -57 -49) -57] [(-65 2 79 -37) -65] [(-10 -98 96 64) -98] [(92 8 27 83) 8] [(-3 37 -47 -34) -47] [(83 83 94 -20) -20] [(76 66 -1 -91) -91] [(-76 -83 -42 11) -83] [(91 -95 -74 -82) -95] [(-16 57 -20 -10) -20] [(14 17 68 -46) -46])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 661
Test mean error for best: 0.66100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -1                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 94                 
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: 25                 
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -55                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: 57                 
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -57                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: 16                 
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: 46                 
Correct output: -92                 | Program output: 56                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: 75                 
Correct output: -76                 | Program output: 51                 
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: 25                 
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: 20                 
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: 39                 
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: 37                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: 57                 
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_add} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 0, :instruction in4} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 1, :instruction print_integer} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_noop} {:close 1, :instruction print_exec} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 1, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction in2})
Lexicase best program: (integer_add boolean_stackdepth integer_shove in3 integer_mod exec_do*while (in4 boolean_xor exec_do*count (exec_s_when_autoconstructing (integer_lt in4 print_integer) (integer_dup_times exec_noop exec_dup (integer_eq exec_do*times (integer_max integer_pop integer_inc exec_noop exec_flush boolean_shove) exec_dup_items exec_yank boolean_eq integer_shove) exec_do*while (boolean_pop boolean_frominteger exec_noop print_exec () integer_pop in2 exec_swap () (boolean_empty boolean_eq exec_eq integer_yank integer_eq in2))) ())))
Lexicase best errors: [1 0 1 0 0 1 1 1 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 54
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_add} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 0, :instruction in4} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction in4} {:close 1, :instruction print_integer} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_max} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_noop} {:close 1, :instruction print_exec} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 1, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_eq} {:close 0, :instruction in2})
Zero cases best program: (integer_add boolean_stackdepth integer_shove in3 integer_mod exec_do*while (in4 boolean_xor exec_do*count (exec_s_when_autoconstructing (integer_lt in4 print_integer) (integer_dup_times exec_noop exec_dup (integer_eq exec_do*times (integer_max integer_pop integer_inc exec_noop exec_flush boolean_shove) exec_dup_items exec_yank boolean_eq integer_shove) exec_do*while (boolean_pop boolean_frominteger exec_noop print_exec () integer_pop in2 exec_swap () (boolean_empty boolean_eq exec_eq integer_yank integer_eq in2))) ())))
Zero cases best errors: [1 0 1 0 0 1 1 1 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 54
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 11 3 2 13 4 3 5 2 2)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (2 11 3 2 13 4 3 5 2 2)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_dec} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_y_when_autoconstructing})
Best program: (in2 print_integer exec_noop integer_shove boolean_invert_first_then_and integer_dec integer_gt exec_s_when_autoconstructing (exec_y_when_autoconstructing ()) () ())
Errors: [1 0 1 1 0 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 9
Size: 14
Percent parens: 0.357
--- Population Statistics ---
Average total errors in population: 9.953
Median total errors in population: 10
Error averages by case: (0.998 0.989 0.997 0.998 0.987 0.996 0.997 0.995 0.998 0.998)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.209
Average program size in population (points): 70.458
Average percent parens in population: 0.279
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.274
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 480512
--- Timings ---
Current time: 1559593955000 milliseconds
Total Time:           2.8 seconds
Initialization:       0.1 seconds,  4.1%
Reproduction:         0.9 seconds, 33.0%
Fitness Testing:      1.7 seconds, 62.8%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 628
Test mean error for best: 0.62800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: 84                 
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: 1                  
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 91                 
Correct output: 7                   | Program output: 28                 
Correct output: 1                   | Program output: 13                 
Correct output: 3                   | Program output: 71                 
Correct output: 7                   | Program output: 67                 
Correct output: 32                  | Program output: 96                 
Correct output: 9                   | Program output: 79                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 33                 
Correct output: 0                   | Program output: 50                 
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 23                 
Correct output: 0                   | Program output: 58                 
Correct output: 1                   | Program output: 1                  
Correct output: 59                  | Program output: 90                 
Correct output: 42                  | Program output: 42                 
Correct output: 13                  | Program output: 25                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 21                 
Correct output: 0                   | Program output: 77                 
Correct output: -75                 | Program output: 43                 
Correct output: -94                 | Program output: 84                 
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 62                 
Correct output: -69                 | Program output: -43                
Correct output: -95                 | Program output: -9                 
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -33                
Correct output: 12                  | Program output: 92                 
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: 90                 
Correct output: -68                 | Program output: -50                
Correct output: -76                 | Program output: 44                 
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: 44                 
Correct output: -43                 | Program output: 98                 
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: 21                 
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: 7                  
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: 46                 
Correct output: 13                  | Program output: 91                 
Correct output: -93                 | Program output: -13                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 59                 
Correct output: -80                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 72                 
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 23                 
Correct output: -65                 | Program output: 51                 
Correct output: -91                 | Program output: 83                 
Correct output: -26                 | Program output: 16                 
Correct output: -63                 | Program output: 51                 
Correct output: 7                   | Program output: 96                 
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: 33                 
Correct output: -73                 | Program output: 34                 
Correct output: -68                 | Program output: 60                 
Correct output: -72                 | Program output: 76                 
Correct output: -95                 | Program output: -53                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: 79                 
Correct output: -98                 | Program output: 96                 
Correct output: 8                   | Program output: 27                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: 94                 
Correct output: -91                 | Program output: -1                 
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -74                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: 68                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 1, :instruction print_integer} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_if} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_flush} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_while} {:close 0, :instruction integer_yank} {:close 1, :instruction -69} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction tag_integer_850} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_mod} {:close 0, :instruction tag_integer_555} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_empty} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_pop} {:close 0, :instruction 79} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_do*times} {:close 2, :instruction exec_shove} {:close 1, :instruction integer_yank} {:close 0, :instruction tag_exec_87} {:close 0, :instruction tag_exec_173} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 1, :instruction exec_rot} {:close 0, :instruction in1} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction -69} {:close 0, :instruction exec_yankdup} {:close 1, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_empty} {:close 0, :instruction in1} {:close 0, :instruction tagged_654} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 0, :instruction tag_boolean_20} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_s} {:close 0, :instruction tagged_553} {:close 0, :instruction tag_exec_204} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_min} {:close 0, :instruction exec_dup_times} {:close 0, :instruction tagged_138} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_flush} {:close 0, :instruction 9} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction in1} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_while})
Lexicase best program: (in3 exec_noop print_integer integer_dup_times exec_pop (integer_pop boolean_pop exec_noop exec_y_when_autoconstructing (boolean_dup_times boolean_pop boolean_invert_second_then_and exec_if (integer_inc exec_dup_times (boolean_xor boolean_dup exec_swap () (exec_flush boolean_not) exec_do*times (exec_while (integer_yank -69) integer_max integer_stackdepth integer_mod) integer_eq boolean_invert_first_then_and boolean_rot) boolean_invert_second_then_and tag_integer_850 integer_flush exec_k_when_autoconstructing () (integer_mod tag_integer_555 exec_dup (exec_empty print_newline integer_mod integer_pop 79 exec_swap (exec_do*times (exec_shove ()) integer_yank) (tag_exec_87 (tag_exec_173 (integer_sub integer_add integer_dup_times exec_rot () (in1 exec_rot () (boolean_swap boolean_not integer_swap integer_add in3 -69) (exec_yankdup in3) boolean_yankdup exec_empty) (in1 tagged_654 exec_k (exec_y (boolean_not integer_gte tag_boolean_20 integer_rot integer_dup_times boolean_and exec_s (tagged_553 tag_exec_204 (integer_yankdup exec_yank exec_s_when_autoconstructing (integer_min) (exec_dup_times (tagged_138 boolean_eq exec_do*while (boolean_not exec_flush 9 boolean_swap exec_y (in1 exec_dup_times (exec_while () boolean_rot exec_flush exec_dup_times (integer_mod exec_while ())))))) ())) () ())) ()))))))) ())))
Lexicase best errors: [0 0 0 1 0 1 1 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 140
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 1, :instruction print_integer} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_if} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_flush} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_while} {:close 0, :instruction integer_yank} {:close 1, :instruction -69} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction tag_integer_850} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_mod} {:close 0, :instruction tag_integer_555} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_empty} {:close 0, :instruction print_newline} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_pop} {:close 0, :instruction 79} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_do*times} {:close 2, :instruction exec_shove} {:close 1, :instruction integer_yank} {:close 0, :instruction tag_exec_87} {:close 0, :instruction tag_exec_173} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction integer_dup_times} {:close 1, :instruction exec_rot} {:close 0, :instruction in1} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction -69} {:close 0, :instruction exec_yankdup} {:close 1, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_empty} {:close 0, :instruction in1} {:close 0, :instruction tagged_654} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 0, :instruction tag_boolean_20} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_s} {:close 0, :instruction tagged_553} {:close 0, :instruction tag_exec_204} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_min} {:close 0, :instruction exec_dup_times} {:close 0, :instruction tagged_138} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_flush} {:close 0, :instruction 9} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction in1} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_while})
Zero cases best program: (in3 exec_noop print_integer integer_dup_times exec_pop (integer_pop boolean_pop exec_noop exec_y_when_autoconstructing (boolean_dup_times boolean_pop boolean_invert_second_then_and exec_if (integer_inc exec_dup_times (boolean_xor boolean_dup exec_swap () (exec_flush boolean_not) exec_do*times (exec_while (integer_yank -69) integer_max integer_stackdepth integer_mod) integer_eq boolean_invert_first_then_and boolean_rot) boolean_invert_second_then_and tag_integer_850 integer_flush exec_k_when_autoconstructing () (integer_mod tag_integer_555 exec_dup (exec_empty print_newline integer_mod integer_pop 79 exec_swap (exec_do*times (exec_shove ()) integer_yank) (tag_exec_87 (tag_exec_173 (integer_sub integer_add integer_dup_times exec_rot () (in1 exec_rot () (boolean_swap boolean_not integer_swap integer_add in3 -69) (exec_yankdup in3) boolean_yankdup exec_empty) (in1 tagged_654 exec_k (exec_y (boolean_not integer_gte tag_boolean_20 integer_rot integer_dup_times boolean_and exec_s (tagged_553 tag_exec_204 (integer_yankdup exec_yank exec_s_when_autoconstructing (integer_min) (exec_dup_times (tagged_138 boolean_eq exec_do*while (boolean_not exec_flush 9 boolean_swap exec_y (in1 exec_dup_times (exec_while () boolean_rot exec_flush exec_dup_times (integer_mod exec_while ())))))) ())) () ())) ()))))))) ())))
Zero cases best errors: [0 0 0 1 0 1 1 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 140
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (179 605 179 165 179 163 175 163 582 176)
Population mean number of elite cases: 2.57
Count of perfect (error zero) individuals by case: (179 605 179 165 179 163 175 163 582 176)
Population mean number of perfect (error zero) cases: 2.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_when} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_min} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_empty} {:close 1, :instruction print_integer} {:close 1, :instruction exec_s})
Best program: (in3 integer_sub boolean_shove print_integer integer_dup exec_when (exec_yank integer_min print_boolean) boolean_invert_first_then_and boolean_invert_second_then_and boolean_and boolean_empty boolean_empty print_integer exec_s () () ())
Errors: [0 0 0 1 0 1 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 16
Size: 21
Percent parens: 0.238
--- Population Statistics ---
Average total errors in population: 7.434
Median total errors in population: 6
Error averages by case: (0.821 0.395 0.821 0.835 0.821 0.837 0.825 0.837 0.418 0.824)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 50.961
Average program size in population (points): 69.832
Average percent parens in population: 0.269
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 16
Genome diversity (% unique genomes):	 0.964
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.964
Total error diversity:				 0.006
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.149
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1088000
--- Timings ---
Current time: 1559593956818 milliseconds
Total Time:           4.6 seconds
Initialization:       0.1 seconds,  2.4%
Reproduction:         1.8 seconds, 39.7%
Fitness Testing:      2.4 seconds, 50.9%
Report:               0.3 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 661
Test mean error for best: 0.66100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -1                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 94                 
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: 25                 
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -55                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: 57                 
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -57                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: 16                 
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: 46                 
Correct output: -92                 | Program output: 56                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: 75                 
Correct output: -76                 | Program output: 51                 
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: 25                 
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: 20                 
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: 39                 
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: 37                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: 57                 
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_y_when_autoconstructing})
Lexicase best program: (in2 print_integer exec_noop integer_shove boolean_invert_first_then_and integer_dec exec_y_when_autoconstructing ())
Lexicase best errors: [1 0 1 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_y_when_autoconstructing})
Zero cases best program: (in2 print_integer exec_noop integer_shove boolean_invert_first_then_and integer_dec exec_y_when_autoconstructing ())
Zero cases best errors: [1 0 1 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 271 275 2 274 271 269 448 175 725)
Population mean number of elite cases: 2.71
Count of perfect (error zero) individuals by case: (2 271 275 2 274 271 269 448 175 725)
Population mean number of perfect (error zero) cases: 2.71
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_mult} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_dup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_swap} {:close 1, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction boolean_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction integer_add} {:close 0, :instruction integer_sub} {:close 1, :instruction integer_mod} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_y} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_eq} {:close 1, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_dec} {:close 1, :instruction print_boolean} {:close 0, :instruction in3} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction in3} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_div} {:close 1, :instruction exec_s_when_autoconstructing})
Best program: (integer_mult integer_dup_items exec_dup_times (boolean_not integer_dup) integer_add exec_s_when_autoconstructing () (exec_shove (integer_yank integer_swap in2) print_integer exec_y_when_autoconstructing (boolean_dup) exec_k_when_autoconstructing (integer_pop exec_stackdepth) (integer_add integer_sub integer_mod) integer_yank) (exec_y (exec_pop (integer_yankdup boolean_eq exec_yank) integer_stackdepth integer_dec print_boolean) in3 exec_stackdepth boolean_shove boolean_not in3) integer_yank exec_do*while (exec_k_when_autoconstructing (boolean_or) (exec_do*count (exec_when (boolean_dup boolean_xor integer_div exec_s_when_autoconstructing () () ())))))
Errors: [1 0 1 1 0 0 0 1 1 0]
Total: 5
Mean: 0.5
Genome size: 44
Size: 63
Percent parens: 0.302
--- Population Statistics ---
Average total errors in population: 7.288
Median total errors in population: 7
Error averages by case: (0.998 0.729 0.725 0.998 0.726 0.729 0.731 0.552 0.825 0.275)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 38.239
Average program size in population (points): 53.396
Average percent parens in population: 0.280
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 8
Genome diversity (% unique genomes):	 0.975
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.975
Total error diversity:				 0.006
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.094
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1456496
--- Timings ---
Current time: 1559593959430 milliseconds
Total Time:           6.6 seconds
Initialization:       0.1 seconds,  1.7%
Reproduction:         3.2 seconds, 47.9%
Fitness Testing:      2.8 seconds, 41.6%
Report:               0.6 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 628
Test mean error for best: 0.62800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: 84                 
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: 1                  
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 91                 
Correct output: 7                   | Program output: 28                 
Correct output: 1                   | Program output: 13                 
Correct output: 3                   | Program output: 71                 
Correct output: 7                   | Program output: 67                 
Correct output: 32                  | Program output: 96                 
Correct output: 9                   | Program output: 79                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 33                 
Correct output: 0                   | Program output: 50                 
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 23                 
Correct output: 0                   | Program output: 58                 
Correct output: 1                   | Program output: 1                  
Correct output: 59                  | Program output: 90                 
Correct output: 42                  | Program output: 42                 
Correct output: 13                  | Program output: 25                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 21                 
Correct output: 0                   | Program output: 77                 
Correct output: -75                 | Program output: 43                 
Correct output: -94                 | Program output: 84                 
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 62                 
Correct output: -69                 | Program output: -43                
Correct output: -95                 | Program output: -9                 
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -33                
Correct output: 12                  | Program output: 92                 
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: 90                 
Correct output: -68                 | Program output: -50                
Correct output: -76                 | Program output: 44                 
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: 44                 
Correct output: -43                 | Program output: 98                 
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: 21                 
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: 7                  
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: 46                 
Correct output: 13                  | Program output: 91                 
Correct output: -93                 | Program output: -13                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 59                 
Correct output: -80                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 72                 
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 23                 
Correct output: -65                 | Program output: 51                 
Correct output: -91                 | Program output: 83                 
Correct output: -26                 | Program output: 16                 
Correct output: -63                 | Program output: 51                 
Correct output: 7                   | Program output: 96                 
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: 33                 
Correct output: -73                 | Program output: 34                 
Correct output: -68                 | Program output: 60                 
Correct output: -72                 | Program output: 76                 
Correct output: -95                 | Program output: -53                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: 79                 
Correct output: -98                 | Program output: 96                 
Correct output: 8                   | Program output: 27                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: 94                 
Correct output: -91                 | Program output: -1                 
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -74                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: 68                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_empty} {:close 1, :instruction print_integer})
Lexicase best program: (in3 exec_rot (integer_sub boolean_shove) (print_integer exec_yank integer_min boolean_invert_first_then_and exec_yank boolean_invert_second_then_and boolean_and boolean_empty boolean_empty print_integer) ())
Lexicase best errors: [0 1 0 1 1 0 0 1 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_empty} {:close 1, :instruction print_integer})
Zero cases best program: (in3 exec_rot (integer_sub boolean_shove) (print_integer exec_yank integer_min boolean_invert_first_then_and exec_yank boolean_invert_second_then_and boolean_and boolean_empty boolean_empty print_integer) ())
Zero cases best errors: [0 1 0 1 1 0 0 1 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (140 198 140 118 118 293 140 118 118 200)
Population mean number of elite cases: 1.58
Count of perfect (error zero) individuals by case: (140 198 140 118 118 293 140 118 118 200)
Population mean number of perfect (error zero) cases: 1.58
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_min} {:close 0, :instruction exec_y} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_empty} {:close 1, :instruction print_integer} {:close 1, :instruction exec_s})
Best program: (in3 integer_sub boolean_shove print_integer integer_dup exec_yank integer_min exec_y (print_boolean) boolean_invert_second_then_and boolean_empty boolean_empty print_integer exec_s () () ())
Errors: [0 1 0 1 1 0 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 19
Percent parens: 0.263
--- Population Statistics ---
Average total errors in population: 8.417
Median total errors in population: 10
Error averages by case: (0.86 0.802 0.86 0.882 0.882 0.707 0.86 0.882 0.882 0.8)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 26.194
Average program size in population (points): 36.881
Average percent parens in population: 0.305
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 33
Genome diversity (% unique genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 33
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1781847
--- Timings ---
Current time: 1559593961533 milliseconds
Total Time:           9.0 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         4.3 seconds, 47.7%
Fitness Testing:      3.1 seconds, 34.6%
Report:               1.5 seconds, 16.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 661
Test mean error for best: 0.66100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -1                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 94                 
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: 25                 
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -55                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: 57                 
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -57                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: 16                 
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: 46                 
Correct output: -92                 | Program output: 56                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: 75                 
Correct output: -76                 | Program output: 51                 
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: 25                 
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: 20                 
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: 39                 
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: 37                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: 57                 
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 1, :instruction exec_when} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*count})
Lexicase best program: (boolean_flush exec_rot (in2) (exec_when () print_integer) (boolean_empty boolean_or) boolean_yankdup exec_swap (integer_pop exec_do*count ()) ())
Lexicase best errors: [1 1 1 0 1 0 0 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 19
Percent parens: 0.421
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 1, :instruction exec_when} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*count})
Zero cases best program: (boolean_flush exec_rot (in2) (exec_when () print_integer) (boolean_empty boolean_or) boolean_yankdup exec_swap (integer_pop exec_do*count ()) ())
Zero cases best errors: [1 1 1 0 1 0 0 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 19
Percent parens: 0.421
--- Lexicase Population Statistics ---
Count of elite individuals by case: (201 239 441 736 239 21 21 203 23 21)
Population mean number of elite cases: 2.14
Count of perfect (error zero) individuals by case: (201 239 441 736 239 21 21 203 23 21)
Population mean number of perfect (error zero) cases: 2.14
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction boolean_flush} {:close 1, :instruction in2} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_when} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_fromboolean})
Best program: (boolean_flush in2 boolean_dup exec_when () print_integer boolean_empty boolean_or boolean_yankdup integer_pop integer_fromboolean)
Errors: [1 1 1 0 1 0 0 1 0 0]
Total: 5
Mean: 0.5
Genome size: 10
Size: 12
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 7.855
Median total errors in population: 9
Error averages by case: (0.799 0.761 0.559 0.264 0.761 0.979 0.979 0.797 0.977 0.979)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 37.522
Average program size in population (points): 52.445
Average percent parens in population: 0.284
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 6
Genome diversity (% unique genomes):	 0.985
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.985
Total error diversity:				 0.006
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.096
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2127345
--- Timings ---
Current time: 1559593963393 milliseconds
Total Time:          11.3 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.6 seconds, 49.8%
Fitness Testing:      3.4 seconds, 30.4%
Report:               2.1 seconds, 18.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 408
Test mean error for best: 0.40800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 32                 
Correct output: 2                   | Program output: 12                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 25                 
Correct output: 11                  | Program output: 37                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 63                 
Correct output: 59                  | Program output: 71                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 44                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 32                 
Correct output: -75                 | Program output: -75                
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: -74                
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -95                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: -10                
Correct output: 12                  | Program output: 60                 
Correct output: -100                | Program output: -100               
Correct output: -22                 | Program output: -8                 
Correct output: -68                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 14                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: 18                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -51                
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 14                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: -64                
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: -5                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: -30                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: -13                
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -3                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: -16                
Correct output: -46                 | Program output: 14                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Lexicase best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) boolean_yankdup exec_k (exec_swap (integer_fromboolean) ()) ())
Lexicase best errors: [0 1 0 0 1 1 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 25
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Zero cases best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) boolean_yankdup exec_k (exec_swap (integer_fromboolean) ()) ())
Zero cases best errors: [0 1 0 0 1 1 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 25
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (742 4 500 752 173 173 564 242 242 393)
Population mean number of elite cases: 3.79
Count of perfect (error zero) individuals by case: (742 4 500 752 173 173 564 242 242 393)
Population mean number of perfect (error zero) cases: 3.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) boolean_yankdup exec_k (exec_swap (integer_fromboolean) ()) ())
Errors: [0 1 0 0 1 1 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 15
Size: 25
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.215
Median total errors in population: 5
Error averages by case: (0.258 0.996 0.5 0.248 0.827 0.827 0.436 0.758 0.758 0.607)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.736
Average program size in population (points): 28.381
Average percent parens in population: 0.322
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 18
Genome diversity (% unique genomes):	 0.94
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.94
Total error diversity:				 0.008
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.092
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2379970
--- Timings ---
Current time: 1559593965012 milliseconds
Total Time:          12.9 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         6.8 seconds, 52.4%
Fitness Testing:      3.8 seconds, 29.0%
Report:               2.3 seconds, 17.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 408
Test mean error for best: 0.40800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 32                 
Correct output: 2                   | Program output: 12                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 25                 
Correct output: 11                  | Program output: 37                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 63                 
Correct output: 59                  | Program output: 71                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 44                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 32                 
Correct output: -75                 | Program output: -75                
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: -74                
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -95                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: -10                
Correct output: 12                  | Program output: 60                 
Correct output: -100                | Program output: -100               
Correct output: -22                 | Program output: -8                 
Correct output: -68                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 14                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: 18                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -51                
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 14                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: -64                
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: -5                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: -30                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: -13                
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -3                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: -16                
Correct output: -46                 | Program output: 14                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Lexicase best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) exec_k (exec_swap (integer_fromboolean) ()) ())
Lexicase best errors: [1 1 0 1 0 1 0 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 24
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Zero cases best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) exec_k (exec_swap (integer_fromboolean) ()) ())
Zero cases best errors: [1 1 0 1 0 1 0 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 24
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (87 163 724 103 361 86 360 163 356 724)
Population mean number of elite cases: 3.13
Count of perfect (error zero) individuals by case: (87 163 724 103 361 86 360 163 356 724)
Population mean number of perfect (error zero) cases: 3.13
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_shove} {:close 0, :instruction exec_s} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Best program: (exec_shove (exec_s (boolean_flush) (exec_rot (in2) (in1 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) boolean_yankdup exec_k (exec_swap (integer_fromboolean) ()) ()) ()))
Errors: [1 1 0 1 0 1 0 1 0 0]
Total: 5
Mean: 0.5
Genome size: 16
Size: 29
Percent parens: 0.448
--- Population Statistics ---
Average total errors in population: 6.873
Median total errors in population: 6
Error averages by case: (0.913 0.837 0.276 0.897 0.639 0.914 0.64 0.837 0.644 0.276)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 21.989
Average program size in population (points): 32.079
Average percent parens in population: 0.328
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 32
Genome diversity (% unique genomes):	 0.902
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.902
Total error diversity:				 0.005
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2652870
--- Timings ---
Current time: 1559593966662 milliseconds
Total Time:          14.6 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         8.0 seconds, 54.7%
Fitness Testing:      4.0 seconds, 27.6%
Report:               2.5 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 417
Test mean error for best: 0.41700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 28                 
Correct output: 1                   | Program output: 13                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 33                 
Correct output: 0                   | Program output: 50                 
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 23                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 1                  
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 42                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 21                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: 62                 
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -55                
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -33                
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: -50                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: 44                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: 7                  
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: -13                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: 23                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: -1                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_when} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 0, :instruction in3} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_eq})
Lexicase best program: (boolean_flush exec_rot (in2 in2) (integer_yankdup exec_when () print_integer) (boolean_empty in3 boolean_or) integer_dup_times boolean_yankdup boolean_dup_times exec_swap (boolean_eq integer_swap integer_pop boolean_empty boolean_eq) ())
Lexicase best errors: [1 0 0 0 1 0 0 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 26
Percent parens: 0.269
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_when} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 0, :instruction in3} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_eq})
Zero cases best program: (boolean_flush exec_rot (in2 in2) (integer_yankdup exec_when () print_integer) (boolean_empty in3 boolean_or) integer_dup_times boolean_yankdup boolean_dup_times exec_swap (boolean_eq integer_swap integer_pop boolean_empty boolean_eq) ())
Zero cases best errors: [1 0 0 0 1 0 0 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 26
Percent parens: 0.269
--- Lexicase Population Statistics ---
Count of elite individuals by case: (191 194 195 196 193 248 195 193 189 247)
Population mean number of elite cases: 2.04
Count of perfect (error zero) individuals by case: (191 194 195 196 193 248 195 193 189 247)
Population mean number of perfect (error zero) cases: 2.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_noop} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_when} {:close 1, :instruction print_integer} {:close 0, :instruction in3} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_eq} {:close 1, :instruction integer_fromboolean})
Best program: (exec_noop boolean_flush exec_rot (in2) (integer_min integer_yankdup exec_when () print_integer) (in3 boolean_or) integer_dup_times exec_shove (boolean_yankdup exec_swap (integer_swap integer_pop exec_do*range () boolean_eq) (integer_fromboolean)))
Errors: [1 0 0 0 1 0 0 1 1 0]
Total: 4
Mean: 0.4
Genome size: 19
Size: 28
Percent parens: 0.321
--- Population Statistics ---
Average total errors in population: 7.959
Median total errors in population: 8
Error averages by case: (0.809 0.806 0.805 0.804 0.807 0.752 0.805 0.807 0.811 0.753)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 23.875
Average program size in population (points): 33.853
Average percent parens in population: 0.304
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 17
Genome diversity (% unique genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.007
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.131
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 2938197
--- Timings ---
Current time: 1559593968362 milliseconds
Total Time:          16.3 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         9.2 seconds, 56.4%
Fitness Testing:      4.3 seconds, 26.5%
Report:               2.7 seconds, 16.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 383
Test mean error for best: 0.38300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 1                   | Program output: 13                 
Correct output: 3                   | Program output: 34                 
Correct output: 7                   | Program output: 67                 
Correct output: 32                  | Program output: 88                 
Correct output: 9                   | Program output: 77                 
Correct output: 8                   | Program output: 32                 
Correct output: 2                   | Program output: 12                 
Correct output: 0                   | Program output: 50                 
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 23                 
Correct output: 0                   | Program output: 52                 
Correct output: 1                   | Program output: 1                  
Correct output: 59                  | Program output: 71                 
Correct output: 42                  | Program output: 42                 
Correct output: 13                  | Program output: 25                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 32                 
Correct output: -75                 | Program output: -75                
Correct output: -94                 | Program output: 82                 
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: -74                
Correct output: -69                 | Program output: -43                
Correct output: -95                 | Program output: -95                
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -33                
Correct output: 12                  | Program output: 60                 
Correct output: -100                | Program output: -100               
Correct output: -22                 | Program output: -8                 
Correct output: -68                 | Program output: -50                
Correct output: -76                 | Program output: -23                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: 14                 
Correct output: -43                 | Program output: 88                 
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: 46                 
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 14                 
Correct output: -80                 | Program output: -60                
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 30                 
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: -5                 
Correct output: -65                 | Program output: 51                 
Correct output: -91                 | Program output: 1                  
Correct output: -26                 | Program output: 16                 
Correct output: -63                 | Program output: -8                 
Correct output: 7                   | Program output: 30                 
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: 34                 
Correct output: -68                 | Program output: 60                 
Correct output: -72                 | Program output: -13                
Correct output: -95                 | Program output: -53                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -10                
Correct output: 8                   | Program output: 27                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: -1                 
Correct output: -83                 | Program output: -76                
Correct output: -95                 | Program output: -74                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: 14                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Lexicase best program: (boolean_flush exec_rot (in2) (in1 in3 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) exec_k (exec_swap (integer_fromboolean) ()) ())
Lexicase best errors: [0 0 0 0 1 0 0 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 23
Percent parens: 0.391
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Zero cases best program: (boolean_flush exec_rot (in2) (in1 in3 exec_when () integer_min integer_rot print_integer) (boolean_empty boolean_or) exec_k (exec_swap (integer_fromboolean) ()) ())
Zero cases best errors: [0 0 0 0 1 0 0 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 23
Percent parens: 0.391
--- Lexicase Population Statistics ---
Count of elite individuals by case: (735 301 355 351 402 301 735 300 108 618)
Population mean number of elite cases: 4.21
Count of perfect (error zero) individuals by case: (735 301 355 351 402 301 735 300 108 618)
Population mean number of perfect (error zero) cases: 4.21
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 1, :instruction exec_when} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 1, :instruction integer_fromboolean})
Best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 in3 exec_when () integer_min integer_rot print_integer) (boolean_or) exec_k (exec_swap (integer_fromboolean) ()) ())
Errors: [0 0 0 0 1 0 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 5.794
Median total errors in population: 5
Error averages by case: (0.265 0.699 0.645 0.649 0.598 0.699 0.265 0.7 0.892 0.382)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.13
Average program size in population (points): 29.018
Average percent parens in population: 0.348
Minimum age in population: 8.0
Maximum age in population: 8.0
Average age in population: 8.0
Median age in population: 8.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 13
Genome diversity (% unique genomes):	 0.935
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.935
Total error diversity:				 0.009
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.136
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 3279471
--- Timings ---
Current time: 1559593969926 milliseconds
Total Time:          17.8 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        10.2 seconds, 57.3%
Fitness Testing:      4.6 seconds, 26.0%
Report:               2.9 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 226
Test mean error for best: 0.22600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 57                 
Correct output: 59                  | Program output: 59                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 44                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: -74                
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -95                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 12                 
Correct output: -100                | Program output: -100               
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 42                 
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: 18                 
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -54                
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 14                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: -59                
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: -64                
Correct output: -90                 | Program output: 38                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: -5                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: 19                 
Correct output: -90                 | Program output: -20                
Correct output: -56                 | Program output: -30                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -34                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: -16                
Correct output: -46                 | Program output: -46                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k})
Lexicase best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 integer_min integer_min integer_rot print_integer) (in4 boolean_yankdup boolean_pop exec_k () ()))
Lexicase best errors: [0 1 1 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 20
Percent parens: 0.350
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k})
Zero cases best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 integer_min integer_min integer_rot print_integer) (in4 boolean_yankdup boolean_pop exec_k () ()))
Zero cases best errors: [0 1 1 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 20
Percent parens: 0.350
--- Lexicase Population Statistics ---
Count of elite individuals by case: (479 334 334 173 647 138 151 680 137 141)
Population mean number of elite cases: 3.21
Count of perfect (error zero) individuals by case: (479 334 334 173 647 138 151 680 137 141)
Population mean number of perfect (error zero) cases: 3.21
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k})
Best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 integer_min integer_min integer_rot print_integer) (in4 boolean_yankdup boolean_pop exec_k () ()))
Errors: [0 1 1 0 0 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 13
Size: 20
Percent parens: 0.350
--- Population Statistics ---
Average total errors in population: 6.786
Median total errors in population: 7
Error averages by case: (0.521 0.666 0.666 0.827 0.353 0.862 0.849 0.32 0.863 0.859)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 16.047
Average program size in population (points): 24.792
Average percent parens in population: 0.350
Minimum age in population: 9.0
Maximum age in population: 9.0
Average age in population: 9.0
Median age in population: 9.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 11
Genome diversity (% unique genomes):	 0.958
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.958
Total error diversity:				 0.009
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 3544270
--- Timings ---
Current time: 1559593971399 milliseconds
Total Time:          19.3 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        11.3 seconds, 58.3%
Fitness Testing:      4.9 seconds, 25.4%
Report:               3.0 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Smallest problem report - generation 10
Test total error for best: 226
Test mean error for best: 0.22600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 57                 
Correct output: 59                  | Program output: 59                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 44                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: -74                
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -95                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 12                 
Correct output: -100                | Program output: -100               
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 42                 
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: 18                 
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -54                
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 14                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: -59                
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: -64                
Correct output: -90                 | Program output: 38                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: -5                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: 19                 
Correct output: -90                 | Program output: -20                
Correct output: -56                 | Program output: -30                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: -50                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -34                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: -16                
Correct output: -46                 | Program output: -46                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 1, :instruction exec_rot} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k})
Lexicase best program: (exec_shove (boolean_flush) exec_rot (in2) (exec_rot () (in1 integer_min integer_min integer_rot print_integer) (in4 boolean_yankdup boolean_pop exec_k () ())) ())
Lexicase best errors: [0 0 0 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 24
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 1, :instruction exec_rot} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k})
Zero cases best program: (exec_shove (boolean_flush) exec_rot (in2) (exec_rot () (in1 integer_min integer_min integer_rot print_integer) (in4 boolean_yankdup boolean_pop exec_k () ())) ())
Zero cases best errors: [0 0 0 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 24
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (370 351 325 322 383 391 384 348 650 650)
Population mean number of elite cases: 4.17
Count of perfect (error zero) individuals by case: (370 351 325 322 383 391 384 348 650 650)
Population mean number of perfect (error zero) cases: 4.17
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_rot} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_k})
Best program: (exec_shove (boolean_flush) exec_rot (in2) (in1 integer_min integer_min integer_rot print_integer) (in4 boolean_yankdup boolean_pop exec_k () ()))
Errors: [0 0 0 0 1 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 13
Size: 20
Percent parens: 0.350
--- Population Statistics ---
Average total errors in population: 5.826
Median total errors in population: 5
Error averages by case: (0.63 0.649 0.675 0.678 0.617 0.609 0.616 0.652 0.35 0.35)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.175
Average program size in population (points): 22.489
Average percent parens in population: 0.366
Minimum age in population: 10.0
Maximum age in population: 10.0
Average age in population: 10.0
Median age in population: 10.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 45
Genome diversity (% unique genomes):	 0.849
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.849
Total error diversity:				 0.01
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.145
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 3855073
--- Timings ---
Current time: 1559593972907 milliseconds
Total Time:          20.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        12.3 seconds, 59.2%
Fitness Testing:      5.2 seconds, 25.0%
Report:               3.2 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 200
Test mean error for best: 0.20000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 1
Test Case    5 | Error: 1
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 1
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 1
Test Case   37 | Error: 1
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 1
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 1
Test Case   72 | Error: 0
Test Case   73 | Error: 1
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 1
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 1
Test Case  221 | Error: 0
Test Case  222 | Error: 1
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 1
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 1
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 1
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 1
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 1
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 1
Test Case  342 | Error: 0
Test Case  343 | Error: 1
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 1
Test Case  355 | Error: 1
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 1
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 0
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 1
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 1
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 0
Test Case  499 | Error: 1
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 1
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 1
Test Case  523 | Error: 0
Test Case  524 | Error: 1
Test Case  525 | Error: 0
Test Case  526 | Error: 1
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 1
Test Case  537 | Error: 1
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 1
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 1
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 1
Test Case  638 | Error: 1
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 1
Test Case  681 | Error: 0
Test Case  682 | Error: 1
Test Case  683 | Error: 0
Test Case  684 | Error: 1
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 1
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 1
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 1
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 1
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 1
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 1
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 1
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 0
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 1
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 1
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 1
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 1
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 1
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 34                 
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 88                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 38                 
Correct output: 1                   | Program output: 1                  
Correct output: 59                  | Program output: 59                 
Correct output: 42                  | Program output: 42                 
Correct output: 13                  | Program output: 25                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -94                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: -74                
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -95                
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 12                 
Correct output: -100                | Program output: -100               
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: -23                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 14                 
Correct output: -80                 | Program output: -60                
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 0                  
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: -5                 
Correct output: -65                 | Program output: -52                
Correct output: -91                 | Program output: 1                  
Correct output: -26                 | Program output: 16                 
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -26                
Correct output: -68                 | Program output: 60                 
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -69                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -10                
Correct output: 8                   | Program output: 27                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: -76                
Correct output: -95                 | Program output: -82                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: -46                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_shove} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_s} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_swap})
Lexicase best program: (exec_shove (integer_gt boolean_flush) exec_rot (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) (exec_s (exec_rot (exec_swap () ()) () ()) () ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 31
Percent parens: 0.452
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_shove} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_s} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_swap})
Zero cases best program: (exec_shove (integer_gt boolean_flush) exec_rot (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) (exec_s (exec_rot (exec_swap () ()) () ()) () ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 31
Percent parens: 0.452
--- Lexicase Population Statistics ---
Count of elite individuals by case: (718 750 269 364 597 763 368 354 460 268)
Population mean number of elite cases: 4.91
Count of perfect (error zero) individuals by case: (718 750 269 364 597 763 368 354 460 268)
Population mean number of perfect (error zero) cases: 4.91
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_shove} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_rot} {:close 1, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_swap})
Best program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 18
Size: 29
Percent parens: 0.379
--- Population Statistics ---
Average total errors in population: 5.089
Median total errors in population: 5
Error averages by case: (0.282 0.25 0.731 0.636 0.403 0.237 0.632 0.646 0.54 0.732)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.638
Average program size in population (points): 22.999
Average percent parens in population: 0.358
Minimum age in population: 11.0
Maximum age in population: 11.0
Average age in population: 11.0
Median age in population: 11.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 21
Genome diversity (% unique genomes):	 0.934
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.934
Total error diversity:				 0.011
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.132
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 4054117
--- Timings ---
Current time: 1559593974408 milliseconds
Total Time:          22.3 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        13.4 seconds, 60.1%
Fitness Testing:      5.4 seconds, 24.4%
Report:               3.3 seconds, 14.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 11
Successful program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 29


Auto-simplifying with starting size: 29
step: 0
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 500
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 1000
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 1500
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 2000
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 2500
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 3000
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 3500
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 4000
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 4500
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

step: 5000
program: (exec_shove (integer_stackdepth) integer_gt boolean_flush exec_rot (in2) (in4 in3 in1 integer_min exec_when () boolean_not integer_min print_integer) (boolean_empty boolean_or) exec_rot (exec_swap () ()) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 29

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 200
Test mean error for best: 0.20000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 1
Test Case    5 | Error: 1
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 1
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 1
Test Case   37 | Error: 1
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 1
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 1
Test Case   72 | Error: 0
Test Case   73 | Error: 1
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 1
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 1
Test Case  221 | Error: 0
Test Case  222 | Error: 1
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 1
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 1
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 1
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 1
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 1
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 1
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 1
Test Case  342 | Error: 0
Test Case  343 | Error: 1
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 1
Test Case  355 | Error: 1
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 1
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 0
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 1
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 1
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 0
Test Case  499 | Error: 1
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 1
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 1
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 1
Test Case  523 | Error: 0
Test Case  524 | Error: 1
Test Case  525 | Error: 0
Test Case  526 | Error: 1
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 1
Test Case  537 | Error: 1
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 1
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 1
Test Case  583 | Error: 1
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 1
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 1
Test Case  638 | Error: 1
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 1
Test Case  681 | Error: 0
Test Case  682 | Error: 1
Test Case  683 | Error: 0
Test Case  684 | Error: 1
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 1
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 1
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 1
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 1
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 1
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 1
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 1
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 1
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 1
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 0
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 1
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 1
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 1
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 1
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 1
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 34                 
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 88                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 38                 
Correct output: 1                   | Program output: 1                  
Correct output: 59                  | Program output: 59                 
Correct output: 42                  | Program output: 42                 
Correct output: 13                  | Program output: 25                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -94                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: -74                
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -95                
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 12                 
Correct output: -100                | Program output: -100               
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: -23                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -52                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 14                 
Correct output: -80                 | Program output: -60                
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 0                  
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: -5                 
Correct output: -65                 | Program output: -52                
Correct output: -91                 | Program output: 1                  
Correct output: -26                 | Program output: 16                 
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -26                
Correct output: -68                 | Program output: 60                 
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -69                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: -65                
Correct output: -98                 | Program output: -10                
Correct output: 8                   | Program output: 27                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: -76                
Correct output: -95                 | Program output: -82                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: -46                
;;******************************
