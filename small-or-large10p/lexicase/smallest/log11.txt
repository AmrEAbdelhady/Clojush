Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-50 -50 -87 -50] -87] [[-19 -19 18 -19] -19] [[93 65 65 65] 65] [[-89 -89 -89 -41] -89] [[18 17 17 17] 17] [[-35 -66 -35 -35] -66] [[4 -26 -26 -26] -26] [[-98 15 15 15] -98] [[-79 -25 -25 -25] -79] [[12 73 73 73] 12] [(-78 -78 -78 -78) -78] [(-37 -37 -37 -37) -37] [(-22 -22 -22 -22) -22] [(-97 -97 -97 -97) -97] [(67 67 67 67) 67] [(96 0 82 10) 0] [(86 32 64 62) 32] [(12 96 77 24) 12] [(47 26 18 39) 18] [(1 35 12 88) 1] [(2 20 46 19) 2] [(95 27 97 0) 0] [(23 72 48 58) 23] [(77 32 16 4) 4] [(30 13 16 44) 13] [(1 73 47 96) 1] [(27 64 62 49) 27] [(35 56 57 31) 31] [(7 62 88 70) 7] [(72 31 69 79) 31] [(34 83 81 12) 12] [(69 5 22 87) 5] [(26 37 45 70) 26] [(81 67 0 16) 0] [(90 13 11 39) 11] [(-21 -25 -36 -22) -36] [(-54 -41 91 -27) -54] [(-34 -2 31 -96) -96] [(91 52 53 88) 52] [(80 70 -40 21) -40] [(-77 -30 -10 -100) -100] [(85 -86 -57 38) -86] [(58 -46 44 -33) -46] [(-53 45 -16 -63) -63] [(-70 6 52 -2) -70] [(-73 42 -27 -16) -73] [(-92 20 57 -31) -92] [(22 18 56 90) 18] [(-19 15 49 -100) -100] [(33 66 -94 18) -94] [(-55 -25 55 63) -55] [(55 31 8 -94) -94] [(-12 -79 68 50) -79] [(-89 23 -66 -66) -89] [(-100 -45 89 -13) -100] [(-32 46 91 -9) -32] [(17 63 45 49) 17] [(35 -80 83 46) -80] [(-61 46 -23 77) -61] [(-39 64 -7 56) -39] [(-63 -96 3 -51) -96] [(-16 -60 -56 94) -60] [(99 84 38 21) 21] [(51 79 34 -69) -69] [(-31 -35 15 80) -35] [(-87 3 63 44) -87] [(23 44 66 24) 23] [(92 21 -67 61) -67] [(-19 34 -7 40) -19] [(-17 78 92 90) -17] [(-40 -36 -68 -57) -68] [(-62 23 -12 18) -62] [(-14 -60 -56 91) -60] [(-77 -94 4 97) -94] [(15 -1 -52 -46) -52] [(-71 -31 96 -99) -99] [(9 82 46 93) 9] [(-37 52 -42 -66) -66] [(-7 7 -34 30) -34] [(-78 -78 70 -64) -78] [(-13 -52 90 94) -52] [(-69 93 66 -19) -69] [(50 -98 30 19) -98] [(88 -66 -29 -14) -66] [(11 65 -87 56) -87] [(-99 69 40 41) -99] [(-80 33 -37 37) -80] [(14 -87 17 23) -87] [(49 26 -86 -20) -86] [(-57 86 -96 -4) -96] [(53 -80 100 -86) -86] [(55 95 -79 80) -79] [(18 62 90 4) 4] [(-34 -27 100 64) -34] [(6 52 2 -85) -85])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-50 -50 -87 -50] -87]
Train Case:   6 | Input/Output: [[-19 -19 18 -19] -19]
Train Case:   7 | Input/Output: [[93 65 65 65] 65]
Train Case:   8 | Input/Output: [[-89 -89 -89 -41] -89]
Train Case:   9 | Input/Output: [[18 17 17 17] 17]
Train Case:  10 | Input/Output: [[-35 -66 -35 -35] -66]
Train Case:  11 | Input/Output: [[4 -26 -26 -26] -26]
Train Case:  12 | Input/Output: [[-98 15 15 15] -98]
Train Case:  13 | Input/Output: [[-79 -25 -25 -25] -79]
Train Case:  14 | Input/Output: [[12 73 73 73] 12]
Train Case:  15 | Input/Output: [(-78 -78 -78 -78) -78]
Train Case:  16 | Input/Output: [(-37 -37 -37 -37) -37]
Train Case:  17 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:  18 | Input/Output: [(-97 -97 -97 -97) -97]
Train Case:  19 | Input/Output: [(67 67 67 67) 67]
Train Case:  20 | Input/Output: [(96 0 82 10) 0]
Train Case:  21 | Input/Output: [(86 32 64 62) 32]
Train Case:  22 | Input/Output: [(12 96 77 24) 12]
Train Case:  23 | Input/Output: [(47 26 18 39) 18]
Train Case:  24 | Input/Output: [(1 35 12 88) 1]
Train Case:  25 | Input/Output: [(2 20 46 19) 2]
Train Case:  26 | Input/Output: [(95 27 97 0) 0]
Train Case:  27 | Input/Output: [(23 72 48 58) 23]
Train Case:  28 | Input/Output: [(77 32 16 4) 4]
Train Case:  29 | Input/Output: [(30 13 16 44) 13]
Train Case:  30 | Input/Output: [(1 73 47 96) 1]
Train Case:  31 | Input/Output: [(27 64 62 49) 27]
Train Case:  32 | Input/Output: [(35 56 57 31) 31]
Train Case:  33 | Input/Output: [(7 62 88 70) 7]
Train Case:  34 | Input/Output: [(72 31 69 79) 31]
Train Case:  35 | Input/Output: [(34 83 81 12) 12]
Train Case:  36 | Input/Output: [(69 5 22 87) 5]
Train Case:  37 | Input/Output: [(26 37 45 70) 26]
Train Case:  38 | Input/Output: [(81 67 0 16) 0]
Train Case:  39 | Input/Output: [(90 13 11 39) 11]
Train Case:  40 | Input/Output: [(-21 -25 -36 -22) -36]
Train Case:  41 | Input/Output: [(-54 -41 91 -27) -54]
Train Case:  42 | Input/Output: [(-34 -2 31 -96) -96]
Train Case:  43 | Input/Output: [(91 52 53 88) 52]
Train Case:  44 | Input/Output: [(80 70 -40 21) -40]
Train Case:  45 | Input/Output: [(-77 -30 -10 -100) -100]
Train Case:  46 | Input/Output: [(85 -86 -57 38) -86]
Train Case:  47 | Input/Output: [(58 -46 44 -33) -46]
Train Case:  48 | Input/Output: [(-53 45 -16 -63) -63]
Train Case:  49 | Input/Output: [(-70 6 52 -2) -70]
Train Case:  50 | Input/Output: [(-73 42 -27 -16) -73]
Train Case:  51 | Input/Output: [(-92 20 57 -31) -92]
Train Case:  52 | Input/Output: [(22 18 56 90) 18]
Train Case:  53 | Input/Output: [(-19 15 49 -100) -100]
Train Case:  54 | Input/Output: [(33 66 -94 18) -94]
Train Case:  55 | Input/Output: [(-55 -25 55 63) -55]
Train Case:  56 | Input/Output: [(55 31 8 -94) -94]
Train Case:  57 | Input/Output: [(-12 -79 68 50) -79]
Train Case:  58 | Input/Output: [(-89 23 -66 -66) -89]
Train Case:  59 | Input/Output: [(-100 -45 89 -13) -100]
Train Case:  60 | Input/Output: [(-32 46 91 -9) -32]
Train Case:  61 | Input/Output: [(17 63 45 49) 17]
Train Case:  62 | Input/Output: [(35 -80 83 46) -80]
Train Case:  63 | Input/Output: [(-61 46 -23 77) -61]
Train Case:  64 | Input/Output: [(-39 64 -7 56) -39]
Train Case:  65 | Input/Output: [(-63 -96 3 -51) -96]
Train Case:  66 | Input/Output: [(-16 -60 -56 94) -60]
Train Case:  67 | Input/Output: [(99 84 38 21) 21]
Train Case:  68 | Input/Output: [(51 79 34 -69) -69]
Train Case:  69 | Input/Output: [(-31 -35 15 80) -35]
Train Case:  70 | Input/Output: [(-87 3 63 44) -87]
Train Case:  71 | Input/Output: [(23 44 66 24) 23]
Train Case:  72 | Input/Output: [(92 21 -67 61) -67]
Train Case:  73 | Input/Output: [(-19 34 -7 40) -19]
Train Case:  74 | Input/Output: [(-17 78 92 90) -17]
Train Case:  75 | Input/Output: [(-40 -36 -68 -57) -68]
Train Case:  76 | Input/Output: [(-62 23 -12 18) -62]
Train Case:  77 | Input/Output: [(-14 -60 -56 91) -60]
Train Case:  78 | Input/Output: [(-77 -94 4 97) -94]
Train Case:  79 | Input/Output: [(15 -1 -52 -46) -52]
Train Case:  80 | Input/Output: [(-71 -31 96 -99) -99]
Train Case:  81 | Input/Output: [(9 82 46 93) 9]
Train Case:  82 | Input/Output: [(-37 52 -42 -66) -66]
Train Case:  83 | Input/Output: [(-7 7 -34 30) -34]
Train Case:  84 | Input/Output: [(-78 -78 70 -64) -78]
Train Case:  85 | Input/Output: [(-13 -52 90 94) -52]
Train Case:  86 | Input/Output: [(-69 93 66 -19) -69]
Train Case:  87 | Input/Output: [(50 -98 30 19) -98]
Train Case:  88 | Input/Output: [(88 -66 -29 -14) -66]
Train Case:  89 | Input/Output: [(11 65 -87 56) -87]
Train Case:  90 | Input/Output: [(-99 69 40 41) -99]
Train Case:  91 | Input/Output: [(-80 33 -37 37) -80]
Train Case:  92 | Input/Output: [(14 -87 17 23) -87]
Train Case:  93 | Input/Output: [(49 26 -86 -20) -86]
Train Case:  94 | Input/Output: [(-57 86 -96 -4) -96]
Train Case:  95 | Input/Output: [(53 -80 100 -86) -86]
Train Case:  96 | Input/Output: [(55 95 -79 80) -79]
Train Case:  97 | Input/Output: [(18 62 90 4) 4]
Train Case:  98 | Input/Output: [(-34 -27 100 64) -34]
Train Case:  99 | Input/Output: [(6 52 2 -85) -85]
Test Case:   0 | Input/Output: [[62 -76 -76 -76] -76]
Test Case:   1 | Input/Output: [[-85 -85 6 -85] -85]
Test Case:   2 | Input/Output: [[78 78 78 -51] -51]
Test Case:   3 | Input/Output: [[-14 -41 -41 -41] -41]
Test Case:   4 | Input/Output: [[-13 -13 -13 85] -13]
Test Case:   5 | Input/Output: [[75 75 -65 75] -65]
Test Case:   6 | Input/Output: [[86 86 86 -76] -76]
Test Case:   7 | Input/Output: [[-100 -100 -100 95] -100]
Test Case:   8 | Input/Output: [[-2 51 -2 -2] -2]
Test Case:   9 | Input/Output: [[-35 -59 -35 -35] -59]
Test Case:  10 | Input/Output: [[-17 73 73 73] -17]
Test Case:  11 | Input/Output: [[5 -39 5 5] -39]
Test Case:  12 | Input/Output: [[87 -90 -90 -90] -90]
Test Case:  13 | Input/Output: [[-61 -3 -61 -61] -61]
Test Case:  14 | Input/Output: [[70 70 70 -59] -59]
Test Case:  15 | Input/Output: [[-56 -7 -56 -56] -56]
Test Case:  16 | Input/Output: [[32 32 -4 32] -4]
Test Case:  17 | Input/Output: [[65 -48 -48 -48] -48]
Test Case:  18 | Input/Output: [[61 61 -41 61] -41]
Test Case:  19 | Input/Output: [[69 90 69 69] 69]
Test Case:  20 | Input/Output: [[-47 -47 -59 -47] -59]
Test Case:  21 | Input/Output: [[-87 -87 -87 78] -87]
Test Case:  22 | Input/Output: [[-90 -90 -69 -90] -90]
Test Case:  23 | Input/Output: [[40 40 15 40] 15]
Test Case:  24 | Input/Output: [[-18 -18 -18 43] -18]
Test Case:  25 | Input/Output: [[99 99 52 99] 52]
Test Case:  26 | Input/Output: [[-61 -61 -26 -61] -61]
Test Case:  27 | Input/Output: [[28 28 92 28] 28]
Test Case:  28 | Input/Output: [[33 33 -100 33] -100]
Test Case:  29 | Input/Output: [[-87 -87 100 -87] -87]
Test Case:  30 | Input/Output: [[88 88 78 88] 78]
Test Case:  31 | Input/Output: [[10 10 -66 10] -66]
Test Case:  32 | Input/Output: [[97 70 70 70] 70]
Test Case:  33 | Input/Output: [[38 45 45 45] 38]
Test Case:  34 | Input/Output: [[-84 93 93 93] -84]
Test Case:  35 | Input/Output: [[68 -25 -25 -25] -25]
Test Case:  36 | Input/Output: [[84 -41 -41 -41] -41]
Test Case:  37 | Input/Output: [[98 98 -60 98] -60]
Test Case:  38 | Input/Output: [[-6 39 -6 -6] -6]
Test Case:  39 | Input/Output: [[-23 -14 -23 -23] -23]
Test Case:  40 | Input/Output: [[71 71 70 71] 70]
Test Case:  41 | Input/Output: [[65 -100 65 65] -100]
Test Case:  42 | Input/Output: [[-90 -90 33 -90] -90]
Test Case:  43 | Input/Output: [[24 24 24 23] 23]
Test Case:  44 | Input/Output: [[10 10 -93 10] -93]
Test Case:  45 | Input/Output: [[5 73 73 73] 5]
Test Case:  46 | Input/Output: [[-8 5 5 5] -8]
Test Case:  47 | Input/Output: [[-32 -32 -81 -32] -81]
Test Case:  48 | Input/Output: [[-87 -87 -87 67] -87]
Test Case:  49 | Input/Output: [[2 2 -70 2] -70]
Test Case:  50 | Input/Output: [[66 66 -59 66] -59]
Test Case:  51 | Input/Output: [[99 99 99 -84] -84]
Test Case:  52 | Input/Output: [[-32 -58 -32 -32] -58]
Test Case:  53 | Input/Output: [[-16 15 15 15] -16]
Test Case:  54 | Input/Output: [[-16 79 79 79] -16]
Test Case:  55 | Input/Output: [[-74 -29 -74 -74] -74]
Test Case:  56 | Input/Output: [[9 9 9 -80] -80]
Test Case:  57 | Input/Output: [[-59 63 -59 -59] -59]
Test Case:  58 | Input/Output: [[-75 -75 93 -75] -75]
Test Case:  59 | Input/Output: [[-35 16 -35 -35] -35]
Test Case:  60 | Input/Output: [[-53 -53 -53 -50] -53]
Test Case:  61 | Input/Output: [[43 43 43 -12] -12]
Test Case:  62 | Input/Output: [[-68 -68 -68 -71] -71]
Test Case:  63 | Input/Output: [[-99 -99 89 -99] -99]
Test Case:  64 | Input/Output: [[-62 80 80 80] -62]
Test Case:  65 | Input/Output: [[-86 85 85 85] -86]
Test Case:  66 | Input/Output: [[55 55 55 94] 55]
Test Case:  67 | Input/Output: [[-71 -71 -71 80] -71]
Test Case:  68 | Input/Output: [[-78 -78 -78 75] -78]
Test Case:  69 | Input/Output: [[35 60 60 60] 35]
Test Case:  70 | Input/Output: [[-10 45 45 45] -10]
Test Case:  71 | Input/Output: [[-4 98 -4 -4] -4]
Test Case:  72 | Input/Output: [[65 65 53 65] 53]
Test Case:  73 | Input/Output: [[-92 -92 -58 -92] -92]
Test Case:  74 | Input/Output: [[56 56 -14 56] -14]
Test Case:  75 | Input/Output: [[42 42 70 42] 42]
Test Case:  76 | Input/Output: [[-77 -77 -77 -96] -96]
Test Case:  77 | Input/Output: [[63 63 20 63] 20]
Test Case:  78 | Input/Output: [[26 26 26 -99] -99]
Test Case:  79 | Input/Output: [[-28 45 -28 -28] -28]
Test Case:  80 | Input/Output: [[88 -44 -44 -44] -44]
Test Case:  81 | Input/Output: [[-85 74 -85 -85] -85]
Test Case:  82 | Input/Output: [[95 -99 95 95] -99]
Test Case:  83 | Input/Output: [[-87 -87 -87 -89] -89]
Test Case:  84 | Input/Output: [[6 6 28 6] 6]
Test Case:  85 | Input/Output: [[-90 -90 -90 25] -90]
Test Case:  86 | Input/Output: [[-48 53 -48 -48] -48]
Test Case:  87 | Input/Output: [[19 19 19 -74] -74]
Test Case:  88 | Input/Output: [[23 23 77 23] 23]
Test Case:  89 | Input/Output: [[21 21 21 4] 4]
Test Case:  90 | Input/Output: [[62 -91 62 62] -91]
Test Case:  91 | Input/Output: [[98 73 98 98] 73]
Test Case:  92 | Input/Output: [[-100 -100 -100 89] -100]
Test Case:  93 | Input/Output: [[-5 -5 50 -5] -5]
Test Case:  94 | Input/Output: [[-88 -100 -88 -88] -100]
Test Case:  95 | Input/Output: [[-51 -51 -89 -51] -89]
Test Case:  96 | Input/Output: [[86 86 86 -8] -8]
Test Case:  97 | Input/Output: [[98 -66 98 98] -66]
Test Case:  98 | Input/Output: [[-14 -43 -43 -43] -43]
Test Case:  99 | Input/Output: [[-23 -23 -23 1] -23]
Test Case: 100 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 101 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 102 | Input/Output: [(19 19 19 19) 19]
Test Case: 103 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 104 | Input/Output: [(97 97 97 97) 97]
Test Case: 105 | Input/Output: [(32 32 32 32) 32]
Test Case: 106 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 107 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 108 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 109 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 110 | Input/Output: [(39 39 39 39) 39]
Test Case: 111 | Input/Output: [(82 82 82 82) 82]
Test Case: 112 | Input/Output: [(8 8 8 8) 8]
Test Case: 113 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 114 | Input/Output: [(46 46 46 46) 46]
Test Case: 115 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 116 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 117 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 118 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 119 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 120 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 121 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 122 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 123 | Input/Output: [(6 6 6 6) 6]
Test Case: 124 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 125 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 126 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 127 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 128 | Input/Output: [(65 65 65 65) 65]
Test Case: 129 | Input/Output: [(46 46 46 46) 46]
Test Case: 130 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 131 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 132 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 133 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 134 | Input/Output: [(61 61 61 61) 61]
Test Case: 135 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 136 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 137 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 138 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 139 | Input/Output: [(17 17 17 17) 17]
Test Case: 140 | Input/Output: [(55 55 55 55) 55]
Test Case: 141 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 142 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 143 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 144 | Input/Output: [(13 13 13 13) 13]
Test Case: 145 | Input/Output: [(19 19 19 19) 19]
Test Case: 146 | Input/Output: [(73 73 73 73) 73]
Test Case: 147 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 148 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 149 | Input/Output: [(30 30 30 30) 30]
Test Case: 150 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 151 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 152 | Input/Output: [(6 6 6 6) 6]
Test Case: 153 | Input/Output: [(42 42 42 42) 42]
Test Case: 154 | Input/Output: [(58 58 58 58) 58]
Test Case: 155 | Input/Output: [(25 25 25 25) 25]
Test Case: 156 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 157 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 158 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 159 | Input/Output: [(0 0 0 0) 0]
Test Case: 160 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 161 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 162 | Input/Output: [(45 45 45 45) 45]
Test Case: 163 | Input/Output: [(33 33 33 33) 33]
Test Case: 164 | Input/Output: [(63 63 63 63) 63]
Test Case: 165 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 166 | Input/Output: [(35 35 35 35) 35]
Test Case: 167 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 168 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 169 | Input/Output: [(93 93 93 93) 93]
Test Case: 170 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 171 | Input/Output: [(75 75 75 75) 75]
Test Case: 172 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 173 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 174 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 175 | Input/Output: [(7 7 7 7) 7]
Test Case: 176 | Input/Output: [(8 8 8 8) 8]
Test Case: 177 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 178 | Input/Output: [(56 56 56 56) 56]
Test Case: 179 | Input/Output: [(89 89 89 89) 89]
Test Case: 180 | Input/Output: [(75 75 75 75) 75]
Test Case: 181 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 182 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 183 | Input/Output: [(63 63 63 63) 63]
Test Case: 184 | Input/Output: [(41 41 41 41) 41]
Test Case: 185 | Input/Output: [(5 5 5 5) 5]
Test Case: 186 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 187 | Input/Output: [(90 90 90 90) 90]
Test Case: 188 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 189 | Input/Output: [(22 22 22 22) 22]
Test Case: 190 | Input/Output: [(24 24 24 24) 24]
Test Case: 191 | Input/Output: [(8 8 8 8) 8]
Test Case: 192 | Input/Output: [(98 98 98 98) 98]
Test Case: 193 | Input/Output: [(25 25 25 25) 25]
Test Case: 194 | Input/Output: [(66 66 66 66) 66]
Test Case: 195 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 196 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 197 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 198 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 199 | Input/Output: [(90 90 90 90) 90]
Test Case: 200 | Input/Output: [(90 40 98 11) 11]
Test Case: 201 | Input/Output: [(52 71 37 77) 37]
Test Case: 202 | Input/Output: [(34 1 29 85) 1]
Test Case: 203 | Input/Output: [(37 41 75 54) 37]
Test Case: 204 | Input/Output: [(76 98 54 19) 19]
Test Case: 205 | Input/Output: [(47 7 53 90) 7]
Test Case: 206 | Input/Output: [(23 2 4 94) 2]
Test Case: 207 | Input/Output: [(28 69 94 83) 28]
Test Case: 208 | Input/Output: [(30 82 65 57) 30]
Test Case: 209 | Input/Output: [(42 94 46 22) 22]
Test Case: 210 | Input/Output: [(51 13 77 49) 13]
Test Case: 211 | Input/Output: [(46 83 40 45) 40]
Test Case: 212 | Input/Output: [(22 64 62 51) 22]
Test Case: 213 | Input/Output: [(10 79 77 5) 5]
Test Case: 214 | Input/Output: [(98 74 76 28) 28]
Test Case: 215 | Input/Output: [(73 41 84 74) 41]
Test Case: 216 | Input/Output: [(89 3 94 30) 3]
Test Case: 217 | Input/Output: [(94 88 84 36) 36]
Test Case: 218 | Input/Output: [(88 48 100 58) 48]
Test Case: 219 | Input/Output: [(50 49 37 81) 37]
Test Case: 220 | Input/Output: [(48 64 55 19) 19]
Test Case: 221 | Input/Output: [(47 30 75 90) 30]
Test Case: 222 | Input/Output: [(11 86 98 2) 2]
Test Case: 223 | Input/Output: [(55 93 78 79) 55]
Test Case: 224 | Input/Output: [(78 81 75 33) 33]
Test Case: 225 | Input/Output: [(31 93 57 7) 7]
Test Case: 226 | Input/Output: [(1 14 65 58) 1]
Test Case: 227 | Input/Output: [(13 72 50 48) 13]
Test Case: 228 | Input/Output: [(86 73 18 68) 18]
Test Case: 229 | Input/Output: [(10 32 89 19) 10]
Test Case: 230 | Input/Output: [(8 74 92 84) 8]
Test Case: 231 | Input/Output: [(64 87 57 77) 57]
Test Case: 232 | Input/Output: [(55 44 61 42) 42]
Test Case: 233 | Input/Output: [(67 48 71 86) 48]
Test Case: 234 | Input/Output: [(86 36 93 45) 36]
Test Case: 235 | Input/Output: [(29 61 69 7) 7]
Test Case: 236 | Input/Output: [(8 68 98 98) 8]
Test Case: 237 | Input/Output: [(2 8 76 57) 2]
Test Case: 238 | Input/Output: [(15 25 26 1) 1]
Test Case: 239 | Input/Output: [(53 99 91 90) 53]
Test Case: 240 | Input/Output: [(77 99 32 39) 32]
Test Case: 241 | Input/Output: [(15 61 63 78) 15]
Test Case: 242 | Input/Output: [(64 76 7 96) 7]
Test Case: 243 | Input/Output: [(77 53 98 32) 32]
Test Case: 244 | Input/Output: [(37 8 66 32) 8]
Test Case: 245 | Input/Output: [(17 26 24 86) 17]
Test Case: 246 | Input/Output: [(74 43 9 51) 9]
Test Case: 247 | Input/Output: [(43 68 80 86) 43]
Test Case: 248 | Input/Output: [(96 31 24 19) 19]
Test Case: 249 | Input/Output: [(18 1 85 77) 1]
Test Case: 250 | Input/Output: [(86 75 33 69) 33]
Test Case: 251 | Input/Output: [(49 90 50 91) 49]
Test Case: 252 | Input/Output: [(92 9 97 67) 9]
Test Case: 253 | Input/Output: [(30 80 99 57) 30]
Test Case: 254 | Input/Output: [(33 62 91 92) 33]
Test Case: 255 | Input/Output: [(62 65 89 76) 62]
Test Case: 256 | Input/Output: [(81 16 90 89) 16]
Test Case: 257 | Input/Output: [(21 77 92 32) 21]
Test Case: 258 | Input/Output: [(24 42 70 84) 24]
Test Case: 259 | Input/Output: [(79 90 72 63) 63]
Test Case: 260 | Input/Output: [(75 45 26 84) 26]
Test Case: 261 | Input/Output: [(95 23 19 54) 19]
Test Case: 262 | Input/Output: [(17 41 49 15) 15]
Test Case: 263 | Input/Output: [(69 88 28 39) 28]
Test Case: 264 | Input/Output: [(77 7 94 54) 7]
Test Case: 265 | Input/Output: [(36 29 79 69) 29]
Test Case: 266 | Input/Output: [(52 87 38 31) 31]
Test Case: 267 | Input/Output: [(3 47 77 62) 3]
Test Case: 268 | Input/Output: [(54 90 96 21) 21]
Test Case: 269 | Input/Output: [(88 73 94 80) 73]
Test Case: 270 | Input/Output: [(18 61 24 0) 0]
Test Case: 271 | Input/Output: [(64 11 26 24) 11]
Test Case: 272 | Input/Output: [(39 7 20 35) 7]
Test Case: 273 | Input/Output: [(8 67 85 44) 8]
Test Case: 274 | Input/Output: [(26 66 49 91) 26]
Test Case: 275 | Input/Output: [(42 63 86 55) 42]
Test Case: 276 | Input/Output: [(57 9 51 62) 9]
Test Case: 277 | Input/Output: [(29 87 89 14) 14]
Test Case: 278 | Input/Output: [(21 45 39 3) 3]
Test Case: 279 | Input/Output: [(50 96 26 58) 26]
Test Case: 280 | Input/Output: [(65 4 65 53) 4]
Test Case: 281 | Input/Output: [(13 22 87 21) 13]
Test Case: 282 | Input/Output: [(35 0 59 16) 0]
Test Case: 283 | Input/Output: [(82 32 52 7) 7]
Test Case: 284 | Input/Output: [(39 34 79 31) 31]
Test Case: 285 | Input/Output: [(67 90 37 19) 19]
Test Case: 286 | Input/Output: [(81 50 1 32) 1]
Test Case: 287 | Input/Output: [(31 66 27 53) 27]
Test Case: 288 | Input/Output: [(57 28 27 38) 27]
Test Case: 289 | Input/Output: [(81 97 59 21) 21]
Test Case: 290 | Input/Output: [(90 68 28 84) 28]
Test Case: 291 | Input/Output: [(38 99 84 100) 38]
Test Case: 292 | Input/Output: [(44 3 100 66) 3]
Test Case: 293 | Input/Output: [(59 4 70 50) 4]
Test Case: 294 | Input/Output: [(74 95 28 54) 28]
Test Case: 295 | Input/Output: [(24 99 4 71) 4]
Test Case: 296 | Input/Output: [(17 19 34 37) 17]
Test Case: 297 | Input/Output: [(32 79 43 9) 9]
Test Case: 298 | Input/Output: [(72 52 12 53) 12]
Test Case: 299 | Input/Output: [(60 22 76 88) 22]
Test Case: 300 | Input/Output: [(59 43 80 49) 43]
Test Case: 301 | Input/Output: [(7 85 40 73) 7]
Test Case: 302 | Input/Output: [(69 54 31 82) 31]
Test Case: 303 | Input/Output: [(82 91 75 4) 4]
Test Case: 304 | Input/Output: [(2 38 83 99) 2]
Test Case: 305 | Input/Output: [(100 6 0 40) 0]
Test Case: 306 | Input/Output: [(49 95 84 22) 22]
Test Case: 307 | Input/Output: [(56 14 73 27) 14]
Test Case: 308 | Input/Output: [(51 36 45 90) 36]
Test Case: 309 | Input/Output: [(68 97 71 11) 11]
Test Case: 310 | Input/Output: [(74 100 91 23) 23]
Test Case: 311 | Input/Output: [(87 39 86 76) 39]
Test Case: 312 | Input/Output: [(22 17 66 52) 17]
Test Case: 313 | Input/Output: [(10 33 65 60) 10]
Test Case: 314 | Input/Output: [(73 56 30 61) 30]
Test Case: 315 | Input/Output: [(95 86 85 29) 29]
Test Case: 316 | Input/Output: [(22 50 77 30) 22]
Test Case: 317 | Input/Output: [(92 17 27 4) 4]
Test Case: 318 | Input/Output: [(30 50 48 98) 30]
Test Case: 319 | Input/Output: [(82 23 26 44) 23]
Test Case: 320 | Input/Output: [(86 65 24 26) 24]
Test Case: 321 | Input/Output: [(75 66 15 36) 15]
Test Case: 322 | Input/Output: [(33 92 24 25) 24]
Test Case: 323 | Input/Output: [(93 44 39 43) 39]
Test Case: 324 | Input/Output: [(84 57 33 82) 33]
Test Case: 325 | Input/Output: [(25 53 31 31) 25]
Test Case: 326 | Input/Output: [(51 40 61 74) 40]
Test Case: 327 | Input/Output: [(8 91 65 11) 8]
Test Case: 328 | Input/Output: [(88 28 96 14) 14]
Test Case: 329 | Input/Output: [(15 99 0 24) 0]
Test Case: 330 | Input/Output: [(78 96 30 3) 3]
Test Case: 331 | Input/Output: [(44 87 1 17) 1]
Test Case: 332 | Input/Output: [(39 62 77 68) 39]
Test Case: 333 | Input/Output: [(71 29 61 74) 29]
Test Case: 334 | Input/Output: [(61 1 42 32) 1]
Test Case: 335 | Input/Output: [(4 7 54 51) 4]
Test Case: 336 | Input/Output: [(53 25 54 56) 25]
Test Case: 337 | Input/Output: [(32 71 60 99) 32]
Test Case: 338 | Input/Output: [(50 12 12 66) 12]
Test Case: 339 | Input/Output: [(45 66 71 40) 40]
Test Case: 340 | Input/Output: [(78 17 42 48) 17]
Test Case: 341 | Input/Output: [(64 69 11 31) 11]
Test Case: 342 | Input/Output: [(13 0 9 8) 0]
Test Case: 343 | Input/Output: [(80 90 37 22) 22]
Test Case: 344 | Input/Output: [(18 33 37 5) 5]
Test Case: 345 | Input/Output: [(51 15 37 82) 15]
Test Case: 346 | Input/Output: [(62 97 26 32) 26]
Test Case: 347 | Input/Output: [(75 91 84 21) 21]
Test Case: 348 | Input/Output: [(26 7 42 42) 7]
Test Case: 349 | Input/Output: [(60 64 9 92) 9]
Test Case: 350 | Input/Output: [(52 4 3 92) 3]
Test Case: 351 | Input/Output: [(24 30 33 70) 24]
Test Case: 352 | Input/Output: [(68 22 58 75) 22]
Test Case: 353 | Input/Output: [(51 5 97 33) 5]
Test Case: 354 | Input/Output: [(3 67 56 97) 3]
Test Case: 355 | Input/Output: [(40 93 56 88) 40]
Test Case: 356 | Input/Output: [(78 24 38 60) 24]
Test Case: 357 | Input/Output: [(29 53 58 56) 29]
Test Case: 358 | Input/Output: [(45 93 80 79) 45]
Test Case: 359 | Input/Output: [(38 5 97 88) 5]
Test Case: 360 | Input/Output: [(68 9 30 100) 9]
Test Case: 361 | Input/Output: [(14 94 81 25) 14]
Test Case: 362 | Input/Output: [(28 30 19 72) 19]
Test Case: 363 | Input/Output: [(85 55 0 43) 0]
Test Case: 364 | Input/Output: [(38 73 6 82) 6]
Test Case: 365 | Input/Output: [(53 0 23 93) 0]
Test Case: 366 | Input/Output: [(76 40 22 44) 22]
Test Case: 367 | Input/Output: [(32 56 85 93) 32]
Test Case: 368 | Input/Output: [(80 88 37 26) 26]
Test Case: 369 | Input/Output: [(21 10 51 90) 10]
Test Case: 370 | Input/Output: [(8 45 26 21) 8]
Test Case: 371 | Input/Output: [(98 76 85 63) 63]
Test Case: 372 | Input/Output: [(51 78 85 84) 51]
Test Case: 373 | Input/Output: [(52 13 27 41) 13]
Test Case: 374 | Input/Output: [(50 87 50 1) 1]
Test Case: 375 | Input/Output: [(3 4 56 79) 3]
Test Case: 376 | Input/Output: [(42 3 45 1) 1]
Test Case: 377 | Input/Output: [(85 39 87 31) 31]
Test Case: 378 | Input/Output: [(77 50 60 23) 23]
Test Case: 379 | Input/Output: [(82 76 49 2) 2]
Test Case: 380 | Input/Output: [(50 74 34 27) 27]
Test Case: 381 | Input/Output: [(68 43 51 19) 19]
Test Case: 382 | Input/Output: [(35 93 28 49) 28]
Test Case: 383 | Input/Output: [(96 92 40 77) 40]
Test Case: 384 | Input/Output: [(89 24 0 44) 0]
Test Case: 385 | Input/Output: [(42 42 15 26) 15]
Test Case: 386 | Input/Output: [(57 72 2 96) 2]
Test Case: 387 | Input/Output: [(12 10 44 67) 10]
Test Case: 388 | Input/Output: [(33 70 54 94) 33]
Test Case: 389 | Input/Output: [(36 32 34 66) 32]
Test Case: 390 | Input/Output: [(76 11 1 11) 1]
Test Case: 391 | Input/Output: [(6 91 91 39) 6]
Test Case: 392 | Input/Output: [(92 23 23 62) 23]
Test Case: 393 | Input/Output: [(97 68 50 89) 50]
Test Case: 394 | Input/Output: [(98 26 70 18) 18]
Test Case: 395 | Input/Output: [(95 31 58 97) 31]
Test Case: 396 | Input/Output: [(35 89 89 62) 35]
Test Case: 397 | Input/Output: [(19 19 47 69) 19]
Test Case: 398 | Input/Output: [(37 37 81 37) 37]
Test Case: 399 | Input/Output: [(55 20 13 28) 13]
Test Case: 400 | Input/Output: [(75 9 85 -60) -60]
Test Case: 401 | Input/Output: [(67 87 85 45) 45]
Test Case: 402 | Input/Output: [(-1 67 6 -24) -24]
Test Case: 403 | Input/Output: [(69 -62 96 76) -62]
Test Case: 404 | Input/Output: [(59 -10 46 12) -10]
Test Case: 405 | Input/Output: [(64 4 0 7) 0]
Test Case: 406 | Input/Output: [(70 -32 -83 97) -83]
Test Case: 407 | Input/Output: [(29 -69 62 80) -69]
Test Case: 408 | Input/Output: [(-60 -91 -50 -35) -91]
Test Case: 409 | Input/Output: [(-95 -21 100 50) -95]
Test Case: 410 | Input/Output: [(-43 -19 -55 -79) -79]
Test Case: 411 | Input/Output: [(-63 -81 -42 -69) -81]
Test Case: 412 | Input/Output: [(-90 -51 72 10) -90]
Test Case: 413 | Input/Output: [(-86 -87 -13 -91) -91]
Test Case: 414 | Input/Output: [(9 14 16 -28) -28]
Test Case: 415 | Input/Output: [(-59 -78 -85 -34) -85]
Test Case: 416 | Input/Output: [(73 5 23 -71) -71]
Test Case: 417 | Input/Output: [(-65 99 -37 16) -65]
Test Case: 418 | Input/Output: [(-99 89 -59 -62) -99]
Test Case: 419 | Input/Output: [(5 -55 97 78) -55]
Test Case: 420 | Input/Output: [(-43 26 52 -99) -99]
Test Case: 421 | Input/Output: [(-6 22 -51 45) -51]
Test Case: 422 | Input/Output: [(-33 40 90 -99) -99]
Test Case: 423 | Input/Output: [(-8 63 11 -21) -21]
Test Case: 424 | Input/Output: [(-13 -33 27 95) -33]
Test Case: 425 | Input/Output: [(15 21 25 41) 15]
Test Case: 426 | Input/Output: [(-84 -23 -6 -12) -84]
Test Case: 427 | Input/Output: [(54 -62 37 -76) -76]
Test Case: 428 | Input/Output: [(64 -57 -93 -83) -93]
Test Case: 429 | Input/Output: [(72 52 -69 -87) -87]
Test Case: 430 | Input/Output: [(-11 -35 14 -12) -35]
Test Case: 431 | Input/Output: [(21 64 -29 50) -29]
Test Case: 432 | Input/Output: [(-50 79 -63 32) -63]
Test Case: 433 | Input/Output: [(17 -79 -17 -28) -79]
Test Case: 434 | Input/Output: [(-30 60 -55 66) -55]
Test Case: 435 | Input/Output: [(-97 90 55 53) -97]
Test Case: 436 | Input/Output: [(-3 -6 100 -75) -75]
Test Case: 437 | Input/Output: [(13 -16 -46 -27) -46]
Test Case: 438 | Input/Output: [(-20 73 -45 -14) -45]
Test Case: 439 | Input/Output: [(-60 -90 33 52) -90]
Test Case: 440 | Input/Output: [(-41 -44 -19 -15) -44]
Test Case: 441 | Input/Output: [(-78 44 75 -2) -78]
Test Case: 442 | Input/Output: [(-14 -69 -55 -39) -69]
Test Case: 443 | Input/Output: [(89 65 52 -88) -88]
Test Case: 444 | Input/Output: [(-88 -41 -58 51) -88]
Test Case: 445 | Input/Output: [(-72 -65 24 25) -72]
Test Case: 446 | Input/Output: [(-84 -65 9 23) -84]
Test Case: 447 | Input/Output: [(58 29 56 80) 29]
Test Case: 448 | Input/Output: [(-31 -40 22 45) -40]
Test Case: 449 | Input/Output: [(4 89 -62 -60) -62]
Test Case: 450 | Input/Output: [(79 25 -80 58) -80]
Test Case: 451 | Input/Output: [(3 -8 -60 66) -60]
Test Case: 452 | Input/Output: [(-93 45 -68 -39) -93]
Test Case: 453 | Input/Output: [(-18 70 38 -54) -54]
Test Case: 454 | Input/Output: [(74 -97 10 94) -97]
Test Case: 455 | Input/Output: [(-5 -33 -42 44) -42]
Test Case: 456 | Input/Output: [(46 -7 64 33) -7]
Test Case: 457 | Input/Output: [(30 72 -66 -34) -66]
Test Case: 458 | Input/Output: [(76 18 -5 48) -5]
Test Case: 459 | Input/Output: [(-13 62 -25 -4) -25]
Test Case: 460 | Input/Output: [(73 -54 -77 30) -77]
Test Case: 461 | Input/Output: [(12 13 69 7) 7]
Test Case: 462 | Input/Output: [(77 53 68 -28) -28]
Test Case: 463 | Input/Output: [(-27 7 -89 24) -89]
Test Case: 464 | Input/Output: [(25 81 -53 3) -53]
Test Case: 465 | Input/Output: [(-37 -7 -53 -96) -96]
Test Case: 466 | Input/Output: [(24 3 -81 -44) -81]
Test Case: 467 | Input/Output: [(83 -84 -36 72) -84]
Test Case: 468 | Input/Output: [(-6 11 25 41) -6]
Test Case: 469 | Input/Output: [(71 -29 48 -84) -84]
Test Case: 470 | Input/Output: [(-50 -98 26 -33) -98]
Test Case: 471 | Input/Output: [(83 -40 -52 -61) -61]
Test Case: 472 | Input/Output: [(-96 -64 -1 93) -96]
Test Case: 473 | Input/Output: [(93 29 30 68) 29]
Test Case: 474 | Input/Output: [(92 -52 43 45) -52]
Test Case: 475 | Input/Output: [(54 80 -9 -73) -73]
Test Case: 476 | Input/Output: [(-65 80 -41 -31) -65]
Test Case: 477 | Input/Output: [(15 -85 -2 45) -85]
Test Case: 478 | Input/Output: [(-30 -70 -33 -72) -72]
Test Case: 479 | Input/Output: [(44 -30 -97 49) -97]
Test Case: 480 | Input/Output: [(83 -10 -11 -23) -23]
Test Case: 481 | Input/Output: [(95 -16 -46 52) -46]
Test Case: 482 | Input/Output: [(2 1 -77 -45) -77]
Test Case: 483 | Input/Output: [(-47 -85 73 53) -85]
Test Case: 484 | Input/Output: [(90 -4 0 -13) -13]
Test Case: 485 | Input/Output: [(71 -68 -26 -37) -68]
Test Case: 486 | Input/Output: [(13 -70 -78 -53) -78]
Test Case: 487 | Input/Output: [(-89 37 -36 -29) -89]
Test Case: 488 | Input/Output: [(-85 -74 -30 -55) -85]
Test Case: 489 | Input/Output: [(-12 27 24 -25) -25]
Test Case: 490 | Input/Output: [(-47 66 -4 -32) -47]
Test Case: 491 | Input/Output: [(-25 23 38 71) -25]
Test Case: 492 | Input/Output: [(15 73 -77 89) -77]
Test Case: 493 | Input/Output: [(55 54 9 12) 9]
Test Case: 494 | Input/Output: [(-14 89 -71 20) -71]
Test Case: 495 | Input/Output: [(-48 33 75 88) -48]
Test Case: 496 | Input/Output: [(-35 -73 -25 62) -73]
Test Case: 497 | Input/Output: [(-81 18 -32 -44) -81]
Test Case: 498 | Input/Output: [(31 -70 12 -38) -70]
Test Case: 499 | Input/Output: [(88 68 -50 -99) -99]
Test Case: 500 | Input/Output: [(-44 -3 -44 99) -44]
Test Case: 501 | Input/Output: [(53 56 74 -7) -7]
Test Case: 502 | Input/Output: [(-87 70 -50 -20) -87]
Test Case: 503 | Input/Output: [(93 46 -37 -50) -50]
Test Case: 504 | Input/Output: [(-43 67 9 -22) -43]
Test Case: 505 | Input/Output: [(-92 -33 76 -74) -92]
Test Case: 506 | Input/Output: [(54 82 55 -48) -48]
Test Case: 507 | Input/Output: [(44 67 72 97) 44]
Test Case: 508 | Input/Output: [(34 29 8 -43) -43]
Test Case: 509 | Input/Output: [(27 -98 -89 -74) -98]
Test Case: 510 | Input/Output: [(16 41 89 53) 16]
Test Case: 511 | Input/Output: [(37 53 -35 78) -35]
Test Case: 512 | Input/Output: [(-22 -86 -80 -15) -86]
Test Case: 513 | Input/Output: [(38 52 -97 -60) -97]
Test Case: 514 | Input/Output: [(92 -33 60 -52) -52]
Test Case: 515 | Input/Output: [(-91 -63 63 -18) -91]
Test Case: 516 | Input/Output: [(22 15 -59 82) -59]
Test Case: 517 | Input/Output: [(27 27 28 93) 27]
Test Case: 518 | Input/Output: [(91 92 77 -67) -67]
Test Case: 519 | Input/Output: [(-48 94 -13 -67) -67]
Test Case: 520 | Input/Output: [(23 3 28 -70) -70]
Test Case: 521 | Input/Output: [(-81 51 -26 75) -81]
Test Case: 522 | Input/Output: [(-66 73 -85 74) -85]
Test Case: 523 | Input/Output: [(10 -4 39 98) -4]
Test Case: 524 | Input/Output: [(6 -25 34 72) -25]
Test Case: 525 | Input/Output: [(18 -15 20 -95) -95]
Test Case: 526 | Input/Output: [(-89 -18 -26 5) -89]
Test Case: 527 | Input/Output: [(-86 60 100 -8) -86]
Test Case: 528 | Input/Output: [(84 87 -48 59) -48]
Test Case: 529 | Input/Output: [(-63 59 -9 38) -63]
Test Case: 530 | Input/Output: [(52 -94 34 -84) -94]
Test Case: 531 | Input/Output: [(54 -39 50 -8) -39]
Test Case: 532 | Input/Output: [(61 -13 19 23) -13]
Test Case: 533 | Input/Output: [(-68 -73 51 56) -73]
Test Case: 534 | Input/Output: [(-10 -69 -42 -25) -69]
Test Case: 535 | Input/Output: [(-82 43 -12 -56) -82]
Test Case: 536 | Input/Output: [(-92 -46 35 -8) -92]
Test Case: 537 | Input/Output: [(10 19 -70 -32) -70]
Test Case: 538 | Input/Output: [(73 -85 -57 33) -85]
Test Case: 539 | Input/Output: [(-49 94 -20 83) -49]
Test Case: 540 | Input/Output: [(78 33 -3 49) -3]
Test Case: 541 | Input/Output: [(45 -33 -58 -59) -59]
Test Case: 542 | Input/Output: [(-80 -71 -91 75) -91]
Test Case: 543 | Input/Output: [(-52 77 86 2) -52]
Test Case: 544 | Input/Output: [(20 76 50 54) 20]
Test Case: 545 | Input/Output: [(-18 -92 7 68) -92]
Test Case: 546 | Input/Output: [(-45 -41 -39 68) -45]
Test Case: 547 | Input/Output: [(39 -3 -82 -11) -82]
Test Case: 548 | Input/Output: [(-46 20 -50 -100) -100]
Test Case: 549 | Input/Output: [(32 72 -67 14) -67]
Test Case: 550 | Input/Output: [(-3 -42 83 -67) -67]
Test Case: 551 | Input/Output: [(-15 -3 -39 -61) -61]
Test Case: 552 | Input/Output: [(56 99 -22 -51) -51]
Test Case: 553 | Input/Output: [(46 90 -61 5) -61]
Test Case: 554 | Input/Output: [(87 7 25 39) 7]
Test Case: 555 | Input/Output: [(-37 -97 12 -52) -97]
Test Case: 556 | Input/Output: [(-3 -5 -83 -53) -83]
Test Case: 557 | Input/Output: [(15 34 -70 -94) -94]
Test Case: 558 | Input/Output: [(24 -11 70 43) -11]
Test Case: 559 | Input/Output: [(-61 57 45 67) -61]
Test Case: 560 | Input/Output: [(-34 -77 95 97) -77]
Test Case: 561 | Input/Output: [(1 8 -84 -8) -84]
Test Case: 562 | Input/Output: [(-10 91 13 14) -10]
Test Case: 563 | Input/Output: [(0 -45 -77 -25) -77]
Test Case: 564 | Input/Output: [(14 -74 -28 -40) -74]
Test Case: 565 | Input/Output: [(13 -41 -16 36) -41]
Test Case: 566 | Input/Output: [(8 69 11 32) 8]
Test Case: 567 | Input/Output: [(-36 80 39 -38) -38]
Test Case: 568 | Input/Output: [(-48 95 -91 33) -91]
Test Case: 569 | Input/Output: [(-70 85 -22 16) -70]
Test Case: 570 | Input/Output: [(24 25 20 -47) -47]
Test Case: 571 | Input/Output: [(-45 -26 -13 -36) -45]
Test Case: 572 | Input/Output: [(44 80 -33 62) -33]
Test Case: 573 | Input/Output: [(98 35 51 -85) -85]
Test Case: 574 | Input/Output: [(-76 -53 7 74) -76]
Test Case: 575 | Input/Output: [(70 23 60 -2) -2]
Test Case: 576 | Input/Output: [(-48 72 -55 -22) -55]
Test Case: 577 | Input/Output: [(40 84 -30 32) -30]
Test Case: 578 | Input/Output: [(-100 -72 44 -76) -100]
Test Case: 579 | Input/Output: [(33 63 -5 -60) -60]
Test Case: 580 | Input/Output: [(99 82 -27 33) -27]
Test Case: 581 | Input/Output: [(-35 -18 -44 -39) -44]
Test Case: 582 | Input/Output: [(-7 97 -69 -46) -69]
Test Case: 583 | Input/Output: [(-14 21 -12 -37) -37]
Test Case: 584 | Input/Output: [(-99 81 62 -97) -99]
Test Case: 585 | Input/Output: [(34 0 51 86) 0]
Test Case: 586 | Input/Output: [(56 -91 -56 -79) -91]
Test Case: 587 | Input/Output: [(58 58 -45 79) -45]
Test Case: 588 | Input/Output: [(-64 18 74 -11) -64]
Test Case: 589 | Input/Output: [(-21 62 -77 74) -77]
Test Case: 590 | Input/Output: [(2 -52 97 80) -52]
Test Case: 591 | Input/Output: [(-66 43 86 -72) -72]
Test Case: 592 | Input/Output: [(99 -96 -57 72) -96]
Test Case: 593 | Input/Output: [(-75 -61 1 -24) -75]
Test Case: 594 | Input/Output: [(48 -44 -46 25) -46]
Test Case: 595 | Input/Output: [(44 78 -10 68) -10]
Test Case: 596 | Input/Output: [(-80 -42 6 -86) -86]
Test Case: 597 | Input/Output: [(54 68 81 -82) -82]
Test Case: 598 | Input/Output: [(-41 -80 -69 -76) -80]
Test Case: 599 | Input/Output: [(-47 -88 -78 -58) -88]
Test Case: 600 | Input/Output: [(3 20 -92 81) -92]
Test Case: 601 | Input/Output: [(24 -96 -93 84) -96]
Test Case: 602 | Input/Output: [(55 76 18 -32) -32]
Test Case: 603 | Input/Output: [(31 59 84 -66) -66]
Test Case: 604 | Input/Output: [(-79 -47 -22 86) -79]
Test Case: 605 | Input/Output: [(-50 21 77 93) -50]
Test Case: 606 | Input/Output: [(-10 -88 40 53) -88]
Test Case: 607 | Input/Output: [(51 14 72 62) 14]
Test Case: 608 | Input/Output: [(25 22 -18 20) -18]
Test Case: 609 | Input/Output: [(-9 -69 -55 -71) -71]
Test Case: 610 | Input/Output: [(76 98 79 59) 59]
Test Case: 611 | Input/Output: [(-43 3 38 -100) -100]
Test Case: 612 | Input/Output: [(36 33 -10 71) -10]
Test Case: 613 | Input/Output: [(10 -95 -93 -29) -95]
Test Case: 614 | Input/Output: [(31 -78 73 72) -78]
Test Case: 615 | Input/Output: [(-17 5 -11 -23) -23]
Test Case: 616 | Input/Output: [(6 47 -74 -33) -74]
Test Case: 617 | Input/Output: [(-34 35 -25 -50) -50]
Test Case: 618 | Input/Output: [(68 59 99 -81) -81]
Test Case: 619 | Input/Output: [(-66 -29 -58 33) -66]
Test Case: 620 | Input/Output: [(77 -77 -48 21) -77]
Test Case: 621 | Input/Output: [(15 52 -77 -88) -88]
Test Case: 622 | Input/Output: [(88 49 -51 -9) -51]
Test Case: 623 | Input/Output: [(70 59 -1 64) -1]
Test Case: 624 | Input/Output: [(32 83 -13 -18) -18]
Test Case: 625 | Input/Output: [(-67 -39 55 -33) -67]
Test Case: 626 | Input/Output: [(11 -12 73 -34) -34]
Test Case: 627 | Input/Output: [(24 34 54 9) 9]
Test Case: 628 | Input/Output: [(-51 -54 72 -72) -72]
Test Case: 629 | Input/Output: [(40 -9 -37 -40) -40]
Test Case: 630 | Input/Output: [(-67 99 -16 91) -67]
Test Case: 631 | Input/Output: [(-19 -61 -87 -75) -87]
Test Case: 632 | Input/Output: [(74 -95 54 -25) -95]
Test Case: 633 | Input/Output: [(-36 -51 -29 -91) -91]
Test Case: 634 | Input/Output: [(85 31 -77 -91) -91]
Test Case: 635 | Input/Output: [(19 62 45 -24) -24]
Test Case: 636 | Input/Output: [(40 37 -81 -57) -81]
Test Case: 637 | Input/Output: [(-95 18 -67 53) -95]
Test Case: 638 | Input/Output: [(-34 -93 -21 -45) -93]
Test Case: 639 | Input/Output: [(-75 -12 -39 -16) -75]
Test Case: 640 | Input/Output: [(44 17 -37 -51) -51]
Test Case: 641 | Input/Output: [(60 89 -12 82) -12]
Test Case: 642 | Input/Output: [(15 96 -62 -30) -62]
Test Case: 643 | Input/Output: [(-35 -87 -92 53) -92]
Test Case: 644 | Input/Output: [(83 100 41 78) 41]
Test Case: 645 | Input/Output: [(72 72 92 -14) -14]
Test Case: 646 | Input/Output: [(51 -13 -63 -37) -63]
Test Case: 647 | Input/Output: [(-22 72 73 41) -22]
Test Case: 648 | Input/Output: [(11 -22 -25 28) -25]
Test Case: 649 | Input/Output: [(47 25 -33 -72) -72]
Test Case: 650 | Input/Output: [(92 -30 35 1) -30]
Test Case: 651 | Input/Output: [(73 -65 -52 64) -65]
Test Case: 652 | Input/Output: [(-12 13 -55 97) -55]
Test Case: 653 | Input/Output: [(-17 44 -100 61) -100]
Test Case: 654 | Input/Output: [(-83 18 10 11) -83]
Test Case: 655 | Input/Output: [(99 32 -75 -43) -75]
Test Case: 656 | Input/Output: [(90 29 -16 99) -16]
Test Case: 657 | Input/Output: [(10 -45 -7 -86) -86]
Test Case: 658 | Input/Output: [(15 22 0 -95) -95]
Test Case: 659 | Input/Output: [(-38 -46 -47 72) -47]
Test Case: 660 | Input/Output: [(27 1 -1 80) -1]
Test Case: 661 | Input/Output: [(-15 28 100 59) -15]
Test Case: 662 | Input/Output: [(90 -28 -53 35) -53]
Test Case: 663 | Input/Output: [(80 84 -49 73) -49]
Test Case: 664 | Input/Output: [(-21 -8 30 -35) -35]
Test Case: 665 | Input/Output: [(97 -23 -96 -34) -96]
Test Case: 666 | Input/Output: [(-55 -31 1 -97) -97]
Test Case: 667 | Input/Output: [(65 -40 -77 -24) -77]
Test Case: 668 | Input/Output: [(46 1 -43 84) -43]
Test Case: 669 | Input/Output: [(-51 -45 25 69) -51]
Test Case: 670 | Input/Output: [(-47 -89 -70 81) -89]
Test Case: 671 | Input/Output: [(-73 58 -7 -10) -73]
Test Case: 672 | Input/Output: [(-21 -1 44 -68) -68]
Test Case: 673 | Input/Output: [(-78 68 -79 35) -79]
Test Case: 674 | Input/Output: [(-99 -100 31 -32) -100]
Test Case: 675 | Input/Output: [(-42 -14 -7 13) -42]
Test Case: 676 | Input/Output: [(-37 -68 24 -86) -86]
Test Case: 677 | Input/Output: [(7 -90 -55 -90) -90]
Test Case: 678 | Input/Output: [(42 -2 -10 -49) -49]
Test Case: 679 | Input/Output: [(-25 -100 -12 37) -100]
Test Case: 680 | Input/Output: [(-78 71 -73 7) -78]
Test Case: 681 | Input/Output: [(-62 94 51 -71) -71]
Test Case: 682 | Input/Output: [(43 62 -30 -29) -30]
Test Case: 683 | Input/Output: [(-35 86 -96 -67) -96]
Test Case: 684 | Input/Output: [(59 -54 -72 11) -72]
Test Case: 685 | Input/Output: [(38 57 -67 -67) -67]
Test Case: 686 | Input/Output: [(94 -41 -68 -4) -68]
Test Case: 687 | Input/Output: [(91 1 -91 -31) -91]
Test Case: 688 | Input/Output: [(61 91 95 36) 36]
Test Case: 689 | Input/Output: [(-51 93 83 52) -51]
Test Case: 690 | Input/Output: [(-56 -49 -84 19) -84]
Test Case: 691 | Input/Output: [(17 70 88 -10) -10]
Test Case: 692 | Input/Output: [(-70 -25 77 100) -70]
Test Case: 693 | Input/Output: [(-19 60 66 -27) -27]
Test Case: 694 | Input/Output: [(-20 -53 -92 -23) -92]
Test Case: 695 | Input/Output: [(66 8 -42 44) -42]
Test Case: 696 | Input/Output: [(-20 22 79 5) -20]
Test Case: 697 | Input/Output: [(-63 -32 51 -88) -88]
Test Case: 698 | Input/Output: [(-12 15 -12 31) -12]
Test Case: 699 | Input/Output: [(-89 31 16 93) -89]
Test Case: 700 | Input/Output: [(-23 -99 82 48) -99]
Test Case: 701 | Input/Output: [(-23 2 -9 94) -23]
Test Case: 702 | Input/Output: [(-91 25 -4 -100) -100]
Test Case: 703 | Input/Output: [(32 -71 1 -91) -91]
Test Case: 704 | Input/Output: [(-30 -98 69 -6) -98]
Test Case: 705 | Input/Output: [(-34 -3 43 33) -34]
Test Case: 706 | Input/Output: [(-52 -39 66 37) -52]
Test Case: 707 | Input/Output: [(26 25 -90 -61) -90]
Test Case: 708 | Input/Output: [(19 20 -61 -58) -61]
Test Case: 709 | Input/Output: [(98 -11 10 10) -11]
Test Case: 710 | Input/Output: [(81 -11 61 -59) -59]
Test Case: 711 | Input/Output: [(-71 -6 26 12) -71]
Test Case: 712 | Input/Output: [(-91 -87 -40 -66) -91]
Test Case: 713 | Input/Output: [(-25 -77 -88 -18) -88]
Test Case: 714 | Input/Output: [(35 36 82 58) 35]
Test Case: 715 | Input/Output: [(-38 -2 -50 -86) -86]
Test Case: 716 | Input/Output: [(80 22 -52 -86) -86]
Test Case: 717 | Input/Output: [(-71 30 0 70) -71]
Test Case: 718 | Input/Output: [(-52 -93 -66 -100) -100]
Test Case: 719 | Input/Output: [(-58 59 12 76) -58]
Test Case: 720 | Input/Output: [(-83 60 70 -41) -83]
Test Case: 721 | Input/Output: [(69 -64 23 -58) -64]
Test Case: 722 | Input/Output: [(-69 -97 -93 4) -97]
Test Case: 723 | Input/Output: [(-40 71 67 7) -40]
Test Case: 724 | Input/Output: [(81 95 -32 0) -32]
Test Case: 725 | Input/Output: [(-45 -23 92 -10) -45]
Test Case: 726 | Input/Output: [(35 98 89 3) 3]
Test Case: 727 | Input/Output: [(22 9 -91 -78) -91]
Test Case: 728 | Input/Output: [(-41 99 40 28) -41]
Test Case: 729 | Input/Output: [(41 -16 80 87) -16]
Test Case: 730 | Input/Output: [(-92 -29 85 76) -92]
Test Case: 731 | Input/Output: [(-97 42 5 4) -97]
Test Case: 732 | Input/Output: [(-50 -23 98 -73) -73]
Test Case: 733 | Input/Output: [(74 -26 39 -82) -82]
Test Case: 734 | Input/Output: [(5 19 -28 -10) -28]
Test Case: 735 | Input/Output: [(30 82 -85 -97) -97]
Test Case: 736 | Input/Output: [(-8 90 10 -8) -8]
Test Case: 737 | Input/Output: [(-86 3 -39 96) -86]
Test Case: 738 | Input/Output: [(-22 7 31 13) -22]
Test Case: 739 | Input/Output: [(-91 -14 42 -70) -91]
Test Case: 740 | Input/Output: [(-25 14 40 -13) -25]
Test Case: 741 | Input/Output: [(44 20 55 83) 20]
Test Case: 742 | Input/Output: [(93 64 -42 71) -42]
Test Case: 743 | Input/Output: [(20 92 -68 85) -68]
Test Case: 744 | Input/Output: [(-83 -58 35 -94) -94]
Test Case: 745 | Input/Output: [(-35 0 25 -38) -38]
Test Case: 746 | Input/Output: [(-37 -18 -59 -29) -59]
Test Case: 747 | Input/Output: [(56 36 -58 -74) -74]
Test Case: 748 | Input/Output: [(-60 -81 -12 92) -81]
Test Case: 749 | Input/Output: [(-16 -10 75 39) -16]
Test Case: 750 | Input/Output: [(12 -61 98 68) -61]
Test Case: 751 | Input/Output: [(-57 82 -52 95) -57]
Test Case: 752 | Input/Output: [(3 -43 -69 -72) -72]
Test Case: 753 | Input/Output: [(-91 53 37 9) -91]
Test Case: 754 | Input/Output: [(70 23 25 85) 23]
Test Case: 755 | Input/Output: [(25 97 29 67) 25]
Test Case: 756 | Input/Output: [(34 -35 -25 -57) -57]
Test Case: 757 | Input/Output: [(-49 -84 -19 88) -84]
Test Case: 758 | Input/Output: [(-35 5 -60 -20) -60]
Test Case: 759 | Input/Output: [(8 -67 11 63) -67]
Test Case: 760 | Input/Output: [(-93 100 7 74) -93]
Test Case: 761 | Input/Output: [(31 -73 -28 -32) -73]
Test Case: 762 | Input/Output: [(88 85 -13 52) -13]
Test Case: 763 | Input/Output: [(-12 15 26 48) -12]
Test Case: 764 | Input/Output: [(2 0 18 -21) -21]
Test Case: 765 | Input/Output: [(-99 -80 -97 -72) -99]
Test Case: 766 | Input/Output: [(73 6 -20 -20) -20]
Test Case: 767 | Input/Output: [(-16 52 -22 53) -22]
Test Case: 768 | Input/Output: [(32 -79 73 -56) -79]
Test Case: 769 | Input/Output: [(15 -90 84 50) -90]
Test Case: 770 | Input/Output: [(56 13 6 -3) -3]
Test Case: 771 | Input/Output: [(10 21 68 13) 10]
Test Case: 772 | Input/Output: [(-1 -82 -24 23) -82]
Test Case: 773 | Input/Output: [(99 54 -88 18) -88]
Test Case: 774 | Input/Output: [(-69 41 -41 32) -69]
Test Case: 775 | Input/Output: [(-60 4 55 68) -60]
Test Case: 776 | Input/Output: [(-8 84 -20 -60) -60]
Test Case: 777 | Input/Output: [(-70 51 -86 -46) -86]
Test Case: 778 | Input/Output: [(50 90 11 -91) -91]
Test Case: 779 | Input/Output: [(50 55 48 70) 48]
Test Case: 780 | Input/Output: [(-28 -83 75 -11) -83]
Test Case: 781 | Input/Output: [(85 -36 44 -4) -36]
Test Case: 782 | Input/Output: [(73 -53 10 -85) -85]
Test Case: 783 | Input/Output: [(70 -15 -55 98) -55]
Test Case: 784 | Input/Output: [(49 -47 51 55) -47]
Test Case: 785 | Input/Output: [(-28 -40 51 48) -40]
Test Case: 786 | Input/Output: [(-77 -71 -39 55) -77]
Test Case: 787 | Input/Output: [(39 76 -12 -31) -31]
Test Case: 788 | Input/Output: [(34 -42 -72 -48) -72]
Test Case: 789 | Input/Output: [(-18 26 36 18) -18]
Test Case: 790 | Input/Output: [(89 -64 1 -73) -73]
Test Case: 791 | Input/Output: [(-55 -4 -22 -87) -87]
Test Case: 792 | Input/Output: [(5 -2 -5 -97) -97]
Test Case: 793 | Input/Output: [(5 -27 -40 -76) -76]
Test Case: 794 | Input/Output: [(-2 -46 80 -6) -46]
Test Case: 795 | Input/Output: [(19 -67 -48 71) -67]
Test Case: 796 | Input/Output: [(-89 18 -32 51) -89]
Test Case: 797 | Input/Output: [(55 69 -20 -71) -71]
Test Case: 798 | Input/Output: [(-37 73 -40 -22) -40]
Test Case: 799 | Input/Output: [(86 1 13 70) 1]
Test Case: 800 | Input/Output: [(-45 65 51 -93) -93]
Test Case: 801 | Input/Output: [(-61 8 -81 -24) -81]
Test Case: 802 | Input/Output: [(30 -83 51 -97) -97]
Test Case: 803 | Input/Output: [(-84 -43 96 -98) -98]
Test Case: 804 | Input/Output: [(11 -63 68 -86) -86]
Test Case: 805 | Input/Output: [(49 23 -11 -95) -95]
Test Case: 806 | Input/Output: [(-74 93 -26 95) -74]
Test Case: 807 | Input/Output: [(-91 -72 -6 -43) -91]
Test Case: 808 | Input/Output: [(-97 17 3 -44) -97]
Test Case: 809 | Input/Output: [(-87 56 -64 95) -87]
Test Case: 810 | Input/Output: [(-89 -77 72 21) -89]
Test Case: 811 | Input/Output: [(-42 -81 23 -24) -81]
Test Case: 812 | Input/Output: [(51 -80 -96 92) -96]
Test Case: 813 | Input/Output: [(-52 83 -85 -50) -85]
Test Case: 814 | Input/Output: [(-16 -62 94 -58) -62]
Test Case: 815 | Input/Output: [(11 -81 96 74) -81]
Test Case: 816 | Input/Output: [(-79 -24 64 -76) -79]
Test Case: 817 | Input/Output: [(-47 -27 -77 -10) -77]
Test Case: 818 | Input/Output: [(-24 39 -81 -34) -81]
Test Case: 819 | Input/Output: [(-55 -96 -48 -82) -96]
Test Case: 820 | Input/Output: [(60 7 -60 -86) -86]
Test Case: 821 | Input/Output: [(64 41 -20 42) -20]
Test Case: 822 | Input/Output: [(9 -1 -97 12) -97]
Test Case: 823 | Input/Output: [(15 -41 12 -94) -94]
Test Case: 824 | Input/Output: [(88 87 59 13) 13]
Test Case: 825 | Input/Output: [(42 91 11 58) 11]
Test Case: 826 | Input/Output: [(-61 -63 -34 -45) -63]
Test Case: 827 | Input/Output: [(77 17 -89 64) -89]
Test Case: 828 | Input/Output: [(9 -50 -91 -32) -91]
Test Case: 829 | Input/Output: [(98 46 -70 84) -70]
Test Case: 830 | Input/Output: [(80 -27 64 -78) -78]
Test Case: 831 | Input/Output: [(-77 -5 -54 25) -77]
Test Case: 832 | Input/Output: [(51 37 33 -17) -17]
Test Case: 833 | Input/Output: [(26 -41 -6 -77) -77]
Test Case: 834 | Input/Output: [(90 -76 92 -86) -86]
Test Case: 835 | Input/Output: [(38 89 -2 3) -2]
Test Case: 836 | Input/Output: [(84 -67 67 -16) -67]
Test Case: 837 | Input/Output: [(1 68 -9 -75) -75]
Test Case: 838 | Input/Output: [(41 -75 -22 13) -75]
Test Case: 839 | Input/Output: [(95 -88 -48 -37) -88]
Test Case: 840 | Input/Output: [(-7 56 -88 24) -88]
Test Case: 841 | Input/Output: [(-98 -45 -70 78) -98]
Test Case: 842 | Input/Output: [(38 83 91 -17) -17]
Test Case: 843 | Input/Output: [(64 -90 72 -64) -90]
Test Case: 844 | Input/Output: [(99 85 6 71) 6]
Test Case: 845 | Input/Output: [(-41 28 83 -90) -90]
Test Case: 846 | Input/Output: [(-10 55 -61 27) -61]
Test Case: 847 | Input/Output: [(-94 76 -85 -57) -94]
Test Case: 848 | Input/Output: [(25 -98 -96 19) -98]
Test Case: 849 | Input/Output: [(-16 72 -70 75) -70]
Test Case: 850 | Input/Output: [(1 70 84 -46) -46]
Test Case: 851 | Input/Output: [(55 84 29 43) 29]
Test Case: 852 | Input/Output: [(41 72 57 -50) -50]
Test Case: 853 | Input/Output: [(60 -17 13 61) -17]
Test Case: 854 | Input/Output: [(-19 -39 -44 -72) -72]
Test Case: 855 | Input/Output: [(92 -66 100 -84) -84]
Test Case: 856 | Input/Output: [(76 -34 -91 -35) -91]
Test Case: 857 | Input/Output: [(43 64 5 30) 5]
Test Case: 858 | Input/Output: [(80 -49 -27 35) -49]
Test Case: 859 | Input/Output: [(-71 4 32 45) -71]
Test Case: 860 | Input/Output: [(-76 -15 -75 16) -76]
Test Case: 861 | Input/Output: [(42 53 -88 -75) -88]
Test Case: 862 | Input/Output: [(-59 88 -48 -66) -66]
Test Case: 863 | Input/Output: [(-79 16 61 -22) -79]
Test Case: 864 | Input/Output: [(-31 69 -79 -88) -88]
Test Case: 865 | Input/Output: [(89 32 -41 95) -41]
Test Case: 866 | Input/Output: [(-34 55 -39 42) -39]
Test Case: 867 | Input/Output: [(-68 43 -29 80) -68]
Test Case: 868 | Input/Output: [(11 -98 -37 -36) -98]
Test Case: 869 | Input/Output: [(-65 36 83 96) -65]
Test Case: 870 | Input/Output: [(66 -21 23 94) -21]
Test Case: 871 | Input/Output: [(89 -40 -29 7) -40]
Test Case: 872 | Input/Output: [(48 -65 -10 -64) -65]
Test Case: 873 | Input/Output: [(-99 99 -64 47) -99]
Test Case: 874 | Input/Output: [(79 -51 -79 -28) -79]
Test Case: 875 | Input/Output: [(8 0 78 83) 0]
Test Case: 876 | Input/Output: [(-92 95 12 46) -92]
Test Case: 877 | Input/Output: [(-24 38 9 58) -24]
Test Case: 878 | Input/Output: [(82 98 -91 -94) -94]
Test Case: 879 | Input/Output: [(77 -82 -25 9) -82]
Test Case: 880 | Input/Output: [(-25 38 -85 -61) -85]
Test Case: 881 | Input/Output: [(-84 55 20 -77) -84]
Test Case: 882 | Input/Output: [(-48 60 -23 57) -48]
Test Case: 883 | Input/Output: [(-91 -87 -23 -23) -91]
Test Case: 884 | Input/Output: [(72 -81 27 -39) -81]
Test Case: 885 | Input/Output: [(59 -4 68 56) -4]
Test Case: 886 | Input/Output: [(93 -67 -10 85) -67]
Test Case: 887 | Input/Output: [(-27 -36 81 79) -36]
Test Case: 888 | Input/Output: [(-43 -82 -25 -72) -82]
Test Case: 889 | Input/Output: [(86 52 -17 -93) -93]
Test Case: 890 | Input/Output: [(95 80 51 -4) -4]
Test Case: 891 | Input/Output: [(-71 77 -60 -13) -71]
Test Case: 892 | Input/Output: [(-39 -36 21 68) -39]
Test Case: 893 | Input/Output: [(40 -87 56 29) -87]
Test Case: 894 | Input/Output: [(63 -63 -98 67) -98]
Test Case: 895 | Input/Output: [(92 48 -54 -98) -98]
Test Case: 896 | Input/Output: [(-54 -98 29 61) -98]
Test Case: 897 | Input/Output: [(60 100 -75 78) -75]
Test Case: 898 | Input/Output: [(-28 -38 -33 33) -38]
Test Case: 899 | Input/Output: [(-73 76 -29 73) -73]
Test Case: 900 | Input/Output: [(-48 -56 -82 -99) -99]
Test Case: 901 | Input/Output: [(-69 -6 23 -47) -69]
Test Case: 902 | Input/Output: [(85 -46 -84 -51) -84]
Test Case: 903 | Input/Output: [(76 -75 -43 54) -75]
Test Case: 904 | Input/Output: [(-24 71 -66 -2) -66]
Test Case: 905 | Input/Output: [(27 -33 88 -25) -33]
Test Case: 906 | Input/Output: [(36 -25 -96 81) -96]
Test Case: 907 | Input/Output: [(-20 44 -76 -26) -76]
Test Case: 908 | Input/Output: [(88 -15 -6 -5) -15]
Test Case: 909 | Input/Output: [(34 -30 -67 -70) -70]
Test Case: 910 | Input/Output: [(2 -53 70 90) -53]
Test Case: 911 | Input/Output: [(14 80 -31 99) -31]
Test Case: 912 | Input/Output: [(65 88 -46 -88) -88]
Test Case: 913 | Input/Output: [(-81 -4 -79 35) -81]
Test Case: 914 | Input/Output: [(-20 62 42 -25) -25]
Test Case: 915 | Input/Output: [(-62 -70 84 97) -70]
Test Case: 916 | Input/Output: [(44 70 -21 -15) -21]
Test Case: 917 | Input/Output: [(55 36 -72 -87) -87]
Test Case: 918 | Input/Output: [(-80 -11 35 96) -80]
Test Case: 919 | Input/Output: [(18 -30 -91 -81) -91]
Test Case: 920 | Input/Output: [(-14 -24 -34 36) -34]
Test Case: 921 | Input/Output: [(-76 -20 -17 -18) -76]
Test Case: 922 | Input/Output: [(-16 44 1 88) -16]
Test Case: 923 | Input/Output: [(28 -55 -69 32) -69]
Test Case: 924 | Input/Output: [(33 53 -47 -62) -62]
Test Case: 925 | Input/Output: [(-27 -8 -14 -82) -82]
Test Case: 926 | Input/Output: [(-30 91 36 42) -30]
Test Case: 927 | Input/Output: [(2 -12 -3 -49) -49]
Test Case: 928 | Input/Output: [(45 45 91 90) 45]
Test Case: 929 | Input/Output: [(50 -45 -28 -2) -45]
Test Case: 930 | Input/Output: [(-99 -39 -74 -19) -99]
Test Case: 931 | Input/Output: [(-15 -79 -65 -30) -79]
Test Case: 932 | Input/Output: [(-4 28 60 61) -4]
Test Case: 933 | Input/Output: [(-48 -68 -70 -79) -79]
Test Case: 934 | Input/Output: [(-11 12 -12 -4) -12]
Test Case: 935 | Input/Output: [(-38 -61 -51 -95) -95]
Test Case: 936 | Input/Output: [(-57 -53 17 66) -57]
Test Case: 937 | Input/Output: [(23 83 37 37) 23]
Test Case: 938 | Input/Output: [(-34 -99 57 17) -99]
Test Case: 939 | Input/Output: [(-1 -91 75 78) -91]
Test Case: 940 | Input/Output: [(-85 -58 25 8) -85]
Test Case: 941 | Input/Output: [(-97 -16 98 97) -97]
Test Case: 942 | Input/Output: [(86 46 -22 22) -22]
Test Case: 943 | Input/Output: [(-95 -79 16 -50) -95]
Test Case: 944 | Input/Output: [(-53 -48 83 76) -53]
Test Case: 945 | Input/Output: [(62 71 -32 -82) -82]
Test Case: 946 | Input/Output: [(72 1 -42 -87) -87]
Test Case: 947 | Input/Output: [(51 -79 33 -87) -87]
Test Case: 948 | Input/Output: [(-95 43 69 -23) -95]
Test Case: 949 | Input/Output: [(-25 66 54 -28) -28]
Test Case: 950 | Input/Output: [(44 19 -79 24) -79]
Test Case: 951 | Input/Output: [(80 -55 46 -68) -68]
Test Case: 952 | Input/Output: [(-33 -40 -75 -34) -75]
Test Case: 953 | Input/Output: [(37 -70 29 52) -70]
Test Case: 954 | Input/Output: [(55 -16 87 57) -16]
Test Case: 955 | Input/Output: [(42 49 76 41) 41]
Test Case: 956 | Input/Output: [(12 -48 -100 -19) -100]
Test Case: 957 | Input/Output: [(76 38 -4 34) -4]
Test Case: 958 | Input/Output: [(-56 24 80 -73) -73]
Test Case: 959 | Input/Output: [(-31 -42 -42 15) -42]
Test Case: 960 | Input/Output: [(-92 -76 -4 -58) -92]
Test Case: 961 | Input/Output: [(-44 -52 -13 -3) -52]
Test Case: 962 | Input/Output: [(-4 81 72 62) -4]
Test Case: 963 | Input/Output: [(79 99 -11 -78) -78]
Test Case: 964 | Input/Output: [(-9 71 -70 96) -70]
Test Case: 965 | Input/Output: [(15 88 -38 -38) -38]
Test Case: 966 | Input/Output: [(54 -67 -88 24) -88]
Test Case: 967 | Input/Output: [(98 14 80 -17) -17]
Test Case: 968 | Input/Output: [(56 35 -96 -19) -96]
Test Case: 969 | Input/Output: [(-40 94 -100 -41) -100]
Test Case: 970 | Input/Output: [(-73 -10 -58 13) -73]
Test Case: 971 | Input/Output: [(-39 -59 91 -36) -59]
Test Case: 972 | Input/Output: [(-29 -50 -25 -30) -50]
Test Case: 973 | Input/Output: [(-59 -12 89 -40) -59]
Test Case: 974 | Input/Output: [(25 12 -12 16) -12]
Test Case: 975 | Input/Output: [(83 -71 -31 -39) -71]
Test Case: 976 | Input/Output: [(47 40 53 53) 40]
Test Case: 977 | Input/Output: [(57 -40 -16 93) -40]
Test Case: 978 | Input/Output: [(-29 91 86 74) -29]
Test Case: 979 | Input/Output: [(59 -5 -68 -92) -92]
Test Case: 980 | Input/Output: [(-45 -79 -4 -53) -79]
Test Case: 981 | Input/Output: [(11 92 3 18) 3]
Test Case: 982 | Input/Output: [(15 15 50 39) 15]
Test Case: 983 | Input/Output: [(-49 -6 -75 -28) -75]
Test Case: 984 | Input/Output: [(22 85 -95 -44) -95]
Test Case: 985 | Input/Output: [(6 87 97 -39) -39]
Test Case: 986 | Input/Output: [(86 75 58 -24) -24]
Test Case: 987 | Input/Output: [(64 30 67 74) 30]
Test Case: 988 | Input/Output: [(-55 47 -4 -55) -55]
Test Case: 989 | Input/Output: [(-52 -70 -53 16) -70]
Test Case: 990 | Input/Output: [(39 9 52 -48) -48]
Test Case: 991 | Input/Output: [(-4 43 1 76) -4]
Test Case: 992 | Input/Output: [(-6 -67 -81 -3) -81]
Test Case: 993 | Input/Output: [(94 22 -88 -54) -88]
Test Case: 994 | Input/Output: [(-10 17 -11 -2) -11]
Test Case: 995 | Input/Output: [(97 -2 96 79) -2]
Test Case: 996 | Input/Output: [(-57 20 90 51) -57]
Test Case: 997 | Input/Output: [(25 -6 66 81) -6]
Test Case: 998 | Input/Output: [(-76 -75 6 -80) -80]
Test Case: 999 | Input/Output: [(-16 -86 19 -36) -86]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = -33 44 -15 44 -68 -32 69 26 83 -101 -81 15 110 -114 -26 32
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-50 -50 -87 -50] -87] [[-19 -19 18 -19] -19] [[93 65 65 65] 65] [[-89 -89 -89 -41] -89] [[18 17 17 17] 17] [[-35 -66 -35 -35] -66] [[4 -26 -26 -26] -26] [[-98 15 15 15] -98] [[-79 -25 -25 -25] -79] [[12 73 73 73] 12] [(-78 -78 -78 -78) -78] [(-37 -37 -37 -37) -37] [(-22 -22 -22 -22) -22] [(-97 -97 -97 -97) -97] [(67 67 67 67) 67] [(96 0 82 10) 0] [(86 32 64 62) 32] [(12 96 77 24) 12] [(47 26 18 39) 18] [(1 35 12 88) 1] [(2 20 46 19) 2] [(95 27 97 0) 0] [(23 72 48 58) 23] [(77 32 16 4) 4] [(30 13 16 44) 13] [(1 73 47 96) 1] [(27 64 62 49) 27] [(35 56 57 31) 31] [(7 62 88 70) 7] [(72 31 69 79) 31] [(34 83 81 12) 12] [(69 5 22 87) 5] [(26 37 45 70) 26] [(81 67 0 16) 0] [(90 13 11 39) 11] [(-21 -25 -36 -22) -36] [(-54 -41 91 -27) -54] [(-34 -2 31 -96) -96] [(91 52 53 88) 52] [(80 70 -40 21) -40] [(-77 -30 -10 -100) -100] [(85 -86 -57 38) -86] [(58 -46 44 -33) -46] [(-53 45 -16 -63) -63] [(-70 6 52 -2) -70] [(-73 42 -27 -16) -73] [(-92 20 57 -31) -92] [(22 18 56 90) 18] [(-19 15 49 -100) -100] [(33 66 -94 18) -94] [(-55 -25 55 63) -55] [(55 31 8 -94) -94] [(-12 -79 68 50) -79] [(-89 23 -66 -66) -89] [(-100 -45 89 -13) -100] [(-32 46 91 -9) -32] [(17 63 45 49) 17] [(35 -80 83 46) -80] [(-61 46 -23 77) -61] [(-39 64 -7 56) -39] [(-63 -96 3 -51) -96] [(-16 -60 -56 94) -60] [(99 84 38 21) 21] [(51 79 34 -69) -69] [(-31 -35 15 80) -35] [(-87 3 63 44) -87] [(23 44 66 24) 23] [(92 21 -67 61) -67] [(-19 34 -7 40) -19] [(-17 78 92 90) -17] [(-40 -36 -68 -57) -68] [(-62 23 -12 18) -62] [(-14 -60 -56 91) -60] [(-77 -94 4 97) -94] [(15 -1 -52 -46) -52] [(-71 -31 96 -99) -99] [(9 82 46 93) 9] [(-37 52 -42 -66) -66] [(-7 7 -34 30) -34] [(-78 -78 70 -64) -78] [(-13 -52 90 94) -52] [(-69 93 66 -19) -69] [(50 -98 30 19) -98] [(88 -66 -29 -14) -66] [(11 65 -87 56) -87] [(-99 69 40 41) -99] [(-80 33 -37 37) -80] [(14 -87 17 23) -87] [(49 26 -86 -20) -86] [(-57 86 -96 -4) -96] [(53 -80 100 -86) -86] [(55 95 -79 80) -79] [(18 62 90 4) 4] [(-34 -27 100 64) -34] [(6 52 2 -85) -85])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 636
Test mean error for best: 0.63600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: 18                 
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: 15                 
Correct output: -79                 | Program output: -25                
Correct output: 12                  | Program output: 73                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 82                 
Correct output: 32                  | Program output: 64                 
Correct output: 12                  | Program output: 77                 
Correct output: 18                  | Program output: 18                 
Correct output: 1                   | Program output: 12                 
Correct output: 2                   | Program output: 46                 
Correct output: 0                   | Program output: 97                 
Correct output: 23                  | Program output: 48                 
Correct output: 4                   | Program output: 16                 
Correct output: 13                  | Program output: 16                 
Correct output: 1                   | Program output: 47                 
Correct output: 27                  | Program output: 62                 
Correct output: 31                  | Program output: 57                 
Correct output: 7                   | Program output: 88                 
Correct output: 31                  | Program output: 69                 
Correct output: 12                  | Program output: 81                 
Correct output: 5                   | Program output: 22                 
Correct output: 26                  | Program output: 45                 
Correct output: 0                   | Program output: 0                  
Correct output: 11                  | Program output: 11                 
Correct output: -36                 | Program output: -36                
Correct output: -54                 | Program output: 91                 
Correct output: -96                 | Program output: 31                 
Correct output: 52                  | Program output: 53                 
Correct output: -40                 | Program output: -40                
Correct output: -100                | Program output: -10                
Correct output: -86                 | Program output: -57                
Correct output: -46                 | Program output: 44                 
Correct output: -63                 | Program output: -16                
Correct output: -70                 | Program output: 52                 
Correct output: -73                 | Program output: -27                
Correct output: -92                 | Program output: 57                 
Correct output: 18                  | Program output: 56                 
Correct output: -100                | Program output: 49                 
Correct output: -94                 | Program output: -94                
Correct output: -55                 | Program output: 55                 
Correct output: -94                 | Program output: 8                  
Correct output: -79                 | Program output: 68                 
Correct output: -89                 | Program output: -66                
Correct output: -100                | Program output: 89                 
Correct output: -32                 | Program output: 91                 
Correct output: 17                  | Program output: 45                 
Correct output: -80                 | Program output: 83                 
Correct output: -61                 | Program output: -23                
Correct output: -39                 | Program output: -7                 
Correct output: -96                 | Program output: 3                  
Correct output: -60                 | Program output: -56                
Correct output: 21                  | Program output: 38                 
Correct output: -69                 | Program output: 34                 
Correct output: -35                 | Program output: 15                 
Correct output: -87                 | Program output: 63                 
Correct output: 23                  | Program output: 66                 
Correct output: -67                 | Program output: -67                
Correct output: -19                 | Program output: -7                 
Correct output: -17                 | Program output: 92                 
Correct output: -68                 | Program output: -68                
Correct output: -62                 | Program output: -12                
Correct output: -60                 | Program output: -56                
Correct output: -94                 | Program output: 4                  
Correct output: -52                 | Program output: -52                
Correct output: -99                 | Program output: 96                 
Correct output: 9                   | Program output: 46                 
Correct output: -66                 | Program output: -42                
Correct output: -34                 | Program output: -34                
Correct output: -78                 | Program output: 70                 
Correct output: -52                 | Program output: 90                 
Correct output: -69                 | Program output: 66                 
Correct output: -98                 | Program output: 30                 
Correct output: -66                 | Program output: -29                
Correct output: -87                 | Program output: -87                
Correct output: -99                 | Program output: 40                 
Correct output: -80                 | Program output: -37                
Correct output: -87                 | Program output: 17                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -86                 | Program output: 100                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 90                 
Correct output: -34                 | Program output: 100                
Correct output: -85                 | Program output: 2                  
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_when} {:close 0, :instruction tagged_238} {:close 0, :instruction exec_noop} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction print_integer} {:close 0, :instruction exec_if} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction integer_sub})
Lexicase best program: (exec_when (tagged_238 exec_noop in3 boolean_or print_integer exec_if (exec_s_when_autoconstructing (integer_min integer_sub) () ()) ()))
Lexicase best errors: [0 1 1 0 0 0 1 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 17
Percent parens: 0.412
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_when} {:close 0, :instruction tagged_238} {:close 0, :instruction exec_noop} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction print_integer} {:close 0, :instruction exec_if} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_min} {:close 1, :instruction integer_sub})
Zero cases best program: (exec_when (tagged_238 exec_noop in3 boolean_or print_integer exec_if (exec_s_when_autoconstructing (integer_min integer_sub) () ()) ()))
Zero cases best errors: [0 1 1 0 0 0 1 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 17
Percent parens: 0.412
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 1 2 3 7 3 2 8 5 4)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (3 1 2 3 7 3 2 8 5 4)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_not} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_stackdepth} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_min} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_max} {:close 1, :instruction integer_mod} {:close 1, :instruction integer_min} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_flush} {:close 0, :instruction -44} {:close 0, :instruction integer_mod} {:close 0, :instruction in3} {:close 0, :instruction print_newline} {:close 1, :instruction exec_do*count} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 0, :instruction print_newline} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction print_newline} {:close 1, :instruction in4} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_flush} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_dup} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_yank} {:close 0, :instruction print_boolean} {:close 1, :instruction -29} {:close 0, :instruction integer_add} {:close 0, :instruction -56} {:close 0, :instruction exec_while} {:close 1, :instruction integer_flush} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_not} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_inc} {:close 2, :instruction exec_s} {:close 1, :instruction in1})
Best program: (boolean_not integer_mod integer_gt integer_max boolean_stackdepth integer_stackdepth boolean_frominteger integer_min exec_yank integer_yankdup integer_max integer_mod integer_min exec_dup_items boolean_shove boolean_dup_items in3 print_integer boolean_invert_second_then_and boolean_dup_times exec_do*times (integer_gt exec_dup_items boolean_shove exec_y_when_autoconstructing (integer_fromboolean exec_flush integer_dup_times exec_flush -44 integer_mod in3 print_newline exec_do*count () print_boolean exec_shove () in1 print_newline integer_lte integer_fromboolean boolean_empty integer_dup print_newline in4) exec_yank exec_flush integer_rot) exec_empty integer_dup integer_eq boolean_xor integer_fromboolean integer_inc exec_dup () boolean_pop integer_lt integer_yank print_boolean -29 integer_add -56 exec_while (integer_flush) integer_fromboolean exec_eq exec_do*range () exec_eq integer_inc integer_shove boolean_empty integer_mod boolean_not boolean_flush exec_k_when_autoconstructing () (integer_fromboolean integer_inc exec_s () () (in1)))
Errors: [0 1 1 0 0 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 78
Size: 91
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 9.962
Median total errors in population: 10
Error averages by case: (0.997 0.999 0.998 0.997 0.993 0.997 0.998 0.992 0.995 0.996)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.158
Average program size in population (points): 70.64
Average percent parens in population: 0.280
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.267
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 468925
--- Timings ---
Current time: 1559593778304 milliseconds
Total Time:           2.6 seconds
Initialization:       0.1 seconds,  3.7%
Reproduction:         0.8 seconds, 30.0%
Fitness Testing:      1.7 seconds, 66.3%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 650
Test mean error for best: 0.65000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -50                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 93                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 18                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: 4                  
Correct output: -98                 | Program output: -98                
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 12                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 96                 
Correct output: 32                  | Program output: 86                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 47                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 95                 
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 77                 
Correct output: 13                  | Program output: 30                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 35                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 72                 
Correct output: 12                  | Program output: 34                 
Correct output: 5                   | Program output: 69                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 81                 
Correct output: 11                  | Program output: 90                 
Correct output: -36                 | Program output: -21                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -34                
Correct output: 52                  | Program output: 91                 
Correct output: -40                 | Program output: 80                 
Correct output: -100                | Program output: -77                
Correct output: -86                 | Program output: 85                 
Correct output: -46                 | Program output: 58                 
Correct output: -63                 | Program output: -53                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -19                
Correct output: -94                 | Program output: 33                 
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: 55                 
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -16                
Correct output: 21                  | Program output: 99                 
Correct output: -69                 | Program output: 51                 
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: 92                 
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -40                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -14                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: 15                 
Correct output: -99                 | Program output: -71                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -37                
Correct output: -34                 | Program output: -7                 
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 50                 
Correct output: -66                 | Program output: 88                 
Correct output: -87                 | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: 49                 
Correct output: -96                 | Program output: -57                
Correct output: -86                 | Program output: 53                 
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 18                 
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: 6                  
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in2} {:close 0, :instruction integer_mult} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_div} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_eq} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction print_newline} {:close 1, :instruction exec_s_when_autoconstructing} {:close 2, :instruction integer_dup_times} {:close 1, :instruction integer_dup} {:close 1, :instruction print_newline} {:close 0, :instruction exec_do*count} {:close 0, :instruction print_integer} {:close 1, :instruction tag_integer_167} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction integer_mod} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_dup} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_rot})
Lexicase best program: (in2 integer_mult integer_gte boolean_yankdup integer_yankdup exec_s_when_autoconstructing (exec_do*while (integer_div integer_lte integer_dup_times integer_eq) integer_yank exec_eq) (boolean_stackdepth print_newline exec_s_when_autoconstructing () (integer_dup_times) () integer_dup) (print_newline) exec_do*count (print_integer tag_integer_167) boolean_frominteger integer_mod integer_mod integer_rot integer_gte boolean_stackdepth boolean_frominteger integer_dup_items integer_sub boolean_pop integer_add boolean_dup_items integer_lt integer_dup exec_when () boolean_invert_first_then_and exec_noop exec_noop exec_rot () () ())
Lexicase best errors: [1 1 0 0 0 1 1 0 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 54
Percent parens: 0.241
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in2} {:close 0, :instruction integer_mult} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_div} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_eq} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction print_newline} {:close 1, :instruction exec_s_when_autoconstructing} {:close 2, :instruction integer_dup_times} {:close 1, :instruction integer_dup} {:close 1, :instruction print_newline} {:close 0, :instruction exec_do*count} {:close 0, :instruction print_integer} {:close 1, :instruction tag_integer_167} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction integer_mod} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_dup} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_rot})
Zero cases best program: (in2 integer_mult integer_gte boolean_yankdup integer_yankdup exec_s_when_autoconstructing (exec_do*while (integer_div integer_lte integer_dup_times integer_eq) integer_yank exec_eq) (boolean_stackdepth print_newline exec_s_when_autoconstructing () (integer_dup_times) () integer_dup) (print_newline) exec_do*count (print_integer tag_integer_167) boolean_frominteger integer_mod integer_mod integer_rot integer_gte boolean_stackdepth boolean_frominteger integer_dup_items integer_sub boolean_pop integer_add boolean_dup_items integer_lt integer_dup exec_when () boolean_invert_first_then_and exec_noop exec_noop exec_rot () () ())
Zero cases best errors: [1 1 0 0 0 1 1 0 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 54
Percent parens: 0.241
--- Lexicase Population Statistics ---
Count of elite individuals by case: (227 226 352 33 581 227 313 47 581 1)
Population mean number of elite cases: 2.59
Count of perfect (error zero) individuals by case: (227 226 352 33 581 227 313 47 581 1)
Population mean number of perfect (error zero) cases: 2.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_dec} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_rot} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_while} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 0, :instruction integer_flush} {:close 0, :instruction 15} {:close 1, :instruction exec_flush} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction in1} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_dup_times})
Best program: (exec_yankdup in1 print_integer integer_dup exec_y (exec_do*count (exec_dup (integer_add boolean_dup_items integer_dec) exec_swap () (integer_rot in1 boolean_invert_first_then_and integer_empty exec_while (exec_flush exec_while (boolean_eq integer_flush exec_empty) boolean_invert_first_then_and integer_flush boolean_stackdepth boolean_swap in3 integer_flush 15 exec_flush) boolean_not integer_lt) exec_do*count (in4 integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_dup_times (integer_yankdup boolean_not in1 boolean_rot boolean_yankdup integer_min boolean_flush integer_flush exec_dup_times ())) () ()))))
Errors: [0 0 1 1 0 0 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 48
Size: 62
Percent parens: 0.226
--- Population Statistics ---
Average total errors in population: 7.412
Median total errors in population: 6
Error averages by case: (0.773 0.774 0.648 0.967 0.419 0.773 0.687 0.953 0.419 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 58.064
Average program size in population (points): 76.2
Average percent parens in population: 0.251
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 26
Genome diversity (% unique genomes):	 0.95
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.95
Total error diversity:				 0.006
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.141
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1032272
--- Timings ---
Current time: 1559593781010 milliseconds
Total Time:           4.8 seconds
Initialization:       0.1 seconds,  2.0%
Reproduction:         1.8 seconds, 37.4%
Fitness Testing:      2.5 seconds, 52.4%
Report:               0.4 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 417
Test mean error for best: 0.41700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -50                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: -98                
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 12                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 10                 
Correct output: 32                  | Program output: 62                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 39                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 30                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 72                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 69                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 16                 
Correct output: 11                  | Program output: 39                 
Correct output: -36                 | Program output: -22                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 88                 
Correct output: -40                 | Program output: 21                 
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: 38                 
Correct output: -46                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: 18                 
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -16                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: 61                 
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -57                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -14                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: -46                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -7                 
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 19                 
Correct output: -66                 | Program output: -14                
Correct output: -87                 | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: -20                
Correct output: -96                 | Program output: -57                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Lexicase best program: (exec_yankdup in1 in4 boolean_eq integer_min print_integer integer_dup exec_y (exec_do*count (exec_dup (integer_add boolean_dup_items boolean_yank integer_dec) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (exec_flush exec_while (boolean_eq integer_inc integer_flush exec_empty) boolean_yankdup boolean_invert_first_then_and integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove boolean_not integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (integer_yankdup boolean_not in1 exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap)) () ())))))
Lexicase best errors: [0 0 1 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 69
Percent parens: 0.203
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Zero cases best program: (exec_yankdup in1 in4 boolean_eq integer_min print_integer integer_dup exec_y (exec_do*count (exec_dup (integer_add boolean_dup_items boolean_yank integer_dec) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (exec_flush exec_while (boolean_eq integer_inc integer_flush exec_empty) boolean_yankdup boolean_invert_first_then_and integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove boolean_not integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (integer_yankdup boolean_not in1 exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap)) () ())))))
Zero cases best errors: [0 0 1 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 69
Percent parens: 0.203
--- Lexicase Population Statistics ---
Count of elite individuals by case: (297 126 113 132 725 126 186 190 408 126)
Population mean number of elite cases: 2.43
Count of perfect (error zero) individuals by case: (297 126 113 132 725 126 186 190 408 126)
Population mean number of perfect (error zero) cases: 2.43
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_dec} {:close 1, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_while} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 0, :instruction integer_flush} {:close 0, :instruction 15} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction in1} {:close 0, :instruction boolean_rot} {:close 0, :instruction 88} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Best program: (in1 in4 boolean_eq integer_min print_integer integer_dup exec_y (exec_do*count (exec_dup (integer_add boolean_dup_items integer_dec) exec_swap () (in1 boolean_invert_first_then_and integer_eq exec_while (exec_flush integer_stackdepth exec_while (boolean_eq integer_flush exec_empty) boolean_yankdup boolean_invert_first_then_and integer_flush boolean_stackdepth -85 boolean_swap in3 integer_flush 15 boolean_shove exec_flush) boolean_not integer_lt) integer_fromboolean exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items exec_s (integer_yankdup boolean_not in1 boolean_rot 88 exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap) () ()))))
Errors: [0 0 1 0 0 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 55
Size: 67
Percent parens: 0.179
--- Population Statistics ---
Average total errors in population: 7.571
Median total errors in population: 8
Error averages by case: (0.703 0.874 0.887 0.868 0.275 0.874 0.814 0.81 0.592 0.874)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.312
Average program size in population (points): 66.891
Average percent parens in population: 0.238
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.007
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.107
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1676685
--- Timings ---
Current time: 1559593783802 milliseconds
Total Time:           7.7 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         3.0 seconds, 39.0%
Fitness Testing:      3.3 seconds, 42.8%
Report:               1.3 seconds, 16.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 192
Test mean error for best: 0.19200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: -98                
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 12                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 10                 
Correct output: 32                  | Program output: 62                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 18                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 16                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 69                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 22                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 0                  
Correct output: 11                  | Program output: 11                 
Correct output: -36                 | Program output: -36                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 53                 
Correct output: -40                 | Program output: -40                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -57                
Correct output: -46                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: -94                
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -56                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: -67                
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -68                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -56                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: -52                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -34                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 19                 
Correct output: -66                 | Program output: -29                
Correct output: -87                 | Program output: -87                
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Lexicase best program: (exec_yankdup in1 in4 in3 integer_min integer_min print_integer exec_y (exec_do*count (exec_dup (integer_add boolean_dup_items boolean_yank integer_dec) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_inc integer_flush exec_empty) integer_pop) boolean_yankdup boolean_invert_first_then_and exec_pop (integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove boolean_not integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (integer_yankdup exec_do*range (boolean_not exec_k (integer_yank) (print_boolean boolean_rot exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap))) () ())))))
Lexicase best errors: [0 1 0 0 0 1 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 75
Percent parens: 0.213
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Zero cases best program: (exec_yankdup in1 in4 in3 integer_min integer_min print_integer exec_y (exec_do*count (exec_dup (integer_add boolean_dup_items boolean_yank integer_dec) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_inc integer_flush exec_empty) integer_pop) boolean_yankdup boolean_invert_first_then_and exec_pop (integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove boolean_not integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (integer_yankdup exec_do*range (boolean_not exec_k (integer_yank) (print_boolean boolean_rot exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap))) () ())))))
Zero cases best errors: [0 1 0 0 0 1 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 75
Percent parens: 0.213
--- Lexicase Population Statistics ---
Count of elite individuals by case: (631 178 84 380 429 161 632 380 737 84)
Population mean number of elite cases: 3.70
Count of perfect (error zero) individuals by case: (631 178 84 380 429 161 632 380 737 84)
Population mean number of perfect (error zero) cases: 3.70
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Best program: (exec_yankdup in1 in4 in3 integer_min integer_min print_integer exec_y (exec_do*count (exec_dup (integer_add boolean_dup_items boolean_yank integer_dec) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_inc integer_flush exec_empty) integer_pop) boolean_yankdup boolean_invert_first_then_and exec_pop (integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove boolean_not integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (integer_yankdup exec_do*range (boolean_not exec_k (integer_yank) (print_boolean boolean_rot exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap))) () ())))))
Errors: [0 1 0 0 0 1 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 59
Size: 75
Percent parens: 0.213
--- Population Statistics ---
Average total errors in population: 6.304
Median total errors in population: 5
Error averages by case: (0.369 0.822 0.916 0.62 0.571 0.839 0.368 0.62 0.263 0.916)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 54.296
Average program size in population (points): 70.836
Average percent parens in population: 0.233
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.009
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.147
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2502199
--- Timings ---
Current time: 1559593786727 milliseconds
Total Time:          10.6 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         4.3 seconds, 40.6%
Fitness Testing:      4.1 seconds, 38.9%
Report:               2.1 seconds, 19.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 192
Test mean error for best: 0.19200
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 1
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 1
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 1
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 1
Test Case   91 | Error: 1
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 1
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 1
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 1
Test Case  216 | Error: 1
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 1
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 1
Test Case  335 | Error: 0
Test Case  336 | Error: 1
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 1
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 1
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 1
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 1
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 1
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 1
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 1
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 1
Test Case  524 | Error: 1
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 1
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 1
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 1
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 1
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 1
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 1
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 1
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 1
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 1
Test Case  769 | Error: 1
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 1
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 1
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 1
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 1
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 1
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 1
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 1
Test Case  872 | Error: 1
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 1
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 1
Test Case  930 | Error: 0
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 1
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 1
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 1
Test Case  988 | Error: 0
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: -98                
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 12                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 10                 
Correct output: 32                  | Program output: 62                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 18                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 16                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 69                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 22                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 0                  
Correct output: 11                  | Program output: 11                 
Correct output: -36                 | Program output: -36                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 53                 
Correct output: -40                 | Program output: -40                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -57                
Correct output: -46                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: -94                
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -56                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: -67                
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -68                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -56                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: -52                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -34                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 19                 
Correct output: -66                 | Program output: -29                
Correct output: -87                 | Program output: -87                
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 2, :instruction boolean_xor} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Lexicase best program: (exec_yankdup in1 in4 in3 integer_min integer_min print_integer exec_y (exec_dup (integer_add exec_y (boolean_dup_items boolean_yank integer_dec) integer_gt in1 boolean_xor)) boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (integer_inc integer_flush exec_empty) integer_pop) boolean_yankdup boolean_invert_first_then_and exec_pop (integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove boolean_not integer_lt) exec_do*count (exec_stackdepth integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (integer_yankdup exec_do*range (boolean_not exec_k (integer_yank) (print_boolean boolean_rot exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap))) () ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 72
Percent parens: 0.194
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction integer_gt} {:close 0, :instruction in1} {:close 2, :instruction boolean_xor} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Zero cases best program: (exec_yankdup in1 in4 in3 integer_min integer_min print_integer exec_y (exec_dup (integer_add exec_y (boolean_dup_items boolean_yank integer_dec) integer_gt in1 boolean_xor)) boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (integer_inc integer_flush exec_empty) integer_pop) boolean_yankdup boolean_invert_first_then_and exec_pop (integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove boolean_not integer_lt) exec_do*count (exec_stackdepth integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (integer_yankdup exec_do*range (boolean_not exec_k (integer_yank) (print_boolean boolean_rot exec_eq boolean_yankdup integer_min boolean_flush integer_flush integer_swap))) () ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 72
Percent parens: 0.194
--- Lexicase Population Statistics ---
Count of elite individuals by case: (390 547 807 742 394 547 372 452 386 548)
Population mean number of elite cases: 5.18
Count of perfect (error zero) individuals by case: (390 547 807 742 394 547 372 452 386 548)
Population mean number of perfect (error zero) cases: 5.18
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction exec_s} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dec} {:close 1, :instruction in3} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_empty} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_max} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction -85} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_shove} {:close 1, :instruction integer_lt} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_s} {:close 0, :instruction exec_while} {:close 0, :instruction exec_do*range} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 1, :instruction integer_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_swap})
Best program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 60
Size: 83
Percent parens: 0.277
--- Population Statistics ---
Average total errors in population: 4.815
Median total errors in population: 5
Error averages by case: (0.61 0.453 0.193 0.258 0.606 0.453 0.628 0.548 0.614 0.452)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 57.118
Average program size in population (points): 72.882
Average percent parens in population: 0.215
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.01
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.126
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 3590604
--- Timings ---
Current time: 1559593789865 milliseconds
Total Time:          13.7 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         5.5 seconds, 40.2%
Fitness Testing:      5.2 seconds, 38.2%
Report:               2.9 seconds, 20.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 4
Successful program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 83


Auto-simplifying with starting size: 83
step: 0
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 500
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 1000
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 1500
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 2000
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 2500
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 3000
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 3500
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 4000
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 4500
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

step: 5000
program: (exec_yankdup in1 in4 in3 integer_min integer_min exec_s () (print_integer exec_y (exec_do*count (exec_dup (integer_add exec_s () (boolean_yank integer_dec) (in3) integer_gt exec_swap () (in1 boolean_invert_first_then_and exec_while (boolean_flush exec_flush exec_while (boolean_eq integer_flush exec_empty) integer_pop) boolean_invert_first_then_and exec_pop (integer_max) integer_flush boolean_stackdepth -85 boolean_swap integer_flush boolean_shove integer_lt) exec_do*count (in4 integer_mult integer_inc boolean_invert_second_then_and integer_dup_items integer_dec exec_s (exec_while (exec_do*range (integer_empty) boolean_not exec_k (integer_yank) (boolean_rot exec_eq boolean_yankdup integer_stackdepth integer_min boolean_flush integer_flush integer_swap))) () ()))))) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 83

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 192
Test mean error for best: 0.19200
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 1
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 1
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 1
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 1
Test Case   91 | Error: 1
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 1
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 1
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 1
Test Case  216 | Error: 1
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 1
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 1
Test Case  335 | Error: 0
Test Case  336 | Error: 1
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 1
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 1
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 1
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 1
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 1
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 1
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 1
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 1
Test Case  524 | Error: 1
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 1
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 1
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 1
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 1
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 1
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 1
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 1
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 1
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 1
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 1
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 1
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 1
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 1
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 1
Test Case  769 | Error: 1
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 1
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 1
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 1
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 1
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 1
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 1
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 1
Test Case  872 | Error: 1
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 1
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 1
Test Case  930 | Error: 0
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 1
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 1
Test Case  977 | Error: 1
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 1
Test Case  988 | Error: 0
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -19                 | Program output: -19                
Correct output: 65                  | Program output: 65                 
Correct output: -89                 | Program output: -89                
Correct output: 17                  | Program output: 17                 
Correct output: -66                 | Program output: -35                
Correct output: -26                 | Program output: -26                
Correct output: -98                 | Program output: -98                
Correct output: -79                 | Program output: -79                
Correct output: 12                  | Program output: 12                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: -37                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: 67                  | Program output: 67                 
Correct output: 0                   | Program output: 10                 
Correct output: 32                  | Program output: 62                 
Correct output: 12                  | Program output: 12                 
Correct output: 18                  | Program output: 18                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 23                  | Program output: 23                 
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 16                 
Correct output: 1                   | Program output: 1                  
Correct output: 27                  | Program output: 27                 
Correct output: 31                  | Program output: 31                 
Correct output: 7                   | Program output: 7                  
Correct output: 31                  | Program output: 69                 
Correct output: 12                  | Program output: 12                 
Correct output: 5                   | Program output: 22                 
Correct output: 26                  | Program output: 26                 
Correct output: 0                   | Program output: 0                  
Correct output: 11                  | Program output: 11                 
Correct output: -36                 | Program output: -36                
Correct output: -54                 | Program output: -54                
Correct output: -96                 | Program output: -96                
Correct output: 52                  | Program output: 53                 
Correct output: -40                 | Program output: -40                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -57                
Correct output: -46                 | Program output: -33                
Correct output: -63                 | Program output: -63                
Correct output: -70                 | Program output: -70                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: 18                  | Program output: 22                 
Correct output: -100                | Program output: -100               
Correct output: -94                 | Program output: -94                
Correct output: -55                 | Program output: -55                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -12                
Correct output: -89                 | Program output: -89                
Correct output: -100                | Program output: -100               
Correct output: -32                 | Program output: -32                
Correct output: 17                  | Program output: 17                 
Correct output: -80                 | Program output: 35                 
Correct output: -61                 | Program output: -61                
Correct output: -39                 | Program output: -39                
Correct output: -96                 | Program output: -63                
Correct output: -60                 | Program output: -56                
Correct output: 21                  | Program output: 21                 
Correct output: -69                 | Program output: -69                
Correct output: -35                 | Program output: -31                
Correct output: -87                 | Program output: -87                
Correct output: 23                  | Program output: 23                 
Correct output: -67                 | Program output: -67                
Correct output: -19                 | Program output: -19                
Correct output: -17                 | Program output: -17                
Correct output: -68                 | Program output: -68                
Correct output: -62                 | Program output: -62                
Correct output: -60                 | Program output: -56                
Correct output: -94                 | Program output: -77                
Correct output: -52                 | Program output: -52                
Correct output: -99                 | Program output: -99                
Correct output: 9                   | Program output: 9                  
Correct output: -66                 | Program output: -66                
Correct output: -34                 | Program output: -34                
Correct output: -78                 | Program output: -78                
Correct output: -52                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -98                 | Program output: 19                 
Correct output: -66                 | Program output: -29                
Correct output: -87                 | Program output: -87                
Correct output: -99                 | Program output: -99                
Correct output: -80                 | Program output: -80                
Correct output: -87                 | Program output: 14                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -85                 | Program output: -85                
;;******************************
