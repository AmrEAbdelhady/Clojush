Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-38 65 -38 -38] -38] [[62 62 62 -72] -72] [[-100 -22 -100 -100] -100] [[76 76 -50 76] -50] [[92 21 92 92] 21] [[90 90 90 79] 79] [[67 70 67 67] 67] [[26 -10 26 26] -10] [[91 91 23 91] 23] [[86 -26 -26 -26] -26] [(41 41 41 41) 41] [(-57 -57 -57 -57) -57] [(-82 -82 -82 -82) -82] [(-36 -36 -36 -36) -36] [(-86 -86 -86 -86) -86] [(51 80 16 90) 16] [(97 36 88 84) 36] [(48 43 42 16) 16] [(29 43 62 77) 29] [(81 57 4 41) 4] [(0 66 15 45) 0] [(40 34 94 67) 34] [(85 55 35 80) 35] [(47 44 100 47) 44] [(72 28 78 93) 28] [(35 68 85 6) 6] [(14 33 84 17) 14] [(71 57 65 21) 21] [(31 4 92 12) 4] [(68 4 100 18) 4] [(87 0 25 37) 0] [(45 16 7 32) 7] [(43 54 72 45) 43] [(24 55 91 24) 24] [(81 28 57 34) 28] [(-65 -77 -37 12) -77] [(-36 35 94 37) -36] [(84 88 -88 84) -88] [(32 25 -29 96) -29] [(15 -98 -86 -30) -98] [(98 64 -26 68) -26] [(11 46 -21 -13) -21] [(60 -79 97 -50) -79] [(-74 -86 -64 22) -86] [(-95 -14 34 -72) -95] [(31 -86 -46 -95) -95] [(19 73 -29 -26) -29] [(1 -35 52 -73) -73] [(-92 -53 20 68) -92] [(-52 -80 8 60) -80] [(-41 -61 92 -37) -61] [(6 44 82 -86) -86] [(-98 55 14 62) -98] [(-83 14 13 13) -83] [(-97 18 -61 -61) -97] [(-93 -23 47 -14) -93] [(87 -64 -24 90) -64] [(18 49 45 -7) -7] [(13 -57 -88 13) -88] [(93 71 -65 59) -65] [(-3 -42 80 52) -42] [(26 80 -5 -98) -98] [(54 -31 -92 -15) -92] [(-55 -62 -13 -50) -62] [(-70 68 -48 -91) -91] [(-41 10 -5 -47) -47] [(-97 60 19 -25) -97] [(-70 -8 80 70) -70] [(75 64 53 -88) -88] [(-94 0 -9 -21) -94] [(-79 23 28 1) -79] [(-53 26 28 29) -53] [(93 89 10 66) 10] [(63 49 49 -44) -44] [(79 -52 51 12) -52] [(-25 -54 14 13) -54] [(-94 89 29 -35) -94] [(-44 22 -1 -24) -44] [(71 -69 -96 15) -96] [(-53 43 89 -38) -53] [(-38 -7 -75 42) -75] [(87 25 24 74) 24] [(16 -72 -92 97) -92] [(-92 -61 -18 -33) -92] [(29 -18 56 64) -18] [(76 13 80 -78) -78] [(-57 -64 -89 -26) -89] [(-81 40 -18 13) -81] [(-98 -11 -64 61) -98] [(-6 17 -20 89) -20] [(51 -7 -88 82) -88] [(-28 92 -94 87) -94] [(-60 70 -1 46) -60] [(-96 92 100 -29) -96] [(-98 82 14 83) -98])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-38 65 -38 -38] -38]
Train Case:   6 | Input/Output: [[62 62 62 -72] -72]
Train Case:   7 | Input/Output: [[-100 -22 -100 -100] -100]
Train Case:   8 | Input/Output: [[76 76 -50 76] -50]
Train Case:   9 | Input/Output: [[92 21 92 92] 21]
Train Case:  10 | Input/Output: [[90 90 90 79] 79]
Train Case:  11 | Input/Output: [[67 70 67 67] 67]
Train Case:  12 | Input/Output: [[26 -10 26 26] -10]
Train Case:  13 | Input/Output: [[91 91 23 91] 23]
Train Case:  14 | Input/Output: [[86 -26 -26 -26] -26]
Train Case:  15 | Input/Output: [(41 41 41 41) 41]
Train Case:  16 | Input/Output: [(-57 -57 -57 -57) -57]
Train Case:  17 | Input/Output: [(-82 -82 -82 -82) -82]
Train Case:  18 | Input/Output: [(-36 -36 -36 -36) -36]
Train Case:  19 | Input/Output: [(-86 -86 -86 -86) -86]
Train Case:  20 | Input/Output: [(51 80 16 90) 16]
Train Case:  21 | Input/Output: [(97 36 88 84) 36]
Train Case:  22 | Input/Output: [(48 43 42 16) 16]
Train Case:  23 | Input/Output: [(29 43 62 77) 29]
Train Case:  24 | Input/Output: [(81 57 4 41) 4]
Train Case:  25 | Input/Output: [(0 66 15 45) 0]
Train Case:  26 | Input/Output: [(40 34 94 67) 34]
Train Case:  27 | Input/Output: [(85 55 35 80) 35]
Train Case:  28 | Input/Output: [(47 44 100 47) 44]
Train Case:  29 | Input/Output: [(72 28 78 93) 28]
Train Case:  30 | Input/Output: [(35 68 85 6) 6]
Train Case:  31 | Input/Output: [(14 33 84 17) 14]
Train Case:  32 | Input/Output: [(71 57 65 21) 21]
Train Case:  33 | Input/Output: [(31 4 92 12) 4]
Train Case:  34 | Input/Output: [(68 4 100 18) 4]
Train Case:  35 | Input/Output: [(87 0 25 37) 0]
Train Case:  36 | Input/Output: [(45 16 7 32) 7]
Train Case:  37 | Input/Output: [(43 54 72 45) 43]
Train Case:  38 | Input/Output: [(24 55 91 24) 24]
Train Case:  39 | Input/Output: [(81 28 57 34) 28]
Train Case:  40 | Input/Output: [(-65 -77 -37 12) -77]
Train Case:  41 | Input/Output: [(-36 35 94 37) -36]
Train Case:  42 | Input/Output: [(84 88 -88 84) -88]
Train Case:  43 | Input/Output: [(32 25 -29 96) -29]
Train Case:  44 | Input/Output: [(15 -98 -86 -30) -98]
Train Case:  45 | Input/Output: [(98 64 -26 68) -26]
Train Case:  46 | Input/Output: [(11 46 -21 -13) -21]
Train Case:  47 | Input/Output: [(60 -79 97 -50) -79]
Train Case:  48 | Input/Output: [(-74 -86 -64 22) -86]
Train Case:  49 | Input/Output: [(-95 -14 34 -72) -95]
Train Case:  50 | Input/Output: [(31 -86 -46 -95) -95]
Train Case:  51 | Input/Output: [(19 73 -29 -26) -29]
Train Case:  52 | Input/Output: [(1 -35 52 -73) -73]
Train Case:  53 | Input/Output: [(-92 -53 20 68) -92]
Train Case:  54 | Input/Output: [(-52 -80 8 60) -80]
Train Case:  55 | Input/Output: [(-41 -61 92 -37) -61]
Train Case:  56 | Input/Output: [(6 44 82 -86) -86]
Train Case:  57 | Input/Output: [(-98 55 14 62) -98]
Train Case:  58 | Input/Output: [(-83 14 13 13) -83]
Train Case:  59 | Input/Output: [(-97 18 -61 -61) -97]
Train Case:  60 | Input/Output: [(-93 -23 47 -14) -93]
Train Case:  61 | Input/Output: [(87 -64 -24 90) -64]
Train Case:  62 | Input/Output: [(18 49 45 -7) -7]
Train Case:  63 | Input/Output: [(13 -57 -88 13) -88]
Train Case:  64 | Input/Output: [(93 71 -65 59) -65]
Train Case:  65 | Input/Output: [(-3 -42 80 52) -42]
Train Case:  66 | Input/Output: [(26 80 -5 -98) -98]
Train Case:  67 | Input/Output: [(54 -31 -92 -15) -92]
Train Case:  68 | Input/Output: [(-55 -62 -13 -50) -62]
Train Case:  69 | Input/Output: [(-70 68 -48 -91) -91]
Train Case:  70 | Input/Output: [(-41 10 -5 -47) -47]
Train Case:  71 | Input/Output: [(-97 60 19 -25) -97]
Train Case:  72 | Input/Output: [(-70 -8 80 70) -70]
Train Case:  73 | Input/Output: [(75 64 53 -88) -88]
Train Case:  74 | Input/Output: [(-94 0 -9 -21) -94]
Train Case:  75 | Input/Output: [(-79 23 28 1) -79]
Train Case:  76 | Input/Output: [(-53 26 28 29) -53]
Train Case:  77 | Input/Output: [(93 89 10 66) 10]
Train Case:  78 | Input/Output: [(63 49 49 -44) -44]
Train Case:  79 | Input/Output: [(79 -52 51 12) -52]
Train Case:  80 | Input/Output: [(-25 -54 14 13) -54]
Train Case:  81 | Input/Output: [(-94 89 29 -35) -94]
Train Case:  82 | Input/Output: [(-44 22 -1 -24) -44]
Train Case:  83 | Input/Output: [(71 -69 -96 15) -96]
Train Case:  84 | Input/Output: [(-53 43 89 -38) -53]
Train Case:  85 | Input/Output: [(-38 -7 -75 42) -75]
Train Case:  86 | Input/Output: [(87 25 24 74) 24]
Train Case:  87 | Input/Output: [(16 -72 -92 97) -92]
Train Case:  88 | Input/Output: [(-92 -61 -18 -33) -92]
Train Case:  89 | Input/Output: [(29 -18 56 64) -18]
Train Case:  90 | Input/Output: [(76 13 80 -78) -78]
Train Case:  91 | Input/Output: [(-57 -64 -89 -26) -89]
Train Case:  92 | Input/Output: [(-81 40 -18 13) -81]
Train Case:  93 | Input/Output: [(-98 -11 -64 61) -98]
Train Case:  94 | Input/Output: [(-6 17 -20 89) -20]
Train Case:  95 | Input/Output: [(51 -7 -88 82) -88]
Train Case:  96 | Input/Output: [(-28 92 -94 87) -94]
Train Case:  97 | Input/Output: [(-60 70 -1 46) -60]
Train Case:  98 | Input/Output: [(-96 92 100 -29) -96]
Train Case:  99 | Input/Output: [(-98 82 14 83) -98]
Test Case:   0 | Input/Output: [[57 41 41 41] 41]
Test Case:   1 | Input/Output: [[-97 -97 -97 -18] -97]
Test Case:   2 | Input/Output: [[-28 -28 -28 -85] -85]
Test Case:   3 | Input/Output: [[60 -26 60 60] -26]
Test Case:   4 | Input/Output: [[47 20 47 47] 20]
Test Case:   5 | Input/Output: [[29 -74 -74 -74] -74]
Test Case:   6 | Input/Output: [[71 -71 71 71] -71]
Test Case:   7 | Input/Output: [[-99 -99 -99 58] -99]
Test Case:   8 | Input/Output: [[61 -10 -10 -10] -10]
Test Case:   9 | Input/Output: [[-6 -6 -85 -6] -85]
Test Case:  10 | Input/Output: [[43 -70 43 43] -70]
Test Case:  11 | Input/Output: [[-11 -32 -11 -11] -32]
Test Case:  12 | Input/Output: [[23 23 23 20] 20]
Test Case:  13 | Input/Output: [[54 55 54 54] 54]
Test Case:  14 | Input/Output: [[-85 -85 -85 -27] -85]
Test Case:  15 | Input/Output: [[85 -95 85 85] -95]
Test Case:  16 | Input/Output: [[-34 -34 -34 -41] -41]
Test Case:  17 | Input/Output: [[56 -84 56 56] -84]
Test Case:  18 | Input/Output: [[-90 -90 -20 -90] -90]
Test Case:  19 | Input/Output: [[-29 -29 -29 34] -29]
Test Case:  20 | Input/Output: [[71 71 -24 71] -24]
Test Case:  21 | Input/Output: [[62 62 62 -3] -3]
Test Case:  22 | Input/Output: [[84 82 84 84] 82]
Test Case:  23 | Input/Output: [[-57 -57 64 -57] -57]
Test Case:  24 | Input/Output: [[-57 -86 -86 -86] -86]
Test Case:  25 | Input/Output: [[36 -100 36 36] -100]
Test Case:  26 | Input/Output: [[77 77 77 21] 21]
Test Case:  27 | Input/Output: [[-84 -84 26 -84] -84]
Test Case:  28 | Input/Output: [[48 48 48 -35] -35]
Test Case:  29 | Input/Output: [[-94 -51 -94 -94] -94]
Test Case:  30 | Input/Output: [[51 51 52 51] 51]
Test Case:  31 | Input/Output: [[33 -27 -27 -27] -27]
Test Case:  32 | Input/Output: [[76 17 17 17] 17]
Test Case:  33 | Input/Output: [[18 18 -93 18] -93]
Test Case:  34 | Input/Output: [[-14 -14 -97 -14] -97]
Test Case:  35 | Input/Output: [[-46 68 -46 -46] -46]
Test Case:  36 | Input/Output: [[8 -31 8 8] -31]
Test Case:  37 | Input/Output: [[9 -33 9 9] -33]
Test Case:  38 | Input/Output: [[72 30 72 72] 30]
Test Case:  39 | Input/Output: [[30 30 -32 30] -32]
Test Case:  40 | Input/Output: [[15 -1 -1 -1] -1]
Test Case:  41 | Input/Output: [[-28 -28 5 -28] -28]
Test Case:  42 | Input/Output: [[73 73 73 -25] -25]
Test Case:  43 | Input/Output: [[-46 -46 -46 -3] -46]
Test Case:  44 | Input/Output: [[-3 -40 -3 -3] -40]
Test Case:  45 | Input/Output: [[-8 66 -8 -8] -8]
Test Case:  46 | Input/Output: [[-6 15 -6 -6] -6]
Test Case:  47 | Input/Output: [[4 -28 -28 -28] -28]
Test Case:  48 | Input/Output: [[-84 -18 -84 -84] -84]
Test Case:  49 | Input/Output: [[54 54 54 -33] -33]
Test Case:  50 | Input/Output: [[-55 -55 -25 -55] -55]
Test Case:  51 | Input/Output: [[-86 -11 -11 -11] -86]
Test Case:  52 | Input/Output: [[56 56 51 56] 51]
Test Case:  53 | Input/Output: [[-50 -50 24 -50] -50]
Test Case:  54 | Input/Output: [[44 44 44 1] 1]
Test Case:  55 | Input/Output: [[77 77 49 77] 49]
Test Case:  56 | Input/Output: [[95 95 95 53] 53]
Test Case:  57 | Input/Output: [[-59 -36 -36 -36] -59]
Test Case:  58 | Input/Output: [[-49 -49 -49 -20] -49]
Test Case:  59 | Input/Output: [[-68 -69 -69 -69] -69]
Test Case:  60 | Input/Output: [[-35 88 -35 -35] -35]
Test Case:  61 | Input/Output: [[-26 25 25 25] -26]
Test Case:  62 | Input/Output: [[-27 -13 -13 -13] -27]
Test Case:  63 | Input/Output: [[-15 -15 -15 -84] -84]
Test Case:  64 | Input/Output: [[85 80 85 85] 80]
Test Case:  65 | Input/Output: [[55 55 55 21] 21]
Test Case:  66 | Input/Output: [[-83 21 21 21] -83]
Test Case:  67 | Input/Output: [[-6 -6 -6 91] -6]
Test Case:  68 | Input/Output: [[61 -91 -91 -91] -91]
Test Case:  69 | Input/Output: [[-68 -68 -68 90] -68]
Test Case:  70 | Input/Output: [[19 19 19 70] 19]
Test Case:  71 | Input/Output: [[-21 -19 -21 -21] -21]
Test Case:  72 | Input/Output: [[87 -98 87 87] -98]
Test Case:  73 | Input/Output: [[3 -72 3 3] -72]
Test Case:  74 | Input/Output: [[-95 95 -95 -95] -95]
Test Case:  75 | Input/Output: [[45 45 96 45] 45]
Test Case:  76 | Input/Output: [[-47 -42 -42 -42] -47]
Test Case:  77 | Input/Output: [[95 95 95 -71] -71]
Test Case:  78 | Input/Output: [[60 60 -3 60] -3]
Test Case:  79 | Input/Output: [[-79 -47 -47 -47] -79]
Test Case:  80 | Input/Output: [[80 80 80 56] 56]
Test Case:  81 | Input/Output: [[-94 4 4 4] -94]
Test Case:  82 | Input/Output: [[-35 -28 -28 -28] -35]
Test Case:  83 | Input/Output: [[-72 99 99 99] -72]
Test Case:  84 | Input/Output: [[57 -92 -92 -92] -92]
Test Case:  85 | Input/Output: [[-27 -27 -27 24] -27]
Test Case:  86 | Input/Output: [[98 -53 -53 -53] -53]
Test Case:  87 | Input/Output: [[-88 -82 -82 -82] -88]
Test Case:  88 | Input/Output: [[-11 -27 -11 -11] -27]
Test Case:  89 | Input/Output: [[-79 -79 -79 -43] -79]
Test Case:  90 | Input/Output: [[-29 -75 -75 -75] -75]
Test Case:  91 | Input/Output: [[5 5 90 5] 5]
Test Case:  92 | Input/Output: [[50 50 50 63] 50]
Test Case:  93 | Input/Output: [[-85 -85 -97 -85] -97]
Test Case:  94 | Input/Output: [[82 82 42 82] 42]
Test Case:  95 | Input/Output: [[-20 -20 -20 20] -20]
Test Case:  96 | Input/Output: [[-68 -68 -68 84] -68]
Test Case:  97 | Input/Output: [[58 58 34 58] 34]
Test Case:  98 | Input/Output: [[-55 39 -55 -55] -55]
Test Case:  99 | Input/Output: [[-51 -95 -51 -51] -95]
Test Case: 100 | Input/Output: [(62 62 62 62) 62]
Test Case: 101 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 102 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 103 | Input/Output: [(97 97 97 97) 97]
Test Case: 104 | Input/Output: [(92 92 92 92) 92]
Test Case: 105 | Input/Output: [(10 10 10 10) 10]
Test Case: 106 | Input/Output: [(7 7 7 7) 7]
Test Case: 107 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 108 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 109 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 110 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 111 | Input/Output: [(62 62 62 62) 62]
Test Case: 112 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 113 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 114 | Input/Output: [(5 5 5 5) 5]
Test Case: 115 | Input/Output: [(95 95 95 95) 95]
Test Case: 116 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 117 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 118 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 119 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 120 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 121 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 122 | Input/Output: [(32 32 32 32) 32]
Test Case: 123 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 124 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 125 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 126 | Input/Output: [(92 92 92 92) 92]
Test Case: 127 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 128 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 129 | Input/Output: [(44 44 44 44) 44]
Test Case: 130 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 131 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 132 | Input/Output: [(15 15 15 15) 15]
Test Case: 133 | Input/Output: [(85 85 85 85) 85]
Test Case: 134 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 135 | Input/Output: [(78 78 78 78) 78]
Test Case: 136 | Input/Output: [(56 56 56 56) 56]
Test Case: 137 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 138 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 139 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 140 | Input/Output: [(51 51 51 51) 51]
Test Case: 141 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 142 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 143 | Input/Output: [(45 45 45 45) 45]
Test Case: 144 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 145 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 146 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 147 | Input/Output: [(33 33 33 33) 33]
Test Case: 148 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 149 | Input/Output: [(34 34 34 34) 34]
Test Case: 150 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 151 | Input/Output: [(64 64 64 64) 64]
Test Case: 152 | Input/Output: [(71 71 71 71) 71]
Test Case: 153 | Input/Output: [(5 5 5 5) 5]
Test Case: 154 | Input/Output: [(59 59 59 59) 59]
Test Case: 155 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 156 | Input/Output: [(64 64 64 64) 64]
Test Case: 157 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 158 | Input/Output: [(11 11 11 11) 11]
Test Case: 159 | Input/Output: [(85 85 85 85) 85]
Test Case: 160 | Input/Output: [(70 70 70 70) 70]
Test Case: 161 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 162 | Input/Output: [(61 61 61 61) 61]
Test Case: 163 | Input/Output: [(35 35 35 35) 35]
Test Case: 164 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 165 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 166 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 167 | Input/Output: [(62 62 62 62) 62]
Test Case: 168 | Input/Output: [(98 98 98 98) 98]
Test Case: 169 | Input/Output: [(77 77 77 77) 77]
Test Case: 170 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 171 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 172 | Input/Output: [(35 35 35 35) 35]
Test Case: 173 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 174 | Input/Output: [(73 73 73 73) 73]
Test Case: 175 | Input/Output: [(29 29 29 29) 29]
Test Case: 176 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 177 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 178 | Input/Output: [(78 78 78 78) 78]
Test Case: 179 | Input/Output: [(16 16 16 16) 16]
Test Case: 180 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 181 | Input/Output: [(77 77 77 77) 77]
Test Case: 182 | Input/Output: [(54 54 54 54) 54]
Test Case: 183 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 184 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 185 | Input/Output: [(56 56 56 56) 56]
Test Case: 186 | Input/Output: [(62 62 62 62) 62]
Test Case: 187 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 188 | Input/Output: [(60 60 60 60) 60]
Test Case: 189 | Input/Output: [(54 54 54 54) 54]
Test Case: 190 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 191 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 192 | Input/Output: [(51 51 51 51) 51]
Test Case: 193 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 194 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 195 | Input/Output: [(16 16 16 16) 16]
Test Case: 196 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 197 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 198 | Input/Output: [(10 10 10 10) 10]
Test Case: 199 | Input/Output: [(45 45 45 45) 45]
Test Case: 200 | Input/Output: [(40 95 57 74) 40]
Test Case: 201 | Input/Output: [(18 5 63 8) 5]
Test Case: 202 | Input/Output: [(88 41 81 81) 41]
Test Case: 203 | Input/Output: [(11 15 90 86) 11]
Test Case: 204 | Input/Output: [(55 12 92 20) 12]
Test Case: 205 | Input/Output: [(24 60 87 54) 24]
Test Case: 206 | Input/Output: [(5 8 87 53) 5]
Test Case: 207 | Input/Output: [(51 84 75 39) 39]
Test Case: 208 | Input/Output: [(84 84 52 75) 52]
Test Case: 209 | Input/Output: [(37 47 70 77) 37]
Test Case: 210 | Input/Output: [(26 63 66 96) 26]
Test Case: 211 | Input/Output: [(99 84 95 61) 61]
Test Case: 212 | Input/Output: [(16 19 14 51) 14]
Test Case: 213 | Input/Output: [(89 80 62 68) 62]
Test Case: 214 | Input/Output: [(61 6 82 67) 6]
Test Case: 215 | Input/Output: [(1 13 72 98) 1]
Test Case: 216 | Input/Output: [(17 76 11 57) 11]
Test Case: 217 | Input/Output: [(50 8 90 31) 8]
Test Case: 218 | Input/Output: [(17 28 20 79) 17]
Test Case: 219 | Input/Output: [(59 18 41 90) 18]
Test Case: 220 | Input/Output: [(27 21 25 70) 21]
Test Case: 221 | Input/Output: [(64 16 46 62) 16]
Test Case: 222 | Input/Output: [(43 47 41 10) 10]
Test Case: 223 | Input/Output: [(8 44 36 99) 8]
Test Case: 224 | Input/Output: [(81 81 0 23) 0]
Test Case: 225 | Input/Output: [(50 85 70 2) 2]
Test Case: 226 | Input/Output: [(67 34 30 79) 30]
Test Case: 227 | Input/Output: [(38 29 42 70) 29]
Test Case: 228 | Input/Output: [(29 3 10 11) 3]
Test Case: 229 | Input/Output: [(96 62 91 7) 7]
Test Case: 230 | Input/Output: [(83 18 0 54) 0]
Test Case: 231 | Input/Output: [(46 52 23 23) 23]
Test Case: 232 | Input/Output: [(99 89 46 12) 12]
Test Case: 233 | Input/Output: [(47 40 1 79) 1]
Test Case: 234 | Input/Output: [(30 92 89 24) 24]
Test Case: 235 | Input/Output: [(71 11 96 18) 11]
Test Case: 236 | Input/Output: [(2 68 48 87) 2]
Test Case: 237 | Input/Output: [(97 8 98 5) 5]
Test Case: 238 | Input/Output: [(56 3 28 22) 3]
Test Case: 239 | Input/Output: [(54 16 60 32) 16]
Test Case: 240 | Input/Output: [(77 60 35 100) 35]
Test Case: 241 | Input/Output: [(20 25 28 84) 20]
Test Case: 242 | Input/Output: [(24 17 85 49) 17]
Test Case: 243 | Input/Output: [(97 54 20 82) 20]
Test Case: 244 | Input/Output: [(34 67 28 86) 28]
Test Case: 245 | Input/Output: [(73 30 8 27) 8]
Test Case: 246 | Input/Output: [(89 60 1 10) 1]
Test Case: 247 | Input/Output: [(84 93 84 25) 25]
Test Case: 248 | Input/Output: [(44 6 72 25) 6]
Test Case: 249 | Input/Output: [(51 97 77 36) 36]
Test Case: 250 | Input/Output: [(98 49 6 44) 6]
Test Case: 251 | Input/Output: [(65 34 26 74) 26]
Test Case: 252 | Input/Output: [(68 52 64 36) 36]
Test Case: 253 | Input/Output: [(58 99 41 85) 41]
Test Case: 254 | Input/Output: [(61 37 97 11) 11]
Test Case: 255 | Input/Output: [(65 44 76 53) 44]
Test Case: 256 | Input/Output: [(10 10 36 77) 10]
Test Case: 257 | Input/Output: [(0 84 26 44) 0]
Test Case: 258 | Input/Output: [(79 26 59 70) 26]
Test Case: 259 | Input/Output: [(47 61 41 26) 26]
Test Case: 260 | Input/Output: [(59 92 89 29) 29]
Test Case: 261 | Input/Output: [(52 52 34 5) 5]
Test Case: 262 | Input/Output: [(80 21 77 25) 21]
Test Case: 263 | Input/Output: [(78 89 70 82) 70]
Test Case: 264 | Input/Output: [(81 15 58 68) 15]
Test Case: 265 | Input/Output: [(87 89 86 94) 86]
Test Case: 266 | Input/Output: [(24 22 46 11) 11]
Test Case: 267 | Input/Output: [(56 22 78 68) 22]
Test Case: 268 | Input/Output: [(40 93 72 83) 40]
Test Case: 269 | Input/Output: [(4 2 64 43) 2]
Test Case: 270 | Input/Output: [(20 92 16 29) 16]
Test Case: 271 | Input/Output: [(65 92 71 77) 65]
Test Case: 272 | Input/Output: [(26 96 17 64) 17]
Test Case: 273 | Input/Output: [(11 59 34 98) 11]
Test Case: 274 | Input/Output: [(70 47 55 52) 47]
Test Case: 275 | Input/Output: [(30 7 75 38) 7]
Test Case: 276 | Input/Output: [(63 15 57 97) 15]
Test Case: 277 | Input/Output: [(13 48 99 58) 13]
Test Case: 278 | Input/Output: [(23 68 64 52) 23]
Test Case: 279 | Input/Output: [(7 92 50 98) 7]
Test Case: 280 | Input/Output: [(93 28 53 62) 28]
Test Case: 281 | Input/Output: [(54 23 24 60) 23]
Test Case: 282 | Input/Output: [(66 66 89 22) 22]
Test Case: 283 | Input/Output: [(20 8 46 62) 8]
Test Case: 284 | Input/Output: [(56 23 72 59) 23]
Test Case: 285 | Input/Output: [(85 56 60 69) 56]
Test Case: 286 | Input/Output: [(24 9 83 47) 9]
Test Case: 287 | Input/Output: [(11 93 63 80) 11]
Test Case: 288 | Input/Output: [(93 89 66 13) 13]
Test Case: 289 | Input/Output: [(34 70 89 41) 34]
Test Case: 290 | Input/Output: [(62 88 49 33) 33]
Test Case: 291 | Input/Output: [(29 83 87 28) 28]
Test Case: 292 | Input/Output: [(2 29 46 49) 2]
Test Case: 293 | Input/Output: [(91 60 47 59) 47]
Test Case: 294 | Input/Output: [(10 79 92 83) 10]
Test Case: 295 | Input/Output: [(2 41 44 7) 2]
Test Case: 296 | Input/Output: [(60 42 43 5) 5]
Test Case: 297 | Input/Output: [(94 81 14 13) 13]
Test Case: 298 | Input/Output: [(53 41 20 57) 20]
Test Case: 299 | Input/Output: [(60 2 73 15) 2]
Test Case: 300 | Input/Output: [(56 60 95 73) 56]
Test Case: 301 | Input/Output: [(94 25 26 87) 25]
Test Case: 302 | Input/Output: [(23 59 61 27) 23]
Test Case: 303 | Input/Output: [(78 94 36 58) 36]
Test Case: 304 | Input/Output: [(40 11 76 2) 2]
Test Case: 305 | Input/Output: [(66 32 18 8) 8]
Test Case: 306 | Input/Output: [(90 37 3 75) 3]
Test Case: 307 | Input/Output: [(65 51 47 69) 47]
Test Case: 308 | Input/Output: [(33 91 25 54) 25]
Test Case: 309 | Input/Output: [(31 22 96 1) 1]
Test Case: 310 | Input/Output: [(24 85 67 71) 24]
Test Case: 311 | Input/Output: [(73 72 13 4) 4]
Test Case: 312 | Input/Output: [(8 89 31 29) 8]
Test Case: 313 | Input/Output: [(21 62 9 72) 9]
Test Case: 314 | Input/Output: [(14 81 34 73) 14]
Test Case: 315 | Input/Output: [(9 56 47 56) 9]
Test Case: 316 | Input/Output: [(70 26 85 84) 26]
Test Case: 317 | Input/Output: [(14 76 70 69) 14]
Test Case: 318 | Input/Output: [(21 67 14 20) 14]
Test Case: 319 | Input/Output: [(47 80 41 87) 41]
Test Case: 320 | Input/Output: [(94 31 64 99) 31]
Test Case: 321 | Input/Output: [(27 6 33 24) 6]
Test Case: 322 | Input/Output: [(77 49 40 92) 40]
Test Case: 323 | Input/Output: [(26 57 100 20) 20]
Test Case: 324 | Input/Output: [(90 75 94 74) 74]
Test Case: 325 | Input/Output: [(20 5 24 1) 1]
Test Case: 326 | Input/Output: [(96 45 13 65) 13]
Test Case: 327 | Input/Output: [(65 39 50 64) 39]
Test Case: 328 | Input/Output: [(67 45 8 23) 8]
Test Case: 329 | Input/Output: [(24 92 66 80) 24]
Test Case: 330 | Input/Output: [(49 69 50 52) 49]
Test Case: 331 | Input/Output: [(89 75 21 59) 21]
Test Case: 332 | Input/Output: [(8 2 73 33) 2]
Test Case: 333 | Input/Output: [(90 49 69 56) 49]
Test Case: 334 | Input/Output: [(75 41 81 37) 37]
Test Case: 335 | Input/Output: [(34 100 65 9) 9]
Test Case: 336 | Input/Output: [(54 60 69 86) 54]
Test Case: 337 | Input/Output: [(99 54 76 99) 54]
Test Case: 338 | Input/Output: [(83 9 78 17) 9]
Test Case: 339 | Input/Output: [(68 74 27 63) 27]
Test Case: 340 | Input/Output: [(64 49 49 45) 45]
Test Case: 341 | Input/Output: [(63 6 56 10) 6]
Test Case: 342 | Input/Output: [(95 42 39 80) 39]
Test Case: 343 | Input/Output: [(27 86 11 87) 11]
Test Case: 344 | Input/Output: [(73 70 74 92) 70]
Test Case: 345 | Input/Output: [(69 20 55 39) 20]
Test Case: 346 | Input/Output: [(21 95 32 87) 21]
Test Case: 347 | Input/Output: [(0 8 86 82) 0]
Test Case: 348 | Input/Output: [(31 12 90 26) 12]
Test Case: 349 | Input/Output: [(87 59 94 90) 59]
Test Case: 350 | Input/Output: [(90 61 38 18) 18]
Test Case: 351 | Input/Output: [(94 42 91 91) 42]
Test Case: 352 | Input/Output: [(43 98 89 37) 37]
Test Case: 353 | Input/Output: [(88 61 18 10) 10]
Test Case: 354 | Input/Output: [(2 86 52 6) 2]
Test Case: 355 | Input/Output: [(68 56 61 54) 54]
Test Case: 356 | Input/Output: [(61 25 19 33) 19]
Test Case: 357 | Input/Output: [(45 95 2 0) 0]
Test Case: 358 | Input/Output: [(9 28 51 16) 9]
Test Case: 359 | Input/Output: [(90 8 4 1) 1]
Test Case: 360 | Input/Output: [(81 98 36 68) 36]
Test Case: 361 | Input/Output: [(21 99 88 94) 21]
Test Case: 362 | Input/Output: [(65 8 46 2) 2]
Test Case: 363 | Input/Output: [(76 69 70 32) 32]
Test Case: 364 | Input/Output: [(84 86 9 0) 0]
Test Case: 365 | Input/Output: [(23 51 39 2) 2]
Test Case: 366 | Input/Output: [(23 26 0 20) 0]
Test Case: 367 | Input/Output: [(97 55 11 43) 11]
Test Case: 368 | Input/Output: [(76 26 34 7) 7]
Test Case: 369 | Input/Output: [(87 42 57 22) 22]
Test Case: 370 | Input/Output: [(2 48 84 13) 2]
Test Case: 371 | Input/Output: [(66 28 63 65) 28]
Test Case: 372 | Input/Output: [(38 55 7 59) 7]
Test Case: 373 | Input/Output: [(41 34 98 89) 34]
Test Case: 374 | Input/Output: [(14 13 45 15) 13]
Test Case: 375 | Input/Output: [(13 81 7 86) 7]
Test Case: 376 | Input/Output: [(69 88 26 51) 26]
Test Case: 377 | Input/Output: [(45 37 98 63) 37]
Test Case: 378 | Input/Output: [(57 19 97 19) 19]
Test Case: 379 | Input/Output: [(56 48 66 82) 48]
Test Case: 380 | Input/Output: [(92 86 37 0) 0]
Test Case: 381 | Input/Output: [(36 68 46 93) 36]
Test Case: 382 | Input/Output: [(41 69 10 56) 10]
Test Case: 383 | Input/Output: [(15 8 32 95) 8]
Test Case: 384 | Input/Output: [(97 61 4 8) 4]
Test Case: 385 | Input/Output: [(90 67 80 37) 37]
Test Case: 386 | Input/Output: [(53 71 15 91) 15]
Test Case: 387 | Input/Output: [(90 35 98 53) 35]
Test Case: 388 | Input/Output: [(55 55 69 37) 37]
Test Case: 389 | Input/Output: [(39 2 15 67) 2]
Test Case: 390 | Input/Output: [(88 85 68 33) 33]
Test Case: 391 | Input/Output: [(42 16 26 61) 16]
Test Case: 392 | Input/Output: [(52 10 25 54) 10]
Test Case: 393 | Input/Output: [(1 80 66 29) 1]
Test Case: 394 | Input/Output: [(36 20 37 94) 20]
Test Case: 395 | Input/Output: [(33 60 39 11) 11]
Test Case: 396 | Input/Output: [(40 43 76 91) 40]
Test Case: 397 | Input/Output: [(42 23 41 67) 23]
Test Case: 398 | Input/Output: [(93 64 97 70) 64]
Test Case: 399 | Input/Output: [(51 55 59 81) 51]
Test Case: 400 | Input/Output: [(-18 52 -80 24) -80]
Test Case: 401 | Input/Output: [(-98 65 -1 -88) -98]
Test Case: 402 | Input/Output: [(-25 87 26 17) -25]
Test Case: 403 | Input/Output: [(3 99 72 -29) -29]
Test Case: 404 | Input/Output: [(-96 -16 26 -24) -96]
Test Case: 405 | Input/Output: [(-80 -25 97 43) -80]
Test Case: 406 | Input/Output: [(88 42 -41 20) -41]
Test Case: 407 | Input/Output: [(-99 -62 100 44) -99]
Test Case: 408 | Input/Output: [(82 35 28 34) 28]
Test Case: 409 | Input/Output: [(58 45 28 -58) -58]
Test Case: 410 | Input/Output: [(93 -78 -12 47) -78]
Test Case: 411 | Input/Output: [(-56 -54 53 -1) -56]
Test Case: 412 | Input/Output: [(91 67 -5 -100) -100]
Test Case: 413 | Input/Output: [(-23 -62 13 64) -62]
Test Case: 414 | Input/Output: [(95 -10 50 -63) -63]
Test Case: 415 | Input/Output: [(-14 90 -5 36) -14]
Test Case: 416 | Input/Output: [(4 26 -25 -99) -99]
Test Case: 417 | Input/Output: [(-58 -27 -5 33) -58]
Test Case: 418 | Input/Output: [(87 -8 74 65) -8]
Test Case: 419 | Input/Output: [(-68 -7 88 18) -68]
Test Case: 420 | Input/Output: [(28 -8 100 -13) -13]
Test Case: 421 | Input/Output: [(-3 -91 -80 38) -91]
Test Case: 422 | Input/Output: [(-9 -75 -41 74) -75]
Test Case: 423 | Input/Output: [(-50 -75 39 49) -75]
Test Case: 424 | Input/Output: [(78 1 -21 -28) -28]
Test Case: 425 | Input/Output: [(-41 -6 -24 37) -41]
Test Case: 426 | Input/Output: [(97 -14 68 34) -14]
Test Case: 427 | Input/Output: [(-38 48 -22 91) -38]
Test Case: 428 | Input/Output: [(-73 39 -31 -21) -73]
Test Case: 429 | Input/Output: [(16 65 -95 0) -95]
Test Case: 430 | Input/Output: [(82 -45 -61 -49) -61]
Test Case: 431 | Input/Output: [(85 -19 -3 16) -19]
Test Case: 432 | Input/Output: [(-55 27 -91 -36) -91]
Test Case: 433 | Input/Output: [(26 -97 -37 -32) -97]
Test Case: 434 | Input/Output: [(76 -38 -78 -18) -78]
Test Case: 435 | Input/Output: [(34 -34 14 30) -34]
Test Case: 436 | Input/Output: [(-59 -93 67 -76) -93]
Test Case: 437 | Input/Output: [(-14 89 -70 -100) -100]
Test Case: 438 | Input/Output: [(77 -91 87 -54) -91]
Test Case: 439 | Input/Output: [(31 46 -8 -94) -94]
Test Case: 440 | Input/Output: [(34 -20 -90 -56) -90]
Test Case: 441 | Input/Output: [(35 -89 -5 -19) -89]
Test Case: 442 | Input/Output: [(-40 -96 -77 57) -96]
Test Case: 443 | Input/Output: [(-86 62 95 -22) -86]
Test Case: 444 | Input/Output: [(-44 69 -97 11) -97]
Test Case: 445 | Input/Output: [(46 -62 33 46) -62]
Test Case: 446 | Input/Output: [(-8 100 -28 -14) -28]
Test Case: 447 | Input/Output: [(97 -11 -71 83) -71]
Test Case: 448 | Input/Output: [(69 -45 62 51) -45]
Test Case: 449 | Input/Output: [(64 23 -62 1) -62]
Test Case: 450 | Input/Output: [(-75 -10 79 86) -75]
Test Case: 451 | Input/Output: [(22 -10 93 -85) -85]
Test Case: 452 | Input/Output: [(-60 -6 81 22) -60]
Test Case: 453 | Input/Output: [(12 64 93 -55) -55]
Test Case: 454 | Input/Output: [(-12 -53 76 17) -53]
Test Case: 455 | Input/Output: [(-26 74 20 -88) -88]
Test Case: 456 | Input/Output: [(37 15 -92 68) -92]
Test Case: 457 | Input/Output: [(-66 72 -82 -86) -86]
Test Case: 458 | Input/Output: [(-47 14 88 -43) -47]
Test Case: 459 | Input/Output: [(-32 -36 40 27) -36]
Test Case: 460 | Input/Output: [(-29 -2 25 36) -29]
Test Case: 461 | Input/Output: [(3 -78 -11 9) -78]
Test Case: 462 | Input/Output: [(-15 -24 99 96) -24]
Test Case: 463 | Input/Output: [(17 17 -27 -18) -27]
Test Case: 464 | Input/Output: [(-32 -37 57 -28) -37]
Test Case: 465 | Input/Output: [(-44 -23 86 -55) -55]
Test Case: 466 | Input/Output: [(-20 -30 -90 -81) -90]
Test Case: 467 | Input/Output: [(-34 -97 -97 -38) -97]
Test Case: 468 | Input/Output: [(42 56 85 35) 35]
Test Case: 469 | Input/Output: [(98 31 7 -84) -84]
Test Case: 470 | Input/Output: [(53 29 -42 36) -42]
Test Case: 471 | Input/Output: [(89 -68 66 -39) -68]
Test Case: 472 | Input/Output: [(-54 92 -59 -45) -59]
Test Case: 473 | Input/Output: [(49 20 2 -61) -61]
Test Case: 474 | Input/Output: [(10 -57 -88 22) -88]
Test Case: 475 | Input/Output: [(-59 4 -7 83) -59]
Test Case: 476 | Input/Output: [(69 -75 -76 -88) -88]
Test Case: 477 | Input/Output: [(24 -15 -2 -10) -15]
Test Case: 478 | Input/Output: [(-53 43 53 99) -53]
Test Case: 479 | Input/Output: [(-56 24 -39 31) -56]
Test Case: 480 | Input/Output: [(-27 36 1 36) -27]
Test Case: 481 | Input/Output: [(-54 -96 -9 -9) -96]
Test Case: 482 | Input/Output: [(100 -78 38 24) -78]
Test Case: 483 | Input/Output: [(-63 57 -57 48) -63]
Test Case: 484 | Input/Output: [(-38 -97 -83 -95) -97]
Test Case: 485 | Input/Output: [(1 -7 30 33) -7]
Test Case: 486 | Input/Output: [(60 -28 -95 81) -95]
Test Case: 487 | Input/Output: [(73 8 -36 44) -36]
Test Case: 488 | Input/Output: [(-26 61 28 -91) -91]
Test Case: 489 | Input/Output: [(70 -77 5 79) -77]
Test Case: 490 | Input/Output: [(-44 40 28 81) -44]
Test Case: 491 | Input/Output: [(57 -60 -20 -3) -60]
Test Case: 492 | Input/Output: [(55 37 13 -30) -30]
Test Case: 493 | Input/Output: [(-25 99 -82 100) -82]
Test Case: 494 | Input/Output: [(56 -96 31 -74) -96]
Test Case: 495 | Input/Output: [(16 -88 -20 -47) -88]
Test Case: 496 | Input/Output: [(-51 -36 9 66) -51]
Test Case: 497 | Input/Output: [(7 55 99 89) 7]
Test Case: 498 | Input/Output: [(-17 8 31 49) -17]
Test Case: 499 | Input/Output: [(-15 21 14 1) -15]
Test Case: 500 | Input/Output: [(-1 36 -50 62) -50]
Test Case: 501 | Input/Output: [(-16 68 -44 80) -44]
Test Case: 502 | Input/Output: [(-76 44 -25 -17) -76]
Test Case: 503 | Input/Output: [(-22 -63 -82 91) -82]
Test Case: 504 | Input/Output: [(-95 12 86 84) -95]
Test Case: 505 | Input/Output: [(7 85 -57 -40) -57]
Test Case: 506 | Input/Output: [(-25 12 -86 -61) -86]
Test Case: 507 | Input/Output: [(-23 91 -8 93) -23]
Test Case: 508 | Input/Output: [(61 -11 43 18) -11]
Test Case: 509 | Input/Output: [(-7 -27 -87 -37) -87]
Test Case: 510 | Input/Output: [(-13 -100 -63 87) -100]
Test Case: 511 | Input/Output: [(33 42 -3 58) -3]
Test Case: 512 | Input/Output: [(-83 14 -53 99) -83]
Test Case: 513 | Input/Output: [(64 52 93 -29) -29]
Test Case: 514 | Input/Output: [(-89 79 96 -26) -89]
Test Case: 515 | Input/Output: [(73 -46 26 66) -46]
Test Case: 516 | Input/Output: [(7 -27 -77 -21) -77]
Test Case: 517 | Input/Output: [(88 -90 -51 73) -90]
Test Case: 518 | Input/Output: [(-85 -58 -41 51) -85]
Test Case: 519 | Input/Output: [(-31 -87 71 -39) -87]
Test Case: 520 | Input/Output: [(-61 34 -56 -2) -61]
Test Case: 521 | Input/Output: [(20 -2 24 99) -2]
Test Case: 522 | Input/Output: [(-59 12 45 -66) -66]
Test Case: 523 | Input/Output: [(-12 92 -60 46) -60]
Test Case: 524 | Input/Output: [(98 96 -16 76) -16]
Test Case: 525 | Input/Output: [(61 -74 63 -66) -74]
Test Case: 526 | Input/Output: [(36 7 -87 -79) -87]
Test Case: 527 | Input/Output: [(33 -96 20 99) -96]
Test Case: 528 | Input/Output: [(81 -14 -15 99) -15]
Test Case: 529 | Input/Output: [(31 23 -39 70) -39]
Test Case: 530 | Input/Output: [(28 -68 -20 -34) -68]
Test Case: 531 | Input/Output: [(31 21 30 -85) -85]
Test Case: 532 | Input/Output: [(64 -69 -4 -90) -90]
Test Case: 533 | Input/Output: [(74 -70 39 -97) -97]
Test Case: 534 | Input/Output: [(97 -24 -57 -96) -96]
Test Case: 535 | Input/Output: [(-3 -96 -13 57) -96]
Test Case: 536 | Input/Output: [(20 -40 -62 -49) -62]
Test Case: 537 | Input/Output: [(-57 71 -4 91) -57]
Test Case: 538 | Input/Output: [(-25 86 -11 43) -25]
Test Case: 539 | Input/Output: [(56 -90 88 88) -90]
Test Case: 540 | Input/Output: [(-82 -1 37 56) -82]
Test Case: 541 | Input/Output: [(96 -72 -22 -37) -72]
Test Case: 542 | Input/Output: [(0 80 75 -31) -31]
Test Case: 543 | Input/Output: [(39 -26 68 96) -26]
Test Case: 544 | Input/Output: [(-48 16 32 23) -48]
Test Case: 545 | Input/Output: [(96 -94 -10 1) -94]
Test Case: 546 | Input/Output: [(-81 70 -4 -93) -93]
Test Case: 547 | Input/Output: [(74 83 80 29) 29]
Test Case: 548 | Input/Output: [(-51 -62 6 -55) -62]
Test Case: 549 | Input/Output: [(-76 74 46 -61) -76]
Test Case: 550 | Input/Output: [(70 58 -12 62) -12]
Test Case: 551 | Input/Output: [(54 47 -82 12) -82]
Test Case: 552 | Input/Output: [(52 67 6 -21) -21]
Test Case: 553 | Input/Output: [(-92 39 63 -85) -92]
Test Case: 554 | Input/Output: [(-14 -90 72 -69) -90]
Test Case: 555 | Input/Output: [(66 73 -29 15) -29]
Test Case: 556 | Input/Output: [(29 51 -13 65) -13]
Test Case: 557 | Input/Output: [(72 64 52 7) 7]
Test Case: 558 | Input/Output: [(15 -78 -41 31) -78]
Test Case: 559 | Input/Output: [(-98 61 10 -19) -98]
Test Case: 560 | Input/Output: [(-1 -56 -30 30) -56]
Test Case: 561 | Input/Output: [(25 93 60 72) 25]
Test Case: 562 | Input/Output: [(93 76 47 6) 6]
Test Case: 563 | Input/Output: [(-94 2 54 4) -94]
Test Case: 564 | Input/Output: [(90 73 -36 21) -36]
Test Case: 565 | Input/Output: [(-1 38 -3 52) -3]
Test Case: 566 | Input/Output: [(-72 -1 10 28) -72]
Test Case: 567 | Input/Output: [(-37 -26 17 -18) -37]
Test Case: 568 | Input/Output: [(82 -64 73 -56) -64]
Test Case: 569 | Input/Output: [(8 43 44 64) 8]
Test Case: 570 | Input/Output: [(3 -4 -22 84) -22]
Test Case: 571 | Input/Output: [(83 -79 -69 0) -79]
Test Case: 572 | Input/Output: [(-45 19 -3 53) -45]
Test Case: 573 | Input/Output: [(62 35 79 6) 6]
Test Case: 574 | Input/Output: [(-97 80 -75 -50) -97]
Test Case: 575 | Input/Output: [(7 16 42 -16) -16]
Test Case: 576 | Input/Output: [(-24 43 94 89) -24]
Test Case: 577 | Input/Output: [(17 -8 84 70) -8]
Test Case: 578 | Input/Output: [(-44 -21 11 -46) -46]
Test Case: 579 | Input/Output: [(95 -30 -79 56) -79]
Test Case: 580 | Input/Output: [(-5 32 46 -59) -59]
Test Case: 581 | Input/Output: [(-63 -47 -74 85) -74]
Test Case: 582 | Input/Output: [(44 88 -25 10) -25]
Test Case: 583 | Input/Output: [(-20 67 86 79) -20]
Test Case: 584 | Input/Output: [(44 -2 -65 61) -65]
Test Case: 585 | Input/Output: [(57 -26 -97 -18) -97]
Test Case: 586 | Input/Output: [(-82 -45 90 -95) -95]
Test Case: 587 | Input/Output: [(-74 33 82 -1) -74]
Test Case: 588 | Input/Output: [(51 14 -34 -41) -41]
Test Case: 589 | Input/Output: [(-20 -92 12 -13) -92]
Test Case: 590 | Input/Output: [(-17 -70 -50 28) -70]
Test Case: 591 | Input/Output: [(-7 -78 -75 15) -78]
Test Case: 592 | Input/Output: [(-77 -42 -46 6) -77]
Test Case: 593 | Input/Output: [(38 -97 23 87) -97]
Test Case: 594 | Input/Output: [(-5 14 95 38) -5]
Test Case: 595 | Input/Output: [(7 -5 -26 -57) -57]
Test Case: 596 | Input/Output: [(-41 11 69 36) -41]
Test Case: 597 | Input/Output: [(97 -63 98 19) -63]
Test Case: 598 | Input/Output: [(8 -75 -83 13) -83]
Test Case: 599 | Input/Output: [(-92 -51 -82 -75) -92]
Test Case: 600 | Input/Output: [(7 -60 -16 70) -60]
Test Case: 601 | Input/Output: [(-19 8 37 73) -19]
Test Case: 602 | Input/Output: [(0 85 66 -40) -40]
Test Case: 603 | Input/Output: [(-34 -97 57 45) -97]
Test Case: 604 | Input/Output: [(61 61 -91 18) -91]
Test Case: 605 | Input/Output: [(54 87 -22 94) -22]
Test Case: 606 | Input/Output: [(-24 61 -69 17) -69]
Test Case: 607 | Input/Output: [(65 -44 -35 2) -44]
Test Case: 608 | Input/Output: [(65 64 -98 -36) -98]
Test Case: 609 | Input/Output: [(82 5 98 -100) -100]
Test Case: 610 | Input/Output: [(14 -28 67 -98) -98]
Test Case: 611 | Input/Output: [(-59 -63 6 47) -63]
Test Case: 612 | Input/Output: [(-35 84 28 -25) -35]
Test Case: 613 | Input/Output: [(-25 -46 93 38) -46]
Test Case: 614 | Input/Output: [(93 -55 63 -15) -55]
Test Case: 615 | Input/Output: [(-56 -23 1 37) -56]
Test Case: 616 | Input/Output: [(72 74 43 -78) -78]
Test Case: 617 | Input/Output: [(78 13 -64 -57) -64]
Test Case: 618 | Input/Output: [(56 -64 -94 -26) -94]
Test Case: 619 | Input/Output: [(-33 -28 -44 11) -44]
Test Case: 620 | Input/Output: [(-19 8 -8 30) -19]
Test Case: 621 | Input/Output: [(5 -73 -9 75) -73]
Test Case: 622 | Input/Output: [(-80 97 36 26) -80]
Test Case: 623 | Input/Output: [(-19 98 -90 55) -90]
Test Case: 624 | Input/Output: [(23 1 67 -10) -10]
Test Case: 625 | Input/Output: [(-94 -44 32 -31) -94]
Test Case: 626 | Input/Output: [(-29 -96 51 21) -96]
Test Case: 627 | Input/Output: [(60 -3 -70 -14) -70]
Test Case: 628 | Input/Output: [(-3 -35 36 -81) -81]
Test Case: 629 | Input/Output: [(42 -1 -11 53) -11]
Test Case: 630 | Input/Output: [(90 62 -1 59) -1]
Test Case: 631 | Input/Output: [(-85 9 61 7) -85]
Test Case: 632 | Input/Output: [(-22 95 -29 10) -29]
Test Case: 633 | Input/Output: [(-31 -42 -73 -99) -99]
Test Case: 634 | Input/Output: [(82 -19 38 -73) -73]
Test Case: 635 | Input/Output: [(-98 86 -37 9) -98]
Test Case: 636 | Input/Output: [(86 32 29 15) 15]
Test Case: 637 | Input/Output: [(97 30 -28 63) -28]
Test Case: 638 | Input/Output: [(-71 77 23 -21) -71]
Test Case: 639 | Input/Output: [(-19 45 86 -34) -34]
Test Case: 640 | Input/Output: [(-86 89 50 25) -86]
Test Case: 641 | Input/Output: [(94 -22 -39 16) -39]
Test Case: 642 | Input/Output: [(-80 -69 64 87) -80]
Test Case: 643 | Input/Output: [(-75 -24 70 2) -75]
Test Case: 644 | Input/Output: [(-45 -58 -60 -45) -60]
Test Case: 645 | Input/Output: [(-50 -53 100 6) -53]
Test Case: 646 | Input/Output: [(-47 -98 7 -90) -98]
Test Case: 647 | Input/Output: [(-33 -84 0 -61) -84]
Test Case: 648 | Input/Output: [(43 68 17 -58) -58]
Test Case: 649 | Input/Output: [(-13 0 -45 85) -45]
Test Case: 650 | Input/Output: [(-69 34 14 96) -69]
Test Case: 651 | Input/Output: [(9 100 -46 -16) -46]
Test Case: 652 | Input/Output: [(70 -65 92 -62) -65]
Test Case: 653 | Input/Output: [(83 -69 -34 86) -69]
Test Case: 654 | Input/Output: [(51 47 21 83) 21]
Test Case: 655 | Input/Output: [(39 70 -84 -30) -84]
Test Case: 656 | Input/Output: [(-20 94 30 59) -20]
Test Case: 657 | Input/Output: [(38 -38 -21 -36) -38]
Test Case: 658 | Input/Output: [(49 -37 77 -66) -66]
Test Case: 659 | Input/Output: [(-4 -70 7 -94) -94]
Test Case: 660 | Input/Output: [(92 -37 79 -14) -37]
Test Case: 661 | Input/Output: [(84 33 -88 56) -88]
Test Case: 662 | Input/Output: [(15 91 -70 -89) -89]
Test Case: 663 | Input/Output: [(-41 -1 -70 10) -70]
Test Case: 664 | Input/Output: [(-86 29 45 -31) -86]
Test Case: 665 | Input/Output: [(58 66 -87 58) -87]
Test Case: 666 | Input/Output: [(48 82 34 -25) -25]
Test Case: 667 | Input/Output: [(-96 36 -85 0) -96]
Test Case: 668 | Input/Output: [(93 17 -37 -85) -85]
Test Case: 669 | Input/Output: [(79 47 -35 85) -35]
Test Case: 670 | Input/Output: [(-13 -88 56 -34) -88]
Test Case: 671 | Input/Output: [(-19 40 -90 -23) -90]
Test Case: 672 | Input/Output: [(-8 -27 80 -29) -29]
Test Case: 673 | Input/Output: [(-90 61 -35 87) -90]
Test Case: 674 | Input/Output: [(62 -7 -38 -5) -38]
Test Case: 675 | Input/Output: [(-95 -43 -64 -71) -95]
Test Case: 676 | Input/Output: [(-51 27 -86 -47) -86]
Test Case: 677 | Input/Output: [(-46 66 -26 -88) -88]
Test Case: 678 | Input/Output: [(-74 55 -28 -65) -74]
Test Case: 679 | Input/Output: [(94 82 -38 -18) -38]
Test Case: 680 | Input/Output: [(20 -27 0 -1) -27]
Test Case: 681 | Input/Output: [(-53 86 42 -23) -53]
Test Case: 682 | Input/Output: [(-25 28 -94 49) -94]
Test Case: 683 | Input/Output: [(89 59 -2 -33) -33]
Test Case: 684 | Input/Output: [(-79 -98 39 -62) -98]
Test Case: 685 | Input/Output: [(53 -94 -63 -74) -94]
Test Case: 686 | Input/Output: [(-53 -91 54 34) -91]
Test Case: 687 | Input/Output: [(-68 -75 70 96) -75]
Test Case: 688 | Input/Output: [(16 -66 -89 -2) -89]
Test Case: 689 | Input/Output: [(-1 1 -61 73) -61]
Test Case: 690 | Input/Output: [(20 63 2 -52) -52]
Test Case: 691 | Input/Output: [(-34 -74 -51 -2) -74]
Test Case: 692 | Input/Output: [(-36 -56 -25 -61) -61]
Test Case: 693 | Input/Output: [(-74 -73 -41 -40) -74]
Test Case: 694 | Input/Output: [(-47 32 -55 49) -55]
Test Case: 695 | Input/Output: [(-75 69 -41 39) -75]
Test Case: 696 | Input/Output: [(58 48 39 75) 39]
Test Case: 697 | Input/Output: [(0 -40 -86 16) -86]
Test Case: 698 | Input/Output: [(42 -89 50 12) -89]
Test Case: 699 | Input/Output: [(-93 -92 -73 38) -93]
Test Case: 700 | Input/Output: [(-50 -1 27 20) -50]
Test Case: 701 | Input/Output: [(-18 3 -30 -29) -30]
Test Case: 702 | Input/Output: [(77 -29 40 91) -29]
Test Case: 703 | Input/Output: [(-8 50 -88 -85) -88]
Test Case: 704 | Input/Output: [(36 28 59 86) 28]
Test Case: 705 | Input/Output: [(-92 -32 99 74) -92]
Test Case: 706 | Input/Output: [(17 7 -78 -69) -78]
Test Case: 707 | Input/Output: [(-88 90 -18 1) -88]
Test Case: 708 | Input/Output: [(54 6 14 31) 6]
Test Case: 709 | Input/Output: [(-17 98 10 -69) -69]
Test Case: 710 | Input/Output: [(19 82 88 -21) -21]
Test Case: 711 | Input/Output: [(-37 -68 -37 58) -68]
Test Case: 712 | Input/Output: [(57 3 1 13) 1]
Test Case: 713 | Input/Output: [(11 14 15 14) 11]
Test Case: 714 | Input/Output: [(-75 -49 -74 4) -75]
Test Case: 715 | Input/Output: [(-90 -10 -12 -55) -90]
Test Case: 716 | Input/Output: [(3 -4 79 25) -4]
Test Case: 717 | Input/Output: [(-84 79 41 -54) -84]
Test Case: 718 | Input/Output: [(-7 -63 -45 -16) -63]
Test Case: 719 | Input/Output: [(39 -67 -71 -49) -71]
Test Case: 720 | Input/Output: [(68 15 -38 -89) -89]
Test Case: 721 | Input/Output: [(68 -26 -79 -21) -79]
Test Case: 722 | Input/Output: [(-18 79 -31 -93) -93]
Test Case: 723 | Input/Output: [(53 0 0 17) 0]
Test Case: 724 | Input/Output: [(44 3 -7 61) -7]
Test Case: 725 | Input/Output: [(-91 8 58 73) -91]
Test Case: 726 | Input/Output: [(-87 -54 43 -50) -87]
Test Case: 727 | Input/Output: [(80 -66 53 -1) -66]
Test Case: 728 | Input/Output: [(2 -95 77 32) -95]
Test Case: 729 | Input/Output: [(6 -47 66 -38) -47]
Test Case: 730 | Input/Output: [(-20 22 87 88) -20]
Test Case: 731 | Input/Output: [(78 68 54 -79) -79]
Test Case: 732 | Input/Output: [(-1 -39 64 10) -39]
Test Case: 733 | Input/Output: [(46 48 59 88) 46]
Test Case: 734 | Input/Output: [(52 -79 -70 39) -79]
Test Case: 735 | Input/Output: [(0 -16 49 -9) -16]
Test Case: 736 | Input/Output: [(-78 -27 17 -92) -92]
Test Case: 737 | Input/Output: [(-24 11 25 36) -24]
Test Case: 738 | Input/Output: [(-83 44 -40 -86) -86]
Test Case: 739 | Input/Output: [(-39 46 12 -8) -39]
Test Case: 740 | Input/Output: [(-99 54 7 -44) -99]
Test Case: 741 | Input/Output: [(66 -3 -13 27) -13]
Test Case: 742 | Input/Output: [(-92 22 86 50) -92]
Test Case: 743 | Input/Output: [(-72 -25 79 -17) -72]
Test Case: 744 | Input/Output: [(63 -13 43 -65) -65]
Test Case: 745 | Input/Output: [(-22 -49 98 45) -49]
Test Case: 746 | Input/Output: [(-55 59 42 82) -55]
Test Case: 747 | Input/Output: [(43 -7 -72 100) -72]
Test Case: 748 | Input/Output: [(50 -61 37 -42) -61]
Test Case: 749 | Input/Output: [(32 94 -58 -55) -58]
Test Case: 750 | Input/Output: [(-48 -85 79 -76) -85]
Test Case: 751 | Input/Output: [(76 15 53 97) 15]
Test Case: 752 | Input/Output: [(45 4 18 -98) -98]
Test Case: 753 | Input/Output: [(65 -11 91 -7) -11]
Test Case: 754 | Input/Output: [(-93 72 -9 4) -93]
Test Case: 755 | Input/Output: [(-16 -91 28 68) -91]
Test Case: 756 | Input/Output: [(62 34 -82 7) -82]
Test Case: 757 | Input/Output: [(-6 -86 -4 -57) -86]
Test Case: 758 | Input/Output: [(10 -29 68 -95) -95]
Test Case: 759 | Input/Output: [(-2 -62 -16 -86) -86]
Test Case: 760 | Input/Output: [(9 -15 62 79) -15]
Test Case: 761 | Input/Output: [(51 -82 15 76) -82]
Test Case: 762 | Input/Output: [(-68 19 -40 -90) -90]
Test Case: 763 | Input/Output: [(70 33 0 19) 0]
Test Case: 764 | Input/Output: [(70 56 -78 81) -78]
Test Case: 765 | Input/Output: [(-17 60 42 4) -17]
Test Case: 766 | Input/Output: [(-54 93 -23 58) -54]
Test Case: 767 | Input/Output: [(78 11 -80 -89) -89]
Test Case: 768 | Input/Output: [(6 68 86 -46) -46]
Test Case: 769 | Input/Output: [(-38 -27 -25 84) -38]
Test Case: 770 | Input/Output: [(-51 20 -80 -69) -80]
Test Case: 771 | Input/Output: [(68 -73 6 -43) -73]
Test Case: 772 | Input/Output: [(-68 -60 -45 -61) -68]
Test Case: 773 | Input/Output: [(70 81 -87 64) -87]
Test Case: 774 | Input/Output: [(-91 3 -25 -91) -91]
Test Case: 775 | Input/Output: [(-85 -19 15 -66) -85]
Test Case: 776 | Input/Output: [(-25 9 36 45) -25]
Test Case: 777 | Input/Output: [(-25 -77 -98 65) -98]
Test Case: 778 | Input/Output: [(44 -27 49 -77) -77]
Test Case: 779 | Input/Output: [(90 37 29 -90) -90]
Test Case: 780 | Input/Output: [(-25 83 -30 -36) -36]
Test Case: 781 | Input/Output: [(87 -92 -77 -18) -92]
Test Case: 782 | Input/Output: [(87 -88 29 -79) -88]
Test Case: 783 | Input/Output: [(-51 5 84 58) -51]
Test Case: 784 | Input/Output: [(79 -91 -11 -66) -91]
Test Case: 785 | Input/Output: [(33 -80 65 -40) -80]
Test Case: 786 | Input/Output: [(9 33 44 19) 9]
Test Case: 787 | Input/Output: [(44 -34 -16 41) -34]
Test Case: 788 | Input/Output: [(-21 -100 70 -19) -100]
Test Case: 789 | Input/Output: [(14 93 89 32) 14]
Test Case: 790 | Input/Output: [(29 -13 -49 63) -49]
Test Case: 791 | Input/Output: [(84 -17 -14 72) -17]
Test Case: 792 | Input/Output: [(2 27 56 70) 2]
Test Case: 793 | Input/Output: [(-96 -30 -67 45) -96]
Test Case: 794 | Input/Output: [(44 85 94 76) 44]
Test Case: 795 | Input/Output: [(34 -24 -73 -36) -73]
Test Case: 796 | Input/Output: [(-30 97 -62 -84) -84]
Test Case: 797 | Input/Output: [(60 -64 81 -76) -76]
Test Case: 798 | Input/Output: [(94 74 -1 -68) -68]
Test Case: 799 | Input/Output: [(-48 -50 -19 30) -50]
Test Case: 800 | Input/Output: [(-90 -90 -73 -88) -90]
Test Case: 801 | Input/Output: [(-26 -27 25 -29) -29]
Test Case: 802 | Input/Output: [(87 92 -86 56) -86]
Test Case: 803 | Input/Output: [(96 11 25 -32) -32]
Test Case: 804 | Input/Output: [(87 61 -10 42) -10]
Test Case: 805 | Input/Output: [(73 82 18 5) 5]
Test Case: 806 | Input/Output: [(-36 -6 75 28) -36]
Test Case: 807 | Input/Output: [(-53 50 -2 54) -53]
Test Case: 808 | Input/Output: [(38 -59 63 97) -59]
Test Case: 809 | Input/Output: [(59 -41 -90 89) -90]
Test Case: 810 | Input/Output: [(-17 -51 -71 -9) -71]
Test Case: 811 | Input/Output: [(-20 36 11 -99) -99]
Test Case: 812 | Input/Output: [(-1 -76 -34 -25) -76]
Test Case: 813 | Input/Output: [(72 -63 96 91) -63]
Test Case: 814 | Input/Output: [(-56 94 -43 -91) -91]
Test Case: 815 | Input/Output: [(-34 -42 -77 -13) -77]
Test Case: 816 | Input/Output: [(24 -33 -25 22) -33]
Test Case: 817 | Input/Output: [(74 -23 -20 -46) -46]
Test Case: 818 | Input/Output: [(87 66 -3 47) -3]
Test Case: 819 | Input/Output: [(-96 -53 54 22) -96]
Test Case: 820 | Input/Output: [(19 42 -41 -7) -41]
Test Case: 821 | Input/Output: [(-30 42 -59 20) -59]
Test Case: 822 | Input/Output: [(1 -28 82 -88) -88]
Test Case: 823 | Input/Output: [(-5 88 93 59) -5]
Test Case: 824 | Input/Output: [(17 -49 -3 25) -49]
Test Case: 825 | Input/Output: [(-77 -86 -26 66) -86]
Test Case: 826 | Input/Output: [(28 61 85 -59) -59]
Test Case: 827 | Input/Output: [(-61 19 26 -19) -61]
Test Case: 828 | Input/Output: [(-56 22 -52 -18) -56]
Test Case: 829 | Input/Output: [(-56 80 26 -51) -56]
Test Case: 830 | Input/Output: [(88 48 66 -7) -7]
Test Case: 831 | Input/Output: [(32 10 -47 -41) -47]
Test Case: 832 | Input/Output: [(-55 -10 13 -83) -83]
Test Case: 833 | Input/Output: [(12 88 78 -12) -12]
Test Case: 834 | Input/Output: [(87 55 38 -97) -97]
Test Case: 835 | Input/Output: [(98 100 25 47) 25]
Test Case: 836 | Input/Output: [(79 40 -7 12) -7]
Test Case: 837 | Input/Output: [(67 -49 -89 -78) -89]
Test Case: 838 | Input/Output: [(75 -25 -54 -20) -54]
Test Case: 839 | Input/Output: [(-46 -99 -13 4) -99]
Test Case: 840 | Input/Output: [(-32 82 -67 34) -67]
Test Case: 841 | Input/Output: [(77 81 93 23) 23]
Test Case: 842 | Input/Output: [(19 -5 29 -97) -97]
Test Case: 843 | Input/Output: [(10 31 -62 -62) -62]
Test Case: 844 | Input/Output: [(-58 24 -52 -86) -86]
Test Case: 845 | Input/Output: [(-21 -84 -17 -91) -91]
Test Case: 846 | Input/Output: [(-17 65 -11 -91) -91]
Test Case: 847 | Input/Output: [(66 -80 -44 16) -80]
Test Case: 848 | Input/Output: [(32 24 70 50) 24]
Test Case: 849 | Input/Output: [(-59 37 -65 -37) -65]
Test Case: 850 | Input/Output: [(98 29 -17 -5) -17]
Test Case: 851 | Input/Output: [(98 -7 -98 83) -98]
Test Case: 852 | Input/Output: [(-96 -79 47 -46) -96]
Test Case: 853 | Input/Output: [(-28 29 -35 92) -35]
Test Case: 854 | Input/Output: [(40 20 -51 66) -51]
Test Case: 855 | Input/Output: [(-19 -21 -81 -31) -81]
Test Case: 856 | Input/Output: [(-70 -93 16 -26) -93]
Test Case: 857 | Input/Output: [(71 29 3 -22) -22]
Test Case: 858 | Input/Output: [(-60 -53 -82 -9) -82]
Test Case: 859 | Input/Output: [(-16 73 -4 -44) -44]
Test Case: 860 | Input/Output: [(-2 -70 86 17) -70]
Test Case: 861 | Input/Output: [(16 -34 46 59) -34]
Test Case: 862 | Input/Output: [(-87 -72 90 -60) -87]
Test Case: 863 | Input/Output: [(-28 -3 -38 59) -38]
Test Case: 864 | Input/Output: [(38 -53 -32 83) -53]
Test Case: 865 | Input/Output: [(62 -5 57 82) -5]
Test Case: 866 | Input/Output: [(-12 31 44 -80) -80]
Test Case: 867 | Input/Output: [(27 40 -34 62) -34]
Test Case: 868 | Input/Output: [(-66 -49 -79 29) -79]
Test Case: 869 | Input/Output: [(6 28 53 41) 6]
Test Case: 870 | Input/Output: [(50 -15 100 -33) -33]
Test Case: 871 | Input/Output: [(15 -38 41 -10) -38]
Test Case: 872 | Input/Output: [(89 28 -73 -21) -73]
Test Case: 873 | Input/Output: [(-64 83 48 62) -64]
Test Case: 874 | Input/Output: [(-76 -21 -58 -63) -76]
Test Case: 875 | Input/Output: [(-75 -40 -16 -21) -75]
Test Case: 876 | Input/Output: [(-68 -25 -93 45) -93]
Test Case: 877 | Input/Output: [(26 -35 37 97) -35]
Test Case: 878 | Input/Output: [(95 60 37 24) 24]
Test Case: 879 | Input/Output: [(-85 -23 28 -55) -85]
Test Case: 880 | Input/Output: [(34 -49 37 69) -49]
Test Case: 881 | Input/Output: [(25 43 -100 45) -100]
Test Case: 882 | Input/Output: [(73 70 -37 87) -37]
Test Case: 883 | Input/Output: [(-2 -91 82 -58) -91]
Test Case: 884 | Input/Output: [(57 -77 58 -59) -77]
Test Case: 885 | Input/Output: [(0 -26 -12 11) -26]
Test Case: 886 | Input/Output: [(-68 -19 76 97) -68]
Test Case: 887 | Input/Output: [(2 47 -28 -38) -38]
Test Case: 888 | Input/Output: [(53 -65 56 -28) -65]
Test Case: 889 | Input/Output: [(30 -54 0 86) -54]
Test Case: 890 | Input/Output: [(80 81 90 -82) -82]
Test Case: 891 | Input/Output: [(45 18 -23 -38) -38]
Test Case: 892 | Input/Output: [(-80 86 23 7) -80]
Test Case: 893 | Input/Output: [(30 63 28 -34) -34]
Test Case: 894 | Input/Output: [(-13 96 -31 82) -31]
Test Case: 895 | Input/Output: [(53 -41 -79 -81) -81]
Test Case: 896 | Input/Output: [(-69 39 -60 85) -69]
Test Case: 897 | Input/Output: [(14 -97 -4 -1) -97]
Test Case: 898 | Input/Output: [(13 66 -79 12) -79]
Test Case: 899 | Input/Output: [(-60 -47 -20 -98) -98]
Test Case: 900 | Input/Output: [(-53 98 -23 -62) -62]
Test Case: 901 | Input/Output: [(24 -32 49 5) -32]
Test Case: 902 | Input/Output: [(-10 69 -51 13) -51]
Test Case: 903 | Input/Output: [(93 -55 -19 -71) -71]
Test Case: 904 | Input/Output: [(42 63 -86 28) -86]
Test Case: 905 | Input/Output: [(46 87 17 -92) -92]
Test Case: 906 | Input/Output: [(42 -30 -85 39) -85]
Test Case: 907 | Input/Output: [(-6 15 26 -97) -97]
Test Case: 908 | Input/Output: [(92 -89 -28 -15) -89]
Test Case: 909 | Input/Output: [(4 -30 97 -47) -47]
Test Case: 910 | Input/Output: [(73 -87 50 5) -87]
Test Case: 911 | Input/Output: [(-41 94 -18 91) -41]
Test Case: 912 | Input/Output: [(-72 12 -62 -96) -96]
Test Case: 913 | Input/Output: [(9 -12 -94 90) -94]
Test Case: 914 | Input/Output: [(-63 -5 -44 91) -63]
Test Case: 915 | Input/Output: [(9 64 -38 10) -38]
Test Case: 916 | Input/Output: [(-82 -58 -89 19) -89]
Test Case: 917 | Input/Output: [(33 -69 16 -13) -69]
Test Case: 918 | Input/Output: [(8 -72 41 -61) -72]
Test Case: 919 | Input/Output: [(-92 -59 25 70) -92]
Test Case: 920 | Input/Output: [(26 -13 -99 -15) -99]
Test Case: 921 | Input/Output: [(80 68 45 26) 26]
Test Case: 922 | Input/Output: [(58 50 42 -34) -34]
Test Case: 923 | Input/Output: [(-45 76 -82 -73) -82]
Test Case: 924 | Input/Output: [(56 -69 56 71) -69]
Test Case: 925 | Input/Output: [(46 -57 7 26) -57]
Test Case: 926 | Input/Output: [(62 -21 86 68) -21]
Test Case: 927 | Input/Output: [(85 -22 16 -53) -53]
Test Case: 928 | Input/Output: [(-69 20 -58 -70) -70]
Test Case: 929 | Input/Output: [(-29 -83 -100 -13) -100]
Test Case: 930 | Input/Output: [(-63 -80 15 88) -80]
Test Case: 931 | Input/Output: [(44 99 -61 -14) -61]
Test Case: 932 | Input/Output: [(81 57 88 -25) -25]
Test Case: 933 | Input/Output: [(-42 59 -47 -45) -47]
Test Case: 934 | Input/Output: [(52 -27 -88 -28) -88]
Test Case: 935 | Input/Output: [(6 36 -1 80) -1]
Test Case: 936 | Input/Output: [(-82 49 -26 -74) -82]
Test Case: 937 | Input/Output: [(-68 76 -22 -99) -99]
Test Case: 938 | Input/Output: [(-76 -12 9 77) -76]
Test Case: 939 | Input/Output: [(61 -58 -83 23) -83]
Test Case: 940 | Input/Output: [(33 84 26 94) 26]
Test Case: 941 | Input/Output: [(26 -33 97 23) -33]
Test Case: 942 | Input/Output: [(14 -37 -26 -19) -37]
Test Case: 943 | Input/Output: [(95 -70 -90 35) -90]
Test Case: 944 | Input/Output: [(89 -23 -97 -83) -97]
Test Case: 945 | Input/Output: [(-18 39 71 -54) -54]
Test Case: 946 | Input/Output: [(-68 50 -37 -99) -99]
Test Case: 947 | Input/Output: [(-17 -56 20 -82) -82]
Test Case: 948 | Input/Output: [(-19 -64 -14 51) -64]
Test Case: 949 | Input/Output: [(-95 -3 96 29) -95]
Test Case: 950 | Input/Output: [(10 -60 -32 -72) -72]
Test Case: 951 | Input/Output: [(70 41 62 -8) -8]
Test Case: 952 | Input/Output: [(-84 83 5 59) -84]
Test Case: 953 | Input/Output: [(43 -17 97 43) -17]
Test Case: 954 | Input/Output: [(-49 67 41 23) -49]
Test Case: 955 | Input/Output: [(19 -3 55 76) -3]
Test Case: 956 | Input/Output: [(41 -77 -88 10) -88]
Test Case: 957 | Input/Output: [(30 -86 9 21) -86]
Test Case: 958 | Input/Output: [(-11 -35 19 98) -35]
Test Case: 959 | Input/Output: [(12 -18 15 77) -18]
Test Case: 960 | Input/Output: [(64 -55 -64 54) -64]
Test Case: 961 | Input/Output: [(-78 -73 5 64) -78]
Test Case: 962 | Input/Output: [(50 23 59 -62) -62]
Test Case: 963 | Input/Output: [(-10 -8 -15 -81) -81]
Test Case: 964 | Input/Output: [(84 -14 -37 47) -37]
Test Case: 965 | Input/Output: [(75 -70 -51 -39) -70]
Test Case: 966 | Input/Output: [(-75 -15 -99 81) -99]
Test Case: 967 | Input/Output: [(-46 91 -38 -20) -46]
Test Case: 968 | Input/Output: [(96 45 82 20) 20]
Test Case: 969 | Input/Output: [(-89 3 72 14) -89]
Test Case: 970 | Input/Output: [(-58 93 -57 5) -58]
Test Case: 971 | Input/Output: [(66 100 61 45) 45]
Test Case: 972 | Input/Output: [(61 68 56 84) 56]
Test Case: 973 | Input/Output: [(-18 -27 21 42) -27]
Test Case: 974 | Input/Output: [(9 -57 36 16) -57]
Test Case: 975 | Input/Output: [(-28 88 3 -77) -77]
Test Case: 976 | Input/Output: [(49 54 57 -31) -31]
Test Case: 977 | Input/Output: [(13 66 -7 34) -7]
Test Case: 978 | Input/Output: [(-76 -65 -79 -11) -79]
Test Case: 979 | Input/Output: [(22 -6 -56 53) -56]
Test Case: 980 | Input/Output: [(46 -33 -66 75) -66]
Test Case: 981 | Input/Output: [(-16 91 -17 -32) -32]
Test Case: 982 | Input/Output: [(15 -22 17 65) -22]
Test Case: 983 | Input/Output: [(-99 87 48 -27) -99]
Test Case: 984 | Input/Output: [(-99 76 73 -68) -99]
Test Case: 985 | Input/Output: [(59 -11 29 -21) -21]
Test Case: 986 | Input/Output: [(98 66 -14 94) -14]
Test Case: 987 | Input/Output: [(-75 67 -7 83) -75]
Test Case: 988 | Input/Output: [(76 -56 11 -85) -85]
Test Case: 989 | Input/Output: [(-91 39 -94 -64) -94]
Test Case: 990 | Input/Output: [(14 -82 -90 37) -90]
Test Case: 991 | Input/Output: [(-93 -31 35 -14) -93]
Test Case: 992 | Input/Output: [(5 4 78 -56) -56]
Test Case: 993 | Input/Output: [(-41 26 72 69) -41]
Test Case: 994 | Input/Output: [(11 -4 64 76) -4]
Test Case: 995 | Input/Output: [(-82 15 -15 -76) -82]
Test Case: 996 | Input/Output: [(34 -94 49 -17) -94]
Test Case: 997 | Input/Output: [(21 1 30 10) 1]
Test Case: 998 | Input/Output: [(-1 2 -8 59) -8]
Test Case: 999 | Input/Output: [(-68 93 -96 -13) -96]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = -87 -49 -32 -8 -83 105 44 42 84 -40 -11 11 -8 94 -18 -54
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-38 65 -38 -38] -38] [[62 62 62 -72] -72] [[-100 -22 -100 -100] -100] [[76 76 -50 76] -50] [[92 21 92 92] 21] [[90 90 90 79] 79] [[67 70 67 67] 67] [[26 -10 26 26] -10] [[91 91 23 91] 23] [[86 -26 -26 -26] -26] [(41 41 41 41) 41] [(-57 -57 -57 -57) -57] [(-82 -82 -82 -82) -82] [(-36 -36 -36 -36) -36] [(-86 -86 -86 -86) -86] [(51 80 16 90) 16] [(97 36 88 84) 36] [(48 43 42 16) 16] [(29 43 62 77) 29] [(81 57 4 41) 4] [(0 66 15 45) 0] [(40 34 94 67) 34] [(85 55 35 80) 35] [(47 44 100 47) 44] [(72 28 78 93) 28] [(35 68 85 6) 6] [(14 33 84 17) 14] [(71 57 65 21) 21] [(31 4 92 12) 4] [(68 4 100 18) 4] [(87 0 25 37) 0] [(45 16 7 32) 7] [(43 54 72 45) 43] [(24 55 91 24) 24] [(81 28 57 34) 28] [(-65 -77 -37 12) -77] [(-36 35 94 37) -36] [(84 88 -88 84) -88] [(32 25 -29 96) -29] [(15 -98 -86 -30) -98] [(98 64 -26 68) -26] [(11 46 -21 -13) -21] [(60 -79 97 -50) -79] [(-74 -86 -64 22) -86] [(-95 -14 34 -72) -95] [(31 -86 -46 -95) -95] [(19 73 -29 -26) -29] [(1 -35 52 -73) -73] [(-92 -53 20 68) -92] [(-52 -80 8 60) -80] [(-41 -61 92 -37) -61] [(6 44 82 -86) -86] [(-98 55 14 62) -98] [(-83 14 13 13) -83] [(-97 18 -61 -61) -97] [(-93 -23 47 -14) -93] [(87 -64 -24 90) -64] [(18 49 45 -7) -7] [(13 -57 -88 13) -88] [(93 71 -65 59) -65] [(-3 -42 80 52) -42] [(26 80 -5 -98) -98] [(54 -31 -92 -15) -92] [(-55 -62 -13 -50) -62] [(-70 68 -48 -91) -91] [(-41 10 -5 -47) -47] [(-97 60 19 -25) -97] [(-70 -8 80 70) -70] [(75 64 53 -88) -88] [(-94 0 -9 -21) -94] [(-79 23 28 1) -79] [(-53 26 28 29) -53] [(93 89 10 66) 10] [(63 49 49 -44) -44] [(79 -52 51 12) -52] [(-25 -54 14 13) -54] [(-94 89 29 -35) -94] [(-44 22 -1 -24) -44] [(71 -69 -96 15) -96] [(-53 43 89 -38) -53] [(-38 -7 -75 42) -75] [(87 25 24 74) 24] [(16 -72 -92 97) -92] [(-92 -61 -18 -33) -92] [(29 -18 56 64) -18] [(76 13 80 -78) -78] [(-57 -64 -89 -26) -89] [(-81 40 -18 13) -81] [(-98 -11 -64 61) -98] [(-6 17 -20 89) -20] [(51 -7 -88 82) -88] [(-28 92 -94 87) -94] [(-60 70 -1 46) -60] [(-96 92 100 -29) -96] [(-98 82 14 83) -98])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 667
Test mean error for best: 0.66700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -38                 | Program output: -38                
Correct output: -72                 | Program output: 62                 
Correct output: -100                | Program output: -100               
Correct output: -50                 | Program output: 76                 
Correct output: 21                  | Program output: 92                 
Correct output: 79                  | Program output: 90                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: 26                 
Correct output: 23                  | Program output: 91                 
Correct output: -26                 | Program output: 86                 
Correct output: 41                  | Program output: 41                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -82                
Correct output: -36                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: 16                  | Program output: 51                 
Correct output: 36                  | Program output: 97                 
Correct output: 16                  | Program output: 48                 
Correct output: 29                  | Program output: 29                 
Correct output: 4                   | Program output: 81                 
Correct output: 0                   | Program output: 0                  
Correct output: 34                  | Program output: 40                 
Correct output: 35                  | Program output: 85                 
Correct output: 44                  | Program output: 47                 
Correct output: 28                  | Program output: 72                 
Correct output: 6                   | Program output: 35                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 71                 
Correct output: 4                   | Program output: 31                 
Correct output: 4                   | Program output: 68                 
Correct output: 0                   | Program output: 87                 
Correct output: 7                   | Program output: 45                 
Correct output: 43                  | Program output: 43                 
Correct output: 24                  | Program output: 24                 
Correct output: 28                  | Program output: 81                 
Correct output: -77                 | Program output: -65                
Correct output: -36                 | Program output: -36                
Correct output: -88                 | Program output: 84                 
Correct output: -29                 | Program output: 32                 
Correct output: -98                 | Program output: 15                 
Correct output: -26                 | Program output: 98                 
Correct output: -21                 | Program output: 11                 
Correct output: -79                 | Program output: 60                 
Correct output: -86                 | Program output: -74                
Correct output: -95                 | Program output: -95                
Correct output: -95                 | Program output: 31                 
Correct output: -29                 | Program output: 19                 
Correct output: -73                 | Program output: 1                  
Correct output: -92                 | Program output: -92                
Correct output: -80                 | Program output: -52                
Correct output: -61                 | Program output: -41                
Correct output: -86                 | Program output: 6                  
Correct output: -98                 | Program output: -98                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: -93                
Correct output: -64                 | Program output: 87                 
Correct output: -7                  | Program output: 18                 
Correct output: -88                 | Program output: 13                 
Correct output: -65                 | Program output: 93                 
Correct output: -42                 | Program output: -3                 
Correct output: -98                 | Program output: 26                 
Correct output: -92                 | Program output: 54                 
Correct output: -62                 | Program output: -55                
Correct output: -91                 | Program output: -70                
Correct output: -47                 | Program output: -41                
Correct output: -97                 | Program output: -97                
Correct output: -70                 | Program output: -70                
Correct output: -88                 | Program output: 75                 
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -79                
Correct output: -53                 | Program output: -53                
Correct output: 10                  | Program output: 93                 
Correct output: -44                 | Program output: 63                 
Correct output: -52                 | Program output: 79                 
Correct output: -54                 | Program output: -25                
Correct output: -94                 | Program output: -94                
Correct output: -44                 | Program output: -44                
Correct output: -96                 | Program output: 71                 
Correct output: -53                 | Program output: -53                
Correct output: -75                 | Program output: -38                
Correct output: 24                  | Program output: 87                 
Correct output: -92                 | Program output: 16                 
Correct output: -92                 | Program output: -92                
Correct output: -18                 | Program output: 29                 
Correct output: -78                 | Program output: 76                 
Correct output: -89                 | Program output: -57                
Correct output: -81                 | Program output: -81                
Correct output: -98                 | Program output: -98                
Correct output: -20                 | Program output: -6                 
Correct output: -88                 | Program output: 51                 
Correct output: -94                 | Program output: -28                
Correct output: -60                 | Program output: -60                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction tagged_87} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_inc} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_do*range} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_empty} {:close 0, :instruction in4} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_mult} {:close 0, :instruction in1} {:close 1, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_and} {:close 1, :instruction 95} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_div} {:close 0, :instruction exec_dup_times})
Lexicase best program: (tagged_87 integer_dup integer_flush boolean_not integer_inc boolean_yank exec_do*range (exec_yankdup) exec_empty in4 boolean_invert_first_then_and integer_mult in1 integer_dup print_integer integer_min boolean_and 95 exec_shove (integer_div exec_dup_times ()))
Lexicase best errors: [0 1 1 0 1 0 1 0 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 25
Percent parens: 0.160
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction tagged_87} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_inc} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_do*range} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_empty} {:close 0, :instruction in4} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_mult} {:close 0, :instruction in1} {:close 1, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_and} {:close 1, :instruction 95} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_div} {:close 0, :instruction exec_dup_times})
Zero cases best program: (tagged_87 integer_dup integer_flush boolean_not integer_inc boolean_yank exec_do*range (exec_yankdup) exec_empty in4 boolean_invert_first_then_and integer_mult in1 integer_dup print_integer integer_min boolean_and 95 exec_shove (integer_div exec_dup_times ()))
Zero cases best errors: [0 1 1 0 1 0 1 0 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 25
Percent parens: 0.160
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 5 6 17 2 17 6 4 5 2)
Population mean number of elite cases: 0.07
Count of perfect (error zero) individuals by case: (4 5 6 17 2 17 6 4 5 2)
Population mean number of perfect (error zero) cases: 0.07
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_yankdup} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_if} {:close 0, :instruction tagged_971} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_div} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction 4} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_y} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_div} {:close 1, :instruction integer_gt} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_flush} {:close 2, :instruction boolean_shove} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_while} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yankdup} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_flush} {:close 1, :instruction integer_flush} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_min} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction integer_mult} {:close 1, :instruction integer_min} {:close 2, :instruction integer_lte} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction boolean_eq} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction print_integer} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction integer_yankdup} {:close 1, :instruction print_integer} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_do*times} {:close 1, :instruction print_boolean} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction integer_dup} {:close 0, :instruction in3} {:close 0, :instruction integer_rot} {:close 1, :instruction exec_eq} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_dup_times} {:close 0, :instruction in1} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_when} {:close 0, :instruction 21})
Best program: (integer_yankdup exec_shove (boolean_xor integer_gte integer_shove exec_yankdup) exec_empty exec_if (tagged_971 boolean_stackdepth integer_div integer_empty exec_flush exec_rot (boolean_pop integer_yankdup integer_gt 4 exec_y_when_autoconstructing () exec_y (exec_shove (integer_div integer_gt) integer_max) boolean_flush boolean_shove) () (boolean_frominteger exec_while (exec_yank boolean_xor exec_do*count (exec_yankdup boolean_stackdepth integer_stackdepth exec_do*while (integer_inc in1 exec_do*while (exec_yankdup in1 print_integer boolean_invert_first_then_and) integer_flush) integer_flush) boolean_yankdup boolean_dup_items boolean_frominteger) integer_gte exec_dup_items integer_lte boolean_and integer_min exec_pop (integer_stackdepth integer_mult) integer_min) integer_lte) () exec_do*while (exec_y_when_autoconstructing (boolean_eq) integer_lte integer_swap exec_dup_items boolean_dup_items print_integer exec_k_when_autoconstructing () (in1 integer_yankdup print_integer) exec_empty integer_mult) integer_add integer_min boolean_rot integer_inc integer_add exec_dup (exec_do*times (print_boolean) integer_shove boolean_dup_items) integer_dup in3 integer_rot exec_eq boolean_frominteger integer_fromboolean integer_dup_times integer_add exec_k (integer_eq exec_do*count (boolean_shove integer_dup_times in1 boolean_xor exec_when (21))) ())
Errors: [0 1 1 0 1 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 98
Size: 123
Percent parens: 0.203
--- Population Statistics ---
Average total errors in population: 9.932
Median total errors in population: 10
Error averages by case: (0.996 0.995 0.994 0.983 0.998 0.983 0.994 0.996 0.995 0.998)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.165
Average program size in population (points): 70.218
Average percent parens in population: 0.276
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.276
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 478584
--- Timings ---
Current time: 1559594061645 milliseconds
Total Time:           2.2 seconds
Initialization:       0.1 seconds,  5.0%
Reproduction:         0.8 seconds, 35.0%
Fitness Testing:      1.3 seconds, 60.0%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 666
Test mean error for best: 0.66600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -38                 | Program output: -38                
Correct output: -72                 | Program output: -72                
Correct output: -100                | Program output: -100               
Correct output: -50                 | Program output: 76                 
Correct output: 21                  | Program output: 92                 
Correct output: 79                  | Program output: 79                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: 26                 
Correct output: 23                  | Program output: 91                 
Correct output: -26                 | Program output: -26                
Correct output: 41                  | Program output: 41                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -82                
Correct output: -36                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: 16                  | Program output: 90                 
Correct output: 36                  | Program output: 84                 
Correct output: 16                  | Program output: 16                 
Correct output: 29                  | Program output: 77                 
Correct output: 4                   | Program output: 41                 
Correct output: 0                   | Program output: 45                 
Correct output: 34                  | Program output: 67                 
Correct output: 35                  | Program output: 80                 
Correct output: 44                  | Program output: 47                 
Correct output: 28                  | Program output: 93                 
Correct output: 6                   | Program output: 6                  
Correct output: 14                  | Program output: 17                 
Correct output: 21                  | Program output: 21                 
Correct output: 4                   | Program output: 12                 
Correct output: 4                   | Program output: 18                 
Correct output: 0                   | Program output: 37                 
Correct output: 7                   | Program output: 32                 
Correct output: 43                  | Program output: 45                 
Correct output: 24                  | Program output: 24                 
Correct output: 28                  | Program output: 34                 
Correct output: -77                 | Program output: 12                 
Correct output: -36                 | Program output: 37                 
Correct output: -88                 | Program output: 84                 
Correct output: -29                 | Program output: 96                 
Correct output: -98                 | Program output: -30                
Correct output: -26                 | Program output: 68                 
Correct output: -21                 | Program output: -13                
Correct output: -79                 | Program output: -50                
Correct output: -86                 | Program output: 22                 
Correct output: -95                 | Program output: -72                
Correct output: -95                 | Program output: -95                
Correct output: -29                 | Program output: -26                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: 68                 
Correct output: -80                 | Program output: 60                 
Correct output: -61                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -98                 | Program output: 62                 
Correct output: -83                 | Program output: 13                 
Correct output: -97                 | Program output: -61                
Correct output: -93                 | Program output: -14                
Correct output: -64                 | Program output: 90                 
Correct output: -7                  | Program output: -7                 
Correct output: -88                 | Program output: 13                 
Correct output: -65                 | Program output: 59                 
Correct output: -42                 | Program output: 52                 
Correct output: -98                 | Program output: -98                
Correct output: -92                 | Program output: -15                
Correct output: -62                 | Program output: -50                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -47                
Correct output: -97                 | Program output: -25                
Correct output: -70                 | Program output: 70                 
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -21                
Correct output: -79                 | Program output: 1                  
Correct output: -53                 | Program output: 29                 
Correct output: 10                  | Program output: 66                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: 12                 
Correct output: -54                 | Program output: 13                 
Correct output: -94                 | Program output: -35                
Correct output: -44                 | Program output: -24                
Correct output: -96                 | Program output: 15                 
Correct output: -53                 | Program output: -38                
Correct output: -75                 | Program output: 42                 
Correct output: 24                  | Program output: 74                 
Correct output: -92                 | Program output: 97                 
Correct output: -92                 | Program output: -33                
Correct output: -18                 | Program output: 64                 
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -26                
Correct output: -81                 | Program output: 13                 
Correct output: -98                 | Program output: 61                 
Correct output: -20                 | Program output: 89                 
Correct output: -88                 | Program output: 82                 
Correct output: -94                 | Program output: 87                 
Correct output: -60                 | Program output: 46                 
Correct output: -96                 | Program output: -29                
Correct output: -98                 | Program output: 83                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_noop} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_pop})
Lexicase best program: (exec_noop in4 print_integer exec_s (integer_fromboolean integer_dup_times exec_pop ()) () ())
Lexicase best errors: [1 0 0 0 1 1 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 12
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_noop} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_pop})
Zero cases best program: (exec_noop in4 print_integer exec_s (integer_fromboolean integer_dup_times exec_pop ()) () ())
Zero cases best errors: [1 0 0 0 1 1 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 12
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (149 610 138 131 203 205 150 224 151 137)
Population mean number of elite cases: 2.10
Count of perfect (error zero) individuals by case: (149 610 138 131 203 205 150 224 151 137)
Population mean number of perfect (error zero) cases: 2.10
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction tagged_175} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_when} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_div} {:close 0, :instruction in4} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_min} {:close 2, :instruction print_integer} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_k} {:close 0, :instruction -36} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_div} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_flush} {:close 1, :instruction exec_y_when_autoconstructing} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_max} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_rot} {:close 1, :instruction exec_if} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_dup_times} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_div} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction boolean_and} {:close 0, :instruction print_newline} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_gte} {:close 1, :instruction integer_add} {:close 1, :instruction in4} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_lt} {:close 0, :instruction print_newline} {:close 0, :instruction integer_inc} {:close 2, :instruction integer_eq} {:close 1, :instruction integer_flush} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction tagged_179} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_do*count} {:close 0, :instruction boolean_rot} {:close 1, :instruction in3} {:close 0, :instruction exec_flush} {:close 0, :instruction in3} {:close 0, :instruction exec_eq} {:close 2, :instruction integer_flush} {:close 1, :instruction integer_inc} {:close 0, :instruction 12} {:close 0, :instruction integer_add} {:close 0, :instruction exec_if} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*times} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_dup})
Best program: (tagged_175 exec_yankdup boolean_flush exec_when () integer_dup_times integer_div in4 boolean_dup integer_min print_integer exec_flush integer_gte exec_empty exec_k (-36 integer_yank boolean_xor integer_div) (boolean_xor exec_rot (integer_dup_items exec_pop (boolean_eq integer_flush) exec_y_when_autoconstructing () exec_dup_items) (integer_max integer_inc) (exec_s (boolean_shove exec_rot (exec_if () (integer_empty exec_dup_items integer_swap boolean_stackdepth integer_mult exec_noop) integer_dup_times boolean_yank) (exec_do*times (boolean_and integer_max boolean_empty) boolean_rot integer_inc integer_yankdup integer_gte integer_lt boolean_yank integer_div integer_yank integer_stackdepth boolean_and) (print_newline integer_dup_times exec_eq boolean_pop integer_gte integer_add) in4) (boolean_frominteger exec_y_when_autoconstructing (boolean_eq integer_lt) print_newline integer_inc integer_eq) () integer_flush) exec_yankdup boolean_stackdepth print_integer) exec_dup (exec_k_when_autoconstructing (tagged_179) (boolean_not integer_shove exec_do*count () boolean_rot in3) exec_flush in3 exec_eq integer_flush) integer_inc 12 integer_add exec_if (integer_gt exec_do*times () exec_empty exec_k_when_autoconstructing (integer_dup) ()) ())
Errors: [1 0 0 0 1 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 93
Size: 121
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 7.902
Median total errors in population: 8
Error averages by case: (0.851 0.39 0.862 0.869 0.797 0.795 0.85 0.776 0.849 0.863)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 48.58
Average program size in population (points): 64.933
Average percent parens in population: 0.262
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 27
Genome diversity (% unique genomes):	 0.932
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.932
Total error diversity:				 0.006
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.124
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 914830
--- Timings ---
Current time: 1559594063327 milliseconds
Total Time:           4.4 seconds
Initialization:       0.1 seconds,  2.5%
Reproduction:         1.8 seconds, 39.6%
Fitness Testing:      1.8 seconds, 40.0%
Report:               0.8 seconds, 17.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 453
Test mean error for best: 0.45300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -38                 | Program output: -38                
Correct output: -72                 | Program output: -72                
Correct output: -100                | Program output: -100               
Correct output: -50                 | Program output: 76                 
Correct output: 21                  | Program output: 92                 
Correct output: 79                  | Program output: 79                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: 26                 
Correct output: 23                  | Program output: 91                 
Correct output: -26                 | Program output: -26                
Correct output: 41                  | Program output: 41                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -82                
Correct output: -36                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: 16                  | Program output: 51                 
Correct output: 36                  | Program output: 84                 
Correct output: 16                  | Program output: 16                 
Correct output: 29                  | Program output: 29                 
Correct output: 4                   | Program output: 41                 
Correct output: 0                   | Program output: 0                  
Correct output: 34                  | Program output: 40                 
Correct output: 35                  | Program output: 80                 
Correct output: 44                  | Program output: 47                 
Correct output: 28                  | Program output: 72                 
Correct output: 6                   | Program output: 6                  
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 21                 
Correct output: 4                   | Program output: 12                 
Correct output: 4                   | Program output: 18                 
Correct output: 0                   | Program output: 37                 
Correct output: 7                   | Program output: 32                 
Correct output: 43                  | Program output: 43                 
Correct output: 24                  | Program output: 24                 
Correct output: 28                  | Program output: 34                 
Correct output: -77                 | Program output: -65                
Correct output: -36                 | Program output: -36                
Correct output: -88                 | Program output: 84                 
Correct output: -29                 | Program output: 32                 
Correct output: -98                 | Program output: -30                
Correct output: -26                 | Program output: 68                 
Correct output: -21                 | Program output: -13                
Correct output: -79                 | Program output: -50                
Correct output: -86                 | Program output: -74                
Correct output: -95                 | Program output: -95                
Correct output: -95                 | Program output: -95                
Correct output: -29                 | Program output: -26                
Correct output: -73                 | Program output: -73                
Correct output: -92                 | Program output: -92                
Correct output: -80                 | Program output: -52                
Correct output: -61                 | Program output: -41                
Correct output: -86                 | Program output: -86                
Correct output: -98                 | Program output: -98                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: -93                
Correct output: -64                 | Program output: 87                 
Correct output: -7                  | Program output: -7                 
Correct output: -88                 | Program output: 13                 
Correct output: -65                 | Program output: 59                 
Correct output: -42                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -92                 | Program output: -15                
Correct output: -62                 | Program output: -55                
Correct output: -91                 | Program output: -91                
Correct output: -47                 | Program output: -47                
Correct output: -97                 | Program output: -97                
Correct output: -70                 | Program output: -70                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -79                
Correct output: -53                 | Program output: -53                
Correct output: 10                  | Program output: 66                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: 12                 
Correct output: -54                 | Program output: -25                
Correct output: -94                 | Program output: -94                
Correct output: -44                 | Program output: -44                
Correct output: -96                 | Program output: 15                 
Correct output: -53                 | Program output: -53                
Correct output: -75                 | Program output: -38                
Correct output: 24                  | Program output: 74                 
Correct output: -92                 | Program output: 16                 
Correct output: -92                 | Program output: -92                
Correct output: -18                 | Program output: 29                 
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -57                
Correct output: -81                 | Program output: -81                
Correct output: -98                 | Program output: -98                
Correct output: -20                 | Program output: -6                 
Correct output: -88                 | Program output: 51                 
Correct output: -94                 | Program output: -28                
Correct output: -60                 | Program output: -60                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_noop} {:close 1, :instruction exec_if} {:close 0, :instruction exec_if} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_swap} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction tagged_659} {:close 1, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_swap} {:close 0, :instruction 55} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction in4} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_div} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 1, :instruction boolean_dup_times})
Lexicase best program: (integer_shove boolean_swap in4 integer_eq exec_noop exec_if () (exec_if (integer_dup exec_swap (in2) () integer_add exec_pop ()) (exec_dup_times ()) integer_sub in1 in2 exec_if (integer_shove integer_swap integer_min boolean_xor exec_dup (boolean_eq exec_y_when_autoconstructing (boolean_swap print_integer boolean_eq exec_noop exec_yankdup boolean_dup_times tagged_659 integer_pop) exec_yankdup) exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max integer_yank) exec_do*range (exec_swap (55 exec_do*while (integer_dup -99 integer_stackdepth in4 integer_dup integer_sub integer_add tagged_884 exec_shove (exec_noop in4 exec_do*times () integer_div print_newline) boolean_pop exec_dup_items) exec_dup_times ()) (boolean_or integer_inc boolean_or boolean_xor print_exec (integer_swap exec_do*range (exec_k (boolean_dup_times) ()))))))) ()))
Lexicase best errors: [0 0 1 1 0 0 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 98
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_noop} {:close 1, :instruction exec_if} {:close 0, :instruction exec_if} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_swap} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction tagged_659} {:close 1, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_swap} {:close 0, :instruction 55} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction in4} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_div} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 1, :instruction boolean_dup_times})
Zero cases best program: (integer_shove boolean_swap in4 integer_eq exec_noop exec_if () (exec_if (integer_dup exec_swap (in2) () integer_add exec_pop ()) (exec_dup_times ()) integer_sub in1 in2 exec_if (integer_shove integer_swap integer_min boolean_xor exec_dup (boolean_eq exec_y_when_autoconstructing (boolean_swap print_integer boolean_eq exec_noop exec_yankdup boolean_dup_times tagged_659 integer_pop) exec_yankdup) exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max integer_yank) exec_do*range (exec_swap (55 exec_do*while (integer_dup -99 integer_stackdepth in4 integer_dup integer_sub integer_add tagged_884 exec_shove (exec_noop in4 exec_do*times () integer_div print_newline) boolean_pop exec_dup_items) exec_dup_times ()) (boolean_or integer_inc boolean_or boolean_xor print_exec (integer_swap exec_do*range (exec_k (boolean_dup_times) ()))))))) ()))
Zero cases best errors: [0 0 1 1 0 0 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 98
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (267 267 130 237 141 268 133 633 268 244)
Population mean number of elite cases: 2.59
Count of perfect (error zero) individuals by case: (267 267 130 237 141 268 133 633 268 244)
Population mean number of perfect (error zero) cases: 2.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_add} {:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_dup} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_noop} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_while} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*times} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 0, :instruction integer_div} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 1, :instruction boolean_dup_times})
Best program: (exec_while (integer_eq) integer_shove boolean_swap integer_add in4 exec_noop exec_if (exec_rot (integer_dup in2) () (integer_add integer_sub in1 exec_if (integer_swap boolean_swap) (integer_min exec_y_when_autoconstructing (print_integer boolean_eq exec_yankdup integer_inc boolean_dup_times exec_noop) exec_yankdup) exec_shove (exec_shove (exec_shove (exec_y (integer_eq boolean_empty) integer_max integer_yank) exec_do*range (boolean_yankdup boolean_eq exec_swap (exec_do*while (integer_dup exec_y_when_autoconstructing () -99 integer_stackdepth integer_dup exec_while (integer_sub integer_add exec_shove (exec_noop exec_do*times () print_newline) boolean_pop exec_dup_items) integer_div exec_dup_times ()) boolean_or integer_inc boolean_or integer_swap exec_do*range (exec_k (boolean_dup_times) ())) ()))))) ())
Errors: [0 0 1 1 0 0 0 0 0 1]
Total: 3
Mean: 0.3
Genome size: 62
Size: 88
Percent parens: 0.295
--- Population Statistics ---
Average total errors in population: 7.412
Median total errors in population: 7
Error averages by case: (0.733 0.733 0.87 0.763 0.859 0.732 0.867 0.367 0.732 0.756)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 53.388
Average program size in population (points): 72.745
Average percent parens in population: 0.273
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 8
Genome diversity (% unique genomes):	 0.979
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.979
Total error diversity:				 0.008
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.126
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1466572
--- Timings ---
Current time: 1559594065787 milliseconds
Total Time:           6.4 seconds
Initialization:       0.1 seconds,  1.7%
Reproduction:         3.0 seconds, 46.2%
Fitness Testing:      2.3 seconds, 36.1%
Report:               1.0 seconds, 16.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 198
Test mean error for best: 0.19800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -38                 | Program output: -38                
Correct output: -72                 | Program output: 62                 
Correct output: -100                | Program output: -100               
Correct output: -50                 | Program output: -50                
Correct output: 21                  | Program output: 21                 
Correct output: 79                  | Program output: 90                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 23                  | Program output: 23                 
Correct output: -26                 | Program output: -26                
Correct output: 41                  | Program output: 41                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -82                
Correct output: -36                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: 16                  | Program output: 16                 
Correct output: 36                  | Program output: 36                 
Correct output: 16                  | Program output: 42                 
Correct output: 29                  | Program output: 29                 
Correct output: 4                   | Program output: 4                  
Correct output: 0                   | Program output: 0                  
Correct output: 34                  | Program output: 34                 
Correct output: 35                  | Program output: 35                 
Correct output: 44                  | Program output: 44                 
Correct output: 28                  | Program output: 28                 
Correct output: 6                   | Program output: 35                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 57                 
Correct output: 4                   | Program output: 4                  
Correct output: 4                   | Program output: 4                  
Correct output: 0                   | Program output: 0                  
Correct output: 7                   | Program output: 7                  
Correct output: 43                  | Program output: 43                 
Correct output: 24                  | Program output: 24                 
Correct output: 28                  | Program output: 28                 
Correct output: -77                 | Program output: -77                
Correct output: -36                 | Program output: -36                
Correct output: -88                 | Program output: -88                
Correct output: -29                 | Program output: -29                
Correct output: -98                 | Program output: -98                
Correct output: -26                 | Program output: -26                
Correct output: -21                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -86                 | Program output: -86                
Correct output: -95                 | Program output: -95                
Correct output: -95                 | Program output: -86                
Correct output: -29                 | Program output: -29                
Correct output: -73                 | Program output: -35                
Correct output: -92                 | Program output: -92                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -61                
Correct output: -86                 | Program output: 6                  
Correct output: -98                 | Program output: -98                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: -93                
Correct output: -64                 | Program output: -64                
Correct output: -7                  | Program output: 18                 
Correct output: -88                 | Program output: -88                
Correct output: -65                 | Program output: -65                
Correct output: -42                 | Program output: -42                
Correct output: -98                 | Program output: -5                 
Correct output: -92                 | Program output: -92                
Correct output: -62                 | Program output: -62                
Correct output: -91                 | Program output: -70                
Correct output: -47                 | Program output: -41                
Correct output: -97                 | Program output: -97                
Correct output: -70                 | Program output: -70                
Correct output: -88                 | Program output: 53                 
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -79                
Correct output: -53                 | Program output: -53                
Correct output: 10                  | Program output: 10                 
Correct output: -44                 | Program output: 49                 
Correct output: -52                 | Program output: -52                
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: -94                
Correct output: -44                 | Program output: -44                
Correct output: -96                 | Program output: -96                
Correct output: -53                 | Program output: -53                
Correct output: -75                 | Program output: -75                
Correct output: 24                  | Program output: 24                 
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -92                
Correct output: -18                 | Program output: -18                
Correct output: -78                 | Program output: 13                 
Correct output: -89                 | Program output: -89                
Correct output: -81                 | Program output: -81                
Correct output: -98                 | Program output: -98                
Correct output: -20                 | Program output: -20                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -60                 | Program output: -60                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_while} {:close 1, :instruction exec_s} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_dup} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_eq} {:close 3, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction tagged_659} {:close 1, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction exec_rot} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_div} {:close 1, :instruction print_newline} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in4} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_times})
Lexicase best program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup in2)) integer_add exec_pop () exec_dup_times () integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () exec_y_when_autoconstructing (boolean_swap integer_min) print_integer exec_noop exec_yankdup exec_flush integer_inc boolean_dup_times tagged_659 integer_pop exec_yankdup exec_shove (integer_yank exec_shove (exec_shove (exec_do*range (exec_y (boolean_empty) integer_max boolean_xor integer_yank) integer_mult exec_do*while (integer_dup -99 integer_stackdepth in4 boolean_or integer_sub integer_add exec_rot (tagged_884 exec_shove (exec_noop exec_do*times () integer_div print_newline) exec_s_when_autoconstructing (boolean_pop exec_dup_items) (exec_dup_times ()) (boolean_or integer_inc exec_dup_times () boolean_or exec_k_when_autoconstructing (in4 print_exec (integer_swap in3 exec_do*range (boolean_not exec_k (boolean_pop integer_max boolean_dup_times) ()))) ())) () ())))))
Lexicase best errors: [0 0 0 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 109
Percent parens: 0.294
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_while} {:close 1, :instruction exec_s} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_dup} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_eq} {:close 3, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction tagged_659} {:close 1, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction exec_rot} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_div} {:close 1, :instruction print_newline} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in4} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_times})
Zero cases best program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup in2)) integer_add exec_pop () exec_dup_times () integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () exec_y_when_autoconstructing (boolean_swap integer_min) print_integer exec_noop exec_yankdup exec_flush integer_inc boolean_dup_times tagged_659 integer_pop exec_yankdup exec_shove (integer_yank exec_shove (exec_shove (exec_do*range (exec_y (boolean_empty) integer_max boolean_xor integer_yank) integer_mult exec_do*while (integer_dup -99 integer_stackdepth in4 boolean_or integer_sub integer_add exec_rot (tagged_884 exec_shove (exec_noop exec_do*times () integer_div print_newline) exec_s_when_autoconstructing (boolean_pop exec_dup_items) (exec_dup_times ()) (boolean_or integer_inc exec_dup_times () boolean_or exec_k_when_autoconstructing (in4 print_exec (integer_swap in3 exec_do*range (boolean_not exec_k (boolean_pop integer_max boolean_dup_times) ()))) ())) () ())))))
Zero cases best errors: [0 0 0 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 109
Percent parens: 0.294
--- Lexicase Population Statistics ---
Count of elite individuals by case: (237 614 227 366 262 367 371 385 214 385)
Population mean number of elite cases: 3.43
Count of perfect (error zero) individuals by case: (237 614 227 366 262 367 371 385 214 385)
Population mean number of perfect (error zero) cases: 3.43
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_s} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 0, :instruction integer_dup} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_eq} {:close 3, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction 55} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_div} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in4} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 0, :instruction in4} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_dup_times})
Best program: (exec_while (integer_lte exec_s () (integer_shove boolean_swap in4 integer_dup in2) () integer_add exec_pop ()) exec_dup_times () integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () exec_y_when_autoconstructing (boolean_swap integer_min) print_integer exec_noop exec_yankdup exec_flush integer_inc boolean_dup_times integer_pop exec_shove (exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_do*range (55 exec_do*while (integer_dup -99 integer_stackdepth integer_dup boolean_or integer_sub integer_add tagged_884 exec_dup (exec_shove (exec_noop exec_do*times () integer_div print_newline) boolean_pop exec_dup_items) exec_dup_times ()) boolean_or integer_inc boolean_or exec_do*times (exec_k_when_autoconstructing (in4 boolean_frominteger) (print_exec (integer_swap exec_do*range (exec_k (in4 boolean_pop boolean_dup_times) ())))))))))
Errors: [0 0 0 0 1 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 73
Size: 101
Percent parens: 0.277
--- Population Statistics ---
Average total errors in population: 6.572
Median total errors in population: 6
Error averages by case: (0.763 0.386 0.773 0.634 0.738 0.633 0.629 0.615 0.786 0.615)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 77.973
Average program size in population (points): 106.399
Average percent parens in population: 0.269
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.01
Error (vector) diversity:			 0.05
Behavioral diversity:				 0.211
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2054323
--- Timings ---
Current time: 1559594067857 milliseconds
Total Time:           8.9 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.2 seconds, 47.3%
Fitness Testing:      2.8 seconds, 31.9%
Report:               1.7 seconds, 19.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 198
Test mean error for best: 0.19800
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 1
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 1
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 1
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 1
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 1
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 1
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 1
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 1
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 1
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 1
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 1
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 1
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 1
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 1
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 0
Test Case  414 | Error: 1
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 1
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 1
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 1
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 1
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 1
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 1
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 1
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 1
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 1
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 1
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 1
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 1
Test Case  768 | Error: 1
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 1
Test Case  798 | Error: 1
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 1
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 1
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 1
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 1
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 1
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 1
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 1
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -38                 | Program output: -38                
Correct output: -72                 | Program output: 62                 
Correct output: -100                | Program output: -100               
Correct output: -50                 | Program output: -50                
Correct output: 21                  | Program output: 21                 
Correct output: 79                  | Program output: 90                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 23                  | Program output: 23                 
Correct output: -26                 | Program output: -26                
Correct output: 41                  | Program output: 41                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -82                
Correct output: -36                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: 16                  | Program output: 16                 
Correct output: 36                  | Program output: 36                 
Correct output: 16                  | Program output: 42                 
Correct output: 29                  | Program output: 29                 
Correct output: 4                   | Program output: 4                  
Correct output: 0                   | Program output: 0                  
Correct output: 34                  | Program output: 34                 
Correct output: 35                  | Program output: 35                 
Correct output: 44                  | Program output: 44                 
Correct output: 28                  | Program output: 28                 
Correct output: 6                   | Program output: 35                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 57                 
Correct output: 4                   | Program output: 4                  
Correct output: 4                   | Program output: 4                  
Correct output: 0                   | Program output: 0                  
Correct output: 7                   | Program output: 7                  
Correct output: 43                  | Program output: 43                 
Correct output: 24                  | Program output: 24                 
Correct output: 28                  | Program output: 28                 
Correct output: -77                 | Program output: -77                
Correct output: -36                 | Program output: -36                
Correct output: -88                 | Program output: -88                
Correct output: -29                 | Program output: -29                
Correct output: -98                 | Program output: -98                
Correct output: -26                 | Program output: -26                
Correct output: -21                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -86                 | Program output: -86                
Correct output: -95                 | Program output: -95                
Correct output: -95                 | Program output: -86                
Correct output: -29                 | Program output: -29                
Correct output: -73                 | Program output: -35                
Correct output: -92                 | Program output: -92                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -61                
Correct output: -86                 | Program output: 6                  
Correct output: -98                 | Program output: -98                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: -93                
Correct output: -64                 | Program output: -64                
Correct output: -7                  | Program output: 18                 
Correct output: -88                 | Program output: -88                
Correct output: -65                 | Program output: -65                
Correct output: -42                 | Program output: -42                
Correct output: -98                 | Program output: -5                 
Correct output: -92                 | Program output: -92                
Correct output: -62                 | Program output: -62                
Correct output: -91                 | Program output: -70                
Correct output: -47                 | Program output: -41                
Correct output: -97                 | Program output: -97                
Correct output: -70                 | Program output: -70                
Correct output: -88                 | Program output: 53                 
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -79                
Correct output: -53                 | Program output: -53                
Correct output: 10                  | Program output: 10                 
Correct output: -44                 | Program output: 49                 
Correct output: -52                 | Program output: -52                
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: -94                
Correct output: -44                 | Program output: -44                
Correct output: -96                 | Program output: -96                
Correct output: -53                 | Program output: -53                
Correct output: -75                 | Program output: -75                
Correct output: 24                  | Program output: 24                 
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -92                
Correct output: -18                 | Program output: -18                
Correct output: -78                 | Program output: 13                 
Correct output: -89                 | Program output: -89                
Correct output: -81                 | Program output: -81                
Correct output: -98                 | Program output: -98                
Correct output: -20                 | Program output: -20                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -60                 | Program output: -60                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_while} {:close 1, :instruction exec_s} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction in2} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction exec_do*times} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_min} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_eq} {:close 3, :instruction in3} {:close 0, :instruction boolean_swap} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_y} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction tagged_659} {:close 2, :instruction boolean_not} {:close 1, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction 55} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_shove} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_add} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*times} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_and} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*while} {:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in4})
Lexicase best program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (in2 in2)) integer_add exec_pop () boolean_empty integer_sub boolean_frominteger exec_do*times () in1 in2 boolean_invert_second_then_and integer_min exec_s_when_autoconstructing (boolean_eq in3) () () boolean_swap integer_min print_integer integer_gte boolean_eq exec_noop exec_y () exec_yankdup exec_flush integer_inc boolean_dup_times tagged_659 boolean_not integer_pop exec_yankdup exec_shove (exec_shove (exec_shove (exec_y (integer_max boolean_xor integer_yank) exec_do*range (55 boolean_or exec_do*while (exec_shove (-99 integer_stackdepth in4 print_integer boolean_or integer_add tagged_884 exec_shove (exec_noop exec_do*times () boolean_dup_items)) integer_div boolean_and print_newline) boolean_pop exec_dup_times ()) boolean_or integer_inc boolean_or exec_k_when_autoconstructing (print_exec (integer_swap exec_do*while (in3 exec_do*range (exec_k (boolean_pop boolean_dup_times) (in4))))) ()))))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 105
Percent parens: 0.267
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_while} {:close 1, :instruction exec_s} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction in2} {:close 2, :instruction in2} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction exec_do*times} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_min} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_eq} {:close 3, :instruction in3} {:close 0, :instruction boolean_swap} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_y} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction tagged_659} {:close 2, :instruction boolean_not} {:close 1, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction 55} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_shove} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_add} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*times} {:close 2, :instruction boolean_dup_items} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_and} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*while} {:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in4})
Zero cases best program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (in2 in2)) integer_add exec_pop () boolean_empty integer_sub boolean_frominteger exec_do*times () in1 in2 boolean_invert_second_then_and integer_min exec_s_when_autoconstructing (boolean_eq in3) () () boolean_swap integer_min print_integer integer_gte boolean_eq exec_noop exec_y () exec_yankdup exec_flush integer_inc boolean_dup_times tagged_659 boolean_not integer_pop exec_yankdup exec_shove (exec_shove (exec_shove (exec_y (integer_max boolean_xor integer_yank) exec_do*range (55 boolean_or exec_do*while (exec_shove (-99 integer_stackdepth in4 print_integer boolean_or integer_add tagged_884 exec_shove (exec_noop exec_do*times () boolean_dup_items)) integer_div boolean_and print_newline) boolean_pop exec_dup_times ()) boolean_or integer_inc boolean_or exec_k_when_autoconstructing (print_exec (integer_swap exec_do*while (in3 exec_do*range (exec_k (boolean_pop boolean_dup_times) (in4))))) ()))))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 105
Percent parens: 0.267
--- Lexicase Population Statistics ---
Count of elite individuals by case: (484 663 472 370 519 491 467 685 517 583)
Population mean number of elite cases: 5.25
Count of perfect (error zero) individuals by case: (484 663 472 370 519 491 467 685 517 583)
Population mean number of perfect (error zero) cases: 5.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_while} {:close 1, :instruction exec_s} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_swap} {:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_add} {:close 2, :instruction exec_pop} {:close 2, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_eq} {:close 3, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_flush} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction tagged_659} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_yank} {:close 0, :instruction exec_dup_items} {:close 0, :instruction 55} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup} {:close 0, :instruction -99} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_sub} {:close 0, :instruction in4} {:close 0, :instruction tagged_835} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop} {:close 0, :instruction tagged_884} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_div} {:close 1, :instruction integer_dup_items} {:close 1, :instruction print_newline} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_items} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_eq} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction print_exec} {:close 0, :instruction integer_swap} {:close 0, :instruction print_newline} {:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k})
Best program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 76
Size: 102
Percent parens: 0.255
--- Population Statistics ---
Average total errors in population: 4.749
Median total errors in population: 5
Error averages by case: (0.516 0.337 0.528 0.63 0.481 0.509 0.533 0.315 0.483 0.417)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 70.538
Average program size in population (points): 96.652
Average percent parens in population: 0.269
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.011
Error (vector) diversity:			 0.066
Behavioral diversity:				 0.255
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2542729
--- Timings ---
Current time: 1559594069785 milliseconds
Total Time:          10.8 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.4 seconds, 49.7%
Fitness Testing:      3.3 seconds, 30.4%
Report:               2.0 seconds, 19.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 4
Successful program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 102


Auto-simplifying with starting size: 102
step: 0
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 500
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 1000
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 1500
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 2000
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 2500
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 3000
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 3500
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 4000
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 4500
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

step: 5000
program: (exec_while (exec_s () (integer_shove boolean_swap in4 exec_noop) (integer_dup integer_add exec_pop ()) exec_dup_times ()) integer_sub in1 in2 exec_if (integer_swap integer_min boolean_xor boolean_eq in3) () integer_rot exec_y_when_autoconstructing (boolean_swap integer_min) print_integer boolean_eq exec_noop exec_yankdup exec_flush exec_do*while () integer_inc boolean_dup_times tagged_659 integer_pop exec_shove (exec_shove (exec_shove (exec_y (boolean_empty) integer_max boolean_xor integer_yank) exec_dup_items 55 exec_do*while (integer_dup -99 integer_stackdepth integer_sub in4 tagged_835 boolean_or integer_add integer_pop tagged_884 exec_shove (exec_noop integer_div integer_dup_items) print_newline) boolean_pop exec_dup_items) boolean_xor boolean_or integer_inc boolean_or boolean_eq) exec_k_when_autoconstructing (boolean_invert_first_then_and in4 exec_rot (print_exec (integer_swap print_newline in3 exec_do*range (exec_k () ()))) () ()) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 102

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 198
Test mean error for best: 0.19800
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 1
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 1
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 1
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 1
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 1
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 1
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 1
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 1
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 1
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 1
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 1
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 1
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 1
Test Case  324 | Error: 1
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 1
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 1
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 1
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 0
Test Case  414 | Error: 1
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 1
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 1
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 1
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 1
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 1
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 1
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 1
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 1
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 1
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 1
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 1
Test Case  759 | Error: 1
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 1
Test Case  768 | Error: 1
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 1
Test Case  798 | Error: 1
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 0
Test Case  803 | Error: 1
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 1
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 1
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 1
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 1
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 1
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 1
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 1
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -38                 | Program output: -38                
Correct output: -72                 | Program output: 62                 
Correct output: -100                | Program output: -100               
Correct output: -50                 | Program output: -50                
Correct output: 21                  | Program output: 21                 
Correct output: 79                  | Program output: 90                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 23                  | Program output: 23                 
Correct output: -26                 | Program output: -26                
Correct output: 41                  | Program output: 41                 
Correct output: -57                 | Program output: -57                
Correct output: -82                 | Program output: -82                
Correct output: -36                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: 16                  | Program output: 16                 
Correct output: 36                  | Program output: 36                 
Correct output: 16                  | Program output: 42                 
Correct output: 29                  | Program output: 29                 
Correct output: 4                   | Program output: 4                  
Correct output: 0                   | Program output: 0                  
Correct output: 34                  | Program output: 34                 
Correct output: 35                  | Program output: 35                 
Correct output: 44                  | Program output: 44                 
Correct output: 28                  | Program output: 28                 
Correct output: 6                   | Program output: 35                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 57                 
Correct output: 4                   | Program output: 4                  
Correct output: 4                   | Program output: 4                  
Correct output: 0                   | Program output: 0                  
Correct output: 7                   | Program output: 7                  
Correct output: 43                  | Program output: 43                 
Correct output: 24                  | Program output: 24                 
Correct output: 28                  | Program output: 28                 
Correct output: -77                 | Program output: -77                
Correct output: -36                 | Program output: -36                
Correct output: -88                 | Program output: -88                
Correct output: -29                 | Program output: -29                
Correct output: -98                 | Program output: -98                
Correct output: -26                 | Program output: -26                
Correct output: -21                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -86                 | Program output: -86                
Correct output: -95                 | Program output: -95                
Correct output: -95                 | Program output: -86                
Correct output: -29                 | Program output: -29                
Correct output: -73                 | Program output: -35                
Correct output: -92                 | Program output: -92                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -61                
Correct output: -86                 | Program output: 6                  
Correct output: -98                 | Program output: -98                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -93                 | Program output: -93                
Correct output: -64                 | Program output: -64                
Correct output: -7                  | Program output: 18                 
Correct output: -88                 | Program output: -88                
Correct output: -65                 | Program output: -65                
Correct output: -42                 | Program output: -42                
Correct output: -98                 | Program output: -5                 
Correct output: -92                 | Program output: -92                
Correct output: -62                 | Program output: -62                
Correct output: -91                 | Program output: -70                
Correct output: -47                 | Program output: -41                
Correct output: -97                 | Program output: -97                
Correct output: -70                 | Program output: -70                
Correct output: -88                 | Program output: 53                 
Correct output: -94                 | Program output: -94                
Correct output: -79                 | Program output: -79                
Correct output: -53                 | Program output: -53                
Correct output: 10                  | Program output: 10                 
Correct output: -44                 | Program output: 49                 
Correct output: -52                 | Program output: -52                
Correct output: -54                 | Program output: -54                
Correct output: -94                 | Program output: -94                
Correct output: -44                 | Program output: -44                
Correct output: -96                 | Program output: -96                
Correct output: -53                 | Program output: -53                
Correct output: -75                 | Program output: -75                
Correct output: 24                  | Program output: 24                 
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -92                
Correct output: -18                 | Program output: -18                
Correct output: -78                 | Program output: 13                 
Correct output: -89                 | Program output: -89                
Correct output: -81                 | Program output: -81                
Correct output: -98                 | Program output: -98                
Correct output: -20                 | Program output: -20                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -60                 | Program output: -60                
Correct output: -96                 | Program output: -96                
Correct output: -98                 | Program output: -98                
;;******************************
