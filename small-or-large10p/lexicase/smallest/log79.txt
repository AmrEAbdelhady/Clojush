Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-21 -21 41 -21] -21] [[7 7 7 -100] -100] [[-86 88 88 88] -86] [[-97 -12 -12 -12] -97] [[51 51 51 39] 39] [[-75 -21 -21 -21] -75] [[-19 -61 -19 -19] -61] [[16 16 16 -23] -23] [[-45 -31 -45 -45] -45] [[19 -47 19 19] -47] [(57 57 57 57) 57] [(10 10 10 10) 10] [(95 95 95 95) 95] [(-54 -54 -54 -54) -54] [(20 20 20 20) 20] [(91 25 14 62) 14] [(81 8 14 82) 8] [(14 71 88 32) 14] [(67 15 98 34) 15] [(18 92 90 6) 6] [(44 35 61 79) 35] [(75 24 27 91) 24] [(66 99 35 49) 35] [(73 41 72 70) 41] [(30 0 66 11) 0] [(16 57 83 8) 8] [(8 4 79 18) 4] [(29 14 63 63) 14] [(85 17 0 94) 0] [(66 34 8 88) 8] [(37 44 81 32) 32] [(0 64 69 8) 0] [(4 62 9 71) 4] [(14 13 30 78) 13] [(97 2 95 0) 0] [(-75 -65 -6 8) -75] [(-43 -52 45 -13) -52] [(30 -50 -95 25) -95] [(35 79 18 -26) -26] [(-54 100 60 46) -54] [(86 -31 -66 67) -66] [(47 96 -73 93) -73] [(80 38 57 -47) -47] [(47 -1 79 -98) -98] [(69 -90 -24 30) -90] [(68 80 14 -92) -92] [(-10 -89 -99 7) -99] [(-26 -84 43 -57) -84] [(52 67 -26 5) -26] [(-6 90 50 -57) -57] [(60 40 -16 71) -16] [(59 -43 84 -81) -81] [(58 -45 57 83) -45] [(-67 84 -78 60) -78] [(-61 91 -82 35) -82] [(-78 -98 99 -77) -98] [(63 67 -30 -43) -43] [(-74 52 94 30) -74] [(47 43 22 -61) -61] [(-22 64 -77 46) -77] [(78 73 94 23) 23] [(-98 -79 47 73) -98] [(-15 94 -27 96) -27] [(57 -63 -9 58) -63] [(-83 56 17 -90) -90] [(16 21 95 40) 16] [(-54 84 -86 -86) -86] [(-12 74 -61 -46) -61] [(-33 26 -78 53) -78] [(-23 64 -10 60) -23] [(24 -76 -7 28) -76] [(-65 85 -71 48) -71] [(83 -57 88 -31) -57] [(-46 95 82 51) -46] [(35 -97 -79 -87) -97] [(27 72 76 20) 20] [(-20 -47 -69 -16) -69] [(84 -72 -57 20) -72] [(85 73 -78 -57) -78] [(-23 48 -89 67) -89] [(66 -87 98 58) -87] [(-9 5 -59 69) -59] [(-33 65 -83 25) -83] [(-43 21 74 -4) -43] [(35 16 63 55) 16] [(-14 6 91 -4) -14] [(-37 -66 48 90) -66] [(-75 21 55 -52) -75] [(77 -68 89 12) -68] [(6 -55 -54 -41) -55] [(35 78 16 -76) -76] [(-40 -92 75 -80) -92] [(22 -21 -56 -96) -96] [(-3 39 96 -59) -59] [(59 60 -42 -28) -42])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-21 -21 41 -21] -21]
Train Case:   6 | Input/Output: [[7 7 7 -100] -100]
Train Case:   7 | Input/Output: [[-86 88 88 88] -86]
Train Case:   8 | Input/Output: [[-97 -12 -12 -12] -97]
Train Case:   9 | Input/Output: [[51 51 51 39] 39]
Train Case:  10 | Input/Output: [[-75 -21 -21 -21] -75]
Train Case:  11 | Input/Output: [[-19 -61 -19 -19] -61]
Train Case:  12 | Input/Output: [[16 16 16 -23] -23]
Train Case:  13 | Input/Output: [[-45 -31 -45 -45] -45]
Train Case:  14 | Input/Output: [[19 -47 19 19] -47]
Train Case:  15 | Input/Output: [(57 57 57 57) 57]
Train Case:  16 | Input/Output: [(10 10 10 10) 10]
Train Case:  17 | Input/Output: [(95 95 95 95) 95]
Train Case:  18 | Input/Output: [(-54 -54 -54 -54) -54]
Train Case:  19 | Input/Output: [(20 20 20 20) 20]
Train Case:  20 | Input/Output: [(91 25 14 62) 14]
Train Case:  21 | Input/Output: [(81 8 14 82) 8]
Train Case:  22 | Input/Output: [(14 71 88 32) 14]
Train Case:  23 | Input/Output: [(67 15 98 34) 15]
Train Case:  24 | Input/Output: [(18 92 90 6) 6]
Train Case:  25 | Input/Output: [(44 35 61 79) 35]
Train Case:  26 | Input/Output: [(75 24 27 91) 24]
Train Case:  27 | Input/Output: [(66 99 35 49) 35]
Train Case:  28 | Input/Output: [(73 41 72 70) 41]
Train Case:  29 | Input/Output: [(30 0 66 11) 0]
Train Case:  30 | Input/Output: [(16 57 83 8) 8]
Train Case:  31 | Input/Output: [(8 4 79 18) 4]
Train Case:  32 | Input/Output: [(29 14 63 63) 14]
Train Case:  33 | Input/Output: [(85 17 0 94) 0]
Train Case:  34 | Input/Output: [(66 34 8 88) 8]
Train Case:  35 | Input/Output: [(37 44 81 32) 32]
Train Case:  36 | Input/Output: [(0 64 69 8) 0]
Train Case:  37 | Input/Output: [(4 62 9 71) 4]
Train Case:  38 | Input/Output: [(14 13 30 78) 13]
Train Case:  39 | Input/Output: [(97 2 95 0) 0]
Train Case:  40 | Input/Output: [(-75 -65 -6 8) -75]
Train Case:  41 | Input/Output: [(-43 -52 45 -13) -52]
Train Case:  42 | Input/Output: [(30 -50 -95 25) -95]
Train Case:  43 | Input/Output: [(35 79 18 -26) -26]
Train Case:  44 | Input/Output: [(-54 100 60 46) -54]
Train Case:  45 | Input/Output: [(86 -31 -66 67) -66]
Train Case:  46 | Input/Output: [(47 96 -73 93) -73]
Train Case:  47 | Input/Output: [(80 38 57 -47) -47]
Train Case:  48 | Input/Output: [(47 -1 79 -98) -98]
Train Case:  49 | Input/Output: [(69 -90 -24 30) -90]
Train Case:  50 | Input/Output: [(68 80 14 -92) -92]
Train Case:  51 | Input/Output: [(-10 -89 -99 7) -99]
Train Case:  52 | Input/Output: [(-26 -84 43 -57) -84]
Train Case:  53 | Input/Output: [(52 67 -26 5) -26]
Train Case:  54 | Input/Output: [(-6 90 50 -57) -57]
Train Case:  55 | Input/Output: [(60 40 -16 71) -16]
Train Case:  56 | Input/Output: [(59 -43 84 -81) -81]
Train Case:  57 | Input/Output: [(58 -45 57 83) -45]
Train Case:  58 | Input/Output: [(-67 84 -78 60) -78]
Train Case:  59 | Input/Output: [(-61 91 -82 35) -82]
Train Case:  60 | Input/Output: [(-78 -98 99 -77) -98]
Train Case:  61 | Input/Output: [(63 67 -30 -43) -43]
Train Case:  62 | Input/Output: [(-74 52 94 30) -74]
Train Case:  63 | Input/Output: [(47 43 22 -61) -61]
Train Case:  64 | Input/Output: [(-22 64 -77 46) -77]
Train Case:  65 | Input/Output: [(78 73 94 23) 23]
Train Case:  66 | Input/Output: [(-98 -79 47 73) -98]
Train Case:  67 | Input/Output: [(-15 94 -27 96) -27]
Train Case:  68 | Input/Output: [(57 -63 -9 58) -63]
Train Case:  69 | Input/Output: [(-83 56 17 -90) -90]
Train Case:  70 | Input/Output: [(16 21 95 40) 16]
Train Case:  71 | Input/Output: [(-54 84 -86 -86) -86]
Train Case:  72 | Input/Output: [(-12 74 -61 -46) -61]
Train Case:  73 | Input/Output: [(-33 26 -78 53) -78]
Train Case:  74 | Input/Output: [(-23 64 -10 60) -23]
Train Case:  75 | Input/Output: [(24 -76 -7 28) -76]
Train Case:  76 | Input/Output: [(-65 85 -71 48) -71]
Train Case:  77 | Input/Output: [(83 -57 88 -31) -57]
Train Case:  78 | Input/Output: [(-46 95 82 51) -46]
Train Case:  79 | Input/Output: [(35 -97 -79 -87) -97]
Train Case:  80 | Input/Output: [(27 72 76 20) 20]
Train Case:  81 | Input/Output: [(-20 -47 -69 -16) -69]
Train Case:  82 | Input/Output: [(84 -72 -57 20) -72]
Train Case:  83 | Input/Output: [(85 73 -78 -57) -78]
Train Case:  84 | Input/Output: [(-23 48 -89 67) -89]
Train Case:  85 | Input/Output: [(66 -87 98 58) -87]
Train Case:  86 | Input/Output: [(-9 5 -59 69) -59]
Train Case:  87 | Input/Output: [(-33 65 -83 25) -83]
Train Case:  88 | Input/Output: [(-43 21 74 -4) -43]
Train Case:  89 | Input/Output: [(35 16 63 55) 16]
Train Case:  90 | Input/Output: [(-14 6 91 -4) -14]
Train Case:  91 | Input/Output: [(-37 -66 48 90) -66]
Train Case:  92 | Input/Output: [(-75 21 55 -52) -75]
Train Case:  93 | Input/Output: [(77 -68 89 12) -68]
Train Case:  94 | Input/Output: [(6 -55 -54 -41) -55]
Train Case:  95 | Input/Output: [(35 78 16 -76) -76]
Train Case:  96 | Input/Output: [(-40 -92 75 -80) -92]
Train Case:  97 | Input/Output: [(22 -21 -56 -96) -96]
Train Case:  98 | Input/Output: [(-3 39 96 -59) -59]
Train Case:  99 | Input/Output: [(59 60 -42 -28) -42]
Test Case:   0 | Input/Output: [[52 52 -95 52] -95]
Test Case:   1 | Input/Output: [[-59 -59 -59 63] -59]
Test Case:   2 | Input/Output: [[-46 -46 -46 -70] -70]
Test Case:   3 | Input/Output: [[56 -50 56 56] -50]
Test Case:   4 | Input/Output: [[-6 -13 -6 -6] -13]
Test Case:   5 | Input/Output: [[-93 -93 2 -93] -93]
Test Case:   6 | Input/Output: [[96 96 -95 96] -95]
Test Case:   7 | Input/Output: [[75 -80 75 75] -80]
Test Case:   8 | Input/Output: [[2 86 2 2] 2]
Test Case:   9 | Input/Output: [[48 -86 -86 -86] -86]
Test Case:  10 | Input/Output: [[33 -66 33 33] -66]
Test Case:  11 | Input/Output: [[89 18 89 89] 18]
Test Case:  12 | Input/Output: [[-40 -40 -48 -40] -48]
Test Case:  13 | Input/Output: [[13 -73 13 13] -73]
Test Case:  14 | Input/Output: [[12 26 12 12] 12]
Test Case:  15 | Input/Output: [[-17 -17 -17 -39] -39]
Test Case:  16 | Input/Output: [[-8 -1 -1 -1] -8]
Test Case:  17 | Input/Output: [[61 44 44 44] 44]
Test Case:  18 | Input/Output: [[-27 -20 -20 -20] -27]
Test Case:  19 | Input/Output: [[-83 -83 -26 -83] -83]
Test Case:  20 | Input/Output: [[69 84 84 84] 69]
Test Case:  21 | Input/Output: [[-28 -28 -28 74] -28]
Test Case:  22 | Input/Output: [[7 7 38 7] 7]
Test Case:  23 | Input/Output: [[33 54 33 33] 33]
Test Case:  24 | Input/Output: [[91 91 100 91] 91]
Test Case:  25 | Input/Output: [[-7 61 61 61] -7]
Test Case:  26 | Input/Output: [[67 67 67 -60] -60]
Test Case:  27 | Input/Output: [[-34 -95 -34 -34] -95]
Test Case:  28 | Input/Output: [[29 29 48 29] 29]
Test Case:  29 | Input/Output: [[-3 -3 69 -3] -3]
Test Case:  30 | Input/Output: [[75 94 75 75] 75]
Test Case:  31 | Input/Output: [[-27 -10 -10 -10] -27]
Test Case:  32 | Input/Output: [[96 89 89 89] 89]
Test Case:  33 | Input/Output: [[82 79 82 82] 79]
Test Case:  34 | Input/Output: [[-29 -66 -66 -66] -66]
Test Case:  35 | Input/Output: [[77 75 77 77] 75]
Test Case:  36 | Input/Output: [[-33 -33 43 -33] -33]
Test Case:  37 | Input/Output: [[-70 -94 -94 -94] -94]
Test Case:  38 | Input/Output: [[-69 -69 -69 -19] -69]
Test Case:  39 | Input/Output: [[-20 -7 -7 -7] -20]
Test Case:  40 | Input/Output: [[52 52 52 95] 52]
Test Case:  41 | Input/Output: [[-4 -53 -4 -4] -53]
Test Case:  42 | Input/Output: [[-10 -10 -100 -10] -100]
Test Case:  43 | Input/Output: [[68 -69 -69 -69] -69]
Test Case:  44 | Input/Output: [[-9 -85 -85 -85] -85]
Test Case:  45 | Input/Output: [[-17 -17 -63 -17] -63]
Test Case:  46 | Input/Output: [[-84 -84 -84 -89] -89]
Test Case:  47 | Input/Output: [[-76 8 8 8] -76]
Test Case:  48 | Input/Output: [[-36 -36 -36 -28] -36]
Test Case:  49 | Input/Output: [[83 83 -68 83] -68]
Test Case:  50 | Input/Output: [[-28 -28 6 -28] -28]
Test Case:  51 | Input/Output: [[-73 -73 -27 -73] -73]
Test Case:  52 | Input/Output: [[-32 -40 -40 -40] -40]
Test Case:  53 | Input/Output: [[65 -27 -27 -27] -27]
Test Case:  54 | Input/Output: [[22 -49 -49 -49] -49]
Test Case:  55 | Input/Output: [[100 -14 100 100] -14]
Test Case:  56 | Input/Output: [[63 -76 63 63] -76]
Test Case:  57 | Input/Output: [[63 -41 -41 -41] -41]
Test Case:  58 | Input/Output: [[-57 91 91 91] -57]
Test Case:  59 | Input/Output: [[-74 26 -74 -74] -74]
Test Case:  60 | Input/Output: [[-16 5 5 5] -16]
Test Case:  61 | Input/Output: [[15 26 15 15] 15]
Test Case:  62 | Input/Output: [[95 24 24 24] 24]
Test Case:  63 | Input/Output: [[-37 32 -37 -37] -37]
Test Case:  64 | Input/Output: [[-25 95 -25 -25] -25]
Test Case:  65 | Input/Output: [[84 84 -30 84] -30]
Test Case:  66 | Input/Output: [[44 84 84 84] 44]
Test Case:  67 | Input/Output: [[92 -1 -1 -1] -1]
Test Case:  68 | Input/Output: [[82 82 -65 82] -65]
Test Case:  69 | Input/Output: [[-44 -44 -44 68] -44]
Test Case:  70 | Input/Output: [[0 0 0 16] 0]
Test Case:  71 | Input/Output: [[99 99 99 -56] -56]
Test Case:  72 | Input/Output: [[-58 -42 -42 -42] -58]
Test Case:  73 | Input/Output: [[97 13 13 13] 13]
Test Case:  74 | Input/Output: [[95 -86 -86 -86] -86]
Test Case:  75 | Input/Output: [[-46 -46 -46 -66] -66]
Test Case:  76 | Input/Output: [[-71 -71 37 -71] -71]
Test Case:  77 | Input/Output: [[-97 -97 -23 -97] -97]
Test Case:  78 | Input/Output: [[15 2 15 15] 2]
Test Case:  79 | Input/Output: [[80 14 80 80] 14]
Test Case:  80 | Input/Output: [[-10 -10 46 -10] -10]
Test Case:  81 | Input/Output: [[63 -88 63 63] -88]
Test Case:  82 | Input/Output: [[-50 -50 -50 -18] -50]
Test Case:  83 | Input/Output: [[-81 92 -81 -81] -81]
Test Case:  84 | Input/Output: [[47 47 47 -67] -67]
Test Case:  85 | Input/Output: [[25 11 11 11] 11]
Test Case:  86 | Input/Output: [[90 -94 -94 -94] -94]
Test Case:  87 | Input/Output: [[99 89 99 99] 89]
Test Case:  88 | Input/Output: [[14 14 -3 14] -3]
Test Case:  89 | Input/Output: [[77 77 -68 77] -68]
Test Case:  90 | Input/Output: [[9 -12 -12 -12] -12]
Test Case:  91 | Input/Output: [[-46 -11 -11 -11] -46]
Test Case:  92 | Input/Output: [[-3 -7 -3 -3] -7]
Test Case:  93 | Input/Output: [[-29 -19 -29 -29] -29]
Test Case:  94 | Input/Output: [[-29 71 71 71] -29]
Test Case:  95 | Input/Output: [[-8 -8 40 -8] -8]
Test Case:  96 | Input/Output: [[-35 -35 61 -35] -35]
Test Case:  97 | Input/Output: [[-53 -54 -54 -54] -54]
Test Case:  98 | Input/Output: [[87 87 23 87] 23]
Test Case:  99 | Input/Output: [[-92 -92 98 -92] -92]
Test Case: 100 | Input/Output: [(7 7 7 7) 7]
Test Case: 101 | Input/Output: [(85 85 85 85) 85]
Test Case: 102 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 103 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 104 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 105 | Input/Output: [(56 56 56 56) 56]
Test Case: 106 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 107 | Input/Output: [(54 54 54 54) 54]
Test Case: 108 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 109 | Input/Output: [(69 69 69 69) 69]
Test Case: 110 | Input/Output: [(45 45 45 45) 45]
Test Case: 111 | Input/Output: [(82 82 82 82) 82]
Test Case: 112 | Input/Output: [(65 65 65 65) 65]
Test Case: 113 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 114 | Input/Output: [(75 75 75 75) 75]
Test Case: 115 | Input/Output: [(82 82 82 82) 82]
Test Case: 116 | Input/Output: [(71 71 71 71) 71]
Test Case: 117 | Input/Output: [(7 7 7 7) 7]
Test Case: 118 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 119 | Input/Output: [(63 63 63 63) 63]
Test Case: 120 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 121 | Input/Output: [(17 17 17 17) 17]
Test Case: 122 | Input/Output: [(77 77 77 77) 77]
Test Case: 123 | Input/Output: [(63 63 63 63) 63]
Test Case: 124 | Input/Output: [(69 69 69 69) 69]
Test Case: 125 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 126 | Input/Output: [(27 27 27 27) 27]
Test Case: 127 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 128 | Input/Output: [(99 99 99 99) 99]
Test Case: 129 | Input/Output: [(33 33 33 33) 33]
Test Case: 130 | Input/Output: [(88 88 88 88) 88]
Test Case: 131 | Input/Output: [(21 21 21 21) 21]
Test Case: 132 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 133 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 134 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 135 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 136 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 137 | Input/Output: [(60 60 60 60) 60]
Test Case: 138 | Input/Output: [(94 94 94 94) 94]
Test Case: 139 | Input/Output: [(3 3 3 3) 3]
Test Case: 140 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 141 | Input/Output: [(21 21 21 21) 21]
Test Case: 142 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 143 | Input/Output: [(91 91 91 91) 91]
Test Case: 144 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 145 | Input/Output: [(55 55 55 55) 55]
Test Case: 146 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 147 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 148 | Input/Output: [(48 48 48 48) 48]
Test Case: 149 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 150 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 151 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 152 | Input/Output: [(54 54 54 54) 54]
Test Case: 153 | Input/Output: [(79 79 79 79) 79]
Test Case: 154 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 155 | Input/Output: [(8 8 8 8) 8]
Test Case: 156 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 157 | Input/Output: [(14 14 14 14) 14]
Test Case: 158 | Input/Output: [(11 11 11 11) 11]
Test Case: 159 | Input/Output: [(70 70 70 70) 70]
Test Case: 160 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 161 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 162 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 163 | Input/Output: [(32 32 32 32) 32]
Test Case: 164 | Input/Output: [(59 59 59 59) 59]
Test Case: 165 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 166 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 167 | Input/Output: [(17 17 17 17) 17]
Test Case: 168 | Input/Output: [(62 62 62 62) 62]
Test Case: 169 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 170 | Input/Output: [(2 2 2 2) 2]
Test Case: 171 | Input/Output: [(97 97 97 97) 97]
Test Case: 172 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 173 | Input/Output: [(30 30 30 30) 30]
Test Case: 174 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 175 | Input/Output: [(14 14 14 14) 14]
Test Case: 176 | Input/Output: [(86 86 86 86) 86]
Test Case: 177 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 178 | Input/Output: [(0 0 0 0) 0]
Test Case: 179 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 180 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 181 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 182 | Input/Output: [(95 95 95 95) 95]
Test Case: 183 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 184 | Input/Output: [(48 48 48 48) 48]
Test Case: 185 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 186 | Input/Output: [(54 54 54 54) 54]
Test Case: 187 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 188 | Input/Output: [(88 88 88 88) 88]
Test Case: 189 | Input/Output: [(35 35 35 35) 35]
Test Case: 190 | Input/Output: [(82 82 82 82) 82]
Test Case: 191 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 192 | Input/Output: [(85 85 85 85) 85]
Test Case: 193 | Input/Output: [(48 48 48 48) 48]
Test Case: 194 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 195 | Input/Output: [(95 95 95 95) 95]
Test Case: 196 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 197 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 198 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 199 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 200 | Input/Output: [(64 32 78 2) 2]
Test Case: 201 | Input/Output: [(55 2 77 95) 2]
Test Case: 202 | Input/Output: [(8 19 15 74) 8]
Test Case: 203 | Input/Output: [(93 86 49 80) 49]
Test Case: 204 | Input/Output: [(25 26 66 87) 25]
Test Case: 205 | Input/Output: [(25 49 39 45) 25]
Test Case: 206 | Input/Output: [(5 19 97 47) 5]
Test Case: 207 | Input/Output: [(57 29 89 62) 29]
Test Case: 208 | Input/Output: [(46 51 35 7) 7]
Test Case: 209 | Input/Output: [(46 15 76 1) 1]
Test Case: 210 | Input/Output: [(39 44 6 64) 6]
Test Case: 211 | Input/Output: [(100 37 60 5) 5]
Test Case: 212 | Input/Output: [(61 12 12 42) 12]
Test Case: 213 | Input/Output: [(3 26 77 26) 3]
Test Case: 214 | Input/Output: [(45 82 32 30) 30]
Test Case: 215 | Input/Output: [(47 70 3 25) 3]
Test Case: 216 | Input/Output: [(38 39 20 82) 20]
Test Case: 217 | Input/Output: [(70 54 76 78) 54]
Test Case: 218 | Input/Output: [(85 67 37 66) 37]
Test Case: 219 | Input/Output: [(16 21 53 33) 16]
Test Case: 220 | Input/Output: [(45 18 42 42) 18]
Test Case: 221 | Input/Output: [(44 73 20 54) 20]
Test Case: 222 | Input/Output: [(98 63 52 8) 8]
Test Case: 223 | Input/Output: [(17 34 68 53) 17]
Test Case: 224 | Input/Output: [(18 48 26 18) 18]
Test Case: 225 | Input/Output: [(91 0 57 93) 0]
Test Case: 226 | Input/Output: [(36 32 78 88) 32]
Test Case: 227 | Input/Output: [(14 44 56 34) 14]
Test Case: 228 | Input/Output: [(27 84 19 45) 19]
Test Case: 229 | Input/Output: [(38 41 2 14) 2]
Test Case: 230 | Input/Output: [(41 79 79 88) 41]
Test Case: 231 | Input/Output: [(86 93 41 97) 41]
Test Case: 232 | Input/Output: [(28 80 29 92) 28]
Test Case: 233 | Input/Output: [(44 25 96 21) 21]
Test Case: 234 | Input/Output: [(26 20 96 2) 2]
Test Case: 235 | Input/Output: [(8 6 18 43) 6]
Test Case: 236 | Input/Output: [(14 94 93 75) 14]
Test Case: 237 | Input/Output: [(32 36 43 38) 32]
Test Case: 238 | Input/Output: [(26 40 91 13) 13]
Test Case: 239 | Input/Output: [(22 93 78 78) 22]
Test Case: 240 | Input/Output: [(81 39 16 96) 16]
Test Case: 241 | Input/Output: [(62 49 38 88) 38]
Test Case: 242 | Input/Output: [(91 86 98 53) 53]
Test Case: 243 | Input/Output: [(70 0 43 2) 0]
Test Case: 244 | Input/Output: [(50 91 0 24) 0]
Test Case: 245 | Input/Output: [(8 66 67 97) 8]
Test Case: 246 | Input/Output: [(4 75 36 23) 4]
Test Case: 247 | Input/Output: [(23 91 19 35) 19]
Test Case: 248 | Input/Output: [(81 18 24 73) 18]
Test Case: 249 | Input/Output: [(71 1 66 42) 1]
Test Case: 250 | Input/Output: [(47 86 26 29) 26]
Test Case: 251 | Input/Output: [(63 47 60 4) 4]
Test Case: 252 | Input/Output: [(59 65 47 35) 35]
Test Case: 253 | Input/Output: [(79 42 87 78) 42]
Test Case: 254 | Input/Output: [(88 31 25 87) 25]
Test Case: 255 | Input/Output: [(62 91 67 69) 62]
Test Case: 256 | Input/Output: [(44 0 42 20) 0]
Test Case: 257 | Input/Output: [(5 93 50 33) 5]
Test Case: 258 | Input/Output: [(30 40 13 72) 13]
Test Case: 259 | Input/Output: [(52 72 66 41) 41]
Test Case: 260 | Input/Output: [(83 64 65 16) 16]
Test Case: 261 | Input/Output: [(15 24 57 53) 15]
Test Case: 262 | Input/Output: [(57 17 10 100) 10]
Test Case: 263 | Input/Output: [(8 68 63 93) 8]
Test Case: 264 | Input/Output: [(93 85 28 36) 28]
Test Case: 265 | Input/Output: [(65 99 11 7) 7]
Test Case: 266 | Input/Output: [(60 88 78 13) 13]
Test Case: 267 | Input/Output: [(45 69 48 5) 5]
Test Case: 268 | Input/Output: [(55 28 66 15) 15]
Test Case: 269 | Input/Output: [(57 37 38 83) 37]
Test Case: 270 | Input/Output: [(99 8 93 61) 8]
Test Case: 271 | Input/Output: [(8 40 64 44) 8]
Test Case: 272 | Input/Output: [(55 22 4 11) 4]
Test Case: 273 | Input/Output: [(81 16 67 6) 6]
Test Case: 274 | Input/Output: [(71 11 35 44) 11]
Test Case: 275 | Input/Output: [(44 39 18 35) 18]
Test Case: 276 | Input/Output: [(7 24 68 57) 7]
Test Case: 277 | Input/Output: [(1 45 4 95) 1]
Test Case: 278 | Input/Output: [(57 80 100 66) 57]
Test Case: 279 | Input/Output: [(37 25 19 51) 19]
Test Case: 280 | Input/Output: [(66 52 34 62) 34]
Test Case: 281 | Input/Output: [(29 7 69 46) 7]
Test Case: 282 | Input/Output: [(4 59 8 38) 4]
Test Case: 283 | Input/Output: [(19 60 27 61) 19]
Test Case: 284 | Input/Output: [(89 67 36 20) 20]
Test Case: 285 | Input/Output: [(59 38 77 87) 38]
Test Case: 286 | Input/Output: [(97 6 73 26) 6]
Test Case: 287 | Input/Output: [(97 24 52 14) 14]
Test Case: 288 | Input/Output: [(52 87 92 21) 21]
Test Case: 289 | Input/Output: [(3 6 85 25) 3]
Test Case: 290 | Input/Output: [(48 58 56 76) 48]
Test Case: 291 | Input/Output: [(2 44 20 53) 2]
Test Case: 292 | Input/Output: [(20 93 71 33) 20]
Test Case: 293 | Input/Output: [(5 8 10 66) 5]
Test Case: 294 | Input/Output: [(41 90 29 4) 4]
Test Case: 295 | Input/Output: [(15 18 84 80) 15]
Test Case: 296 | Input/Output: [(3 78 61 13) 3]
Test Case: 297 | Input/Output: [(9 19 77 77) 9]
Test Case: 298 | Input/Output: [(99 9 79 19) 9]
Test Case: 299 | Input/Output: [(34 67 43 50) 34]
Test Case: 300 | Input/Output: [(20 8 97 21) 8]
Test Case: 301 | Input/Output: [(99 6 61 89) 6]
Test Case: 302 | Input/Output: [(24 84 18 31) 18]
Test Case: 303 | Input/Output: [(37 98 14 95) 14]
Test Case: 304 | Input/Output: [(26 35 67 28) 26]
Test Case: 305 | Input/Output: [(25 64 11 60) 11]
Test Case: 306 | Input/Output: [(57 63 21 6) 6]
Test Case: 307 | Input/Output: [(97 57 49 78) 49]
Test Case: 308 | Input/Output: [(75 55 17 64) 17]
Test Case: 309 | Input/Output: [(46 62 83 10) 10]
Test Case: 310 | Input/Output: [(73 24 28 40) 24]
Test Case: 311 | Input/Output: [(84 91 47 37) 37]
Test Case: 312 | Input/Output: [(4 39 69 84) 4]
Test Case: 313 | Input/Output: [(6 3 65 67) 3]
Test Case: 314 | Input/Output: [(83 59 86 81) 59]
Test Case: 315 | Input/Output: [(37 1 1 44) 1]
Test Case: 316 | Input/Output: [(38 67 70 75) 38]
Test Case: 317 | Input/Output: [(97 29 23 74) 23]
Test Case: 318 | Input/Output: [(1 45 9 34) 1]
Test Case: 319 | Input/Output: [(57 56 36 14) 14]
Test Case: 320 | Input/Output: [(93 100 92 60) 60]
Test Case: 321 | Input/Output: [(0 7 35 67) 0]
Test Case: 322 | Input/Output: [(41 59 77 58) 41]
Test Case: 323 | Input/Output: [(23 55 93 26) 23]
Test Case: 324 | Input/Output: [(85 1 92 56) 1]
Test Case: 325 | Input/Output: [(70 4 71 27) 4]
Test Case: 326 | Input/Output: [(58 31 95 23) 23]
Test Case: 327 | Input/Output: [(22 31 94 36) 22]
Test Case: 328 | Input/Output: [(19 87 51 50) 19]
Test Case: 329 | Input/Output: [(59 86 4 54) 4]
Test Case: 330 | Input/Output: [(67 76 78 0) 0]
Test Case: 331 | Input/Output: [(6 37 74 42) 6]
Test Case: 332 | Input/Output: [(90 66 70 70) 66]
Test Case: 333 | Input/Output: [(91 47 50 70) 47]
Test Case: 334 | Input/Output: [(19 24 26 59) 19]
Test Case: 335 | Input/Output: [(51 27 43 8) 8]
Test Case: 336 | Input/Output: [(60 95 91 63) 60]
Test Case: 337 | Input/Output: [(25 89 37 81) 25]
Test Case: 338 | Input/Output: [(100 98 50 100) 50]
Test Case: 339 | Input/Output: [(2 28 77 56) 2]
Test Case: 340 | Input/Output: [(29 85 73 35) 29]
Test Case: 341 | Input/Output: [(97 100 18 28) 18]
Test Case: 342 | Input/Output: [(82 66 46 99) 46]
Test Case: 343 | Input/Output: [(14 30 17 52) 14]
Test Case: 344 | Input/Output: [(9 18 14 48) 9]
Test Case: 345 | Input/Output: [(75 9 100 10) 9]
Test Case: 346 | Input/Output: [(74 5 22 95) 5]
Test Case: 347 | Input/Output: [(42 45 21 61) 21]
Test Case: 348 | Input/Output: [(51 67 17 76) 17]
Test Case: 349 | Input/Output: [(98 88 80 77) 77]
Test Case: 350 | Input/Output: [(29 38 67 26) 26]
Test Case: 351 | Input/Output: [(50 70 85 22) 22]
Test Case: 352 | Input/Output: [(10 38 48 58) 10]
Test Case: 353 | Input/Output: [(53 84 11 92) 11]
Test Case: 354 | Input/Output: [(30 83 47 92) 30]
Test Case: 355 | Input/Output: [(78 22 29 73) 22]
Test Case: 356 | Input/Output: [(23 95 32 77) 23]
Test Case: 357 | Input/Output: [(60 53 17 28) 17]
Test Case: 358 | Input/Output: [(77 93 97 38) 38]
Test Case: 359 | Input/Output: [(54 73 86 88) 54]
Test Case: 360 | Input/Output: [(51 82 62 12) 12]
Test Case: 361 | Input/Output: [(69 57 55 17) 17]
Test Case: 362 | Input/Output: [(5 58 45 21) 5]
Test Case: 363 | Input/Output: [(89 8 74 54) 8]
Test Case: 364 | Input/Output: [(0 76 46 0) 0]
Test Case: 365 | Input/Output: [(67 97 60 3) 3]
Test Case: 366 | Input/Output: [(79 96 98 11) 11]
Test Case: 367 | Input/Output: [(85 16 90 74) 16]
Test Case: 368 | Input/Output: [(24 23 27 89) 23]
Test Case: 369 | Input/Output: [(59 17 1 91) 1]
Test Case: 370 | Input/Output: [(51 92 36 64) 36]
Test Case: 371 | Input/Output: [(14 54 45 26) 14]
Test Case: 372 | Input/Output: [(39 19 36 16) 16]
Test Case: 373 | Input/Output: [(55 93 64 81) 55]
Test Case: 374 | Input/Output: [(14 90 30 61) 14]
Test Case: 375 | Input/Output: [(43 26 10 54) 10]
Test Case: 376 | Input/Output: [(64 77 26 63) 26]
Test Case: 377 | Input/Output: [(65 46 52 27) 27]
Test Case: 378 | Input/Output: [(49 23 97 59) 23]
Test Case: 379 | Input/Output: [(44 12 95 55) 12]
Test Case: 380 | Input/Output: [(53 39 96 71) 39]
Test Case: 381 | Input/Output: [(52 98 39 63) 39]
Test Case: 382 | Input/Output: [(24 49 28 72) 24]
Test Case: 383 | Input/Output: [(74 41 47 17) 17]
Test Case: 384 | Input/Output: [(59 11 95 31) 11]
Test Case: 385 | Input/Output: [(84 85 84 96) 84]
Test Case: 386 | Input/Output: [(88 62 6 54) 6]
Test Case: 387 | Input/Output: [(73 87 67 65) 65]
Test Case: 388 | Input/Output: [(48 69 66 93) 48]
Test Case: 389 | Input/Output: [(10 96 27 36) 10]
Test Case: 390 | Input/Output: [(26 19 18 6) 6]
Test Case: 391 | Input/Output: [(32 70 81 94) 32]
Test Case: 392 | Input/Output: [(72 15 13 71) 13]
Test Case: 393 | Input/Output: [(51 73 25 73) 25]
Test Case: 394 | Input/Output: [(92 22 39 40) 22]
Test Case: 395 | Input/Output: [(27 91 17 22) 17]
Test Case: 396 | Input/Output: [(16 39 55 83) 16]
Test Case: 397 | Input/Output: [(59 77 86 17) 17]
Test Case: 398 | Input/Output: [(64 56 47 79) 47]
Test Case: 399 | Input/Output: [(44 76 65 51) 44]
Test Case: 400 | Input/Output: [(47 -23 -31 42) -31]
Test Case: 401 | Input/Output: [(8 -83 38 -76) -83]
Test Case: 402 | Input/Output: [(6 -40 -85 99) -85]
Test Case: 403 | Input/Output: [(-46 73 31 83) -46]
Test Case: 404 | Input/Output: [(90 24 28 -24) -24]
Test Case: 405 | Input/Output: [(-36 13 -12 -25) -36]
Test Case: 406 | Input/Output: [(-55 -12 44 14) -55]
Test Case: 407 | Input/Output: [(54 -78 75 22) -78]
Test Case: 408 | Input/Output: [(71 31 -52 -27) -52]
Test Case: 409 | Input/Output: [(-36 26 -82 28) -82]
Test Case: 410 | Input/Output: [(74 -76 98 83) -76]
Test Case: 411 | Input/Output: [(96 -36 -43 -76) -76]
Test Case: 412 | Input/Output: [(-31 -60 54 10) -60]
Test Case: 413 | Input/Output: [(-47 84 -94 21) -94]
Test Case: 414 | Input/Output: [(94 94 -58 -1) -58]
Test Case: 415 | Input/Output: [(39 -85 67 31) -85]
Test Case: 416 | Input/Output: [(-59 -97 37 98) -97]
Test Case: 417 | Input/Output: [(70 -46 -3 9) -46]
Test Case: 418 | Input/Output: [(-84 -85 29 -48) -85]
Test Case: 419 | Input/Output: [(38 23 -72 -53) -72]
Test Case: 420 | Input/Output: [(3 79 -58 82) -58]
Test Case: 421 | Input/Output: [(42 -82 -74 36) -82]
Test Case: 422 | Input/Output: [(-89 -77 -21 4) -89]
Test Case: 423 | Input/Output: [(47 27 -47 -99) -99]
Test Case: 424 | Input/Output: [(53 19 -1 -6) -6]
Test Case: 425 | Input/Output: [(-57 -39 32 -35) -57]
Test Case: 426 | Input/Output: [(-77 93 -97 -94) -97]
Test Case: 427 | Input/Output: [(11 21 3 -85) -85]
Test Case: 428 | Input/Output: [(71 59 -72 44) -72]
Test Case: 429 | Input/Output: [(-2 22 -81 -100) -100]
Test Case: 430 | Input/Output: [(-3 87 -80 -37) -80]
Test Case: 431 | Input/Output: [(27 17 -100 -86) -100]
Test Case: 432 | Input/Output: [(99 -91 12 -57) -91]
Test Case: 433 | Input/Output: [(37 -97 -40 -58) -97]
Test Case: 434 | Input/Output: [(8 -100 1 8) -100]
Test Case: 435 | Input/Output: [(38 -40 81 -75) -75]
Test Case: 436 | Input/Output: [(-68 -88 69 -69) -88]
Test Case: 437 | Input/Output: [(91 27 -86 -87) -87]
Test Case: 438 | Input/Output: [(23 -80 -96 54) -96]
Test Case: 439 | Input/Output: [(-97 -57 14 -30) -97]
Test Case: 440 | Input/Output: [(66 -96 -1 -98) -98]
Test Case: 441 | Input/Output: [(27 41 18 16) 16]
Test Case: 442 | Input/Output: [(51 -77 10 -26) -77]
Test Case: 443 | Input/Output: [(-37 -28 21 -4) -37]
Test Case: 444 | Input/Output: [(59 -21 -80 0) -80]
Test Case: 445 | Input/Output: [(-8 -48 31 -11) -48]
Test Case: 446 | Input/Output: [(91 99 -84 -76) -84]
Test Case: 447 | Input/Output: [(68 -64 12 -82) -82]
Test Case: 448 | Input/Output: [(91 -73 -94 -38) -94]
Test Case: 449 | Input/Output: [(32 -32 -50 -51) -51]
Test Case: 450 | Input/Output: [(-87 44 100 66) -87]
Test Case: 451 | Input/Output: [(-37 14 10 0) -37]
Test Case: 452 | Input/Output: [(-50 -46 85 79) -50]
Test Case: 453 | Input/Output: [(85 53 78 70) 53]
Test Case: 454 | Input/Output: [(-55 70 91 -35) -55]
Test Case: 455 | Input/Output: [(-51 94 -68 93) -68]
Test Case: 456 | Input/Output: [(99 5 -6 89) -6]
Test Case: 457 | Input/Output: [(-72 -55 -39 -74) -74]
Test Case: 458 | Input/Output: [(-37 -34 3 58) -37]
Test Case: 459 | Input/Output: [(-12 -11 57 -1) -12]
Test Case: 460 | Input/Output: [(-32 -95 59 62) -95]
Test Case: 461 | Input/Output: [(10 -59 17 -22) -59]
Test Case: 462 | Input/Output: [(-86 12 -52 82) -86]
Test Case: 463 | Input/Output: [(-33 84 32 -8) -33]
Test Case: 464 | Input/Output: [(-39 -18 55 -59) -59]
Test Case: 465 | Input/Output: [(47 -17 97 -1) -17]
Test Case: 466 | Input/Output: [(78 -44 -13 35) -44]
Test Case: 467 | Input/Output: [(-65 67 -12 79) -65]
Test Case: 468 | Input/Output: [(-27 77 -28 -54) -54]
Test Case: 469 | Input/Output: [(-96 -66 59 78) -96]
Test Case: 470 | Input/Output: [(-93 38 -49 80) -93]
Test Case: 471 | Input/Output: [(-58 -56 -24 -21) -58]
Test Case: 472 | Input/Output: [(76 24 30 83) 24]
Test Case: 473 | Input/Output: [(9 -75 58 36) -75]
Test Case: 474 | Input/Output: [(1 -7 -32 -34) -34]
Test Case: 475 | Input/Output: [(-88 13 -3 20) -88]
Test Case: 476 | Input/Output: [(-97 -68 11 73) -97]
Test Case: 477 | Input/Output: [(-68 -33 -29 47) -68]
Test Case: 478 | Input/Output: [(-100 -67 52 -57) -100]
Test Case: 479 | Input/Output: [(-27 4 -57 13) -57]
Test Case: 480 | Input/Output: [(41 -21 29 36) -21]
Test Case: 481 | Input/Output: [(43 -19 -14 79) -19]
Test Case: 482 | Input/Output: [(-58 -97 -60 64) -97]
Test Case: 483 | Input/Output: [(-89 -35 15 29) -89]
Test Case: 484 | Input/Output: [(9 82 29 -26) -26]
Test Case: 485 | Input/Output: [(-92 98 -78 93) -92]
Test Case: 486 | Input/Output: [(66 6 -28 -57) -57]
Test Case: 487 | Input/Output: [(-29 -83 -59 -76) -83]
Test Case: 488 | Input/Output: [(7 -70 83 51) -70]
Test Case: 489 | Input/Output: [(49 -95 1 -76) -95]
Test Case: 490 | Input/Output: [(69 -31 7 -98) -98]
Test Case: 491 | Input/Output: [(-32 41 4 -57) -57]
Test Case: 492 | Input/Output: [(94 87 -89 48) -89]
Test Case: 493 | Input/Output: [(-46 95 9 71) -46]
Test Case: 494 | Input/Output: [(-66 71 97 81) -66]
Test Case: 495 | Input/Output: [(-35 -36 -14 -46) -46]
Test Case: 496 | Input/Output: [(2 -62 -99 98) -99]
Test Case: 497 | Input/Output: [(59 35 59 -4) -4]
Test Case: 498 | Input/Output: [(-7 -80 -100 71) -100]
Test Case: 499 | Input/Output: [(70 59 -23 64) -23]
Test Case: 500 | Input/Output: [(55 29 -85 -6) -85]
Test Case: 501 | Input/Output: [(-59 -92 -95 18) -95]
Test Case: 502 | Input/Output: [(-44 -65 -54 23) -65]
Test Case: 503 | Input/Output: [(-61 -54 -64 -99) -99]
Test Case: 504 | Input/Output: [(59 -18 -69 31) -69]
Test Case: 505 | Input/Output: [(52 81 -95 61) -95]
Test Case: 506 | Input/Output: [(-51 66 -67 -33) -67]
Test Case: 507 | Input/Output: [(25 63 -67 -77) -77]
Test Case: 508 | Input/Output: [(-100 46 -51 -24) -100]
Test Case: 509 | Input/Output: [(-38 -17 -54 -26) -54]
Test Case: 510 | Input/Output: [(52 53 -86 91) -86]
Test Case: 511 | Input/Output: [(-36 89 55 53) -36]
Test Case: 512 | Input/Output: [(-70 23 -81 -6) -81]
Test Case: 513 | Input/Output: [(96 -78 18 -62) -78]
Test Case: 514 | Input/Output: [(-44 85 -62 -37) -62]
Test Case: 515 | Input/Output: [(-75 -98 27 53) -98]
Test Case: 516 | Input/Output: [(-1 61 20 -29) -29]
Test Case: 517 | Input/Output: [(-43 -11 -33 -59) -59]
Test Case: 518 | Input/Output: [(64 29 -40 20) -40]
Test Case: 519 | Input/Output: [(-4 5 -91 -52) -91]
Test Case: 520 | Input/Output: [(29 -60 -32 85) -60]
Test Case: 521 | Input/Output: [(75 -60 -63 -54) -63]
Test Case: 522 | Input/Output: [(28 -44 -89 -16) -89]
Test Case: 523 | Input/Output: [(-81 70 32 12) -81]
Test Case: 524 | Input/Output: [(22 51 26 42) 22]
Test Case: 525 | Input/Output: [(32 19 78 -72) -72]
Test Case: 526 | Input/Output: [(-72 67 85 -61) -72]
Test Case: 527 | Input/Output: [(-66 17 100 -25) -66]
Test Case: 528 | Input/Output: [(-89 47 77 -23) -89]
Test Case: 529 | Input/Output: [(-82 -68 17 56) -82]
Test Case: 530 | Input/Output: [(31 15 57 45) 15]
Test Case: 531 | Input/Output: [(71 24 35 -27) -27]
Test Case: 532 | Input/Output: [(6 -69 69 -44) -69]
Test Case: 533 | Input/Output: [(4 -31 -32 26) -32]
Test Case: 534 | Input/Output: [(-10 -69 94 79) -69]
Test Case: 535 | Input/Output: [(-62 -14 -86 -86) -86]
Test Case: 536 | Input/Output: [(20 43 -78 -48) -78]
Test Case: 537 | Input/Output: [(86 14 31 61) 14]
Test Case: 538 | Input/Output: [(-3 -83 47 96) -83]
Test Case: 539 | Input/Output: [(84 -81 -86 10) -86]
Test Case: 540 | Input/Output: [(2 50 15 -39) -39]
Test Case: 541 | Input/Output: [(-69 42 69 -48) -69]
Test Case: 542 | Input/Output: [(75 24 4 -29) -29]
Test Case: 543 | Input/Output: [(59 -29 -40 -63) -63]
Test Case: 544 | Input/Output: [(-67 -38 60 88) -67]
Test Case: 545 | Input/Output: [(-54 -66 87 -12) -66]
Test Case: 546 | Input/Output: [(-2 -29 47 88) -29]
Test Case: 547 | Input/Output: [(-62 -93 83 76) -93]
Test Case: 548 | Input/Output: [(-3 -71 78 -27) -71]
Test Case: 549 | Input/Output: [(-18 -85 48 87) -85]
Test Case: 550 | Input/Output: [(3 83 15 -74) -74]
Test Case: 551 | Input/Output: [(4 89 -9 -2) -9]
Test Case: 552 | Input/Output: [(-93 -76 -14 -35) -93]
Test Case: 553 | Input/Output: [(95 18 89 -1) -1]
Test Case: 554 | Input/Output: [(-53 -24 -12 -97) -97]
Test Case: 555 | Input/Output: [(88 -39 -46 -64) -64]
Test Case: 556 | Input/Output: [(-8 -29 -71 -27) -71]
Test Case: 557 | Input/Output: [(10 41 31 86) 10]
Test Case: 558 | Input/Output: [(-40 -50 78 -31) -50]
Test Case: 559 | Input/Output: [(12 45 -76 -98) -98]
Test Case: 560 | Input/Output: [(-81 -97 97 -30) -97]
Test Case: 561 | Input/Output: [(76 56 7 -26) -26]
Test Case: 562 | Input/Output: [(66 -62 -13 68) -62]
Test Case: 563 | Input/Output: [(72 -48 69 -80) -80]
Test Case: 564 | Input/Output: [(-85 -57 -76 -6) -85]
Test Case: 565 | Input/Output: [(-46 47 15 -7) -46]
Test Case: 566 | Input/Output: [(-42 -34 -70 -29) -70]
Test Case: 567 | Input/Output: [(-24 -82 -2 -23) -82]
Test Case: 568 | Input/Output: [(-75 -68 24 83) -75]
Test Case: 569 | Input/Output: [(10 66 83 66) 10]
Test Case: 570 | Input/Output: [(-85 -60 73 20) -85]
Test Case: 571 | Input/Output: [(23 -82 -45 20) -82]
Test Case: 572 | Input/Output: [(-47 61 95 95) -47]
Test Case: 573 | Input/Output: [(-42 32 67 -2) -42]
Test Case: 574 | Input/Output: [(72 -67 1 -16) -67]
Test Case: 575 | Input/Output: [(-73 -74 -31 58) -74]
Test Case: 576 | Input/Output: [(71 49 -9 -46) -46]
Test Case: 577 | Input/Output: [(-23 86 -71 72) -71]
Test Case: 578 | Input/Output: [(43 -23 -11 -7) -23]
Test Case: 579 | Input/Output: [(-77 -71 -91 38) -91]
Test Case: 580 | Input/Output: [(-64 -3 -41 8) -64]
Test Case: 581 | Input/Output: [(-96 -28 -86 43) -96]
Test Case: 582 | Input/Output: [(-87 49 39 37) -87]
Test Case: 583 | Input/Output: [(-6 -64 48 -46) -64]
Test Case: 584 | Input/Output: [(37 44 -28 88) -28]
Test Case: 585 | Input/Output: [(-30 -12 7 -37) -37]
Test Case: 586 | Input/Output: [(-1 43 65 -82) -82]
Test Case: 587 | Input/Output: [(55 -84 -95 -35) -95]
Test Case: 588 | Input/Output: [(-2 -8 -26 57) -26]
Test Case: 589 | Input/Output: [(33 65 60 -72) -72]
Test Case: 590 | Input/Output: [(80 85 -87 51) -87]
Test Case: 591 | Input/Output: [(37 -84 67 -2) -84]
Test Case: 592 | Input/Output: [(-64 19 -71 37) -71]
Test Case: 593 | Input/Output: [(22 -82 -36 27) -82]
Test Case: 594 | Input/Output: [(-70 2 -8 68) -70]
Test Case: 595 | Input/Output: [(18 -10 20 45) -10]
Test Case: 596 | Input/Output: [(91 64 -91 -63) -91]
Test Case: 597 | Input/Output: [(30 -33 28 52) -33]
Test Case: 598 | Input/Output: [(-89 90 43 -95) -95]
Test Case: 599 | Input/Output: [(54 -28 -24 -82) -82]
Test Case: 600 | Input/Output: [(27 13 96 -56) -56]
Test Case: 601 | Input/Output: [(-99 75 -55 -95) -99]
Test Case: 602 | Input/Output: [(-43 -15 89 -6) -43]
Test Case: 603 | Input/Output: [(43 -72 20 23) -72]
Test Case: 604 | Input/Output: [(-69 -100 -26 -11) -100]
Test Case: 605 | Input/Output: [(47 -61 -36 63) -61]
Test Case: 606 | Input/Output: [(61 71 60 67) 60]
Test Case: 607 | Input/Output: [(-8 -19 -65 -3) -65]
Test Case: 608 | Input/Output: [(-92 -43 -38 99) -92]
Test Case: 609 | Input/Output: [(-80 99 85 8) -80]
Test Case: 610 | Input/Output: [(-36 55 -95 62) -95]
Test Case: 611 | Input/Output: [(41 22 86 80) 22]
Test Case: 612 | Input/Output: [(-8 80 31 -10) -10]
Test Case: 613 | Input/Output: [(87 -39 -6 82) -39]
Test Case: 614 | Input/Output: [(-48 40 -96 53) -96]
Test Case: 615 | Input/Output: [(43 27 11 -6) -6]
Test Case: 616 | Input/Output: [(-11 -26 -86 -86) -86]
Test Case: 617 | Input/Output: [(69 -65 38 -15) -65]
Test Case: 618 | Input/Output: [(-90 -53 80 -72) -90]
Test Case: 619 | Input/Output: [(30 -12 -85 -70) -85]
Test Case: 620 | Input/Output: [(-83 -32 48 12) -83]
Test Case: 621 | Input/Output: [(73 8 -51 -49) -51]
Test Case: 622 | Input/Output: [(21 78 -31 -28) -31]
Test Case: 623 | Input/Output: [(84 18 -86 16) -86]
Test Case: 624 | Input/Output: [(-39 -44 13 -65) -65]
Test Case: 625 | Input/Output: [(-24 32 79 -65) -65]
Test Case: 626 | Input/Output: [(-37 26 -6 -71) -71]
Test Case: 627 | Input/Output: [(60 -33 89 86) -33]
Test Case: 628 | Input/Output: [(98 -62 13 -10) -62]
Test Case: 629 | Input/Output: [(44 -37 -74 -81) -81]
Test Case: 630 | Input/Output: [(88 -11 -89 -78) -89]
Test Case: 631 | Input/Output: [(-82 -42 0 -90) -90]
Test Case: 632 | Input/Output: [(10 -37 -41 44) -41]
Test Case: 633 | Input/Output: [(-26 -37 -12 -68) -68]
Test Case: 634 | Input/Output: [(-6 -12 26 36) -12]
Test Case: 635 | Input/Output: [(64 -90 91 -56) -90]
Test Case: 636 | Input/Output: [(78 64 -13 65) -13]
Test Case: 637 | Input/Output: [(79 49 -5 78) -5]
Test Case: 638 | Input/Output: [(73 55 3 -85) -85]
Test Case: 639 | Input/Output: [(-86 -24 -75 96) -86]
Test Case: 640 | Input/Output: [(23 53 73 69) 23]
Test Case: 641 | Input/Output: [(74 100 -98 51) -98]
Test Case: 642 | Input/Output: [(-75 52 -21 -65) -75]
Test Case: 643 | Input/Output: [(34 -93 58 -11) -93]
Test Case: 644 | Input/Output: [(8 33 100 -57) -57]
Test Case: 645 | Input/Output: [(74 -68 -41 -3) -68]
Test Case: 646 | Input/Output: [(-55 78 3 72) -55]
Test Case: 647 | Input/Output: [(-32 28 -7 1) -32]
Test Case: 648 | Input/Output: [(-1 19 -49 69) -49]
Test Case: 649 | Input/Output: [(-13 70 -57 30) -57]
Test Case: 650 | Input/Output: [(28 -73 33 -90) -90]
Test Case: 651 | Input/Output: [(12 44 -34 -100) -100]
Test Case: 652 | Input/Output: [(18 89 -8 7) -8]
Test Case: 653 | Input/Output: [(92 14 31 -94) -94]
Test Case: 654 | Input/Output: [(-36 -11 -9 -91) -91]
Test Case: 655 | Input/Output: [(-53 34 64 -4) -53]
Test Case: 656 | Input/Output: [(84 64 0 50) 0]
Test Case: 657 | Input/Output: [(42 -47 -49 -15) -49]
Test Case: 658 | Input/Output: [(100 -49 57 47) -49]
Test Case: 659 | Input/Output: [(84 -4 1 39) -4]
Test Case: 660 | Input/Output: [(19 32 -43 91) -43]
Test Case: 661 | Input/Output: [(-6 -36 -95 -45) -95]
Test Case: 662 | Input/Output: [(60 89 -56 -38) -56]
Test Case: 663 | Input/Output: [(-59 87 -42 33) -59]
Test Case: 664 | Input/Output: [(-67 30 -34 -50) -67]
Test Case: 665 | Input/Output: [(21 -39 44 1) -39]
Test Case: 666 | Input/Output: [(-4 -88 -64 -33) -88]
Test Case: 667 | Input/Output: [(74 -84 -66 -16) -84]
Test Case: 668 | Input/Output: [(-92 78 75 71) -92]
Test Case: 669 | Input/Output: [(59 -85 -97 80) -97]
Test Case: 670 | Input/Output: [(29 -34 49 -91) -91]
Test Case: 671 | Input/Output: [(81 -21 24 -88) -88]
Test Case: 672 | Input/Output: [(74 97 -82 -81) -82]
Test Case: 673 | Input/Output: [(73 50 90 99) 50]
Test Case: 674 | Input/Output: [(38 -12 -80 -44) -80]
Test Case: 675 | Input/Output: [(60 -86 67 60) -86]
Test Case: 676 | Input/Output: [(39 34 48 25) 25]
Test Case: 677 | Input/Output: [(47 -76 46 -63) -76]
Test Case: 678 | Input/Output: [(-79 8 -46 -14) -79]
Test Case: 679 | Input/Output: [(52 -50 -68 -75) -75]
Test Case: 680 | Input/Output: [(-60 28 -24 74) -60]
Test Case: 681 | Input/Output: [(80 -3 -29 -46) -46]
Test Case: 682 | Input/Output: [(-64 33 66 75) -64]
Test Case: 683 | Input/Output: [(-37 -10 -37 97) -37]
Test Case: 684 | Input/Output: [(-19 -20 20 80) -20]
Test Case: 685 | Input/Output: [(44 7 64 19) 7]
Test Case: 686 | Input/Output: [(-87 -67 -97 -7) -97]
Test Case: 687 | Input/Output: [(-90 -20 -56 94) -90]
Test Case: 688 | Input/Output: [(64 -98 60 96) -98]
Test Case: 689 | Input/Output: [(-80 41 43 54) -80]
Test Case: 690 | Input/Output: [(70 61 43 29) 29]
Test Case: 691 | Input/Output: [(95 25 33 64) 25]
Test Case: 692 | Input/Output: [(-75 92 74 97) -75]
Test Case: 693 | Input/Output: [(-60 -58 -34 83) -60]
Test Case: 694 | Input/Output: [(-64 -48 -50 85) -64]
Test Case: 695 | Input/Output: [(-87 -30 72 -76) -87]
Test Case: 696 | Input/Output: [(27 -77 6 37) -77]
Test Case: 697 | Input/Output: [(39 23 -74 -27) -74]
Test Case: 698 | Input/Output: [(-8 -70 71 -14) -70]
Test Case: 699 | Input/Output: [(63 20 76 -79) -79]
Test Case: 700 | Input/Output: [(10 75 62 87) 10]
Test Case: 701 | Input/Output: [(54 40 89 -33) -33]
Test Case: 702 | Input/Output: [(0 0 -86 54) -86]
Test Case: 703 | Input/Output: [(-4 20 -44 15) -44]
Test Case: 704 | Input/Output: [(-25 53 -2 59) -25]
Test Case: 705 | Input/Output: [(94 15 -52 -52) -52]
Test Case: 706 | Input/Output: [(-42 -80 -88 82) -88]
Test Case: 707 | Input/Output: [(38 42 -76 41) -76]
Test Case: 708 | Input/Output: [(98 -94 -17 53) -94]
Test Case: 709 | Input/Output: [(-33 -69 98 -47) -69]
Test Case: 710 | Input/Output: [(-31 56 -52 4) -52]
Test Case: 711 | Input/Output: [(64 -30 -43 51) -43]
Test Case: 712 | Input/Output: [(67 87 84 78) 67]
Test Case: 713 | Input/Output: [(-81 -21 -56 76) -81]
Test Case: 714 | Input/Output: [(90 -98 -98 -57) -98]
Test Case: 715 | Input/Output: [(33 71 72 31) 31]
Test Case: 716 | Input/Output: [(81 -59 -9 -7) -59]
Test Case: 717 | Input/Output: [(5 65 35 13) 5]
Test Case: 718 | Input/Output: [(33 66 -15 10) -15]
Test Case: 719 | Input/Output: [(-35 -22 54 48) -35]
Test Case: 720 | Input/Output: [(53 29 69 -51) -51]
Test Case: 721 | Input/Output: [(81 78 9 -62) -62]
Test Case: 722 | Input/Output: [(-28 -16 70 70) -28]
Test Case: 723 | Input/Output: [(23 -41 67 -73) -73]
Test Case: 724 | Input/Output: [(30 -88 -85 2) -88]
Test Case: 725 | Input/Output: [(77 -35 87 -74) -74]
Test Case: 726 | Input/Output: [(-11 29 -14 -46) -46]
Test Case: 727 | Input/Output: [(4 29 65 29) 4]
Test Case: 728 | Input/Output: [(-45 -88 -12 21) -88]
Test Case: 729 | Input/Output: [(-13 63 -83 30) -83]
Test Case: 730 | Input/Output: [(20 -83 73 25) -83]
Test Case: 731 | Input/Output: [(53 -11 86 -2) -11]
Test Case: 732 | Input/Output: [(-64 1 11 -55) -64]
Test Case: 733 | Input/Output: [(22 -55 61 55) -55]
Test Case: 734 | Input/Output: [(86 8 12 58) 8]
Test Case: 735 | Input/Output: [(-55 59 -86 -17) -86]
Test Case: 736 | Input/Output: [(-74 -99 -33 -77) -99]
Test Case: 737 | Input/Output: [(21 -61 65 -19) -61]
Test Case: 738 | Input/Output: [(67 75 -78 48) -78]
Test Case: 739 | Input/Output: [(65 49 -53 -96) -96]
Test Case: 740 | Input/Output: [(80 16 30 43) 16]
Test Case: 741 | Input/Output: [(-28 -13 70 -51) -51]
Test Case: 742 | Input/Output: [(-78 -83 -2 13) -83]
Test Case: 743 | Input/Output: [(-50 -82 78 84) -82]
Test Case: 744 | Input/Output: [(-32 98 -20 -45) -45]
Test Case: 745 | Input/Output: [(88 -49 35 -5) -49]
Test Case: 746 | Input/Output: [(44 30 31 15) 15]
Test Case: 747 | Input/Output: [(-44 1 -24 -74) -74]
Test Case: 748 | Input/Output: [(-67 40 -2 22) -67]
Test Case: 749 | Input/Output: [(78 93 -37 -20) -37]
Test Case: 750 | Input/Output: [(23 -74 -68 89) -74]
Test Case: 751 | Input/Output: [(-35 33 58 -2) -35]
Test Case: 752 | Input/Output: [(85 -25 30 100) -25]
Test Case: 753 | Input/Output: [(17 -59 -54 24) -59]
Test Case: 754 | Input/Output: [(-89 -42 -7 -20) -89]
Test Case: 755 | Input/Output: [(35 -69 76 -39) -69]
Test Case: 756 | Input/Output: [(52 55 -30 -32) -32]
Test Case: 757 | Input/Output: [(-23 -45 87 -92) -92]
Test Case: 758 | Input/Output: [(-66 29 90 92) -66]
Test Case: 759 | Input/Output: [(-33 -80 -32 -73) -80]
Test Case: 760 | Input/Output: [(24 87 95 -93) -93]
Test Case: 761 | Input/Output: [(-29 67 -54 55) -54]
Test Case: 762 | Input/Output: [(10 9 -54 -48) -54]
Test Case: 763 | Input/Output: [(-88 30 -26 -46) -88]
Test Case: 764 | Input/Output: [(-6 -28 65 97) -28]
Test Case: 765 | Input/Output: [(24 15 -37 52) -37]
Test Case: 766 | Input/Output: [(-1 -48 -80 -93) -93]
Test Case: 767 | Input/Output: [(-77 83 15 -35) -77]
Test Case: 768 | Input/Output: [(-44 50 60 45) -44]
Test Case: 769 | Input/Output: [(7 -43 54 55) -43]
Test Case: 770 | Input/Output: [(75 10 37 -16) -16]
Test Case: 771 | Input/Output: [(-68 7 -71 -6) -71]
Test Case: 772 | Input/Output: [(-48 -10 47 86) -48]
Test Case: 773 | Input/Output: [(-91 42 34 33) -91]
Test Case: 774 | Input/Output: [(24 -45 -86 36) -86]
Test Case: 775 | Input/Output: [(-39 -12 55 -14) -39]
Test Case: 776 | Input/Output: [(-15 92 -62 -18) -62]
Test Case: 777 | Input/Output: [(-13 -83 -84 -81) -84]
Test Case: 778 | Input/Output: [(-51 -81 25 -50) -81]
Test Case: 779 | Input/Output: [(-55 -66 -13 -17) -66]
Test Case: 780 | Input/Output: [(31 -61 97 -87) -87]
Test Case: 781 | Input/Output: [(46 -75 -13 42) -75]
Test Case: 782 | Input/Output: [(31 14 89 33) 14]
Test Case: 783 | Input/Output: [(86 -37 75 -20) -37]
Test Case: 784 | Input/Output: [(40 -36 -86 -42) -86]
Test Case: 785 | Input/Output: [(-41 22 72 -64) -64]
Test Case: 786 | Input/Output: [(13 69 70 -97) -97]
Test Case: 787 | Input/Output: [(81 3 -85 -45) -85]
Test Case: 788 | Input/Output: [(-27 81 19 -9) -27]
Test Case: 789 | Input/Output: [(-52 16 -63 -34) -63]
Test Case: 790 | Input/Output: [(74 -75 76 -42) -75]
Test Case: 791 | Input/Output: [(82 58 -21 12) -21]
Test Case: 792 | Input/Output: [(31 6 97 -61) -61]
Test Case: 793 | Input/Output: [(50 31 -80 31) -80]
Test Case: 794 | Input/Output: [(-5 40 95 3) -5]
Test Case: 795 | Input/Output: [(-36 41 23 -99) -99]
Test Case: 796 | Input/Output: [(-58 -42 -66 13) -66]
Test Case: 797 | Input/Output: [(82 -41 56 61) -41]
Test Case: 798 | Input/Output: [(-23 -13 -37 -2) -37]
Test Case: 799 | Input/Output: [(37 96 -88 -2) -88]
Test Case: 800 | Input/Output: [(-67 -13 -87 -33) -87]
Test Case: 801 | Input/Output: [(-43 21 86 24) -43]
Test Case: 802 | Input/Output: [(-76 49 -27 96) -76]
Test Case: 803 | Input/Output: [(9 -71 -5 11) -71]
Test Case: 804 | Input/Output: [(-16 -65 56 -45) -65]
Test Case: 805 | Input/Output: [(-58 79 45 -89) -89]
Test Case: 806 | Input/Output: [(9 -80 25 -17) -80]
Test Case: 807 | Input/Output: [(26 36 85 -36) -36]
Test Case: 808 | Input/Output: [(-73 -21 23 73) -73]
Test Case: 809 | Input/Output: [(50 -66 -97 5) -97]
Test Case: 810 | Input/Output: [(-32 44 13 65) -32]
Test Case: 811 | Input/Output: [(-18 42 -11 -34) -34]
Test Case: 812 | Input/Output: [(-78 -60 6 -14) -78]
Test Case: 813 | Input/Output: [(38 -90 68 -98) -98]
Test Case: 814 | Input/Output: [(-8 97 68 -66) -66]
Test Case: 815 | Input/Output: [(-71 -93 35 6) -93]
Test Case: 816 | Input/Output: [(66 -66 -50 27) -66]
Test Case: 817 | Input/Output: [(93 36 37 24) 24]
Test Case: 818 | Input/Output: [(0 38 56 -28) -28]
Test Case: 819 | Input/Output: [(-23 14 -20 -14) -23]
Test Case: 820 | Input/Output: [(-46 -55 -80 50) -80]
Test Case: 821 | Input/Output: [(4 -14 -15 -15) -15]
Test Case: 822 | Input/Output: [(-21 -83 -40 -23) -83]
Test Case: 823 | Input/Output: [(99 -2 79 -33) -33]
Test Case: 824 | Input/Output: [(52 22 45 -39) -39]
Test Case: 825 | Input/Output: [(89 -29 -47 47) -47]
Test Case: 826 | Input/Output: [(94 97 57 27) 27]
Test Case: 827 | Input/Output: [(89 -64 -39 63) -64]
Test Case: 828 | Input/Output: [(-55 46 70 26) -55]
Test Case: 829 | Input/Output: [(100 -36 98 -86) -86]
Test Case: 830 | Input/Output: [(-51 85 -44 -84) -84]
Test Case: 831 | Input/Output: [(62 97 26 -32) -32]
Test Case: 832 | Input/Output: [(-14 76 -51 75) -51]
Test Case: 833 | Input/Output: [(74 86 44 -55) -55]
Test Case: 834 | Input/Output: [(55 -9 -99 29) -99]
Test Case: 835 | Input/Output: [(-38 -8 -77 -12) -77]
Test Case: 836 | Input/Output: [(-14 -48 -43 -54) -54]
Test Case: 837 | Input/Output: [(88 45 -36 -99) -99]
Test Case: 838 | Input/Output: [(81 14 -47 80) -47]
Test Case: 839 | Input/Output: [(18 34 95 42) 18]
Test Case: 840 | Input/Output: [(40 19 75 -46) -46]
Test Case: 841 | Input/Output: [(-19 82 78 16) -19]
Test Case: 842 | Input/Output: [(92 23 -43 90) -43]
Test Case: 843 | Input/Output: [(-23 -30 -61 -90) -90]
Test Case: 844 | Input/Output: [(46 12 92 -65) -65]
Test Case: 845 | Input/Output: [(-34 74 5 78) -34]
Test Case: 846 | Input/Output: [(69 35 34 -51) -51]
Test Case: 847 | Input/Output: [(1 -45 41 -77) -77]
Test Case: 848 | Input/Output: [(9 -12 -46 14) -46]
Test Case: 849 | Input/Output: [(24 -58 -86 90) -86]
Test Case: 850 | Input/Output: [(-3 60 81 62) -3]
Test Case: 851 | Input/Output: [(-3 -89 -21 89) -89]
Test Case: 852 | Input/Output: [(-7 6 -19 14) -19]
Test Case: 853 | Input/Output: [(-16 -78 -81 -62) -81]
Test Case: 854 | Input/Output: [(-41 -74 -16 61) -74]
Test Case: 855 | Input/Output: [(3 -43 46 -34) -43]
Test Case: 856 | Input/Output: [(-8 25 -9 57) -9]
Test Case: 857 | Input/Output: [(-9 97 72 -29) -29]
Test Case: 858 | Input/Output: [(89 -44 88 63) -44]
Test Case: 859 | Input/Output: [(-49 -32 -8 -3) -49]
Test Case: 860 | Input/Output: [(-26 -6 83 31) -26]
Test Case: 861 | Input/Output: [(74 -36 -13 98) -36]
Test Case: 862 | Input/Output: [(-62 5 47 -16) -62]
Test Case: 863 | Input/Output: [(-74 -50 50 81) -74]
Test Case: 864 | Input/Output: [(83 38 21 -91) -91]
Test Case: 865 | Input/Output: [(-34 -24 -89 11) -89]
Test Case: 866 | Input/Output: [(-46 47 49 59) -46]
Test Case: 867 | Input/Output: [(87 60 -23 -53) -53]
Test Case: 868 | Input/Output: [(8 15 -14 50) -14]
Test Case: 869 | Input/Output: [(74 -8 -85 -33) -85]
Test Case: 870 | Input/Output: [(68 -78 -50 29) -78]
Test Case: 871 | Input/Output: [(-76 -59 64 28) -76]
Test Case: 872 | Input/Output: [(94 -61 97 -45) -61]
Test Case: 873 | Input/Output: [(21 9 6 1) 1]
Test Case: 874 | Input/Output: [(21 93 -74 19) -74]
Test Case: 875 | Input/Output: [(-67 -25 -31 -92) -92]
Test Case: 876 | Input/Output: [(-77 81 -61 65) -77]
Test Case: 877 | Input/Output: [(82 35 -86 -39) -86]
Test Case: 878 | Input/Output: [(17 -75 77 41) -75]
Test Case: 879 | Input/Output: [(-95 -49 -35 38) -95]
Test Case: 880 | Input/Output: [(-70 -86 56 6) -86]
Test Case: 881 | Input/Output: [(18 -30 -96 -86) -96]
Test Case: 882 | Input/Output: [(47 -80 -26 -52) -80]
Test Case: 883 | Input/Output: [(16 -2 9 -65) -65]
Test Case: 884 | Input/Output: [(-88 -85 -41 22) -88]
Test Case: 885 | Input/Output: [(-8 -51 -78 55) -78]
Test Case: 886 | Input/Output: [(93 -83 79 -22) -83]
Test Case: 887 | Input/Output: [(43 -89 38 -44) -89]
Test Case: 888 | Input/Output: [(-43 90 1 -25) -43]
Test Case: 889 | Input/Output: [(-3 98 -81 -52) -81]
Test Case: 890 | Input/Output: [(19 -5 -20 -64) -64]
Test Case: 891 | Input/Output: [(43 60 -10 -49) -49]
Test Case: 892 | Input/Output: [(-12 0 58 -92) -92]
Test Case: 893 | Input/Output: [(-54 57 81 97) -54]
Test Case: 894 | Input/Output: [(84 -30 -47 27) -47]
Test Case: 895 | Input/Output: [(92 -75 -55 -21) -75]
Test Case: 896 | Input/Output: [(-67 -51 -54 98) -67]
Test Case: 897 | Input/Output: [(42 -38 41 79) -38]
Test Case: 898 | Input/Output: [(-19 4 75 79) -19]
Test Case: 899 | Input/Output: [(-45 -63 -32 -33) -63]
Test Case: 900 | Input/Output: [(-67 37 -2 -51) -67]
Test Case: 901 | Input/Output: [(-9 -19 2 64) -19]
Test Case: 902 | Input/Output: [(-84 -86 51 53) -86]
Test Case: 903 | Input/Output: [(-45 -89 57 -98) -98]
Test Case: 904 | Input/Output: [(11 2 -23 -70) -70]
Test Case: 905 | Input/Output: [(-39 -87 -95 -1) -95]
Test Case: 906 | Input/Output: [(86 10 -90 -72) -90]
Test Case: 907 | Input/Output: [(-54 99 -67 63) -67]
Test Case: 908 | Input/Output: [(75 29 92 80) 29]
Test Case: 909 | Input/Output: [(-31 100 -42 -83) -83]
Test Case: 910 | Input/Output: [(-16 -66 -21 54) -66]
Test Case: 911 | Input/Output: [(11 58 -29 -79) -79]
Test Case: 912 | Input/Output: [(-4 5 -93 69) -93]
Test Case: 913 | Input/Output: [(36 -80 30 -39) -80]
Test Case: 914 | Input/Output: [(-6 97 3 96) -6]
Test Case: 915 | Input/Output: [(88 -40 -41 42) -41]
Test Case: 916 | Input/Output: [(46 -71 21 24) -71]
Test Case: 917 | Input/Output: [(5 79 -88 -100) -100]
Test Case: 918 | Input/Output: [(-57 62 41 17) -57]
Test Case: 919 | Input/Output: [(25 -52 -25 -88) -88]
Test Case: 920 | Input/Output: [(7 12 8 57) 7]
Test Case: 921 | Input/Output: [(64 -47 -27 -46) -47]
Test Case: 922 | Input/Output: [(-88 99 -42 -44) -88]
Test Case: 923 | Input/Output: [(67 75 -56 -56) -56]
Test Case: 924 | Input/Output: [(-90 92 -29 -5) -90]
Test Case: 925 | Input/Output: [(69 42 72 27) 27]
Test Case: 926 | Input/Output: [(-12 46 66 -87) -87]
Test Case: 927 | Input/Output: [(-87 -57 -20 54) -87]
Test Case: 928 | Input/Output: [(-86 58 46 -74) -86]
Test Case: 929 | Input/Output: [(52 -81 -11 -22) -81]
Test Case: 930 | Input/Output: [(-69 80 89 -61) -69]
Test Case: 931 | Input/Output: [(96 46 88 88) 46]
Test Case: 932 | Input/Output: [(-2 38 -48 10) -48]
Test Case: 933 | Input/Output: [(-31 74 -46 -67) -67]
Test Case: 934 | Input/Output: [(-52 87 13 64) -52]
Test Case: 935 | Input/Output: [(-5 48 15 -90) -90]
Test Case: 936 | Input/Output: [(-27 59 -83 50) -83]
Test Case: 937 | Input/Output: [(13 -58 -44 -1) -58]
Test Case: 938 | Input/Output: [(-32 78 42 79) -32]
Test Case: 939 | Input/Output: [(61 38 -19 22) -19]
Test Case: 940 | Input/Output: [(-65 -10 -41 -29) -65]
Test Case: 941 | Input/Output: [(-38 51 22 24) -38]
Test Case: 942 | Input/Output: [(-11 2 -6 -68) -68]
Test Case: 943 | Input/Output: [(33 12 -30 -73) -73]
Test Case: 944 | Input/Output: [(-67 61 31 -22) -67]
Test Case: 945 | Input/Output: [(-60 69 -17 -63) -63]
Test Case: 946 | Input/Output: [(61 -60 69 -61) -61]
Test Case: 947 | Input/Output: [(-88 87 57 -51) -88]
Test Case: 948 | Input/Output: [(63 42 88 -62) -62]
Test Case: 949 | Input/Output: [(-33 -38 -99 -1) -99]
Test Case: 950 | Input/Output: [(59 -61 31 -14) -61]
Test Case: 951 | Input/Output: [(82 66 5 45) 5]
Test Case: 952 | Input/Output: [(95 -16 75 2) -16]
Test Case: 953 | Input/Output: [(99 54 86 69) 54]
Test Case: 954 | Input/Output: [(-60 18 -83 53) -83]
Test Case: 955 | Input/Output: [(95 83 31 28) 28]
Test Case: 956 | Input/Output: [(-34 15 11 68) -34]
Test Case: 957 | Input/Output: [(48 45 59 -1) -1]
Test Case: 958 | Input/Output: [(11 30 47 4) 4]
Test Case: 959 | Input/Output: [(-3 30 45 -79) -79]
Test Case: 960 | Input/Output: [(-24 -15 71 22) -24]
Test Case: 961 | Input/Output: [(-92 54 8 -36) -92]
Test Case: 962 | Input/Output: [(-48 84 33 -40) -48]
Test Case: 963 | Input/Output: [(-87 -24 80 -45) -87]
Test Case: 964 | Input/Output: [(-87 -80 17 51) -87]
Test Case: 965 | Input/Output: [(-30 -95 -77 -11) -95]
Test Case: 966 | Input/Output: [(-85 -75 61 -88) -88]
Test Case: 967 | Input/Output: [(-78 73 -2 -60) -78]
Test Case: 968 | Input/Output: [(-19 66 -63 62) -63]
Test Case: 969 | Input/Output: [(11 -50 -85 -34) -85]
Test Case: 970 | Input/Output: [(-63 -78 -67 62) -78]
Test Case: 971 | Input/Output: [(15 -80 -32 37) -80]
Test Case: 972 | Input/Output: [(67 -94 86 -79) -94]
Test Case: 973 | Input/Output: [(-42 18 -40 1) -42]
Test Case: 974 | Input/Output: [(-73 16 -17 28) -73]
Test Case: 975 | Input/Output: [(-45 75 63 -19) -45]
Test Case: 976 | Input/Output: [(6 -62 -77 44) -77]
Test Case: 977 | Input/Output: [(38 -3 -43 70) -43]
Test Case: 978 | Input/Output: [(-65 -12 58 -20) -65]
Test Case: 979 | Input/Output: [(-76 98 -61 -91) -91]
Test Case: 980 | Input/Output: [(-71 5 -78 98) -78]
Test Case: 981 | Input/Output: [(-35 50 -83 -69) -83]
Test Case: 982 | Input/Output: [(-86 66 -13 -23) -86]
Test Case: 983 | Input/Output: [(7 -84 -15 27) -84]
Test Case: 984 | Input/Output: [(-82 35 83 -3) -82]
Test Case: 985 | Input/Output: [(-71 36 20 -47) -71]
Test Case: 986 | Input/Output: [(-82 82 11 93) -82]
Test Case: 987 | Input/Output: [(-84 54 -53 -24) -84]
Test Case: 988 | Input/Output: [(-58 -74 -87 -38) -87]
Test Case: 989 | Input/Output: [(15 91 4 -62) -62]
Test Case: 990 | Input/Output: [(-95 15 -77 -21) -95]
Test Case: 991 | Input/Output: [(28 -69 -94 -71) -94]
Test Case: 992 | Input/Output: [(58 -25 -17 69) -25]
Test Case: 993 | Input/Output: [(-29 38 30 49) -29]
Test Case: 994 | Input/Output: [(-31 -59 27 30) -59]
Test Case: 995 | Input/Output: [(-74 -32 -95 34) -95]
Test Case: 996 | Input/Output: [(38 78 -93 -67) -93]
Test Case: 997 | Input/Output: [(-79 47 -63 6) -79]
Test Case: 998 | Input/Output: [(-44 35 84 87) -44]
Test Case: 999 | Input/Output: [(-38 -92 -62 22) -92]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = 110 48 -83 80 55 123 16 -74 -17 68 -112 80 -119 -124 -16 97
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-21 -21 41 -21] -21] [[7 7 7 -100] -100] [[-86 88 88 88] -86] [[-97 -12 -12 -12] -97] [[51 51 51 39] 39] [[-75 -21 -21 -21] -75] [[-19 -61 -19 -19] -61] [[16 16 16 -23] -23] [[-45 -31 -45 -45] -45] [[19 -47 19 19] -47] [(57 57 57 57) 57] [(10 10 10 10) 10] [(95 95 95 95) 95] [(-54 -54 -54 -54) -54] [(20 20 20 20) 20] [(91 25 14 62) 14] [(81 8 14 82) 8] [(14 71 88 32) 14] [(67 15 98 34) 15] [(18 92 90 6) 6] [(44 35 61 79) 35] [(75 24 27 91) 24] [(66 99 35 49) 35] [(73 41 72 70) 41] [(30 0 66 11) 0] [(16 57 83 8) 8] [(8 4 79 18) 4] [(29 14 63 63) 14] [(85 17 0 94) 0] [(66 34 8 88) 8] [(37 44 81 32) 32] [(0 64 69 8) 0] [(4 62 9 71) 4] [(14 13 30 78) 13] [(97 2 95 0) 0] [(-75 -65 -6 8) -75] [(-43 -52 45 -13) -52] [(30 -50 -95 25) -95] [(35 79 18 -26) -26] [(-54 100 60 46) -54] [(86 -31 -66 67) -66] [(47 96 -73 93) -73] [(80 38 57 -47) -47] [(47 -1 79 -98) -98] [(69 -90 -24 30) -90] [(68 80 14 -92) -92] [(-10 -89 -99 7) -99] [(-26 -84 43 -57) -84] [(52 67 -26 5) -26] [(-6 90 50 -57) -57] [(60 40 -16 71) -16] [(59 -43 84 -81) -81] [(58 -45 57 83) -45] [(-67 84 -78 60) -78] [(-61 91 -82 35) -82] [(-78 -98 99 -77) -98] [(63 67 -30 -43) -43] [(-74 52 94 30) -74] [(47 43 22 -61) -61] [(-22 64 -77 46) -77] [(78 73 94 23) 23] [(-98 -79 47 73) -98] [(-15 94 -27 96) -27] [(57 -63 -9 58) -63] [(-83 56 17 -90) -90] [(16 21 95 40) 16] [(-54 84 -86 -86) -86] [(-12 74 -61 -46) -61] [(-33 26 -78 53) -78] [(-23 64 -10 60) -23] [(24 -76 -7 28) -76] [(-65 85 -71 48) -71] [(83 -57 88 -31) -57] [(-46 95 82 51) -46] [(35 -97 -79 -87) -97] [(27 72 76 20) 20] [(-20 -47 -69 -16) -69] [(84 -72 -57 20) -72] [(85 73 -78 -57) -78] [(-23 48 -89 67) -89] [(66 -87 98 58) -87] [(-9 5 -59 69) -59] [(-33 65 -83 25) -83] [(-43 21 74 -4) -43] [(35 16 63 55) 16] [(-14 6 91 -4) -14] [(-37 -66 48 90) -66] [(-75 21 55 -52) -75] [(77 -68 89 12) -68] [(6 -55 -54 -41) -55] [(35 78 16 -76) -76] [(-40 -92 75 -80) -92] [(22 -21 -56 -96) -96] [(-3 39 96 -59) -59] [(59 60 -42 -28) -42])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 650
Test mean error for best: 0.65000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: 41                 
Correct output: -100                | Program output: 7                  
Correct output: -86                 | Program output: 88                 
Correct output: -97                 | Program output: -12                
Correct output: 39                  | Program output: 51                 
Correct output: -75                 | Program output: -21                
Correct output: -61                 | Program output: -19                
Correct output: -23                 | Program output: 16                 
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: 19                 
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 14                 
Correct output: 14                  | Program output: 88                 
Correct output: 15                  | Program output: 98                 
Correct output: 6                   | Program output: 90                 
Correct output: 35                  | Program output: 61                 
Correct output: 24                  | Program output: 27                 
Correct output: 35                  | Program output: 35                 
Correct output: 41                  | Program output: 72                 
Correct output: 0                   | Program output: 66                 
Correct output: 8                   | Program output: 83                 
Correct output: 4                   | Program output: 79                 
Correct output: 14                  | Program output: 63                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 81                 
Correct output: 0                   | Program output: 69                 
Correct output: 4                   | Program output: 9                  
Correct output: 13                  | Program output: 30                 
Correct output: 0                   | Program output: 95                 
Correct output: -75                 | Program output: -6                 
Correct output: -52                 | Program output: 45                 
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: 18                 
Correct output: -54                 | Program output: 60                 
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: 57                 
Correct output: -98                 | Program output: 79                 
Correct output: -90                 | Program output: -24                
Correct output: -92                 | Program output: 14                 
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: 43                 
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: 50                 
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: 84                 
Correct output: -45                 | Program output: 57                 
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: 99                 
Correct output: -43                 | Program output: -30                
Correct output: -74                 | Program output: 94                 
Correct output: -61                 | Program output: 22                 
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 94                 
Correct output: -98                 | Program output: 47                 
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -9                 
Correct output: -90                 | Program output: 17                 
Correct output: 16                  | Program output: 95                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -10                
Correct output: -76                 | Program output: -7                 
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: 88                 
Correct output: -46                 | Program output: 82                 
Correct output: -97                 | Program output: -79                
Correct output: 20                  | Program output: 76                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -57                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: 98                 
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: 74                 
Correct output: 16                  | Program output: 63                 
Correct output: -14                 | Program output: 91                 
Correct output: -66                 | Program output: 48                 
Correct output: -75                 | Program output: 55                 
Correct output: -68                 | Program output: 89                 
Correct output: -55                 | Program output: -54                
Correct output: -76                 | Program output: 16                 
Correct output: -92                 | Program output: 75                 
Correct output: -96                 | Program output: -56                
Correct output: -59                 | Program output: 96                 
Correct output: -42                 | Program output: -42                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_and} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_flush} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_flush} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 2, :instruction in1} {:close 0, :instruction exec_swap} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_when} {:close 0, :instruction integer_max} {:close 1, :instruction integer_dup} {:close 1, :instruction integer_max} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_yank} {:close 0, :instruction tagged_520} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_empty} {:close 1, :instruction in3} {:close 0, :instruction tag_integer_809} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_swap})
Lexicase best program: (boolean_xor boolean_invert_second_then_and integer_div boolean_empty boolean_and boolean_empty boolean_stackdepth exec_dup_items integer_flush boolean_invert_second_then_and boolean_stackdepth boolean_flush boolean_xor exec_yankdup print_boolean in1 exec_swap (in3 print_integer integer_inc) (exec_when (integer_max integer_dup) integer_max) exec_flush boolean_not exec_shove (exec_noop integer_empty) boolean_yank tagged_520 boolean_shove in3 exec_shove () exec_dup_items boolean_flush exec_empty in3 tag_integer_809 exec_do*range (exec_do*count (boolean_invert_second_then_and integer_dup_times integer_inc boolean_swap)))
Lexicase best errors: [0 0 1 1 0 1 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 53
Percent parens: 0.151
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_and} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_flush} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_flush} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 2, :instruction in1} {:close 0, :instruction exec_swap} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_when} {:close 0, :instruction integer_max} {:close 1, :instruction integer_dup} {:close 1, :instruction integer_max} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_yank} {:close 0, :instruction tagged_520} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_empty} {:close 1, :instruction in3} {:close 0, :instruction tag_integer_809} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_swap})
Zero cases best program: (boolean_xor boolean_invert_second_then_and integer_div boolean_empty boolean_and boolean_empty boolean_stackdepth exec_dup_items integer_flush boolean_invert_second_then_and boolean_stackdepth boolean_flush boolean_xor exec_yankdup print_boolean in1 exec_swap (in3 print_integer integer_inc) (exec_when (integer_max integer_dup) integer_max) exec_flush boolean_not exec_shove (exec_noop integer_empty) boolean_yank tagged_520 boolean_shove in3 exec_shove () exec_dup_items boolean_flush exec_empty in3 tag_integer_809 exec_do*range (exec_do*count (boolean_invert_second_then_and integer_dup_times integer_inc boolean_swap)))
Zero cases best errors: [0 0 1 1 0 1 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 53
Percent parens: 0.151
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 3 1 4 3 1 10 1 3 5)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (10 3 1 4 3 1 10 1 3 5)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_dup} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_if} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when})
Best program: (exec_dup_times (exec_dup (print_boolean integer_shove boolean_xor boolean_rot) boolean_yank boolean_dup_times exec_if () (in3 print_integer boolean_invert_second_then_and) exec_when ()))
Errors: [0 0 1 1 0 1 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 9.959
Median total errors in population: 10
Error averages by case: (0.99 0.997 0.999 0.996 0.997 0.999 0.99 0.999 0.997 0.995)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 50.4
Average program size in population (points): 69.353
Average percent parens in population: 0.280
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.295
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 483575
--- Timings ---
Current time: 1559594082293 milliseconds
Total Time:           2.6 seconds
Initialization:       0.1 seconds,  4.0%
Reproduction:         0.7 seconds, 28.2%
Fitness Testing:      1.7 seconds, 67.8%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 441
Test mean error for best: 0.44100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: 88                 
Correct output: -97                 | Program output: -12                
Correct output: 39                  | Program output: 39                 
Correct output: -75                 | Program output: -21                
Correct output: -61                 | Program output: -19                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: 19                 
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 14                 
Correct output: 14                  | Program output: 32                 
Correct output: 15                  | Program output: 34                 
Correct output: 6                   | Program output: 6                  
Correct output: 35                  | Program output: 61                 
Correct output: 24                  | Program output: 27                 
Correct output: 35                  | Program output: 35                 
Correct output: 41                  | Program output: 70                 
Correct output: 0                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 18                 
Correct output: 14                  | Program output: 63                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 0                   | Program output: 8                  
Correct output: 4                   | Program output: 9                  
Correct output: 13                  | Program output: 30                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -6                 
Correct output: -52                 | Program output: -13                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output: 46                 
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -98                
Correct output: -90                 | Program output: -24                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: -57                
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: -57                
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: -81                
Correct output: -45                 | Program output: 57                 
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: -77                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: 30                 
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 23                 
Correct output: -98                 | Program output: 47                 
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -9                 
Correct output: -90                 | Program output: -90                
Correct output: 16                  | Program output: 40                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -10                
Correct output: -76                 | Program output: -7                 
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: -31                
Correct output: -46                 | Program output: 51                 
Correct output: -97                 | Program output: -87                
Correct output: 20                  | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -57                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: -4                 
Correct output: 16                  | Program output: 55                 
Correct output: -14                 | Program output: -4                 
Correct output: -66                 | Program output: 48                 
Correct output: -75                 | Program output: -52                
Correct output: -68                 | Program output: 12                 
Correct output: -55                 | Program output: -54                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -80                
Correct output: -96                 | Program output: -96                
Correct output: -59                 | Program output: -59                
Correct output: -42                 | Program output: -42                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Lexicase best program: (integer_inc boolean_flush boolean_flush in1 boolean_stackdepth exec_shove (exec_k_when_autoconstructing () (exec_s (in4) (in3 exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_invert_first_then_and print_integer boolean_stackdepth) exec_do*times ()) () ()) ())))
Lexicase best errors: [0 0 1 0 0 1 0 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 37
Percent parens: 0.351
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Zero cases best program: (integer_inc boolean_flush boolean_flush in1 boolean_stackdepth exec_shove (exec_k_when_autoconstructing () (exec_s (in4) (in3 exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_invert_first_then_and print_integer boolean_stackdepth) exec_do*times ()) () ()) ())))
Zero cases best errors: [0 0 1 0 0 1 0 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 37
Percent parens: 0.351
--- Lexicase Population Statistics ---
Count of elite individuals by case: (92 90 79 92 267 79 263 261 222 78)
Population mean number of elite cases: 1.52
Count of perfect (error zero) individuals by case: (92 90 79 92 267 79 263 261 222 78)
Population mean number of perfect (error zero) cases: 1.52
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Best program: (integer_inc boolean_flush boolean_flush in1 boolean_stackdepth exec_shove (exec_k_when_autoconstructing () (exec_s (in4) (in3 exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_invert_first_then_and print_integer boolean_stackdepth) exec_do*times ()) () ()) ())))
Errors: [0 0 1 0 0 1 0 0 1 0]
Total: 3
Mean: 0.3
Genome size: 24
Size: 37
Percent parens: 0.351
--- Population Statistics ---
Average total errors in population: 8.477
Median total errors in population: 9
Error averages by case: (0.908 0.91 0.921 0.908 0.733 0.921 0.737 0.739 0.778 0.922)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.035
Average program size in population (points): 43.66
Average percent parens in population: 0.259
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 15
Genome diversity (% unique genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.007
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.148
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 849336
--- Timings ---
Current time: 1559594084213 milliseconds
Total Time:           4.4 seconds
Initialization:       0.1 seconds,  2.3%
Reproduction:         1.7 seconds, 38.8%
Fitness Testing:      2.3 seconds, 51.5%
Report:               0.3 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 316
Test mean error for best: 0.31600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -12                
Correct output: 39                  | Program output: 39                 
Correct output: -75                 | Program output: -21                
Correct output: -61                 | Program output: -19                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: 19                 
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 62                 
Correct output: 8                   | Program output: 81                 
Correct output: 14                  | Program output: 14                 
Correct output: 15                  | Program output: 34                 
Correct output: 6                   | Program output: 6                  
Correct output: 35                  | Program output: 44                 
Correct output: 24                  | Program output: 75                 
Correct output: 35                  | Program output: 49                 
Correct output: 41                  | Program output: 70                 
Correct output: 0                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 8                  
Correct output: 14                  | Program output: 29                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 66                 
Correct output: 32                  | Program output: 32                 
Correct output: 0                   | Program output: 0                  
Correct output: 4                   | Program output: 4                  
Correct output: 13                  | Program output: 14                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -6                 
Correct output: -52                 | Program output: -43                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output: -54                
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -98                
Correct output: -90                 | Program output: -24                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: -57                
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: -57                
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: -81                
Correct output: -45                 | Program output: 58                 
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: -78                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: -74                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 23                 
Correct output: -98                 | Program output: -98                
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -9                 
Correct output: -90                 | Program output: -90                
Correct output: 16                  | Program output: 16                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -10                
Correct output: -76                 | Program output: -7                 
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: -31                
Correct output: -46                 | Program output: -46                
Correct output: -97                 | Program output: -87                
Correct output: 20                  | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -57                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: -43                
Correct output: 16                  | Program output: 35                 
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -37                
Correct output: -75                 | Program output: -75                
Correct output: -68                 | Program output: 12                 
Correct output: -55                 | Program output: -54                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -80                
Correct output: -96                 | Program output: -96                
Correct output: -59                 | Program output: -59                
Correct output: -42                 | Program output: -42                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 0, :instruction in2} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Lexicase best program: (integer_inc boolean_flush boolean_flush in1 boolean_stackdepth exec_shove (in2 exec_s (in4) (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_invert_first_then_and print_integer boolean_stackdepth) exec_do*times ()) () ()) ()))
Lexicase best errors: [0 0 1 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 34
Percent parens: 0.324
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 0, :instruction in2} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Zero cases best program: (integer_inc boolean_flush boolean_flush in1 boolean_stackdepth exec_shove (in2 exec_s (in4) (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_invert_first_then_and print_integer boolean_stackdepth) exec_do*times ()) () ()) ()))
Zero cases best errors: [0 0 1 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 34
Percent parens: 0.324
--- Lexicase Population Statistics ---
Count of elite individuals by case: (332 80 545 341 705 329 546 205 80 80)
Population mean number of elite cases: 3.24
Count of perfect (error zero) individuals by case: (332 80 545 341 705 329 546 205 80 80)
Population mean number of perfect (error zero) cases: 3.24
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Best program: (integer_inc boolean_flush boolean_flush in1 boolean_stackdepth exec_shove (exec_k_when_autoconstructing () (exec_s (in4) (in3 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_invert_first_then_and print_integer boolean_stackdepth) exec_do*times ()) () ())) ())))
Errors: [0 1 0 0 0 0 0 0 1 1]
Total: 3
Mean: 0.3
Genome size: 24
Size: 38
Percent parens: 0.368
--- Population Statistics ---
Average total errors in population: 6.757
Median total errors in population: 6
Error averages by case: (0.668 0.92 0.455 0.659 0.295 0.671 0.454 0.795 0.92 0.92)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 24.993
Average program size in population (points): 37.632
Average percent parens in population: 0.335
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 11
Genome diversity (% unique genomes):	 0.976
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.976
Total error diversity:				 0.008
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.132
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1206146
--- Timings ---
Current time: 1559594086313 milliseconds
Total Time:           6.5 seconds
Initialization:       0.1 seconds,  1.6%
Reproduction:         2.9 seconds, 45.4%
Fitness Testing:      2.7 seconds, 41.8%
Report:               0.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 617
Test mean error for best: 0.61700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output:                    
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output:                    
Correct output: -97                 | Program output: -12                
Correct output: 39                  | Program output:                    
Correct output: -75                 | Program output: -21                
Correct output: -61                 | Program output: -61                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: -47                
Correct output: 57                  | Program output:                    
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output:                    
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output:                    
Correct output: 8                   | Program output:                    
Correct output: 14                  | Program output:                    
Correct output: 15                  | Program output:                    
Correct output: 6                   | Program output: 18                 
Correct output: 35                  | Program output:                    
Correct output: 24                  | Program output:                    
Correct output: 35                  | Program output:                    
Correct output: 41                  | Program output:                    
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 16                 
Correct output: 4                   | Program output: 4                  
Correct output: 14                  | Program output:                    
Correct output: 0                   | Program output:                    
Correct output: 8                   | Program output:                    
Correct output: 32                  | Program output:                    
Correct output: 0                   | Program output: 0                  
Correct output: 4                   | Program output:                    
Correct output: 13                  | Program output:                    
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -52                 | Program output: -52                
Correct output: -95                 | Program output: -50                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output:                    
Correct output: -66                 | Program output:                    
Correct output: -73                 | Program output:                    
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -98                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -89                
Correct output: -84                 | Program output: -84                
Correct output: -26                 | Program output: 52                 
Correct output: -57                 | Program output: -57                
Correct output: -16                 | Program output:                    
Correct output: -81                 | Program output: -81                
Correct output: -45                 | Program output:                    
Correct output: -78                 | Program output:                    
Correct output: -82                 | Program output:                    
Correct output: -98                 | Program output: -98                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: -74                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output:                    
Correct output: 23                  | Program output: 73                 
Correct output: -98                 | Program output:                    
Correct output: -27                 | Program output:                    
Correct output: -63                 | Program output:                    
Correct output: -90                 | Program output: -90                
Correct output: 16                  | Program output:                    
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -46                
Correct output: -78                 | Program output:                    
Correct output: -23                 | Program output:                    
Correct output: -76                 | Program output: -76                
Correct output: -71                 | Program output:                    
Correct output: -57                 | Program output: -57                
Correct output: -46                 | Program output:                    
Correct output: -97                 | Program output: -97                
Correct output: 20                  | Program output: 27                 
Correct output: -69                 | Program output: -47                
Correct output: -72                 | Program output: -72                
Correct output: -78                 | Program output: -57                
Correct output: -89                 | Program output:                    
Correct output: -87                 | Program output:                    
Correct output: -59                 | Program output:                    
Correct output: -83                 | Program output: -33                
Correct output: -43                 | Program output: -4                 
Correct output: 16                  | Program output:                    
Correct output: -14                 | Program output: -4                 
Correct output: -66                 | Program output:                    
Correct output: -75                 | Program output: -52                
Correct output: -68                 | Program output: -68                
Correct output: -55                 | Program output: -55                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -92                
Correct output: -96                 | Program output: -96                
Correct output: -59                 | Program output: -59                
Correct output: -42                 | Program output: -28                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 2, :instruction boolean_and} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Lexicase best program: (integer_inc boolean_flush in1 boolean_stackdepth exec_shove (in2 in4) exec_rot (integer_min tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_and)) (boolean_invert_first_then_and print_integer boolean_stackdepth) (exec_do*times ()))
Lexicase best errors: [1 0 0 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 29
Percent parens: 0.276
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 2, :instruction boolean_and} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Zero cases best program: (integer_inc boolean_flush in1 boolean_stackdepth exec_shove (in2 in4) exec_rot (integer_min tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_and)) (boolean_invert_first_then_and print_integer boolean_stackdepth) (exec_do*times ()))
Zero cases best errors: [1 0 0 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 29
Percent parens: 0.276
--- Lexicase Population Statistics ---
Count of elite individuals by case: (349 395 310 397 96 331 394 307 395 197)
Population mean number of elite cases: 3.17
Count of perfect (error zero) individuals by case: (349 395 310 397 96 331 394 307 395 197)
Population mean number of perfect (error zero) cases: 3.17
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_shove} {:close 2, :instruction boolean_and} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Best program: (integer_inc boolean_flush in1 boolean_stackdepth exec_shove (in2 in4) exec_rot (integer_min tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_shove boolean_and)) (boolean_invert_first_then_and print_integer boolean_stackdepth) (exec_do*times ()))
Errors: [1 0 0 0 1 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 21
Size: 29
Percent parens: 0.276
--- Population Statistics ---
Average total errors in population: 6.829
Median total errors in population: 7
Error averages by case: (0.651 0.605 0.69 0.603 0.904 0.669 0.606 0.693 0.605 0.803)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 24.889
Average program size in population (points): 37.57
Average percent parens in population: 0.336
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 7
Genome diversity (% unique genomes):	 0.98
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.98
Total error diversity:				 0.009
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.245
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1697052
--- Timings ---
Current time: 1559594088315 milliseconds
Total Time:           8.6 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.1 seconds, 48.0%
Fitness Testing:      3.2 seconds, 37.1%
Report:               1.2 seconds, 13.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 340
Test mean error for best: 0.34000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: 88                 
Correct output: -97                 | Program output: -12                
Correct output: 39                  | Program output: 39                 
Correct output: -75                 | Program output: -21                
Correct output: -61                 | Program output: -61                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: -47                
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 14                 
Correct output: 14                  | Program output: 32                 
Correct output: 15                  | Program output: 34                 
Correct output: 6                   | Program output: 6                  
Correct output: 35                  | Program output: 61                 
Correct output: 24                  | Program output: 27                 
Correct output: 35                  | Program output: 35                 
Correct output: 41                  | Program output: 70                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 18                 
Correct output: 14                  | Program output: 63                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 0                   | Program output: 8                  
Correct output: 4                   | Program output: 9                  
Correct output: 13                  | Program output: 30                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -65                
Correct output: -52                 | Program output: -52                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output: 46                 
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -1                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: -84                
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: -57                
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: -43                
Correct output: -45                 | Program output: -45                
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: -98                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: 30                 
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 23                 
Correct output: -98                 | Program output: -79                
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -63                
Correct output: -90                 | Program output: -90                
Correct output: 16                  | Program output: 40                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -10                
Correct output: -76                 | Program output: -76                
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: -57                
Correct output: -46                 | Program output: 51                 
Correct output: -97                 | Program output: -97                
Correct output: 20                  | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -72                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: -87                
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: -4                 
Correct output: 16                  | Program output: 55                 
Correct output: -14                 | Program output: -4                 
Correct output: -66                 | Program output: -66                
Correct output: -75                 | Program output: -52                
Correct output: -68                 | Program output: -68                
Correct output: -55                 | Program output: -55                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -92                
Correct output: -96                 | Program output: -56                
Correct output: -59                 | Program output: -59                
Correct output: -42                 | Program output: -42                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Lexicase best program: (integer_inc in1 boolean_stackdepth boolean_pop integer_eq exec_shove (exec_k_when_autoconstructing () (exec_s (in4) (in3 in2 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop exec_s_when_autoconstructing (integer_eq) (boolean_pop print_integer boolean_stackdepth) (exec_do*times ())))) () ())) ())))
Lexicase best errors: [0 0 0 0 0 0 1 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 42
Percent parens: 0.405
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Zero cases best program: (integer_inc in1 boolean_stackdepth boolean_pop integer_eq exec_shove (exec_k_when_autoconstructing () (exec_s (in4) (in3 in2 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop exec_s_when_autoconstructing (integer_eq) (boolean_pop print_integer boolean_stackdepth) (exec_do*times ())))) () ())) ())))
Zero cases best errors: [0 0 0 0 0 0 1 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 42
Percent parens: 0.405
--- Lexicase Population Statistics ---
Count of elite individuals by case: (363 320 320 327 317 734 227 581 281 291)
Population mean number of elite cases: 3.76
Count of perfect (error zero) individuals by case: (363 320 320 327 317 734 227 581 281 291)
Population mean number of perfect (error zero) cases: 3.76
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Best program: (integer_inc in1 boolean_stackdepth integer_eq exec_shove (exec_k_when_autoconstructing () (exec_s (in4) (in3 in2 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop boolean_invert_first_then_and print_integer boolean_stackdepth) exec_do*times ()) () ())) ())))
Errors: [0 0 0 0 0 0 1 0 0 0]
Total: 1
Mean: 0.1
Genome size: 24
Size: 38
Percent parens: 0.368
--- Population Statistics ---
Average total errors in population: 6.239
Median total errors in population: 6
Error averages by case: (0.637 0.68 0.68 0.673 0.683 0.266 0.773 0.419 0.719 0.709)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 24.312
Average program size in population (points): 35.804
Average percent parens in population: 0.315
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 7
Genome diversity (% unique genomes):	 0.987
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.987
Total error diversity:				 0.01
Error (vector) diversity:			 0.055
Behavioral diversity:				 0.258
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2105316
--- Timings ---
Current time: 1559594090337 milliseconds
Total Time:          10.5 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.3 seconds, 50.8%
Fitness Testing:      3.6 seconds, 34.0%
Report:               1.5 seconds, 14.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 337
Test mean error for best: 0.33700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: 39                  | Program output: 39                 
Correct output: -75                 | Program output: -75                
Correct output: -61                 | Program output: -19                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: 19                 
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 14                 
Correct output: 14                  | Program output: 32                 
Correct output: 15                  | Program output: 34                 
Correct output: 6                   | Program output: 6                  
Correct output: 35                  | Program output: 61                 
Correct output: 24                  | Program output: 27                 
Correct output: 35                  | Program output: 35                 
Correct output: 41                  | Program output: 70                 
Correct output: 0                   | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 18                 
Correct output: 14                  | Program output: 63                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 0                   | Program output: 0                  
Correct output: 4                   | Program output: 9                  
Correct output: 13                  | Program output: 30                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -52                 | Program output: -43                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output: -54                
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -98                
Correct output: -90                 | Program output: -24                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: -26                
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: -6                 
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: -81                
Correct output: -45                 | Program output: 57                 
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: -78                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: -74                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 23                 
Correct output: -98                 | Program output: -98                
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -9                 
Correct output: -90                 | Program output: -83                
Correct output: 16                  | Program output: 40                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -23                
Correct output: -76                 | Program output: -7                 
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: -31                
Correct output: -46                 | Program output: -46                
Correct output: -97                 | Program output: -87                
Correct output: 20                  | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -57                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: -43                
Correct output: 16                  | Program output: 55                 
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -37                
Correct output: -75                 | Program output: -75                
Correct output: -68                 | Program output: 12                 
Correct output: -55                 | Program output: -54                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -40                
Correct output: -96                 | Program output: -96                
Correct output: -59                 | Program output: -3                 
Correct output: -42                 | Program output: -42                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction print_exec} {:close 0, :instruction exec_do*times})
Lexicase best program: (integer_inc in1 boolean_stackdepth integer_eq exec_k_when_autoconstructing () (exec_s (in4) (in3 in1 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop boolean_pop print_integer boolean_stackdepth) print_exec (exec_do*times ()))) () ())) ()))
Lexicase best errors: [0 1 0 1 0 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 36
Percent parens: 0.389
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction print_exec} {:close 0, :instruction exec_do*times})
Zero cases best program: (integer_inc in1 boolean_stackdepth integer_eq exec_k_when_autoconstructing () (exec_s (in4) (in3 in1 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop boolean_pop print_integer boolean_stackdepth) print_exec (exec_do*times ()))) () ())) ()))
Zero cases best errors: [0 1 0 1 0 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 36
Percent parens: 0.389
--- Lexicase Population Statistics ---
Count of elite individuals by case: (185 106 181 427 180 301 519 181 264 496)
Population mean number of elite cases: 2.84
Count of perfect (error zero) individuals by case: (185 106 181 427 180 301 519 181 264 496)
Population mean number of perfect (error zero) cases: 2.84
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction in4} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction in3} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_while} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_gt} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_pop} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*times})
Best program: (integer_inc boolean_flush in1 boolean_stackdepth exec_k_when_autoconstructing () (in4) integer_swap integer_pop integer_swap in3 integer_swap exec_do*times (exec_rot (integer_min print_integer boolean_invert_second_then_and exec_while (exec_when (boolean_dup_times integer_pop integer_gt integer_eq) boolean_pop boolean_invert_first_then_and print_integer boolean_pop boolean_stackdepth) exec_do*times ()) () ()))
Errors: [0 1 0 1 0 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 28
Size: 38
Percent parens: 0.263
--- Population Statistics ---
Average total errors in population: 7.16
Median total errors in population: 15/2
Error averages by case: (0.815 0.894 0.819 0.573 0.82 0.699 0.481 0.819 0.736 0.504)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 25.167
Average program size in population (points): 37.642
Average percent parens in population: 0.330
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.009
Error (vector) diversity:			 0.053
Behavioral diversity:				 0.3
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2871660
--- Timings ---
Current time: 1559594092513 milliseconds
Total Time:          12.7 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         6.5 seconds, 51.1%
Fitness Testing:      4.2 seconds, 32.9%
Report:               1.9 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 232
Test mean error for best: 0.23200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: 88                 
Correct output: -97                 | Program output: -12                
Correct output: 39                  | Program output: 39                 
Correct output: -75                 | Program output: -21                
Correct output: -61                 | Program output: -61                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: -47                
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 14                  | Program output: 32                 
Correct output: 15                  | Program output: 15                 
Correct output: 6                   | Program output: 6                  
Correct output: 35                  | Program output: 35                 
Correct output: 24                  | Program output: 24                 
Correct output: 35                  | Program output: 35                 
Correct output: 41                  | Program output: 41                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 4                  
Correct output: 14                  | Program output: 14                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 0                   | Program output: 8                  
Correct output: 4                   | Program output: 9                  
Correct output: 13                  | Program output: 13                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -65                
Correct output: -52                 | Program output: -52                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output: 46                 
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -98                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: -84                
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: -57                
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: -81                
Correct output: -45                 | Program output: -45                
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: -98                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: 30                 
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 23                 
Correct output: -98                 | Program output: -79                
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -63                
Correct output: -90                 | Program output: -90                
Correct output: 16                  | Program output: 21                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -10                
Correct output: -76                 | Program output: -76                
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: -57                
Correct output: -46                 | Program output: 51                 
Correct output: -97                 | Program output: -97                
Correct output: 20                  | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -72                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: -87                
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: -4                 
Correct output: 16                  | Program output: 16                 
Correct output: -14                 | Program output: -4                 
Correct output: -66                 | Program output: -66                
Correct output: -75                 | Program output: -52                
Correct output: -68                 | Program output: -68                
Correct output: -55                 | Program output: -55                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -92                
Correct output: -96                 | Program output: -96                
Correct output: -59                 | Program output: -59                
Correct output: -42                 | Program output: -42                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth})
Lexicase best program: (integer_inc in1 integer_eq exec_k_when_autoconstructing () (exec_s (in3 in2 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop exec_y (boolean_invert_first_then_and print_integer boolean_stackdepth))) () ())) () ()))
Lexicase best errors: [0 0 1 0 0 0 1 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 34
Percent parens: 0.382
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_stackdepth})
Zero cases best program: (integer_inc in1 integer_eq exec_k_when_autoconstructing () (exec_s (in3 in2 exec_do*times (exec_rot (integer_min print_integer tag_exec_238 (boolean_invert_second_then_and exec_when (integer_pop integer_eq) boolean_pop exec_y (boolean_invert_first_then_and print_integer boolean_stackdepth))) () ())) () ()))
Zero cases best errors: [0 0 1 0 0 0 1 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 34
Percent parens: 0.382
--- Lexicase Population Statistics ---
Count of elite individuals by case: (413 202 201 267 361 390 283 267 201 308)
Population mean number of elite cases: 2.89
Count of perfect (error zero) individuals by case: (413 202 201 267 361 390 283 267 201 308)
Population mean number of perfect (error zero) cases: 2.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction exec_rot} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_min} {:close 1, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*times})
Best program: (integer_inc boolean_flush boolean_flush in1 integer_empty exec_k_when_autoconstructing () (exec_s (in2 in4) (in3 integer_min exec_rot (exec_do*while () integer_min print_boolean) (print_integer tag_exec_238 (boolean_invert_second_then_and integer_eq integer_flush integer_pop integer_eq) exec_s () (boolean_pop boolean_dup_items integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()) ()))
Errors: [0 1 0 0 0 0 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 29
Size: 44
Percent parens: 0.341
--- Population Statistics ---
Average total errors in population: 7.107
Median total errors in population: 7
Error averages by case: (0.587 0.798 0.799 0.733 0.639 0.61 0.717 0.733 0.799 0.692)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 23.988
Average program size in population (points): 35.177
Average percent parens in population: 0.316
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.989
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.989
Total error diversity:				 0.009
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.378
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 3486577
--- Timings ---
Current time: 1559594094471 milliseconds
Total Time:          14.9 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.7 seconds, 51.7%
Fitness Testing:      4.7 seconds, 31.8%
Report:               2.3 seconds, 15.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 26
Test mean error for best: 0.02600
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 1
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 1
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 1
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 1
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 1
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: 39                  | Program output: 39                 
Correct output: -75                 | Program output: -75                
Correct output: -61                 | Program output: -61                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: -47                
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 14                  | Program output: 14                 
Correct output: 15                  | Program output: 15                 
Correct output: 6                   | Program output: 6                  
Correct output: 35                  | Program output: 35                 
Correct output: 24                  | Program output: 24                 
Correct output: 35                  | Program output: 35                 
Correct output: 41                  | Program output: 41                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 4                  
Correct output: 14                  | Program output: 14                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 0                   | Program output: 0                  
Correct output: 4                   | Program output: 714                
Correct output: 13                  | Program output: 13                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -52                 | Program output: -52                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output: -54                
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -98                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: -84                
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: -57                
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: -81                
Correct output: -45                 | Program output: -45                
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: -98                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: -74                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 23                 
Correct output: -98                 | Program output: -98                
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -63                
Correct output: -90                 | Program output: -90                
Correct output: 16                  | Program output: 16                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -23                
Correct output: -76                 | Program output: -76                
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: -57                
Correct output: -46                 | Program output: -46                
Correct output: -97                 | Program output: -97                
Correct output: 20                  | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -72                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: -87                
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: -43                
Correct output: 16                  | Program output: 16                 
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -66                
Correct output: -75                 | Program output: -75                
Correct output: -68                 | Program output: -68                
Correct output: -55                 | Program output: -55                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -92                
Correct output: -96                 | Program output: -96                
Correct output: -59                 | Program output: -59                
Correct output: -42                 | Program output: -42                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction boolean_flush} {:close 0, :instruction in3} {:close 1, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_min} {:close 1, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction exec_s} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*times})
Lexicase best program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 44
Percent parens: 0.318
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction boolean_flush} {:close 0, :instruction in3} {:close 1, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_min} {:close 1, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction exec_s} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*times})
Zero cases best program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 44
Percent parens: 0.318
--- Lexicase Population Statistics ---
Count of elite individuals by case: (410 509 413 581 415 429 411 441 215 297)
Population mean number of elite cases: 4.12
Count of perfect (error zero) individuals by case: (410 509 413 581 415 429 411 441 215 297)
Population mean number of perfect (error zero) cases: 4.12
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_flush} {:close 1, :instruction in1} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in4} {:close 0, :instruction boolean_flush} {:close 0, :instruction in3} {:close 1, :instruction in1} {:close 0, :instruction integer_min} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_min} {:close 1, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction tag_exec_238} {:close 0, :instruction exec_s} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_eq} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*times})
Best program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 30
Size: 44
Percent parens: 0.318
--- Population Statistics ---
Average total errors in population: 5.879
Median total errors in population: 6
Error averages by case: (0.59 0.491 0.587 0.419 0.585 0.571 0.589 0.559 0.785 0.703)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 25.169
Average program size in population (points): 37.763
Average percent parens in population: 0.333
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 6
Genome diversity (% unique genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.011
Error (vector) diversity:			 0.073
Behavioral diversity:				 0.393
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 4043285
--- Timings ---
Current time: 1559594096426 milliseconds
Total Time:          16.8 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.9 seconds, 53.0%
Fitness Testing:      5.2 seconds, 31.2%
Report:               2.6 seconds, 15.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 7
Successful program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 44


Auto-simplifying with starting size: 44
step: 0
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 500
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 1000
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 1500
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 2000
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 2500
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 3000
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 3500
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 4000
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 4500
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

step: 5000
program: (integer_inc exec_y_when_autoconstructing () boolean_flush boolean_flush in1 exec_yank integer_empty exec_s (in2 in4) (boolean_flush in3 in1) (integer_min exec_do*while () integer_min print_boolean) print_integer tag_exec_238 (exec_s (integer_eq boolean_pop integer_pop integer_eq) (exec_s () (boolean_pop integer_swap boolean_invert_first_then_and print_integer exec_do*times ()) ()) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 44

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 26
Test mean error for best: 0.02600
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 1
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 1
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 1
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 1
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 1
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -21                 | Program output: -21                
Correct output: -100                | Program output: -100               
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: 39                  | Program output: 39                 
Correct output: -75                 | Program output: -75                
Correct output: -61                 | Program output: -61                
Correct output: -23                 | Program output: -23                
Correct output: -45                 | Program output: -45                
Correct output: -47                 | Program output: -47                
Correct output: 57                  | Program output: 57                 
Correct output: 10                  | Program output: 10                 
Correct output: 95                  | Program output: 95                 
Correct output: -54                 | Program output: -54                
Correct output: 20                  | Program output: 20                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 14                  | Program output: 14                 
Correct output: 15                  | Program output: 15                 
Correct output: 6                   | Program output: 6                  
Correct output: 35                  | Program output: 35                 
Correct output: 24                  | Program output: 24                 
Correct output: 35                  | Program output: 35                 
Correct output: 41                  | Program output: 41                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 4                  
Correct output: 14                  | Program output: 14                 
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 0                   | Program output: 0                  
Correct output: 4                   | Program output: 714                
Correct output: 13                  | Program output: 13                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: -75                
Correct output: -52                 | Program output: -52                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -54                 | Program output: -54                
Correct output: -66                 | Program output: -66                
Correct output: -73                 | Program output: -73                
Correct output: -47                 | Program output: -47                
Correct output: -98                 | Program output: -98                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -84                 | Program output: -84                
Correct output: -26                 | Program output: -26                
Correct output: -57                 | Program output: -57                
Correct output: -16                 | Program output: -16                
Correct output: -81                 | Program output: -81                
Correct output: -45                 | Program output: -45                
Correct output: -78                 | Program output: -78                
Correct output: -82                 | Program output: -82                
Correct output: -98                 | Program output: -98                
Correct output: -43                 | Program output: -43                
Correct output: -74                 | Program output: -74                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -77                
Correct output: 23                  | Program output: 23                 
Correct output: -98                 | Program output: -98                
Correct output: -27                 | Program output: -27                
Correct output: -63                 | Program output: -63                
Correct output: -90                 | Program output: -90                
Correct output: 16                  | Program output: 16                 
Correct output: -86                 | Program output: -86                
Correct output: -61                 | Program output: -61                
Correct output: -78                 | Program output: -78                
Correct output: -23                 | Program output: -23                
Correct output: -76                 | Program output: -76                
Correct output: -71                 | Program output: -71                
Correct output: -57                 | Program output: -57                
Correct output: -46                 | Program output: -46                
Correct output: -97                 | Program output: -97                
Correct output: 20                  | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -72                 | Program output: -72                
Correct output: -78                 | Program output: -78                
Correct output: -89                 | Program output: -89                
Correct output: -87                 | Program output: -87                
Correct output: -59                 | Program output: -59                
Correct output: -83                 | Program output: -83                
Correct output: -43                 | Program output: -43                
Correct output: 16                  | Program output: 16                 
Correct output: -14                 | Program output: -14                
Correct output: -66                 | Program output: -66                
Correct output: -75                 | Program output: -75                
Correct output: -68                 | Program output: -68                
Correct output: -55                 | Program output: -55                
Correct output: -76                 | Program output: -76                
Correct output: -92                 | Program output: -92                
Correct output: -96                 | Program output: -96                
Correct output: -59                 | Program output: -59                
Correct output: -42                 | Program output: -42                
;;******************************
