Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[56 56 56 14] 14] [[66 -15 66 66] -15] [[-10 72 72 72] -10] [[70 0 70 70] 0] [[-82 77 77 77] -82] [[26 22 22 22] 22] [[67 67 67 96] 67] [[73 73 73 74] 73] [[-90 62 62 62] -90] [[91 83 83 83] 83] [(-31 -31 -31 -31) -31] [(-34 -34 -34 -34) -34] [(-3 -3 -3 -3) -3] [(55 55 55 55) 55] [(30 30 30 30) 30] [(11 41 52 45) 11] [(91 48 28 21) 21] [(68 58 42 0) 0] [(45 33 77 42) 33] [(18 90 11 73) 11] [(57 0 70 11) 0] [(75 90 36 43) 36] [(42 72 49 48) 42] [(23 72 67 76) 23] [(52 5 86 78) 5] [(90 82 46 7) 7] [(14 7 85 79) 7] [(19 89 27 63) 19] [(69 99 73 56) 56] [(72 0 30 3) 0] [(42 78 84 16) 16] [(69 25 32 78) 25] [(86 88 63 0) 0] [(32 13 0 33) 0] [(92 45 15 8) 8] [(47 4 -13 76) -13] [(25 -10 -56 -69) -69] [(-78 70 -35 71) -78] [(-63 -57 24 -88) -88] [(-75 -87 7 -10) -87] [(47 53 33 65) 33] [(55 -67 24 -42) -67] [(85 30 75 -67) -67] [(55 80 -27 -79) -79] [(4 85 55 35) 4] [(-34 67 4 10) -34] [(49 33 14 -60) -60] [(-48 -78 -10 58) -78] [(65 -62 -77 -63) -77] [(57 -14 75 -98) -98] [(-84 -15 68 -18) -84] [(-63 34 4 -46) -63] [(89 5 46 -61) -61] [(-14 -79 19 -85) -85] [(73 38 -94 -27) -94] [(43 30 94 81) 30] [(-81 36 34 -87) -87] [(-71 -22 -96 -49) -96] [(59 72 97 47) 47] [(17 6 -74 -51) -74] [(-94 -68 -77 -97) -97] [(9 85 37 43) 9] [(-92 87 -9 82) -92] [(13 -31 -4 0) -31] [(38 -90 50 -24) -90] [(-12 -69 -82 71) -82] [(-16 67 32 -3) -16] [(-57 100 82 30) -57] [(92 -91 -24 -23) -91] [(-13 -100 18 -3) -100] [(-12 57 96 -82) -82] [(93 -16 -100 -15) -100] [(-70 -69 53 -35) -70] [(44 91 -95 -99) -99] [(-37 -3 -12 -32) -37] [(69 5 -62 93) -62] [(-98 -87 -68 -72) -98] [(77 73 -25 24) -25] [(-24 -87 -49 -97) -97] [(-92 -45 13 7) -92] [(-46 -74 -10 -32) -74] [(-92 6 88 12) -92] [(69 20 -1 97) -1] [(25 85 -57 67) -57] [(-95 -56 -58 -50) -95] [(53 70 -14 -58) -58] [(-91 -65 -26 99) -91] [(4 68 -64 97) -64] [(94 51 -4 -93) -93] [(-82 18 77 14) -82] [(85 76 23 52) 23] [(-43 -71 -50 43) -71] [(-12 -62 -97 38) -97] [(-90 91 -29 -60) -90] [(55 8 -89 -33) -89])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[56 56 56 14] 14]
Train Case:   6 | Input/Output: [[66 -15 66 66] -15]
Train Case:   7 | Input/Output: [[-10 72 72 72] -10]
Train Case:   8 | Input/Output: [[70 0 70 70] 0]
Train Case:   9 | Input/Output: [[-82 77 77 77] -82]
Train Case:  10 | Input/Output: [[26 22 22 22] 22]
Train Case:  11 | Input/Output: [[67 67 67 96] 67]
Train Case:  12 | Input/Output: [[73 73 73 74] 73]
Train Case:  13 | Input/Output: [[-90 62 62 62] -90]
Train Case:  14 | Input/Output: [[91 83 83 83] 83]
Train Case:  15 | Input/Output: [(-31 -31 -31 -31) -31]
Train Case:  16 | Input/Output: [(-34 -34 -34 -34) -34]
Train Case:  17 | Input/Output: [(-3 -3 -3 -3) -3]
Train Case:  18 | Input/Output: [(55 55 55 55) 55]
Train Case:  19 | Input/Output: [(30 30 30 30) 30]
Train Case:  20 | Input/Output: [(11 41 52 45) 11]
Train Case:  21 | Input/Output: [(91 48 28 21) 21]
Train Case:  22 | Input/Output: [(68 58 42 0) 0]
Train Case:  23 | Input/Output: [(45 33 77 42) 33]
Train Case:  24 | Input/Output: [(18 90 11 73) 11]
Train Case:  25 | Input/Output: [(57 0 70 11) 0]
Train Case:  26 | Input/Output: [(75 90 36 43) 36]
Train Case:  27 | Input/Output: [(42 72 49 48) 42]
Train Case:  28 | Input/Output: [(23 72 67 76) 23]
Train Case:  29 | Input/Output: [(52 5 86 78) 5]
Train Case:  30 | Input/Output: [(90 82 46 7) 7]
Train Case:  31 | Input/Output: [(14 7 85 79) 7]
Train Case:  32 | Input/Output: [(19 89 27 63) 19]
Train Case:  33 | Input/Output: [(69 99 73 56) 56]
Train Case:  34 | Input/Output: [(72 0 30 3) 0]
Train Case:  35 | Input/Output: [(42 78 84 16) 16]
Train Case:  36 | Input/Output: [(69 25 32 78) 25]
Train Case:  37 | Input/Output: [(86 88 63 0) 0]
Train Case:  38 | Input/Output: [(32 13 0 33) 0]
Train Case:  39 | Input/Output: [(92 45 15 8) 8]
Train Case:  40 | Input/Output: [(47 4 -13 76) -13]
Train Case:  41 | Input/Output: [(25 -10 -56 -69) -69]
Train Case:  42 | Input/Output: [(-78 70 -35 71) -78]
Train Case:  43 | Input/Output: [(-63 -57 24 -88) -88]
Train Case:  44 | Input/Output: [(-75 -87 7 -10) -87]
Train Case:  45 | Input/Output: [(47 53 33 65) 33]
Train Case:  46 | Input/Output: [(55 -67 24 -42) -67]
Train Case:  47 | Input/Output: [(85 30 75 -67) -67]
Train Case:  48 | Input/Output: [(55 80 -27 -79) -79]
Train Case:  49 | Input/Output: [(4 85 55 35) 4]
Train Case:  50 | Input/Output: [(-34 67 4 10) -34]
Train Case:  51 | Input/Output: [(49 33 14 -60) -60]
Train Case:  52 | Input/Output: [(-48 -78 -10 58) -78]
Train Case:  53 | Input/Output: [(65 -62 -77 -63) -77]
Train Case:  54 | Input/Output: [(57 -14 75 -98) -98]
Train Case:  55 | Input/Output: [(-84 -15 68 -18) -84]
Train Case:  56 | Input/Output: [(-63 34 4 -46) -63]
Train Case:  57 | Input/Output: [(89 5 46 -61) -61]
Train Case:  58 | Input/Output: [(-14 -79 19 -85) -85]
Train Case:  59 | Input/Output: [(73 38 -94 -27) -94]
Train Case:  60 | Input/Output: [(43 30 94 81) 30]
Train Case:  61 | Input/Output: [(-81 36 34 -87) -87]
Train Case:  62 | Input/Output: [(-71 -22 -96 -49) -96]
Train Case:  63 | Input/Output: [(59 72 97 47) 47]
Train Case:  64 | Input/Output: [(17 6 -74 -51) -74]
Train Case:  65 | Input/Output: [(-94 -68 -77 -97) -97]
Train Case:  66 | Input/Output: [(9 85 37 43) 9]
Train Case:  67 | Input/Output: [(-92 87 -9 82) -92]
Train Case:  68 | Input/Output: [(13 -31 -4 0) -31]
Train Case:  69 | Input/Output: [(38 -90 50 -24) -90]
Train Case:  70 | Input/Output: [(-12 -69 -82 71) -82]
Train Case:  71 | Input/Output: [(-16 67 32 -3) -16]
Train Case:  72 | Input/Output: [(-57 100 82 30) -57]
Train Case:  73 | Input/Output: [(92 -91 -24 -23) -91]
Train Case:  74 | Input/Output: [(-13 -100 18 -3) -100]
Train Case:  75 | Input/Output: [(-12 57 96 -82) -82]
Train Case:  76 | Input/Output: [(93 -16 -100 -15) -100]
Train Case:  77 | Input/Output: [(-70 -69 53 -35) -70]
Train Case:  78 | Input/Output: [(44 91 -95 -99) -99]
Train Case:  79 | Input/Output: [(-37 -3 -12 -32) -37]
Train Case:  80 | Input/Output: [(69 5 -62 93) -62]
Train Case:  81 | Input/Output: [(-98 -87 -68 -72) -98]
Train Case:  82 | Input/Output: [(77 73 -25 24) -25]
Train Case:  83 | Input/Output: [(-24 -87 -49 -97) -97]
Train Case:  84 | Input/Output: [(-92 -45 13 7) -92]
Train Case:  85 | Input/Output: [(-46 -74 -10 -32) -74]
Train Case:  86 | Input/Output: [(-92 6 88 12) -92]
Train Case:  87 | Input/Output: [(69 20 -1 97) -1]
Train Case:  88 | Input/Output: [(25 85 -57 67) -57]
Train Case:  89 | Input/Output: [(-95 -56 -58 -50) -95]
Train Case:  90 | Input/Output: [(53 70 -14 -58) -58]
Train Case:  91 | Input/Output: [(-91 -65 -26 99) -91]
Train Case:  92 | Input/Output: [(4 68 -64 97) -64]
Train Case:  93 | Input/Output: [(94 51 -4 -93) -93]
Train Case:  94 | Input/Output: [(-82 18 77 14) -82]
Train Case:  95 | Input/Output: [(85 76 23 52) 23]
Train Case:  96 | Input/Output: [(-43 -71 -50 43) -71]
Train Case:  97 | Input/Output: [(-12 -62 -97 38) -97]
Train Case:  98 | Input/Output: [(-90 91 -29 -60) -90]
Train Case:  99 | Input/Output: [(55 8 -89 -33) -89]
Test Case:   0 | Input/Output: [[-75 -75 56 -75] -75]
Test Case:   1 | Input/Output: [[-35 55 55 55] -35]
Test Case:   2 | Input/Output: [[-80 -30 -30 -30] -80]
Test Case:   3 | Input/Output: [[-32 -32 56 -32] -32]
Test Case:   4 | Input/Output: [[-7 -7 -7 68] -7]
Test Case:   5 | Input/Output: [[32 32 51 32] 32]
Test Case:   6 | Input/Output: [[35 47 35 35] 35]
Test Case:   7 | Input/Output: [[-62 91 -62 -62] -62]
Test Case:   8 | Input/Output: [[46 46 -68 46] -68]
Test Case:   9 | Input/Output: [[52 52 52 -28] -28]
Test Case:  10 | Input/Output: [[-61 -61 33 -61] -61]
Test Case:  11 | Input/Output: [[-77 -100 -100 -100] -100]
Test Case:  12 | Input/Output: [[-55 -55 -38 -55] -55]
Test Case:  13 | Input/Output: [[-18 -18 -10 -18] -18]
Test Case:  14 | Input/Output: [[-33 -1 -1 -1] -33]
Test Case:  15 | Input/Output: [[-67 -51 -67 -67] -67]
Test Case:  16 | Input/Output: [[26 -22 26 26] -22]
Test Case:  17 | Input/Output: [[19 19 19 -35] -35]
Test Case:  18 | Input/Output: [[-82 3 3 3] -82]
Test Case:  19 | Input/Output: [[-89 -89 -43 -89] -89]
Test Case:  20 | Input/Output: [[98 98 45 98] 45]
Test Case:  21 | Input/Output: [[79 79 79 -99] -99]
Test Case:  22 | Input/Output: [[-94 56 -94 -94] -94]
Test Case:  23 | Input/Output: [[-62 -62 96 -62] -62]
Test Case:  24 | Input/Output: [[-35 51 -35 -35] -35]
Test Case:  25 | Input/Output: [[-84 -84 51 -84] -84]
Test Case:  26 | Input/Output: [[-79 44 44 44] -79]
Test Case:  27 | Input/Output: [[89 89 89 -99] -99]
Test Case:  28 | Input/Output: [[19 57 19 19] 19]
Test Case:  29 | Input/Output: [[-54 -54 -47 -54] -54]
Test Case:  30 | Input/Output: [[-61 -61 -73 -61] -73]
Test Case:  31 | Input/Output: [[-13 95 -13 -13] -13]
Test Case:  32 | Input/Output: [[57 57 57 89] 57]
Test Case:  33 | Input/Output: [[-91 -91 -91 -73] -91]
Test Case:  34 | Input/Output: [[30 30 30 30] 30]
Test Case:  35 | Input/Output: [[-6 -20 -6 -6] -20]
Test Case:  36 | Input/Output: [[77 77 -15 77] -15]
Test Case:  37 | Input/Output: [[29 -38 -38 -38] -38]
Test Case:  38 | Input/Output: [[-96 84 -96 -96] -96]
Test Case:  39 | Input/Output: [[45 45 45 22] 22]
Test Case:  40 | Input/Output: [[42 96 42 42] 42]
Test Case:  41 | Input/Output: [[-13 67 67 67] -13]
Test Case:  42 | Input/Output: [[-79 -79 -79 -63] -79]
Test Case:  43 | Input/Output: [[-22 -22 -20 -22] -22]
Test Case:  44 | Input/Output: [[81 81 12 81] 12]
Test Case:  45 | Input/Output: [[-47 -47 -17 -47] -47]
Test Case:  46 | Input/Output: [[9 9 9 -13] -13]
Test Case:  47 | Input/Output: [[90 90 90 -91] -91]
Test Case:  48 | Input/Output: [[-20 -20 80 -20] -20]
Test Case:  49 | Input/Output: [[41 41 -39 41] -39]
Test Case:  50 | Input/Output: [[94 -16 -16 -16] -16]
Test Case:  51 | Input/Output: [[-66 -23 -23 -23] -66]
Test Case:  52 | Input/Output: [[95 44 44 44] 44]
Test Case:  53 | Input/Output: [[-72 37 37 37] -72]
Test Case:  54 | Input/Output: [[66 56 56 56] 56]
Test Case:  55 | Input/Output: [[-28 -28 51 -28] -28]
Test Case:  56 | Input/Output: [[26 90 90 90] 26]
Test Case:  57 | Input/Output: [[85 85 85 91] 85]
Test Case:  58 | Input/Output: [[16 16 50 16] 16]
Test Case:  59 | Input/Output: [[21 21 21 51] 21]
Test Case:  60 | Input/Output: [[-32 -32 -32 100] -32]
Test Case:  61 | Input/Output: [[92 92 92 64] 64]
Test Case:  62 | Input/Output: [[-45 -60 -45 -45] -60]
Test Case:  63 | Input/Output: [[63 -4 -4 -4] -4]
Test Case:  64 | Input/Output: [[-79 -79 -79 32] -79]
Test Case:  65 | Input/Output: [[-66 9 9 9] -66]
Test Case:  66 | Input/Output: [[-82 -82 -82 43] -82]
Test Case:  67 | Input/Output: [[-99 -99 96 -99] -99]
Test Case:  68 | Input/Output: [[-20 -20 -20 18] -20]
Test Case:  69 | Input/Output: [[72 -18 72 72] -18]
Test Case:  70 | Input/Output: [[-93 -93 91 -93] -93]
Test Case:  71 | Input/Output: [[-18 -61 -18 -18] -61]
Test Case:  72 | Input/Output: [[73 73 73 -90] -90]
Test Case:  73 | Input/Output: [[80 80 80 -31] -31]
Test Case:  74 | Input/Output: [[90 71 90 90] 71]
Test Case:  75 | Input/Output: [[59 -31 -31 -31] -31]
Test Case:  76 | Input/Output: [[70 82 70 70] 70]
Test Case:  77 | Input/Output: [[-35 -35 -35 1] -35]
Test Case:  78 | Input/Output: [[-4 -4 -4 -12] -12]
Test Case:  79 | Input/Output: [[-88 -88 -88 -93] -93]
Test Case:  80 | Input/Output: [[39 -67 -67 -67] -67]
Test Case:  81 | Input/Output: [[16 24 16 16] 16]
Test Case:  82 | Input/Output: [[36 36 88 36] 36]
Test Case:  83 | Input/Output: [[-24 -24 84 -24] -24]
Test Case:  84 | Input/Output: [[56 56 56 -10] -10]
Test Case:  85 | Input/Output: [[20 20 48 20] 20]
Test Case:  86 | Input/Output: [[-78 69 -78 -78] -78]
Test Case:  87 | Input/Output: [[-67 15 15 15] -67]
Test Case:  88 | Input/Output: [[53 20 53 53] 20]
Test Case:  89 | Input/Output: [[61 61 61 35] 35]
Test Case:  90 | Input/Output: [[13 7 7 7] 7]
Test Case:  91 | Input/Output: [[-45 26 26 26] -45]
Test Case:  92 | Input/Output: [[-66 13 13 13] -66]
Test Case:  93 | Input/Output: [[1 -18 1 1] -18]
Test Case:  94 | Input/Output: [[99 99 99 -41] -41]
Test Case:  95 | Input/Output: [[-70 -70 -70 91] -70]
Test Case:  96 | Input/Output: [[59 59 59 14] 14]
Test Case:  97 | Input/Output: [[1 1 1 73] 1]
Test Case:  98 | Input/Output: [[-32 95 95 95] -32]
Test Case:  99 | Input/Output: [[-97 -97 15 -97] -97]
Test Case: 100 | Input/Output: [(5 5 5 5) 5]
Test Case: 101 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 102 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 103 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 104 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 105 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 106 | Input/Output: [(39 39 39 39) 39]
Test Case: 107 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 108 | Input/Output: [(39 39 39 39) 39]
Test Case: 109 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 110 | Input/Output: [(63 63 63 63) 63]
Test Case: 111 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 112 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 113 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 114 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 115 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 116 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 117 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 118 | Input/Output: [(44 44 44 44) 44]
Test Case: 119 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 120 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 121 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 122 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 123 | Input/Output: [(68 68 68 68) 68]
Test Case: 124 | Input/Output: [(51 51 51 51) 51]
Test Case: 125 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 126 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 127 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 128 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 129 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 130 | Input/Output: [(88 88 88 88) 88]
Test Case: 131 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 132 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 133 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 134 | Input/Output: [(24 24 24 24) 24]
Test Case: 135 | Input/Output: [(56 56 56 56) 56]
Test Case: 136 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 137 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 138 | Input/Output: [(61 61 61 61) 61]
Test Case: 139 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 140 | Input/Output: [(6 6 6 6) 6]
Test Case: 141 | Input/Output: [(3 3 3 3) 3]
Test Case: 142 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 143 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 144 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 145 | Input/Output: [(61 61 61 61) 61]
Test Case: 146 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 147 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 148 | Input/Output: [(73 73 73 73) 73]
Test Case: 149 | Input/Output: [(31 31 31 31) 31]
Test Case: 150 | Input/Output: [(11 11 11 11) 11]
Test Case: 151 | Input/Output: [(96 96 96 96) 96]
Test Case: 152 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 153 | Input/Output: [(95 95 95 95) 95]
Test Case: 154 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 155 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 156 | Input/Output: [(72 72 72 72) 72]
Test Case: 157 | Input/Output: [(67 67 67 67) 67]
Test Case: 158 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 159 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 160 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 161 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 162 | Input/Output: [(47 47 47 47) 47]
Test Case: 163 | Input/Output: [(73 73 73 73) 73]
Test Case: 164 | Input/Output: [(12 12 12 12) 12]
Test Case: 165 | Input/Output: [(87 87 87 87) 87]
Test Case: 166 | Input/Output: [(41 41 41 41) 41]
Test Case: 167 | Input/Output: [(78 78 78 78) 78]
Test Case: 168 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 169 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 170 | Input/Output: [(29 29 29 29) 29]
Test Case: 171 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 172 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 173 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 174 | Input/Output: [(59 59 59 59) 59]
Test Case: 175 | Input/Output: [(59 59 59 59) 59]
Test Case: 176 | Input/Output: [(41 41 41 41) 41]
Test Case: 177 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 178 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 179 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 180 | Input/Output: [(82 82 82 82) 82]
Test Case: 181 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 182 | Input/Output: [(3 3 3 3) 3]
Test Case: 183 | Input/Output: [(18 18 18 18) 18]
Test Case: 184 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 185 | Input/Output: [(100 100 100 100) 100]
Test Case: 186 | Input/Output: [(98 98 98 98) 98]
Test Case: 187 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 188 | Input/Output: [(20 20 20 20) 20]
Test Case: 189 | Input/Output: [(6 6 6 6) 6]
Test Case: 190 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 191 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 192 | Input/Output: [(72 72 72 72) 72]
Test Case: 193 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 194 | Input/Output: [(87 87 87 87) 87]
Test Case: 195 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 196 | Input/Output: [(76 76 76 76) 76]
Test Case: 197 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 198 | Input/Output: [(35 35 35 35) 35]
Test Case: 199 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 200 | Input/Output: [(87 31 82 65) 31]
Test Case: 201 | Input/Output: [(29 29 77 55) 29]
Test Case: 202 | Input/Output: [(39 84 58 53) 39]
Test Case: 203 | Input/Output: [(79 44 68 65) 44]
Test Case: 204 | Input/Output: [(39 52 75 39) 39]
Test Case: 205 | Input/Output: [(42 76 52 64) 42]
Test Case: 206 | Input/Output: [(10 40 64 19) 10]
Test Case: 207 | Input/Output: [(89 94 14 35) 14]
Test Case: 208 | Input/Output: [(40 82 62 33) 33]
Test Case: 209 | Input/Output: [(54 88 63 41) 41]
Test Case: 210 | Input/Output: [(42 58 64 2) 2]
Test Case: 211 | Input/Output: [(95 67 71 100) 67]
Test Case: 212 | Input/Output: [(9 96 31 5) 5]
Test Case: 213 | Input/Output: [(39 84 99 25) 25]
Test Case: 214 | Input/Output: [(23 91 38 22) 22]
Test Case: 215 | Input/Output: [(73 25 30 89) 25]
Test Case: 216 | Input/Output: [(38 19 60 27) 19]
Test Case: 217 | Input/Output: [(75 13 23 19) 13]
Test Case: 218 | Input/Output: [(93 75 92 18) 18]
Test Case: 219 | Input/Output: [(7 86 50 72) 7]
Test Case: 220 | Input/Output: [(25 92 33 13) 13]
Test Case: 221 | Input/Output: [(59 69 81 67) 59]
Test Case: 222 | Input/Output: [(86 94 64 11) 11]
Test Case: 223 | Input/Output: [(44 41 50 80) 41]
Test Case: 224 | Input/Output: [(100 62 72 90) 62]
Test Case: 225 | Input/Output: [(54 20 26 32) 20]
Test Case: 226 | Input/Output: [(56 1 87 38) 1]
Test Case: 227 | Input/Output: [(63 20 43 80) 20]
Test Case: 228 | Input/Output: [(57 78 38 74) 38]
Test Case: 229 | Input/Output: [(19 46 35 3) 3]
Test Case: 230 | Input/Output: [(85 24 12 19) 12]
Test Case: 231 | Input/Output: [(90 81 82 86) 81]
Test Case: 232 | Input/Output: [(4 69 100 95) 4]
Test Case: 233 | Input/Output: [(35 68 100 56) 35]
Test Case: 234 | Input/Output: [(100 12 10 2) 2]
Test Case: 235 | Input/Output: [(88 63 74 96) 63]
Test Case: 236 | Input/Output: [(20 27 90 43) 20]
Test Case: 237 | Input/Output: [(51 7 71 20) 7]
Test Case: 238 | Input/Output: [(35 29 52 6) 6]
Test Case: 239 | Input/Output: [(75 60 5 10) 5]
Test Case: 240 | Input/Output: [(39 83 57 51) 39]
Test Case: 241 | Input/Output: [(79 7 50 67) 7]
Test Case: 242 | Input/Output: [(74 100 83 50) 50]
Test Case: 243 | Input/Output: [(55 5 39 17) 5]
Test Case: 244 | Input/Output: [(67 72 42 25) 25]
Test Case: 245 | Input/Output: [(55 94 14 88) 14]
Test Case: 246 | Input/Output: [(88 79 8 62) 8]
Test Case: 247 | Input/Output: [(1 70 2 53) 1]
Test Case: 248 | Input/Output: [(61 52 100 75) 52]
Test Case: 249 | Input/Output: [(49 90 87 7) 7]
Test Case: 250 | Input/Output: [(29 64 20 47) 20]
Test Case: 251 | Input/Output: [(86 4 30 64) 4]
Test Case: 252 | Input/Output: [(73 72 46 92) 46]
Test Case: 253 | Input/Output: [(83 44 62 80) 44]
Test Case: 254 | Input/Output: [(41 61 7 65) 7]
Test Case: 255 | Input/Output: [(81 9 0 34) 0]
Test Case: 256 | Input/Output: [(69 85 37 84) 37]
Test Case: 257 | Input/Output: [(69 47 33 56) 33]
Test Case: 258 | Input/Output: [(28 74 44 34) 28]
Test Case: 259 | Input/Output: [(38 20 74 7) 7]
Test Case: 260 | Input/Output: [(42 72 21 68) 21]
Test Case: 261 | Input/Output: [(11 6 44 31) 6]
Test Case: 262 | Input/Output: [(56 73 31 98) 31]
Test Case: 263 | Input/Output: [(28 71 46 64) 28]
Test Case: 264 | Input/Output: [(75 27 92 27) 27]
Test Case: 265 | Input/Output: [(45 9 32 20) 9]
Test Case: 266 | Input/Output: [(73 68 21 77) 21]
Test Case: 267 | Input/Output: [(67 35 63 18) 18]
Test Case: 268 | Input/Output: [(89 59 14 78) 14]
Test Case: 269 | Input/Output: [(10 33 9 13) 9]
Test Case: 270 | Input/Output: [(45 4 64 16) 4]
Test Case: 271 | Input/Output: [(27 78 54 50) 27]
Test Case: 272 | Input/Output: [(72 62 21 61) 21]
Test Case: 273 | Input/Output: [(64 4 94 77) 4]
Test Case: 274 | Input/Output: [(5 99 13 81) 5]
Test Case: 275 | Input/Output: [(10 40 36 23) 10]
Test Case: 276 | Input/Output: [(39 88 94 33) 33]
Test Case: 277 | Input/Output: [(12 0 78 44) 0]
Test Case: 278 | Input/Output: [(63 78 55 5) 5]
Test Case: 279 | Input/Output: [(23 23 3 11) 3]
Test Case: 280 | Input/Output: [(46 88 58 62) 46]
Test Case: 281 | Input/Output: [(30 36 72 17) 17]
Test Case: 282 | Input/Output: [(57 97 43 3) 3]
Test Case: 283 | Input/Output: [(99 78 30 20) 20]
Test Case: 284 | Input/Output: [(30 8 68 49) 8]
Test Case: 285 | Input/Output: [(39 62 19 94) 19]
Test Case: 286 | Input/Output: [(19 25 97 88) 19]
Test Case: 287 | Input/Output: [(32 22 96 95) 22]
Test Case: 288 | Input/Output: [(93 88 28 96) 28]
Test Case: 289 | Input/Output: [(22 13 40 87) 13]
Test Case: 290 | Input/Output: [(55 33 19 41) 19]
Test Case: 291 | Input/Output: [(19 60 66 62) 19]
Test Case: 292 | Input/Output: [(57 51 49 69) 49]
Test Case: 293 | Input/Output: [(86 99 41 53) 41]
Test Case: 294 | Input/Output: [(60 89 44 53) 44]
Test Case: 295 | Input/Output: [(13 25 45 90) 13]
Test Case: 296 | Input/Output: [(13 61 32 49) 13]
Test Case: 297 | Input/Output: [(8 15 94 72) 8]
Test Case: 298 | Input/Output: [(40 94 3 13) 3]
Test Case: 299 | Input/Output: [(23 34 71 53) 23]
Test Case: 300 | Input/Output: [(76 99 70 25) 25]
Test Case: 301 | Input/Output: [(57 8 16 85) 8]
Test Case: 302 | Input/Output: [(17 68 32 44) 17]
Test Case: 303 | Input/Output: [(20 37 83 19) 19]
Test Case: 304 | Input/Output: [(62 9 64 30) 9]
Test Case: 305 | Input/Output: [(12 10 21 81) 10]
Test Case: 306 | Input/Output: [(61 26 44 56) 26]
Test Case: 307 | Input/Output: [(82 90 4 56) 4]
Test Case: 308 | Input/Output: [(57 28 50 86) 28]
Test Case: 309 | Input/Output: [(63 42 18 44) 18]
Test Case: 310 | Input/Output: [(55 69 53 52) 52]
Test Case: 311 | Input/Output: [(70 66 42 38) 38]
Test Case: 312 | Input/Output: [(75 86 88 97) 75]
Test Case: 313 | Input/Output: [(99 71 16 13) 13]
Test Case: 314 | Input/Output: [(68 47 8 82) 8]
Test Case: 315 | Input/Output: [(32 32 41 36) 32]
Test Case: 316 | Input/Output: [(59 9 15 0) 0]
Test Case: 317 | Input/Output: [(38 21 56 13) 13]
Test Case: 318 | Input/Output: [(27 67 32 11) 11]
Test Case: 319 | Input/Output: [(68 1 65 64) 1]
Test Case: 320 | Input/Output: [(24 80 12 45) 12]
Test Case: 321 | Input/Output: [(50 36 8 20) 8]
Test Case: 322 | Input/Output: [(19 5 46 97) 5]
Test Case: 323 | Input/Output: [(81 60 81 94) 60]
Test Case: 324 | Input/Output: [(24 21 6 33) 6]
Test Case: 325 | Input/Output: [(26 17 25 62) 17]
Test Case: 326 | Input/Output: [(4 1 62 10) 1]
Test Case: 327 | Input/Output: [(88 24 18 39) 18]
Test Case: 328 | Input/Output: [(48 92 76 50) 48]
Test Case: 329 | Input/Output: [(96 99 5 50) 5]
Test Case: 330 | Input/Output: [(83 3 87 18) 3]
Test Case: 331 | Input/Output: [(62 74 17 18) 17]
Test Case: 332 | Input/Output: [(35 95 75 32) 32]
Test Case: 333 | Input/Output: [(98 80 69 95) 69]
Test Case: 334 | Input/Output: [(95 23 69 75) 23]
Test Case: 335 | Input/Output: [(69 46 10 4) 4]
Test Case: 336 | Input/Output: [(98 73 12 97) 12]
Test Case: 337 | Input/Output: [(33 42 75 9) 9]
Test Case: 338 | Input/Output: [(90 63 39 29) 29]
Test Case: 339 | Input/Output: [(88 77 41 15) 15]
Test Case: 340 | Input/Output: [(24 38 35 89) 24]
Test Case: 341 | Input/Output: [(83 21 13 73) 13]
Test Case: 342 | Input/Output: [(99 29 13 21) 13]
Test Case: 343 | Input/Output: [(31 83 2 97) 2]
Test Case: 344 | Input/Output: [(76 70 60 36) 36]
Test Case: 345 | Input/Output: [(81 38 75 71) 38]
Test Case: 346 | Input/Output: [(25 10 74 10) 10]
Test Case: 347 | Input/Output: [(79 86 12 73) 12]
Test Case: 348 | Input/Output: [(65 52 25 56) 25]
Test Case: 349 | Input/Output: [(92 6 59 87) 6]
Test Case: 350 | Input/Output: [(48 35 90 27) 27]
Test Case: 351 | Input/Output: [(91 43 83 96) 43]
Test Case: 352 | Input/Output: [(19 25 62 98) 19]
Test Case: 353 | Input/Output: [(100 70 67 58) 58]
Test Case: 354 | Input/Output: [(30 49 64 51) 30]
Test Case: 355 | Input/Output: [(36 46 80 11) 11]
Test Case: 356 | Input/Output: [(10 89 66 16) 10]
Test Case: 357 | Input/Output: [(53 66 81 44) 44]
Test Case: 358 | Input/Output: [(64 0 19 33) 0]
Test Case: 359 | Input/Output: [(40 58 53 57) 40]
Test Case: 360 | Input/Output: [(73 89 52 60) 52]
Test Case: 361 | Input/Output: [(98 24 43 41) 24]
Test Case: 362 | Input/Output: [(29 3 38 87) 3]
Test Case: 363 | Input/Output: [(100 33 38 32) 32]
Test Case: 364 | Input/Output: [(59 57 98 99) 57]
Test Case: 365 | Input/Output: [(20 71 78 93) 20]
Test Case: 366 | Input/Output: [(74 76 14 74) 14]
Test Case: 367 | Input/Output: [(43 89 0 57) 0]
Test Case: 368 | Input/Output: [(97 34 31 64) 31]
Test Case: 369 | Input/Output: [(82 32 93 58) 32]
Test Case: 370 | Input/Output: [(60 47 95 8) 8]
Test Case: 371 | Input/Output: [(35 48 43 61) 35]
Test Case: 372 | Input/Output: [(26 56 6 38) 6]
Test Case: 373 | Input/Output: [(96 3 4 67) 3]
Test Case: 374 | Input/Output: [(60 100 70 96) 60]
Test Case: 375 | Input/Output: [(47 67 95 11) 11]
Test Case: 376 | Input/Output: [(69 87 21 40) 21]
Test Case: 377 | Input/Output: [(65 46 98 38) 38]
Test Case: 378 | Input/Output: [(98 100 83 37) 37]
Test Case: 379 | Input/Output: [(90 2 37 90) 2]
Test Case: 380 | Input/Output: [(45 28 77 22) 22]
Test Case: 381 | Input/Output: [(27 74 27 64) 27]
Test Case: 382 | Input/Output: [(11 35 23 81) 11]
Test Case: 383 | Input/Output: [(34 57 56 96) 34]
Test Case: 384 | Input/Output: [(93 60 92 97) 60]
Test Case: 385 | Input/Output: [(11 26 5 71) 5]
Test Case: 386 | Input/Output: [(46 41 48 35) 35]
Test Case: 387 | Input/Output: [(71 48 69 46) 46]
Test Case: 388 | Input/Output: [(63 76 38 0) 0]
Test Case: 389 | Input/Output: [(66 21 19 88) 19]
Test Case: 390 | Input/Output: [(79 76 59 68) 59]
Test Case: 391 | Input/Output: [(34 95 19 63) 19]
Test Case: 392 | Input/Output: [(14 34 88 84) 14]
Test Case: 393 | Input/Output: [(18 43 84 22) 18]
Test Case: 394 | Input/Output: [(88 10 6 72) 6]
Test Case: 395 | Input/Output: [(41 67 98 50) 41]
Test Case: 396 | Input/Output: [(48 55 41 87) 41]
Test Case: 397 | Input/Output: [(8 8 70 1) 1]
Test Case: 398 | Input/Output: [(27 25 60 84) 25]
Test Case: 399 | Input/Output: [(23 87 3 58) 3]
Test Case: 400 | Input/Output: [(46 86 -100 87) -100]
Test Case: 401 | Input/Output: [(42 0 68 36) 0]
Test Case: 402 | Input/Output: [(7 -11 24 -4) -11]
Test Case: 403 | Input/Output: [(-77 36 84 -93) -93]
Test Case: 404 | Input/Output: [(-1 3 -88 56) -88]
Test Case: 405 | Input/Output: [(82 -83 -96 -12) -96]
Test Case: 406 | Input/Output: [(83 63 -18 50) -18]
Test Case: 407 | Input/Output: [(-35 70 39 76) -35]
Test Case: 408 | Input/Output: [(17 12 -5 63) -5]
Test Case: 409 | Input/Output: [(-10 -90 -3 88) -90]
Test Case: 410 | Input/Output: [(32 24 95 -92) -92]
Test Case: 411 | Input/Output: [(48 -13 -5 -97) -97]
Test Case: 412 | Input/Output: [(97 90 -54 14) -54]
Test Case: 413 | Input/Output: [(60 33 56 58) 33]
Test Case: 414 | Input/Output: [(-97 -86 97 33) -97]
Test Case: 415 | Input/Output: [(-20 93 33 25) -20]
Test Case: 416 | Input/Output: [(-25 27 -65 65) -65]
Test Case: 417 | Input/Output: [(5 -26 50 -31) -31]
Test Case: 418 | Input/Output: [(13 49 -47 64) -47]
Test Case: 419 | Input/Output: [(90 -19 -99 70) -99]
Test Case: 420 | Input/Output: [(-17 35 -54 6) -54]
Test Case: 421 | Input/Output: [(-84 67 80 71) -84]
Test Case: 422 | Input/Output: [(100 88 -99 -58) -99]
Test Case: 423 | Input/Output: [(-62 73 -30 61) -62]
Test Case: 424 | Input/Output: [(-9 58 -22 -25) -25]
Test Case: 425 | Input/Output: [(21 53 -87 -77) -87]
Test Case: 426 | Input/Output: [(-75 -59 87 84) -75]
Test Case: 427 | Input/Output: [(94 18 9 43) 9]
Test Case: 428 | Input/Output: [(-31 34 85 -19) -31]
Test Case: 429 | Input/Output: [(-99 80 39 41) -99]
Test Case: 430 | Input/Output: [(0 64 -72 -53) -72]
Test Case: 431 | Input/Output: [(56 11 68 65) 11]
Test Case: 432 | Input/Output: [(36 -54 -35 25) -54]
Test Case: 433 | Input/Output: [(61 16 -27 -38) -38]
Test Case: 434 | Input/Output: [(-97 -70 81 4) -97]
Test Case: 435 | Input/Output: [(-7 -58 -32 22) -58]
Test Case: 436 | Input/Output: [(-23 -91 14 -64) -91]
Test Case: 437 | Input/Output: [(-46 56 -94 10) -94]
Test Case: 438 | Input/Output: [(30 -48 -51 -23) -51]
Test Case: 439 | Input/Output: [(-34 -8 -6 -17) -34]
Test Case: 440 | Input/Output: [(100 50 -17 -31) -31]
Test Case: 441 | Input/Output: [(-52 23 -38 -75) -75]
Test Case: 442 | Input/Output: [(71 92 -3 72) -3]
Test Case: 443 | Input/Output: [(76 -50 11 -56) -56]
Test Case: 444 | Input/Output: [(51 -15 97 78) -15]
Test Case: 445 | Input/Output: [(-80 -78 -20 5) -80]
Test Case: 446 | Input/Output: [(-26 9 42 -17) -26]
Test Case: 447 | Input/Output: [(61 -86 -37 60) -86]
Test Case: 448 | Input/Output: [(6 81 -96 -33) -96]
Test Case: 449 | Input/Output: [(-17 -34 -99 34) -99]
Test Case: 450 | Input/Output: [(88 -99 78 -67) -99]
Test Case: 451 | Input/Output: [(47 -72 -88 -88) -88]
Test Case: 452 | Input/Output: [(67 73 84 -17) -17]
Test Case: 453 | Input/Output: [(-27 1 -3 -11) -27]
Test Case: 454 | Input/Output: [(1 -91 89 42) -91]
Test Case: 455 | Input/Output: [(-27 50 63 -48) -48]
Test Case: 456 | Input/Output: [(-97 -11 -70 22) -97]
Test Case: 457 | Input/Output: [(-36 56 72 65) -36]
Test Case: 458 | Input/Output: [(35 -12 -94 9) -94]
Test Case: 459 | Input/Output: [(40 -48 -49 43) -49]
Test Case: 460 | Input/Output: [(20 95 -81 1) -81]
Test Case: 461 | Input/Output: [(-36 79 25 -37) -37]
Test Case: 462 | Input/Output: [(-19 -93 -30 -76) -93]
Test Case: 463 | Input/Output: [(-82 -34 -55 -30) -82]
Test Case: 464 | Input/Output: [(-7 -27 42 -26) -27]
Test Case: 465 | Input/Output: [(-39 -95 -99 -65) -99]
Test Case: 466 | Input/Output: [(-70 -34 -2 -4) -70]
Test Case: 467 | Input/Output: [(40 -59 75 76) -59]
Test Case: 468 | Input/Output: [(-20 -59 93 76) -59]
Test Case: 469 | Input/Output: [(-10 85 -79 -40) -79]
Test Case: 470 | Input/Output: [(82 36 -42 -53) -53]
Test Case: 471 | Input/Output: [(30 70 -32 -24) -32]
Test Case: 472 | Input/Output: [(8 -30 -36 -61) -61]
Test Case: 473 | Input/Output: [(96 0 -56 -65) -65]
Test Case: 474 | Input/Output: [(-26 -92 4 -55) -92]
Test Case: 475 | Input/Output: [(-17 65 -30 85) -30]
Test Case: 476 | Input/Output: [(19 -98 -70 -50) -98]
Test Case: 477 | Input/Output: [(15 -57 83 8) -57]
Test Case: 478 | Input/Output: [(-5 -10 -63 35) -63]
Test Case: 479 | Input/Output: [(77 -53 -57 -17) -57]
Test Case: 480 | Input/Output: [(66 -54 52 66) -54]
Test Case: 481 | Input/Output: [(35 31 -80 -55) -80]
Test Case: 482 | Input/Output: [(63 94 -39 -15) -39]
Test Case: 483 | Input/Output: [(-17 -94 63 5) -94]
Test Case: 484 | Input/Output: [(-66 -92 -29 19) -92]
Test Case: 485 | Input/Output: [(-48 4 -21 0) -48]
Test Case: 486 | Input/Output: [(57 -5 -81 61) -81]
Test Case: 487 | Input/Output: [(-86 -30 60 -75) -86]
Test Case: 488 | Input/Output: [(32 -38 33 24) -38]
Test Case: 489 | Input/Output: [(-19 -31 -57 -69) -69]
Test Case: 490 | Input/Output: [(52 35 43 -56) -56]
Test Case: 491 | Input/Output: [(-56 34 -56 9) -56]
Test Case: 492 | Input/Output: [(-29 73 9 11) -29]
Test Case: 493 | Input/Output: [(98 98 56 20) 20]
Test Case: 494 | Input/Output: [(-48 56 -79 -2) -79]
Test Case: 495 | Input/Output: [(47 88 -79 -51) -79]
Test Case: 496 | Input/Output: [(93 94 43 -75) -75]
Test Case: 497 | Input/Output: [(19 -34 -44 4) -44]
Test Case: 498 | Input/Output: [(-83 49 57 68) -83]
Test Case: 499 | Input/Output: [(92 -28 37 77) -28]
Test Case: 500 | Input/Output: [(-77 29 4 -98) -98]
Test Case: 501 | Input/Output: [(38 27 31 -91) -91]
Test Case: 502 | Input/Output: [(64 -29 -41 42) -41]
Test Case: 503 | Input/Output: [(98 -35 -49 -23) -49]
Test Case: 504 | Input/Output: [(84 16 57 88) 16]
Test Case: 505 | Input/Output: [(-86 41 -56 78) -86]
Test Case: 506 | Input/Output: [(-18 -38 37 -84) -84]
Test Case: 507 | Input/Output: [(-59 39 -56 8) -59]
Test Case: 508 | Input/Output: [(-26 47 -39 -37) -39]
Test Case: 509 | Input/Output: [(-79 -68 53 55) -79]
Test Case: 510 | Input/Output: [(-70 -6 83 61) -70]
Test Case: 511 | Input/Output: [(87 -97 99 34) -97]
Test Case: 512 | Input/Output: [(60 -77 -12 -79) -79]
Test Case: 513 | Input/Output: [(99 -96 87 42) -96]
Test Case: 514 | Input/Output: [(57 100 82 20) 20]
Test Case: 515 | Input/Output: [(37 78 -19 -65) -65]
Test Case: 516 | Input/Output: [(-2 72 80 -21) -21]
Test Case: 517 | Input/Output: [(-28 -96 3 -18) -96]
Test Case: 518 | Input/Output: [(-37 73 59 49) -37]
Test Case: 519 | Input/Output: [(69 -26 35 -78) -78]
Test Case: 520 | Input/Output: [(-31 92 65 44) -31]
Test Case: 521 | Input/Output: [(-45 -88 -90 -70) -90]
Test Case: 522 | Input/Output: [(14 -79 43 -51) -79]
Test Case: 523 | Input/Output: [(89 31 -96 -93) -96]
Test Case: 524 | Input/Output: [(47 89 -93 -13) -93]
Test Case: 525 | Input/Output: [(-28 -29 5 -48) -48]
Test Case: 526 | Input/Output: [(48 -13 32 -68) -68]
Test Case: 527 | Input/Output: [(-27 28 29 65) -27]
Test Case: 528 | Input/Output: [(-75 2 -55 -19) -75]
Test Case: 529 | Input/Output: [(-65 -40 -67 28) -67]
Test Case: 530 | Input/Output: [(-9 -79 61 53) -79]
Test Case: 531 | Input/Output: [(-2 38 61 73) -2]
Test Case: 532 | Input/Output: [(-75 -58 -26 -86) -86]
Test Case: 533 | Input/Output: [(-76 -2 83 95) -76]
Test Case: 534 | Input/Output: [(-34 -50 -81 -34) -81]
Test Case: 535 | Input/Output: [(9 94 -100 84) -100]
Test Case: 536 | Input/Output: [(-66 82 28 19) -66]
Test Case: 537 | Input/Output: [(58 -77 84 30) -77]
Test Case: 538 | Input/Output: [(47 72 -73 -84) -84]
Test Case: 539 | Input/Output: [(-78 23 28 18) -78]
Test Case: 540 | Input/Output: [(20 38 -7 40) -7]
Test Case: 541 | Input/Output: [(58 -25 -78 89) -78]
Test Case: 542 | Input/Output: [(4 13 99 -61) -61]
Test Case: 543 | Input/Output: [(52 -32 87 38) -32]
Test Case: 544 | Input/Output: [(-64 -15 77 -82) -82]
Test Case: 545 | Input/Output: [(-49 73 -80 28) -80]
Test Case: 546 | Input/Output: [(40 -76 -96 -75) -96]
Test Case: 547 | Input/Output: [(24 -82 -89 14) -89]
Test Case: 548 | Input/Output: [(81 18 -8 87) -8]
Test Case: 549 | Input/Output: [(9 -96 96 -20) -96]
Test Case: 550 | Input/Output: [(75 91 -47 -77) -77]
Test Case: 551 | Input/Output: [(-68 -40 58 -15) -68]
Test Case: 552 | Input/Output: [(-10 -51 69 53) -51]
Test Case: 553 | Input/Output: [(14 -53 76 -6) -53]
Test Case: 554 | Input/Output: [(89 -3 68 -78) -78]
Test Case: 555 | Input/Output: [(-87 -86 36 -77) -87]
Test Case: 556 | Input/Output: [(-52 59 3 -37) -52]
Test Case: 557 | Input/Output: [(3 63 -93 -2) -93]
Test Case: 558 | Input/Output: [(47 39 -6 11) -6]
Test Case: 559 | Input/Output: [(-87 -3 15 -61) -87]
Test Case: 560 | Input/Output: [(-34 -75 4 -34) -75]
Test Case: 561 | Input/Output: [(73 -95 -34 -17) -95]
Test Case: 562 | Input/Output: [(-93 39 -83 -46) -93]
Test Case: 563 | Input/Output: [(98 -74 29 88) -74]
Test Case: 564 | Input/Output: [(-36 -50 68 35) -50]
Test Case: 565 | Input/Output: [(-26 95 87 -37) -37]
Test Case: 566 | Input/Output: [(59 -80 9 -44) -80]
Test Case: 567 | Input/Output: [(-29 82 12 9) -29]
Test Case: 568 | Input/Output: [(-13 -9 23 30) -13]
Test Case: 569 | Input/Output: [(43 -24 90 -27) -27]
Test Case: 570 | Input/Output: [(-11 0 -71 98) -71]
Test Case: 571 | Input/Output: [(-66 -20 52 36) -66]
Test Case: 572 | Input/Output: [(80 -72 -15 -26) -72]
Test Case: 573 | Input/Output: [(-78 37 -2 -8) -78]
Test Case: 574 | Input/Output: [(22 38 7 99) 7]
Test Case: 575 | Input/Output: [(16 16 -97 97) -97]
Test Case: 576 | Input/Output: [(-62 6 -63 -35) -63]
Test Case: 577 | Input/Output: [(5 26 74 -92) -92]
Test Case: 578 | Input/Output: [(-67 75 4 33) -67]
Test Case: 579 | Input/Output: [(15 12 -8 11) -8]
Test Case: 580 | Input/Output: [(44 71 -7 -80) -80]
Test Case: 581 | Input/Output: [(65 8 -32 -83) -83]
Test Case: 582 | Input/Output: [(35 -90 44 -58) -90]
Test Case: 583 | Input/Output: [(8 51 -6 -90) -90]
Test Case: 584 | Input/Output: [(9 -92 -52 53) -92]
Test Case: 585 | Input/Output: [(-30 -39 32 -21) -39]
Test Case: 586 | Input/Output: [(-34 -71 -62 47) -71]
Test Case: 587 | Input/Output: [(-81 14 -13 33) -81]
Test Case: 588 | Input/Output: [(32 43 95 17) 17]
Test Case: 589 | Input/Output: [(-100 92 -5 -91) -100]
Test Case: 590 | Input/Output: [(73 -100 33 58) -100]
Test Case: 591 | Input/Output: [(-1 39 35 21) -1]
Test Case: 592 | Input/Output: [(2 -32 -14 -57) -57]
Test Case: 593 | Input/Output: [(-56 -69 -8 79) -69]
Test Case: 594 | Input/Output: [(3 -16 -51 -34) -51]
Test Case: 595 | Input/Output: [(-88 96 39 -72) -88]
Test Case: 596 | Input/Output: [(-63 83 -60 -25) -63]
Test Case: 597 | Input/Output: [(18 -25 -61 96) -61]
Test Case: 598 | Input/Output: [(-60 26 41 68) -60]
Test Case: 599 | Input/Output: [(-20 41 -84 49) -84]
Test Case: 600 | Input/Output: [(-21 56 38 -53) -53]
Test Case: 601 | Input/Output: [(-4 84 70 58) -4]
Test Case: 602 | Input/Output: [(-45 -93 33 -91) -93]
Test Case: 603 | Input/Output: [(25 -31 11 57) -31]
Test Case: 604 | Input/Output: [(69 -46 98 -64) -64]
Test Case: 605 | Input/Output: [(-94 -43 -59 -28) -94]
Test Case: 606 | Input/Output: [(21 -81 42 -51) -81]
Test Case: 607 | Input/Output: [(-60 68 24 -32) -60]
Test Case: 608 | Input/Output: [(18 -91 -80 -100) -100]
Test Case: 609 | Input/Output: [(35 3 -22 83) -22]
Test Case: 610 | Input/Output: [(96 -42 92 40) -42]
Test Case: 611 | Input/Output: [(40 -30 -17 56) -30]
Test Case: 612 | Input/Output: [(-64 -27 -26 98) -64]
Test Case: 613 | Input/Output: [(57 78 66 -78) -78]
Test Case: 614 | Input/Output: [(-92 -57 -20 -6) -92]
Test Case: 615 | Input/Output: [(51 56 36 78) 36]
Test Case: 616 | Input/Output: [(39 -2 35 84) -2]
Test Case: 617 | Input/Output: [(-12 -72 21 -74) -74]
Test Case: 618 | Input/Output: [(72 15 -1 97) -1]
Test Case: 619 | Input/Output: [(8 61 -11 3) -11]
Test Case: 620 | Input/Output: [(18 -61 -97 48) -97]
Test Case: 621 | Input/Output: [(-15 -80 -94 75) -94]
Test Case: 622 | Input/Output: [(25 1 94 28) 1]
Test Case: 623 | Input/Output: [(-23 74 71 -45) -45]
Test Case: 624 | Input/Output: [(75 95 98 88) 75]
Test Case: 625 | Input/Output: [(80 35 -19 57) -19]
Test Case: 626 | Input/Output: [(13 86 22 -33) -33]
Test Case: 627 | Input/Output: [(63 74 -37 -89) -89]
Test Case: 628 | Input/Output: [(-93 -75 22 -9) -93]
Test Case: 629 | Input/Output: [(-38 -87 -72 -95) -95]
Test Case: 630 | Input/Output: [(34 76 -74 80) -74]
Test Case: 631 | Input/Output: [(61 -77 -93 60) -93]
Test Case: 632 | Input/Output: [(18 -92 -42 29) -92]
Test Case: 633 | Input/Output: [(-73 0 -13 65) -73]
Test Case: 634 | Input/Output: [(-37 -91 -71 12) -91]
Test Case: 635 | Input/Output: [(-46 39 -66 -16) -66]
Test Case: 636 | Input/Output: [(-85 -31 51 -86) -86]
Test Case: 637 | Input/Output: [(13 -88 -50 29) -88]
Test Case: 638 | Input/Output: [(61 51 -33 61) -33]
Test Case: 639 | Input/Output: [(-75 68 64 -42) -75]
Test Case: 640 | Input/Output: [(-28 94 94 -10) -28]
Test Case: 641 | Input/Output: [(-76 -92 8 -2) -92]
Test Case: 642 | Input/Output: [(63 -29 -54 -84) -84]
Test Case: 643 | Input/Output: [(17 -93 46 73) -93]
Test Case: 644 | Input/Output: [(-46 20 72 -73) -73]
Test Case: 645 | Input/Output: [(-94 99 36 -100) -100]
Test Case: 646 | Input/Output: [(36 -57 89 -76) -76]
Test Case: 647 | Input/Output: [(-84 -63 -42 -72) -84]
Test Case: 648 | Input/Output: [(91 22 -82 -40) -82]
Test Case: 649 | Input/Output: [(31 21 27 94) 21]
Test Case: 650 | Input/Output: [(-72 79 -87 14) -87]
Test Case: 651 | Input/Output: [(-26 91 34 32) -26]
Test Case: 652 | Input/Output: [(-5 -56 -17 -93) -93]
Test Case: 653 | Input/Output: [(-64 76 96 96) -64]
Test Case: 654 | Input/Output: [(97 40 100 82) 40]
Test Case: 655 | Input/Output: [(90 89 -44 -57) -57]
Test Case: 656 | Input/Output: [(95 3 -80 -8) -80]
Test Case: 657 | Input/Output: [(-6 54 92 21) -6]
Test Case: 658 | Input/Output: [(25 83 77 -31) -31]
Test Case: 659 | Input/Output: [(-9 -79 -43 64) -79]
Test Case: 660 | Input/Output: [(-77 12 -91 92) -91]
Test Case: 661 | Input/Output: [(98 76 -47 68) -47]
Test Case: 662 | Input/Output: [(52 44 -40 13) -40]
Test Case: 663 | Input/Output: [(55 -90 79 -36) -90]
Test Case: 664 | Input/Output: [(-22 68 65 -1) -22]
Test Case: 665 | Input/Output: [(-34 -33 -74 13) -74]
Test Case: 666 | Input/Output: [(-48 18 -22 -29) -48]
Test Case: 667 | Input/Output: [(-12 5 35 32) -12]
Test Case: 668 | Input/Output: [(-62 -5 29 56) -62]
Test Case: 669 | Input/Output: [(96 -46 50 6) -46]
Test Case: 670 | Input/Output: [(41 65 -68 -83) -83]
Test Case: 671 | Input/Output: [(10 53 12 33) 10]
Test Case: 672 | Input/Output: [(-50 36 -49 48) -50]
Test Case: 673 | Input/Output: [(-18 -76 -4 14) -76]
Test Case: 674 | Input/Output: [(-4 85 -80 69) -80]
Test Case: 675 | Input/Output: [(-6 -61 -43 -21) -61]
Test Case: 676 | Input/Output: [(38 11 43 12) 11]
Test Case: 677 | Input/Output: [(3 72 60 -60) -60]
Test Case: 678 | Input/Output: [(-30 90 92 59) -30]
Test Case: 679 | Input/Output: [(-99 73 -58 84) -99]
Test Case: 680 | Input/Output: [(-71 -76 -24 -83) -83]
Test Case: 681 | Input/Output: [(1 47 98 -7) -7]
Test Case: 682 | Input/Output: [(-50 -89 -81 -43) -89]
Test Case: 683 | Input/Output: [(-87 -64 -21 -77) -87]
Test Case: 684 | Input/Output: [(47 67 61 -71) -71]
Test Case: 685 | Input/Output: [(95 -50 -85 70) -85]
Test Case: 686 | Input/Output: [(-57 70 -83 80) -83]
Test Case: 687 | Input/Output: [(-63 -12 -81 -15) -81]
Test Case: 688 | Input/Output: [(44 88 -97 11) -97]
Test Case: 689 | Input/Output: [(-1 15 -41 -58) -58]
Test Case: 690 | Input/Output: [(-83 60 72 58) -83]
Test Case: 691 | Input/Output: [(-2 -8 57 -91) -91]
Test Case: 692 | Input/Output: [(16 74 -12 -72) -72]
Test Case: 693 | Input/Output: [(-47 -42 -47 35) -47]
Test Case: 694 | Input/Output: [(69 -59 -80 30) -80]
Test Case: 695 | Input/Output: [(-6 50 81 69) -6]
Test Case: 696 | Input/Output: [(17 -49 -95 -14) -95]
Test Case: 697 | Input/Output: [(-52 -29 81 -24) -52]
Test Case: 698 | Input/Output: [(-50 -1 71 -40) -50]
Test Case: 699 | Input/Output: [(53 51 -51 25) -51]
Test Case: 700 | Input/Output: [(14 -60 -95 71) -95]
Test Case: 701 | Input/Output: [(-86 -4 84 21) -86]
Test Case: 702 | Input/Output: [(-90 -96 -39 66) -96]
Test Case: 703 | Input/Output: [(80 73 -63 -42) -63]
Test Case: 704 | Input/Output: [(51 45 34 80) 34]
Test Case: 705 | Input/Output: [(-83 70 -29 -25) -83]
Test Case: 706 | Input/Output: [(92 -52 74 57) -52]
Test Case: 707 | Input/Output: [(41 -55 -66 64) -66]
Test Case: 708 | Input/Output: [(9 1 56 -2) -2]
Test Case: 709 | Input/Output: [(69 -35 81 -93) -93]
Test Case: 710 | Input/Output: [(56 62 -27 -90) -90]
Test Case: 711 | Input/Output: [(-40 62 -34 -82) -82]
Test Case: 712 | Input/Output: [(33 4 -96 -40) -96]
Test Case: 713 | Input/Output: [(-8 0 83 -89) -89]
Test Case: 714 | Input/Output: [(90 94 89 95) 89]
Test Case: 715 | Input/Output: [(25 80 -72 -13) -72]
Test Case: 716 | Input/Output: [(-95 -40 26 66) -95]
Test Case: 717 | Input/Output: [(55 -95 -20 -58) -95]
Test Case: 718 | Input/Output: [(-100 -52 98 74) -100]
Test Case: 719 | Input/Output: [(-81 30 -93 22) -93]
Test Case: 720 | Input/Output: [(-70 -88 -13 -89) -89]
Test Case: 721 | Input/Output: [(73 96 -66 9) -66]
Test Case: 722 | Input/Output: [(85 -25 86 -89) -89]
Test Case: 723 | Input/Output: [(-27 -7 96 -59) -59]
Test Case: 724 | Input/Output: [(-16 82 -32 41) -32]
Test Case: 725 | Input/Output: [(-65 -97 -79 37) -97]
Test Case: 726 | Input/Output: [(33 -41 96 12) -41]
Test Case: 727 | Input/Output: [(75 62 95 81) 62]
Test Case: 728 | Input/Output: [(-26 81 80 80) -26]
Test Case: 729 | Input/Output: [(52 100 -11 28) -11]
Test Case: 730 | Input/Output: [(39 -93 75 -40) -93]
Test Case: 731 | Input/Output: [(-51 -75 -95 -29) -95]
Test Case: 732 | Input/Output: [(80 -33 50 34) -33]
Test Case: 733 | Input/Output: [(11 49 31 85) 11]
Test Case: 734 | Input/Output: [(58 -96 -50 -17) -96]
Test Case: 735 | Input/Output: [(97 -44 -36 70) -44]
Test Case: 736 | Input/Output: [(-53 -30 14 63) -53]
Test Case: 737 | Input/Output: [(-78 -63 -26 12) -78]
Test Case: 738 | Input/Output: [(-47 21 -91 42) -91]
Test Case: 739 | Input/Output: [(-99 52 -38 -10) -99]
Test Case: 740 | Input/Output: [(-92 49 98 -6) -92]
Test Case: 741 | Input/Output: [(-29 93 28 78) -29]
Test Case: 742 | Input/Output: [(-45 63 6 -97) -97]
Test Case: 743 | Input/Output: [(84 36 85 45) 36]
Test Case: 744 | Input/Output: [(10 68 5 30) 5]
Test Case: 745 | Input/Output: [(97 -47 31 16) -47]
Test Case: 746 | Input/Output: [(-85 -69 35 -40) -85]
Test Case: 747 | Input/Output: [(86 -64 52 76) -64]
Test Case: 748 | Input/Output: [(62 65 37 92) 37]
Test Case: 749 | Input/Output: [(4 -65 27 -14) -65]
Test Case: 750 | Input/Output: [(-83 -97 88 -90) -97]
Test Case: 751 | Input/Output: [(22 26 -64 -82) -82]
Test Case: 752 | Input/Output: [(-100 -90 -91 -50) -100]
Test Case: 753 | Input/Output: [(62 -36 -59 4) -59]
Test Case: 754 | Input/Output: [(-15 -28 44 20) -28]
Test Case: 755 | Input/Output: [(97 -26 -17 62) -26]
Test Case: 756 | Input/Output: [(-50 66 -20 13) -50]
Test Case: 757 | Input/Output: [(-40 59 -27 -91) -91]
Test Case: 758 | Input/Output: [(49 27 17 0) 0]
Test Case: 759 | Input/Output: [(-6 10 79 -60) -60]
Test Case: 760 | Input/Output: [(24 99 -84 10) -84]
Test Case: 761 | Input/Output: [(2 -87 77 68) -87]
Test Case: 762 | Input/Output: [(-11 -10 95 9) -11]
Test Case: 763 | Input/Output: [(-5 -36 -6 -42) -42]
Test Case: 764 | Input/Output: [(-85 -69 94 74) -85]
Test Case: 765 | Input/Output: [(3 2 -19 81) -19]
Test Case: 766 | Input/Output: [(-22 -88 31 84) -88]
Test Case: 767 | Input/Output: [(6 -43 -3 -58) -58]
Test Case: 768 | Input/Output: [(4 1 83 -29) -29]
Test Case: 769 | Input/Output: [(-18 64 29 -44) -44]
Test Case: 770 | Input/Output: [(-58 -93 100 52) -93]
Test Case: 771 | Input/Output: [(-37 35 44 90) -37]
Test Case: 772 | Input/Output: [(23 -82 -11 92) -82]
Test Case: 773 | Input/Output: [(-10 -59 61 46) -59]
Test Case: 774 | Input/Output: [(-32 -47 -63 57) -63]
Test Case: 775 | Input/Output: [(39 -86 30 74) -86]
Test Case: 776 | Input/Output: [(37 84 5 -72) -72]
Test Case: 777 | Input/Output: [(65 -32 4 81) -32]
Test Case: 778 | Input/Output: [(-81 33 -4 17) -81]
Test Case: 779 | Input/Output: [(-73 100 -10 -18) -73]
Test Case: 780 | Input/Output: [(-83 -73 72 0) -83]
Test Case: 781 | Input/Output: [(64 30 37 -18) -18]
Test Case: 782 | Input/Output: [(43 32 -95 -54) -95]
Test Case: 783 | Input/Output: [(-51 10 83 52) -51]
Test Case: 784 | Input/Output: [(-39 95 -11 -78) -78]
Test Case: 785 | Input/Output: [(-38 12 -59 93) -59]
Test Case: 786 | Input/Output: [(7 21 49 56) 7]
Test Case: 787 | Input/Output: [(26 96 93 -21) -21]
Test Case: 788 | Input/Output: [(42 50 -92 -48) -92]
Test Case: 789 | Input/Output: [(36 77 -28 70) -28]
Test Case: 790 | Input/Output: [(20 0 -27 -13) -27]
Test Case: 791 | Input/Output: [(-43 22 33 -77) -77]
Test Case: 792 | Input/Output: [(28 54 -98 17) -98]
Test Case: 793 | Input/Output: [(-24 3 -3 47) -24]
Test Case: 794 | Input/Output: [(66 75 -82 90) -82]
Test Case: 795 | Input/Output: [(-38 0 74 41) -38]
Test Case: 796 | Input/Output: [(57 96 -75 -100) -100]
Test Case: 797 | Input/Output: [(79 -82 80 23) -82]
Test Case: 798 | Input/Output: [(59 -44 23 -76) -76]
Test Case: 799 | Input/Output: [(67 -40 -83 46) -83]
Test Case: 800 | Input/Output: [(-72 48 1 -83) -83]
Test Case: 801 | Input/Output: [(25 100 -24 67) -24]
Test Case: 802 | Input/Output: [(-76 61 29 -13) -76]
Test Case: 803 | Input/Output: [(58 -66 -24 -11) -66]
Test Case: 804 | Input/Output: [(-72 -55 -47 -67) -72]
Test Case: 805 | Input/Output: [(-95 24 -71 73) -95]
Test Case: 806 | Input/Output: [(-5 -98 85 -46) -98]
Test Case: 807 | Input/Output: [(30 -58 82 -74) -74]
Test Case: 808 | Input/Output: [(-89 16 -79 22) -89]
Test Case: 809 | Input/Output: [(12 55 -75 86) -75]
Test Case: 810 | Input/Output: [(-94 13 -29 -57) -94]
Test Case: 811 | Input/Output: [(-10 22 98 73) -10]
Test Case: 812 | Input/Output: [(-15 -13 -84 15) -84]
Test Case: 813 | Input/Output: [(-61 -57 56 -51) -61]
Test Case: 814 | Input/Output: [(38 -90 35 82) -90]
Test Case: 815 | Input/Output: [(95 59 41 34) 34]
Test Case: 816 | Input/Output: [(56 -24 -9 -14) -24]
Test Case: 817 | Input/Output: [(-11 -52 -20 27) -52]
Test Case: 818 | Input/Output: [(-74 79 -56 -93) -93]
Test Case: 819 | Input/Output: [(8 -71 -6 -53) -71]
Test Case: 820 | Input/Output: [(-65 11 -81 4) -81]
Test Case: 821 | Input/Output: [(-36 -88 72 44) -88]
Test Case: 822 | Input/Output: [(55 -65 -58 51) -65]
Test Case: 823 | Input/Output: [(-70 -89 -98 51) -98]
Test Case: 824 | Input/Output: [(-42 20 81 20) -42]
Test Case: 825 | Input/Output: [(-22 41 3 -53) -53]
Test Case: 826 | Input/Output: [(43 -92 39 2) -92]
Test Case: 827 | Input/Output: [(83 -5 77 86) -5]
Test Case: 828 | Input/Output: [(11 -94 34 -50) -94]
Test Case: 829 | Input/Output: [(5 18 -82 -35) -82]
Test Case: 830 | Input/Output: [(-100 -68 38 -11) -100]
Test Case: 831 | Input/Output: [(-43 -70 -88 62) -88]
Test Case: 832 | Input/Output: [(14 95 -93 -22) -93]
Test Case: 833 | Input/Output: [(12 85 -15 -75) -75]
Test Case: 834 | Input/Output: [(99 -21 -78 -75) -78]
Test Case: 835 | Input/Output: [(89 88 -16 80) -16]
Test Case: 836 | Input/Output: [(-13 -100 18 40) -100]
Test Case: 837 | Input/Output: [(-64 -2 56 -81) -81]
Test Case: 838 | Input/Output: [(15 82 41 -85) -85]
Test Case: 839 | Input/Output: [(-60 -88 -31 10) -88]
Test Case: 840 | Input/Output: [(-16 -50 -47 -70) -70]
Test Case: 841 | Input/Output: [(14 -71 35 12) -71]
Test Case: 842 | Input/Output: [(-23 -94 -54 84) -94]
Test Case: 843 | Input/Output: [(-74 -35 -54 -82) -82]
Test Case: 844 | Input/Output: [(-28 52 29 5) -28]
Test Case: 845 | Input/Output: [(45 31 -44 -88) -88]
Test Case: 846 | Input/Output: [(-84 58 -20 78) -84]
Test Case: 847 | Input/Output: [(-9 53 67 -52) -52]
Test Case: 848 | Input/Output: [(-67 -13 18 15) -67]
Test Case: 849 | Input/Output: [(68 46 -34 84) -34]
Test Case: 850 | Input/Output: [(-4 -83 -53 41) -83]
Test Case: 851 | Input/Output: [(46 15 0 -29) -29]
Test Case: 852 | Input/Output: [(-41 -75 0 -58) -75]
Test Case: 853 | Input/Output: [(-84 18 10 41) -84]
Test Case: 854 | Input/Output: [(-27 -35 -9 43) -35]
Test Case: 855 | Input/Output: [(-95 -55 83 31) -95]
Test Case: 856 | Input/Output: [(56 34 -85 -89) -89]
Test Case: 857 | Input/Output: [(-47 71 93 70) -47]
Test Case: 858 | Input/Output: [(-35 95 -47 -17) -47]
Test Case: 859 | Input/Output: [(31 61 60 -66) -66]
Test Case: 860 | Input/Output: [(-97 85 -9 -83) -97]
Test Case: 861 | Input/Output: [(58 -41 -3 34) -41]
Test Case: 862 | Input/Output: [(-22 -47 69 53) -47]
Test Case: 863 | Input/Output: [(-5 48 -73 85) -73]
Test Case: 864 | Input/Output: [(-83 -29 20 14) -83]
Test Case: 865 | Input/Output: [(92 -29 -44 8) -44]
Test Case: 866 | Input/Output: [(12 -90 51 70) -90]
Test Case: 867 | Input/Output: [(91 -57 35 40) -57]
Test Case: 868 | Input/Output: [(94 43 -84 59) -84]
Test Case: 869 | Input/Output: [(-45 98 36 -23) -45]
Test Case: 870 | Input/Output: [(68 36 -98 -79) -98]
Test Case: 871 | Input/Output: [(89 97 63 -81) -81]
Test Case: 872 | Input/Output: [(43 -73 32 -38) -73]
Test Case: 873 | Input/Output: [(-76 -47 94 -33) -76]
Test Case: 874 | Input/Output: [(65 -97 17 -58) -97]
Test Case: 875 | Input/Output: [(30 -29 -1 -54) -54]
Test Case: 876 | Input/Output: [(-43 -74 46 61) -74]
Test Case: 877 | Input/Output: [(-46 -91 -52 -75) -91]
Test Case: 878 | Input/Output: [(1 -98 -89 -47) -98]
Test Case: 879 | Input/Output: [(35 23 -64 9) -64]
Test Case: 880 | Input/Output: [(29 -100 -79 40) -100]
Test Case: 881 | Input/Output: [(33 29 34 21) 21]
Test Case: 882 | Input/Output: [(-78 75 -11 -43) -78]
Test Case: 883 | Input/Output: [(78 -23 -75 20) -75]
Test Case: 884 | Input/Output: [(-89 -81 49 -39) -89]
Test Case: 885 | Input/Output: [(7 36 38 72) 7]
Test Case: 886 | Input/Output: [(23 53 54 -85) -85]
Test Case: 887 | Input/Output: [(-19 12 42 -27) -27]
Test Case: 888 | Input/Output: [(-63 34 48 -100) -100]
Test Case: 889 | Input/Output: [(-22 -80 59 -18) -80]
Test Case: 890 | Input/Output: [(-57 21 33 70) -57]
Test Case: 891 | Input/Output: [(45 48 10 85) 10]
Test Case: 892 | Input/Output: [(46 -35 -67 0) -67]
Test Case: 893 | Input/Output: [(90 -66 -40 -76) -76]
Test Case: 894 | Input/Output: [(-40 41 -42 76) -42]
Test Case: 895 | Input/Output: [(51 -22 64 11) -22]
Test Case: 896 | Input/Output: [(-54 12 -25 85) -54]
Test Case: 897 | Input/Output: [(-84 -67 8 100) -84]
Test Case: 898 | Input/Output: [(-71 -37 -25 87) -71]
Test Case: 899 | Input/Output: [(64 -35 -74 -85) -85]
Test Case: 900 | Input/Output: [(94 -62 20 100) -62]
Test Case: 901 | Input/Output: [(9 -98 -17 -71) -98]
Test Case: 902 | Input/Output: [(-87 -10 -38 -21) -87]
Test Case: 903 | Input/Output: [(-50 78 -68 -47) -68]
Test Case: 904 | Input/Output: [(82 30 28 43) 28]
Test Case: 905 | Input/Output: [(-51 87 -78 -31) -78]
Test Case: 906 | Input/Output: [(52 58 -88 24) -88]
Test Case: 907 | Input/Output: [(88 -63 50 -45) -63]
Test Case: 908 | Input/Output: [(70 92 81 -18) -18]
Test Case: 909 | Input/Output: [(6 77 -28 0) -28]
Test Case: 910 | Input/Output: [(-55 -44 10 36) -55]
Test Case: 911 | Input/Output: [(-5 26 95 -100) -100]
Test Case: 912 | Input/Output: [(54 -87 46 93) -87]
Test Case: 913 | Input/Output: [(31 80 49 76) 31]
Test Case: 914 | Input/Output: [(10 -14 -21 19) -21]
Test Case: 915 | Input/Output: [(-72 32 -30 -36) -72]
Test Case: 916 | Input/Output: [(-30 100 -15 -90) -90]
Test Case: 917 | Input/Output: [(68 35 -12 96) -12]
Test Case: 918 | Input/Output: [(-15 67 -16 -11) -16]
Test Case: 919 | Input/Output: [(-60 -31 -43 -58) -60]
Test Case: 920 | Input/Output: [(-66 23 -100 42) -100]
Test Case: 921 | Input/Output: [(-12 -98 31 -81) -98]
Test Case: 922 | Input/Output: [(-97 33 -72 -21) -97]
Test Case: 923 | Input/Output: [(-18 -69 -92 95) -92]
Test Case: 924 | Input/Output: [(29 -86 -34 1) -86]
Test Case: 925 | Input/Output: [(-4 -61 61 77) -61]
Test Case: 926 | Input/Output: [(21 22 -100 2) -100]
Test Case: 927 | Input/Output: [(-69 40 -94 49) -94]
Test Case: 928 | Input/Output: [(-55 97 50 78) -55]
Test Case: 929 | Input/Output: [(76 84 -21 -7) -21]
Test Case: 930 | Input/Output: [(-70 97 -14 59) -70]
Test Case: 931 | Input/Output: [(-46 -47 54 -99) -99]
Test Case: 932 | Input/Output: [(17 -35 -58 0) -58]
Test Case: 933 | Input/Output: [(30 -54 -15 76) -54]
Test Case: 934 | Input/Output: [(-90 70 4 68) -90]
Test Case: 935 | Input/Output: [(97 38 57 -71) -71]
Test Case: 936 | Input/Output: [(47 19 0 18) 0]
Test Case: 937 | Input/Output: [(-3 70 71 94) -3]
Test Case: 938 | Input/Output: [(-90 -30 -76 -62) -90]
Test Case: 939 | Input/Output: [(75 9 -74 64) -74]
Test Case: 940 | Input/Output: [(16 -43 2 43) -43]
Test Case: 941 | Input/Output: [(62 -51 -60 -86) -86]
Test Case: 942 | Input/Output: [(-52 49 -36 19) -52]
Test Case: 943 | Input/Output: [(79 14 39 45) 14]
Test Case: 944 | Input/Output: [(-61 -80 94 -5) -80]
Test Case: 945 | Input/Output: [(6 72 3 -77) -77]
Test Case: 946 | Input/Output: [(41 -68 25 -77) -77]
Test Case: 947 | Input/Output: [(-75 -87 68 66) -87]
Test Case: 948 | Input/Output: [(-24 -89 40 84) -89]
Test Case: 949 | Input/Output: [(-23 57 51 -57) -57]
Test Case: 950 | Input/Output: [(-12 -47 -48 -23) -48]
Test Case: 951 | Input/Output: [(-94 -28 -51 -46) -94]
Test Case: 952 | Input/Output: [(64 81 -71 -89) -89]
Test Case: 953 | Input/Output: [(-3 -49 63 -29) -49]
Test Case: 954 | Input/Output: [(37 25 81 58) 25]
Test Case: 955 | Input/Output: [(-39 -56 56 8) -56]
Test Case: 956 | Input/Output: [(45 79 -68 -71) -71]
Test Case: 957 | Input/Output: [(18 78 -7 68) -7]
Test Case: 958 | Input/Output: [(-26 34 27 -70) -70]
Test Case: 959 | Input/Output: [(-98 -11 40 -75) -98]
Test Case: 960 | Input/Output: [(-15 -81 90 -65) -81]
Test Case: 961 | Input/Output: [(5 25 -44 6) -44]
Test Case: 962 | Input/Output: [(80 -36 67 -88) -88]
Test Case: 963 | Input/Output: [(51 16 17 86) 16]
Test Case: 964 | Input/Output: [(18 29 75 -32) -32]
Test Case: 965 | Input/Output: [(-14 31 39 15) -14]
Test Case: 966 | Input/Output: [(-20 -76 -7 68) -76]
Test Case: 967 | Input/Output: [(50 23 47 -37) -37]
Test Case: 968 | Input/Output: [(-66 -48 -52 94) -66]
Test Case: 969 | Input/Output: [(23 -93 82 -33) -93]
Test Case: 970 | Input/Output: [(-8 -66 36 29) -66]
Test Case: 971 | Input/Output: [(23 57 -6 -32) -32]
Test Case: 972 | Input/Output: [(-42 -11 -93 49) -93]
Test Case: 973 | Input/Output: [(81 86 -88 78) -88]
Test Case: 974 | Input/Output: [(38 82 99 -76) -76]
Test Case: 975 | Input/Output: [(22 94 80 66) 22]
Test Case: 976 | Input/Output: [(42 -11 -82 21) -82]
Test Case: 977 | Input/Output: [(84 -74 -36 -6) -74]
Test Case: 978 | Input/Output: [(74 -53 -41 -47) -53]
Test Case: 979 | Input/Output: [(-65 69 -87 39) -87]
Test Case: 980 | Input/Output: [(-81 69 -25 63) -81]
Test Case: 981 | Input/Output: [(39 -70 -59 59) -70]
Test Case: 982 | Input/Output: [(-80 -19 -47 25) -80]
Test Case: 983 | Input/Output: [(45 36 11 -59) -59]
Test Case: 984 | Input/Output: [(-55 12 -24 -73) -73]
Test Case: 985 | Input/Output: [(91 12 -69 -36) -69]
Test Case: 986 | Input/Output: [(77 100 -17 -34) -34]
Test Case: 987 | Input/Output: [(-36 -34 -98 -87) -98]
Test Case: 988 | Input/Output: [(-96 -89 -27 11) -96]
Test Case: 989 | Input/Output: [(16 -28 7 -86) -86]
Test Case: 990 | Input/Output: [(-89 38 -13 -19) -89]
Test Case: 991 | Input/Output: [(81 50 -17 -54) -54]
Test Case: 992 | Input/Output: [(-50 -13 -45 -29) -50]
Test Case: 993 | Input/Output: [(14 68 -36 42) -36]
Test Case: 994 | Input/Output: [(4 -93 -94 -46) -94]
Test Case: 995 | Input/Output: [(-75 77 80 -30) -75]
Test Case: 996 | Input/Output: [(-32 87 -99 -41) -99]
Test Case: 997 | Input/Output: [(-91 83 72 27) -91]
Test Case: 998 | Input/Output: [(56 13 80 -6) -6]
Test Case: 999 | Input/Output: [(75 43 18 -58) -58]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 34 -91 125 124 102 0 -67 85 -8 -104 53 -122 119 120 91 13
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[56 56 56 14] 14] [[66 -15 66 66] -15] [[-10 72 72 72] -10] [[70 0 70 70] 0] [[-82 77 77 77] -82] [[26 22 22 22] 22] [[67 67 67 96] 67] [[73 73 73 74] 73] [[-90 62 62 62] -90] [[91 83 83 83] 83] [(-31 -31 -31 -31) -31] [(-34 -34 -34 -34) -34] [(-3 -3 -3 -3) -3] [(55 55 55 55) 55] [(30 30 30 30) 30] [(11 41 52 45) 11] [(91 48 28 21) 21] [(68 58 42 0) 0] [(45 33 77 42) 33] [(18 90 11 73) 11] [(57 0 70 11) 0] [(75 90 36 43) 36] [(42 72 49 48) 42] [(23 72 67 76) 23] [(52 5 86 78) 5] [(90 82 46 7) 7] [(14 7 85 79) 7] [(19 89 27 63) 19] [(69 99 73 56) 56] [(72 0 30 3) 0] [(42 78 84 16) 16] [(69 25 32 78) 25] [(86 88 63 0) 0] [(32 13 0 33) 0] [(92 45 15 8) 8] [(47 4 -13 76) -13] [(25 -10 -56 -69) -69] [(-78 70 -35 71) -78] [(-63 -57 24 -88) -88] [(-75 -87 7 -10) -87] [(47 53 33 65) 33] [(55 -67 24 -42) -67] [(85 30 75 -67) -67] [(55 80 -27 -79) -79] [(4 85 55 35) 4] [(-34 67 4 10) -34] [(49 33 14 -60) -60] [(-48 -78 -10 58) -78] [(65 -62 -77 -63) -77] [(57 -14 75 -98) -98] [(-84 -15 68 -18) -84] [(-63 34 4 -46) -63] [(89 5 46 -61) -61] [(-14 -79 19 -85) -85] [(73 38 -94 -27) -94] [(43 30 94 81) 30] [(-81 36 34 -87) -87] [(-71 -22 -96 -49) -96] [(59 72 97 47) 47] [(17 6 -74 -51) -74] [(-94 -68 -77 -97) -97] [(9 85 37 43) 9] [(-92 87 -9 82) -92] [(13 -31 -4 0) -31] [(38 -90 50 -24) -90] [(-12 -69 -82 71) -82] [(-16 67 32 -3) -16] [(-57 100 82 30) -57] [(92 -91 -24 -23) -91] [(-13 -100 18 -3) -100] [(-12 57 96 -82) -82] [(93 -16 -100 -15) -100] [(-70 -69 53 -35) -70] [(44 91 -95 -99) -99] [(-37 -3 -12 -32) -37] [(69 5 -62 93) -62] [(-98 -87 -68 -72) -98] [(77 73 -25 24) -25] [(-24 -87 -49 -97) -97] [(-92 -45 13 7) -92] [(-46 -74 -10 -32) -74] [(-92 6 88 12) -92] [(69 20 -1 97) -1] [(25 85 -57 67) -57] [(-95 -56 -58 -50) -95] [(53 70 -14 -58) -58] [(-91 -65 -26 99) -91] [(4 68 -64 97) -64] [(94 51 -4 -93) -93] [(-82 18 77 14) -82] [(85 76 23 52) 23] [(-43 -71 -50 43) -71] [(-12 -62 -97 38) -97] [(-90 91 -29 -60) -90] [(55 8 -89 -33) -89])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 645
Test mean error for best: 0.64500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 56                 
Correct output: -15                 | Program output: 66                 
Correct output: -10                 | Program output: -10                
Correct output: 0                   | Program output: 70                 
Correct output: -82                 | Program output: -82                
Correct output: 22                  | Program output: 26                 
Correct output: 67                  | Program output: 67                 
Correct output: 73                  | Program output: 73                 
Correct output: -90                 | Program output: -90                
Correct output: 83                  | Program output: 91                 
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -3                  | Program output: -3                 
Correct output: 55                  | Program output: 55                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 11                 
Correct output: 21                  | Program output: 91                 
Correct output: 0                   | Program output: 68                 
Correct output: 33                  | Program output: 45                 
Correct output: 11                  | Program output: 18                 
Correct output: 0                   | Program output: 57                 
Correct output: 36                  | Program output: 75                 
Correct output: 42                  | Program output: 42                 
Correct output: 23                  | Program output: 23                 
Correct output: 5                   | Program output: 52                 
Correct output: 7                   | Program output: 90                 
Correct output: 7                   | Program output: 14                 
Correct output: 19                  | Program output: 19                 
Correct output: 56                  | Program output: 69                 
Correct output: 0                   | Program output: 72                 
Correct output: 16                  | Program output: 42                 
Correct output: 25                  | Program output: 69                 
Correct output: 0                   | Program output: 86                 
Correct output: 0                   | Program output: 32                 
Correct output: 8                   | Program output: 92                 
Correct output: -13                 | Program output: 47                 
Correct output: -69                 | Program output: 25                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -63                
Correct output: -87                 | Program output: -75                
Correct output: 33                  | Program output: 47                 
Correct output: -67                 | Program output: 55                 
Correct output: -67                 | Program output: 85                 
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -60                 | Program output: 49                 
Correct output: -78                 | Program output: -48                
Correct output: -77                 | Program output: 65                 
Correct output: -98                 | Program output: 57                 
Correct output: -84                 | Program output: -84                
Correct output: -63                 | Program output: -63                
Correct output: -61                 | Program output: 89                 
Correct output: -85                 | Program output: -14                
Correct output: -94                 | Program output: 73                 
Correct output: 30                  | Program output: 43                 
Correct output: -87                 | Program output: -81                
Correct output: -96                 | Program output: -71                
Correct output: 47                  | Program output: 59                 
Correct output: -74                 | Program output: 17                 
Correct output: -97                 | Program output: -94                
Correct output: 9                   | Program output: 9                  
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: 13                 
Correct output: -90                 | Program output: 38                 
Correct output: -82                 | Program output: -12                
Correct output: -16                 | Program output: -16                
Correct output: -57                 | Program output: -57                
Correct output: -91                 | Program output: 92                 
Correct output: -100                | Program output: -13                
Correct output: -82                 | Program output: -12                
Correct output: -100                | Program output: 93                 
Correct output: -70                 | Program output: -70                
Correct output: -99                 | Program output: 44                 
Correct output: -37                 | Program output: -37                
Correct output: -62                 | Program output: 69                 
Correct output: -98                 | Program output: -98                
Correct output: -25                 | Program output: 77                 
Correct output: -97                 | Program output: -24                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -46                
Correct output: -92                 | Program output: -92                
Correct output: -1                  | Program output: 69                 
Correct output: -57                 | Program output: 25                 
Correct output: -95                 | Program output: -95                
Correct output: -58                 | Program output: 53                 
Correct output: -91                 | Program output: -91                
Correct output: -64                 | Program output: 4                  
Correct output: -93                 | Program output: 94                 
Correct output: -82                 | Program output: -82                
Correct output: 23                  | Program output: 85                 
Correct output: -71                 | Program output: -43                
Correct output: -97                 | Program output: -12                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 55                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction tag_boolean_965} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_do*times} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_y} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_flush} {:close 1, :instruction integer_gte} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s} {:close 1, :instruction integer_add} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 1, :instruction integer_sub} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction exec_k} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_not})
Lexicase best program: (in1 print_integer tag_boolean_965 boolean_dup_times exec_do*times () exec_s (integer_gte integer_rot exec_swap (exec_dup (exec_k_when_autoconstructing (boolean_not exec_y (print_integer boolean_dup_items exec_flush integer_gte) exec_s (exec_s (integer_add) (integer_sub boolean_flush) (boolean_eq integer_min integer_sub) exec_yank boolean_dup exec_empty) (exec_flush integer_pop integer_lte integer_yank integer_rot exec_if (exec_k (integer_mult boolean_not) ()) ()) ()) ())) ()) () ())
Lexicase best errors: [1 0 0 1 1 0 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 58
Percent parens: 0.362
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction tag_boolean_965} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_do*times} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_y} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_flush} {:close 1, :instruction integer_gte} {:close 0, :instruction exec_s} {:close 0, :instruction exec_s} {:close 1, :instruction integer_add} {:close 0, :instruction integer_sub} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_min} {:close 1, :instruction integer_sub} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_if} {:close 0, :instruction exec_k} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_not})
Zero cases best program: (in1 print_integer tag_boolean_965 boolean_dup_times exec_do*times () exec_s (integer_gte integer_rot exec_swap (exec_dup (exec_k_when_autoconstructing (boolean_not exec_y (print_integer boolean_dup_items exec_flush integer_gte) exec_s (exec_s (integer_add) (integer_sub boolean_flush) (boolean_eq integer_min integer_sub) exec_yank boolean_dup exec_empty) (exec_flush integer_pop integer_lte integer_yank integer_rot exec_if (exec_k (integer_mult boolean_not) ()) ()) ()) ())) ()) () ())
Zero cases best errors: [1 0 0 1 1 0 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 58
Percent parens: 0.362
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 2 11 7 5 3 2 5 2 5)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (4 2 11 7 5 3 2 5 2 5)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_shove} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_empty} {:close 1, :instruction integer_add} {:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction tag_boolean_60} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_if} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_div} {:close 1, :instruction in4} {:close 0, :instruction print_newline} {:close 0, :instruction exec_s} {:close 1, :instruction exec_rot} {:close 1, :instruction integer_gte} {:close 1, :instruction exec_do*count} {:close 0, :instruction tag_boolean_572} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction print_exec} {:close 1, :instruction exec_pop} {:close 1, :instruction boolean_swap} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_k} {:close 0, :instruction in2} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_and} {:close 0, :instruction in2} {:close 2, :instruction integer_div} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in4} {:close 1, :instruction boolean_flush} {:close 1, :instruction exec_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_shove})
Best program: (boolean_shove integer_empty boolean_eq exec_dup (exec_while () integer_lte boolean_invert_second_then_and) boolean_empty boolean_invert_first_then_and exec_shove (integer_shove integer_empty integer_add) in1 print_integer tag_boolean_60 boolean_shove boolean_dup_times exec_yank integer_min boolean_invert_first_then_and integer_pop exec_if () (exec_while (boolean_yank integer_mult integer_mod integer_div in4) print_newline exec_s (exec_rot () (integer_gte) (exec_do*count () tag_boolean_572 integer_mult integer_mod exec_do*while (integer_dup_items boolean_dup_items print_exec (exec_pop () boolean_swap) boolean_yankdup) integer_shove integer_mod boolean_swap print_boolean integer_lte boolean_dup) integer_stackdepth) (exec_k (integer_yank exec_k (in2 boolean_and integer_max integer_dup_items integer_mod integer_pop boolean_and in2 integer_div) () boolean_dup_times in4 boolean_flush) (exec_dup_times () print_integer exec_yank exec_dup (exec_pop (exec_s (boolean_or exec_when (boolean_flush exec_pop (integer_yank boolean_yankdup boolean_not boolean_pop integer_shove exec_shove ()))) () ())))) ()))
Errors: [1 0 0 1 1 0 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 82
Size: 112
Percent parens: 0.268
--- Population Statistics ---
Average total errors in population: 9.954
Median total errors in population: 10
Error averages by case: (0.996 0.998 0.989 0.993 0.995 0.997 0.998 0.995 0.998 0.995)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 52.635
Average program size in population (points): 72.165
Average percent parens in population: 0.278
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.275
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 506309
--- Timings ---
Current time: 1559593910599 milliseconds
Total Time:           2.7 seconds
Initialization:       0.1 seconds,  4.0%
Reproduction:         0.8 seconds, 28.9%
Fitness Testing:      1.8 seconds, 67.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 645
Test mean error for best: 0.64500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 56                 
Correct output: -15                 | Program output: 66                 
Correct output: -10                 | Program output: -10                
Correct output: 0                   | Program output: 70                 
Correct output: -82                 | Program output: -82                
Correct output: 22                  | Program output: 26                 
Correct output: 67                  | Program output: 67                 
Correct output: 73                  | Program output: 73                 
Correct output: -90                 | Program output: -90                
Correct output: 83                  | Program output: 91                 
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -3                  | Program output: -3                 
Correct output: 55                  | Program output: 55                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 11                 
Correct output: 21                  | Program output: 91                 
Correct output: 0                   | Program output: 68                 
Correct output: 33                  | Program output: 45                 
Correct output: 11                  | Program output: 18                 
Correct output: 0                   | Program output: 57                 
Correct output: 36                  | Program output: 75                 
Correct output: 42                  | Program output: 42                 
Correct output: 23                  | Program output: 23                 
Correct output: 5                   | Program output: 52                 
Correct output: 7                   | Program output: 90                 
Correct output: 7                   | Program output: 14                 
Correct output: 19                  | Program output: 19                 
Correct output: 56                  | Program output: 69                 
Correct output: 0                   | Program output: 72                 
Correct output: 16                  | Program output: 42                 
Correct output: 25                  | Program output: 69                 
Correct output: 0                   | Program output: 86                 
Correct output: 0                   | Program output: 32                 
Correct output: 8                   | Program output: 92                 
Correct output: -13                 | Program output: 47                 
Correct output: -69                 | Program output: 25                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -63                
Correct output: -87                 | Program output: -75                
Correct output: 33                  | Program output: 47                 
Correct output: -67                 | Program output: 55                 
Correct output: -67                 | Program output: 85                 
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -60                 | Program output: 49                 
Correct output: -78                 | Program output: -48                
Correct output: -77                 | Program output: 65                 
Correct output: -98                 | Program output: 57                 
Correct output: -84                 | Program output: -84                
Correct output: -63                 | Program output: -63                
Correct output: -61                 | Program output: 89                 
Correct output: -85                 | Program output: -14                
Correct output: -94                 | Program output: 73                 
Correct output: 30                  | Program output: 43                 
Correct output: -87                 | Program output: -81                
Correct output: -96                 | Program output: -71                
Correct output: 47                  | Program output: 59                 
Correct output: -74                 | Program output: 17                 
Correct output: -97                 | Program output: -94                
Correct output: 9                   | Program output: 9                  
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: 13                 
Correct output: -90                 | Program output: 38                 
Correct output: -82                 | Program output: -12                
Correct output: -16                 | Program output: -16                
Correct output: -57                 | Program output: -57                
Correct output: -91                 | Program output: 92                 
Correct output: -100                | Program output: -13                
Correct output: -82                 | Program output: -12                
Correct output: -100                | Program output: 93                 
Correct output: -70                 | Program output: -70                
Correct output: -99                 | Program output: 44                 
Correct output: -37                 | Program output: -37                
Correct output: -62                 | Program output: 69                 
Correct output: -98                 | Program output: -98                
Correct output: -25                 | Program output: 77                 
Correct output: -97                 | Program output: -24                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -46                
Correct output: -92                 | Program output: -92                
Correct output: -1                  | Program output: 69                 
Correct output: -57                 | Program output: 25                 
Correct output: -95                 | Program output: -95                
Correct output: -58                 | Program output: 53                 
Correct output: -91                 | Program output: -91                
Correct output: -64                 | Program output: 4                  
Correct output: -93                 | Program output: 94                 
Correct output: -82                 | Program output: -82                
Correct output: 23                  | Program output: 85                 
Correct output: -71                 | Program output: -43                
Correct output: -97                 | Program output: -12                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 55                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in1} {:close 0, :instruction boolean_dup} {:close 0, :instruction in4} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup} {:close 1, :instruction integer_dup_items} {:close 1, :instruction boolean_and} {:close 1, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_do*range} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction tag_exec_136} {:close 1, :instruction exec_pop} {:close 0, :instruction boolean_swap} {:close 0, :instruction tagged_329} {:close 0, :instruction boolean_eq} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_s} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_yank})
Lexicase best program: (in1 boolean_dup in4 boolean_stackdepth exec_dup (integer_dup_items) boolean_and print_integer exec_s_when_autoconstructing (exec_do*range () integer_dup_items integer_fromboolean tag_exec_136 (exec_pop () boolean_swap tagged_329 boolean_eq in2 boolean_or exec_s (integer_fromboolean integer_div boolean_frominteger boolean_yankdup exec_rot (exec_pop (exec_flush integer_eq integer_rot exec_k (boolean_yank) ())) () ()) () ())) () ())
Lexicase best errors: [0 0 1 1 0 1 0 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 48
Percent parens: 0.354
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in1} {:close 0, :instruction boolean_dup} {:close 0, :instruction in4} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup} {:close 1, :instruction integer_dup_items} {:close 1, :instruction boolean_and} {:close 1, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_do*range} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction tag_exec_136} {:close 1, :instruction exec_pop} {:close 0, :instruction boolean_swap} {:close 0, :instruction tagged_329} {:close 0, :instruction boolean_eq} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_s} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_yank})
Zero cases best program: (in1 boolean_dup in4 boolean_stackdepth exec_dup (integer_dup_items) boolean_and print_integer exec_s_when_autoconstructing (exec_do*range () integer_dup_items integer_fromboolean tag_exec_136 (exec_pop () boolean_swap tagged_329 boolean_eq in2 boolean_or exec_s (integer_fromboolean integer_div boolean_frominteger boolean_yankdup exec_rot (exec_pop (exec_flush integer_eq integer_rot exec_k (boolean_yank) ())) () ()) () ())) () ())
Zero cases best errors: [0 0 1 1 0 1 0 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 48
Percent parens: 0.354
--- Lexicase Population Statistics ---
Count of elite individuals by case: (565 302 61 59 303 59 302 303 149 150)
Population mean number of elite cases: 2.25
Count of perfect (error zero) individuals by case: (565 302 61 59 303 59 302 303 149 150)
Population mean number of perfect (error zero) cases: 2.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_shove} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_empty} {:close 1, :instruction integer_add} {:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction tag_boolean_60} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_if} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_div} {:close 1, :instruction in4} {:close 0, :instruction print_newline} {:close 0, :instruction exec_s} {:close 1, :instruction exec_rot} {:close 1, :instruction integer_gte} {:close 1, :instruction exec_do*count} {:close 0, :instruction tag_boolean_572} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_do*times} {:close 0, :instruction print_exec} {:close 1, :instruction exec_pop} {:close 1, :instruction boolean_swap} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_yank} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_dup} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction exec_k} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_k} {:close 0, :instruction in2} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_max} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_and} {:close 0, :instruction in2} {:close 0, :instruction integer_fromboolean} {:close 2, :instruction integer_div} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in4} {:close 1, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_dup_items} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_shove})
Best program: (boolean_shove integer_empty boolean_eq exec_dup (exec_while () integer_lte boolean_invert_second_then_and) boolean_empty boolean_invert_first_then_and exec_shove (integer_shove integer_empty integer_add) in1 print_integer tag_boolean_60 boolean_shove boolean_dup_times exec_yank integer_min boolean_invert_first_then_and integer_pop exec_if () (exec_while (boolean_yank integer_mult integer_mod integer_div in4) print_newline exec_s (exec_rot () (integer_gte) (exec_do*count () tag_boolean_572 integer_mult integer_mod exec_do*while (integer_dup_items boolean_dup_items exec_do*times (print_exec (exec_pop () boolean_swap) boolean_yankdup) integer_shove integer_mod boolean_swap exec_yank) print_boolean integer_lte boolean_dup) integer_stackdepth) (exec_k (integer_yank exec_k (in2 boolean_and integer_max integer_dup_items integer_pop boolean_and in2 integer_fromboolean integer_div) () boolean_dup_times in4 boolean_flush) (print_integer exec_yank exec_pop (exec_s (boolean_or exec_when (boolean_flush exec_pop (integer_dup_items) integer_yank boolean_yankdup boolean_not boolean_pop integer_shove)) () ()))) ()))
Errors: [0 0 1 1 0 1 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 82
Size: 110
Percent parens: 0.255
--- Population Statistics ---
Average total errors in population: 7.747
Median total errors in population: 7
Error averages by case: (0.435 0.698 0.939 0.941 0.697 0.941 0.698 0.697 0.851 0.85)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 50.702
Average program size in population (points): 71.043
Average percent parens in population: 0.298
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 12
Genome diversity (% unique genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.006
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.2
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 914194
--- Timings ---
Current time: 1559593912541 milliseconds
Total Time:           4.7 seconds
Initialization:       0.1 seconds,  2.2%
Reproduction:         1.8 seconds, 37.4%
Fitness Testing:      2.4 seconds, 51.7%
Report:               0.4 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 427
Test mean error for best: 0.42700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -15                 | Program output: -15                
Correct output: -10                 | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: -82                 | Program output: 77                 
Correct output: 22                  | Program output: 22                 
Correct output: 67                  | Program output: 67                 
Correct output: 73                  | Program output: 73                 
Correct output: -90                 | Program output: 62                 
Correct output: 83                  | Program output: 83                 
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -3                  | Program output: -3                 
Correct output: 55                  | Program output: 55                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 41                 
Correct output: 21                  | Program output: 21                 
Correct output: 0                   | Program output: 0                  
Correct output: 33                  | Program output: 33                 
Correct output: 11                  | Program output: 73                 
Correct output: 0                   | Program output: 0                  
Correct output: 36                  | Program output: 43                 
Correct output: 42                  | Program output: 48                 
Correct output: 23                  | Program output: 72                 
Correct output: 5                   | Program output: 5                  
Correct output: 7                   | Program output: 7                  
Correct output: 7                   | Program output: 7                  
Correct output: 19                  | Program output: 63                 
Correct output: 56                  | Program output: 56                 
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 25                  | Program output: 25                 
Correct output: 0                   | Program output: 0                  
Correct output: 0                   | Program output: 13                 
Correct output: 8                   | Program output: 8                  
Correct output: -13                 | Program output: 4                  
Correct output: -69                 | Program output: -69                
Correct output: -78                 | Program output: 70                 
Correct output: -88                 | Program output: -88                
Correct output: -87                 | Program output: -87                
Correct output: 33                  | Program output: 53                 
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -67                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 35                 
Correct output: -34                 | Program output: 10                 
Correct output: -60                 | Program output: -60                
Correct output: -78                 | Program output: -78                
Correct output: -77                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -84                 | Program output: -18                
Correct output: -63                 | Program output: -46                
Correct output: -61                 | Program output: -61                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -27                
Correct output: 30                  | Program output: 30                 
Correct output: -87                 | Program output: -87                
Correct output: -96                 | Program output: -49                
Correct output: 47                  | Program output: 47                 
Correct output: -74                 | Program output: -51                
Correct output: -97                 | Program output: -97                
Correct output: 9                   | Program output: 43                 
Correct output: -92                 | Program output: 82                 
Correct output: -31                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -82                 | Program output: -69                
Correct output: -16                 | Program output: -3                 
Correct output: -57                 | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: -100                | Program output: -100               
Correct output: -82                 | Program output: -82                
Correct output: -100                | Program output: -16                
Correct output: -70                 | Program output: -69                
Correct output: -99                 | Program output: -99                
Correct output: -37                 | Program output: -32                
Correct output: -62                 | Program output: 5                  
Correct output: -98                 | Program output: -87                
Correct output: -25                 | Program output: 24                 
Correct output: -97                 | Program output: -97                
Correct output: -92                 | Program output: -45                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: 6                  
Correct output: -1                  | Program output: 20                 
Correct output: -57                 | Program output: 67                 
Correct output: -95                 | Program output: -56                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -65                
Correct output: -64                 | Program output: 68                 
Correct output: -93                 | Program output: -93                
Correct output: -82                 | Program output: 14                 
Correct output: 23                  | Program output: 52                 
Correct output: -71                 | Program output: -71                
Correct output: -97                 | Program output: -62                
Correct output: -90                 | Program output: -60                
Correct output: -89                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Lexicase best program: (in4 in2 boolean_rot boolean_dup_times boolean_shove integer_min print_integer exec_do*range () exec_y () boolean_empty exec_shove (exec_k (integer_max integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_sub) (tag_integer_346 integer_lte) exec_yank print_exec () boolean_xor) integer_inc exec_pop (integer_dup tagged_491 integer_sub) integer_fromboolean print_newline boolean_stackdepth integer_pop exec_if (exec_yank integer_stackdepth exec_flush) (exec_do*range ()))
Lexicase best errors: [1 0 0 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 51
Percent parens: 0.255
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Zero cases best program: (in4 in2 boolean_rot boolean_dup_times boolean_shove integer_min print_integer exec_do*range () exec_y () boolean_empty exec_shove (exec_k (integer_max integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_sub) (tag_integer_346 integer_lte) exec_yank print_exec () boolean_xor) integer_inc exec_pop (integer_dup tagged_491 integer_sub) integer_fromboolean print_newline boolean_stackdepth integer_pop exec_if (exec_yank integer_stackdepth exec_flush) (exec_do*range ()))
Zero cases best errors: [1 0 0 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 51
Percent parens: 0.255
--- Lexicase Population Statistics ---
Count of elite individuals by case: (311 147 3 9 644 147 313 316 147 3)
Population mean number of elite cases: 2.04
Count of perfect (error zero) individuals by case: (311 147 3 9 644 147 313 316 147 3)
Population mean number of perfect (error zero) cases: 2.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Best program: (in4 in2 boolean_rot boolean_dup_times boolean_shove integer_min print_integer exec_do*range () exec_y () boolean_empty exec_shove (exec_k (integer_max integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_sub) (tag_integer_346 integer_lte) exec_yank print_exec () boolean_xor) integer_inc exec_pop (integer_dup tagged_491 integer_sub) integer_fromboolean print_newline boolean_stackdepth integer_pop exec_if (exec_yank integer_stackdepth exec_flush) (exec_do*range ()))
Errors: [1 0 0 0 0 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 38
Size: 51
Percent parens: 0.255
--- Population Statistics ---
Average total errors in population: 7.96
Median total errors in population: 9
Error averages by case: (0.689 0.853 0.997 0.991 0.356 0.853 0.687 0.684 0.853 0.997)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 45.781
Average program size in population (points): 64.681
Average percent parens in population: 0.300
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 6
Genome diversity (% unique genomes):	 0.988
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.988
Total error diversity:				 0.006
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.17
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1291464
--- Timings ---
Current time: 1559593914722 milliseconds
Total Time:           6.7 seconds
Initialization:       0.1 seconds,  1.6%
Reproduction:         2.9 seconds, 43.6%
Fitness Testing:      3.0 seconds, 44.2%
Report:               0.7 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 427
Test mean error for best: 0.42700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -15                 | Program output: -15                
Correct output: -10                 | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: -82                 | Program output: 77                 
Correct output: 22                  | Program output: 22                 
Correct output: 67                  | Program output: 67                 
Correct output: 73                  | Program output: 73                 
Correct output: -90                 | Program output: 62                 
Correct output: 83                  | Program output: 83                 
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -3                  | Program output: -3                 
Correct output: 55                  | Program output: 55                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 41                 
Correct output: 21                  | Program output: 21                 
Correct output: 0                   | Program output: 0                  
Correct output: 33                  | Program output: 33                 
Correct output: 11                  | Program output: 73                 
Correct output: 0                   | Program output: 0                  
Correct output: 36                  | Program output: 43                 
Correct output: 42                  | Program output: 48                 
Correct output: 23                  | Program output: 72                 
Correct output: 5                   | Program output: 5                  
Correct output: 7                   | Program output: 7                  
Correct output: 7                   | Program output: 7                  
Correct output: 19                  | Program output: 63                 
Correct output: 56                  | Program output: 56                 
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 25                  | Program output: 25                 
Correct output: 0                   | Program output: 0                  
Correct output: 0                   | Program output: 13                 
Correct output: 8                   | Program output: 8                  
Correct output: -13                 | Program output: 4                  
Correct output: -69                 | Program output: -69                
Correct output: -78                 | Program output: 70                 
Correct output: -88                 | Program output: -88                
Correct output: -87                 | Program output: -87                
Correct output: 33                  | Program output: 53                 
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -67                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 35                 
Correct output: -34                 | Program output: 10                 
Correct output: -60                 | Program output: -60                
Correct output: -78                 | Program output: -78                
Correct output: -77                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -84                 | Program output: -18                
Correct output: -63                 | Program output: -46                
Correct output: -61                 | Program output: -61                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -27                
Correct output: 30                  | Program output: 30                 
Correct output: -87                 | Program output: -87                
Correct output: -96                 | Program output: -49                
Correct output: 47                  | Program output: 47                 
Correct output: -74                 | Program output: -51                
Correct output: -97                 | Program output: -97                
Correct output: 9                   | Program output: 43                 
Correct output: -92                 | Program output: 82                 
Correct output: -31                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -82                 | Program output: -69                
Correct output: -16                 | Program output: -3                 
Correct output: -57                 | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: -100                | Program output: -100               
Correct output: -82                 | Program output: -82                
Correct output: -100                | Program output: -16                
Correct output: -70                 | Program output: -69                
Correct output: -99                 | Program output: -99                
Correct output: -37                 | Program output: -32                
Correct output: -62                 | Program output: 5                  
Correct output: -98                 | Program output: -87                
Correct output: -25                 | Program output: 24                 
Correct output: -97                 | Program output: -97                
Correct output: -92                 | Program output: -45                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: 6                  
Correct output: -1                  | Program output: 20                 
Correct output: -57                 | Program output: 67                 
Correct output: -95                 | Program output: -56                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -65                
Correct output: -64                 | Program output: 68                 
Correct output: -93                 | Program output: -93                
Correct output: -82                 | Program output: 14                 
Correct output: 23                  | Program output: 52                 
Correct output: -71                 | Program output: -71                
Correct output: -97                 | Program output: -62                
Correct output: -90                 | Program output: -60                
Correct output: -89                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_k} {:close 0, :instruction in4} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction tag_integer_767} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Lexicase best program: (exec_k (in4 in2) () boolean_rot boolean_dup_times boolean_shove integer_min print_integer integer_eq exec_do*range () exec_y () boolean_empty exec_shove (exec_k (integer_max tag_integer_767 integer_stackdepth exec_stackdepth in3) (exec_noop) integer_lte) exec_yank boolean_xor integer_inc integer_dup tagged_491 integer_sub integer_fromboolean print_newline boolean_stackdepth integer_pop exec_if (exec_yank integer_stackdepth exec_flush) (exec_do*range ()))
Lexicase best errors: [0 0 0 0 0 0 1 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 47
Percent parens: 0.234
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_k} {:close 0, :instruction in4} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction tag_integer_767} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Zero cases best program: (exec_k (in4 in2) () boolean_rot boolean_dup_times boolean_shove integer_min print_integer integer_eq exec_do*range () exec_y () boolean_empty exec_shove (exec_k (integer_max tag_integer_767 integer_stackdepth exec_stackdepth in3) (exec_noop) integer_lte) exec_yank boolean_xor integer_inc integer_dup tagged_491 integer_sub integer_fromboolean print_newline boolean_stackdepth integer_pop exec_if (exec_yank integer_stackdepth exec_flush) (exec_do*range ()))
Zero cases best errors: [0 0 0 0 0 0 1 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 47
Percent parens: 0.234
--- Lexicase Population Statistics ---
Count of elite individuals by case: (388 700 388 734 396 389 5 215 5 6)
Population mean number of elite cases: 3.23
Count of perfect (error zero) individuals by case: (388 700 388 734 396 389 5 215 5 6)
Population mean number of perfect (error zero) cases: 3.23
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_if} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction print_newline} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Best program: (in4 exec_rot (in2) () (boolean_rot boolean_shove) integer_min print_integer exec_do*range () exec_y () boolean_empty exec_if (exec_shove (exec_k (integer_max integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_sub) (tag_integer_346 integer_lte) exec_yank boolean_xor) exec_pop (integer_dup tagged_491 integer_sub) print_newline integer_pop exec_if (integer_dec exec_yank integer_stackdepth exec_flush) (exec_do*range ())) ())
Errors: [0 0 0 0 0 0 1 1 1 1]
Total: 4
Mean: 0.4
Genome size: 36
Size: 53
Percent parens: 0.321
--- Population Statistics ---
Average total errors in population: 6.774
Median total errors in population: 7
Error averages by case: (0.612 0.3 0.612 0.266 0.604 0.611 0.995 0.785 0.995 0.994)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 41.08
Average program size in population (points): 57.181
Average percent parens in population: 0.279
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.007
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.119
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1892612
--- Timings ---
Current time: 1559593917196 milliseconds
Total Time:           9.2 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.1 seconds, 44.7%
Fitness Testing:      3.8 seconds, 40.9%
Report:               1.2 seconds, 13.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 428
Test mean error for best: 0.42800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 56                 
Correct output: -15                 | Program output: -15                
Correct output: -10                 | Program output: -10                
Correct output: 0                   | Program output: 0                  
Correct output: -82                 | Program output: -82                
Correct output: 22                  | Program output: 22                 
Correct output: 67                  | Program output: 67                 
Correct output: 73                  | Program output: 73                 
Correct output: -90                 | Program output: -90                
Correct output: 83                  | Program output: 83                 
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -3                  | Program output: -3                 
Correct output: 55                  | Program output: 55                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 11                 
Correct output: 21                  | Program output: 48                 
Correct output: 0                   | Program output: 58                 
Correct output: 33                  | Program output: 33                 
Correct output: 11                  | Program output: 18                 
Correct output: 0                   | Program output: 0                  
Correct output: 36                  | Program output: 75                 
Correct output: 42                  | Program output: 42                 
Correct output: 23                  | Program output: 23                 
Correct output: 5                   | Program output: 5                  
Correct output: 7                   | Program output: 82                 
Correct output: 7                   | Program output: 7                  
Correct output: 19                  | Program output: 19                 
Correct output: 56                  | Program output: 69                 
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 42                 
Correct output: 25                  | Program output: 25                 
Correct output: 0                   | Program output: 86                 
Correct output: 0                   | Program output: 13                 
Correct output: 8                   | Program output: 45                 
Correct output: -13                 | Program output: 4                  
Correct output: -69                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -63                
Correct output: -87                 | Program output: -87                
Correct output: 33                  | Program output: 47                 
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 30                 
Correct output: -79                 | Program output: 55                 
Correct output: 4                   | Program output: 4                  
Correct output: -34                 | Program output: -34                
Correct output: -60                 | Program output: 33                 
Correct output: -78                 | Program output: -78                
Correct output: -77                 | Program output: -62                
Correct output: -98                 | Program output: -14                
Correct output: -84                 | Program output: -84                
Correct output: -63                 | Program output: -63                
Correct output: -61                 | Program output: 5                  
Correct output: -85                 | Program output: -79                
Correct output: -94                 | Program output: 38                 
Correct output: 30                  | Program output: 30                 
Correct output: -87                 | Program output: -81                
Correct output: -96                 | Program output: -71                
Correct output: 47                  | Program output: 59                 
Correct output: -74                 | Program output: 6                  
Correct output: -97                 | Program output: -94                
Correct output: 9                   | Program output: 9                  
Correct output: -92                 | Program output: -92                
Correct output: -31                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -82                 | Program output: -69                
Correct output: -16                 | Program output: -16                
Correct output: -57                 | Program output: -57                
Correct output: -91                 | Program output: -91                
Correct output: -100                | Program output: -100               
Correct output: -82                 | Program output: -12                
Correct output: -100                | Program output: -16                
Correct output: -70                 | Program output: -70                
Correct output: -99                 | Program output: 44                 
Correct output: -37                 | Program output: -37                
Correct output: -62                 | Program output: 5                  
Correct output: -98                 | Program output: -98                
Correct output: -25                 | Program output: 73                 
Correct output: -97                 | Program output: -87                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: -92                
Correct output: -1                  | Program output: 20                 
Correct output: -57                 | Program output: 25                 
Correct output: -95                 | Program output: -95                
Correct output: -58                 | Program output: 53                 
Correct output: -91                 | Program output: -91                
Correct output: -64                 | Program output: 4                  
Correct output: -93                 | Program output: 51                 
Correct output: -82                 | Program output: -82                
Correct output: 23                  | Program output: 76                 
Correct output: -71                 | Program output: -71                
Correct output: -97                 | Program output: -62                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 8                  
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_exec} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_max} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 0, :instruction print_integer} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_stackdepth})
Lexicase best program: (in4 in1 in2 boolean_rot boolean_shove integer_min print_integer exec_do*range () exec_y () integer_stackdepth boolean_empty print_exec (exec_k (integer_max integer_stackdepth exec_stackdepth integer_max exec_if (in3) (integer_stackdepth) integer_sub) (tag_integer_346 print_integer integer_lte) exec_yank print_exec () boolean_xor) integer_inc exec_pop (integer_dup tagged_491 integer_sub) integer_fromboolean print_newline integer_pop exec_if (exec_yank exec_s_when_autoconstructing (integer_stackdepth exec_flush) (exec_do*range () exec_stackdepth) ()) ())
Lexicase best errors: [0 0 0 0 0 1 0 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 58
Percent parens: 0.276
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_exec} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_max} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 0, :instruction print_integer} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_stackdepth})
Zero cases best program: (in4 in1 in2 boolean_rot boolean_shove integer_min print_integer exec_do*range () exec_y () integer_stackdepth boolean_empty print_exec (exec_k (integer_max integer_stackdepth exec_stackdepth integer_max exec_if (in3) (integer_stackdepth) integer_sub) (tag_integer_346 print_integer integer_lte) exec_yank print_exec () boolean_xor) integer_inc exec_pop (integer_dup tagged_491 integer_sub) integer_fromboolean print_newline integer_pop exec_if (exec_yank exec_s_when_autoconstructing (integer_stackdepth exec_flush) (exec_do*range () exec_stackdepth) ()) ())
Zero cases best errors: [0 0 0 0 0 1 0 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 58
Percent parens: 0.276
--- Lexicase Population Statistics ---
Count of elite individuals by case: (111 112 110 111 447 347 436 210 111 211)
Population mean number of elite cases: 2.21
Count of perfect (error zero) individuals by case: (111 112 110 111 447 347 436 210 111 211)
Population mean number of perfect (error zero) cases: 2.21
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in2} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_shove} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_exec} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_max} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 0, :instruction print_integer} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction print_newline} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_stackdepth})
Best program: (in4 in1 in2 boolean_rot boolean_shove integer_min print_integer exec_do*range () exec_y () integer_stackdepth boolean_empty print_exec (exec_k (integer_max integer_stackdepth exec_stackdepth integer_max exec_if (in3) (integer_stackdepth) integer_sub) (tag_integer_346 print_integer integer_lte) exec_yank print_exec () boolean_xor) integer_inc exec_pop (integer_dup tagged_491 integer_sub) integer_fromboolean print_newline integer_pop exec_if (exec_yank exec_s_when_autoconstructing (integer_stackdepth exec_flush) (exec_do*range () exec_stackdepth) ()) ())
Errors: [0 0 0 0 0 1 0 1 0 1]
Total: 3
Mean: 0.3
Genome size: 42
Size: 58
Percent parens: 0.276
--- Population Statistics ---
Average total errors in population: 7.794
Median total errors in population: 8
Error averages by case: (0.889 0.888 0.89 0.889 0.553 0.653 0.564 0.79 0.889 0.789)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 39.76
Average program size in population (points): 54.347
Average percent parens in population: 0.266
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.008
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.115
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2513681
--- Timings ---
Current time: 1559593919735 milliseconds
Total Time:          11.7 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.3 seconds, 45.6%
Fitness Testing:      4.6 seconds, 38.9%
Report:               1.7 seconds, 14.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 202
Test mean error for best: 0.20200
Test Case    0 | Error: 0
Test Case    1 | Error: 1
Test Case    2 | Error: 1
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 1
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 1
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 1
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 1
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 1
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 1
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 1
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 1
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 1
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 1
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 0
Test Case  354 | Error: 1
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 1
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 1
Test Case  415 | Error: 1
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 1
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 1
Test Case  427 | Error: 0
Test Case  428 | Error: 1
Test Case  429 | Error: 1
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 1
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 1
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 1
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 1
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 1
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 1
Test Case  572 | Error: 0
Test Case  573 | Error: 1
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 1
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 1
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 1
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 1
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 1
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 1
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 1
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 1
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 1
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 1
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 1
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 1
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 1
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 1
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 1
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 1
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 1
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 1
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 1
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 14                 
Correct output: -15                 | Program output: -15                
Correct output: -10                 | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: -82                 | Program output: 77                 
Correct output: 22                  | Program output: 22                 
Correct output: 67                  | Program output: 67                 
Correct output: 73                  | Program output: 73                 
Correct output: -90                 | Program output: 62                 
Correct output: 83                  | Program output: 83                 
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -3                  | Program output: -3                 
Correct output: 55                  | Program output: 55                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 41                 
Correct output: 21                  | Program output: 21                 
Correct output: 0                   | Program output: 0                  
Correct output: 33                  | Program output: 33                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: 36                  | Program output: 36                 
Correct output: 42                  | Program output: 48                 
Correct output: 23                  | Program output: 67                 
Correct output: 5                   | Program output: 5                  
Correct output: 7                   | Program output: 7                  
Correct output: 7                   | Program output: 7                  
Correct output: 19                  | Program output: 27                 
Correct output: 56                  | Program output: 56                 
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 25                  | Program output: 25                 
Correct output: 0                   | Program output: 0                  
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: -13                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -78                 | Program output: -35                
Correct output: -88                 | Program output: -88                
Correct output: -87                 | Program output: -87                
Correct output: 33                  | Program output: 33                 
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -67                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 35                 
Correct output: -34                 | Program output: 4                  
Correct output: -60                 | Program output: -60                
Correct output: -78                 | Program output: -78                
Correct output: -77                 | Program output: -77                
Correct output: -98                 | Program output: -98                
Correct output: -84                 | Program output: -18                
Correct output: -63                 | Program output: -46                
Correct output: -61                 | Program output: -61                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: 30                  | Program output: 30                 
Correct output: -87                 | Program output: -87                
Correct output: -96                 | Program output: -96                
Correct output: 47                  | Program output: 47                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: 9                   | Program output: 37                 
Correct output: -92                 | Program output: -9                 
Correct output: -31                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -82                 | Program output: -82                
Correct output: -16                 | Program output: -3                 
Correct output: -57                 | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: -100                | Program output: -100               
Correct output: -82                 | Program output: -82                
Correct output: -100                | Program output: -100               
Correct output: -70                 | Program output: -69                
Correct output: -99                 | Program output: -99                
Correct output: -37                 | Program output: -32                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: -87                
Correct output: -25                 | Program output: -25                
Correct output: -97                 | Program output: -97                
Correct output: -92                 | Program output: -45                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: 6                  
Correct output: -1                  | Program output: -1                 
Correct output: -57                 | Program output: -57                
Correct output: -95                 | Program output: -58                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -65                
Correct output: -64                 | Program output: -64                
Correct output: -93                 | Program output: -93                
Correct output: -82                 | Program output: 14                 
Correct output: 23                  | Program output: 23                 
Correct output: -71                 | Program output: -71                
Correct output: -97                 | Program output: -97                
Correct output: -90                 | Program output: -60                
Correct output: -89                 | Program output: -89                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in3} {:close 2, :instruction in2} {:close 0, :instruction tagged_890} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Lexicase best program: (in4 in3 in2 tagged_890 boolean_rot boolean_dup_times integer_min integer_min print_integer exec_do*range () exec_y () integer_stackdepth boolean_empty exec_shove (exec_do*while (integer_max boolean_eq integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_sub) tag_integer_346 integer_lte) exec_yank print_exec () boolean_xor integer_inc exec_pop (integer_dup tagged_491 print_newline boolean_invert_first_then_and exec_if (exec_yank integer_stackdepth exec_flush) (exec_do*range ())))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 51
Percent parens: 0.235
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in3} {:close 2, :instruction in2} {:close 0, :instruction tagged_890} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_y} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yank} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_dup} {:close 0, :instruction tagged_491} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Zero cases best program: (in4 in3 in2 tagged_890 boolean_rot boolean_dup_times integer_min integer_min print_integer exec_do*range () exec_y () integer_stackdepth boolean_empty exec_shove (exec_do*while (integer_max boolean_eq integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_sub) tag_integer_346 integer_lte) exec_yank print_exec () boolean_xor integer_inc exec_pop (integer_dup tagged_491 print_newline boolean_invert_first_then_and exec_if (exec_yank integer_stackdepth exec_flush) (exec_do*range ())))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 51
Percent parens: 0.235
--- Lexicase Population Statistics ---
Count of elite individuals by case: (181 727 367 759 465 366 181 446 367 463)
Population mean number of elite cases: 4.32
Count of perfect (error zero) individuals by case: (181 727 367 759 465 366 181 446 367 463)
Population mean number of perfect (error zero) cases: 4.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in3} {:close 2, :instruction in2} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_dup} {:close 1, :instruction integer_min} {:close 1, :instruction integer_mult} {:close 0, :instruction print_integer} {:close 1, :instruction exec_y} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_k} {:close 0, :instruction integer_max} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_sub} {:close 0, :instruction tag_integer_346} {:close 1, :instruction integer_lte} {:close 1, :instruction print_exec} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_pop} {:close 0, :instruction tagged_491} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_yank} {:close 0, :instruction in3} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_do*range})
Best program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 37
Size: 50
Percent parens: 0.260
--- Population Statistics ---
Average total errors in population: 5.678
Median total errors in population: 5
Error averages by case: (0.819 0.273 0.633 0.241 0.535 0.634 0.819 0.554 0.633 0.537)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 40.065
Average program size in population (points): 54.709
Average percent parens in population: 0.266
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.01
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.168
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 3222247
--- Timings ---
Current time: 1559593922239 milliseconds
Total Time:          14.2 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         6.5 seconds, 45.4%
Fitness Testing:      5.5 seconds, 38.3%
Report:               2.2 seconds, 15.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 5
Successful program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 50


Auto-simplifying with starting size: 50
step: 0
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 500
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 1000
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 1500
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 2000
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 2500
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 3000
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 3500
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 4000
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 4500
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

step: 5000
program: (in4 in3 in2 boolean_shove exec_dup (integer_min) integer_mult print_integer exec_y () boolean_empty exec_shove (exec_k (integer_max exec_noop integer_stackdepth exec_stackdepth exec_if (in3) (exec_noop) integer_lt integer_dup_times integer_sub) (tag_integer_346 integer_lte) print_exec () boolean_xor) integer_inc exec_pop (tagged_491 integer_fromboolean integer_yankdup) integer_pop exec_if (exec_yank in3 exec_flush) (exec_do*range ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 50

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 202
Test mean error for best: 0.20200
Test Case    0 | Error: 0
Test Case    1 | Error: 1
Test Case    2 | Error: 1
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 1
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 1
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 1
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 1
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 1
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 1
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 1
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 1
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 1
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 1
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 1
Test Case  298 | Error: 0
Test Case  299 | Error: 1
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 1
Test Case  353 | Error: 0
Test Case  354 | Error: 1
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 1
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 1
Test Case  415 | Error: 1
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 1
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 1
Test Case  427 | Error: 0
Test Case  428 | Error: 1
Test Case  429 | Error: 1
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 1
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 1
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 1
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 1
Test Case  508 | Error: 0
Test Case  509 | Error: 1
Test Case  510 | Error: 1
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 1
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 1
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 1
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 1
Test Case  572 | Error: 0
Test Case  573 | Error: 1
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 1
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 1
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 1
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 1
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 1
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 1
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 1
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 1
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 1
Test Case  737 | Error: 1
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 1
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 1
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 1
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 1
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 1
Test Case  794 | Error: 0
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 1
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 1
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 1
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 1
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 1
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 1
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 1
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 1
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 1
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 1
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 1
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 14                 
Correct output: -15                 | Program output: -15                
Correct output: -10                 | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: -82                 | Program output: 77                 
Correct output: 22                  | Program output: 22                 
Correct output: 67                  | Program output: 67                 
Correct output: 73                  | Program output: 73                 
Correct output: -90                 | Program output: 62                 
Correct output: 83                  | Program output: 83                 
Correct output: -31                 | Program output: -31                
Correct output: -34                 | Program output: -34                
Correct output: -3                  | Program output: -3                 
Correct output: 55                  | Program output: 55                 
Correct output: 30                  | Program output: 30                 
Correct output: 11                  | Program output: 41                 
Correct output: 21                  | Program output: 21                 
Correct output: 0                   | Program output: 0                  
Correct output: 33                  | Program output: 33                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: 36                  | Program output: 36                 
Correct output: 42                  | Program output: 48                 
Correct output: 23                  | Program output: 67                 
Correct output: 5                   | Program output: 5                  
Correct output: 7                   | Program output: 7                  
Correct output: 7                   | Program output: 7                  
Correct output: 19                  | Program output: 27                 
Correct output: 56                  | Program output: 56                 
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 25                  | Program output: 25                 
Correct output: 0                   | Program output: 0                  
Correct output: 0                   | Program output: 0                  
Correct output: 8                   | Program output: 8                  
Correct output: -13                 | Program output: -13                
Correct output: -69                 | Program output: -69                
Correct output: -78                 | Program output: -35                
Correct output: -88                 | Program output: -88                
Correct output: -87                 | Program output: -87                
Correct output: 33                  | Program output: 33                 
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -67                
Correct output: -79                 | Program output: -79                
Correct output: 4                   | Program output: 35                 
Correct output: -34                 | Program output: 4                  
Correct output: -60                 | Program output: -60                
Correct output: -78                 | Program output: -78                
Correct output: -77                 | Program output: -77                
Correct output: -98                 | Program output: -98                
Correct output: -84                 | Program output: -18                
Correct output: -63                 | Program output: -46                
Correct output: -61                 | Program output: -61                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: 30                  | Program output: 30                 
Correct output: -87                 | Program output: -87                
Correct output: -96                 | Program output: -96                
Correct output: 47                  | Program output: 47                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: 9                   | Program output: 37                 
Correct output: -92                 | Program output: -9                 
Correct output: -31                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -82                 | Program output: -82                
Correct output: -16                 | Program output: -3                 
Correct output: -57                 | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: -100                | Program output: -100               
Correct output: -82                 | Program output: -82                
Correct output: -100                | Program output: -100               
Correct output: -70                 | Program output: -69                
Correct output: -99                 | Program output: -99                
Correct output: -37                 | Program output: -32                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: -87                
Correct output: -25                 | Program output: -25                
Correct output: -97                 | Program output: -97                
Correct output: -92                 | Program output: -45                
Correct output: -74                 | Program output: -74                
Correct output: -92                 | Program output: 6                  
Correct output: -1                  | Program output: -1                 
Correct output: -57                 | Program output: -57                
Correct output: -95                 | Program output: -58                
Correct output: -58                 | Program output: -58                
Correct output: -91                 | Program output: -65                
Correct output: -64                 | Program output: -64                
Correct output: -93                 | Program output: -93                
Correct output: -82                 | Program output: 14                 
Correct output: 23                  | Program output: 23                 
Correct output: -71                 | Program output: -71                
Correct output: -97                 | Program output: -97                
Correct output: -90                 | Program output: -60                
Correct output: -89                 | Program output: -89                
;;******************************
