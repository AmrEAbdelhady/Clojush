Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[68 93 68 68] 68] [[8 8 8 -11] -11] [[-2 -2 -2 -39] -39] [[31 31 31 11] 11] [[85 85 85 6] 6] [[-51 18 18 18] -51] [[36 36 -32 36] -32] [[47 -78 47 47] -78] [[-13 32 32 32] -13] [[-30 -30 -30 -83] -83] [(10 10 10 10) 10] [(10 10 10 10) 10] [(99 99 99 99) 99] [(40 40 40 40) 40] [(60 60 60 60) 60] [(57 90 63 88) 57] [(71 54 92 48) 48] [(94 2 23 78) 2] [(85 54 19 77) 19] [(82 87 97 55) 55] [(23 76 44 32) 23] [(55 85 12 91) 12] [(80 32 56 2) 2] [(49 46 60 66) 46] [(56 85 89 32) 32] [(77 61 49 2) 2] [(20 29 11 33) 11] [(42 25 100 74) 25] [(94 67 46 8) 8] [(58 21 82 77) 21] [(68 70 53 90) 53] [(97 72 98 99) 72] [(6 68 27 49) 6] [(18 66 18 92) 18] [(54 25 23 73) 23] [(76 89 -42 32) -42] [(-15 10 19 -78) -78] [(-93 -32 -40 -65) -93] [(70 79 21 -78) -78] [(-1 67 -90 -46) -90] [(48 -37 71 -25) -37] [(53 -28 -84 18) -84] [(-71 -70 51 28) -71] [(-53 0 -40 -69) -69] [(40 -24 61 -63) -63] [(89 -53 20 -29) -53] [(91 -6 65 -55) -55] [(89 -23 87 -31) -31] [(58 -68 -62 97) -68] [(52 44 -87 65) -87] [(-18 -43 -45 -39) -45] [(38 -17 -96 39) -96] [(-68 -48 -53 -59) -68] [(71 -49 72 32) -49] [(-89 -27 39 -5) -89] [(50 -53 -93 97) -93] [(-72 18 -74 -79) -79] [(78 -15 -86 -49) -86] [(-78 -82 77 -89) -89] [(34 -11 -59 12) -59] [(42 -92 28 -71) -92] [(28 -29 -70 24) -70] [(57 -9 -37 -62) -62] [(42 96 74 90) 42] [(-20 54 82 -57) -57] [(94 87 24 90) 24] [(65 92 -53 -84) -84] [(58 -90 8 35) -90] [(-63 -53 17 82) -63] [(-82 -28 -7 -79) -82] [(-21 90 0 -17) -21] [(-21 -45 82 12) -45] [(-21 96 -68 63) -68] [(68 6 17 -34) -34] [(78 -28 -32 -83) -83] [(44 88 53 8) 8] [(69 51 35 -14) -14] [(-95 40 53 4) -95] [(8 -9 -1 -7) -9] [(-89 24 7 -47) -89] [(-79 39 56 -65) -79] [(32 -99 90 69) -99] [(47 78 0 -64) -64] [(-66 79 -37 -43) -66] [(-2 -26 16 -89) -89] [(59 -58 -38 70) -58] [(26 77 -9 -47) -47] [(44 65 28 59) 28] [(5 -98 37 74) -98] [(-72 59 39 32) -72] [(-72 -21 50 -85) -85] [(74 30 -95 20) -95] [(74 35 26 11) 11] [(11 48 73 -70) -70] [(-40 -47 70 70) -47])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[68 93 68 68] 68]
Train Case:   6 | Input/Output: [[8 8 8 -11] -11]
Train Case:   7 | Input/Output: [[-2 -2 -2 -39] -39]
Train Case:   8 | Input/Output: [[31 31 31 11] 11]
Train Case:   9 | Input/Output: [[85 85 85 6] 6]
Train Case:  10 | Input/Output: [[-51 18 18 18] -51]
Train Case:  11 | Input/Output: [[36 36 -32 36] -32]
Train Case:  12 | Input/Output: [[47 -78 47 47] -78]
Train Case:  13 | Input/Output: [[-13 32 32 32] -13]
Train Case:  14 | Input/Output: [[-30 -30 -30 -83] -83]
Train Case:  15 | Input/Output: [(10 10 10 10) 10]
Train Case:  16 | Input/Output: [(10 10 10 10) 10]
Train Case:  17 | Input/Output: [(99 99 99 99) 99]
Train Case:  18 | Input/Output: [(40 40 40 40) 40]
Train Case:  19 | Input/Output: [(60 60 60 60) 60]
Train Case:  20 | Input/Output: [(57 90 63 88) 57]
Train Case:  21 | Input/Output: [(71 54 92 48) 48]
Train Case:  22 | Input/Output: [(94 2 23 78) 2]
Train Case:  23 | Input/Output: [(85 54 19 77) 19]
Train Case:  24 | Input/Output: [(82 87 97 55) 55]
Train Case:  25 | Input/Output: [(23 76 44 32) 23]
Train Case:  26 | Input/Output: [(55 85 12 91) 12]
Train Case:  27 | Input/Output: [(80 32 56 2) 2]
Train Case:  28 | Input/Output: [(49 46 60 66) 46]
Train Case:  29 | Input/Output: [(56 85 89 32) 32]
Train Case:  30 | Input/Output: [(77 61 49 2) 2]
Train Case:  31 | Input/Output: [(20 29 11 33) 11]
Train Case:  32 | Input/Output: [(42 25 100 74) 25]
Train Case:  33 | Input/Output: [(94 67 46 8) 8]
Train Case:  34 | Input/Output: [(58 21 82 77) 21]
Train Case:  35 | Input/Output: [(68 70 53 90) 53]
Train Case:  36 | Input/Output: [(97 72 98 99) 72]
Train Case:  37 | Input/Output: [(6 68 27 49) 6]
Train Case:  38 | Input/Output: [(18 66 18 92) 18]
Train Case:  39 | Input/Output: [(54 25 23 73) 23]
Train Case:  40 | Input/Output: [(76 89 -42 32) -42]
Train Case:  41 | Input/Output: [(-15 10 19 -78) -78]
Train Case:  42 | Input/Output: [(-93 -32 -40 -65) -93]
Train Case:  43 | Input/Output: [(70 79 21 -78) -78]
Train Case:  44 | Input/Output: [(-1 67 -90 -46) -90]
Train Case:  45 | Input/Output: [(48 -37 71 -25) -37]
Train Case:  46 | Input/Output: [(53 -28 -84 18) -84]
Train Case:  47 | Input/Output: [(-71 -70 51 28) -71]
Train Case:  48 | Input/Output: [(-53 0 -40 -69) -69]
Train Case:  49 | Input/Output: [(40 -24 61 -63) -63]
Train Case:  50 | Input/Output: [(89 -53 20 -29) -53]
Train Case:  51 | Input/Output: [(91 -6 65 -55) -55]
Train Case:  52 | Input/Output: [(89 -23 87 -31) -31]
Train Case:  53 | Input/Output: [(58 -68 -62 97) -68]
Train Case:  54 | Input/Output: [(52 44 -87 65) -87]
Train Case:  55 | Input/Output: [(-18 -43 -45 -39) -45]
Train Case:  56 | Input/Output: [(38 -17 -96 39) -96]
Train Case:  57 | Input/Output: [(-68 -48 -53 -59) -68]
Train Case:  58 | Input/Output: [(71 -49 72 32) -49]
Train Case:  59 | Input/Output: [(-89 -27 39 -5) -89]
Train Case:  60 | Input/Output: [(50 -53 -93 97) -93]
Train Case:  61 | Input/Output: [(-72 18 -74 -79) -79]
Train Case:  62 | Input/Output: [(78 -15 -86 -49) -86]
Train Case:  63 | Input/Output: [(-78 -82 77 -89) -89]
Train Case:  64 | Input/Output: [(34 -11 -59 12) -59]
Train Case:  65 | Input/Output: [(42 -92 28 -71) -92]
Train Case:  66 | Input/Output: [(28 -29 -70 24) -70]
Train Case:  67 | Input/Output: [(57 -9 -37 -62) -62]
Train Case:  68 | Input/Output: [(42 96 74 90) 42]
Train Case:  69 | Input/Output: [(-20 54 82 -57) -57]
Train Case:  70 | Input/Output: [(94 87 24 90) 24]
Train Case:  71 | Input/Output: [(65 92 -53 -84) -84]
Train Case:  72 | Input/Output: [(58 -90 8 35) -90]
Train Case:  73 | Input/Output: [(-63 -53 17 82) -63]
Train Case:  74 | Input/Output: [(-82 -28 -7 -79) -82]
Train Case:  75 | Input/Output: [(-21 90 0 -17) -21]
Train Case:  76 | Input/Output: [(-21 -45 82 12) -45]
Train Case:  77 | Input/Output: [(-21 96 -68 63) -68]
Train Case:  78 | Input/Output: [(68 6 17 -34) -34]
Train Case:  79 | Input/Output: [(78 -28 -32 -83) -83]
Train Case:  80 | Input/Output: [(44 88 53 8) 8]
Train Case:  81 | Input/Output: [(69 51 35 -14) -14]
Train Case:  82 | Input/Output: [(-95 40 53 4) -95]
Train Case:  83 | Input/Output: [(8 -9 -1 -7) -9]
Train Case:  84 | Input/Output: [(-89 24 7 -47) -89]
Train Case:  85 | Input/Output: [(-79 39 56 -65) -79]
Train Case:  86 | Input/Output: [(32 -99 90 69) -99]
Train Case:  87 | Input/Output: [(47 78 0 -64) -64]
Train Case:  88 | Input/Output: [(-66 79 -37 -43) -66]
Train Case:  89 | Input/Output: [(-2 -26 16 -89) -89]
Train Case:  90 | Input/Output: [(59 -58 -38 70) -58]
Train Case:  91 | Input/Output: [(26 77 -9 -47) -47]
Train Case:  92 | Input/Output: [(44 65 28 59) 28]
Train Case:  93 | Input/Output: [(5 -98 37 74) -98]
Train Case:  94 | Input/Output: [(-72 59 39 32) -72]
Train Case:  95 | Input/Output: [(-72 -21 50 -85) -85]
Train Case:  96 | Input/Output: [(74 30 -95 20) -95]
Train Case:  97 | Input/Output: [(74 35 26 11) 11]
Train Case:  98 | Input/Output: [(11 48 73 -70) -70]
Train Case:  99 | Input/Output: [(-40 -47 70 70) -47]
Test Case:   0 | Input/Output: [[88 88 37 88] 37]
Test Case:   1 | Input/Output: [[-87 -87 -87 12] -87]
Test Case:   2 | Input/Output: [[-48 -48 -48 -25] -48]
Test Case:   3 | Input/Output: [[-71 -71 -6 -71] -71]
Test Case:   4 | Input/Output: [[-67 -66 -67 -67] -67]
Test Case:   5 | Input/Output: [[67 -35 67 67] -35]
Test Case:   6 | Input/Output: [[-85 68 -85 -85] -85]
Test Case:   7 | Input/Output: [[-17 75 75 75] -17]
Test Case:   8 | Input/Output: [[84 41 41 41] 41]
Test Case:   9 | Input/Output: [[6 51 51 51] 6]
Test Case:  10 | Input/Output: [[-98 -98 -76 -98] -98]
Test Case:  11 | Input/Output: [[21 21 21 90] 21]
Test Case:  12 | Input/Output: [[-65 -44 -44 -44] -65]
Test Case:  13 | Input/Output: [[44 18 18 18] 18]
Test Case:  14 | Input/Output: [[-61 41 -61 -61] -61]
Test Case:  15 | Input/Output: [[-26 90 90 90] -26]
Test Case:  16 | Input/Output: [[-32 -32 -21 -32] -32]
Test Case:  17 | Input/Output: [[-10 -10 28 -10] -10]
Test Case:  18 | Input/Output: [[17 17 17 -92] -92]
Test Case:  19 | Input/Output: [[-85 -85 -32 -85] -85]
Test Case:  20 | Input/Output: [[15 15 -79 15] -79]
Test Case:  21 | Input/Output: [[56 91 91 91] 56]
Test Case:  22 | Input/Output: [[48 24 24 24] 24]
Test Case:  23 | Input/Output: [[81 81 35 81] 35]
Test Case:  24 | Input/Output: [[-13 -13 28 -13] -13]
Test Case:  25 | Input/Output: [[-50 -50 -70 -50] -70]
Test Case:  26 | Input/Output: [[-60 32 32 32] -60]
Test Case:  27 | Input/Output: [[-64 -64 -64 -50] -64]
Test Case:  28 | Input/Output: [[-27 -27 -87 -27] -87]
Test Case:  29 | Input/Output: [[20 32 20 20] 20]
Test Case:  30 | Input/Output: [[-64 -64 -34 -64] -64]
Test Case:  31 | Input/Output: [[-4 -4 -4 2] -4]
Test Case:  32 | Input/Output: [[-98 -85 -98 -98] -98]
Test Case:  33 | Input/Output: [[16 -8 16 16] -8]
Test Case:  34 | Input/Output: [[-14 -14 -14 -48] -48]
Test Case:  35 | Input/Output: [[98 18 18 18] 18]
Test Case:  36 | Input/Output: [[3 3 3 -70] -70]
Test Case:  37 | Input/Output: [[43 79 43 43] 43]
Test Case:  38 | Input/Output: [[1 -42 1 1] -42]
Test Case:  39 | Input/Output: [[76 -49 -49 -49] -49]
Test Case:  40 | Input/Output: [[-59 -59 -59 -50] -59]
Test Case:  41 | Input/Output: [[52 52 52 -56] -56]
Test Case:  42 | Input/Output: [[84 -75 84 84] -75]
Test Case:  43 | Input/Output: [[-7 -7 -42 -7] -42]
Test Case:  44 | Input/Output: [[-72 -11 -72 -72] -72]
Test Case:  45 | Input/Output: [[-90 -90 -90 29] -90]
Test Case:  46 | Input/Output: [[1 -24 1 1] -24]
Test Case:  47 | Input/Output: [[-92 -92 -92 -26] -92]
Test Case:  48 | Input/Output: [[-79 -79 -79 -91] -91]
Test Case:  49 | Input/Output: [[-62 -62 1 -62] -62]
Test Case:  50 | Input/Output: [[-28 -81 -28 -28] -81]
Test Case:  51 | Input/Output: [[-88 54 -88 -88] -88]
Test Case:  52 | Input/Output: [[16 46 46 46] 16]
Test Case:  53 | Input/Output: [[69 38 38 38] 38]
Test Case:  54 | Input/Output: [[81 24 81 81] 24]
Test Case:  55 | Input/Output: [[-45 -45 -51 -45] -51]
Test Case:  56 | Input/Output: [[94 -96 94 94] -96]
Test Case:  57 | Input/Output: [[80 80 80 74] 74]
Test Case:  58 | Input/Output: [[50 50 50 -17] -17]
Test Case:  59 | Input/Output: [[-80 -80 -80 84] -80]
Test Case:  60 | Input/Output: [[-6 -6 -6 -28] -28]
Test Case:  61 | Input/Output: [[-67 -67 -67 64] -67]
Test Case:  62 | Input/Output: [[-35 -35 -35 -34] -35]
Test Case:  63 | Input/Output: [[32 -75 32 32] -75]
Test Case:  64 | Input/Output: [[100 100 -68 100] -68]
Test Case:  65 | Input/Output: [[-18 -18 42 -18] -18]
Test Case:  66 | Input/Output: [[55 93 55 55] 55]
Test Case:  67 | Input/Output: [[-75 -76 -75 -75] -76]
Test Case:  68 | Input/Output: [[100 100 100 55] 55]
Test Case:  69 | Input/Output: [[-71 -71 -71 33] -71]
Test Case:  70 | Input/Output: [[-78 -78 -6 -78] -78]
Test Case:  71 | Input/Output: [[-4 -4 36 -4] -4]
Test Case:  72 | Input/Output: [[14 4 14 14] 4]
Test Case:  73 | Input/Output: [[-38 -100 -100 -100] -100]
Test Case:  74 | Input/Output: [[66 -69 -69 -69] -69]
Test Case:  75 | Input/Output: [[94 94 0 94] 0]
Test Case:  76 | Input/Output: [[-73 -73 4 -73] -73]
Test Case:  77 | Input/Output: [[49 -33 49 49] -33]
Test Case:  78 | Input/Output: [[-18 14 14 14] -18]
Test Case:  79 | Input/Output: [[-59 14 14 14] -59]
Test Case:  80 | Input/Output: [[-38 -55 -38 -38] -55]
Test Case:  81 | Input/Output: [[20 61 61 61] 20]
Test Case:  82 | Input/Output: [[-47 -67 -47 -47] -67]
Test Case:  83 | Input/Output: [[99 20 20 20] 20]
Test Case:  84 | Input/Output: [[-87 75 75 75] -87]
Test Case:  85 | Input/Output: [[-61 -61 -17 -61] -61]
Test Case:  86 | Input/Output: [[-21 -66 -66 -66] -66]
Test Case:  87 | Input/Output: [[-82 -82 47 -82] -82]
Test Case:  88 | Input/Output: [[81 -33 81 81] -33]
Test Case:  89 | Input/Output: [[88 88 -74 88] -74]
Test Case:  90 | Input/Output: [[-52 -52 -52 -17] -52]
Test Case:  91 | Input/Output: [[-73 -44 -73 -73] -73]
Test Case:  92 | Input/Output: [[-44 -81 -44 -44] -81]
Test Case:  93 | Input/Output: [[56 36 36 36] 36]
Test Case:  94 | Input/Output: [[79 -35 -35 -35] -35]
Test Case:  95 | Input/Output: [[88 -45 -45 -45] -45]
Test Case:  96 | Input/Output: [[54 -55 54 54] -55]
Test Case:  97 | Input/Output: [[22 66 22 22] 22]
Test Case:  98 | Input/Output: [[76 76 -97 76] -97]
Test Case:  99 | Input/Output: [[32 -2 32 32] -2]
Test Case: 100 | Input/Output: [(66 66 66 66) 66]
Test Case: 101 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 102 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 103 | Input/Output: [(17 17 17 17) 17]
Test Case: 104 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 105 | Input/Output: [(4 4 4 4) 4]
Test Case: 106 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 107 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 108 | Input/Output: [(50 50 50 50) 50]
Test Case: 109 | Input/Output: [(22 22 22 22) 22]
Test Case: 110 | Input/Output: [(77 77 77 77) 77]
Test Case: 111 | Input/Output: [(18 18 18 18) 18]
Test Case: 112 | Input/Output: [(100 100 100 100) 100]
Test Case: 113 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 114 | Input/Output: [(48 48 48 48) 48]
Test Case: 115 | Input/Output: [(85 85 85 85) 85]
Test Case: 116 | Input/Output: [(76 76 76 76) 76]
Test Case: 117 | Input/Output: [(71 71 71 71) 71]
Test Case: 118 | Input/Output: [(4 4 4 4) 4]
Test Case: 119 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 120 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 121 | Input/Output: [(48 48 48 48) 48]
Test Case: 122 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 123 | Input/Output: [(41 41 41 41) 41]
Test Case: 124 | Input/Output: [(61 61 61 61) 61]
Test Case: 125 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 126 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 127 | Input/Output: [(13 13 13 13) 13]
Test Case: 128 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 129 | Input/Output: [(79 79 79 79) 79]
Test Case: 130 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 131 | Input/Output: [(78 78 78 78) 78]
Test Case: 132 | Input/Output: [(84 84 84 84) 84]
Test Case: 133 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 134 | Input/Output: [(84 84 84 84) 84]
Test Case: 135 | Input/Output: [(96 96 96 96) 96]
Test Case: 136 | Input/Output: [(94 94 94 94) 94]
Test Case: 137 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 138 | Input/Output: [(83 83 83 83) 83]
Test Case: 139 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 140 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 141 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 142 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 143 | Input/Output: [(21 21 21 21) 21]
Test Case: 144 | Input/Output: [(13 13 13 13) 13]
Test Case: 145 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 146 | Input/Output: [(51 51 51 51) 51]
Test Case: 147 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 148 | Input/Output: [(2 2 2 2) 2]
Test Case: 149 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 150 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 151 | Input/Output: [(27 27 27 27) 27]
Test Case: 152 | Input/Output: [(45 45 45 45) 45]
Test Case: 153 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 154 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 155 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 156 | Input/Output: [(16 16 16 16) 16]
Test Case: 157 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 158 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 159 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 160 | Input/Output: [(62 62 62 62) 62]
Test Case: 161 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 162 | Input/Output: [(3 3 3 3) 3]
Test Case: 163 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 164 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 165 | Input/Output: [(13 13 13 13) 13]
Test Case: 166 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 167 | Input/Output: [(48 48 48 48) 48]
Test Case: 168 | Input/Output: [(41 41 41 41) 41]
Test Case: 169 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 170 | Input/Output: [(84 84 84 84) 84]
Test Case: 171 | Input/Output: [(73 73 73 73) 73]
Test Case: 172 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 173 | Input/Output: [(38 38 38 38) 38]
Test Case: 174 | Input/Output: [(31 31 31 31) 31]
Test Case: 175 | Input/Output: [(81 81 81 81) 81]
Test Case: 176 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 177 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 178 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 179 | Input/Output: [(45 45 45 45) 45]
Test Case: 180 | Input/Output: [(98 98 98 98) 98]
Test Case: 181 | Input/Output: [(94 94 94 94) 94]
Test Case: 182 | Input/Output: [(2 2 2 2) 2]
Test Case: 183 | Input/Output: [(74 74 74 74) 74]
Test Case: 184 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 185 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 186 | Input/Output: [(41 41 41 41) 41]
Test Case: 187 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 188 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 189 | Input/Output: [(43 43 43 43) 43]
Test Case: 190 | Input/Output: [(54 54 54 54) 54]
Test Case: 191 | Input/Output: [(70 70 70 70) 70]
Test Case: 192 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 193 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 194 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 195 | Input/Output: [(24 24 24 24) 24]
Test Case: 196 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 197 | Input/Output: [(93 93 93 93) 93]
Test Case: 198 | Input/Output: [(47 47 47 47) 47]
Test Case: 199 | Input/Output: [(66 66 66 66) 66]
Test Case: 200 | Input/Output: [(1 1 4 97) 1]
Test Case: 201 | Input/Output: [(36 5 44 77) 5]
Test Case: 202 | Input/Output: [(51 52 7 81) 7]
Test Case: 203 | Input/Output: [(15 55 16 3) 3]
Test Case: 204 | Input/Output: [(3 81 68 63) 3]
Test Case: 205 | Input/Output: [(91 74 76 63) 63]
Test Case: 206 | Input/Output: [(9 30 10 65) 9]
Test Case: 207 | Input/Output: [(94 58 88 59) 58]
Test Case: 208 | Input/Output: [(21 79 86 85) 21]
Test Case: 209 | Input/Output: [(11 48 0 46) 0]
Test Case: 210 | Input/Output: [(48 20 92 78) 20]
Test Case: 211 | Input/Output: [(94 60 67 58) 58]
Test Case: 212 | Input/Output: [(91 17 1 32) 1]
Test Case: 213 | Input/Output: [(62 24 27 35) 24]
Test Case: 214 | Input/Output: [(53 21 1 24) 1]
Test Case: 215 | Input/Output: [(18 7 49 72) 7]
Test Case: 216 | Input/Output: [(67 95 22 61) 22]
Test Case: 217 | Input/Output: [(17 40 78 13) 13]
Test Case: 218 | Input/Output: [(76 49 72 82) 49]
Test Case: 219 | Input/Output: [(7 42 88 0) 0]
Test Case: 220 | Input/Output: [(85 62 38 25) 25]
Test Case: 221 | Input/Output: [(88 9 65 25) 9]
Test Case: 222 | Input/Output: [(49 18 81 38) 18]
Test Case: 223 | Input/Output: [(29 56 89 38) 29]
Test Case: 224 | Input/Output: [(0 27 80 46) 0]
Test Case: 225 | Input/Output: [(60 99 99 13) 13]
Test Case: 226 | Input/Output: [(31 47 11 95) 11]
Test Case: 227 | Input/Output: [(10 64 35 64) 10]
Test Case: 228 | Input/Output: [(46 92 92 9) 9]
Test Case: 229 | Input/Output: [(29 45 93 40) 29]
Test Case: 230 | Input/Output: [(0 79 57 41) 0]
Test Case: 231 | Input/Output: [(74 60 95 90) 60]
Test Case: 232 | Input/Output: [(56 95 93 33) 33]
Test Case: 233 | Input/Output: [(12 63 24 62) 12]
Test Case: 234 | Input/Output: [(33 58 42 67) 33]
Test Case: 235 | Input/Output: [(79 66 33 1) 1]
Test Case: 236 | Input/Output: [(77 42 49 15) 15]
Test Case: 237 | Input/Output: [(23 40 50 63) 23]
Test Case: 238 | Input/Output: [(34 76 89 26) 26]
Test Case: 239 | Input/Output: [(53 26 47 39) 26]
Test Case: 240 | Input/Output: [(43 92 48 88) 43]
Test Case: 241 | Input/Output: [(85 25 22 84) 22]
Test Case: 242 | Input/Output: [(92 39 59 2) 2]
Test Case: 243 | Input/Output: [(47 75 19 20) 19]
Test Case: 244 | Input/Output: [(95 76 46 80) 46]
Test Case: 245 | Input/Output: [(53 38 99 61) 38]
Test Case: 246 | Input/Output: [(53 15 64 43) 15]
Test Case: 247 | Input/Output: [(84 76 0 68) 0]
Test Case: 248 | Input/Output: [(8 14 7 87) 7]
Test Case: 249 | Input/Output: [(64 89 74 85) 64]
Test Case: 250 | Input/Output: [(61 94 32 5) 5]
Test Case: 251 | Input/Output: [(99 21 7 91) 7]
Test Case: 252 | Input/Output: [(95 31 18 58) 18]
Test Case: 253 | Input/Output: [(79 58 97 35) 35]
Test Case: 254 | Input/Output: [(66 4 17 5) 4]
Test Case: 255 | Input/Output: [(93 23 88 30) 23]
Test Case: 256 | Input/Output: [(13 25 63 68) 13]
Test Case: 257 | Input/Output: [(100 83 4 53) 4]
Test Case: 258 | Input/Output: [(91 44 67 26) 26]
Test Case: 259 | Input/Output: [(12 73 4 60) 4]
Test Case: 260 | Input/Output: [(9 33 72 20) 9]
Test Case: 261 | Input/Output: [(41 55 59 36) 36]
Test Case: 262 | Input/Output: [(0 33 73 38) 0]
Test Case: 263 | Input/Output: [(17 16 43 73) 16]
Test Case: 264 | Input/Output: [(41 89 94 11) 11]
Test Case: 265 | Input/Output: [(83 32 69 24) 24]
Test Case: 266 | Input/Output: [(86 22 5 20) 5]
Test Case: 267 | Input/Output: [(99 35 80 77) 35]
Test Case: 268 | Input/Output: [(68 45 72 94) 45]
Test Case: 269 | Input/Output: [(33 2 49 23) 2]
Test Case: 270 | Input/Output: [(32 89 53 90) 32]
Test Case: 271 | Input/Output: [(46 72 92 53) 46]
Test Case: 272 | Input/Output: [(3 51 77 93) 3]
Test Case: 273 | Input/Output: [(45 50 59 0) 0]
Test Case: 274 | Input/Output: [(47 3 13 50) 3]
Test Case: 275 | Input/Output: [(7 95 32 76) 7]
Test Case: 276 | Input/Output: [(96 0 45 96) 0]
Test Case: 277 | Input/Output: [(88 54 85 4) 4]
Test Case: 278 | Input/Output: [(56 76 4 45) 4]
Test Case: 279 | Input/Output: [(16 45 35 29) 16]
Test Case: 280 | Input/Output: [(61 9 61 66) 9]
Test Case: 281 | Input/Output: [(49 5 39 92) 5]
Test Case: 282 | Input/Output: [(3 35 81 18) 3]
Test Case: 283 | Input/Output: [(40 74 75 24) 24]
Test Case: 284 | Input/Output: [(59 94 14 98) 14]
Test Case: 285 | Input/Output: [(14 60 41 84) 14]
Test Case: 286 | Input/Output: [(80 43 98 46) 43]
Test Case: 287 | Input/Output: [(77 36 34 67) 34]
Test Case: 288 | Input/Output: [(11 48 51 78) 11]
Test Case: 289 | Input/Output: [(22 97 22 81) 22]
Test Case: 290 | Input/Output: [(45 65 83 35) 35]
Test Case: 291 | Input/Output: [(54 17 8 60) 8]
Test Case: 292 | Input/Output: [(63 21 48 93) 21]
Test Case: 293 | Input/Output: [(71 72 65 65) 65]
Test Case: 294 | Input/Output: [(58 16 56 10) 10]
Test Case: 295 | Input/Output: [(75 41 52 5) 5]
Test Case: 296 | Input/Output: [(100 67 70 38) 38]
Test Case: 297 | Input/Output: [(90 16 8 14) 8]
Test Case: 298 | Input/Output: [(93 74 25 92) 25]
Test Case: 299 | Input/Output: [(84 5 90 0) 0]
Test Case: 300 | Input/Output: [(26 0 89 96) 0]
Test Case: 301 | Input/Output: [(74 60 57 52) 52]
Test Case: 302 | Input/Output: [(78 82 10 82) 10]
Test Case: 303 | Input/Output: [(95 68 23 84) 23]
Test Case: 304 | Input/Output: [(9 97 37 4) 4]
Test Case: 305 | Input/Output: [(61 8 12 73) 8]
Test Case: 306 | Input/Output: [(16 54 46 5) 5]
Test Case: 307 | Input/Output: [(88 24 94 69) 24]
Test Case: 308 | Input/Output: [(72 14 99 5) 5]
Test Case: 309 | Input/Output: [(71 98 36 21) 21]
Test Case: 310 | Input/Output: [(6 98 64 22) 6]
Test Case: 311 | Input/Output: [(98 30 63 43) 30]
Test Case: 312 | Input/Output: [(35 23 33 19) 19]
Test Case: 313 | Input/Output: [(60 24 3 61) 3]
Test Case: 314 | Input/Output: [(42 28 45 74) 28]
Test Case: 315 | Input/Output: [(51 98 56 6) 6]
Test Case: 316 | Input/Output: [(5 27 77 49) 5]
Test Case: 317 | Input/Output: [(79 53 92 75) 53]
Test Case: 318 | Input/Output: [(39 45 39 17) 17]
Test Case: 319 | Input/Output: [(60 31 53 72) 31]
Test Case: 320 | Input/Output: [(14 1 67 15) 1]
Test Case: 321 | Input/Output: [(79 70 61 57) 57]
Test Case: 322 | Input/Output: [(48 33 38 92) 33]
Test Case: 323 | Input/Output: [(8 4 89 13) 4]
Test Case: 324 | Input/Output: [(98 42 69 98) 42]
Test Case: 325 | Input/Output: [(32 93 65 93) 32]
Test Case: 326 | Input/Output: [(79 22 2 50) 2]
Test Case: 327 | Input/Output: [(18 55 59 28) 18]
Test Case: 328 | Input/Output: [(51 4 18 11) 4]
Test Case: 329 | Input/Output: [(76 51 33 15) 15]
Test Case: 330 | Input/Output: [(78 47 76 27) 27]
Test Case: 331 | Input/Output: [(32 73 14 20) 14]
Test Case: 332 | Input/Output: [(43 8 46 26) 8]
Test Case: 333 | Input/Output: [(46 73 20 45) 20]
Test Case: 334 | Input/Output: [(4 93 30 31) 4]
Test Case: 335 | Input/Output: [(0 66 38 53) 0]
Test Case: 336 | Input/Output: [(16 53 1 81) 1]
Test Case: 337 | Input/Output: [(6 71 13 9) 6]
Test Case: 338 | Input/Output: [(22 98 41 9) 9]
Test Case: 339 | Input/Output: [(98 29 38 78) 29]
Test Case: 340 | Input/Output: [(49 60 22 37) 22]
Test Case: 341 | Input/Output: [(34 70 24 85) 24]
Test Case: 342 | Input/Output: [(63 68 80 62) 62]
Test Case: 343 | Input/Output: [(91 28 31 27) 27]
Test Case: 344 | Input/Output: [(94 8 18 43) 8]
Test Case: 345 | Input/Output: [(35 52 41 48) 35]
Test Case: 346 | Input/Output: [(100 43 40 40) 40]
Test Case: 347 | Input/Output: [(10 83 14 86) 10]
Test Case: 348 | Input/Output: [(70 74 59 38) 38]
Test Case: 349 | Input/Output: [(93 97 44 37) 37]
Test Case: 350 | Input/Output: [(56 77 40 85) 40]
Test Case: 351 | Input/Output: [(16 17 64 70) 16]
Test Case: 352 | Input/Output: [(97 73 100 61) 61]
Test Case: 353 | Input/Output: [(61 30 45 19) 19]
Test Case: 354 | Input/Output: [(50 89 39 5) 5]
Test Case: 355 | Input/Output: [(27 92 69 18) 18]
Test Case: 356 | Input/Output: [(18 71 70 11) 11]
Test Case: 357 | Input/Output: [(11 80 93 45) 11]
Test Case: 358 | Input/Output: [(12 39 76 40) 12]
Test Case: 359 | Input/Output: [(56 45 55 100) 45]
Test Case: 360 | Input/Output: [(66 82 71 74) 66]
Test Case: 361 | Input/Output: [(52 80 74 18) 18]
Test Case: 362 | Input/Output: [(49 74 38 13) 13]
Test Case: 363 | Input/Output: [(3 27 17 92) 3]
Test Case: 364 | Input/Output: [(64 31 75 46) 31]
Test Case: 365 | Input/Output: [(84 14 26 88) 14]
Test Case: 366 | Input/Output: [(83 34 67 93) 34]
Test Case: 367 | Input/Output: [(89 66 76 74) 66]
Test Case: 368 | Input/Output: [(65 53 17 57) 17]
Test Case: 369 | Input/Output: [(38 12 9 41) 9]
Test Case: 370 | Input/Output: [(71 84 34 3) 3]
Test Case: 371 | Input/Output: [(38 5 64 55) 5]
Test Case: 372 | Input/Output: [(7 84 32 51) 7]
Test Case: 373 | Input/Output: [(77 74 53 78) 53]
Test Case: 374 | Input/Output: [(31 1 94 73) 1]
Test Case: 375 | Input/Output: [(63 25 64 35) 25]
Test Case: 376 | Input/Output: [(54 75 76 88) 54]
Test Case: 377 | Input/Output: [(49 81 24 44) 24]
Test Case: 378 | Input/Output: [(51 74 17 60) 17]
Test Case: 379 | Input/Output: [(81 95 18 11) 11]
Test Case: 380 | Input/Output: [(53 24 99 52) 24]
Test Case: 381 | Input/Output: [(69 50 87 59) 50]
Test Case: 382 | Input/Output: [(59 50 81 81) 50]
Test Case: 383 | Input/Output: [(7 72 34 23) 7]
Test Case: 384 | Input/Output: [(88 76 79 51) 51]
Test Case: 385 | Input/Output: [(6 29 80 98) 6]
Test Case: 386 | Input/Output: [(56 3 71 19) 3]
Test Case: 387 | Input/Output: [(31 66 95 28) 28]
Test Case: 388 | Input/Output: [(94 24 87 53) 24]
Test Case: 389 | Input/Output: [(40 57 79 5) 5]
Test Case: 390 | Input/Output: [(44 1 0 19) 0]
Test Case: 391 | Input/Output: [(38 50 33 21) 21]
Test Case: 392 | Input/Output: [(51 19 86 38) 19]
Test Case: 393 | Input/Output: [(5 25 10 40) 5]
Test Case: 394 | Input/Output: [(2 93 62 100) 2]
Test Case: 395 | Input/Output: [(73 45 58 51) 45]
Test Case: 396 | Input/Output: [(65 55 56 46) 46]
Test Case: 397 | Input/Output: [(32 9 92 5) 5]
Test Case: 398 | Input/Output: [(50 90 85 72) 50]
Test Case: 399 | Input/Output: [(56 99 91 92) 56]
Test Case: 400 | Input/Output: [(86 6 -31 -61) -61]
Test Case: 401 | Input/Output: [(-95 -33 45 -15) -95]
Test Case: 402 | Input/Output: [(65 -63 32 -11) -63]
Test Case: 403 | Input/Output: [(42 -18 -3 99) -18]
Test Case: 404 | Input/Output: [(46 30 34 -67) -67]
Test Case: 405 | Input/Output: [(37 -29 30 -39) -39]
Test Case: 406 | Input/Output: [(23 -100 53 -1) -100]
Test Case: 407 | Input/Output: [(42 57 -99 -54) -99]
Test Case: 408 | Input/Output: [(57 -31 -46 -34) -46]
Test Case: 409 | Input/Output: [(80 -40 -67 -59) -67]
Test Case: 410 | Input/Output: [(-59 -96 19 -92) -96]
Test Case: 411 | Input/Output: [(31 22 -34 -54) -54]
Test Case: 412 | Input/Output: [(22 -47 34 -78) -78]
Test Case: 413 | Input/Output: [(-23 -37 7 -77) -77]
Test Case: 414 | Input/Output: [(-26 66 -48 8) -48]
Test Case: 415 | Input/Output: [(-45 -14 -81 -65) -81]
Test Case: 416 | Input/Output: [(-1 78 -98 -62) -98]
Test Case: 417 | Input/Output: [(-75 -85 13 48) -85]
Test Case: 418 | Input/Output: [(23 82 22 66) 22]
Test Case: 419 | Input/Output: [(83 58 -79 -46) -79]
Test Case: 420 | Input/Output: [(-89 84 29 -64) -89]
Test Case: 421 | Input/Output: [(12 -91 -95 46) -95]
Test Case: 422 | Input/Output: [(17 -50 -15 -24) -50]
Test Case: 423 | Input/Output: [(4 -20 83 -58) -58]
Test Case: 424 | Input/Output: [(-46 42 -69 -40) -69]
Test Case: 425 | Input/Output: [(13 -16 -3 -89) -89]
Test Case: 426 | Input/Output: [(-92 0 -2 89) -92]
Test Case: 427 | Input/Output: [(-5 26 81 12) -5]
Test Case: 428 | Input/Output: [(28 4 41 -58) -58]
Test Case: 429 | Input/Output: [(51 86 -8 -47) -47]
Test Case: 430 | Input/Output: [(-3 -73 18 47) -73]
Test Case: 431 | Input/Output: [(-98 -30 -5 2) -98]
Test Case: 432 | Input/Output: [(17 -4 -49 -29) -49]
Test Case: 433 | Input/Output: [(-46 -63 87 59) -63]
Test Case: 434 | Input/Output: [(-71 -20 -23 48) -71]
Test Case: 435 | Input/Output: [(21 -54 84 -98) -98]
Test Case: 436 | Input/Output: [(-20 99 97 -17) -20]
Test Case: 437 | Input/Output: [(30 68 -86 12) -86]
Test Case: 438 | Input/Output: [(-16 2 -10 -73) -73]
Test Case: 439 | Input/Output: [(-11 22 -53 -73) -73]
Test Case: 440 | Input/Output: [(-97 -62 -70 -10) -97]
Test Case: 441 | Input/Output: [(-23 52 -89 45) -89]
Test Case: 442 | Input/Output: [(-87 -65 -63 -6) -87]
Test Case: 443 | Input/Output: [(34 -53 -28 -28) -53]
Test Case: 444 | Input/Output: [(-64 54 -17 6) -64]
Test Case: 445 | Input/Output: [(-90 38 60 -92) -92]
Test Case: 446 | Input/Output: [(93 7 7 -20) -20]
Test Case: 447 | Input/Output: [(93 -45 59 -63) -63]
Test Case: 448 | Input/Output: [(-22 -44 -99 75) -99]
Test Case: 449 | Input/Output: [(84 -64 -15 -6) -64]
Test Case: 450 | Input/Output: [(59 -6 2 19) -6]
Test Case: 451 | Input/Output: [(-66 18 -8 -67) -67]
Test Case: 452 | Input/Output: [(-83 80 -46 -14) -83]
Test Case: 453 | Input/Output: [(-48 5 28 67) -48]
Test Case: 454 | Input/Output: [(-3 18 95 -78) -78]
Test Case: 455 | Input/Output: [(-35 -14 -41 19) -41]
Test Case: 456 | Input/Output: [(14 -17 4 91) -17]
Test Case: 457 | Input/Output: [(-42 49 30 98) -42]
Test Case: 458 | Input/Output: [(-3 54 -35 24) -35]
Test Case: 459 | Input/Output: [(-19 23 87 -31) -31]
Test Case: 460 | Input/Output: [(0 64 -95 -60) -95]
Test Case: 461 | Input/Output: [(-9 -34 62 44) -34]
Test Case: 462 | Input/Output: [(1 -51 53 24) -51]
Test Case: 463 | Input/Output: [(-76 41 -65 -94) -94]
Test Case: 464 | Input/Output: [(-60 -58 -52 -17) -60]
Test Case: 465 | Input/Output: [(58 -1 -86 58) -86]
Test Case: 466 | Input/Output: [(93 -30 -3 53) -30]
Test Case: 467 | Input/Output: [(25 1 -36 -45) -45]
Test Case: 468 | Input/Output: [(13 -95 -29 88) -95]
Test Case: 469 | Input/Output: [(-18 -39 -59 12) -59]
Test Case: 470 | Input/Output: [(-59 71 59 -34) -59]
Test Case: 471 | Input/Output: [(43 -72 -45 76) -72]
Test Case: 472 | Input/Output: [(-61 -31 -27 43) -61]
Test Case: 473 | Input/Output: [(-1 -51 -28 61) -51]
Test Case: 474 | Input/Output: [(32 -97 40 -71) -97]
Test Case: 475 | Input/Output: [(61 -37 -70 9) -70]
Test Case: 476 | Input/Output: [(-91 43 -96 22) -96]
Test Case: 477 | Input/Output: [(-64 7 -50 73) -64]
Test Case: 478 | Input/Output: [(72 11 24 -86) -86]
Test Case: 479 | Input/Output: [(0 42 -66 -87) -87]
Test Case: 480 | Input/Output: [(54 -75 -38 35) -75]
Test Case: 481 | Input/Output: [(94 -8 86 -52) -52]
Test Case: 482 | Input/Output: [(97 -53 -27 89) -53]
Test Case: 483 | Input/Output: [(39 92 55 -62) -62]
Test Case: 484 | Input/Output: [(-81 9 -25 42) -81]
Test Case: 485 | Input/Output: [(72 -80 -19 -58) -80]
Test Case: 486 | Input/Output: [(-15 -22 -79 -83) -83]
Test Case: 487 | Input/Output: [(58 66 51 -58) -58]
Test Case: 488 | Input/Output: [(-19 -40 -4 30) -40]
Test Case: 489 | Input/Output: [(-53 64 20 93) -53]
Test Case: 490 | Input/Output: [(100 -99 -71 100) -99]
Test Case: 491 | Input/Output: [(-78 -40 -82 30) -82]
Test Case: 492 | Input/Output: [(49 82 -91 -21) -91]
Test Case: 493 | Input/Output: [(-98 55 27 -77) -98]
Test Case: 494 | Input/Output: [(96 -81 -23 -16) -81]
Test Case: 495 | Input/Output: [(-57 -67 -17 96) -67]
Test Case: 496 | Input/Output: [(95 -87 79 54) -87]
Test Case: 497 | Input/Output: [(-58 -57 -94 46) -94]
Test Case: 498 | Input/Output: [(10 -60 0 62) -60]
Test Case: 499 | Input/Output: [(49 48 31 47) 31]
Test Case: 500 | Input/Output: [(-20 100 17 79) -20]
Test Case: 501 | Input/Output: [(-64 73 16 -37) -64]
Test Case: 502 | Input/Output: [(53 56 53 8) 8]
Test Case: 503 | Input/Output: [(-64 63 -8 60) -64]
Test Case: 504 | Input/Output: [(-11 32 -76 -25) -76]
Test Case: 505 | Input/Output: [(-25 43 59 -30) -30]
Test Case: 506 | Input/Output: [(-20 -75 93 99) -75]
Test Case: 507 | Input/Output: [(9 87 7 -34) -34]
Test Case: 508 | Input/Output: [(-97 60 11 84) -97]
Test Case: 509 | Input/Output: [(-18 98 -43 -26) -43]
Test Case: 510 | Input/Output: [(97 -46 87 -85) -85]
Test Case: 511 | Input/Output: [(-38 95 87 78) -38]
Test Case: 512 | Input/Output: [(91 100 -29 21) -29]
Test Case: 513 | Input/Output: [(-41 -43 -12 -72) -72]
Test Case: 514 | Input/Output: [(-68 82 -99 63) -99]
Test Case: 515 | Input/Output: [(-4 17 -26 -66) -66]
Test Case: 516 | Input/Output: [(-19 11 81 79) -19]
Test Case: 517 | Input/Output: [(38 -76 87 -20) -76]
Test Case: 518 | Input/Output: [(-9 -63 49 -41) -63]
Test Case: 519 | Input/Output: [(-32 -70 70 53) -70]
Test Case: 520 | Input/Output: [(42 31 -89 -15) -89]
Test Case: 521 | Input/Output: [(-28 -99 -33 -98) -99]
Test Case: 522 | Input/Output: [(6 55 -41 -13) -41]
Test Case: 523 | Input/Output: [(83 24 -43 64) -43]
Test Case: 524 | Input/Output: [(53 -40 22 -92) -92]
Test Case: 525 | Input/Output: [(-98 17 -38 -76) -98]
Test Case: 526 | Input/Output: [(-73 14 36 -49) -73]
Test Case: 527 | Input/Output: [(86 5 -68 24) -68]
Test Case: 528 | Input/Output: [(-29 98 42 23) -29]
Test Case: 529 | Input/Output: [(-70 0 64 -30) -70]
Test Case: 530 | Input/Output: [(-48 -82 -73 72) -82]
Test Case: 531 | Input/Output: [(-28 -56 65 -58) -58]
Test Case: 532 | Input/Output: [(-36 -65 -60 -63) -65]
Test Case: 533 | Input/Output: [(-23 90 36 -26) -26]
Test Case: 534 | Input/Output: [(-18 100 -71 20) -71]
Test Case: 535 | Input/Output: [(91 82 48 -83) -83]
Test Case: 536 | Input/Output: [(55 65 57 -36) -36]
Test Case: 537 | Input/Output: [(-34 53 -12 -12) -34]
Test Case: 538 | Input/Output: [(2 61 -87 -73) -87]
Test Case: 539 | Input/Output: [(-1 -5 66 -56) -56]
Test Case: 540 | Input/Output: [(-98 26 -37 -21) -98]
Test Case: 541 | Input/Output: [(26 -62 -77 -7) -77]
Test Case: 542 | Input/Output: [(-50 -20 19 100) -50]
Test Case: 543 | Input/Output: [(-66 10 -57 85) -66]
Test Case: 544 | Input/Output: [(-16 -25 -84 21) -84]
Test Case: 545 | Input/Output: [(-18 13 -98 89) -98]
Test Case: 546 | Input/Output: [(96 28 -8 31) -8]
Test Case: 547 | Input/Output: [(56 -40 75 95) -40]
Test Case: 548 | Input/Output: [(-96 49 58 -79) -96]
Test Case: 549 | Input/Output: [(-49 -58 -7 31) -58]
Test Case: 550 | Input/Output: [(-7 -53 73 -28) -53]
Test Case: 551 | Input/Output: [(62 81 51 60) 51]
Test Case: 552 | Input/Output: [(88 -25 81 -97) -97]
Test Case: 553 | Input/Output: [(-30 -35 88 -31) -35]
Test Case: 554 | Input/Output: [(72 -40 -65 -50) -65]
Test Case: 555 | Input/Output: [(84 16 10 60) 10]
Test Case: 556 | Input/Output: [(48 88 -64 -62) -64]
Test Case: 557 | Input/Output: [(-70 -91 -72 83) -91]
Test Case: 558 | Input/Output: [(28 43 15 -35) -35]
Test Case: 559 | Input/Output: [(-50 86 -63 -91) -91]
Test Case: 560 | Input/Output: [(46 -44 -54 -46) -54]
Test Case: 561 | Input/Output: [(17 -100 90 7) -100]
Test Case: 562 | Input/Output: [(-57 5 49 76) -57]
Test Case: 563 | Input/Output: [(-98 -84 67 -88) -98]
Test Case: 564 | Input/Output: [(-19 -76 72 16) -76]
Test Case: 565 | Input/Output: [(-2 -38 -78 -87) -87]
Test Case: 566 | Input/Output: [(-18 67 -86 -69) -86]
Test Case: 567 | Input/Output: [(-20 -45 -63 64) -63]
Test Case: 568 | Input/Output: [(-86 -57 -57 40) -86]
Test Case: 569 | Input/Output: [(-67 12 -28 -85) -85]
Test Case: 570 | Input/Output: [(28 64 -49 84) -49]
Test Case: 571 | Input/Output: [(-59 -56 -10 78) -59]
Test Case: 572 | Input/Output: [(-79 -79 38 48) -79]
Test Case: 573 | Input/Output: [(-77 -68 -85 95) -85]
Test Case: 574 | Input/Output: [(55 -47 23 -81) -81]
Test Case: 575 | Input/Output: [(-84 -60 -70 45) -84]
Test Case: 576 | Input/Output: [(-19 -47 14 -83) -83]
Test Case: 577 | Input/Output: [(-34 -75 -42 -52) -75]
Test Case: 578 | Input/Output: [(-81 52 96 72) -81]
Test Case: 579 | Input/Output: [(-98 -84 65 72) -98]
Test Case: 580 | Input/Output: [(42 13 -22 80) -22]
Test Case: 581 | Input/Output: [(-24 -61 -84 34) -84]
Test Case: 582 | Input/Output: [(53 -27 -80 -76) -80]
Test Case: 583 | Input/Output: [(95 -76 72 -82) -82]
Test Case: 584 | Input/Output: [(-35 -61 -17 70) -61]
Test Case: 585 | Input/Output: [(-61 34 -14 -8) -61]
Test Case: 586 | Input/Output: [(-58 32 7 -71) -71]
Test Case: 587 | Input/Output: [(88 1 66 49) 1]
Test Case: 588 | Input/Output: [(36 23 -10 78) -10]
Test Case: 589 | Input/Output: [(-66 68 -91 24) -91]
Test Case: 590 | Input/Output: [(-44 -95 15 28) -95]
Test Case: 591 | Input/Output: [(-19 -26 16 -55) -55]
Test Case: 592 | Input/Output: [(77 -49 97 -84) -84]
Test Case: 593 | Input/Output: [(80 46 -17 -44) -44]
Test Case: 594 | Input/Output: [(-66 75 35 -85) -85]
Test Case: 595 | Input/Output: [(-57 -65 -79 39) -79]
Test Case: 596 | Input/Output: [(69 100 -46 -26) -46]
Test Case: 597 | Input/Output: [(2 27 52 -20) -20]
Test Case: 598 | Input/Output: [(35 34 -65 5) -65]
Test Case: 599 | Input/Output: [(86 -97 49 -22) -97]
Test Case: 600 | Input/Output: [(-13 -5 -90 54) -90]
Test Case: 601 | Input/Output: [(-83 -34 -25 14) -83]
Test Case: 602 | Input/Output: [(-40 77 50 0) -40]
Test Case: 603 | Input/Output: [(-61 -15 -96 -34) -96]
Test Case: 604 | Input/Output: [(93 -44 -75 -59) -75]
Test Case: 605 | Input/Output: [(-92 -30 47 72) -92]
Test Case: 606 | Input/Output: [(-10 -68 -10 -44) -68]
Test Case: 607 | Input/Output: [(-18 -1 -9 60) -18]
Test Case: 608 | Input/Output: [(-18 95 57 -57) -57]
Test Case: 609 | Input/Output: [(70 -2 85 93) -2]
Test Case: 610 | Input/Output: [(-51 54 36 38) -51]
Test Case: 611 | Input/Output: [(-16 20 -85 -94) -94]
Test Case: 612 | Input/Output: [(19 45 -21 -98) -98]
Test Case: 613 | Input/Output: [(24 -9 84 44) -9]
Test Case: 614 | Input/Output: [(-64 73 83 -88) -88]
Test Case: 615 | Input/Output: [(95 -29 34 -49) -49]
Test Case: 616 | Input/Output: [(31 10 -42 -96) -96]
Test Case: 617 | Input/Output: [(-60 97 50 -11) -60]
Test Case: 618 | Input/Output: [(-87 63 -38 21) -87]
Test Case: 619 | Input/Output: [(27 21 29 -49) -49]
Test Case: 620 | Input/Output: [(63 -72 63 76) -72]
Test Case: 621 | Input/Output: [(-19 -45 -36 -25) -45]
Test Case: 622 | Input/Output: [(10 60 2 70) 2]
Test Case: 623 | Input/Output: [(-64 11 -5 45) -64]
Test Case: 624 | Input/Output: [(-59 55 -39 -71) -71]
Test Case: 625 | Input/Output: [(24 -43 -96 34) -96]
Test Case: 626 | Input/Output: [(49 9 23 -35) -35]
Test Case: 627 | Input/Output: [(43 54 -94 22) -94]
Test Case: 628 | Input/Output: [(-38 -5 -86 71) -86]
Test Case: 629 | Input/Output: [(-94 21 -15 56) -94]
Test Case: 630 | Input/Output: [(15 -65 84 -16) -65]
Test Case: 631 | Input/Output: [(50 -3 -15 -59) -59]
Test Case: 632 | Input/Output: [(-54 54 16 -72) -72]
Test Case: 633 | Input/Output: [(14 -60 -81 -39) -81]
Test Case: 634 | Input/Output: [(-14 -99 -3 65) -99]
Test Case: 635 | Input/Output: [(70 -80 25 1) -80]
Test Case: 636 | Input/Output: [(94 78 -43 -96) -96]
Test Case: 637 | Input/Output: [(-52 62 -67 -73) -73]
Test Case: 638 | Input/Output: [(-53 -6 4 -46) -53]
Test Case: 639 | Input/Output: [(-23 7 27 -20) -23]
Test Case: 640 | Input/Output: [(71 56 -35 -26) -35]
Test Case: 641 | Input/Output: [(85 -13 -77 94) -77]
Test Case: 642 | Input/Output: [(-30 88 -21 -22) -30]
Test Case: 643 | Input/Output: [(-37 -77 98 61) -77]
Test Case: 644 | Input/Output: [(-31 -82 39 74) -82]
Test Case: 645 | Input/Output: [(-50 -96 42 -45) -96]
Test Case: 646 | Input/Output: [(72 -75 5 -41) -75]
Test Case: 647 | Input/Output: [(6 -8 80 -40) -40]
Test Case: 648 | Input/Output: [(44 -21 -83 46) -83]
Test Case: 649 | Input/Output: [(72 -23 -66 53) -66]
Test Case: 650 | Input/Output: [(67 73 -29 26) -29]
Test Case: 651 | Input/Output: [(-17 -23 -63 -58) -63]
Test Case: 652 | Input/Output: [(45 -57 -20 -33) -57]
Test Case: 653 | Input/Output: [(-38 -70 8 -19) -70]
Test Case: 654 | Input/Output: [(57 75 76 90) 57]
Test Case: 655 | Input/Output: [(1 95 -63 -27) -63]
Test Case: 656 | Input/Output: [(-11 77 90 -18) -18]
Test Case: 657 | Input/Output: [(43 -83 -24 56) -83]
Test Case: 658 | Input/Output: [(13 35 -15 -24) -24]
Test Case: 659 | Input/Output: [(-87 97 69 52) -87]
Test Case: 660 | Input/Output: [(18 -50 64 -88) -88]
Test Case: 661 | Input/Output: [(81 -60 -66 -11) -66]
Test Case: 662 | Input/Output: [(-78 -5 100 -82) -82]
Test Case: 663 | Input/Output: [(-32 -71 -78 49) -78]
Test Case: 664 | Input/Output: [(2 49 -12 46) -12]
Test Case: 665 | Input/Output: [(63 -22 -46 79) -46]
Test Case: 666 | Input/Output: [(-19 -38 86 -15) -38]
Test Case: 667 | Input/Output: [(-26 77 89 -51) -51]
Test Case: 668 | Input/Output: [(-81 -27 50 77) -81]
Test Case: 669 | Input/Output: [(64 -35 -18 -86) -86]
Test Case: 670 | Input/Output: [(15 -84 -37 33) -84]
Test Case: 671 | Input/Output: [(-80 -5 -91 20) -91]
Test Case: 672 | Input/Output: [(-57 -22 26 17) -57]
Test Case: 673 | Input/Output: [(-56 23 -72 7) -72]
Test Case: 674 | Input/Output: [(-83 24 -55 65) -83]
Test Case: 675 | Input/Output: [(-13 -68 96 -72) -72]
Test Case: 676 | Input/Output: [(88 -91 20 82) -91]
Test Case: 677 | Input/Output: [(53 -56 -96 83) -96]
Test Case: 678 | Input/Output: [(61 -38 -47 -1) -47]
Test Case: 679 | Input/Output: [(29 15 -47 7) -47]
Test Case: 680 | Input/Output: [(74 61 -53 -21) -53]
Test Case: 681 | Input/Output: [(65 14 -40 -23) -40]
Test Case: 682 | Input/Output: [(37 -8 74 -25) -25]
Test Case: 683 | Input/Output: [(-58 25 94 45) -58]
Test Case: 684 | Input/Output: [(10 89 37 -65) -65]
Test Case: 685 | Input/Output: [(-16 21 -92 58) -92]
Test Case: 686 | Input/Output: [(22 28 -10 81) -10]
Test Case: 687 | Input/Output: [(-49 -2 67 16) -49]
Test Case: 688 | Input/Output: [(-56 -86 -21 -9) -86]
Test Case: 689 | Input/Output: [(-11 20 53 -97) -97]
Test Case: 690 | Input/Output: [(99 -40 66 25) -40]
Test Case: 691 | Input/Output: [(-68 78 -75 89) -75]
Test Case: 692 | Input/Output: [(-88 22 -61 45) -88]
Test Case: 693 | Input/Output: [(12 -5 39 -60) -60]
Test Case: 694 | Input/Output: [(13 8 -29 41) -29]
Test Case: 695 | Input/Output: [(30 25 -88 66) -88]
Test Case: 696 | Input/Output: [(54 81 13 41) 13]
Test Case: 697 | Input/Output: [(-85 66 -73 20) -85]
Test Case: 698 | Input/Output: [(2 61 13 -86) -86]
Test Case: 699 | Input/Output: [(82 -66 -42 -100) -100]
Test Case: 700 | Input/Output: [(13 -26 27 4) -26]
Test Case: 701 | Input/Output: [(42 37 -66 62) -66]
Test Case: 702 | Input/Output: [(-47 46 -25 -41) -47]
Test Case: 703 | Input/Output: [(9 -45 -78 -97) -97]
Test Case: 704 | Input/Output: [(48 -88 66 -87) -88]
Test Case: 705 | Input/Output: [(3 -82 -59 74) -82]
Test Case: 706 | Input/Output: [(23 -49 25 -21) -49]
Test Case: 707 | Input/Output: [(-70 -94 65 16) -94]
Test Case: 708 | Input/Output: [(-90 -63 -38 -64) -90]
Test Case: 709 | Input/Output: [(-59 89 64 -77) -77]
Test Case: 710 | Input/Output: [(-9 52 -12 23) -12]
Test Case: 711 | Input/Output: [(-23 53 -78 -5) -78]
Test Case: 712 | Input/Output: [(-71 96 -45 35) -71]
Test Case: 713 | Input/Output: [(93 26 -33 24) -33]
Test Case: 714 | Input/Output: [(-13 -61 -62 -79) -79]
Test Case: 715 | Input/Output: [(10 -25 -29 93) -29]
Test Case: 716 | Input/Output: [(-4 -24 87 41) -24]
Test Case: 717 | Input/Output: [(-34 100 79 -92) -92]
Test Case: 718 | Input/Output: [(78 -6 -82 60) -82]
Test Case: 719 | Input/Output: [(-39 16 43 -32) -39]
Test Case: 720 | Input/Output: [(-9 -4 -78 37) -78]
Test Case: 721 | Input/Output: [(13 -25 -46 2) -46]
Test Case: 722 | Input/Output: [(77 72 -51 22) -51]
Test Case: 723 | Input/Output: [(-68 -52 11 -12) -68]
Test Case: 724 | Input/Output: [(28 32 64 76) 28]
Test Case: 725 | Input/Output: [(-47 75 27 69) -47]
Test Case: 726 | Input/Output: [(-23 -98 -47 -72) -98]
Test Case: 727 | Input/Output: [(-27 93 46 12) -27]
Test Case: 728 | Input/Output: [(95 -93 12 -95) -95]
Test Case: 729 | Input/Output: [(47 -76 7 85) -76]
Test Case: 730 | Input/Output: [(-2 99 84 -90) -90]
Test Case: 731 | Input/Output: [(60 35 26 -26) -26]
Test Case: 732 | Input/Output: [(18 -27 -2 -43) -43]
Test Case: 733 | Input/Output: [(-51 -77 19 35) -77]
Test Case: 734 | Input/Output: [(22 10 -88 -13) -88]
Test Case: 735 | Input/Output: [(32 -100 46 -38) -100]
Test Case: 736 | Input/Output: [(-41 -65 -12 27) -65]
Test Case: 737 | Input/Output: [(-80 -44 -87 82) -87]
Test Case: 738 | Input/Output: [(48 -74 -61 85) -74]
Test Case: 739 | Input/Output: [(80 -23 76 32) -23]
Test Case: 740 | Input/Output: [(26 98 -65 71) -65]
Test Case: 741 | Input/Output: [(-59 72 37 -8) -59]
Test Case: 742 | Input/Output: [(7 -21 -12 93) -21]
Test Case: 743 | Input/Output: [(-28 -31 42 3) -31]
Test Case: 744 | Input/Output: [(-96 -62 -16 7) -96]
Test Case: 745 | Input/Output: [(94 80 -66 -58) -66]
Test Case: 746 | Input/Output: [(87 47 -63 -78) -78]
Test Case: 747 | Input/Output: [(-86 -90 -33 26) -90]
Test Case: 748 | Input/Output: [(-68 -6 -38 -74) -74]
Test Case: 749 | Input/Output: [(-56 -81 46 -82) -82]
Test Case: 750 | Input/Output: [(-7 36 11 -59) -59]
Test Case: 751 | Input/Output: [(-50 39 26 44) -50]
Test Case: 752 | Input/Output: [(78 97 -31 -75) -75]
Test Case: 753 | Input/Output: [(-71 88 -73 2) -73]
Test Case: 754 | Input/Output: [(-7 43 -22 89) -22]
Test Case: 755 | Input/Output: [(86 19 -18 -75) -75]
Test Case: 756 | Input/Output: [(66 -24 -100 15) -100]
Test Case: 757 | Input/Output: [(8 -30 -40 -33) -40]
Test Case: 758 | Input/Output: [(29 -8 -98 89) -98]
Test Case: 759 | Input/Output: [(-36 84 32 -20) -36]
Test Case: 760 | Input/Output: [(-87 -14 -83 12) -87]
Test Case: 761 | Input/Output: [(59 -85 48 -69) -85]
Test Case: 762 | Input/Output: [(69 -42 -50 -9) -50]
Test Case: 763 | Input/Output: [(75 20 24 -71) -71]
Test Case: 764 | Input/Output: [(-100 2 -39 38) -100]
Test Case: 765 | Input/Output: [(57 -34 71 -73) -73]
Test Case: 766 | Input/Output: [(74 -5 41 65) -5]
Test Case: 767 | Input/Output: [(19 91 18 69) 18]
Test Case: 768 | Input/Output: [(-89 -43 -62 -93) -93]
Test Case: 769 | Input/Output: [(-67 -26 -5 8) -67]
Test Case: 770 | Input/Output: [(-66 -42 -96 70) -96]
Test Case: 771 | Input/Output: [(77 83 23 56) 23]
Test Case: 772 | Input/Output: [(84 -61 -77 -22) -77]
Test Case: 773 | Input/Output: [(-93 28 40 63) -93]
Test Case: 774 | Input/Output: [(75 -89 26 -2) -89]
Test Case: 775 | Input/Output: [(-47 71 -31 -88) -88]
Test Case: 776 | Input/Output: [(-32 -66 -5 39) -66]
Test Case: 777 | Input/Output: [(-52 -99 -41 78) -99]
Test Case: 778 | Input/Output: [(-86 -63 -81 -49) -86]
Test Case: 779 | Input/Output: [(-26 22 62 2) -26]
Test Case: 780 | Input/Output: [(-47 -19 38 44) -47]
Test Case: 781 | Input/Output: [(80 95 -33 -54) -54]
Test Case: 782 | Input/Output: [(-78 15 71 -90) -90]
Test Case: 783 | Input/Output: [(13 -41 -49 92) -49]
Test Case: 784 | Input/Output: [(-58 69 57 43) -58]
Test Case: 785 | Input/Output: [(34 -97 -11 16) -97]
Test Case: 786 | Input/Output: [(4 -84 -94 -76) -94]
Test Case: 787 | Input/Output: [(-47 -99 45 -68) -99]
Test Case: 788 | Input/Output: [(42 -99 -73 -24) -99]
Test Case: 789 | Input/Output: [(-76 29 58 -65) -76]
Test Case: 790 | Input/Output: [(-86 80 1 -74) -86]
Test Case: 791 | Input/Output: [(73 -54 87 31) -54]
Test Case: 792 | Input/Output: [(-44 -11 -79 89) -79]
Test Case: 793 | Input/Output: [(-49 29 80 -49) -49]
Test Case: 794 | Input/Output: [(64 -31 14 -46) -46]
Test Case: 795 | Input/Output: [(57 39 -43 0) -43]
Test Case: 796 | Input/Output: [(-5 8 10 23) -5]
Test Case: 797 | Input/Output: [(-78 48 -59 30) -78]
Test Case: 798 | Input/Output: [(-11 -53 -4 21) -53]
Test Case: 799 | Input/Output: [(-98 71 -66 93) -98]
Test Case: 800 | Input/Output: [(21 35 42 -99) -99]
Test Case: 801 | Input/Output: [(-97 -47 -17 -57) -97]
Test Case: 802 | Input/Output: [(-100 9 -16 -37) -100]
Test Case: 803 | Input/Output: [(9 -78 21 -55) -78]
Test Case: 804 | Input/Output: [(-43 -79 7 -48) -79]
Test Case: 805 | Input/Output: [(86 89 43 -29) -29]
Test Case: 806 | Input/Output: [(21 -16 59 -62) -62]
Test Case: 807 | Input/Output: [(46 35 78 62) 35]
Test Case: 808 | Input/Output: [(0 89 -28 53) -28]
Test Case: 809 | Input/Output: [(5 -77 -6 88) -77]
Test Case: 810 | Input/Output: [(28 59 96 -67) -67]
Test Case: 811 | Input/Output: [(2 40 62 -87) -87]
Test Case: 812 | Input/Output: [(86 93 -76 82) -76]
Test Case: 813 | Input/Output: [(-27 -9 90 -15) -27]
Test Case: 814 | Input/Output: [(100 -67 41 40) -67]
Test Case: 815 | Input/Output: [(61 -47 17 3) -47]
Test Case: 816 | Input/Output: [(-86 34 -47 -86) -86]
Test Case: 817 | Input/Output: [(92 13 -80 75) -80]
Test Case: 818 | Input/Output: [(15 89 -95 58) -95]
Test Case: 819 | Input/Output: [(-44 -79 -92 42) -92]
Test Case: 820 | Input/Output: [(-75 75 42 41) -75]
Test Case: 821 | Input/Output: [(39 -49 -8 -46) -49]
Test Case: 822 | Input/Output: [(-51 -49 -45 39) -51]
Test Case: 823 | Input/Output: [(29 -97 -79 83) -97]
Test Case: 824 | Input/Output: [(-52 -34 32 29) -52]
Test Case: 825 | Input/Output: [(-73 -20 70 96) -73]
Test Case: 826 | Input/Output: [(13 -66 40 -70) -70]
Test Case: 827 | Input/Output: [(28 -35 13 66) -35]
Test Case: 828 | Input/Output: [(-95 -34 -36 86) -95]
Test Case: 829 | Input/Output: [(-17 21 -5 93) -17]
Test Case: 830 | Input/Output: [(59 -42 11 19) -42]
Test Case: 831 | Input/Output: [(-22 93 55 6) -22]
Test Case: 832 | Input/Output: [(-84 49 -82 -5) -84]
Test Case: 833 | Input/Output: [(-15 -81 -44 -44) -81]
Test Case: 834 | Input/Output: [(55 -91 -39 -54) -91]
Test Case: 835 | Input/Output: [(2 0 -79 -34) -79]
Test Case: 836 | Input/Output: [(-28 39 80 26) -28]
Test Case: 837 | Input/Output: [(-41 -87 2 -31) -87]
Test Case: 838 | Input/Output: [(15 -88 -62 5) -88]
Test Case: 839 | Input/Output: [(-71 12 82 -39) -71]
Test Case: 840 | Input/Output: [(-42 29 43 -9) -42]
Test Case: 841 | Input/Output: [(42 -1 -40 97) -40]
Test Case: 842 | Input/Output: [(-74 -15 -33 5) -74]
Test Case: 843 | Input/Output: [(-21 8 41 -33) -33]
Test Case: 844 | Input/Output: [(40 -18 53 100) -18]
Test Case: 845 | Input/Output: [(48 -80 -7 94) -80]
Test Case: 846 | Input/Output: [(-86 -40 2 25) -86]
Test Case: 847 | Input/Output: [(80 71 -67 40) -67]
Test Case: 848 | Input/Output: [(-65 97 -94 -48) -94]
Test Case: 849 | Input/Output: [(75 80 -67 -67) -67]
Test Case: 850 | Input/Output: [(1 12 66 -74) -74]
Test Case: 851 | Input/Output: [(-65 -30 27 89) -65]
Test Case: 852 | Input/Output: [(-23 58 -56 40) -56]
Test Case: 853 | Input/Output: [(-42 65 -47 -69) -69]
Test Case: 854 | Input/Output: [(28 36 -62 29) -62]
Test Case: 855 | Input/Output: [(86 32 56 -27) -27]
Test Case: 856 | Input/Output: [(-41 -38 -4 37) -41]
Test Case: 857 | Input/Output: [(82 51 -17 5) -17]
Test Case: 858 | Input/Output: [(-19 -68 80 6) -68]
Test Case: 859 | Input/Output: [(-38 51 9 68) -38]
Test Case: 860 | Input/Output: [(-100 9 62 -94) -100]
Test Case: 861 | Input/Output: [(-68 -43 -48 54) -68]
Test Case: 862 | Input/Output: [(-60 -4 -14 -26) -60]
Test Case: 863 | Input/Output: [(37 -92 -20 67) -92]
Test Case: 864 | Input/Output: [(-80 5 93 51) -80]
Test Case: 865 | Input/Output: [(57 -7 50 -49) -49]
Test Case: 866 | Input/Output: [(95 -2 43 50) -2]
Test Case: 867 | Input/Output: [(45 56 -30 -74) -74]
Test Case: 868 | Input/Output: [(67 92 20 18) 18]
Test Case: 869 | Input/Output: [(41 48 -84 15) -84]
Test Case: 870 | Input/Output: [(20 47 -75 -53) -75]
Test Case: 871 | Input/Output: [(83 60 99 -19) -19]
Test Case: 872 | Input/Output: [(99 24 -94 -84) -94]
Test Case: 873 | Input/Output: [(-93 -77 99 70) -93]
Test Case: 874 | Input/Output: [(-84 29 31 25) -84]
Test Case: 875 | Input/Output: [(-75 12 -64 -26) -75]
Test Case: 876 | Input/Output: [(16 -97 33 -26) -97]
Test Case: 877 | Input/Output: [(12 95 1 33) 1]
Test Case: 878 | Input/Output: [(12 -75 -22 -53) -75]
Test Case: 879 | Input/Output: [(-14 -16 22 72) -16]
Test Case: 880 | Input/Output: [(88 93 -8 71) -8]
Test Case: 881 | Input/Output: [(-20 -45 -61 38) -61]
Test Case: 882 | Input/Output: [(61 60 15 10) 10]
Test Case: 883 | Input/Output: [(20 -67 -58 -85) -85]
Test Case: 884 | Input/Output: [(7 80 54 59) 7]
Test Case: 885 | Input/Output: [(21 -58 43 -53) -58]
Test Case: 886 | Input/Output: [(56 -47 -50 -17) -50]
Test Case: 887 | Input/Output: [(-4 -30 97 13) -30]
Test Case: 888 | Input/Output: [(70 -31 -21 -11) -31]
Test Case: 889 | Input/Output: [(-86 -17 0 96) -86]
Test Case: 890 | Input/Output: [(23 25 42 -61) -61]
Test Case: 891 | Input/Output: [(-86 58 2 -86) -86]
Test Case: 892 | Input/Output: [(44 16 51 74) 16]
Test Case: 893 | Input/Output: [(-18 -32 99 12) -32]
Test Case: 894 | Input/Output: [(21 36 18 79) 18]
Test Case: 895 | Input/Output: [(50 -99 26 -77) -99]
Test Case: 896 | Input/Output: [(65 22 -13 52) -13]
Test Case: 897 | Input/Output: [(-89 -82 -70 -93) -93]
Test Case: 898 | Input/Output: [(-11 -43 13 77) -43]
Test Case: 899 | Input/Output: [(72 -73 33 59) -73]
Test Case: 900 | Input/Output: [(-99 -96 -25 -18) -99]
Test Case: 901 | Input/Output: [(11 94 -45 34) -45]
Test Case: 902 | Input/Output: [(41 -60 98 -19) -60]
Test Case: 903 | Input/Output: [(-88 -86 39 -28) -88]
Test Case: 904 | Input/Output: [(-80 -93 -34 -67) -93]
Test Case: 905 | Input/Output: [(26 -5 58 -42) -42]
Test Case: 906 | Input/Output: [(84 31 -15 -26) -26]
Test Case: 907 | Input/Output: [(-98 22 -46 46) -98]
Test Case: 908 | Input/Output: [(6 -9 -13 65) -13]
Test Case: 909 | Input/Output: [(72 67 -93 67) -93]
Test Case: 910 | Input/Output: [(-12 56 40 -7) -12]
Test Case: 911 | Input/Output: [(-18 91 84 -5) -18]
Test Case: 912 | Input/Output: [(74 82 -8 37) -8]
Test Case: 913 | Input/Output: [(36 -81 -1 -98) -98]
Test Case: 914 | Input/Output: [(75 -61 15 -35) -61]
Test Case: 915 | Input/Output: [(33 0 98 -78) -78]
Test Case: 916 | Input/Output: [(86 -24 80 -1) -24]
Test Case: 917 | Input/Output: [(-80 -62 60 72) -80]
Test Case: 918 | Input/Output: [(-57 15 -30 -43) -57]
Test Case: 919 | Input/Output: [(22 18 12 37) 12]
Test Case: 920 | Input/Output: [(61 -2 -24 -20) -24]
Test Case: 921 | Input/Output: [(59 -9 59 70) -9]
Test Case: 922 | Input/Output: [(-70 -20 0 -9) -70]
Test Case: 923 | Input/Output: [(97 -59 -61 -94) -94]
Test Case: 924 | Input/Output: [(17 16 -28 51) -28]
Test Case: 925 | Input/Output: [(45 94 8 -34) -34]
Test Case: 926 | Input/Output: [(65 4 -95 65) -95]
Test Case: 927 | Input/Output: [(76 35 -3 86) -3]
Test Case: 928 | Input/Output: [(68 93 69 85) 68]
Test Case: 929 | Input/Output: [(1 4 80 -81) -81]
Test Case: 930 | Input/Output: [(66 -37 88 -50) -50]
Test Case: 931 | Input/Output: [(95 13 4 24) 4]
Test Case: 932 | Input/Output: [(-44 -80 18 6) -80]
Test Case: 933 | Input/Output: [(-72 -68 67 11) -72]
Test Case: 934 | Input/Output: [(42 -77 -72 14) -77]
Test Case: 935 | Input/Output: [(-78 43 -100 -52) -100]
Test Case: 936 | Input/Output: [(0 60 60 -60) -60]
Test Case: 937 | Input/Output: [(49 -20 43 -2) -20]
Test Case: 938 | Input/Output: [(-35 -16 25 -42) -42]
Test Case: 939 | Input/Output: [(-94 -17 73 1) -94]
Test Case: 940 | Input/Output: [(21 -65 -18 32) -65]
Test Case: 941 | Input/Output: [(-67 71 -15 83) -67]
Test Case: 942 | Input/Output: [(-38 27 76 44) -38]
Test Case: 943 | Input/Output: [(17 49 -74 99) -74]
Test Case: 944 | Input/Output: [(65 92 21 80) 21]
Test Case: 945 | Input/Output: [(31 22 22 -42) -42]
Test Case: 946 | Input/Output: [(90 3 33 -5) -5]
Test Case: 947 | Input/Output: [(83 -38 -68 71) -68]
Test Case: 948 | Input/Output: [(-12 35 38 -11) -12]
Test Case: 949 | Input/Output: [(-42 -4 78 38) -42]
Test Case: 950 | Input/Output: [(-99 -68 -97 56) -99]
Test Case: 951 | Input/Output: [(62 82 28 50) 28]
Test Case: 952 | Input/Output: [(56 81 -95 -16) -95]
Test Case: 953 | Input/Output: [(-92 44 -60 94) -92]
Test Case: 954 | Input/Output: [(-39 47 38 -68) -68]
Test Case: 955 | Input/Output: [(2 -81 -65 -36) -81]
Test Case: 956 | Input/Output: [(52 -61 74 82) -61]
Test Case: 957 | Input/Output: [(-3 15 0 -50) -50]
Test Case: 958 | Input/Output: [(90 -53 42 70) -53]
Test Case: 959 | Input/Output: [(68 -95 -32 -51) -95]
Test Case: 960 | Input/Output: [(66 2 -2 95) -2]
Test Case: 961 | Input/Output: [(72 46 -10 -67) -67]
Test Case: 962 | Input/Output: [(76 -62 40 -20) -62]
Test Case: 963 | Input/Output: [(-19 35 -12 -99) -99]
Test Case: 964 | Input/Output: [(68 -66 -63 -82) -82]
Test Case: 965 | Input/Output: [(-21 8 13 56) -21]
Test Case: 966 | Input/Output: [(27 -85 10 -99) -99]
Test Case: 967 | Input/Output: [(-85 82 5 -16) -85]
Test Case: 968 | Input/Output: [(-38 -23 -14 -90) -90]
Test Case: 969 | Input/Output: [(-53 94 -1 -83) -83]
Test Case: 970 | Input/Output: [(-85 100 -50 48) -85]
Test Case: 971 | Input/Output: [(-48 81 -94 73) -94]
Test Case: 972 | Input/Output: [(-57 38 82 99) -57]
Test Case: 973 | Input/Output: [(-16 51 -64 -85) -85]
Test Case: 974 | Input/Output: [(72 -36 -50 11) -50]
Test Case: 975 | Input/Output: [(-49 97 -28 76) -49]
Test Case: 976 | Input/Output: [(100 -87 12 -95) -95]
Test Case: 977 | Input/Output: [(-3 -26 33 28) -26]
Test Case: 978 | Input/Output: [(78 36 51 64) 36]
Test Case: 979 | Input/Output: [(58 -98 100 17) -98]
Test Case: 980 | Input/Output: [(97 -7 49 34) -7]
Test Case: 981 | Input/Output: [(91 -43 97 -91) -91]
Test Case: 982 | Input/Output: [(36 -9 -51 50) -51]
Test Case: 983 | Input/Output: [(-38 32 -56 -31) -56]
Test Case: 984 | Input/Output: [(-29 3 70 -39) -39]
Test Case: 985 | Input/Output: [(98 44 1 32) 1]
Test Case: 986 | Input/Output: [(-83 63 -1 98) -83]
Test Case: 987 | Input/Output: [(78 80 41 -63) -63]
Test Case: 988 | Input/Output: [(37 -45 84 83) -45]
Test Case: 989 | Input/Output: [(54 -54 50 14) -54]
Test Case: 990 | Input/Output: [(-25 34 -17 63) -25]
Test Case: 991 | Input/Output: [(-9 -76 -77 6) -77]
Test Case: 992 | Input/Output: [(19 -85 -2 -68) -85]
Test Case: 993 | Input/Output: [(62 -79 -88 -15) -88]
Test Case: 994 | Input/Output: [(86 -38 34 -89) -89]
Test Case: 995 | Input/Output: [(31 9 -26 37) -26]
Test Case: 996 | Input/Output: [(-63 44 -24 -73) -73]
Test Case: 997 | Input/Output: [(57 -86 -68 68) -86]
Test Case: 998 | Input/Output: [(81 -8 29 -96) -96]
Test Case: 999 | Input/Output: [(9 -81 12 -75) -81]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = -14 -28 39 -14 -126 -121 6 54 1 96 -24 -119 114 65 126 67
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[68 93 68 68] 68] [[8 8 8 -11] -11] [[-2 -2 -2 -39] -39] [[31 31 31 11] 11] [[85 85 85 6] 6] [[-51 18 18 18] -51] [[36 36 -32 36] -32] [[47 -78 47 47] -78] [[-13 32 32 32] -13] [[-30 -30 -30 -83] -83] [(10 10 10 10) 10] [(10 10 10 10) 10] [(99 99 99 99) 99] [(40 40 40 40) 40] [(60 60 60 60) 60] [(57 90 63 88) 57] [(71 54 92 48) 48] [(94 2 23 78) 2] [(85 54 19 77) 19] [(82 87 97 55) 55] [(23 76 44 32) 23] [(55 85 12 91) 12] [(80 32 56 2) 2] [(49 46 60 66) 46] [(56 85 89 32) 32] [(77 61 49 2) 2] [(20 29 11 33) 11] [(42 25 100 74) 25] [(94 67 46 8) 8] [(58 21 82 77) 21] [(68 70 53 90) 53] [(97 72 98 99) 72] [(6 68 27 49) 6] [(18 66 18 92) 18] [(54 25 23 73) 23] [(76 89 -42 32) -42] [(-15 10 19 -78) -78] [(-93 -32 -40 -65) -93] [(70 79 21 -78) -78] [(-1 67 -90 -46) -90] [(48 -37 71 -25) -37] [(53 -28 -84 18) -84] [(-71 -70 51 28) -71] [(-53 0 -40 -69) -69] [(40 -24 61 -63) -63] [(89 -53 20 -29) -53] [(91 -6 65 -55) -55] [(89 -23 87 -31) -31] [(58 -68 -62 97) -68] [(52 44 -87 65) -87] [(-18 -43 -45 -39) -45] [(38 -17 -96 39) -96] [(-68 -48 -53 -59) -68] [(71 -49 72 32) -49] [(-89 -27 39 -5) -89] [(50 -53 -93 97) -93] [(-72 18 -74 -79) -79] [(78 -15 -86 -49) -86] [(-78 -82 77 -89) -89] [(34 -11 -59 12) -59] [(42 -92 28 -71) -92] [(28 -29 -70 24) -70] [(57 -9 -37 -62) -62] [(42 96 74 90) 42] [(-20 54 82 -57) -57] [(94 87 24 90) 24] [(65 92 -53 -84) -84] [(58 -90 8 35) -90] [(-63 -53 17 82) -63] [(-82 -28 -7 -79) -82] [(-21 90 0 -17) -21] [(-21 -45 82 12) -45] [(-21 96 -68 63) -68] [(68 6 17 -34) -34] [(78 -28 -32 -83) -83] [(44 88 53 8) 8] [(69 51 35 -14) -14] [(-95 40 53 4) -95] [(8 -9 -1 -7) -9] [(-89 24 7 -47) -89] [(-79 39 56 -65) -79] [(32 -99 90 69) -99] [(47 78 0 -64) -64] [(-66 79 -37 -43) -66] [(-2 -26 16 -89) -89] [(59 -58 -38 70) -58] [(26 77 -9 -47) -47] [(44 65 28 59) 28] [(5 -98 37 74) -98] [(-72 59 39 32) -72] [(-72 -21 50 -85) -85] [(74 30 -95 20) -95] [(74 35 26 11) 11] [(11 48 73 -70) -70] [(-40 -47 70 70) -47])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: 8                  
Correct output: -39                 | Program output: -2                 
Correct output: 11                  | Program output: 31                 
Correct output: 6                   | Program output: 85                 
Correct output: -51                 | Program output: 18                 
Correct output: -32                 | Program output: -32                
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: 32                 
Correct output: -83                 | Program output: -30                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 63                 
Correct output: 48                  | Program output: 92                 
Correct output: 2                   | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: 55                  | Program output: 97                 
Correct output: 23                  | Program output: 44                 
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 56                 
Correct output: 46                  | Program output: 60                 
Correct output: 32                  | Program output: 89                 
Correct output: 2                   | Program output: 49                 
Correct output: 11                  | Program output: 11                 
Correct output: 25                  | Program output: 100                
Correct output: 8                   | Program output: 46                 
Correct output: 21                  | Program output: 82                 
Correct output: 53                  | Program output: 53                 
Correct output: 72                  | Program output: 98                 
Correct output: 6                   | Program output: 27                 
Correct output: 18                  | Program output: 18                 
Correct output: 23                  | Program output: 23                 
Correct output: -42                 | Program output: -42                
Correct output: -78                 | Program output: 19                 
Correct output: -93                 | Program output: -40                
Correct output: -78                 | Program output: 21                 
Correct output: -90                 | Program output: -90                
Correct output: -37                 | Program output: 71                 
Correct output: -84                 | Program output: -84                
Correct output: -71                 | Program output: 51                 
Correct output: -69                 | Program output: -40                
Correct output: -63                 | Program output: 61                 
Correct output: -53                 | Program output: 20                 
Correct output: -55                 | Program output: 65                 
Correct output: -31                 | Program output: 87                 
Correct output: -68                 | Program output: -62                
Correct output: -87                 | Program output: -87                
Correct output: -45                 | Program output: -45                
Correct output: -96                 | Program output: -96                
Correct output: -68                 | Program output: -53                
Correct output: -49                 | Program output: 72                 
Correct output: -89                 | Program output: 39                 
Correct output: -93                 | Program output: -93                
Correct output: -79                 | Program output: -74                
Correct output: -86                 | Program output: -86                
Correct output: -89                 | Program output: 77                 
Correct output: -59                 | Program output: -59                
Correct output: -92                 | Program output: 28                 
Correct output: -70                 | Program output: -70                
Correct output: -62                 | Program output: -37                
Correct output: 42                  | Program output: 74                 
Correct output: -57                 | Program output: 82                 
Correct output: 24                  | Program output: 24                 
Correct output: -84                 | Program output: -53                
Correct output: -90                 | Program output: 8                  
Correct output: -63                 | Program output: 17                 
Correct output: -82                 | Program output: -7                 
Correct output: -21                 | Program output: 0                  
Correct output: -45                 | Program output: 82                 
Correct output: -68                 | Program output: -68                
Correct output: -34                 | Program output: 17                 
Correct output: -83                 | Program output: -32                
Correct output: 8                   | Program output: 53                 
Correct output: -14                 | Program output: 35                 
Correct output: -95                 | Program output: 53                 
Correct output: -9                  | Program output: -1                 
Correct output: -89                 | Program output: 7                  
Correct output: -79                 | Program output: 56                 
Correct output: -99                 | Program output: 90                 
Correct output: -64                 | Program output: 0                  
Correct output: -66                 | Program output: -37                
Correct output: -89                 | Program output: 16                 
Correct output: -58                 | Program output: -38                
Correct output: -47                 | Program output: -9                 
Correct output: 28                  | Program output: 28                 
Correct output: -98                 | Program output: 37                 
Correct output: -72                 | Program output: 39                 
Correct output: -85                 | Program output: 50                 
Correct output: -95                 | Program output: -95                
Correct output: 11                  | Program output: 26                 
Correct output: -70                 | Program output: 73                 
Correct output: -47                 | Program output: 70                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction tagged_99} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction tagged_361} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction boolean_eq} {:close 1, :instruction integer_pop} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 1, :instruction print_integer} {:close 0, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_swap} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction in4} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_lt} {:close 1, :instruction tagged_651} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_when} {:close 0, :instruction integer_sub} {:close 2, :instruction exec_do*range} {:close 0, :instruction exec_do*range} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction tagged_322} {:close 0, :instruction exec_if} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in3} {:close 0, :instruction boolean_and} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_lt} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction tagged_471} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_and} {:close 1, :instruction integer_gt} {:close 1, :instruction integer_swap} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction tag_exec_116} {:close 0, :instruction print_integer})
Lexicase best program: (tagged_99 exec_k_when_autoconstructing () (tagged_361 integer_sub exec_pop (boolean_dup_items boolean_eq) integer_pop) boolean_yankdup boolean_dup_items exec_yank exec_y_when_autoconstructing () exec_dup (print_integer) in1 integer_dec integer_swap exec_swap () (integer_mod boolean_frominteger in4) boolean_invert_first_then_and integer_fromboolean integer_lt tagged_651 boolean_flush exec_when (integer_sub exec_do*range ()) exec_do*range (in1 in3 tagged_322 exec_if (integer_lte boolean_invert_first_then_and integer_dec exec_dup_items in3 boolean_and integer_lt) (integer_lt) print_integer exec_s_when_autoconstructing (exec_pop (integer_fromboolean tagged_471 exec_do*range (exec_k_when_autoconstructing (integer_dup_times integer_yankdup) (exec_s_when_autoconstructing (exec_dup (boolean_and integer_gt) integer_swap) (boolean_xor boolean_yankdup) (tag_exec_116 (print_integer)))))) () ()))
Lexicase best errors: [0 0 1 0 1 0 1 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 85
Percent parens: 0.294
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction tagged_99} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction tagged_361} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction boolean_eq} {:close 1, :instruction integer_pop} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 1, :instruction print_integer} {:close 0, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_swap} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction in4} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_lt} {:close 1, :instruction tagged_651} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_when} {:close 0, :instruction integer_sub} {:close 2, :instruction exec_do*range} {:close 0, :instruction exec_do*range} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction tagged_322} {:close 0, :instruction exec_if} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in3} {:close 0, :instruction boolean_and} {:close 1, :instruction integer_lt} {:close 1, :instruction integer_lt} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction tagged_471} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_and} {:close 1, :instruction integer_gt} {:close 1, :instruction integer_swap} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction tag_exec_116} {:close 0, :instruction print_integer})
Zero cases best program: (tagged_99 exec_k_when_autoconstructing () (tagged_361 integer_sub exec_pop (boolean_dup_items boolean_eq) integer_pop) boolean_yankdup boolean_dup_items exec_yank exec_y_when_autoconstructing () exec_dup (print_integer) in1 integer_dec integer_swap exec_swap () (integer_mod boolean_frominteger in4) boolean_invert_first_then_and integer_fromboolean integer_lt tagged_651 boolean_flush exec_when (integer_sub exec_do*range ()) exec_do*range (in1 in3 tagged_322 exec_if (integer_lte boolean_invert_first_then_and integer_dec exec_dup_items in3 boolean_and integer_lt) (integer_lt) print_integer exec_s_when_autoconstructing (exec_pop (integer_fromboolean tagged_471 exec_do*range (exec_k_when_autoconstructing (integer_dup_times integer_yankdup) (exec_s_when_autoconstructing (exec_dup (boolean_and integer_gt) integer_swap) (boolean_xor boolean_yankdup) (tag_exec_116 (print_integer)))))) () ()))
Zero cases best errors: [0 0 1 0 1 0 1 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 85
Percent parens: 0.294
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 6 2 5 1 6 1000 13 1 1)
Population mean number of elite cases: 1.04
Count of perfect (error zero) individuals by case: (4 6 2 5 1 6 0 13 1 1)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_while} {:close 0, :instruction boolean_xor} {:close 1, :instruction in3} {:close 0, :instruction tagged_607} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*times})
Best program: (exec_while () boolean_xor in3 tagged_607 print_integer exec_do*times ())
Errors: [0 0 1 0 1 0 1 0 1 1]
Total: 5
Mean: 0.5
Genome size: 6
Size: 9
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 9.961
Median total errors in population: 10
Error averages by case: (0.996 0.994 0.998 0.995 0.999 0.994 1.0 0.987 0.999 0.999)
Error minima by case: (0 0 0 0 0 0 1 0 0 0)
Average genome size in population (length): 49.64
Average program size in population (points): 68.372
Average percent parens in population: 0.283
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.289
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 493700
--- Timings ---
Current time: 1559594132678 milliseconds
Total Time:           2.6 seconds
Initialization:       0.1 seconds,  3.8%
Reproduction:         0.7 seconds, 28.6%
Fitness Testing:      1.7 seconds, 67.6%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: 8                  
Correct output: -39                 | Program output: -2                 
Correct output: 11                  | Program output: 31                 
Correct output: 6                   | Program output: 85                 
Correct output: -51                 | Program output: 18                 
Correct output: -32                 | Program output: -32                
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: 32                 
Correct output: -83                 | Program output: -30                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 63                 
Correct output: 48                  | Program output: 92                 
Correct output: 2                   | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: 55                  | Program output: 97                 
Correct output: 23                  | Program output: 44                 
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 56                 
Correct output: 46                  | Program output: 60                 
Correct output: 32                  | Program output: 89                 
Correct output: 2                   | Program output: 49                 
Correct output: 11                  | Program output: 11                 
Correct output: 25                  | Program output: 100                
Correct output: 8                   | Program output: 46                 
Correct output: 21                  | Program output: 82                 
Correct output: 53                  | Program output: 53                 
Correct output: 72                  | Program output: 98                 
Correct output: 6                   | Program output: 27                 
Correct output: 18                  | Program output: 18                 
Correct output: 23                  | Program output: 23                 
Correct output: -42                 | Program output: -42                
Correct output: -78                 | Program output: 19                 
Correct output: -93                 | Program output: -40                
Correct output: -78                 | Program output: 21                 
Correct output: -90                 | Program output: -90                
Correct output: -37                 | Program output: 71                 
Correct output: -84                 | Program output: -84                
Correct output: -71                 | Program output: 51                 
Correct output: -69                 | Program output: -40                
Correct output: -63                 | Program output: 61                 
Correct output: -53                 | Program output: 20                 
Correct output: -55                 | Program output: 65                 
Correct output: -31                 | Program output: 87                 
Correct output: -68                 | Program output: -62                
Correct output: -87                 | Program output: -87                
Correct output: -45                 | Program output: -45                
Correct output: -96                 | Program output: -96                
Correct output: -68                 | Program output: -53                
Correct output: -49                 | Program output: 72                 
Correct output: -89                 | Program output: 39                 
Correct output: -93                 | Program output: -93                
Correct output: -79                 | Program output: -74                
Correct output: -86                 | Program output: -86                
Correct output: -89                 | Program output: 77                 
Correct output: -59                 | Program output: -59                
Correct output: -92                 | Program output: 28                 
Correct output: -70                 | Program output: -70                
Correct output: -62                 | Program output: -37                
Correct output: 42                  | Program output: 74                 
Correct output: -57                 | Program output: 82                 
Correct output: 24                  | Program output: 24                 
Correct output: -84                 | Program output: -53                
Correct output: -90                 | Program output: 8                  
Correct output: -63                 | Program output: 17                 
Correct output: -82                 | Program output: -7                 
Correct output: -21                 | Program output: 0                  
Correct output: -45                 | Program output: 82                 
Correct output: -68                 | Program output: -68                
Correct output: -34                 | Program output: 17                 
Correct output: -83                 | Program output: -32                
Correct output: 8                   | Program output: 53                 
Correct output: -14                 | Program output: 35                 
Correct output: -95                 | Program output: 53                 
Correct output: -9                  | Program output: -1                 
Correct output: -89                 | Program output: 7                  
Correct output: -79                 | Program output: 56                 
Correct output: -99                 | Program output: 90                 
Correct output: -64                 | Program output: 0                  
Correct output: -66                 | Program output: -37                
Correct output: -89                 | Program output: 16                 
Correct output: -58                 | Program output: -38                
Correct output: -47                 | Program output: -9                 
Correct output: 28                  | Program output: 28                 
Correct output: -98                 | Program output: 37                 
Correct output: -72                 | Program output: 39                 
Correct output: -85                 | Program output: 50                 
Correct output: -95                 | Program output: -95                
Correct output: 11                  | Program output: 26                 
Correct output: -70                 | Program output: 73                 
Correct output: -47                 | Program output: 70                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_sub} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_not} {:close 1, :instruction print_integer} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_max} {:close 0, :instruction print_boolean} {:close 0, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_while} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_yank} {:close 0, :instruction print_exec} {:close 0, :instruction print_integer} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_s} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_gt} {:close 2, :instruction integer_flush} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 2, :instruction print_exec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 1, :instruction print_integer} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_empty} {:close 1, :instruction tagged_97})
Lexicase best program: (integer_sub integer_inc boolean_not print_integer exec_do*times (integer_max print_boolean in3 boolean_eq print_integer boolean_stackdepth boolean_frominteger) exec_swap (exec_while () exec_pop (exec_stackdepth exec_yank print_exec (print_integer integer_empty integer_swap integer_empty) exec_s (exec_pop (integer_add integer_pop exec_s (boolean_empty print_integer exec_y (exec_k () (integer_shove exec_swap () (exec_k_when_autoconstructing (integer_gt integer_flush) () exec_swap () (integer_dup_items integer_gt) boolean_frominteger print_exec ()) boolean_dup_times boolean_yankdup integer_yank exec_dup_items) exec_do*while (exec_eq print_integer) print_boolean integer_pop integer_yankdup integer_empty tagged_97)) () ())) () ())) ())
Lexicase best errors: [1 0 1 0 0 0 1 1 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 78
Percent parens: 0.321
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_sub} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_not} {:close 1, :instruction print_integer} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_max} {:close 0, :instruction print_boolean} {:close 0, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_while} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_yank} {:close 0, :instruction print_exec} {:close 0, :instruction print_integer} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_s} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_gt} {:close 2, :instruction integer_flush} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 2, :instruction print_exec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_dup_items} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 1, :instruction print_integer} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_empty} {:close 1, :instruction tagged_97})
Zero cases best program: (integer_sub integer_inc boolean_not print_integer exec_do*times (integer_max print_boolean in3 boolean_eq print_integer boolean_stackdepth boolean_frominteger) exec_swap (exec_while () exec_pop (exec_stackdepth exec_yank print_exec (print_integer integer_empty integer_swap integer_empty) exec_s (exec_pop (integer_add integer_pop exec_s (boolean_empty print_integer exec_y (exec_k () (integer_shove exec_swap () (exec_k_when_autoconstructing (integer_gt integer_flush) () exec_swap () (integer_dup_items integer_gt) boolean_frominteger print_exec ()) boolean_dup_times boolean_yankdup integer_yank exec_dup_items) exec_do*while (exec_eq print_integer) print_boolean integer_pop integer_yankdup integer_empty tagged_97)) () ())) () ())) ())
Zero cases best errors: [1 0 1 0 0 0 1 1 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 78
Percent parens: 0.321
--- Lexicase Population Statistics ---
Count of elite individuals by case: (112 584 5 265 262 261 16 187 5 17)
Population mean number of elite cases: 1.71
Count of perfect (error zero) individuals by case: (112 584 5 265 262 261 16 187 5 17)
Population mean number of perfect (error zero) cases: 1.71
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_sub} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_not} {:close 1, :instruction print_integer} {:close 0, :instruction print_integer} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_max} {:close 0, :instruction print_boolean} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_while} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_yank} {:close 0, :instruction print_exec} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_s} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_y} {:close 1, :instruction exec_k} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 2, :instruction integer_flush} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_swap} {:close 2, :instruction print_exec} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_yank} {:close 1, :instruction exec_dup_items} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_eq} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_yankdup} {:close 1, :instruction tagged_97})
Best program: (integer_sub integer_inc boolean_not print_integer print_integer exec_do*times (integer_max print_boolean in2 in3 boolean_eq print_integer boolean_stackdepth exec_k_when_autoconstructing (integer_mult exec_swap (exec_while () exec_pop (exec_stackdepth exec_yank print_exec (boolean_dup_items print_integer integer_dup_items integer_swap exec_s (exec_pop (integer_add integer_pop exec_s (boolean_empty exec_y (exec_k () (exec_swap () (exec_k_when_autoconstructing (integer_flush) () integer_dup_items integer_gt) boolean_frominteger boolean_swap print_exec ()) boolean_dup_times boolean_yankdup integer_yank exec_dup_items) print_boolean exec_do*while (integer_mod exec_eq print_boolean integer_pop integer_yankdup tagged_97)) () ())) () ()))) ()) ()))
Errors: [1 0 1 0 0 0 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 53
Size: 78
Percent parens: 0.321
--- Population Statistics ---
Average total errors in population: 8.286
Median total errors in population: 8
Error averages by case: (0.888 0.416 0.995 0.735 0.738 0.739 0.984 0.813 0.995 0.983)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 31.463
Average program size in population (points): 44.134
Average percent parens in population: 0.263
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 54
Genome diversity (% unique genomes):	 0.853
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.852
Total error diversity:				 0.005
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.173
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 958278
--- Timings ---
Current time: 1559594134634 milliseconds
Total Time:           4.6 seconds
Initialization:       0.1 seconds,  2.1%
Reproduction:         1.9 seconds, 40.9%
Fitness Testing:      2.4 seconds, 50.9%
Report:               0.3 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 658
Test mean error for best: 0.65800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: 8                  
Correct output: -39                 | Program output: -2                 
Correct output: 11                  | Program output: 31                 
Correct output: 6                   | Program output: 85                 
Correct output: -51                 | Program output: -51                
Correct output: -32                 | Program output: 36                 
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: -13                
Correct output: -83                 | Program output: -30                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 57                 
Correct output: 48                  | Program output: 71                 
Correct output: 2                   | Program output: 94                 
Correct output: 19                  | Program output: 85                 
Correct output: 55                  | Program output: 82                 
Correct output: 23                  | Program output: 23                 
Correct output: 12                  | Program output: 55                 
Correct output: 2                   | Program output: 80                 
Correct output: 46                  | Program output: 49                 
Correct output: 32                  | Program output: 56                 
Correct output: 2                   | Program output: 77                 
Correct output: 11                  | Program output: 20                 
Correct output: 25                  | Program output: 42                 
Correct output: 8                   | Program output: 94                 
Correct output: 21                  | Program output: 58                 
Correct output: 53                  | Program output: 68                 
Correct output: 72                  | Program output: 97                 
Correct output: 6                   | Program output: 6                  
Correct output: 18                  | Program output: 18                 
Correct output: 23                  | Program output: 54                 
Correct output: -42                 | Program output: 76                 
Correct output: -78                 | Program output: -15                
Correct output: -93                 | Program output: -93                
Correct output: -78                 | Program output: 70                 
Correct output: -90                 | Program output: -1                 
Correct output: -37                 | Program output: 48                 
Correct output: -84                 | Program output: 53                 
Correct output: -71                 | Program output: -71                
Correct output: -69                 | Program output: -53                
Correct output: -63                 | Program output: 40                 
Correct output: -53                 | Program output: 89                 
Correct output: -55                 | Program output: 91                 
Correct output: -31                 | Program output: 89                 
Correct output: -68                 | Program output: 58                 
Correct output: -87                 | Program output: 52                 
Correct output: -45                 | Program output: -18                
Correct output: -96                 | Program output: 38                 
Correct output: -68                 | Program output: -68                
Correct output: -49                 | Program output: 71                 
Correct output: -89                 | Program output: -89                
Correct output: -93                 | Program output: 50                 
Correct output: -79                 | Program output: -72                
Correct output: -86                 | Program output: 78                 
Correct output: -89                 | Program output: -78                
Correct output: -59                 | Program output: 34                 
Correct output: -92                 | Program output: 42                 
Correct output: -70                 | Program output: 28                 
Correct output: -62                 | Program output: 57                 
Correct output: 42                  | Program output: 42                 
Correct output: -57                 | Program output: -20                
Correct output: 24                  | Program output: 94                 
Correct output: -84                 | Program output: 65                 
Correct output: -90                 | Program output: 58                 
Correct output: -63                 | Program output: -63                
Correct output: -82                 | Program output: -82                
Correct output: -21                 | Program output: -21                
Correct output: -45                 | Program output: -21                
Correct output: -68                 | Program output: -21                
Correct output: -34                 | Program output: 68                 
Correct output: -83                 | Program output: 78                 
Correct output: 8                   | Program output: 44                 
Correct output: -14                 | Program output: 69                 
Correct output: -95                 | Program output: -95                
Correct output: -9                  | Program output: 8                  
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: -79                
Correct output: -99                 | Program output: 32                 
Correct output: -64                 | Program output: 47                 
Correct output: -66                 | Program output: -66                
Correct output: -89                 | Program output: -2                 
Correct output: -58                 | Program output: 59                 
Correct output: -47                 | Program output: 26                 
Correct output: 28                  | Program output: 44                 
Correct output: -98                 | Program output: 5                  
Correct output: -72                 | Program output: -72                
Correct output: -85                 | Program output: -72                
Correct output: -95                 | Program output: 74                 
Correct output: 11                  | Program output: 74                 
Correct output: -70                 | Program output: 11                 
Correct output: -47                 | Program output: -40                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 1, :instruction integer_gte} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_do*range} {:close 0, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in4} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_yank} {:close 1, :instruction integer_pop} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_flush} {:close 0, :instruction in1} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_shove})
Lexicase best program: (in1 integer_gte integer_lte exec_do*range () integer_yankdup print_integer boolean_frominteger in4 boolean_invert_first_then_and exec_while () boolean_or integer_yankdup boolean_yank exec_yank integer_pop integer_inc boolean_invert_first_then_and boolean_shove exec_do*range (integer_yank integer_mod boolean_flush in1 boolean_frominteger) boolean_eq in3 exec_s_when_autoconstructing (exec_stackdepth) (exec_shove ()) ())
Lexicase best errors: [1 1 1 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 37
Percent parens: 0.216
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 1, :instruction integer_gte} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_do*range} {:close 0, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in4} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_yank} {:close 1, :instruction integer_pop} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_flush} {:close 0, :instruction in1} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_shove})
Zero cases best program: (in1 integer_gte integer_lte exec_do*range () integer_yankdup print_integer boolean_frominteger in4 boolean_invert_first_then_and exec_while () boolean_or integer_yankdup boolean_yank exec_yank integer_pop integer_inc boolean_invert_first_then_and boolean_shove exec_do*range (integer_yank integer_mod boolean_flush in1 boolean_frominteger) boolean_eq in3 exec_s_when_autoconstructing (exec_stackdepth) (exec_shove ()) ())
Zero cases best errors: [1 1 1 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 37
Percent parens: 0.216
--- Lexicase Population Statistics ---
Count of elite individuals by case: (227 252 240 90 90 648 252 231 90 89)
Population mean number of elite cases: 2.21
Count of perfect (error zero) individuals by case: (227 252 240 90 90 648 252 231 90 89)
Population mean number of perfect (error zero) cases: 2.21
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 1, :instruction integer_gte} {:close 0, :instruction integer_lte} {:close 1, :instruction exec_do*range} {:close 0, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_eq} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_add} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_flush} {:close 0, :instruction in1} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_dup_items} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_shove})
Best program: (in1 integer_gte integer_lte exec_do*range () integer_yankdup print_integer exec_eq boolean_invert_first_then_and integer_lte boolean_or integer_yankdup boolean_yank integer_add integer_inc boolean_invert_first_then_and boolean_shove exec_dup_times () exec_do*range (integer_mod boolean_flush in1 boolean_eq in3) exec_s_when_autoconstructing (exec_stackdepth) (exec_dup_items) (exec_y_when_autoconstructing () integer_lt exec_shove ()))
Errors: [1 1 1 0 0 0 1 1 0 0]
Total: 5
Mean: 0.5
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 7.791
Median total errors in population: 7
Error averages by case: (0.773 0.748 0.76 0.91 0.91 0.352 0.748 0.769 0.91 0.911)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 24.979
Average program size in population (points): 34.239
Average percent parens in population: 0.227
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 27
Genome diversity (% unique genomes):	 0.859
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 27
Syntactic diversity (% unique Push programs):	 0.859
Total error diversity:				 0.006
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.128
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1281286
--- Timings ---
Current time: 1559594136430 milliseconds
Total Time:           6.4 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         3.1 seconds, 48.1%
Fitness Testing:      2.7 seconds, 42.9%
Report:               0.5 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 642
Test mean error for best: 0.64200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: -11                
Correct output: -39                 | Program output: -39                
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: -51                 | Program output: 18                 
Correct output: -32                 | Program output: 36                 
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: 32                 
Correct output: -83                 | Program output: -83                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 88                 
Correct output: 48                  | Program output: 48                 
Correct output: 2                   | Program output: 78                 
Correct output: 19                  | Program output: 77                 
Correct output: 55                  | Program output: 55                 
Correct output: 23                  | Program output: 32                 
Correct output: 12                  | Program output: 91                 
Correct output: 2                   | Program output: 2                  
Correct output: 46                  | Program output: 66                 
Correct output: 32                  | Program output: 32                 
Correct output: 2                   | Program output: 2                  
Correct output: 11                  | Program output: 33                 
Correct output: 25                  | Program output: 74                 
Correct output: 8                   | Program output: 8                  
Correct output: 21                  | Program output: 77                 
Correct output: 53                  | Program output: 90                 
Correct output: 72                  | Program output: 99                 
Correct output: 6                   | Program output: 49                 
Correct output: 18                  | Program output: 92                 
Correct output: 23                  | Program output: 73                 
Correct output: -42                 | Program output: 32                 
Correct output: -78                 | Program output: -78                
Correct output: -93                 | Program output: -65                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -46                
Correct output: -37                 | Program output: -25                
Correct output: -84                 | Program output: 18                 
Correct output: -71                 | Program output: 28                 
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -53                 | Program output: -29                
Correct output: -55                 | Program output: -55                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: 97                 
Correct output: -87                 | Program output: 65                 
Correct output: -45                 | Program output: -39                
Correct output: -96                 | Program output: 39                 
Correct output: -68                 | Program output: -59                
Correct output: -49                 | Program output: 32                 
Correct output: -89                 | Program output: -5                 
Correct output: -93                 | Program output: 97                 
Correct output: -79                 | Program output: -79                
Correct output: -86                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -59                 | Program output: 12                 
Correct output: -92                 | Program output: -71                
Correct output: -70                 | Program output: 24                 
Correct output: -62                 | Program output: -62                
Correct output: 42                  | Program output: 90                 
Correct output: -57                 | Program output: -57                
Correct output: 24                  | Program output: 90                 
Correct output: -84                 | Program output: -84                
Correct output: -90                 | Program output: 35                 
Correct output: -63                 | Program output: 82                 
Correct output: -82                 | Program output: -79                
Correct output: -21                 | Program output: -17                
Correct output: -45                 | Program output: 12                 
Correct output: -68                 | Program output: 63                 
Correct output: -34                 | Program output: -34                
Correct output: -83                 | Program output: -83                
Correct output: 8                   | Program output: 8                  
Correct output: -14                 | Program output: -14                
Correct output: -95                 | Program output: 4                  
Correct output: -9                  | Program output: -7                 
Correct output: -89                 | Program output: -47                
Correct output: -79                 | Program output: -65                
Correct output: -99                 | Program output: 69                 
Correct output: -64                 | Program output: -64                
Correct output: -66                 | Program output: -43                
Correct output: -89                 | Program output: -89                
Correct output: -58                 | Program output: 70                 
Correct output: -47                 | Program output: -47                
Correct output: 28                  | Program output: 59                 
Correct output: -98                 | Program output: 74                 
Correct output: -72                 | Program output: 32                 
Correct output: -85                 | Program output: -85                
Correct output: -95                 | Program output: 20                 
Correct output: 11                  | Program output: 11                 
Correct output: -70                 | Program output: -70                
Correct output: -47                 | Program output: 70                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_mult} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lte} {:close 2, :instruction in4} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_shove})
Lexicase best program: (integer_mult boolean_flush exec_y_when_autoconstructing (integer_lte in4) integer_rot print_integer in3 print_boolean boolean_flush boolean_shove)
Lexicase best errors: [1 0 0 0 1 1 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 13
Percent parens: 0.154
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_mult} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lte} {:close 2, :instruction in4} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_shove})
Zero cases best program: (integer_mult boolean_flush exec_y_when_autoconstructing (integer_lte in4) integer_rot print_integer in3 print_boolean boolean_flush boolean_shove)
Zero cases best errors: [1 0 0 0 1 1 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 13
Percent parens: 0.154
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 254 254 590 2 2 253 575 643 254)
Population mean number of elite cases: 2.83
Count of perfect (error zero) individuals by case: (2 254 254 590 2 2 253 575 643 254)
Population mean number of perfect (error zero) cases: 2.83
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_flush} {:close 2, :instruction in4} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_flush})
Best program: (boolean_flush in4 integer_rot integer_min print_integer in3 boolean_dup print_boolean boolean_flush)
Errors: [1 0 0 0 1 1 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 9
Size: 10
Percent parens: 0.100
--- Population Statistics ---
Average total errors in population: 7.171
Median total errors in population: 7
Error averages by case: (0.998 0.746 0.746 0.41 0.998 0.998 0.747 0.425 0.357 0.746)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 32.271
Average program size in population (points): 43.388
Average percent parens in population: 0.227
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 7
Genome diversity (% unique genomes):	 0.959
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.959
Total error diversity:				 0.007
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.199
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1626114
--- Timings ---
Current time: 1559594138178 milliseconds
Total Time:           8.2 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.3 seconds, 52.0%
Fitness Testing:      3.1 seconds, 38.2%
Report:               0.7 seconds,  8.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 640
Test mean error for best: 0.64000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 68                  | Program output: 93                 
Correct output: -11                 | Program output: 8                  
Correct output: -39                 | Program output: -2                 
Correct output: 11                  | Program output: 31                 
Correct output: 6                   | Program output: 85                 
Correct output: -51                 | Program output: 18                 
Correct output: -32                 | Program output: 36                 
Correct output: -78                 | Program output: -78                
Correct output: -13                 | Program output: 32                 
Correct output: -83                 | Program output: -30                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 90                 
Correct output: 48                  | Program output: 54                 
Correct output: 2                   | Program output: 2                  
Correct output: 19                  | Program output: 54                 
Correct output: 55                  | Program output: 87                 
Correct output: 23                  | Program output: 76                 
Correct output: 12                  | Program output: 85                 
Correct output: 2                   | Program output: 32                 
Correct output: 46                  | Program output: 46                 
Correct output: 32                  | Program output: 85                 
Correct output: 2                   | Program output: 61                 
Correct output: 11                  | Program output: 29                 
Correct output: 25                  | Program output: 25                 
Correct output: 8                   | Program output: 67                 
Correct output: 21                  | Program output: 21                 
Correct output: 53                  | Program output: 70                 
Correct output: 72                  | Program output: 72                 
Correct output: 6                   | Program output: 68                 
Correct output: 18                  | Program output: 66                 
Correct output: 23                  | Program output: 25                 
Correct output: -42                 | Program output: 89                 
Correct output: -78                 | Program output: 10                 
Correct output: -93                 | Program output: -32                
Correct output: -78                 | Program output: 79                 
Correct output: -90                 | Program output: 67                 
Correct output: -37                 | Program output: -37                
Correct output: -84                 | Program output: -28                
Correct output: -71                 | Program output: -70                
Correct output: -69                 | Program output: 0                  
Correct output: -63                 | Program output: -24                
Correct output: -53                 | Program output: -53                
Correct output: -55                 | Program output: -6                 
Correct output: -31                 | Program output: -23                
Correct output: -68                 | Program output: -68                
Correct output: -87                 | Program output: 44                 
Correct output: -45                 | Program output: -43                
Correct output: -96                 | Program output: -17                
Correct output: -68                 | Program output: -48                
Correct output: -49                 | Program output: -49                
Correct output: -89                 | Program output: -27                
Correct output: -93                 | Program output: -53                
Correct output: -79                 | Program output: 18                 
Correct output: -86                 | Program output: -15                
Correct output: -89                 | Program output: -82                
Correct output: -59                 | Program output: -11                
Correct output: -92                 | Program output: -92                
Correct output: -70                 | Program output: -29                
Correct output: -62                 | Program output: -9                 
Correct output: 42                  | Program output: 96                 
Correct output: -57                 | Program output: 54                 
Correct output: 24                  | Program output: 87                 
Correct output: -84                 | Program output: 92                 
Correct output: -90                 | Program output: -90                
Correct output: -63                 | Program output: -53                
Correct output: -82                 | Program output: -28                
Correct output: -21                 | Program output: 90                 
Correct output: -45                 | Program output: -45                
Correct output: -68                 | Program output: 96                 
Correct output: -34                 | Program output: 6                  
Correct output: -83                 | Program output: -28                
Correct output: 8                   | Program output: 88                 
Correct output: -14                 | Program output: 51                 
Correct output: -95                 | Program output: 40                 
Correct output: -9                  | Program output: -9                 
Correct output: -89                 | Program output: 24                 
Correct output: -79                 | Program output: 39                 
Correct output: -99                 | Program output: -99                
Correct output: -64                 | Program output: 78                 
Correct output: -66                 | Program output: 79                 
Correct output: -89                 | Program output: -26                
Correct output: -58                 | Program output: -58                
Correct output: -47                 | Program output: 77                 
Correct output: 28                  | Program output: 65                 
Correct output: -98                 | Program output: -98                
Correct output: -72                 | Program output: 59                 
Correct output: -85                 | Program output: -21                
Correct output: -95                 | Program output: 30                 
Correct output: 11                  | Program output: 35                 
Correct output: -70                 | Program output: 48                 
Correct output: -47                 | Program output: -47                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_mult} {:close 2, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_dup} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_flush} {:close 0, :instruction tagged_532})
Lexicase best program: (integer_mult in4 print_integer boolean_dup in3 boolean_dup print_boolean boolean_flush tagged_532)
Lexicase best errors: [1 1 0 0 1 0 1 1 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 10
Percent parens: 0.100
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_mult} {:close 2, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_dup} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup} {:close 1, :instruction print_boolean} {:close 0, :instruction boolean_flush} {:close 0, :instruction tagged_532})
Zero cases best program: (integer_mult in4 print_integer boolean_dup in3 boolean_dup print_boolean boolean_flush tagged_532)
Zero cases best errors: [1 1 0 0 1 0 1 1 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 10
Percent parens: 0.100
--- Lexicase Population Statistics ---
Count of elite individuals by case: (342 1 772 426 342 420 5 1 422 342)
Population mean number of elite cases: 3.07
Count of perfect (error zero) individuals by case: (342 1 772 426 342 420 5 1 422 342)
Population mean number of perfect (error zero) cases: 3.07
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_mult} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_rot} {:close 1, :instruction in2} {:close 0, :instruction print_integer} {:close 1, :instruction tag_boolean_541} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_div} {:close 1, :instruction integer_sub} {:close 0, :instruction boolean_flush})
Best program: (integer_mult boolean_flush integer_rot in2 print_integer tag_boolean_541 integer_mult integer_div integer_sub boolean_flush)
Errors: [0 1 0 1 0 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 10
Size: 11
Percent parens: 0.091
--- Population Statistics ---
Average total errors in population: 6.927
Median total errors in population: 6
Error averages by case: (0.658 0.999 0.228 0.574 0.658 0.58 0.995 0.999 0.578 0.658)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.974
Average program size in population (points): 13.489
Average percent parens in population: 0.163
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 45
Genome diversity (% unique genomes):	 0.797
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.796
Total error diversity:				 0.005
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 1807662
--- Timings ---
Current time: 1559594139674 milliseconds
Total Time:           9.8 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.5 seconds, 55.9%
Fitness Testing:      3.4 seconds, 34.4%
Report:               0.8 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 658
Test mean error for best: 0.65800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: 8                  
Correct output: -39                 | Program output: -2                 
Correct output: 11                  | Program output: 31                 
Correct output: 6                   | Program output: 85                 
Correct output: -51                 | Program output: -51                
Correct output: -32                 | Program output: 36                 
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: -13                
Correct output: -83                 | Program output: -30                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 57                 
Correct output: 48                  | Program output: 71                 
Correct output: 2                   | Program output: 94                 
Correct output: 19                  | Program output: 85                 
Correct output: 55                  | Program output: 82                 
Correct output: 23                  | Program output: 23                 
Correct output: 12                  | Program output: 55                 
Correct output: 2                   | Program output: 80                 
Correct output: 46                  | Program output: 49                 
Correct output: 32                  | Program output: 56                 
Correct output: 2                   | Program output: 77                 
Correct output: 11                  | Program output: 20                 
Correct output: 25                  | Program output: 42                 
Correct output: 8                   | Program output: 94                 
Correct output: 21                  | Program output: 58                 
Correct output: 53                  | Program output: 68                 
Correct output: 72                  | Program output: 97                 
Correct output: 6                   | Program output: 6                  
Correct output: 18                  | Program output: 18                 
Correct output: 23                  | Program output: 54                 
Correct output: -42                 | Program output: 76                 
Correct output: -78                 | Program output: -15                
Correct output: -93                 | Program output: -93                
Correct output: -78                 | Program output: 70                 
Correct output: -90                 | Program output: -1                 
Correct output: -37                 | Program output: 48                 
Correct output: -84                 | Program output: 53                 
Correct output: -71                 | Program output: -71                
Correct output: -69                 | Program output: -53                
Correct output: -63                 | Program output: 40                 
Correct output: -53                 | Program output: 89                 
Correct output: -55                 | Program output: 91                 
Correct output: -31                 | Program output: 89                 
Correct output: -68                 | Program output: 58                 
Correct output: -87                 | Program output: 52                 
Correct output: -45                 | Program output: -18                
Correct output: -96                 | Program output: 38                 
Correct output: -68                 | Program output: -68                
Correct output: -49                 | Program output: 71                 
Correct output: -89                 | Program output: -89                
Correct output: -93                 | Program output: 50                 
Correct output: -79                 | Program output: -72                
Correct output: -86                 | Program output: 78                 
Correct output: -89                 | Program output: -78                
Correct output: -59                 | Program output: 34                 
Correct output: -92                 | Program output: 42                 
Correct output: -70                 | Program output: 28                 
Correct output: -62                 | Program output: 57                 
Correct output: 42                  | Program output: 42                 
Correct output: -57                 | Program output: -20                
Correct output: 24                  | Program output: 94                 
Correct output: -84                 | Program output: 65                 
Correct output: -90                 | Program output: 58                 
Correct output: -63                 | Program output: -63                
Correct output: -82                 | Program output: -82                
Correct output: -21                 | Program output: -21                
Correct output: -45                 | Program output: -21                
Correct output: -68                 | Program output: -21                
Correct output: -34                 | Program output: 68                 
Correct output: -83                 | Program output: 78                 
Correct output: 8                   | Program output: 44                 
Correct output: -14                 | Program output: 69                 
Correct output: -95                 | Program output: -95                
Correct output: -9                  | Program output: 8                  
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: -79                
Correct output: -99                 | Program output: 32                 
Correct output: -64                 | Program output: 47                 
Correct output: -66                 | Program output: -66                
Correct output: -89                 | Program output: -2                 
Correct output: -58                 | Program output: 59                 
Correct output: -47                 | Program output: 26                 
Correct output: 28                  | Program output: 44                 
Correct output: -98                 | Program output: 5                  
Correct output: -72                 | Program output: -72                
Correct output: -85                 | Program output: -72                
Correct output: -95                 | Program output: 74                 
Correct output: 11                  | Program output: 74                 
Correct output: -70                 | Program output: 11                 
Correct output: -47                 | Program output: -40                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 1, :instruction integer_gte} {:close 1, :instruction integer_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_pop} {:close 0, :instruction integer_gte} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lt})
Lexicase best program: (in1 integer_gte integer_eq exec_do*range () print_integer exec_while () boolean_invert_first_then_and exec_eq integer_stackdepth boolean_or integer_yankdup integer_shove boolean_yank integer_swap integer_pop integer_gte integer_inc boolean_invert_first_then_and boolean_invert_first_then_and integer_yank integer_mod boolean_eq in3 integer_fromboolean exec_s_when_autoconstructing (exec_swap (exec_y_when_autoconstructing () integer_lt) ()) () ())
Lexicase best errors: [0 0 1 1 1 1 1 0 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 37
Percent parens: 0.243
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 1, :instruction integer_gte} {:close 1, :instruction integer_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_pop} {:close 0, :instruction integer_gte} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lt})
Zero cases best program: (in1 integer_gte integer_eq exec_do*range () print_integer exec_while () boolean_invert_first_then_and exec_eq integer_stackdepth boolean_or integer_yankdup integer_shove boolean_yank integer_swap integer_pop integer_gte integer_inc boolean_invert_first_then_and boolean_invert_first_then_and integer_yank integer_mod boolean_eq in3 integer_fromboolean exec_s_when_autoconstructing (exec_swap (exec_y_when_autoconstructing () integer_lt) ()) () ())
Zero cases best errors: [0 0 1 1 1 1 1 0 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 37
Percent parens: 0.243
--- Lexicase Population Statistics ---
Count of elite individuals by case: (102 405 214 198 301 301 215 102 101 215)
Population mean number of elite cases: 2.15
Count of perfect (error zero) individuals by case: (102 405 214 198 301 301 215 102 101 215)
Population mean number of perfect (error zero) cases: 2.15
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_pop} {:close 0, :instruction integer_gte} {:close 1, :instruction integer_inc} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_div} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_shove})
Best program: (in1 exec_do*range () print_integer exec_while () boolean_invert_first_then_and integer_stackdepth boolean_swap boolean_or integer_yankdup boolean_rot integer_shove boolean_yank integer_swap integer_pop integer_gte integer_inc boolean_invert_first_then_and boolean_invert_first_then_and exec_do*range (integer_yank integer_div integer_mod boolean_eq in3) integer_fromboolean exec_s_when_autoconstructing (exec_y_when_autoconstructing () integer_lt exec_shove ()) () ())
Errors: [0 0 1 1 1 1 1 0 0 1]
Total: 6
Mean: 0.6
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 7.846
Median total errors in population: 7
Error averages by case: (0.898 0.595 0.786 0.802 0.699 0.699 0.785 0.898 0.899 0.785)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.56
Average program size in population (points): 14.796
Average percent parens in population: 0.197
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 38
Genome diversity (% unique genomes):	 0.859
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 38
Syntactic diversity (% unique Push programs):	 0.858
Total error diversity:				 0.005
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.059
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 1985589
--- Timings ---
Current time: 1559594141252 milliseconds
Total Time:          11.3 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         6.6 seconds, 58.9%
Fitness Testing:      3.6 seconds, 31.8%
Report:               1.0 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 642
Test mean error for best: 0.64200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: -11                
Correct output: -39                 | Program output: -39                
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: -51                 | Program output: 18                 
Correct output: -32                 | Program output: 36                 
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: 32                 
Correct output: -83                 | Program output: -83                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 88                 
Correct output: 48                  | Program output: 48                 
Correct output: 2                   | Program output: 78                 
Correct output: 19                  | Program output: 77                 
Correct output: 55                  | Program output: 55                 
Correct output: 23                  | Program output: 32                 
Correct output: 12                  | Program output: 91                 
Correct output: 2                   | Program output: 2                  
Correct output: 46                  | Program output: 66                 
Correct output: 32                  | Program output: 32                 
Correct output: 2                   | Program output: 2                  
Correct output: 11                  | Program output: 33                 
Correct output: 25                  | Program output: 74                 
Correct output: 8                   | Program output: 8                  
Correct output: 21                  | Program output: 77                 
Correct output: 53                  | Program output: 90                 
Correct output: 72                  | Program output: 99                 
Correct output: 6                   | Program output: 49                 
Correct output: 18                  | Program output: 92                 
Correct output: 23                  | Program output: 73                 
Correct output: -42                 | Program output: 32                 
Correct output: -78                 | Program output: -78                
Correct output: -93                 | Program output: -65                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -46                
Correct output: -37                 | Program output: -25                
Correct output: -84                 | Program output: 18                 
Correct output: -71                 | Program output: 28                 
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -53                 | Program output: -29                
Correct output: -55                 | Program output: -55                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: 97                 
Correct output: -87                 | Program output: 65                 
Correct output: -45                 | Program output: -39                
Correct output: -96                 | Program output: 39                 
Correct output: -68                 | Program output: -59                
Correct output: -49                 | Program output: 32                 
Correct output: -89                 | Program output: -5                 
Correct output: -93                 | Program output: 97                 
Correct output: -79                 | Program output: -79                
Correct output: -86                 | Program output: -49                
Correct output: -89                 | Program output: -89                
Correct output: -59                 | Program output: 12                 
Correct output: -92                 | Program output: -71                
Correct output: -70                 | Program output: 24                 
Correct output: -62                 | Program output: -62                
Correct output: 42                  | Program output: 90                 
Correct output: -57                 | Program output: -57                
Correct output: 24                  | Program output: 90                 
Correct output: -84                 | Program output: -84                
Correct output: -90                 | Program output: 35                 
Correct output: -63                 | Program output: 82                 
Correct output: -82                 | Program output: -79                
Correct output: -21                 | Program output: -17                
Correct output: -45                 | Program output: 12                 
Correct output: -68                 | Program output: 63                 
Correct output: -34                 | Program output: -34                
Correct output: -83                 | Program output: -83                
Correct output: 8                   | Program output: 8                  
Correct output: -14                 | Program output: -14                
Correct output: -95                 | Program output: 4                  
Correct output: -9                  | Program output: -7                 
Correct output: -89                 | Program output: -47                
Correct output: -79                 | Program output: -65                
Correct output: -99                 | Program output: 69                 
Correct output: -64                 | Program output: -64                
Correct output: -66                 | Program output: -43                
Correct output: -89                 | Program output: -89                
Correct output: -58                 | Program output: 70                 
Correct output: -47                 | Program output: -47                
Correct output: 28                  | Program output: 59                 
Correct output: -98                 | Program output: 74                 
Correct output: -72                 | Program output: 32                 
Correct output: -85                 | Program output: -85                
Correct output: -95                 | Program output: 20                 
Correct output: 11                  | Program output: 11                 
Correct output: -70                 | Program output: -70                
Correct output: -47                 | Program output: 70                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_gte} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_do*range} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_inc} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_shove})
Lexicase best program: (integer_gte boolean_xor integer_lte integer_fromboolean integer_dup_items boolean_xor exec_do*range () in4 print_integer boolean_invert_first_then_and exec_eq boolean_or integer_yankdup integer_shove integer_swap integer_inc integer_pop boolean_dup_items integer_gte boolean_invert_first_then_and boolean_shove boolean_invert_first_then_and integer_yank exec_do*range (integer_yank integer_mod boolean_flush boolean_eq in3) exec_s_when_autoconstructing (exec_swap (integer_mult exec_y_when_autoconstructing () integer_lt exec_shove ()) ()) () ())
Lexicase best errors: [0 0 1 1 1 0 0 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 45
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_gte} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_do*range} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_inc} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_shove})
Zero cases best program: (integer_gte boolean_xor integer_lte integer_fromboolean integer_dup_items boolean_xor exec_do*range () in4 print_integer boolean_invert_first_then_and exec_eq boolean_or integer_yankdup integer_shove integer_swap integer_inc integer_pop boolean_dup_items integer_gte boolean_invert_first_then_and boolean_shove boolean_invert_first_then_and integer_yank exec_do*range (integer_yank integer_mod boolean_flush boolean_eq in3) exec_s_when_autoconstructing (exec_swap (integer_mult exec_y_when_autoconstructing () integer_lt exec_shove ()) ()) () ())
Zero cases best errors: [0 0 1 1 1 0 0 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 45
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (235 234 281 281 253 235 235 253 233 235)
Population mean number of elite cases: 2.47
Count of perfect (error zero) individuals by case: (235 234 281 281 253 235 235 253 233 235)
Population mean number of perfect (error zero) cases: 2.47
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_mult} {:close 2, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup})
Best program: (integer_mult in4 print_integer in3 boolean_dup)
Errors: [0 0 1 1 1 0 0 1 0 0]
Total: 4
Mean: 0.4
Genome size: 5
Size: 6
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 7.525
Median total errors in population: 8
Error averages by case: (0.765 0.766 0.719 0.719 0.747 0.765 0.765 0.747 0.767 0.765)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.833
Average program size in population (points): 18.051
Average percent parens in population: 0.212
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 37
Genome diversity (% unique genomes):	 0.875
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.875
Total error diversity:				 0.007
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.068
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2156696
--- Timings ---
Current time: 1559594142814 milliseconds
Total Time:          12.9 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         7.9 seconds, 61.2%
Fitness Testing:      3.8 seconds, 29.3%
Report:               1.1 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 418
Test mean error for best: 0.41800
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 1
Test Case    6 | Error: 0
Test Case    7 | Error: 1
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 1
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 1
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 1
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 1
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 1
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 1
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 1
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 1
Test Case   78 | Error: 1
Test Case   79 | Error: 1
Test Case   80 | Error: 1
Test Case   81 | Error: 1
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 1
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 1
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 1
Test Case  205 | Error: 0
Test Case  206 | Error: 1
Test Case  207 | Error: 1
Test Case  208 | Error: 1
Test Case  209 | Error: 0
Test Case  210 | Error: 1
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 1
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 1
Test Case  223 | Error: 1
Test Case  224 | Error: 1
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 1
Test Case  231 | Error: 1
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 1
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 1
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 1
Test Case  268 | Error: 1
Test Case  269 | Error: 1
Test Case  270 | Error: 1
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 1
Test Case  281 | Error: 1
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 1
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 1
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 1
Test Case  318 | Error: 0
Test Case  319 | Error: 1
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 1
Test Case  323 | Error: 1
Test Case  324 | Error: 1
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 1
Test Case  333 | Error: 0
Test Case  334 | Error: 1
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 1
Test Case  338 | Error: 0
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 1
Test Case  359 | Error: 1
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 1
Test Case  366 | Error: 1
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 1
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 1
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 1
Test Case  400 | Error: 0
Test Case  401 | Error: 1
Test Case  402 | Error: 1
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 1
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 1
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 1
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 1
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 1
Test Case  451 | Error: 0
Test Case  452 | Error: 1
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 0
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 1
Test Case  471 | Error: 1
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 1
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 1
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 1
Test Case  494 | Error: 1
Test Case  495 | Error: 1
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 1
Test Case  502 | Error: 0
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 0
Test Case  508 | Error: 1
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 1
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 1
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 1
Test Case  530 | Error: 1
Test Case  531 | Error: 0
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 1
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 1
Test Case  549 | Error: 1
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 1
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 1
Test Case  585 | Error: 1
Test Case  586 | Error: 0
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 1
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 1
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 1
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 1
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 1
Test Case  635 | Error: 1
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 1
Test Case  643 | Error: 1
Test Case  644 | Error: 1
Test Case  645 | Error: 1
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 1
Test Case  653 | Error: 1
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 1
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 1
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 1
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 1
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 1
Test Case  725 | Error: 1
Test Case  726 | Error: 1
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 1
Test Case  740 | Error: 0
Test Case  741 | Error: 1
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 1
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 1
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 1
Test Case  774 | Error: 1
Test Case  775 | Error: 0
Test Case  776 | Error: 1
Test Case  777 | Error: 1
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 1
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 1
Test Case  789 | Error: 1
Test Case  790 | Error: 1
Test Case  791 | Error: 1
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 1
Test Case  798 | Error: 1
Test Case  799 | Error: 1
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 1
Test Case  803 | Error: 1
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 1
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 1
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 1
Test Case  824 | Error: 1
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 1
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 1
Test Case  840 | Error: 1
Test Case  841 | Error: 0
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 1
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 1
Test Case  860 | Error: 1
Test Case  861 | Error: 1
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 1
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 1
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 1
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 1
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 1
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 1
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 1
Test Case  917 | Error: 1
Test Case  918 | Error: 1
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 1
Test Case  934 | Error: 1
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 1
Test Case  940 | Error: 1
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 1
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 1
Test Case  954 | Error: 0
Test Case  955 | Error: 1
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 1
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 1
Test Case  966 | Error: 0
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 1
Test Case  979 | Error: 1
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: -11                
Correct output: -39                 | Program output: -39                
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: -51                 | Program output: 18                 
Correct output: -32                 | Program output: -32                
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: 32                 
Correct output: -83                 | Program output: -83                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 63                 
Correct output: 48                  | Program output: 48                 
Correct output: 2                   | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: 55                  | Program output: 55                 
Correct output: 23                  | Program output: 32                 
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 46                  | Program output: 60                 
Correct output: 32                  | Program output: 32                 
Correct output: 2                   | Program output: 2                  
Correct output: 11                  | Program output: 11                 
Correct output: 25                  | Program output: 74                 
Correct output: 8                   | Program output: 8                  
Correct output: 21                  | Program output: 77                 
Correct output: 53                  | Program output: 53                 
Correct output: 72                  | Program output: 98                 
Correct output: 6                   | Program output: 27                 
Correct output: 18                  | Program output: 18                 
Correct output: 23                  | Program output: 23                 
Correct output: -42                 | Program output: -42                
Correct output: -78                 | Program output: -78                
Correct output: -93                 | Program output: -65                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -37                 | Program output: -25                
Correct output: -84                 | Program output: -84                
Correct output: -71                 | Program output: 28                 
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -53                 | Program output: -29                
Correct output: -55                 | Program output: -55                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -62                
Correct output: -87                 | Program output: -87                
Correct output: -45                 | Program output: -45                
Correct output: -96                 | Program output: -96                
Correct output: -68                 | Program output: -59                
Correct output: -49                 | Program output: 32                 
Correct output: -89                 | Program output: -5                 
Correct output: -93                 | Program output: -93                
Correct output: -79                 | Program output: -79                
Correct output: -86                 | Program output: -86                
Correct output: -89                 | Program output: -89                
Correct output: -59                 | Program output: -59                
Correct output: -92                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -62                 | Program output: -62                
Correct output: 42                  | Program output: 74                 
Correct output: -57                 | Program output: -57                
Correct output: 24                  | Program output: 24                 
Correct output: -84                 | Program output: -84                
Correct output: -90                 | Program output: 8                  
Correct output: -63                 | Program output: 17                 
Correct output: -82                 | Program output: -79                
Correct output: -21                 | Program output: -17                
Correct output: -45                 | Program output: 12                 
Correct output: -68                 | Program output: -68                
Correct output: -34                 | Program output: -34                
Correct output: -83                 | Program output: -83                
Correct output: 8                   | Program output: 8                  
Correct output: -14                 | Program output: -14                
Correct output: -95                 | Program output: 4                  
Correct output: -9                  | Program output: -7                 
Correct output: -89                 | Program output: -47                
Correct output: -79                 | Program output: -65                
Correct output: -99                 | Program output: 69                 
Correct output: -64                 | Program output: -64                
Correct output: -66                 | Program output: -43                
Correct output: -89                 | Program output: -89                
Correct output: -58                 | Program output: -38                
Correct output: -47                 | Program output: -47                
Correct output: 28                  | Program output: 28                 
Correct output: -98                 | Program output: 37                 
Correct output: -72                 | Program output: 32                 
Correct output: -85                 | Program output: -85                
Correct output: -95                 | Program output: -95                
Correct output: 11                  | Program output: 11                 
Correct output: -70                 | Program output: -70                
Correct output: -47                 | Program output: 70                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_inc} {:close 1, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction tag_boolean_541} {:close 0, :instruction integer_div} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_flush})
Lexicase best program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 16
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_inc} {:close 1, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction tag_boolean_541} {:close 0, :instruction integer_div} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_flush})
Zero cases best program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 16
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (300 298 459 459 298 458 460 458 294 803)
Population mean number of elite cases: 4.29
Count of perfect (error zero) individuals by case: (300 298 459 459 298 458 460 458 294 803)
Population mean number of perfect (error zero) cases: 4.29
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_pop} {:close 0, :instruction integer_rot} {:close 1, :instruction integer_inc} {:close 1, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction tag_boolean_541} {:close 0, :instruction integer_div} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_flush})
Best program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 12
Size: 16
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 5.713
Median total errors in population: 5
Error averages by case: (0.7 0.702 0.541 0.541 0.702 0.542 0.54 0.542 0.706 0.197)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.953
Average program size in population (points): 15.654
Average percent parens in population: 0.220
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 6
Genome diversity (% unique genomes):	 0.936
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.936
Total error diversity:				 0.008
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.058
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 2324775
--- Timings ---
Current time: 1559594144378 milliseconds
Total Time:          14.4 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         9.1 seconds, 63.1%
Fitness Testing:      4.0 seconds, 27.8%
Report:               1.2 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 7
Successful program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 16


Auto-simplifying with starting size: 16
step: 0
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 500
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 1000
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 1500
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 2000
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 2500
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 3000
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 3500
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 4000
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 4500
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

step: 5000
program: (integer_pop integer_rot integer_inc in2 in4 in3 integer_min print_integer tag_boolean_541 integer_div exec_rot (boolean_flush) () ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 16

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 418
Test mean error for best: 0.41800
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 1
Test Case    6 | Error: 0
Test Case    7 | Error: 1
Test Case    8 | Error: 0
Test Case    9 | Error: 1
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 1
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 1
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 1
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 1
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 1
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 1
Test Case   51 | Error: 0
Test Case   52 | Error: 1
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 1
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 1
Test Case   78 | Error: 1
Test Case   79 | Error: 1
Test Case   80 | Error: 1
Test Case   81 | Error: 1
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 1
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 1
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 1
Test Case  205 | Error: 0
Test Case  206 | Error: 1
Test Case  207 | Error: 1
Test Case  208 | Error: 1
Test Case  209 | Error: 0
Test Case  210 | Error: 1
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 1
Test Case  214 | Error: 0
Test Case  215 | Error: 1
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 1
Test Case  223 | Error: 1
Test Case  224 | Error: 1
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 1
Test Case  231 | Error: 1
Test Case  232 | Error: 0
Test Case  233 | Error: 1
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 1
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 1
Test Case  246 | Error: 1
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 1
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 1
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 1
Test Case  268 | Error: 1
Test Case  269 | Error: 1
Test Case  270 | Error: 1
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 1
Test Case  280 | Error: 1
Test Case  281 | Error: 1
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 1
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 1
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 1
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 1
Test Case  318 | Error: 0
Test Case  319 | Error: 1
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 1
Test Case  323 | Error: 1
Test Case  324 | Error: 1
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 1
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 1
Test Case  333 | Error: 0
Test Case  334 | Error: 1
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 1
Test Case  338 | Error: 0
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 1
Test Case  346 | Error: 0
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 1
Test Case  359 | Error: 1
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 1
Test Case  366 | Error: 1
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 1
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 0
Test Case  385 | Error: 1
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 1
Test Case  393 | Error: 1
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 1
Test Case  400 | Error: 0
Test Case  401 | Error: 1
Test Case  402 | Error: 1
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 1
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 1
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 1
Test Case  427 | Error: 1
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 1
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 1
Test Case  451 | Error: 0
Test Case  452 | Error: 1
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 0
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 0
Test Case  470 | Error: 1
Test Case  471 | Error: 1
Test Case  472 | Error: 1
Test Case  473 | Error: 1
Test Case  474 | Error: 1
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 1
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 1
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 1
Test Case  494 | Error: 1
Test Case  495 | Error: 1
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 1
Test Case  502 | Error: 0
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 0
Test Case  508 | Error: 1
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 1
Test Case  520 | Error: 0
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 1
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 1
Test Case  530 | Error: 1
Test Case  531 | Error: 0
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 1
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 0
Test Case  542 | Error: 1
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 1
Test Case  549 | Error: 1
Test Case  550 | Error: 1
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 1
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 1
Test Case  585 | Error: 1
Test Case  586 | Error: 0
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 1
Test Case  607 | Error: 1
Test Case  608 | Error: 0
Test Case  609 | Error: 1
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 1
Test Case  618 | Error: 1
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 0
Test Case  623 | Error: 1
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 1
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 1
Test Case  635 | Error: 1
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 1
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 1
Test Case  643 | Error: 1
Test Case  644 | Error: 1
Test Case  645 | Error: 1
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 1
Test Case  653 | Error: 1
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 1
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 1
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 1
Test Case  688 | Error: 1
Test Case  689 | Error: 0
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 1
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 1
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 1
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 1
Test Case  725 | Error: 1
Test Case  726 | Error: 1
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 1
Test Case  740 | Error: 0
Test Case  741 | Error: 1
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 1
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 1
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 1
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 1
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 1
Test Case  774 | Error: 1
Test Case  775 | Error: 0
Test Case  776 | Error: 1
Test Case  777 | Error: 1
Test Case  778 | Error: 1
Test Case  779 | Error: 1
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 1
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 1
Test Case  789 | Error: 1
Test Case  790 | Error: 1
Test Case  791 | Error: 1
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 1
Test Case  797 | Error: 1
Test Case  798 | Error: 1
Test Case  799 | Error: 1
Test Case  800 | Error: 0
Test Case  801 | Error: 1
Test Case  802 | Error: 1
Test Case  803 | Error: 1
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 1
Test Case  808 | Error: 0
Test Case  809 | Error: 1
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 1
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 1
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 1
Test Case  824 | Error: 1
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 1
Test Case  828 | Error: 1
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 1
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 1
Test Case  838 | Error: 1
Test Case  839 | Error: 1
Test Case  840 | Error: 1
Test Case  841 | Error: 0
Test Case  842 | Error: 1
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 1
Test Case  846 | Error: 1
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 1
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 1
Test Case  860 | Error: 1
Test Case  861 | Error: 1
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 1
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 1
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 0
Test Case  887 | Error: 1
Test Case  888 | Error: 1
Test Case  889 | Error: 1
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 1
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 1
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 1
Test Case  903 | Error: 1
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 1
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 1
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 1
Test Case  917 | Error: 1
Test Case  918 | Error: 1
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 1
Test Case  934 | Error: 1
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 1
Test Case  940 | Error: 1
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 1
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 1
Test Case  954 | Error: 0
Test Case  955 | Error: 1
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 1
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 1
Test Case  966 | Error: 0
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 1
Test Case  979 | Error: 1
Test Case  980 | Error: 1
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 1
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 68                  | Program output: 68                 
Correct output: -11                 | Program output: -11                
Correct output: -39                 | Program output: -39                
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: -51                 | Program output: 18                 
Correct output: -32                 | Program output: -32                
Correct output: -78                 | Program output: 47                 
Correct output: -13                 | Program output: 32                 
Correct output: -83                 | Program output: -83                
Correct output: 10                  | Program output: 10                 
Correct output: 10                  | Program output: 10                 
Correct output: 99                  | Program output: 99                 
Correct output: 40                  | Program output: 40                 
Correct output: 60                  | Program output: 60                 
Correct output: 57                  | Program output: 63                 
Correct output: 48                  | Program output: 48                 
Correct output: 2                   | Program output: 23                 
Correct output: 19                  | Program output: 19                 
Correct output: 55                  | Program output: 55                 
Correct output: 23                  | Program output: 32                 
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 46                  | Program output: 60                 
Correct output: 32                  | Program output: 32                 
Correct output: 2                   | Program output: 2                  
Correct output: 11                  | Program output: 11                 
Correct output: 25                  | Program output: 74                 
Correct output: 8                   | Program output: 8                  
Correct output: 21                  | Program output: 77                 
Correct output: 53                  | Program output: 53                 
Correct output: 72                  | Program output: 98                 
Correct output: 6                   | Program output: 27                 
Correct output: 18                  | Program output: 18                 
Correct output: 23                  | Program output: 23                 
Correct output: -42                 | Program output: -42                
Correct output: -78                 | Program output: -78                
Correct output: -93                 | Program output: -65                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -37                 | Program output: -25                
Correct output: -84                 | Program output: -84                
Correct output: -71                 | Program output: 28                 
Correct output: -69                 | Program output: -69                
Correct output: -63                 | Program output: -63                
Correct output: -53                 | Program output: -29                
Correct output: -55                 | Program output: -55                
Correct output: -31                 | Program output: -31                
Correct output: -68                 | Program output: -62                
Correct output: -87                 | Program output: -87                
Correct output: -45                 | Program output: -45                
Correct output: -96                 | Program output: -96                
Correct output: -68                 | Program output: -59                
Correct output: -49                 | Program output: 32                 
Correct output: -89                 | Program output: -5                 
Correct output: -93                 | Program output: -93                
Correct output: -79                 | Program output: -79                
Correct output: -86                 | Program output: -86                
Correct output: -89                 | Program output: -89                
Correct output: -59                 | Program output: -59                
Correct output: -92                 | Program output: -71                
Correct output: -70                 | Program output: -70                
Correct output: -62                 | Program output: -62                
Correct output: 42                  | Program output: 74                 
Correct output: -57                 | Program output: -57                
Correct output: 24                  | Program output: 24                 
Correct output: -84                 | Program output: -84                
Correct output: -90                 | Program output: 8                  
Correct output: -63                 | Program output: 17                 
Correct output: -82                 | Program output: -79                
Correct output: -21                 | Program output: -17                
Correct output: -45                 | Program output: 12                 
Correct output: -68                 | Program output: -68                
Correct output: -34                 | Program output: -34                
Correct output: -83                 | Program output: -83                
Correct output: 8                   | Program output: 8                  
Correct output: -14                 | Program output: -14                
Correct output: -95                 | Program output: 4                  
Correct output: -9                  | Program output: -7                 
Correct output: -89                 | Program output: -47                
Correct output: -79                 | Program output: -65                
Correct output: -99                 | Program output: 69                 
Correct output: -64                 | Program output: -64                
Correct output: -66                 | Program output: -43                
Correct output: -89                 | Program output: -89                
Correct output: -58                 | Program output: -38                
Correct output: -47                 | Program output: -47                
Correct output: 28                  | Program output: 28                 
Correct output: -98                 | Program output: 37                 
Correct output: -72                 | Program output: 32                 
Correct output: -85                 | Program output: -85                
Correct output: -95                 | Program output: -95                
Correct output: 11                  | Program output: 11                 
Correct output: -70                 | Program output: -70                
Correct output: -47                 | Program output: 70                 
;;******************************
