Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 3000 :genetic-operator-probabilities {:uniform-addition-and-deletion,1.0} :uniform-addition-and-deletion-rate 0.09
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-58 -49 -58 -58] -58] [[58 58 -64 58] -64] [[-80 -98 -80 -80] -98] [[-100 -67 -100 -100] -100] [[-1 -1 -1 -77] -77] [[-93 73 73 73] -93] [[64 49 64 64] 49] [[-22 92 -22 -22] -22] [[-28 -28 -28 24] -28] [[-57 -57 -57 -91] -91] [(60 60 60 60) 60] [(-63 -63 -63 -63) -63] [(42 42 42 42) 42] [(-13 -13 -13 -13) -13] [(54 54 54 54) 54] [(43 90 93 63) 43] [(92 75 62 74) 62] [(33 72 89 1) 1] [(44 93 20 27) 20] [(31 96 2 87) 2] [(89 75 36 62) 36] [(7 76 26 78) 7] [(61 99 24 100) 24] [(7 95 2 95) 2] [(25 87 16 59) 16] [(85 84 40 68) 40] [(54 4 1 0) 0] [(82 69 54 70) 54] [(21 46 17 47) 17] [(100 80 29 93) 29] [(59 39 94 83) 39] [(22 23 18 74) 18] [(66 24 76 97) 24] [(45 90 55 74) 45] [(7 66 92 8) 7] [(6 82 -38 -95) -95] [(-21 18 22 81) -21] [(97 36 -58 -10) -58] [(-29 31 -61 88) -61] [(-3 90 -69 -77) -77] [(-36 -9 2 -75) -75] [(73 67 -86 61) -86] [(52 -66 -83 -94) -94] [(77 22 25 58) 22] [(29 87 -95 -10) -95] [(83 45 -30 -17) -30] [(-80 -36 56 -89) -89] [(89 -26 94 -12) -26] [(6 4 3 93) 3] [(46 -98 81 -93) -98] [(-29 -85 -86 -18) -86] [(29 -18 89 61) -18] [(30 -39 -3 11) -39] [(-6 -15 -90 -37) -90] [(41 -93 50 55) -93] [(58 39 19 78) 19] [(-50 6 78 55) -50] [(-95 -84 -88 55) -95] [(69 -26 26 67) -26] [(17 29 -40 62) -40] [(-12 -73 -72 -32) -73] [(44 78 -70 95) -70] [(-97 -79 14 -12) -97] [(-17 -56 13 85) -56] [(56 -24 -5 15) -24] [(87 -30 46 65) -30] [(89 -12 -41 -57) -57] [(-85 -23 7 -71) -85] [(92 68 -31 -90) -90] [(51 79 -8 43) -8] [(75 -88 18 -19) -88] [(37 40 -42 -50) -50] [(89 -56 -17 75) -56] [(34 17 -80 36) -80] [(55 -83 -86 51) -86] [(-97 -64 -45 78) -97] [(-45 91 83 -48) -48] [(-3 -88 -52 -82) -88] [(-94 -58 98 -53) -94] [(-91 54 19 -48) -91] [(11 60 -46 -56) -56] [(80 81 -78 -28) -78] [(-87 5 -30 72) -87] [(-31 64 20 22) -31] [(78 -18 49 63) -18] [(-93 11 65 -54) -93] [(13 -9 -88 88) -88] [(-66 3 87 42) -66] [(-6 89 49 56) -6] [(-4 61 -89 22) -89] [(84 -8 -35 36) -35] [(-25 -72 -97 100) -97] [(93 -27 58 58) -27] [(-98 -66 82 -86) -98] [(81 65 -58 -53) -58])
uniform-addition-and-deletion-rate = 0.09
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-58 -49 -58 -58] -58]
Train Case:   6 | Input/Output: [[58 58 -64 58] -64]
Train Case:   7 | Input/Output: [[-80 -98 -80 -80] -98]
Train Case:   8 | Input/Output: [[-100 -67 -100 -100] -100]
Train Case:   9 | Input/Output: [[-1 -1 -1 -77] -77]
Train Case:  10 | Input/Output: [[-93 73 73 73] -93]
Train Case:  11 | Input/Output: [[64 49 64 64] 49]
Train Case:  12 | Input/Output: [[-22 92 -22 -22] -22]
Train Case:  13 | Input/Output: [[-28 -28 -28 24] -28]
Train Case:  14 | Input/Output: [[-57 -57 -57 -91] -91]
Train Case:  15 | Input/Output: [(60 60 60 60) 60]
Train Case:  16 | Input/Output: [(-63 -63 -63 -63) -63]
Train Case:  17 | Input/Output: [(42 42 42 42) 42]
Train Case:  18 | Input/Output: [(-13 -13 -13 -13) -13]
Train Case:  19 | Input/Output: [(54 54 54 54) 54]
Train Case:  20 | Input/Output: [(43 90 93 63) 43]
Train Case:  21 | Input/Output: [(92 75 62 74) 62]
Train Case:  22 | Input/Output: [(33 72 89 1) 1]
Train Case:  23 | Input/Output: [(44 93 20 27) 20]
Train Case:  24 | Input/Output: [(31 96 2 87) 2]
Train Case:  25 | Input/Output: [(89 75 36 62) 36]
Train Case:  26 | Input/Output: [(7 76 26 78) 7]
Train Case:  27 | Input/Output: [(61 99 24 100) 24]
Train Case:  28 | Input/Output: [(7 95 2 95) 2]
Train Case:  29 | Input/Output: [(25 87 16 59) 16]
Train Case:  30 | Input/Output: [(85 84 40 68) 40]
Train Case:  31 | Input/Output: [(54 4 1 0) 0]
Train Case:  32 | Input/Output: [(82 69 54 70) 54]
Train Case:  33 | Input/Output: [(21 46 17 47) 17]
Train Case:  34 | Input/Output: [(100 80 29 93) 29]
Train Case:  35 | Input/Output: [(59 39 94 83) 39]
Train Case:  36 | Input/Output: [(22 23 18 74) 18]
Train Case:  37 | Input/Output: [(66 24 76 97) 24]
Train Case:  38 | Input/Output: [(45 90 55 74) 45]
Train Case:  39 | Input/Output: [(7 66 92 8) 7]
Train Case:  40 | Input/Output: [(6 82 -38 -95) -95]
Train Case:  41 | Input/Output: [(-21 18 22 81) -21]
Train Case:  42 | Input/Output: [(97 36 -58 -10) -58]
Train Case:  43 | Input/Output: [(-29 31 -61 88) -61]
Train Case:  44 | Input/Output: [(-3 90 -69 -77) -77]
Train Case:  45 | Input/Output: [(-36 -9 2 -75) -75]
Train Case:  46 | Input/Output: [(73 67 -86 61) -86]
Train Case:  47 | Input/Output: [(52 -66 -83 -94) -94]
Train Case:  48 | Input/Output: [(77 22 25 58) 22]
Train Case:  49 | Input/Output: [(29 87 -95 -10) -95]
Train Case:  50 | Input/Output: [(83 45 -30 -17) -30]
Train Case:  51 | Input/Output: [(-80 -36 56 -89) -89]
Train Case:  52 | Input/Output: [(89 -26 94 -12) -26]
Train Case:  53 | Input/Output: [(6 4 3 93) 3]
Train Case:  54 | Input/Output: [(46 -98 81 -93) -98]
Train Case:  55 | Input/Output: [(-29 -85 -86 -18) -86]
Train Case:  56 | Input/Output: [(29 -18 89 61) -18]
Train Case:  57 | Input/Output: [(30 -39 -3 11) -39]
Train Case:  58 | Input/Output: [(-6 -15 -90 -37) -90]
Train Case:  59 | Input/Output: [(41 -93 50 55) -93]
Train Case:  60 | Input/Output: [(58 39 19 78) 19]
Train Case:  61 | Input/Output: [(-50 6 78 55) -50]
Train Case:  62 | Input/Output: [(-95 -84 -88 55) -95]
Train Case:  63 | Input/Output: [(69 -26 26 67) -26]
Train Case:  64 | Input/Output: [(17 29 -40 62) -40]
Train Case:  65 | Input/Output: [(-12 -73 -72 -32) -73]
Train Case:  66 | Input/Output: [(44 78 -70 95) -70]
Train Case:  67 | Input/Output: [(-97 -79 14 -12) -97]
Train Case:  68 | Input/Output: [(-17 -56 13 85) -56]
Train Case:  69 | Input/Output: [(56 -24 -5 15) -24]
Train Case:  70 | Input/Output: [(87 -30 46 65) -30]
Train Case:  71 | Input/Output: [(89 -12 -41 -57) -57]
Train Case:  72 | Input/Output: [(-85 -23 7 -71) -85]
Train Case:  73 | Input/Output: [(92 68 -31 -90) -90]
Train Case:  74 | Input/Output: [(51 79 -8 43) -8]
Train Case:  75 | Input/Output: [(75 -88 18 -19) -88]
Train Case:  76 | Input/Output: [(37 40 -42 -50) -50]
Train Case:  77 | Input/Output: [(89 -56 -17 75) -56]
Train Case:  78 | Input/Output: [(34 17 -80 36) -80]
Train Case:  79 | Input/Output: [(55 -83 -86 51) -86]
Train Case:  80 | Input/Output: [(-97 -64 -45 78) -97]
Train Case:  81 | Input/Output: [(-45 91 83 -48) -48]
Train Case:  82 | Input/Output: [(-3 -88 -52 -82) -88]
Train Case:  83 | Input/Output: [(-94 -58 98 -53) -94]
Train Case:  84 | Input/Output: [(-91 54 19 -48) -91]
Train Case:  85 | Input/Output: [(11 60 -46 -56) -56]
Train Case:  86 | Input/Output: [(80 81 -78 -28) -78]
Train Case:  87 | Input/Output: [(-87 5 -30 72) -87]
Train Case:  88 | Input/Output: [(-31 64 20 22) -31]
Train Case:  89 | Input/Output: [(78 -18 49 63) -18]
Train Case:  90 | Input/Output: [(-93 11 65 -54) -93]
Train Case:  91 | Input/Output: [(13 -9 -88 88) -88]
Train Case:  92 | Input/Output: [(-66 3 87 42) -66]
Train Case:  93 | Input/Output: [(-6 89 49 56) -6]
Train Case:  94 | Input/Output: [(-4 61 -89 22) -89]
Train Case:  95 | Input/Output: [(84 -8 -35 36) -35]
Train Case:  96 | Input/Output: [(-25 -72 -97 100) -97]
Train Case:  97 | Input/Output: [(93 -27 58 58) -27]
Train Case:  98 | Input/Output: [(-98 -66 82 -86) -98]
Train Case:  99 | Input/Output: [(81 65 -58 -53) -58]
Test Case:   0 | Input/Output: [[24 24 -39 24] -39]
Test Case:   1 | Input/Output: [[-30 -28 -28 -28] -30]
Test Case:   2 | Input/Output: [[16 16 16 24] 16]
Test Case:   3 | Input/Output: [[-68 -68 -69 -68] -69]
Test Case:   4 | Input/Output: [[-51 -85 -85 -85] -85]
Test Case:   5 | Input/Output: [[-9 -9 -9 26] -9]
Test Case:   6 | Input/Output: [[-63 -63 -63 -69] -69]
Test Case:   7 | Input/Output: [[-31 -31 -39 -31] -39]
Test Case:   8 | Input/Output: [[-34 -34 -34 76] -34]
Test Case:   9 | Input/Output: [[12 12 12 67] 12]
Test Case:  10 | Input/Output: [[-62 -46 -46 -46] -62]
Test Case:  11 | Input/Output: [[21 21 21 53] 21]
Test Case:  12 | Input/Output: [[54 -22 -22 -22] -22]
Test Case:  13 | Input/Output: [[82 61 82 82] 61]
Test Case:  14 | Input/Output: [[53 -14 -14 -14] -14]
Test Case:  15 | Input/Output: [[-86 -86 -62 -86] -86]
Test Case:  16 | Input/Output: [[33 33 33 15] 15]
Test Case:  17 | Input/Output: [[-90 -90 -45 -90] -90]
Test Case:  18 | Input/Output: [[15 -34 -34 -34] -34]
Test Case:  19 | Input/Output: [[49 49 49 -20] -20]
Test Case:  20 | Input/Output: [[49 49 -50 49] -50]
Test Case:  21 | Input/Output: [[77 -12 77 77] -12]
Test Case:  22 | Input/Output: [[-3 74 -3 -3] -3]
Test Case:  23 | Input/Output: [[39 39 -83 39] -83]
Test Case:  24 | Input/Output: [[-28 -28 -28 -30] -30]
Test Case:  25 | Input/Output: [[24 -44 -44 -44] -44]
Test Case:  26 | Input/Output: [[81 95 95 95] 81]
Test Case:  27 | Input/Output: [[-92 -62 -92 -92] -92]
Test Case:  28 | Input/Output: [[-73 53 53 53] -73]
Test Case:  29 | Input/Output: [[-63 -49 -63 -63] -63]
Test Case:  30 | Input/Output: [[38 -88 -88 -88] -88]
Test Case:  31 | Input/Output: [[-5 -5 76 -5] -5]
Test Case:  32 | Input/Output: [[62 98 62 62] 62]
Test Case:  33 | Input/Output: [[100 100 100 13] 13]
Test Case:  34 | Input/Output: [[2 -83 -83 -83] -83]
Test Case:  35 | Input/Output: [[42 42 -44 42] -44]
Test Case:  36 | Input/Output: [[-13 -13 -13 -74] -74]
Test Case:  37 | Input/Output: [[-61 -61 -8 -61] -61]
Test Case:  38 | Input/Output: [[-29 -29 -29 -39] -39]
Test Case:  39 | Input/Output: [[74 -80 74 74] -80]
Test Case:  40 | Input/Output: [[63 -44 63 63] -44]
Test Case:  41 | Input/Output: [[-13 -13 -4 -13] -13]
Test Case:  42 | Input/Output: [[-21 -21 68 -21] -21]
Test Case:  43 | Input/Output: [[54 54 54 -48] -48]
Test Case:  44 | Input/Output: [[-7 -27 -7 -7] -27]
Test Case:  45 | Input/Output: [[2 2 -86 2] -86]
Test Case:  46 | Input/Output: [[99 -27 99 99] -27]
Test Case:  47 | Input/Output: [[-73 88 -73 -73] -73]
Test Case:  48 | Input/Output: [[22 -28 -28 -28] -28]
Test Case:  49 | Input/Output: [[54 -32 54 54] -32]
Test Case:  50 | Input/Output: [[48 48 -65 48] -65]
Test Case:  51 | Input/Output: [[-69 30 -69 -69] -69]
Test Case:  52 | Input/Output: [[-35 13 13 13] -35]
Test Case:  53 | Input/Output: [[15 15 15 12] 12]
Test Case:  54 | Input/Output: [[-68 -68 -68 7] -68]
Test Case:  55 | Input/Output: [[-88 95 95 95] -88]
Test Case:  56 | Input/Output: [[-74 -22 -22 -22] -74]
Test Case:  57 | Input/Output: [[-99 -99 -99 -28] -99]
Test Case:  58 | Input/Output: [[-33 -33 -87 -33] -87]
Test Case:  59 | Input/Output: [[98 98 -21 98] -21]
Test Case:  60 | Input/Output: [[64 64 64 61] 61]
Test Case:  61 | Input/Output: [[-77 -77 -77 2] -77]
Test Case:  62 | Input/Output: [[2 -81 -81 -81] -81]
Test Case:  63 | Input/Output: [[-45 -7 -7 -7] -45]
Test Case:  64 | Input/Output: [[-17 -17 -10 -17] -17]
Test Case:  65 | Input/Output: [[-42 -42 17 -42] -42]
Test Case:  66 | Input/Output: [[-46 45 45 45] -46]
Test Case:  67 | Input/Output: [[27 27 27 -49] -49]
Test Case:  68 | Input/Output: [[37 37 37 18] 18]
Test Case:  69 | Input/Output: [[89 -45 -45 -45] -45]
Test Case:  70 | Input/Output: [[-23 -31 -23 -23] -31]
Test Case:  71 | Input/Output: [[58 58 21 58] 21]
Test Case:  72 | Input/Output: [[-46 81 -46 -46] -46]
Test Case:  73 | Input/Output: [[19 22 22 22] 19]
Test Case:  74 | Input/Output: [[95 7 95 95] 7]
Test Case:  75 | Input/Output: [[-49 38 -49 -49] -49]
Test Case:  76 | Input/Output: [[-27 -86 -27 -27] -86]
Test Case:  77 | Input/Output: [[-56 -92 -56 -56] -92]
Test Case:  78 | Input/Output: [[-66 76 76 76] -66]
Test Case:  79 | Input/Output: [[-12 -3 -3 -3] -12]
Test Case:  80 | Input/Output: [[-76 -76 96 -76] -76]
Test Case:  81 | Input/Output: [[84 39 84 84] 39]
Test Case:  82 | Input/Output: [[-26 -26 -26 -68] -68]
Test Case:  83 | Input/Output: [[26 26 87 26] 26]
Test Case:  84 | Input/Output: [[-69 80 -69 -69] -69]
Test Case:  85 | Input/Output: [[3 -86 3 3] -86]
Test Case:  86 | Input/Output: [[86 86 79 86] 79]
Test Case:  87 | Input/Output: [[-56 70 -56 -56] -56]
Test Case:  88 | Input/Output: [[44 44 -4 44] -4]
Test Case:  89 | Input/Output: [[-75 -93 -93 -93] -93]
Test Case:  90 | Input/Output: [[-53 -53 -32 -53] -53]
Test Case:  91 | Input/Output: [[9 -8 9 9] -8]
Test Case:  92 | Input/Output: [[29 1 29 29] 1]
Test Case:  93 | Input/Output: [[-71 -71 -63 -71] -71]
Test Case:  94 | Input/Output: [[78 94 94 94] 78]
Test Case:  95 | Input/Output: [[-86 57 -86 -86] -86]
Test Case:  96 | Input/Output: [[27 27 98 27] 27]
Test Case:  97 | Input/Output: [[63 48 48 48] 48]
Test Case:  98 | Input/Output: [[-81 -18 -81 -81] -81]
Test Case:  99 | Input/Output: [[40 -58 -58 -58] -58]
Test Case: 100 | Input/Output: [(95 95 95 95) 95]
Test Case: 101 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 102 | Input/Output: [(45 45 45 45) 45]
Test Case: 103 | Input/Output: [(79 79 79 79) 79]
Test Case: 104 | Input/Output: [(15 15 15 15) 15]
Test Case: 105 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 106 | Input/Output: [(40 40 40 40) 40]
Test Case: 107 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 108 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 109 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 110 | Input/Output: [(25 25 25 25) 25]
Test Case: 111 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 112 | Input/Output: [(31 31 31 31) 31]
Test Case: 113 | Input/Output: [(0 0 0 0) 0]
Test Case: 114 | Input/Output: [(44 44 44 44) 44]
Test Case: 115 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 116 | Input/Output: [(7 7 7 7) 7]
Test Case: 117 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 118 | Input/Output: [(16 16 16 16) 16]
Test Case: 119 | Input/Output: [(2 2 2 2) 2]
Test Case: 120 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 121 | Input/Output: [(40 40 40 40) 40]
Test Case: 122 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 123 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 124 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 125 | Input/Output: [(93 93 93 93) 93]
Test Case: 126 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 127 | Input/Output: [(51 51 51 51) 51]
Test Case: 128 | Input/Output: [(79 79 79 79) 79]
Test Case: 129 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 130 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 131 | Input/Output: [(43 43 43 43) 43]
Test Case: 132 | Input/Output: [(97 97 97 97) 97]
Test Case: 133 | Input/Output: [(100 100 100 100) 100]
Test Case: 134 | Input/Output: [(94 94 94 94) 94]
Test Case: 135 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 136 | Input/Output: [(27 27 27 27) 27]
Test Case: 137 | Input/Output: [(15 15 15 15) 15]
Test Case: 138 | Input/Output: [(31 31 31 31) 31]
Test Case: 139 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 140 | Input/Output: [(16 16 16 16) 16]
Test Case: 141 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 142 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 143 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 144 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 145 | Input/Output: [(67 67 67 67) 67]
Test Case: 146 | Input/Output: [(10 10 10 10) 10]
Test Case: 147 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 148 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 149 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 150 | Input/Output: [(94 94 94 94) 94]
Test Case: 151 | Input/Output: [(69 69 69 69) 69]
Test Case: 152 | Input/Output: [(98 98 98 98) 98]
Test Case: 153 | Input/Output: [(79 79 79 79) 79]
Test Case: 154 | Input/Output: [(31 31 31 31) 31]
Test Case: 155 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 156 | Input/Output: [(47 47 47 47) 47]
Test Case: 157 | Input/Output: [(18 18 18 18) 18]
Test Case: 158 | Input/Output: [(31 31 31 31) 31]
Test Case: 159 | Input/Output: [(36 36 36 36) 36]
Test Case: 160 | Input/Output: [(12 12 12 12) 12]
Test Case: 161 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 162 | Input/Output: [(45 45 45 45) 45]
Test Case: 163 | Input/Output: [(23 23 23 23) 23]
Test Case: 164 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 165 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 166 | Input/Output: [(98 98 98 98) 98]
Test Case: 167 | Input/Output: [(30 30 30 30) 30]
Test Case: 168 | Input/Output: [(21 21 21 21) 21]
Test Case: 169 | Input/Output: [(96 96 96 96) 96]
Test Case: 170 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 171 | Input/Output: [(64 64 64 64) 64]
Test Case: 172 | Input/Output: [(93 93 93 93) 93]
Test Case: 173 | Input/Output: [(93 93 93 93) 93]
Test Case: 174 | Input/Output: [(48 48 48 48) 48]
Test Case: 175 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 176 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 177 | Input/Output: [(50 50 50 50) 50]
Test Case: 178 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 179 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 180 | Input/Output: [(51 51 51 51) 51]
Test Case: 181 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 182 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 183 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 184 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 185 | Input/Output: [(94 94 94 94) 94]
Test Case: 186 | Input/Output: [(29 29 29 29) 29]
Test Case: 187 | Input/Output: [(46 46 46 46) 46]
Test Case: 188 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 189 | Input/Output: [(-57 -57 -57 -57) -57]
Test Case: 190 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 191 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 192 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 193 | Input/Output: [(19 19 19 19) 19]
Test Case: 194 | Input/Output: [(41 41 41 41) 41]
Test Case: 195 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 196 | Input/Output: [(97 97 97 97) 97]
Test Case: 197 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 198 | Input/Output: [(50 50 50 50) 50]
Test Case: 199 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 200 | Input/Output: [(65 16 7 87) 7]
Test Case: 201 | Input/Output: [(32 64 79 87) 32]
Test Case: 202 | Input/Output: [(7 100 40 82) 7]
Test Case: 203 | Input/Output: [(4 0 85 68) 0]
Test Case: 204 | Input/Output: [(78 38 47 75) 38]
Test Case: 205 | Input/Output: [(96 56 5 52) 5]
Test Case: 206 | Input/Output: [(74 79 73 55) 55]
Test Case: 207 | Input/Output: [(2 72 75 56) 2]
Test Case: 208 | Input/Output: [(18 99 9 59) 9]
Test Case: 209 | Input/Output: [(29 25 18 92) 18]
Test Case: 210 | Input/Output: [(70 15 78 96) 15]
Test Case: 211 | Input/Output: [(74 0 41 5) 0]
Test Case: 212 | Input/Output: [(69 34 24 59) 24]
Test Case: 213 | Input/Output: [(63 4 94 97) 4]
Test Case: 214 | Input/Output: [(32 70 60 65) 32]
Test Case: 215 | Input/Output: [(15 14 23 52) 14]
Test Case: 216 | Input/Output: [(58 60 30 82) 30]
Test Case: 217 | Input/Output: [(43 16 78 68) 16]
Test Case: 218 | Input/Output: [(54 70 39 73) 39]
Test Case: 219 | Input/Output: [(90 34 93 68) 34]
Test Case: 220 | Input/Output: [(17 29 34 38) 17]
Test Case: 221 | Input/Output: [(96 12 42 68) 12]
Test Case: 222 | Input/Output: [(69 20 12 78) 12]
Test Case: 223 | Input/Output: [(81 87 59 80) 59]
Test Case: 224 | Input/Output: [(10 82 16 10) 10]
Test Case: 225 | Input/Output: [(20 15 18 59) 15]
Test Case: 226 | Input/Output: [(22 85 29 75) 22]
Test Case: 227 | Input/Output: [(95 71 87 8) 8]
Test Case: 228 | Input/Output: [(44 8 67 68) 8]
Test Case: 229 | Input/Output: [(57 52 7 2) 2]
Test Case: 230 | Input/Output: [(40 33 22 33) 22]
Test Case: 231 | Input/Output: [(64 2 30 40) 2]
Test Case: 232 | Input/Output: [(0 89 1 58) 0]
Test Case: 233 | Input/Output: [(57 76 6 28) 6]
Test Case: 234 | Input/Output: [(77 48 83 82) 48]
Test Case: 235 | Input/Output: [(6 51 44 93) 6]
Test Case: 236 | Input/Output: [(48 38 31 99) 31]
Test Case: 237 | Input/Output: [(14 5 27 4) 4]
Test Case: 238 | Input/Output: [(79 63 14 85) 14]
Test Case: 239 | Input/Output: [(4 92 80 45) 4]
Test Case: 240 | Input/Output: [(15 98 36 44) 15]
Test Case: 241 | Input/Output: [(97 14 5 71) 5]
Test Case: 242 | Input/Output: [(75 17 37 14) 14]
Test Case: 243 | Input/Output: [(42 84 18 70) 18]
Test Case: 244 | Input/Output: [(14 97 57 11) 11]
Test Case: 245 | Input/Output: [(68 50 12 57) 12]
Test Case: 246 | Input/Output: [(59 94 62 97) 59]
Test Case: 247 | Input/Output: [(79 100 36 95) 36]
Test Case: 248 | Input/Output: [(51 52 29 76) 29]
Test Case: 249 | Input/Output: [(61 95 84 78) 61]
Test Case: 250 | Input/Output: [(37 68 91 85) 37]
Test Case: 251 | Input/Output: [(77 83 26 65) 26]
Test Case: 252 | Input/Output: [(53 31 37 95) 31]
Test Case: 253 | Input/Output: [(92 23 48 78) 23]
Test Case: 254 | Input/Output: [(59 0 24 72) 0]
Test Case: 255 | Input/Output: [(48 91 86 53) 48]
Test Case: 256 | Input/Output: [(88 4 49 9) 4]
Test Case: 257 | Input/Output: [(57 54 50 46) 46]
Test Case: 258 | Input/Output: [(51 49 46 40) 40]
Test Case: 259 | Input/Output: [(56 63 64 86) 56]
Test Case: 260 | Input/Output: [(58 15 88 3) 3]
Test Case: 261 | Input/Output: [(52 69 77 78) 52]
Test Case: 262 | Input/Output: [(33 84 2 34) 2]
Test Case: 263 | Input/Output: [(22 1 58 59) 1]
Test Case: 264 | Input/Output: [(1 5 68 46) 1]
Test Case: 265 | Input/Output: [(18 55 62 53) 18]
Test Case: 266 | Input/Output: [(63 38 89 69) 38]
Test Case: 267 | Input/Output: [(10 2 11 17) 2]
Test Case: 268 | Input/Output: [(76 62 31 58) 31]
Test Case: 269 | Input/Output: [(33 29 89 100) 29]
Test Case: 270 | Input/Output: [(62 64 21 1) 1]
Test Case: 271 | Input/Output: [(21 83 80 23) 21]
Test Case: 272 | Input/Output: [(44 50 92 78) 44]
Test Case: 273 | Input/Output: [(85 25 77 98) 25]
Test Case: 274 | Input/Output: [(62 42 19 16) 16]
Test Case: 275 | Input/Output: [(79 78 73 70) 70]
Test Case: 276 | Input/Output: [(100 47 65 61) 47]
Test Case: 277 | Input/Output: [(57 12 11 35) 11]
Test Case: 278 | Input/Output: [(78 48 73 73) 48]
Test Case: 279 | Input/Output: [(63 30 5 72) 5]
Test Case: 280 | Input/Output: [(90 14 69 98) 14]
Test Case: 281 | Input/Output: [(95 31 1 69) 1]
Test Case: 282 | Input/Output: [(39 98 16 5) 5]
Test Case: 283 | Input/Output: [(97 83 23 62) 23]
Test Case: 284 | Input/Output: [(36 34 21 62) 21]
Test Case: 285 | Input/Output: [(93 19 3 56) 3]
Test Case: 286 | Input/Output: [(36 59 34 43) 34]
Test Case: 287 | Input/Output: [(29 15 71 83) 15]
Test Case: 288 | Input/Output: [(85 28 95 87) 28]
Test Case: 289 | Input/Output: [(62 97 60 81) 60]
Test Case: 290 | Input/Output: [(27 19 95 27) 19]
Test Case: 291 | Input/Output: [(95 89 32 3) 3]
Test Case: 292 | Input/Output: [(17 89 20 84) 17]
Test Case: 293 | Input/Output: [(40 78 15 39) 15]
Test Case: 294 | Input/Output: [(65 56 70 10) 10]
Test Case: 295 | Input/Output: [(38 47 12 32) 12]
Test Case: 296 | Input/Output: [(14 40 50 14) 14]
Test Case: 297 | Input/Output: [(43 57 39 44) 39]
Test Case: 298 | Input/Output: [(70 61 62 74) 61]
Test Case: 299 | Input/Output: [(76 9 21 82) 9]
Test Case: 300 | Input/Output: [(64 76 36 77) 36]
Test Case: 301 | Input/Output: [(50 49 37 85) 37]
Test Case: 302 | Input/Output: [(32 38 62 97) 32]
Test Case: 303 | Input/Output: [(61 61 19 49) 19]
Test Case: 304 | Input/Output: [(29 79 24 64) 24]
Test Case: 305 | Input/Output: [(21 78 4 77) 4]
Test Case: 306 | Input/Output: [(20 97 6 37) 6]
Test Case: 307 | Input/Output: [(88 51 1 69) 1]
Test Case: 308 | Input/Output: [(85 50 8 82) 8]
Test Case: 309 | Input/Output: [(41 24 99 26) 24]
Test Case: 310 | Input/Output: [(19 62 63 61) 19]
Test Case: 311 | Input/Output: [(58 96 29 55) 29]
Test Case: 312 | Input/Output: [(40 90 73 60) 40]
Test Case: 313 | Input/Output: [(4 90 65 37) 4]
Test Case: 314 | Input/Output: [(93 75 24 77) 24]
Test Case: 315 | Input/Output: [(30 98 55 43) 30]
Test Case: 316 | Input/Output: [(6 57 3 22) 3]
Test Case: 317 | Input/Output: [(99 95 51 66) 51]
Test Case: 318 | Input/Output: [(81 92 74 20) 20]
Test Case: 319 | Input/Output: [(19 99 73 61) 19]
Test Case: 320 | Input/Output: [(68 33 30 11) 11]
Test Case: 321 | Input/Output: [(49 97 90 10) 10]
Test Case: 322 | Input/Output: [(77 40 63 75) 40]
Test Case: 323 | Input/Output: [(77 59 53 83) 53]
Test Case: 324 | Input/Output: [(43 87 48 19) 19]
Test Case: 325 | Input/Output: [(93 100 49 100) 49]
Test Case: 326 | Input/Output: [(31 3 54 53) 3]
Test Case: 327 | Input/Output: [(9 33 38 92) 9]
Test Case: 328 | Input/Output: [(82 2 40 77) 2]
Test Case: 329 | Input/Output: [(70 78 47 95) 47]
Test Case: 330 | Input/Output: [(46 53 67 56) 46]
Test Case: 331 | Input/Output: [(60 0 97 6) 0]
Test Case: 332 | Input/Output: [(57 19 35 70) 19]
Test Case: 333 | Input/Output: [(95 27 83 38) 27]
Test Case: 334 | Input/Output: [(17 84 95 8) 8]
Test Case: 335 | Input/Output: [(11 59 24 34) 11]
Test Case: 336 | Input/Output: [(12 18 99 38) 12]
Test Case: 337 | Input/Output: [(27 41 25 74) 25]
Test Case: 338 | Input/Output: [(17 69 14 48) 14]
Test Case: 339 | Input/Output: [(13 92 96 45) 13]
Test Case: 340 | Input/Output: [(31 47 3 29) 3]
Test Case: 341 | Input/Output: [(51 98 22 35) 22]
Test Case: 342 | Input/Output: [(26 61 38 12) 12]
Test Case: 343 | Input/Output: [(10 66 16 89) 10]
Test Case: 344 | Input/Output: [(100 89 76 18) 18]
Test Case: 345 | Input/Output: [(51 2 32 64) 2]
Test Case: 346 | Input/Output: [(33 85 87 24) 24]
Test Case: 347 | Input/Output: [(65 56 62 18) 18]
Test Case: 348 | Input/Output: [(96 41 10 29) 10]
Test Case: 349 | Input/Output: [(2 68 4 58) 2]
Test Case: 350 | Input/Output: [(41 73 48 17) 17]
Test Case: 351 | Input/Output: [(22 93 13 13) 13]
Test Case: 352 | Input/Output: [(24 8 96 66) 8]
Test Case: 353 | Input/Output: [(15 47 47 86) 15]
Test Case: 354 | Input/Output: [(59 16 15 19) 15]
Test Case: 355 | Input/Output: [(70 29 79 100) 29]
Test Case: 356 | Input/Output: [(88 56 12 61) 12]
Test Case: 357 | Input/Output: [(23 49 98 39) 23]
Test Case: 358 | Input/Output: [(14 15 49 18) 14]
Test Case: 359 | Input/Output: [(14 55 77 84) 14]
Test Case: 360 | Input/Output: [(40 82 80 37) 37]
Test Case: 361 | Input/Output: [(68 40 27 11) 11]
Test Case: 362 | Input/Output: [(47 32 92 17) 17]
Test Case: 363 | Input/Output: [(22 83 81 50) 22]
Test Case: 364 | Input/Output: [(15 2 43 66) 2]
Test Case: 365 | Input/Output: [(77 19 79 8) 8]
Test Case: 366 | Input/Output: [(86 87 62 3) 3]
Test Case: 367 | Input/Output: [(96 95 26 78) 26]
Test Case: 368 | Input/Output: [(80 28 19 26) 19]
Test Case: 369 | Input/Output: [(0 55 46 29) 0]
Test Case: 370 | Input/Output: [(85 0 97 19) 0]
Test Case: 371 | Input/Output: [(73 5 21 84) 5]
Test Case: 372 | Input/Output: [(19 49 90 11) 11]
Test Case: 373 | Input/Output: [(64 99 56 98) 56]
Test Case: 374 | Input/Output: [(58 42 69 58) 42]
Test Case: 375 | Input/Output: [(1 54 50 20) 1]
Test Case: 376 | Input/Output: [(29 35 58 58) 29]
Test Case: 377 | Input/Output: [(6 6 79 39) 6]
Test Case: 378 | Input/Output: [(20 16 62 30) 16]
Test Case: 379 | Input/Output: [(55 61 84 69) 55]
Test Case: 380 | Input/Output: [(73 4 7 87) 4]
Test Case: 381 | Input/Output: [(29 70 100 60) 29]
Test Case: 382 | Input/Output: [(87 36 89 20) 20]
Test Case: 383 | Input/Output: [(23 76 47 35) 23]
Test Case: 384 | Input/Output: [(65 65 77 84) 65]
Test Case: 385 | Input/Output: [(50 78 99 63) 50]
Test Case: 386 | Input/Output: [(41 15 96 95) 15]
Test Case: 387 | Input/Output: [(98 8 82 76) 8]
Test Case: 388 | Input/Output: [(68 67 76 37) 37]
Test Case: 389 | Input/Output: [(99 78 59 11) 11]
Test Case: 390 | Input/Output: [(25 15 16 3) 3]
Test Case: 391 | Input/Output: [(65 68 22 91) 22]
Test Case: 392 | Input/Output: [(73 82 74 80) 73]
Test Case: 393 | Input/Output: [(25 79 21 100) 21]
Test Case: 394 | Input/Output: [(25 86 46 9) 9]
Test Case: 395 | Input/Output: [(53 27 64 99) 27]
Test Case: 396 | Input/Output: [(16 8 42 72) 8]
Test Case: 397 | Input/Output: [(3 38 52 98) 3]
Test Case: 398 | Input/Output: [(99 30 86 42) 30]
Test Case: 399 | Input/Output: [(57 3 29 17) 3]
Test Case: 400 | Input/Output: [(-79 12 -72 -5) -79]
Test Case: 401 | Input/Output: [(-90 76 0 -6) -90]
Test Case: 402 | Input/Output: [(-84 -36 -71 97) -84]
Test Case: 403 | Input/Output: [(90 -76 -14 74) -76]
Test Case: 404 | Input/Output: [(50 -5 92 -60) -60]
Test Case: 405 | Input/Output: [(74 -52 50 -77) -77]
Test Case: 406 | Input/Output: [(9 -90 76 -45) -90]
Test Case: 407 | Input/Output: [(86 62 68 -62) -62]
Test Case: 408 | Input/Output: [(-71 35 -43 -68) -71]
Test Case: 409 | Input/Output: [(-14 -24 -87 9) -87]
Test Case: 410 | Input/Output: [(97 -3 67 -89) -89]
Test Case: 411 | Input/Output: [(52 -6 -95 -67) -95]
Test Case: 412 | Input/Output: [(-68 -73 56 -94) -94]
Test Case: 413 | Input/Output: [(-3 48 -53 -79) -79]
Test Case: 414 | Input/Output: [(45 -88 99 39) -88]
Test Case: 415 | Input/Output: [(22 21 60 -27) -27]
Test Case: 416 | Input/Output: [(22 -74 74 -98) -98]
Test Case: 417 | Input/Output: [(-36 -75 -80 -29) -80]
Test Case: 418 | Input/Output: [(-4 -31 64 53) -31]
Test Case: 419 | Input/Output: [(66 -71 -52 -79) -79]
Test Case: 420 | Input/Output: [(21 -87 83 80) -87]
Test Case: 421 | Input/Output: [(-99 -56 -73 35) -99]
Test Case: 422 | Input/Output: [(86 -93 -8 -21) -93]
Test Case: 423 | Input/Output: [(56 -48 2 -77) -77]
Test Case: 424 | Input/Output: [(40 64 92 19) 19]
Test Case: 425 | Input/Output: [(-97 53 21 -73) -97]
Test Case: 426 | Input/Output: [(-52 -59 -19 11) -59]
Test Case: 427 | Input/Output: [(-15 57 -78 -56) -78]
Test Case: 428 | Input/Output: [(14 -47 0 20) -47]
Test Case: 429 | Input/Output: [(9 -58 44 -21) -58]
Test Case: 430 | Input/Output: [(40 -35 100 16) -35]
Test Case: 431 | Input/Output: [(-33 -78 17 -12) -78]
Test Case: 432 | Input/Output: [(-90 20 90 -40) -90]
Test Case: 433 | Input/Output: [(-42 -17 95 45) -42]
Test Case: 434 | Input/Output: [(-5 -20 -49 -28) -49]
Test Case: 435 | Input/Output: [(-31 -79 48 4) -79]
Test Case: 436 | Input/Output: [(49 -77 7 36) -77]
Test Case: 437 | Input/Output: [(-94 -71 54 77) -94]
Test Case: 438 | Input/Output: [(78 38 77 -38) -38]
Test Case: 439 | Input/Output: [(34 -82 -27 -97) -97]
Test Case: 440 | Input/Output: [(36 87 63 -50) -50]
Test Case: 441 | Input/Output: [(-38 -27 87 -11) -38]
Test Case: 442 | Input/Output: [(-38 -12 -38 25) -38]
Test Case: 443 | Input/Output: [(68 83 63 -47) -47]
Test Case: 444 | Input/Output: [(-91 99 81 -68) -91]
Test Case: 445 | Input/Output: [(66 -89 57 66) -89]
Test Case: 446 | Input/Output: [(-1 -42 -78 -18) -78]
Test Case: 447 | Input/Output: [(21 17 29 -92) -92]
Test Case: 448 | Input/Output: [(-20 42 -21 -35) -35]
Test Case: 449 | Input/Output: [(-26 49 45 -19) -26]
Test Case: 450 | Input/Output: [(-60 -77 65 76) -77]
Test Case: 451 | Input/Output: [(88 34 -56 11) -56]
Test Case: 452 | Input/Output: [(33 -33 -20 54) -33]
Test Case: 453 | Input/Output: [(66 -87 -43 63) -87]
Test Case: 454 | Input/Output: [(25 2 81 50) 2]
Test Case: 455 | Input/Output: [(71 76 36 27) 27]
Test Case: 456 | Input/Output: [(-9 38 39 -75) -75]
Test Case: 457 | Input/Output: [(-22 -35 -70 -60) -70]
Test Case: 458 | Input/Output: [(-28 -72 77 38) -72]
Test Case: 459 | Input/Output: [(-94 22 62 -96) -96]
Test Case: 460 | Input/Output: [(70 27 29 50) 27]
Test Case: 461 | Input/Output: [(23 47 35 40) 23]
Test Case: 462 | Input/Output: [(-50 86 18 -94) -94]
Test Case: 463 | Input/Output: [(5 50 -93 75) -93]
Test Case: 464 | Input/Output: [(-75 -24 -96 -9) -96]
Test Case: 465 | Input/Output: [(79 36 7 -13) -13]
Test Case: 466 | Input/Output: [(2 -23 25 -33) -33]
Test Case: 467 | Input/Output: [(48 -93 -68 -46) -93]
Test Case: 468 | Input/Output: [(-27 31 -92 -67) -92]
Test Case: 469 | Input/Output: [(18 73 62 -83) -83]
Test Case: 470 | Input/Output: [(-13 -37 85 -95) -95]
Test Case: 471 | Input/Output: [(-19 18 -90 -12) -90]
Test Case: 472 | Input/Output: [(-77 -30 -31 92) -77]
Test Case: 473 | Input/Output: [(-45 91 92 -76) -76]
Test Case: 474 | Input/Output: [(-36 100 40 -58) -58]
Test Case: 475 | Input/Output: [(73 28 41 -84) -84]
Test Case: 476 | Input/Output: [(-42 84 39 -80) -80]
Test Case: 477 | Input/Output: [(-29 -15 -63 -49) -63]
Test Case: 478 | Input/Output: [(-76 -75 81 93) -76]
Test Case: 479 | Input/Output: [(-37 -72 -60 97) -72]
Test Case: 480 | Input/Output: [(97 48 51 -75) -75]
Test Case: 481 | Input/Output: [(90 86 -3 84) -3]
Test Case: 482 | Input/Output: [(62 -3 -98 22) -98]
Test Case: 483 | Input/Output: [(64 12 -86 -60) -86]
Test Case: 484 | Input/Output: [(50 2 -89 -82) -89]
Test Case: 485 | Input/Output: [(-15 -10 19 -22) -22]
Test Case: 486 | Input/Output: [(32 22 49 -33) -33]
Test Case: 487 | Input/Output: [(75 83 83 -80) -80]
Test Case: 488 | Input/Output: [(59 -2 -23 -99) -99]
Test Case: 489 | Input/Output: [(-91 -68 90 31) -91]
Test Case: 490 | Input/Output: [(-30 90 16 -72) -72]
Test Case: 491 | Input/Output: [(90 -50 -43 1) -50]
Test Case: 492 | Input/Output: [(47 -81 1 89) -81]
Test Case: 493 | Input/Output: [(-65 37 -36 60) -65]
Test Case: 494 | Input/Output: [(85 -74 -84 88) -84]
Test Case: 495 | Input/Output: [(0 -4 -91 23) -91]
Test Case: 496 | Input/Output: [(34 2 64 2) 2]
Test Case: 497 | Input/Output: [(-31 -60 -91 -16) -91]
Test Case: 498 | Input/Output: [(83 93 79 -31) -31]
Test Case: 499 | Input/Output: [(-98 34 65 -69) -98]
Test Case: 500 | Input/Output: [(25 -3 27 -91) -91]
Test Case: 501 | Input/Output: [(69 -24 73 20) -24]
Test Case: 502 | Input/Output: [(17 -59 40 -36) -59]
Test Case: 503 | Input/Output: [(69 84 -25 -24) -25]
Test Case: 504 | Input/Output: [(-87 12 60 -77) -87]
Test Case: 505 | Input/Output: [(-72 15 -57 36) -72]
Test Case: 506 | Input/Output: [(-43 29 -20 38) -43]
Test Case: 507 | Input/Output: [(-87 40 -5 31) -87]
Test Case: 508 | Input/Output: [(97 -35 -64 25) -64]
Test Case: 509 | Input/Output: [(45 -17 -22 84) -22]
Test Case: 510 | Input/Output: [(-76 72 84 36) -76]
Test Case: 511 | Input/Output: [(69 -38 9 71) -38]
Test Case: 512 | Input/Output: [(-2 -14 67 19) -14]
Test Case: 513 | Input/Output: [(-7 -37 -1 69) -37]
Test Case: 514 | Input/Output: [(0 35 -74 2) -74]
Test Case: 515 | Input/Output: [(-97 -55 -60 -88) -97]
Test Case: 516 | Input/Output: [(-65 32 46 -79) -79]
Test Case: 517 | Input/Output: [(-48 -16 94 38) -48]
Test Case: 518 | Input/Output: [(-95 -1 93 80) -95]
Test Case: 519 | Input/Output: [(-3 27 -76 -30) -76]
Test Case: 520 | Input/Output: [(11 -52 53 32) -52]
Test Case: 521 | Input/Output: [(82 32 63 71) 32]
Test Case: 522 | Input/Output: [(77 -14 36 -42) -42]
Test Case: 523 | Input/Output: [(83 69 64 -32) -32]
Test Case: 524 | Input/Output: [(-97 -85 -27 31) -97]
Test Case: 525 | Input/Output: [(-90 29 -38 -98) -98]
Test Case: 526 | Input/Output: [(-53 -61 -89 -22) -89]
Test Case: 527 | Input/Output: [(-58 64 -26 -75) -75]
Test Case: 528 | Input/Output: [(-11 91 -25 -18) -25]
Test Case: 529 | Input/Output: [(-71 30 46 45) -71]
Test Case: 530 | Input/Output: [(-50 16 -97 65) -97]
Test Case: 531 | Input/Output: [(81 47 -10 -7) -10]
Test Case: 532 | Input/Output: [(-35 -49 49 -11) -49]
Test Case: 533 | Input/Output: [(18 43 -98 81) -98]
Test Case: 534 | Input/Output: [(-29 76 15 -21) -29]
Test Case: 535 | Input/Output: [(84 6 -51 53) -51]
Test Case: 536 | Input/Output: [(-15 92 3 13) -15]
Test Case: 537 | Input/Output: [(58 -88 92 -35) -88]
Test Case: 538 | Input/Output: [(98 10 66 44) 10]
Test Case: 539 | Input/Output: [(-17 -37 -10 65) -37]
Test Case: 540 | Input/Output: [(-18 3 50 -65) -65]
Test Case: 541 | Input/Output: [(-28 -30 63 -44) -44]
Test Case: 542 | Input/Output: [(-73 100 -84 -3) -84]
Test Case: 543 | Input/Output: [(-74 88 -17 2) -74]
Test Case: 544 | Input/Output: [(92 -91 -51 -63) -91]
Test Case: 545 | Input/Output: [(81 17 23 35) 17]
Test Case: 546 | Input/Output: [(63 -33 61 -41) -41]
Test Case: 547 | Input/Output: [(38 -52 -32 33) -52]
Test Case: 548 | Input/Output: [(12 -48 -7 -20) -48]
Test Case: 549 | Input/Output: [(70 60 77 6) 6]
Test Case: 550 | Input/Output: [(17 -100 -17 26) -100]
Test Case: 551 | Input/Output: [(-51 -4 -29 78) -51]
Test Case: 552 | Input/Output: [(26 -63 97 60) -63]
Test Case: 553 | Input/Output: [(52 82 -19 92) -19]
Test Case: 554 | Input/Output: [(98 86 -70 1) -70]
Test Case: 555 | Input/Output: [(-13 67 -21 -27) -27]
Test Case: 556 | Input/Output: [(25 66 100 -94) -94]
Test Case: 557 | Input/Output: [(-44 90 75 -17) -44]
Test Case: 558 | Input/Output: [(52 -57 -99 -81) -99]
Test Case: 559 | Input/Output: [(48 56 12 -63) -63]
Test Case: 560 | Input/Output: [(-35 -25 47 -50) -50]
Test Case: 561 | Input/Output: [(67 24 -72 -48) -72]
Test Case: 562 | Input/Output: [(21 -4 95 -100) -100]
Test Case: 563 | Input/Output: [(63 28 -78 -45) -78]
Test Case: 564 | Input/Output: [(6 -55 -66 83) -66]
Test Case: 565 | Input/Output: [(-99 -39 48 77) -99]
Test Case: 566 | Input/Output: [(32 20 -37 -11) -37]
Test Case: 567 | Input/Output: [(90 -17 -20 44) -20]
Test Case: 568 | Input/Output: [(91 46 74 -36) -36]
Test Case: 569 | Input/Output: [(-53 100 -50 60) -53]
Test Case: 570 | Input/Output: [(22 96 -65 31) -65]
Test Case: 571 | Input/Output: [(100 -76 -85 1) -85]
Test Case: 572 | Input/Output: [(69 -78 93 -44) -78]
Test Case: 573 | Input/Output: [(21 98 14 87) 14]
Test Case: 574 | Input/Output: [(-49 66 -23 -53) -53]
Test Case: 575 | Input/Output: [(-1 59 -48 59) -48]
Test Case: 576 | Input/Output: [(89 29 -50 49) -50]
Test Case: 577 | Input/Output: [(-79 18 65 21) -79]
Test Case: 578 | Input/Output: [(86 40 -41 24) -41]
Test Case: 579 | Input/Output: [(32 -78 85 36) -78]
Test Case: 580 | Input/Output: [(26 100 34 -65) -65]
Test Case: 581 | Input/Output: [(21 35 -36 -18) -36]
Test Case: 582 | Input/Output: [(-25 -81 -39 49) -81]
Test Case: 583 | Input/Output: [(82 0 -43 -57) -57]
Test Case: 584 | Input/Output: [(81 100 29 -18) -18]
Test Case: 585 | Input/Output: [(-4 -33 -19 -63) -63]
Test Case: 586 | Input/Output: [(-61 89 -38 46) -61]
Test Case: 587 | Input/Output: [(-64 82 -14 13) -64]
Test Case: 588 | Input/Output: [(-86 -5 28 -36) -86]
Test Case: 589 | Input/Output: [(-73 -32 37 63) -73]
Test Case: 590 | Input/Output: [(74 -47 -36 -7) -47]
Test Case: 591 | Input/Output: [(41 47 43 -43) -43]
Test Case: 592 | Input/Output: [(14 53 67 -72) -72]
Test Case: 593 | Input/Output: [(18 48 -39 99) -39]
Test Case: 594 | Input/Output: [(-40 -2 73 -50) -50]
Test Case: 595 | Input/Output: [(49 -97 -97 -12) -97]
Test Case: 596 | Input/Output: [(-13 57 41 11) -13]
Test Case: 597 | Input/Output: [(44 -36 17 41) -36]
Test Case: 598 | Input/Output: [(90 69 -63 63) -63]
Test Case: 599 | Input/Output: [(-58 99 60 90) -58]
Test Case: 600 | Input/Output: [(34 -70 35 -69) -70]
Test Case: 601 | Input/Output: [(72 87 -39 -68) -68]
Test Case: 602 | Input/Output: [(-41 95 14 50) -41]
Test Case: 603 | Input/Output: [(-75 -14 57 20) -75]
Test Case: 604 | Input/Output: [(-95 -31 -17 68) -95]
Test Case: 605 | Input/Output: [(52 35 -29 -76) -76]
Test Case: 606 | Input/Output: [(-70 -74 81 -16) -74]
Test Case: 607 | Input/Output: [(18 -88 -80 -85) -88]
Test Case: 608 | Input/Output: [(-65 46 83 -18) -65]
Test Case: 609 | Input/Output: [(76 -56 -1 0) -56]
Test Case: 610 | Input/Output: [(41 85 62 -93) -93]
Test Case: 611 | Input/Output: [(3 -36 29 -31) -36]
Test Case: 612 | Input/Output: [(-39 -84 -35 -32) -84]
Test Case: 613 | Input/Output: [(25 -100 68 79) -100]
Test Case: 614 | Input/Output: [(-41 -80 34 59) -80]
Test Case: 615 | Input/Output: [(48 58 -94 100) -94]
Test Case: 616 | Input/Output: [(-72 -94 -20 95) -94]
Test Case: 617 | Input/Output: [(-71 38 -68 -48) -71]
Test Case: 618 | Input/Output: [(-63 -26 91 -62) -63]
Test Case: 619 | Input/Output: [(78 -55 -95 70) -95]
Test Case: 620 | Input/Output: [(17 6 97 -17) -17]
Test Case: 621 | Input/Output: [(58 63 -18 -39) -39]
Test Case: 622 | Input/Output: [(-32 34 2 -78) -78]
Test Case: 623 | Input/Output: [(18 0 -8 -54) -54]
Test Case: 624 | Input/Output: [(-92 13 13 -13) -92]
Test Case: 625 | Input/Output: [(63 -48 -38 97) -48]
Test Case: 626 | Input/Output: [(37 -97 86 42) -97]
Test Case: 627 | Input/Output: [(-67 27 -64 91) -67]
Test Case: 628 | Input/Output: [(-41 100 27 -51) -51]
Test Case: 629 | Input/Output: [(34 14 -49 -95) -95]
Test Case: 630 | Input/Output: [(44 26 -72 24) -72]
Test Case: 631 | Input/Output: [(-80 -64 94 -28) -80]
Test Case: 632 | Input/Output: [(-35 -55 -49 -81) -81]
Test Case: 633 | Input/Output: [(80 -99 11 -98) -99]
Test Case: 634 | Input/Output: [(50 -27 55 41) -27]
Test Case: 635 | Input/Output: [(-13 -63 -34 -6) -63]
Test Case: 636 | Input/Output: [(23 -16 -66 24) -66]
Test Case: 637 | Input/Output: [(14 -4 65 89) -4]
Test Case: 638 | Input/Output: [(-28 -77 -92 94) -92]
Test Case: 639 | Input/Output: [(-71 -20 99 88) -71]
Test Case: 640 | Input/Output: [(90 69 -92 -31) -92]
Test Case: 641 | Input/Output: [(-91 81 100 43) -91]
Test Case: 642 | Input/Output: [(39 30 30 53) 30]
Test Case: 643 | Input/Output: [(51 62 -57 -42) -57]
Test Case: 644 | Input/Output: [(21 96 -96 24) -96]
Test Case: 645 | Input/Output: [(-3 -46 -75 -83) -83]
Test Case: 646 | Input/Output: [(95 56 -16 -73) -73]
Test Case: 647 | Input/Output: [(14 56 -6 9) -6]
Test Case: 648 | Input/Output: [(-17 88 70 95) -17]
Test Case: 649 | Input/Output: [(81 -5 73 97) -5]
Test Case: 650 | Input/Output: [(79 -76 -85 56) -85]
Test Case: 651 | Input/Output: [(15 73 -36 -52) -52]
Test Case: 652 | Input/Output: [(62 -25 -64 -56) -64]
Test Case: 653 | Input/Output: [(-10 -53 2 -45) -53]
Test Case: 654 | Input/Output: [(33 39 -33 -87) -87]
Test Case: 655 | Input/Output: [(1 38 58 57) 1]
Test Case: 656 | Input/Output: [(83 87 -28 41) -28]
Test Case: 657 | Input/Output: [(-49 46 -14 58) -49]
Test Case: 658 | Input/Output: [(-13 70 -95 10) -95]
Test Case: 659 | Input/Output: [(97 0 -43 -64) -64]
Test Case: 660 | Input/Output: [(61 13 3 53) 3]
Test Case: 661 | Input/Output: [(-48 43 77 -60) -60]
Test Case: 662 | Input/Output: [(-57 34 98 -95) -95]
Test Case: 663 | Input/Output: [(25 50 -22 -25) -25]
Test Case: 664 | Input/Output: [(46 59 23 -51) -51]
Test Case: 665 | Input/Output: [(-51 18 -40 -2) -51]
Test Case: 666 | Input/Output: [(18 25 16 68) 16]
Test Case: 667 | Input/Output: [(-15 -73 18 63) -73]
Test Case: 668 | Input/Output: [(-40 -63 96 98) -63]
Test Case: 669 | Input/Output: [(37 -63 15 86) -63]
Test Case: 670 | Input/Output: [(36 71 47 -93) -93]
Test Case: 671 | Input/Output: [(39 -58 -48 12) -58]
Test Case: 672 | Input/Output: [(-75 33 46 24) -75]
Test Case: 673 | Input/Output: [(-97 81 -57 -4) -97]
Test Case: 674 | Input/Output: [(80 72 47 -6) -6]
Test Case: 675 | Input/Output: [(29 15 -44 -86) -86]
Test Case: 676 | Input/Output: [(64 15 83 -87) -87]
Test Case: 677 | Input/Output: [(-30 49 18 -70) -70]
Test Case: 678 | Input/Output: [(12 35 -4 -9) -9]
Test Case: 679 | Input/Output: [(30 86 -86 84) -86]
Test Case: 680 | Input/Output: [(-30 -69 25 -2) -69]
Test Case: 681 | Input/Output: [(14 89 -85 77) -85]
Test Case: 682 | Input/Output: [(-30 -63 77 56) -63]
Test Case: 683 | Input/Output: [(-14 16 -70 -2) -70]
Test Case: 684 | Input/Output: [(48 -24 93 -10) -24]
Test Case: 685 | Input/Output: [(31 -72 41 13) -72]
Test Case: 686 | Input/Output: [(39 56 43 -51) -51]
Test Case: 687 | Input/Output: [(-77 -6 30 51) -77]
Test Case: 688 | Input/Output: [(59 -55 1 -19) -55]
Test Case: 689 | Input/Output: [(50 -47 -79 -17) -79]
Test Case: 690 | Input/Output: [(-57 48 -36 -1) -57]
Test Case: 691 | Input/Output: [(-95 -58 -21 -10) -95]
Test Case: 692 | Input/Output: [(-60 18 97 77) -60]
Test Case: 693 | Input/Output: [(-66 -82 -46 -48) -82]
Test Case: 694 | Input/Output: [(75 42 82 -58) -58]
Test Case: 695 | Input/Output: [(66 72 -26 50) -26]
Test Case: 696 | Input/Output: [(20 55 -30 24) -30]
Test Case: 697 | Input/Output: [(62 -29 -70 57) -70]
Test Case: 698 | Input/Output: [(-58 -43 52 83) -58]
Test Case: 699 | Input/Output: [(7 16 -64 3) -64]
Test Case: 700 | Input/Output: [(6 -98 -68 76) -98]
Test Case: 701 | Input/Output: [(19 -89 25 -80) -89]
Test Case: 702 | Input/Output: [(-30 43 11 17) -30]
Test Case: 703 | Input/Output: [(-95 74 -90 37) -95]
Test Case: 704 | Input/Output: [(-87 -78 91 -55) -87]
Test Case: 705 | Input/Output: [(-50 -15 82 41) -50]
Test Case: 706 | Input/Output: [(42 7 12 70) 7]
Test Case: 707 | Input/Output: [(-26 35 49 76) -26]
Test Case: 708 | Input/Output: [(20 24 -18 -74) -74]
Test Case: 709 | Input/Output: [(44 -22 -33 99) -33]
Test Case: 710 | Input/Output: [(-46 99 -43 40) -46]
Test Case: 711 | Input/Output: [(30 -47 -100 52) -100]
Test Case: 712 | Input/Output: [(8 -22 49 -32) -32]
Test Case: 713 | Input/Output: [(74 -70 32 55) -70]
Test Case: 714 | Input/Output: [(62 50 76 -57) -57]
Test Case: 715 | Input/Output: [(-84 5 -98 -88) -98]
Test Case: 716 | Input/Output: [(-16 41 -33 95) -33]
Test Case: 717 | Input/Output: [(-49 11 -33 -31) -49]
Test Case: 718 | Input/Output: [(-96 47 -50 89) -96]
Test Case: 719 | Input/Output: [(-40 -71 -98 52) -98]
Test Case: 720 | Input/Output: [(24 87 -16 60) -16]
Test Case: 721 | Input/Output: [(-71 55 -82 60) -82]
Test Case: 722 | Input/Output: [(33 -86 70 53) -86]
Test Case: 723 | Input/Output: [(88 25 35 -93) -93]
Test Case: 724 | Input/Output: [(39 -73 15 74) -73]
Test Case: 725 | Input/Output: [(-97 -6 -64 59) -97]
Test Case: 726 | Input/Output: [(-81 46 -54 1) -81]
Test Case: 727 | Input/Output: [(47 -30 -63 69) -63]
Test Case: 728 | Input/Output: [(19 -72 -81 69) -81]
Test Case: 729 | Input/Output: [(36 -28 95 -69) -69]
Test Case: 730 | Input/Output: [(-56 -31 18 9) -56]
Test Case: 731 | Input/Output: [(23 -66 91 -66) -66]
Test Case: 732 | Input/Output: [(29 14 -82 55) -82]
Test Case: 733 | Input/Output: [(100 -59 -56 58) -59]
Test Case: 734 | Input/Output: [(48 69 44 -42) -42]
Test Case: 735 | Input/Output: [(9 25 -94 30) -94]
Test Case: 736 | Input/Output: [(-20 -34 -80 73) -80]
Test Case: 737 | Input/Output: [(54 33 -2 -13) -13]
Test Case: 738 | Input/Output: [(78 -88 -46 30) -88]
Test Case: 739 | Input/Output: [(37 -35 58 -35) -35]
Test Case: 740 | Input/Output: [(-29 -10 91 11) -29]
Test Case: 741 | Input/Output: [(0 52 4 -10) -10]
Test Case: 742 | Input/Output: [(-52 -6 1 -67) -67]
Test Case: 743 | Input/Output: [(34 42 95 -85) -85]
Test Case: 744 | Input/Output: [(92 -97 -37 -44) -97]
Test Case: 745 | Input/Output: [(-29 75 -42 48) -42]
Test Case: 746 | Input/Output: [(-58 36 26 -38) -58]
Test Case: 747 | Input/Output: [(35 -84 39 -82) -84]
Test Case: 748 | Input/Output: [(41 3 29 38) 3]
Test Case: 749 | Input/Output: [(-4 90 -54 64) -54]
Test Case: 750 | Input/Output: [(-46 -34 -65 -93) -93]
Test Case: 751 | Input/Output: [(78 -19 61 45) -19]
Test Case: 752 | Input/Output: [(71 -28 24 80) -28]
Test Case: 753 | Input/Output: [(-53 -90 -67 70) -90]
Test Case: 754 | Input/Output: [(-82 26 -100 -5) -100]
Test Case: 755 | Input/Output: [(-59 -73 45 11) -73]
Test Case: 756 | Input/Output: [(-89 -71 58 33) -89]
Test Case: 757 | Input/Output: [(-48 -27 -97 -56) -97]
Test Case: 758 | Input/Output: [(99 -12 84 -51) -51]
Test Case: 759 | Input/Output: [(99 62 47 16) 16]
Test Case: 760 | Input/Output: [(-62 -36 -3 -99) -99]
Test Case: 761 | Input/Output: [(-33 2 -71 47) -71]
Test Case: 762 | Input/Output: [(23 -4 -58 8) -58]
Test Case: 763 | Input/Output: [(-83 -89 -69 26) -89]
Test Case: 764 | Input/Output: [(-84 -64 -33 58) -84]
Test Case: 765 | Input/Output: [(-15 79 59 69) -15]
Test Case: 766 | Input/Output: [(61 26 -73 73) -73]
Test Case: 767 | Input/Output: [(24 -21 -87 16) -87]
Test Case: 768 | Input/Output: [(22 -88 -1 -4) -88]
Test Case: 769 | Input/Output: [(-2 -9 -100 37) -100]
Test Case: 770 | Input/Output: [(31 4 55 -90) -90]
Test Case: 771 | Input/Output: [(42 13 -63 -52) -63]
Test Case: 772 | Input/Output: [(32 41 99 81) 32]
Test Case: 773 | Input/Output: [(47 42 -30 -81) -81]
Test Case: 774 | Input/Output: [(-96 -59 -25 -63) -96]
Test Case: 775 | Input/Output: [(-34 17 92 27) -34]
Test Case: 776 | Input/Output: [(-67 71 57 -42) -67]
Test Case: 777 | Input/Output: [(-24 -84 -70 -83) -84]
Test Case: 778 | Input/Output: [(-41 -81 -36 15) -81]
Test Case: 779 | Input/Output: [(-88 -37 23 -64) -88]
Test Case: 780 | Input/Output: [(-31 64 20 -30) -31]
Test Case: 781 | Input/Output: [(-80 88 55 59) -80]
Test Case: 782 | Input/Output: [(84 2 -69 62) -69]
Test Case: 783 | Input/Output: [(87 30 36 -39) -39]
Test Case: 784 | Input/Output: [(-51 86 63 -27) -51]
Test Case: 785 | Input/Output: [(68 52 12 -98) -98]
Test Case: 786 | Input/Output: [(-27 60 -77 -1) -77]
Test Case: 787 | Input/Output: [(38 -67 68 -30) -67]
Test Case: 788 | Input/Output: [(-61 7 -37 36) -61]
Test Case: 789 | Input/Output: [(-88 -62 75 -47) -88]
Test Case: 790 | Input/Output: [(23 -26 -84 -8) -84]
Test Case: 791 | Input/Output: [(43 -48 -34 62) -48]
Test Case: 792 | Input/Output: [(1 70 44 28) 1]
Test Case: 793 | Input/Output: [(25 38 37 52) 25]
Test Case: 794 | Input/Output: [(72 -90 9 -14) -90]
Test Case: 795 | Input/Output: [(-17 47 74 83) -17]
Test Case: 796 | Input/Output: [(-13 -15 63 50) -15]
Test Case: 797 | Input/Output: [(-61 14 -98 97) -98]
Test Case: 798 | Input/Output: [(57 80 -2 89) -2]
Test Case: 799 | Input/Output: [(-97 18 -66 59) -97]
Test Case: 800 | Input/Output: [(95 43 -15 23) -15]
Test Case: 801 | Input/Output: [(47 -30 -55 100) -55]
Test Case: 802 | Input/Output: [(19 -80 -62 -17) -80]
Test Case: 803 | Input/Output: [(-79 -27 11 -68) -79]
Test Case: 804 | Input/Output: [(-42 19 85 -89) -89]
Test Case: 805 | Input/Output: [(-92 67 5 64) -92]
Test Case: 806 | Input/Output: [(-83 47 -92 15) -92]
Test Case: 807 | Input/Output: [(-92 34 13 67) -92]
Test Case: 808 | Input/Output: [(30 41 49 34) 30]
Test Case: 809 | Input/Output: [(52 -71 -21 -9) -71]
Test Case: 810 | Input/Output: [(51 57 -92 21) -92]
Test Case: 811 | Input/Output: [(94 69 67 35) 35]
Test Case: 812 | Input/Output: [(50 -7 6 -79) -79]
Test Case: 813 | Input/Output: [(-1 3 -50 -82) -82]
Test Case: 814 | Input/Output: [(-74 -90 26 91) -90]
Test Case: 815 | Input/Output: [(3 99 -67 -26) -67]
Test Case: 816 | Input/Output: [(9 61 30 96) 9]
Test Case: 817 | Input/Output: [(86 95 -37 59) -37]
Test Case: 818 | Input/Output: [(-22 -89 -17 -7) -89]
Test Case: 819 | Input/Output: [(-33 -22 100 42) -33]
Test Case: 820 | Input/Output: [(-86 16 52 -59) -86]
Test Case: 821 | Input/Output: [(-43 48 36 11) -43]
Test Case: 822 | Input/Output: [(-13 93 -27 55) -27]
Test Case: 823 | Input/Output: [(-24 18 -33 35) -33]
Test Case: 824 | Input/Output: [(35 -46 -54 -36) -54]
Test Case: 825 | Input/Output: [(93 -25 4 53) -25]
Test Case: 826 | Input/Output: [(-100 92 -25 9) -100]
Test Case: 827 | Input/Output: [(-34 14 -19 53) -34]
Test Case: 828 | Input/Output: [(22 98 -58 -58) -58]
Test Case: 829 | Input/Output: [(-48 -74 -78 -53) -78]
Test Case: 830 | Input/Output: [(16 9 -64 12) -64]
Test Case: 831 | Input/Output: [(-6 -24 -1 -72) -72]
Test Case: 832 | Input/Output: [(-58 28 -98 45) -98]
Test Case: 833 | Input/Output: [(21 -21 47 45) -21]
Test Case: 834 | Input/Output: [(-46 72 38 6) -46]
Test Case: 835 | Input/Output: [(47 -46 31 -74) -74]
Test Case: 836 | Input/Output: [(100 -38 4 -23) -38]
Test Case: 837 | Input/Output: [(25 -30 -3 12) -30]
Test Case: 838 | Input/Output: [(65 -47 -86 11) -86]
Test Case: 839 | Input/Output: [(-51 6 59 -98) -98]
Test Case: 840 | Input/Output: [(-30 -29 3 -30) -30]
Test Case: 841 | Input/Output: [(-76 33 -75 37) -76]
Test Case: 842 | Input/Output: [(71 -97 -59 -77) -97]
Test Case: 843 | Input/Output: [(67 -12 74 72) -12]
Test Case: 844 | Input/Output: [(86 1 -59 -12) -59]
Test Case: 845 | Input/Output: [(43 -22 40 -8) -22]
Test Case: 846 | Input/Output: [(0 -87 -7 22) -87]
Test Case: 847 | Input/Output: [(97 3 -50 -53) -53]
Test Case: 848 | Input/Output: [(-67 -56 34 89) -67]
Test Case: 849 | Input/Output: [(6 -46 91 -83) -83]
Test Case: 850 | Input/Output: [(-10 34 84 4) -10]
Test Case: 851 | Input/Output: [(-64 93 99 -4) -64]
Test Case: 852 | Input/Output: [(-6 68 -35 51) -35]
Test Case: 853 | Input/Output: [(-51 26 -28 -94) -94]
Test Case: 854 | Input/Output: [(26 -69 -91 -95) -95]
Test Case: 855 | Input/Output: [(-7 -32 34 84) -32]
Test Case: 856 | Input/Output: [(0 -99 48 -2) -99]
Test Case: 857 | Input/Output: [(76 1 -80 -70) -80]
Test Case: 858 | Input/Output: [(0 73 -79 -33) -79]
Test Case: 859 | Input/Output: [(96 -5 41 98) -5]
Test Case: 860 | Input/Output: [(-81 34 -59 -2) -81]
Test Case: 861 | Input/Output: [(-5 28 68 -49) -49]
Test Case: 862 | Input/Output: [(-10 -13 -62 -55) -62]
Test Case: 863 | Input/Output: [(-74 47 -33 -39) -74]
Test Case: 864 | Input/Output: [(62 -29 -23 -1) -29]
Test Case: 865 | Input/Output: [(54 26 62 -1) -1]
Test Case: 866 | Input/Output: [(-29 84 -13 72) -29]
Test Case: 867 | Input/Output: [(25 87 7 67) 7]
Test Case: 868 | Input/Output: [(83 40 37 -60) -60]
Test Case: 869 | Input/Output: [(-37 -37 81 62) -37]
Test Case: 870 | Input/Output: [(-18 15 60 90) -18]
Test Case: 871 | Input/Output: [(-89 -25 -77 6) -89]
Test Case: 872 | Input/Output: [(83 -79 -18 -10) -79]
Test Case: 873 | Input/Output: [(-55 63 16 -34) -55]
Test Case: 874 | Input/Output: [(-69 -10 100 -77) -77]
Test Case: 875 | Input/Output: [(9 -55 5 -53) -55]
Test Case: 876 | Input/Output: [(11 -68 27 28) -68]
Test Case: 877 | Input/Output: [(17 -27 -98 -68) -98]
Test Case: 878 | Input/Output: [(52 50 43 -97) -97]
Test Case: 879 | Input/Output: [(65 68 -73 -74) -74]
Test Case: 880 | Input/Output: [(11 85 77 48) 11]
Test Case: 881 | Input/Output: [(-79 38 -85 -19) -85]
Test Case: 882 | Input/Output: [(15 -66 70 -6) -66]
Test Case: 883 | Input/Output: [(68 60 -10 -11) -11]
Test Case: 884 | Input/Output: [(58 34 21 80) 21]
Test Case: 885 | Input/Output: [(64 1 -11 -67) -67]
Test Case: 886 | Input/Output: [(41 -13 -64 -11) -64]
Test Case: 887 | Input/Output: [(18 2 -45 -5) -45]
Test Case: 888 | Input/Output: [(-17 -96 6 -3) -96]
Test Case: 889 | Input/Output: [(-47 97 -6 -1) -47]
Test Case: 890 | Input/Output: [(33 -2 -1 -4) -4]
Test Case: 891 | Input/Output: [(15 -76 51 13) -76]
Test Case: 892 | Input/Output: [(88 -27 82 -25) -27]
Test Case: 893 | Input/Output: [(38 68 -51 25) -51]
Test Case: 894 | Input/Output: [(86 -58 74 48) -58]
Test Case: 895 | Input/Output: [(65 91 -70 -50) -70]
Test Case: 896 | Input/Output: [(97 77 77 11) 11]
Test Case: 897 | Input/Output: [(-58 -26 52 48) -58]
Test Case: 898 | Input/Output: [(-89 -16 -45 -35) -89]
Test Case: 899 | Input/Output: [(60 -62 -59 -95) -95]
Test Case: 900 | Input/Output: [(84 -85 74 10) -85]
Test Case: 901 | Input/Output: [(-91 -99 -100 10) -100]
Test Case: 902 | Input/Output: [(-75 72 39 -55) -75]
Test Case: 903 | Input/Output: [(-10 88 72 -58) -58]
Test Case: 904 | Input/Output: [(-45 -3 -72 -89) -89]
Test Case: 905 | Input/Output: [(-41 -55 -98 -96) -98]
Test Case: 906 | Input/Output: [(-41 -28 34 -15) -41]
Test Case: 907 | Input/Output: [(79 -49 35 67) -49]
Test Case: 908 | Input/Output: [(-82 56 -45 36) -82]
Test Case: 909 | Input/Output: [(-61 -61 -27 83) -61]
Test Case: 910 | Input/Output: [(-80 68 -45 25) -80]
Test Case: 911 | Input/Output: [(88 32 1 59) 1]
Test Case: 912 | Input/Output: [(90 -42 77 -58) -58]
Test Case: 913 | Input/Output: [(64 -48 -64 83) -64]
Test Case: 914 | Input/Output: [(83 98 -81 59) -81]
Test Case: 915 | Input/Output: [(85 89 -49 -44) -49]
Test Case: 916 | Input/Output: [(-53 -63 -2 -75) -75]
Test Case: 917 | Input/Output: [(-44 1 49 33) -44]
Test Case: 918 | Input/Output: [(4 39 -35 -90) -90]
Test Case: 919 | Input/Output: [(59 -62 -94 -96) -96]
Test Case: 920 | Input/Output: [(-24 -37 -21 -99) -99]
Test Case: 921 | Input/Output: [(-46 -98 50 -59) -98]
Test Case: 922 | Input/Output: [(48 -64 -45 32) -64]
Test Case: 923 | Input/Output: [(-92 -2 78 21) -92]
Test Case: 924 | Input/Output: [(-56 -17 67 18) -56]
Test Case: 925 | Input/Output: [(-21 67 -45 -93) -93]
Test Case: 926 | Input/Output: [(-99 -14 69 -25) -99]
Test Case: 927 | Input/Output: [(24 -67 28 55) -67]
Test Case: 928 | Input/Output: [(25 -10 -44 35) -44]
Test Case: 929 | Input/Output: [(57 -47 34 100) -47]
Test Case: 930 | Input/Output: [(5 -67 -99 -90) -99]
Test Case: 931 | Input/Output: [(-1 24 -87 -35) -87]
Test Case: 932 | Input/Output: [(23 -9 -54 88) -54]
Test Case: 933 | Input/Output: [(86 -95 14 -59) -95]
Test Case: 934 | Input/Output: [(49 -63 89 26) -63]
Test Case: 935 | Input/Output: [(-2 7 -36 -93) -93]
Test Case: 936 | Input/Output: [(-91 -85 89 12) -91]
Test Case: 937 | Input/Output: [(-90 90 3 -6) -90]
Test Case: 938 | Input/Output: [(58 51 -46 -19) -46]
Test Case: 939 | Input/Output: [(-97 92 -47 5) -97]
Test Case: 940 | Input/Output: [(-11 45 21 8) -11]
Test Case: 941 | Input/Output: [(-96 -84 13 98) -96]
Test Case: 942 | Input/Output: [(-44 -93 98 -56) -93]
Test Case: 943 | Input/Output: [(6 -66 91 28) -66]
Test Case: 944 | Input/Output: [(30 31 60 -52) -52]
Test Case: 945 | Input/Output: [(78 -19 -32 -69) -69]
Test Case: 946 | Input/Output: [(28 -53 95 39) -53]
Test Case: 947 | Input/Output: [(-29 17 -41 -13) -41]
Test Case: 948 | Input/Output: [(-13 100 -80 -8) -80]
Test Case: 949 | Input/Output: [(-31 1 27 17) -31]
Test Case: 950 | Input/Output: [(-84 -78 -49 60) -84]
Test Case: 951 | Input/Output: [(78 -70 -99 40) -99]
Test Case: 952 | Input/Output: [(-81 86 -13 -81) -81]
Test Case: 953 | Input/Output: [(-31 -45 -46 34) -46]
Test Case: 954 | Input/Output: [(38 63 -28 -75) -75]
Test Case: 955 | Input/Output: [(-90 80 36 54) -90]
Test Case: 956 | Input/Output: [(95 -23 -28 -93) -93]
Test Case: 957 | Input/Output: [(1 37 -71 99) -71]
Test Case: 958 | Input/Output: [(-79 -57 -22 97) -79]
Test Case: 959 | Input/Output: [(99 5 -98 82) -98]
Test Case: 960 | Input/Output: [(51 34 -72 89) -72]
Test Case: 961 | Input/Output: [(-14 68 -56 -29) -56]
Test Case: 962 | Input/Output: [(-6 28 11 71) -6]
Test Case: 963 | Input/Output: [(83 89 90 81) 81]
Test Case: 964 | Input/Output: [(48 22 90 -73) -73]
Test Case: 965 | Input/Output: [(-61 13 44 -8) -61]
Test Case: 966 | Input/Output: [(74 -96 -45 -65) -96]
Test Case: 967 | Input/Output: [(27 73 -59 -68) -68]
Test Case: 968 | Input/Output: [(-50 -87 5 -1) -87]
Test Case: 969 | Input/Output: [(10 29 -88 100) -88]
Test Case: 970 | Input/Output: [(-8 5 66 57) -8]
Test Case: 971 | Input/Output: [(-26 40 1 1) -26]
Test Case: 972 | Input/Output: [(-33 24 -92 -66) -92]
Test Case: 973 | Input/Output: [(59 -62 -33 96) -62]
Test Case: 974 | Input/Output: [(-91 -20 64 -77) -91]
Test Case: 975 | Input/Output: [(68 -7 32 57) -7]
Test Case: 976 | Input/Output: [(76 1 -82 13) -82]
Test Case: 977 | Input/Output: [(-15 98 34 9) -15]
Test Case: 978 | Input/Output: [(-92 -32 74 81) -92]
Test Case: 979 | Input/Output: [(12 -94 -35 23) -94]
Test Case: 980 | Input/Output: [(-34 -52 61 56) -52]
Test Case: 981 | Input/Output: [(-83 1 -56 -46) -83]
Test Case: 982 | Input/Output: [(-74 0 -10 64) -74]
Test Case: 983 | Input/Output: [(64 39 85 71) 39]
Test Case: 984 | Input/Output: [(-55 -57 82 97) -57]
Test Case: 985 | Input/Output: [(22 -96 26 -14) -96]
Test Case: 986 | Input/Output: [(8 -6 -100 -71) -100]
Test Case: 987 | Input/Output: [(-47 1 -70 -32) -70]
Test Case: 988 | Input/Output: [(94 81 67 -75) -75]
Test Case: 989 | Input/Output: [(59 63 62 6) 6]
Test Case: 990 | Input/Output: [(11 -44 -6 -31) -44]
Test Case: 991 | Input/Output: [(98 -96 -19 -49) -96]
Test Case: 992 | Input/Output: [(71 -11 85 99) -11]
Test Case: 993 | Input/Output: [(-60 -100 16 -65) -100]
Test Case: 994 | Input/Output: [(24 -1 95 -43) -43]
Test Case: 995 | Input/Output: [(-28 -69 67 5) -69]
Test Case: 996 | Input/Output: [(84 -35 -63 66) -63]
Test Case: 997 | Input/Output: [(-80 -86 -87 75) -87]
Test Case: 998 | Input/Output: [(45 10 20 81) 10]
Test Case: 999 | Input/Output: [(69 28 -66 97) -66]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:uniform-addition-and-deletion 1.0}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 3000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = -12 75 -69 -101 -73 53 83 -99 -24 -16 -107 -21 22 -89 -81 -36
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-58 -49 -58 -58] -58] [[58 58 -64 58] -64] [[-80 -98 -80 -80] -98] [[-100 -67 -100 -100] -100] [[-1 -1 -1 -77] -77] [[-93 73 73 73] -93] [[64 49 64 64] 49] [[-22 92 -22 -22] -22] [[-28 -28 -28 24] -28] [[-57 -57 -57 -91] -91] [(60 60 60 60) 60] [(-63 -63 -63 -63) -63] [(42 42 42 42) 42] [(-13 -13 -13 -13) -13] [(54 54 54 54) 54] [(43 90 93 63) 43] [(92 75 62 74) 62] [(33 72 89 1) 1] [(44 93 20 27) 20] [(31 96 2 87) 2] [(89 75 36 62) 36] [(7 76 26 78) 7] [(61 99 24 100) 24] [(7 95 2 95) 2] [(25 87 16 59) 16] [(85 84 40 68) 40] [(54 4 1 0) 0] [(82 69 54 70) 54] [(21 46 17 47) 17] [(100 80 29 93) 29] [(59 39 94 83) 39] [(22 23 18 74) 18] [(66 24 76 97) 24] [(45 90 55 74) 45] [(7 66 92 8) 7] [(6 82 -38 -95) -95] [(-21 18 22 81) -21] [(97 36 -58 -10) -58] [(-29 31 -61 88) -61] [(-3 90 -69 -77) -77] [(-36 -9 2 -75) -75] [(73 67 -86 61) -86] [(52 -66 -83 -94) -94] [(77 22 25 58) 22] [(29 87 -95 -10) -95] [(83 45 -30 -17) -30] [(-80 -36 56 -89) -89] [(89 -26 94 -12) -26] [(6 4 3 93) 3] [(46 -98 81 -93) -98] [(-29 -85 -86 -18) -86] [(29 -18 89 61) -18] [(30 -39 -3 11) -39] [(-6 -15 -90 -37) -90] [(41 -93 50 55) -93] [(58 39 19 78) 19] [(-50 6 78 55) -50] [(-95 -84 -88 55) -95] [(69 -26 26 67) -26] [(17 29 -40 62) -40] [(-12 -73 -72 -32) -73] [(44 78 -70 95) -70] [(-97 -79 14 -12) -97] [(-17 -56 13 85) -56] [(56 -24 -5 15) -24] [(87 -30 46 65) -30] [(89 -12 -41 -57) -57] [(-85 -23 7 -71) -85] [(92 68 -31 -90) -90] [(51 79 -8 43) -8] [(75 -88 18 -19) -88] [(37 40 -42 -50) -50] [(89 -56 -17 75) -56] [(34 17 -80 36) -80] [(55 -83 -86 51) -86] [(-97 -64 -45 78) -97] [(-45 91 83 -48) -48] [(-3 -88 -52 -82) -88] [(-94 -58 98 -53) -94] [(-91 54 19 -48) -91] [(11 60 -46 -56) -56] [(80 81 -78 -28) -78] [(-87 5 -30 72) -87] [(-31 64 20 22) -31] [(78 -18 49 63) -18] [(-93 11 65 -54) -93] [(13 -9 -88 88) -88] [(-66 3 87 42) -66] [(-6 89 49 56) -6] [(-4 61 -89 22) -89] [(84 -8 -35 36) -35] [(-25 -72 -97 100) -97] [(93 -27 58 58) -27] [(-98 -66 82 -86) -98] [(81 65 -58 -53) -58])
uniform-addition-and-deletion-rate = 0.09
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 658
Test mean error for best: 0.65800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: 58                 
Correct output: -98                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -77                
Correct output: -93                 | Program output: 73                 
Correct output: 49                  | Program output: 64                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: 24                 
Correct output: -91                 | Program output: -91                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 63                 
Correct output: 62                  | Program output: 74                 
Correct output: 1                   | Program output: 1                  
Correct output: 20                  | Program output: 27                 
Correct output: 2                   | Program output: 87                 
Correct output: 36                  | Program output: 62                 
Correct output: 7                   | Program output: 78                 
Correct output: 24                  | Program output: 100                
Correct output: 2                   | Program output: 95                 
Correct output: 16                  | Program output: 59                 
Correct output: 40                  | Program output: 68                 
Correct output: 0                   | Program output: 0                  
Correct output: 54                  | Program output: 70                 
Correct output: 17                  | Program output: 47                 
Correct output: 29                  | Program output: 93                 
Correct output: 39                  | Program output: 83                 
Correct output: 18                  | Program output: 74                 
Correct output: 24                  | Program output: 97                 
Correct output: 45                  | Program output: 74                 
Correct output: 7                   | Program output: 8                  
Correct output: -95                 | Program output: -95                
Correct output: -21                 | Program output: 81                 
Correct output: -58                 | Program output: -10                
Correct output: -61                 | Program output: 88                 
Correct output: -77                 | Program output: -77                
Correct output: -75                 | Program output: -75                
Correct output: -86                 | Program output: 61                 
Correct output: -94                 | Program output: -94                
Correct output: 22                  | Program output: 58                 
Correct output: -95                 | Program output: -10                
Correct output: -30                 | Program output: -17                
Correct output: -89                 | Program output: -89                
Correct output: -26                 | Program output: -12                
Correct output: 3                   | Program output: 93                 
Correct output: -98                 | Program output: -93                
Correct output: -86                 | Program output: -18                
Correct output: -18                 | Program output: 61                 
Correct output: -39                 | Program output: 11                 
Correct output: -90                 | Program output: -37                
Correct output: -93                 | Program output: 55                 
Correct output: 19                  | Program output: 78                 
Correct output: -50                 | Program output: 55                 
Correct output: -95                 | Program output: 55                 
Correct output: -26                 | Program output: 67                 
Correct output: -40                 | Program output: 62                 
Correct output: -73                 | Program output: -32                
Correct output: -70                 | Program output: 95                 
Correct output: -97                 | Program output: -12                
Correct output: -56                 | Program output: 85                 
Correct output: -24                 | Program output: 15                 
Correct output: -30                 | Program output: 65                 
Correct output: -57                 | Program output: -57                
Correct output: -85                 | Program output: -71                
Correct output: -90                 | Program output: -90                
Correct output: -8                  | Program output: 43                 
Correct output: -88                 | Program output: -19                
Correct output: -50                 | Program output: -50                
Correct output: -56                 | Program output: 75                 
Correct output: -80                 | Program output: 36                 
Correct output: -86                 | Program output: 51                 
Correct output: -97                 | Program output: 78                 
Correct output: -48                 | Program output: -48                
Correct output: -88                 | Program output: -82                
Correct output: -94                 | Program output: -53                
Correct output: -91                 | Program output: -48                
Correct output: -56                 | Program output: -56                
Correct output: -78                 | Program output: -28                
Correct output: -87                 | Program output: 72                 
Correct output: -31                 | Program output: 22                 
Correct output: -18                 | Program output: 63                 
Correct output: -93                 | Program output: -54                
Correct output: -88                 | Program output: 88                 
Correct output: -66                 | Program output: 42                 
Correct output: -6                  | Program output: 56                 
Correct output: -89                 | Program output: 22                 
Correct output: -35                 | Program output: 36                 
Correct output: -97                 | Program output: 100                
Correct output: -27                 | Program output: 58                 
Correct output: -98                 | Program output: -86                
Correct output: -58                 | Program output: -53                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*times} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_837} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_shove} {:close 1, :instruction in3} {:close 1, :instruction tagged_282} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_if} {:close 0, :instruction exec_when} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_times} {:close 2, :instruction exec_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_inc} {:close 0, :instruction in2} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_swap} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction print_boolean} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_y} {:close 1, :instruction integer_mod} {:close 1, :instruction in3} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_rot} {:close 0, :instruction in1} {:close 0, :instruction integer_div} {:close 0, :instruction tagged_370} {:close 0, :instruction integer_empty} {:close 0, :instruction 0} {:close 0, :instruction -72} {:close 0, :instruction integer_max} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_exec} {:close 0, :instruction print_exec} {:close 1, :instruction exec_pop})
Lexicase best program: (exec_do*times (integer_swap boolean_pop tagged_837 boolean_xor integer_lte exec_k_when_autoconstructing (boolean_invert_second_then_and integer_eq) (integer_shove in3) tagged_282) integer_yank integer_empty integer_yankdup boolean_or boolean_invert_second_then_and boolean_yank exec_if () (exec_when (exec_do*times (exec_dup_times (exec_stackdepth)) boolean_frominteger integer_dup_times exec_while (boolean_rot exec_dup_times (exec_s (exec_do*range (integer_yankdup exec_k_when_autoconstructing (integer_inc in2 in3) (integer_rot integer_dup_times exec_swap (print_integer) (in4 print_boolean integer_fromboolean) boolean_and in1 integer_min boolean_shove exec_shove (integer_gte exec_shove () integer_shove exec_rot (integer_eq boolean_yankdup boolean_stackdepth exec_s_when_autoconstructing (integer_gte) (boolean_stackdepth integer_gt exec_y () integer_mod) (in3) boolean_swap exec_stackdepth exec_pop (exec_rot (in1 integer_div tagged_370 integer_empty 0 -72 integer_max integer_yankdup exec_y (integer_eq integer_max) boolean_eq boolean_yankdup exec_do*while (exec_noop integer_yankdup integer_gt integer_sub exec_swap (integer_shove integer_mult boolean_or integer_yankdup integer_pop exec_pop (boolean_rot print_exec (print_exec (exec_pop ())))) ())) () ())) () ())))) () ())))))
Lexicase best errors: [1 0 1 1 0 1 0 0 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 134
Percent parens: 0.299
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*times} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_837} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_shove} {:close 1, :instruction in3} {:close 1, :instruction tagged_282} {:close 0, :instruction integer_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_if} {:close 0, :instruction exec_when} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_dup_times} {:close 2, :instruction exec_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_inc} {:close 0, :instruction in2} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_swap} {:close 1, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction print_boolean} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_y} {:close 1, :instruction integer_mod} {:close 1, :instruction in3} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_rot} {:close 0, :instruction in1} {:close 0, :instruction integer_div} {:close 0, :instruction tagged_370} {:close 0, :instruction integer_empty} {:close 0, :instruction 0} {:close 0, :instruction -72} {:close 0, :instruction integer_max} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_y} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction print_exec} {:close 0, :instruction print_exec} {:close 1, :instruction exec_pop})
Zero cases best program: (exec_do*times (integer_swap boolean_pop tagged_837 boolean_xor integer_lte exec_k_when_autoconstructing (boolean_invert_second_then_and integer_eq) (integer_shove in3) tagged_282) integer_yank integer_empty integer_yankdup boolean_or boolean_invert_second_then_and boolean_yank exec_if () (exec_when (exec_do*times (exec_dup_times (exec_stackdepth)) boolean_frominteger integer_dup_times exec_while (boolean_rot exec_dup_times (exec_s (exec_do*range (integer_yankdup exec_k_when_autoconstructing (integer_inc in2 in3) (integer_rot integer_dup_times exec_swap (print_integer) (in4 print_boolean integer_fromboolean) boolean_and in1 integer_min boolean_shove exec_shove (integer_gte exec_shove () integer_shove exec_rot (integer_eq boolean_yankdup boolean_stackdepth exec_s_when_autoconstructing (integer_gte) (boolean_stackdepth integer_gt exec_y () integer_mod) (in3) boolean_swap exec_stackdepth exec_pop (exec_rot (in1 integer_div tagged_370 integer_empty 0 -72 integer_max integer_yankdup exec_y (integer_eq integer_max) boolean_eq boolean_yankdup exec_do*while (exec_noop integer_yankdup integer_gt integer_sub exec_swap (integer_shove integer_mult boolean_or integer_yankdup integer_pop exec_pop (boolean_rot print_exec (print_exec (exec_pop ())))) ())) () ())) () ())))) () ())))))
Zero cases best errors: [1 0 1 1 0 1 0 0 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 134
Percent parens: 0.299
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 6 5 1 10 1 6 6 3 1)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (1 6 5 1 10 1 6 6 3 1)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_yankdup} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_swap} {:close 1, :instruction integer_sub})
Best program: (integer_yankdup integer_dec integer_fromboolean in4 print_integer exec_y_when_autoconstructing (exec_dup_items exec_y (integer_lt exec_noop boolean_shove boolean_empty boolean_swap integer_sub)))
Errors: [1 0 1 1 0 1 0 0 1 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 17
Percent parens: 0.176
--- Population Statistics ---
Average total errors in population: 9.96
Median total errors in population: 10
Error averages by case: (0.999 0.994 0.995 0.999 0.99 0.999 0.994 0.994 0.997 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.098
Average program size in population (points): 70.396
Average percent parens in population: 0.279
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.288
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 496270
--- Timings ---
Current time: 1559594003985 milliseconds
Total Time:           2.8 seconds
Initialization:       0.1 seconds,  3.7%
Reproduction:         0.8 seconds, 27.3%
Fitness Testing:      1.9 seconds, 69.0%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 411
Test mean error for best: 0.41100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -98                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 64                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 62                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 20                 
Correct output: 2                   | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 24                 
Correct output: 2                   | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 0                   | Program output: 1                  
Correct output: 54                  | Program output: 54                 
Correct output: 17                  | Program output: 17                 
Correct output: 29                  | Program output: 29                 
Correct output: 39                  | Program output: 59                 
Correct output: 18                  | Program output: 18                 
Correct output: 24                  | Program output: 66                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: -38                
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: -58                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -69                
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: -94                 | Program output: -83                
Correct output: 22                  | Program output: 25                 
Correct output: -95                 | Program output: -95                
Correct output: -30                 | Program output: -30                
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: 89                 
Correct output: 3                   | Program output: 3                  
Correct output: -98                 | Program output: 46                 
Correct output: -86                 | Program output: -86                
Correct output: -18                 | Program output: 29                 
Correct output: -39                 | Program output: -3                 
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: 41                 
Correct output: 19                  | Program output: 19                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: 26                 
Correct output: -40                 | Program output: -40                
Correct output: -73                 | Program output: -72                
Correct output: -70                 | Program output: -70                
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -17                
Correct output: -24                 | Program output: -5                 
Correct output: -30                 | Program output: 46                 
Correct output: -57                 | Program output: -41                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: -31                
Correct output: -8                  | Program output: -8                 
Correct output: -88                 | Program output: 18                 
Correct output: -50                 | Program output: -42                
Correct output: -56                 | Program output: -17                
Correct output: -80                 | Program output: -80                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -52                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: -46                
Correct output: -78                 | Program output: -78                
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: 49                 
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -88                
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -89                
Correct output: -35                 | Program output: -35                
Correct output: -97                 | Program output: -97                
Correct output: -27                 | Program output: 58                 
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: -58                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Lexicase best program: (exec_dup_times () boolean_stackdepth in3 boolean_dup_times in1 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s (boolean_dup) () ()) ()) ()) ()) ())) ()))
Lexicase best errors: [1 1 1 0 0 0 0 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 42
Percent parens: 0.405
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Zero cases best program: (exec_dup_times () boolean_stackdepth in3 boolean_dup_times in1 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s (boolean_dup) () ()) ()) ()) ()) ())) ()))
Zero cases best errors: [1 1 1 0 0 0 0 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 42
Percent parens: 0.405
--- Lexicase Population Statistics ---
Count of elite individuals by case: (169 174 169 100 625 624 101 102 199 173)
Population mean number of elite cases: 2.44
Count of perfect (error zero) individuals by case: (169 174 169 100 625 624 101 102 199 173)
Population mean number of perfect (error zero) cases: 2.44
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Best program: (exec_dup_times () boolean_stackdepth in3 boolean_dup_times in1 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s (boolean_dup) () ()) ()) ()) ()) ())) ()))
Errors: [1 1 1 0 0 0 0 0 0 1]
Total: 4
Mean: 0.4
Genome size: 25
Size: 42
Percent parens: 0.405
--- Population Statistics ---
Average total errors in population: 7.564
Median total errors in population: 7
Error averages by case: (0.831 0.826 0.831 0.9 0.375 0.376 0.899 0.898 0.801 0.827)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 37.695
Average program size in population (points): 54.313
Average percent parens in population: 0.317
Minimum age in population: 1.0
Maximum age in population: 1.0
Average age in population: 1.0
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 10
Genome diversity (% unique genomes):	 0.973
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.973
Total error diversity:				 0.007
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.172
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1220194
--- Timings ---
Current time: 1559594006709 milliseconds
Total Time:           5.8 seconds
Initialization:       0.1 seconds,  1.8%
Reproduction:         1.8 seconds, 30.2%
Fitness Testing:      3.0 seconds, 51.1%
Report:               1.0 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 411
Test mean error for best: 0.41100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -98                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 64                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 62                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 20                 
Correct output: 2                   | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 24                 
Correct output: 2                   | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 0                   | Program output: 1                  
Correct output: 54                  | Program output: 54                 
Correct output: 17                  | Program output: 17                 
Correct output: 29                  | Program output: 29                 
Correct output: 39                  | Program output: 59                 
Correct output: 18                  | Program output: 18                 
Correct output: 24                  | Program output: 66                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: -38                
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: -58                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -69                
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: -94                 | Program output: -83                
Correct output: 22                  | Program output: 25                 
Correct output: -95                 | Program output: -95                
Correct output: -30                 | Program output: -30                
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: 89                 
Correct output: 3                   | Program output: 3                  
Correct output: -98                 | Program output: 46                 
Correct output: -86                 | Program output: -86                
Correct output: -18                 | Program output: 29                 
Correct output: -39                 | Program output: -3                 
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: 41                 
Correct output: 19                  | Program output: 19                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: 26                 
Correct output: -40                 | Program output: -40                
Correct output: -73                 | Program output: -72                
Correct output: -70                 | Program output: -70                
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -17                
Correct output: -24                 | Program output: -5                 
Correct output: -30                 | Program output: 46                 
Correct output: -57                 | Program output: -41                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: -31                
Correct output: -8                  | Program output: -8                 
Correct output: -88                 | Program output: 18                 
Correct output: -50                 | Program output: -42                
Correct output: -56                 | Program output: -17                
Correct output: -80                 | Program output: -80                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -52                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: -46                
Correct output: -78                 | Program output: -78                
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: 49                 
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -88                
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -89                
Correct output: -35                 | Program output: -35                
Correct output: -97                 | Program output: -97                
Correct output: -27                 | Program output: 58                 
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: -58                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction integer_shove} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_xor} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Lexicase best program: (exec_dup_times () boolean_stackdepth in3 boolean_dup_times in1 integer_min print_integer integer_fromboolean integer_shove in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth boolean_xor print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s (boolean_dup) () ()) ()) ()) ()) ())) ()))
Lexicase best errors: [0 0 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 41
Percent parens: 0.415
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction integer_shove} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_xor} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Zero cases best program: (exec_dup_times () boolean_stackdepth in3 boolean_dup_times in1 integer_min print_integer integer_fromboolean integer_shove in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth boolean_xor print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s (boolean_dup) () ()) ()) ()) ()) ())) ()))
Zero cases best errors: [0 0 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 41
Percent parens: 0.415
--- Lexicase Population Statistics ---
Count of elite individuals by case: (292 290 320 617 289 286 286 189 683 286)
Population mean number of elite cases: 3.54
Count of perfect (error zero) individuals by case: (292 290 320 617 289 286 286 189 683 286)
Population mean number of perfect (error zero) cases: 3.54
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction boolean_xor} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Best program: (exec_dup_times () boolean_stackdepth in3 in1 integer_min print_integer integer_fromboolean in1 boolean_xor in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth integer_min) (exec_k (integer_dup exec_k_when_autoconstructing (exec_s (boolean_dup) () ()) ()) ()))) ()))
Errors: [0 0 0 0 0 0 0 1 0 0]
Total: 1
Mean: 0.1
Genome size: 22
Size: 37
Percent parens: 0.405
--- Population Statistics ---
Average total errors in population: 6.462
Median total errors in population: 7
Error averages by case: (0.708 0.71 0.68 0.383 0.711 0.714 0.714 0.811 0.317 0.714)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 29.505
Average program size in population (points): 45.148
Average percent parens in population: 0.353
Minimum age in population: 2.0
Maximum age in population: 2.0
Average age in population: 2.0
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 8
Genome diversity (% unique genomes):	 0.986
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.986
Total error diversity:				 0.007
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.179
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1956852
--- Timings ---
Current time: 1559594009482 milliseconds
Total Time:           8.6 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         2.9 seconds, 34.0%
Fitness Testing:      3.9 seconds, 45.4%
Report:               1.7 seconds, 19.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 411
Test mean error for best: 0.41100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -98                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 64                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 62                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 20                 
Correct output: 2                   | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 24                 
Correct output: 2                   | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 0                   | Program output: 1                  
Correct output: 54                  | Program output: 54                 
Correct output: 17                  | Program output: 17                 
Correct output: 29                  | Program output: 29                 
Correct output: 39                  | Program output: 59                 
Correct output: 18                  | Program output: 18                 
Correct output: 24                  | Program output: 66                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: -38                
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: -58                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -69                
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: -94                 | Program output: -83                
Correct output: 22                  | Program output: 25                 
Correct output: -95                 | Program output: -95                
Correct output: -30                 | Program output: -30                
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: 89                 
Correct output: 3                   | Program output: 3                  
Correct output: -98                 | Program output: 46                 
Correct output: -86                 | Program output: -86                
Correct output: -18                 | Program output: 29                 
Correct output: -39                 | Program output: -3                 
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: 41                 
Correct output: 19                  | Program output: 19                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: 26                 
Correct output: -40                 | Program output: -40                
Correct output: -73                 | Program output: -72                
Correct output: -70                 | Program output: -70                
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -17                
Correct output: -24                 | Program output: -5                 
Correct output: -30                 | Program output: 46                 
Correct output: -57                 | Program output: -41                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: -31                
Correct output: -8                  | Program output: -8                 
Correct output: -88                 | Program output: 18                 
Correct output: -50                 | Program output: -42                
Correct output: -56                 | Program output: -17                
Correct output: -80                 | Program output: -80                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -52                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: -46                
Correct output: -78                 | Program output: -78                
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: 49                 
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -88                
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -89                
Correct output: -35                 | Program output: -35                
Correct output: -97                 | Program output: -97                
Correct output: -27                 | Program output: 58                 
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: -58                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_yank} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_shove} {:close 1, :instruction in2} {:close 1, :instruction exec_y} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s})
Lexicase best program: (exec_dup_times () boolean_stackdepth boolean_yank in3 boolean_dup_times in1 integer_min print_integer integer_shove in2 exec_y () exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s () () ()) ()) ()) ()) ())) ())
Lexicase best errors: [0 0 0 1 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 39
Percent parens: 0.436
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_yank} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_shove} {:close 1, :instruction in2} {:close 1, :instruction exec_y} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s})
Zero cases best program: (exec_dup_times () boolean_stackdepth boolean_yank in3 boolean_dup_times in1 integer_min print_integer integer_shove in2 exec_y () exec_k_when_autoconstructing (boolean_swap exec_y (exec_swap (integer_stackdepth print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s () () ()) ()) ()) ()) ())) ())
Zero cases best errors: [0 0 0 1 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 39
Percent parens: 0.436
--- Lexicase Population Statistics ---
Count of elite individuals by case: (608 629 630 1 437 575 1 125 476 708)
Population mean number of elite cases: 4.19
Count of perfect (error zero) individuals by case: (608 629 630 1 437 575 1 125 476 708)
Population mean number of perfect (error zero) cases: 4.19
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction exec_flush} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_while} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_or})
Best program: (exec_dup_times () boolean_stackdepth in3 boolean_dup_times in1 exec_y_when_autoconstructing (integer_min print_integer exec_flush) integer_fromboolean in1 integer_shove boolean_xor in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_swap exec_y (exec_while (integer_stackdepth print_boolean exec_k (exec_k (integer_dup exec_k_when_autoconstructing (exec_s (boolean_or) () ()) ()) ()) ()))) ()))
Errors: [0 0 0 1 0 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 27
Size: 44
Percent parens: 0.386
--- Population Statistics ---
Average total errors in population: 5.81
Median total errors in population: 4
Error averages by case: (0.392 0.371 0.37 0.999 0.563 0.425 0.999 0.875 0.524 0.292)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 25.033
Average program size in population (points): 40.969
Average percent parens in population: 0.388
Minimum age in population: 3.0
Maximum age in population: 3.0
Average age in population: 3.0
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 4
Genome diversity (% unique genomes):	 0.995
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 4
Syntactic diversity (% unique Push programs):	 0.995
Total error diversity:				 0.008
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.195
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2808784
--- Timings ---
Current time: 1559594011891 milliseconds
Total Time:          11.5 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         4.1 seconds, 35.8%
Fitness Testing:      5.0 seconds, 43.2%
Report:               2.3 seconds, 20.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 421
Test mean error for best: 0.42100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: 58                 
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 49                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 75                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 44                 
Correct output: 2                   | Program output: 31                 
Correct output: 36                  | Program output: 75                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 61                 
Correct output: 2                   | Program output: 7                  
Correct output: 16                  | Program output: 25                 
Correct output: 40                  | Program output: 84                 
Correct output: 0                   | Program output: 4                  
Correct output: 54                  | Program output: 69                 
Correct output: 17                  | Program output: 21                 
Correct output: 29                  | Program output: 80                 
Correct output: 39                  | Program output: 39                 
Correct output: 18                  | Program output: 22                 
Correct output: 24                  | Program output: 24                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: 6                  
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: 36                 
Correct output: -61                 | Program output: -29                
Correct output: -77                 | Program output: -3                 
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: 67                 
Correct output: -94                 | Program output: -66                
Correct output: 22                  | Program output: 22                 
Correct output: -95                 | Program output: 29                 
Correct output: -30                 | Program output: 45                 
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: -26                
Correct output: 3                   | Program output: 4                  
Correct output: -98                 | Program output: -98                
Correct output: -86                 | Program output: -85                
Correct output: -18                 | Program output: -18                
Correct output: -39                 | Program output: -39                
Correct output: -90                 | Program output: -15                
Correct output: -93                 | Program output: -93                
Correct output: 19                  | Program output: 39                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -40                 | Program output: 17                 
Correct output: -73                 | Program output: -73                
Correct output: -70                 | Program output: 44                 
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -56                
Correct output: -24                 | Program output: -24                
Correct output: -30                 | Program output: -30                
Correct output: -57                 | Program output: -12                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: 68                 
Correct output: -8                  | Program output: 51                 
Correct output: -88                 | Program output: -88                
Correct output: -50                 | Program output: 37                 
Correct output: -56                 | Program output: -56                
Correct output: -80                 | Program output: 17                 
Correct output: -86                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: 11                 
Correct output: -78                 | Program output: 80                 
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: -18                
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -9                 
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -4                 
Correct output: -35                 | Program output: -8                 
Correct output: -97                 | Program output: -72                
Correct output: -27                 | Program output: -27                
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: 65                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction integer_mod} {:close 0, :instruction in1} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction -37} {:close 0, :instruction exec_s} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Lexicase best program: (exec_dup_times () in3 boolean_dup_times integer_mod in1 in2 integer_min print_integer integer_fromboolean -37 exec_s (in1 integer_shove boolean_xor exec_y_when_autoconstructing (integer_pop exec_swap (integer_stackdepth boolean_yankdup) (print_boolean exec_k (exec_k (exec_s (boolean_dup) () ()) ()) ()))) () ())
Lexicase best errors: [0 0 1 1 0 0 0 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 39
Percent parens: 0.385
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 1, :instruction boolean_dup_times} {:close 1, :instruction integer_mod} {:close 0, :instruction in1} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction -37} {:close 0, :instruction exec_s} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Zero cases best program: (exec_dup_times () in3 boolean_dup_times integer_mod in1 in2 integer_min print_integer integer_fromboolean -37 exec_s (in1 integer_shove boolean_xor exec_y_when_autoconstructing (integer_pop exec_swap (integer_stackdepth boolean_yankdup) (print_boolean exec_k (exec_k (exec_s (boolean_dup) () ()) ()) ()))) () ())
Zero cases best errors: [0 0 1 1 0 0 0 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 39
Percent parens: 0.385
--- Lexicase Population Statistics ---
Count of elite individuals by case: (182 701 248 314 178 184 540 177 314 530)
Population mean number of elite cases: 3.37
Count of perfect (error zero) individuals by case: (182 701 248 314 178 184 540 177 314 530)
Population mean number of perfect (error zero) cases: 3.37
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction in2} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_y} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup})
Best program: (exec_dup_times () in3 in1 in2 integer_min print_integer integer_fromboolean in1 integer_rot integer_shove boolean_xor boolean_dup_times in2 exec_y_when_autoconstructing (exec_k_when_autoconstructing (exec_y (integer_pop exec_swap (integer_stackdepth print_boolean exec_k (exec_k (exec_k_when_autoconstructing (exec_s (boolean_dup) () ()) ()) ()) ()) ())) ()))
Errors: [0 0 1 1 0 0 0 0 1 0]
Total: 3
Mean: 0.3
Genome size: 25
Size: 42
Percent parens: 0.405
--- Population Statistics ---
Average total errors in population: 6.632
Median total errors in population: 6
Error averages by case: (0.818 0.299 0.752 0.686 0.822 0.816 0.46 0.823 0.686 0.47)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 27.182
Average program size in population (points): 45.141
Average percent parens in population: 0.394
Minimum age in population: 4.0
Maximum age in population: 4.0
Average age in population: 4.0
Median age in population: 4.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.008
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.207
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 3634316
--- Timings ---
Current time: 1559594014647 milliseconds
Total Time:          13.8 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         5.2 seconds, 37.8%
Fitness Testing:      6.0 seconds, 43.7%
Report:               2.5 seconds, 17.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 195
Test mean error for best: 0.19500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 49                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 62                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 20                 
Correct output: 2                   | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 24                 
Correct output: 2                   | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 0                   | Program output: 1                  
Correct output: 54                  | Program output: 54                 
Correct output: 17                  | Program output: 17                 
Correct output: 29                  | Program output: 29                 
Correct output: 39                  | Program output: 39                 
Correct output: 18                  | Program output: 18                 
Correct output: 24                  | Program output: 24                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: -38                
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: -58                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -69                
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: -94                 | Program output: -83                
Correct output: 22                  | Program output: 22                 
Correct output: -95                 | Program output: -95                
Correct output: -30                 | Program output: -30                
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: -26                
Correct output: 3                   | Program output: 3                  
Correct output: -98                 | Program output: -98                
Correct output: -86                 | Program output: -86                
Correct output: -18                 | Program output: -18                
Correct output: -39                 | Program output: -39                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -93                
Correct output: 19                  | Program output: 19                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -40                 | Program output: -40                
Correct output: -73                 | Program output: -73                
Correct output: -70                 | Program output: -70                
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -56                
Correct output: -24                 | Program output: -24                
Correct output: -30                 | Program output: -30                
Correct output: -57                 | Program output: -41                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: -31                
Correct output: -8                  | Program output: -8                 
Correct output: -88                 | Program output: -88                
Correct output: -50                 | Program output: -42                
Correct output: -56                 | Program output: -56                
Correct output: -80                 | Program output: -80                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: -46                
Correct output: -78                 | Program output: -78                
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: -18                
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -88                
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -89                
Correct output: -35                 | Program output: -35                
Correct output: -97                 | Program output: -97                
Correct output: -27                 | Program output: -27                
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: -58                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Lexicase best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor exec_y_when_autoconstructing (exec_k_when_autoconstructing (integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 40
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Zero cases best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor exec_y_when_autoconstructing (exec_k_when_autoconstructing (integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 40
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (489 325 299 491 340 298 302 302 344 154)
Population mean number of elite cases: 3.34
Count of perfect (error zero) individuals by case: (489 325 299 491 340 298 302 302 344 154)
Population mean number of perfect (error zero) cases: 3.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor exec_y_when_autoconstructing (exec_k_when_autoconstructing (integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
Errors: [0 0 0 0 0 0 0 0 0 1]
Total: 1
Mean: 0.1
Genome size: 24
Size: 40
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.656
Median total errors in population: 6
Error averages by case: (0.511 0.675 0.701 0.509 0.66 0.702 0.698 0.698 0.656 0.846)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 26.417
Average program size in population (points): 42.999
Average percent parens in population: 0.382
Minimum age in population: 5.0
Maximum age in population: 5.0
Average age in population: 5.0
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.009
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.198
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 4426078
--- Timings ---
Current time: 1559594017231 milliseconds
Total Time:          16.4 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         6.3 seconds, 38.2%
Fitness Testing:      7.0 seconds, 42.3%
Report:               3.1 seconds, 18.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 195
Test mean error for best: 0.19500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 49                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 62                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 20                 
Correct output: 2                   | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 24                 
Correct output: 2                   | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 0                   | Program output: 1                  
Correct output: 54                  | Program output: 54                 
Correct output: 17                  | Program output: 17                 
Correct output: 29                  | Program output: 29                 
Correct output: 39                  | Program output: 39                 
Correct output: 18                  | Program output: 18                 
Correct output: 24                  | Program output: 24                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: -38                
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: -58                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -69                
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: -94                 | Program output: -83                
Correct output: 22                  | Program output: 22                 
Correct output: -95                 | Program output: -95                
Correct output: -30                 | Program output: -30                
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: -26                
Correct output: 3                   | Program output: 3                  
Correct output: -98                 | Program output: -98                
Correct output: -86                 | Program output: -86                
Correct output: -18                 | Program output: -18                
Correct output: -39                 | Program output: -39                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -93                
Correct output: 19                  | Program output: 19                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -40                 | Program output: -40                
Correct output: -73                 | Program output: -73                
Correct output: -70                 | Program output: -70                
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -56                
Correct output: -24                 | Program output: -24                
Correct output: -30                 | Program output: -30                
Correct output: -57                 | Program output: -41                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: -31                
Correct output: -8                  | Program output: -8                 
Correct output: -88                 | Program output: -88                
Correct output: -50                 | Program output: -42                
Correct output: -56                 | Program output: -56                
Correct output: -80                 | Program output: -80                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: -46                
Correct output: -78                 | Program output: -78                
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: -18                
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -88                
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -89                
Correct output: -35                 | Program output: -35                
Correct output: -97                 | Program output: -97                
Correct output: -27                 | Program output: -27                
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: -58                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Lexicase best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor exec_y_when_autoconstructing (exec_k_when_autoconstructing (integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 40
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Zero cases best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor exec_y_when_autoconstructing (exec_k_when_autoconstructing (integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 40
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (477 543 631 631 583 411 586 779 489 166)
Population mean number of elite cases: 5.30
Count of perfect (error zero) individuals by case: (477 543 631 631 583 411 586 779 489 166)
Population mean number of perfect (error zero) cases: 5.30
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer integer_fromboolean in1 integer_shove boolean_xor exec_y_when_autoconstructing (exec_k_when_autoconstructing (integer_gt) (exec_y (integer_stackdepth boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_s (56) () ()) ()) ()) ())))
Errors: [0 0 0 0 0 0 0 0 0 1]
Total: 1
Mean: 0.1
Genome size: 24
Size: 38
Percent parens: 0.368
--- Population Statistics ---
Average total errors in population: 4.704
Median total errors in population: 4
Error averages by case: (0.523 0.457 0.369 0.369 0.417 0.589 0.414 0.221 0.511 0.834)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 25.822
Average program size in population (points): 42.7
Average percent parens in population: 0.393
Minimum age in population: 6.0
Maximum age in population: 6.0
Average age in population: 6.0
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 14
Genome diversity (% unique genomes):	 0.977
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.977
Total error diversity:				 0.01
Error (vector) diversity:			 0.043
Behavioral diversity:				 0.152
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 5339927
--- Timings ---
Current time: 1559594019969 milliseconds
Total Time:          19.1 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         7.4 seconds, 38.6%
Fitness Testing:      7.9 seconds, 41.5%
Report:               3.7 seconds, 19.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 195
Test mean error for best: 0.19500
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 1
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 1
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 1
Test Case   37 | Error: 0
Test Case   38 | Error: 1
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 1
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 1
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 1
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 1
Test Case  258 | Error: 1
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 1
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 1
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 1
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 1
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 1
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 0
Test Case  346 | Error: 1
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 1
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 1
Test Case  361 | Error: 1
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 1
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 1
Test Case  390 | Error: 1
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 1
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 1
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 1
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 1
Test Case  475 | Error: 1
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 1
Test Case  487 | Error: 1
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 1
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 1
Test Case  561 | Error: 0
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 1
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 1
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 1
Test Case  623 | Error: 1
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 1
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 1
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 1
Test Case  663 | Error: 1
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 1
Test Case  676 | Error: 1
Test Case  677 | Error: 1
Test Case  678 | Error: 1
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 1
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 1
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 1
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 1
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 1
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 1
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 1
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 1
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 1
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 1
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 1
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 1
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 1
Test Case  854 | Error: 1
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 1
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 1
Test Case  917 | Error: 0
Test Case  918 | Error: 1
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 1
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 1
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 1
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 49                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 62                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 20                 
Correct output: 2                   | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 24                 
Correct output: 2                   | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 0                   | Program output: 1                  
Correct output: 54                  | Program output: 54                 
Correct output: 17                  | Program output: 17                 
Correct output: 29                  | Program output: 29                 
Correct output: 39                  | Program output: 39                 
Correct output: 18                  | Program output: 18                 
Correct output: 24                  | Program output: 24                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: -38                
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: -58                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -69                
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: -94                 | Program output: -83                
Correct output: 22                  | Program output: 22                 
Correct output: -95                 | Program output: -95                
Correct output: -30                 | Program output: -30                
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: -26                
Correct output: 3                   | Program output: 3                  
Correct output: -98                 | Program output: -98                
Correct output: -86                 | Program output: -86                
Correct output: -18                 | Program output: -18                
Correct output: -39                 | Program output: -39                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -93                
Correct output: 19                  | Program output: 19                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -40                 | Program output: -40                
Correct output: -73                 | Program output: -73                
Correct output: -70                 | Program output: -70                
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -56                
Correct output: -24                 | Program output: -24                
Correct output: -30                 | Program output: -30                
Correct output: -57                 | Program output: -41                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: -31                
Correct output: -8                  | Program output: -8                 
Correct output: -88                 | Program output: -88                
Correct output: -50                 | Program output: -42                
Correct output: -56                 | Program output: -56                
Correct output: -80                 | Program output: -80                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: -46                
Correct output: -78                 | Program output: -78                
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: -18                
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -88                
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -89                
Correct output: -35                 | Program output: -35                
Correct output: -97                 | Program output: -97                
Correct output: -27                 | Program output: -27                
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: -58                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction 17} {:close 0, :instruction in1} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction in1} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Lexicase best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer 17 in1 boolean_xor exec_k_when_autoconstructing (in1) (integer_gt) exec_y (boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_swap (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ()) ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 41
Percent parens: 0.415
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction 17} {:close 0, :instruction in1} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction in1} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Zero cases best program: (boolean_stackdepth in3 in1 integer_min in2 integer_min print_integer 17 in1 boolean_xor exec_k_when_autoconstructing (in1) (integer_gt) exec_y (boolean_dup_times) integer_pop exec_swap (print_boolean exec_k (exec_k (exec_swap (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ()) ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 41
Percent parens: 0.415
--- Lexicase Population Statistics ---
Count of elite individuals by case: (442 770 442 644 383 383 515 769 595 443)
Population mean number of elite cases: 5.39
Count of perfect (error zero) individuals by case: (442 770 442 644 383 383 515 769 595 443)
Population mean number of perfect (error zero) cases: 5.39
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 1, :instruction in2} {:close 1, :instruction exec_while} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction integer_yankdup} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_shove} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_y} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_s} {:close 0, :instruction 56})
Best program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 29
Size: 49
Percent parens: 0.408
--- Population Statistics ---
Average total errors in population: 4.614
Median total errors in population: 5
Error averages by case: (0.558 0.23 0.558 0.356 0.617 0.617 0.485 0.231 0.405 0.557)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 25.144
Average program size in population (points): 40.54
Average percent parens in population: 0.379
Minimum age in population: 7.0
Maximum age in population: 7.0
Average age in population: 7.0
Median age in population: 7.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.996
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.996
Total error diversity:				 0.011
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 6228233
--- Timings ---
Current time: 1559594022639 milliseconds
Total Time:          21.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         8.4 seconds, 38.8%
Fitness Testing:      8.9 seconds, 40.7%
Report:               4.4 seconds, 20.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 7
Successful program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 49


Auto-simplifying with starting size: 49
step: 0
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 500
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 1000
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 1500
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 2000
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 2500
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 3000
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 3500
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 4000
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 4500
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

step: 5000
program: (exec_s_when_autoconstructing (boolean_stackdepth in3 in1 integer_min) (in2) (exec_while () integer_min print_integer integer_yankdup) integer_fromboolean in1 integer_dec integer_shove boolean_xor integer_shove exec_y_when_autoconstructing (exec_k_when_autoconstructing (boolean_or integer_gt) (exec_y (boolean_dup_times) integer_pop exec_swap (exec_k (exec_k (exec_k_when_autoconstructing (exec_s (56) () ()) ()) ()) ()) ())))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 49

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 195
Test mean error for best: 0.19500
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 1
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 1
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 1
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 1
Test Case   37 | Error: 0
Test Case   38 | Error: 1
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 1
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 1
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 1
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 1
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 1
Test Case  258 | Error: 1
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 1
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 1
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 1
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 1
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 1
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 0
Test Case  346 | Error: 1
Test Case  347 | Error: 1
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 1
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 1
Test Case  361 | Error: 1
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 1
Test Case  366 | Error: 1
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 1
Test Case  389 | Error: 1
Test Case  390 | Error: 1
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 0
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 1
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 1
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 1
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 1
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 1
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 1
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 1
Test Case  474 | Error: 1
Test Case  475 | Error: 1
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 1
Test Case  486 | Error: 1
Test Case  487 | Error: 1
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 1
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 1
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 1
Test Case  541 | Error: 1
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 1
Test Case  561 | Error: 0
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 1
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 1
Test Case  584 | Error: 1
Test Case  585 | Error: 1
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 0
Test Case  594 | Error: 1
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 1
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 1
Test Case  621 | Error: 1
Test Case  622 | Error: 1
Test Case  623 | Error: 1
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 1
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 1
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 1
Test Case  646 | Error: 1
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 1
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 1
Test Case  660 | Error: 0
Test Case  661 | Error: 1
Test Case  662 | Error: 1
Test Case  663 | Error: 1
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 1
Test Case  676 | Error: 1
Test Case  677 | Error: 1
Test Case  678 | Error: 1
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 1
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 1
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 1
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 1
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 1
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 1
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 1
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 1
Test Case  759 | Error: 1
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 1
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 1
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 1
Test Case  812 | Error: 1
Test Case  813 | Error: 1
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 1
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 1
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 1
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 1
Test Case  854 | Error: 1
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 1
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 1
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 1
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 1
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 1
Test Case  917 | Error: 0
Test Case  918 | Error: 1
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 1
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 1
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 1
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 1
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -58                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -77                 | Program output: -1                 
Correct output: -93                 | Program output: -93                
Correct output: 49                  | Program output: 49                 
Correct output: -22                 | Program output: -22                
Correct output: -28                 | Program output: -28                
Correct output: -91                 | Program output: -57                
Correct output: 60                  | Program output: 60                 
Correct output: -63                 | Program output: -63                
Correct output: 42                  | Program output: 42                 
Correct output: -13                 | Program output: -13                
Correct output: 54                  | Program output: 54                 
Correct output: 43                  | Program output: 43                 
Correct output: 62                  | Program output: 62                 
Correct output: 1                   | Program output: 33                 
Correct output: 20                  | Program output: 20                 
Correct output: 2                   | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: 7                   | Program output: 7                  
Correct output: 24                  | Program output: 24                 
Correct output: 2                   | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 0                   | Program output: 1                  
Correct output: 54                  | Program output: 54                 
Correct output: 17                  | Program output: 17                 
Correct output: 29                  | Program output: 29                 
Correct output: 39                  | Program output: 39                 
Correct output: 18                  | Program output: 18                 
Correct output: 24                  | Program output: 24                 
Correct output: 45                  | Program output: 45                 
Correct output: 7                   | Program output: 7                  
Correct output: -95                 | Program output: -38                
Correct output: -21                 | Program output: -21                
Correct output: -58                 | Program output: -58                
Correct output: -61                 | Program output: -61                
Correct output: -77                 | Program output: -69                
Correct output: -75                 | Program output: -36                
Correct output: -86                 | Program output: -86                
Correct output: -94                 | Program output: -83                
Correct output: 22                  | Program output: 22                 
Correct output: -95                 | Program output: -95                
Correct output: -30                 | Program output: -30                
Correct output: -89                 | Program output: -80                
Correct output: -26                 | Program output: -26                
Correct output: 3                   | Program output: 3                  
Correct output: -98                 | Program output: -98                
Correct output: -86                 | Program output: -86                
Correct output: -18                 | Program output: -18                
Correct output: -39                 | Program output: -39                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -93                
Correct output: 19                  | Program output: 19                 
Correct output: -50                 | Program output: -50                
Correct output: -95                 | Program output: -95                
Correct output: -26                 | Program output: -26                
Correct output: -40                 | Program output: -40                
Correct output: -73                 | Program output: -73                
Correct output: -70                 | Program output: -70                
Correct output: -97                 | Program output: -97                
Correct output: -56                 | Program output: -56                
Correct output: -24                 | Program output: -24                
Correct output: -30                 | Program output: -30                
Correct output: -57                 | Program output: -41                
Correct output: -85                 | Program output: -85                
Correct output: -90                 | Program output: -31                
Correct output: -8                  | Program output: -8                 
Correct output: -88                 | Program output: -88                
Correct output: -50                 | Program output: -42                
Correct output: -56                 | Program output: -56                
Correct output: -80                 | Program output: -80                
Correct output: -86                 | Program output: -86                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -45                
Correct output: -88                 | Program output: -88                
Correct output: -94                 | Program output: -94                
Correct output: -91                 | Program output: -91                
Correct output: -56                 | Program output: -46                
Correct output: -78                 | Program output: -78                
Correct output: -87                 | Program output: -87                
Correct output: -31                 | Program output: -31                
Correct output: -18                 | Program output: -18                
Correct output: -93                 | Program output: -93                
Correct output: -88                 | Program output: -88                
Correct output: -66                 | Program output: -66                
Correct output: -6                  | Program output: -6                 
Correct output: -89                 | Program output: -89                
Correct output: -35                 | Program output: -35                
Correct output: -97                 | Program output: -97                
Correct output: -27                 | Program output: -27                
Correct output: -98                 | Program output: -98                
Correct output: -58                 | Program output: -58                
;;******************************
