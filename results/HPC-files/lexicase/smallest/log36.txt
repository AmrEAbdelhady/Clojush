Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x579dde54 clojush.problems.software.smallest$fn__7460@579dde54] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x6b899971 clojush.instructions.tag$tag_instruction_erc$fn__2160@6b899971] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x7cec3975 clojush.instructions.tag$tagged_instruction_erc$fn__2166@7cec3975] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x7e2a76be clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@7e2a76be]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x417bfebd clojush.problems.software.smallest$smallest_initial_report@417bfebd]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_report@2a4cb8ae]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[3 -20 3 3] -20] [[-37 37 -37 -37] -37] [[-97 -74 -74 -74] -97] [[-38 -38 -45 -38] -45] [[72 72 72 55] 55] [[-79 -79 84 -79] -79] [[53 53 53 85] 53] [[99 99 99 38] 38] [[-45 61 -45 -45] -45] [[-55 -8 -8 -8] -55] [(37 37 37 37) 37] [(43 43 43 43) 43] [(5 5 5 5) 5] [(-27 -27 -27 -27) -27] [(-57 -57 -57 -57) -57] [(15 69 65 3) 3] [(11 93 65 17) 11] [(99 42 64 91) 42] [(80 60 2 86) 2] [(78 48 7 54) 7] [(97 62 66 14) 14] [(29 27 7 27) 7] [(34 53 64 5) 5] [(59 74 11 41) 11] [(56 6 74 68) 6] [(8 69 98 81) 8] [(12 29 97 15) 12] [(75 13 39 85) 13] [(84 38 26 100) 26] [(41 48 78 8) 8] [(2 86 38 0) 0] [(16 81 39 81) 16] [(39 61 41 57) 39] [(47 24 19 11) 11] [(97 100 5 93) 5] [(-67 78 57 -87) -87] [(72 -54 -11 12) -54] [(84 71 -61 83) -61] [(-24 -80 -58 45) -80] [(-36 -89 33 22) -89] [(-79 36 49 54) -79] [(-99 -36 -59 -41) -99] [(23 -42 73 21) -42] [(34 20 -93 -18) -93] [(-21 66 13 11) -21] [(-2 -88 64 9) -88] [(-98 -11 -53 37) -98] [(80 45 -14 72) -14] [(72 -16 -5 54) -16] [(-80 -47 69 -69) -80] [(-100 3 5 -27) -100] [(-21 62 98 42) -21] [(-7 42 -47 -25) -47] [(95 58 -20 95) -20] [(-100 -3 -59 98) -100] [(64 69 -89 33) -89] [(61 -55 0 -24) -55] [(-58 -1 20 97) -58] [(73 1 -65 -31) -65] [(-61 44 -5 48) -61] [(-17 -17 -82 -44) -82] [(-33 37 11 81) -33] [(62 52 58 26) 26] [(-18 33 60 -55) -55] [(-47 58 63 52) -47] [(-27 -24 -9 -78) -78] [(-88 -25 18 1) -88] [(57 -33 31 -89) -89] [(47 92 -11 -3) -11] [(60 -80 -60 18) -80] [(-53 74 65 9) -53] [(83 -23 -33 -50) -50] [(51 -22 8 94) -22] [(6 -58 -51 49) -58] [(63 87 -38 -27) -38] [(35 -49 88 -34) -49] [(36 -25 73 -25) -25] [(50 6 -65 -80) -80] [(65 -28 -83 13) -83] [(64 -32 50 9) -32] [(-79 62 -61 -71) -79] [(79 2 23 -55) -55] [(-40 -44 -73 83) -73] [(11 -29 72 -64) -64] [(72 -41 70 -62) -62] [(58 53 77 25) 25] [(24 77 -3 -91) -91] [(-74 -54 -27 28) -74] [(-60 46 3 31) -60] [(99 -87 -44 83) -87] [(-50 -58 40 -52) -58] [(77 2 30 -65) -65] [(-66 96 32 -21) -66] [(79 -79 29 -16) -79] [(36 -33 73 -87) -87])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[3 -20 3 3] -20]
Train Case:   6 | Input/Output: [[-37 37 -37 -37] -37]
Train Case:   7 | Input/Output: [[-97 -74 -74 -74] -97]
Train Case:   8 | Input/Output: [[-38 -38 -45 -38] -45]
Train Case:   9 | Input/Output: [[72 72 72 55] 55]
Train Case:  10 | Input/Output: [[-79 -79 84 -79] -79]
Train Case:  11 | Input/Output: [[53 53 53 85] 53]
Train Case:  12 | Input/Output: [[99 99 99 38] 38]
Train Case:  13 | Input/Output: [[-45 61 -45 -45] -45]
Train Case:  14 | Input/Output: [[-55 -8 -8 -8] -55]
Train Case:  15 | Input/Output: [(37 37 37 37) 37]
Train Case:  16 | Input/Output: [(43 43 43 43) 43]
Train Case:  17 | Input/Output: [(5 5 5 5) 5]
Train Case:  18 | Input/Output: [(-27 -27 -27 -27) -27]
Train Case:  19 | Input/Output: [(-57 -57 -57 -57) -57]
Train Case:  20 | Input/Output: [(15 69 65 3) 3]
Train Case:  21 | Input/Output: [(11 93 65 17) 11]
Train Case:  22 | Input/Output: [(99 42 64 91) 42]
Train Case:  23 | Input/Output: [(80 60 2 86) 2]
Train Case:  24 | Input/Output: [(78 48 7 54) 7]
Train Case:  25 | Input/Output: [(97 62 66 14) 14]
Train Case:  26 | Input/Output: [(29 27 7 27) 7]
Train Case:  27 | Input/Output: [(34 53 64 5) 5]
Train Case:  28 | Input/Output: [(59 74 11 41) 11]
Train Case:  29 | Input/Output: [(56 6 74 68) 6]
Train Case:  30 | Input/Output: [(8 69 98 81) 8]
Train Case:  31 | Input/Output: [(12 29 97 15) 12]
Train Case:  32 | Input/Output: [(75 13 39 85) 13]
Train Case:  33 | Input/Output: [(84 38 26 100) 26]
Train Case:  34 | Input/Output: [(41 48 78 8) 8]
Train Case:  35 | Input/Output: [(2 86 38 0) 0]
Train Case:  36 | Input/Output: [(16 81 39 81) 16]
Train Case:  37 | Input/Output: [(39 61 41 57) 39]
Train Case:  38 | Input/Output: [(47 24 19 11) 11]
Train Case:  39 | Input/Output: [(97 100 5 93) 5]
Train Case:  40 | Input/Output: [(-67 78 57 -87) -87]
Train Case:  41 | Input/Output: [(72 -54 -11 12) -54]
Train Case:  42 | Input/Output: [(84 71 -61 83) -61]
Train Case:  43 | Input/Output: [(-24 -80 -58 45) -80]
Train Case:  44 | Input/Output: [(-36 -89 33 22) -89]
Train Case:  45 | Input/Output: [(-79 36 49 54) -79]
Train Case:  46 | Input/Output: [(-99 -36 -59 -41) -99]
Train Case:  47 | Input/Output: [(23 -42 73 21) -42]
Train Case:  48 | Input/Output: [(34 20 -93 -18) -93]
Train Case:  49 | Input/Output: [(-21 66 13 11) -21]
Train Case:  50 | Input/Output: [(-2 -88 64 9) -88]
Train Case:  51 | Input/Output: [(-98 -11 -53 37) -98]
Train Case:  52 | Input/Output: [(80 45 -14 72) -14]
Train Case:  53 | Input/Output: [(72 -16 -5 54) -16]
Train Case:  54 | Input/Output: [(-80 -47 69 -69) -80]
Train Case:  55 | Input/Output: [(-100 3 5 -27) -100]
Train Case:  56 | Input/Output: [(-21 62 98 42) -21]
Train Case:  57 | Input/Output: [(-7 42 -47 -25) -47]
Train Case:  58 | Input/Output: [(95 58 -20 95) -20]
Train Case:  59 | Input/Output: [(-100 -3 -59 98) -100]
Train Case:  60 | Input/Output: [(64 69 -89 33) -89]
Train Case:  61 | Input/Output: [(61 -55 0 -24) -55]
Train Case:  62 | Input/Output: [(-58 -1 20 97) -58]
Train Case:  63 | Input/Output: [(73 1 -65 -31) -65]
Train Case:  64 | Input/Output: [(-61 44 -5 48) -61]
Train Case:  65 | Input/Output: [(-17 -17 -82 -44) -82]
Train Case:  66 | Input/Output: [(-33 37 11 81) -33]
Train Case:  67 | Input/Output: [(62 52 58 26) 26]
Train Case:  68 | Input/Output: [(-18 33 60 -55) -55]
Train Case:  69 | Input/Output: [(-47 58 63 52) -47]
Train Case:  70 | Input/Output: [(-27 -24 -9 -78) -78]
Train Case:  71 | Input/Output: [(-88 -25 18 1) -88]
Train Case:  72 | Input/Output: [(57 -33 31 -89) -89]
Train Case:  73 | Input/Output: [(47 92 -11 -3) -11]
Train Case:  74 | Input/Output: [(60 -80 -60 18) -80]
Train Case:  75 | Input/Output: [(-53 74 65 9) -53]
Train Case:  76 | Input/Output: [(83 -23 -33 -50) -50]
Train Case:  77 | Input/Output: [(51 -22 8 94) -22]
Train Case:  78 | Input/Output: [(6 -58 -51 49) -58]
Train Case:  79 | Input/Output: [(63 87 -38 -27) -38]
Train Case:  80 | Input/Output: [(35 -49 88 -34) -49]
Train Case:  81 | Input/Output: [(36 -25 73 -25) -25]
Train Case:  82 | Input/Output: [(50 6 -65 -80) -80]
Train Case:  83 | Input/Output: [(65 -28 -83 13) -83]
Train Case:  84 | Input/Output: [(64 -32 50 9) -32]
Train Case:  85 | Input/Output: [(-79 62 -61 -71) -79]
Train Case:  86 | Input/Output: [(79 2 23 -55) -55]
Train Case:  87 | Input/Output: [(-40 -44 -73 83) -73]
Train Case:  88 | Input/Output: [(11 -29 72 -64) -64]
Train Case:  89 | Input/Output: [(72 -41 70 -62) -62]
Train Case:  90 | Input/Output: [(58 53 77 25) 25]
Train Case:  91 | Input/Output: [(24 77 -3 -91) -91]
Train Case:  92 | Input/Output: [(-74 -54 -27 28) -74]
Train Case:  93 | Input/Output: [(-60 46 3 31) -60]
Train Case:  94 | Input/Output: [(99 -87 -44 83) -87]
Train Case:  95 | Input/Output: [(-50 -58 40 -52) -58]
Train Case:  96 | Input/Output: [(77 2 30 -65) -65]
Train Case:  97 | Input/Output: [(-66 96 32 -21) -66]
Train Case:  98 | Input/Output: [(79 -79 29 -16) -79]
Train Case:  99 | Input/Output: [(36 -33 73 -87) -87]
Test Case:   0 | Input/Output: [[-46 -35 -46 -46] -46]
Test Case:   1 | Input/Output: [[-98 2 2 2] -98]
Test Case:   2 | Input/Output: [[-36 -36 -28 -36] -36]
Test Case:   3 | Input/Output: [[0 0 0 45] 0]
Test Case:   4 | Input/Output: [[-65 89 89 89] -65]
Test Case:   5 | Input/Output: [[-60 47 -60 -60] -60]
Test Case:   6 | Input/Output: [[-86 -86 -86 -68] -86]
Test Case:   7 | Input/Output: [[-97 -25 -25 -25] -97]
Test Case:   8 | Input/Output: [[-11 -11 -11 90] -11]
Test Case:   9 | Input/Output: [[43 87 87 87] 43]
Test Case:  10 | Input/Output: [[10 13 13 13] 10]
Test Case:  11 | Input/Output: [[-6 -2 -2 -2] -6]
Test Case:  12 | Input/Output: [[26 26 -62 26] -62]
Test Case:  13 | Input/Output: [[-74 -90 -74 -74] -90]
Test Case:  14 | Input/Output: [[69 69 -10 69] -10]
Test Case:  15 | Input/Output: [[97 -65 97 97] -65]
Test Case:  16 | Input/Output: [[91 5 5 5] 5]
Test Case:  17 | Input/Output: [[89 89 -36 89] -36]
Test Case:  18 | Input/Output: [[20 20 20 -27] -27]
Test Case:  19 | Input/Output: [[32 15 32 32] 15]
Test Case:  20 | Input/Output: [[28 28 28 90] 28]
Test Case:  21 | Input/Output: [[-13 -94 -13 -13] -94]
Test Case:  22 | Input/Output: [[86 86 53 86] 53]
Test Case:  23 | Input/Output: [[-66 -66 -66 -51] -66]
Test Case:  24 | Input/Output: [[-33 -33 -83 -33] -83]
Test Case:  25 | Input/Output: [[2 -89 -89 -89] -89]
Test Case:  26 | Input/Output: [[-94 -75 -94 -94] -94]
Test Case:  27 | Input/Output: [[7 7 7 99] 7]
Test Case:  28 | Input/Output: [[-100 -100 -100 -75] -100]
Test Case:  29 | Input/Output: [[-91 -91 -50 -91] -91]
Test Case:  30 | Input/Output: [[-16 -16 -16 -73] -73]
Test Case:  31 | Input/Output: [[37 -77 -77 -77] -77]
Test Case:  32 | Input/Output: [[83 83 92 83] 83]
Test Case:  33 | Input/Output: [[28 -41 -41 -41] -41]
Test Case:  34 | Input/Output: [[-55 -70 -70 -70] -70]
Test Case:  35 | Input/Output: [[-47 28 -47 -47] -47]
Test Case:  36 | Input/Output: [[-65 -65 -65 -52] -65]
Test Case:  37 | Input/Output: [[69 -80 -80 -80] -80]
Test Case:  38 | Input/Output: [[92 100 92 92] 92]
Test Case:  39 | Input/Output: [[-33 -33 -33 -35] -35]
Test Case:  40 | Input/Output: [[19 94 19 19] 19]
Test Case:  41 | Input/Output: [[-59 -59 -59 90] -59]
Test Case:  42 | Input/Output: [[-28 -28 -28 -75] -75]
Test Case:  43 | Input/Output: [[-40 -40 -40 19] -40]
Test Case:  44 | Input/Output: [[-92 -92 73 -92] -92]
Test Case:  45 | Input/Output: [[-11 -11 -11 1] -11]
Test Case:  46 | Input/Output: [[71 79 71 71] 71]
Test Case:  47 | Input/Output: [[58 19 58 58] 19]
Test Case:  48 | Input/Output: [[48 -78 -78 -78] -78]
Test Case:  49 | Input/Output: [[-51 48 48 48] -51]
Test Case:  50 | Input/Output: [[-75 -75 -75 -11] -75]
Test Case:  51 | Input/Output: [[-71 38 38 38] -71]
Test Case:  52 | Input/Output: [[15 -91 15 15] -91]
Test Case:  53 | Input/Output: [[-24 -24 -24 -86] -86]
Test Case:  54 | Input/Output: [[-39 -39 -39 -48] -48]
Test Case:  55 | Input/Output: [[-85 -85 76 -85] -85]
Test Case:  56 | Input/Output: [[3 98 3 3] 3]
Test Case:  57 | Input/Output: [[22 22 -66 22] -66]
Test Case:  58 | Input/Output: [[-82 -82 -47 -82] -82]
Test Case:  59 | Input/Output: [[54 54 54 -100] -100]
Test Case:  60 | Input/Output: [[87 -39 -39 -39] -39]
Test Case:  61 | Input/Output: [[-43 -43 -43 -20] -43]
Test Case:  62 | Input/Output: [[93 73 73 73] 73]
Test Case:  63 | Input/Output: [[-42 -59 -42 -42] -59]
Test Case:  64 | Input/Output: [[35 78 35 35] 35]
Test Case:  65 | Input/Output: [[41 -8 -8 -8] -8]
Test Case:  66 | Input/Output: [[-37 -83 -37 -37] -83]
Test Case:  67 | Input/Output: [[-51 -51 28 -51] -51]
Test Case:  68 | Input/Output: [[-62 -62 -37 -62] -62]
Test Case:  69 | Input/Output: [[-31 -31 32 -31] -31]
Test Case:  70 | Input/Output: [[-24 89 89 89] -24]
Test Case:  71 | Input/Output: [[89 -67 89 89] -67]
Test Case:  72 | Input/Output: [[88 88 -68 88] -68]
Test Case:  73 | Input/Output: [[72 -57 72 72] -57]
Test Case:  74 | Input/Output: [[72 72 72 -35] -35]
Test Case:  75 | Input/Output: [[-66 -66 -66 -39] -66]
Test Case:  76 | Input/Output: [[-85 -34 -85 -85] -85]
Test Case:  77 | Input/Output: [[-36 -67 -36 -36] -67]
Test Case:  78 | Input/Output: [[-72 -72 -72 -51] -72]
Test Case:  79 | Input/Output: [[71 54 71 71] 54]
Test Case:  80 | Input/Output: [[85 -4 85 85] -4]
Test Case:  81 | Input/Output: [[58 58 95 58] 58]
Test Case:  82 | Input/Output: [[-70 92 -70 -70] -70]
Test Case:  83 | Input/Output: [[48 48 48 1] 1]
Test Case:  84 | Input/Output: [[-33 -33 -33 41] -33]
Test Case:  85 | Input/Output: [[100 100 -52 100] -52]
Test Case:  86 | Input/Output: [[-98 76 -98 -98] -98]
Test Case:  87 | Input/Output: [[-21 -55 -55 -55] -55]
Test Case:  88 | Input/Output: [[-49 -49 33 -49] -49]
Test Case:  89 | Input/Output: [[-44 -44 -44 -45] -45]
Test Case:  90 | Input/Output: [[17 17 -55 17] -55]
Test Case:  91 | Input/Output: [[6 14 6 6] 6]
Test Case:  92 | Input/Output: [[55 99 55 55] 55]
Test Case:  93 | Input/Output: [[-11 81 81 81] -11]
Test Case:  94 | Input/Output: [[12 12 12 79] 12]
Test Case:  95 | Input/Output: [[-36 49 -36 -36] -36]
Test Case:  96 | Input/Output: [[78 8 8 8] 8]
Test Case:  97 | Input/Output: [[-45 71 71 71] -45]
Test Case:  98 | Input/Output: [[-91 58 -91 -91] -91]
Test Case:  99 | Input/Output: [[-73 -73 -73 -40] -73]
Test Case: 100 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 101 | Input/Output: [(13 13 13 13) 13]
Test Case: 102 | Input/Output: [(70 70 70 70) 70]
Test Case: 103 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 104 | Input/Output: [(100 100 100 100) 100]
Test Case: 105 | Input/Output: [(10 10 10 10) 10]
Test Case: 106 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 107 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 108 | Input/Output: [(79 79 79 79) 79]
Test Case: 109 | Input/Output: [(89 89 89 89) 89]
Test Case: 110 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 111 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 112 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 113 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 114 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 115 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 116 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 117 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 118 | Input/Output: [(43 43 43 43) 43]
Test Case: 119 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 120 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 121 | Input/Output: [(22 22 22 22) 22]
Test Case: 122 | Input/Output: [(52 52 52 52) 52]
Test Case: 123 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 124 | Input/Output: [(22 22 22 22) 22]
Test Case: 125 | Input/Output: [(40 40 40 40) 40]
Test Case: 126 | Input/Output: [(56 56 56 56) 56]
Test Case: 127 | Input/Output: [(10 10 10 10) 10]
Test Case: 128 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 129 | Input/Output: [(94 94 94 94) 94]
Test Case: 130 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 131 | Input/Output: [(44 44 44 44) 44]
Test Case: 132 | Input/Output: [(56 56 56 56) 56]
Test Case: 133 | Input/Output: [(11 11 11 11) 11]
Test Case: 134 | Input/Output: [(45 45 45 45) 45]
Test Case: 135 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 136 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 137 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 138 | Input/Output: [(75 75 75 75) 75]
Test Case: 139 | Input/Output: [(74 74 74 74) 74]
Test Case: 140 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 141 | Input/Output: [(73 73 73 73) 73]
Test Case: 142 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 143 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 144 | Input/Output: [(6 6 6 6) 6]
Test Case: 145 | Input/Output: [(78 78 78 78) 78]
Test Case: 146 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 147 | Input/Output: [(60 60 60 60) 60]
Test Case: 148 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 149 | Input/Output: [(15 15 15 15) 15]
Test Case: 150 | Input/Output: [(32 32 32 32) 32]
Test Case: 151 | Input/Output: [(4 4 4 4) 4]
Test Case: 152 | Input/Output: [(68 68 68 68) 68]
Test Case: 153 | Input/Output: [(78 78 78 78) 78]
Test Case: 154 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 155 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 156 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 157 | Input/Output: [(43 43 43 43) 43]
Test Case: 158 | Input/Output: [(75 75 75 75) 75]
Test Case: 159 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 160 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 161 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 162 | Input/Output: [(81 81 81 81) 81]
Test Case: 163 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 164 | Input/Output: [(99 99 99 99) 99]
Test Case: 165 | Input/Output: [(41 41 41 41) 41]
Test Case: 166 | Input/Output: [(84 84 84 84) 84]
Test Case: 167 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 168 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 169 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 170 | Input/Output: [(90 90 90 90) 90]
Test Case: 171 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 172 | Input/Output: [(0 0 0 0) 0]
Test Case: 173 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 174 | Input/Output: [(62 62 62 62) 62]
Test Case: 175 | Input/Output: [(65 65 65 65) 65]
Test Case: 176 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 177 | Input/Output: [(25 25 25 25) 25]
Test Case: 178 | Input/Output: [(37 37 37 37) 37]
Test Case: 179 | Input/Output: [(70 70 70 70) 70]
Test Case: 180 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 181 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 182 | Input/Output: [(89 89 89 89) 89]
Test Case: 183 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 184 | Input/Output: [(40 40 40 40) 40]
Test Case: 185 | Input/Output: [(12 12 12 12) 12]
Test Case: 186 | Input/Output: [(93 93 93 93) 93]
Test Case: 187 | Input/Output: [(29 29 29 29) 29]
Test Case: 188 | Input/Output: [(59 59 59 59) 59]
Test Case: 189 | Input/Output: [(11 11 11 11) 11]
Test Case: 190 | Input/Output: [(55 55 55 55) 55]
Test Case: 191 | Input/Output: [(3 3 3 3) 3]
Test Case: 192 | Input/Output: [(55 55 55 55) 55]
Test Case: 193 | Input/Output: [(94 94 94 94) 94]
Test Case: 194 | Input/Output: [(10 10 10 10) 10]
Test Case: 195 | Input/Output: [(19 19 19 19) 19]
Test Case: 196 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 197 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 198 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 199 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 200 | Input/Output: [(98 81 32 89) 32]
Test Case: 201 | Input/Output: [(88 27 14 41) 14]
Test Case: 202 | Input/Output: [(91 37 69 61) 37]
Test Case: 203 | Input/Output: [(31 92 27 37) 27]
Test Case: 204 | Input/Output: [(83 70 61 68) 61]
Test Case: 205 | Input/Output: [(63 1 6 59) 1]
Test Case: 206 | Input/Output: [(47 29 59 39) 29]
Test Case: 207 | Input/Output: [(43 97 37 96) 37]
Test Case: 208 | Input/Output: [(29 26 73 39) 26]
Test Case: 209 | Input/Output: [(12 28 36 4) 4]
Test Case: 210 | Input/Output: [(93 86 47 13) 13]
Test Case: 211 | Input/Output: [(99 82 18 25) 18]
Test Case: 212 | Input/Output: [(77 78 67 82) 67]
Test Case: 213 | Input/Output: [(39 82 15 93) 15]
Test Case: 214 | Input/Output: [(53 24 88 90) 24]
Test Case: 215 | Input/Output: [(38 48 86 89) 38]
Test Case: 216 | Input/Output: [(27 4 38 93) 4]
Test Case: 217 | Input/Output: [(14 59 40 64) 14]
Test Case: 218 | Input/Output: [(36 34 90 87) 34]
Test Case: 219 | Input/Output: [(49 30 27 12) 12]
Test Case: 220 | Input/Output: [(99 12 63 59) 12]
Test Case: 221 | Input/Output: [(10 9 37 14) 9]
Test Case: 222 | Input/Output: [(34 48 53 49) 34]
Test Case: 223 | Input/Output: [(58 51 0 55) 0]
Test Case: 224 | Input/Output: [(51 23 24 8) 8]
Test Case: 225 | Input/Output: [(60 69 4 4) 4]
Test Case: 226 | Input/Output: [(64 73 25 43) 25]
Test Case: 227 | Input/Output: [(77 58 40 94) 40]
Test Case: 228 | Input/Output: [(75 51 12 93) 12]
Test Case: 229 | Input/Output: [(89 13 48 38) 13]
Test Case: 230 | Input/Output: [(80 36 59 59) 36]
Test Case: 231 | Input/Output: [(71 37 65 26) 26]
Test Case: 232 | Input/Output: [(65 22 41 4) 4]
Test Case: 233 | Input/Output: [(45 40 33 65) 33]
Test Case: 234 | Input/Output: [(3 20 16 97) 3]
Test Case: 235 | Input/Output: [(12 43 23 78) 12]
Test Case: 236 | Input/Output: [(13 34 1 20) 1]
Test Case: 237 | Input/Output: [(33 61 16 15) 15]
Test Case: 238 | Input/Output: [(11 33 72 67) 11]
Test Case: 239 | Input/Output: [(38 2 49 59) 2]
Test Case: 240 | Input/Output: [(47 100 58 78) 47]
Test Case: 241 | Input/Output: [(9 72 26 64) 9]
Test Case: 242 | Input/Output: [(16 43 14 1) 1]
Test Case: 243 | Input/Output: [(56 97 50 83) 50]
Test Case: 244 | Input/Output: [(88 30 10 15) 10]
Test Case: 245 | Input/Output: [(73 62 18 65) 18]
Test Case: 246 | Input/Output: [(29 10 5 57) 5]
Test Case: 247 | Input/Output: [(25 26 19 62) 19]
Test Case: 248 | Input/Output: [(57 95 3 82) 3]
Test Case: 249 | Input/Output: [(94 23 1 12) 1]
Test Case: 250 | Input/Output: [(91 68 3 15) 3]
Test Case: 251 | Input/Output: [(16 48 57 74) 16]
Test Case: 252 | Input/Output: [(54 90 19 92) 19]
Test Case: 253 | Input/Output: [(36 26 67 57) 26]
Test Case: 254 | Input/Output: [(32 29 47 2) 2]
Test Case: 255 | Input/Output: [(91 86 87 82) 82]
Test Case: 256 | Input/Output: [(83 87 5 46) 5]
Test Case: 257 | Input/Output: [(99 72 15 14) 14]
Test Case: 258 | Input/Output: [(60 58 45 27) 27]
Test Case: 259 | Input/Output: [(3 37 56 61) 3]
Test Case: 260 | Input/Output: [(64 63 92 41) 41]
Test Case: 261 | Input/Output: [(80 37 99 49) 37]
Test Case: 262 | Input/Output: [(85 78 16 91) 16]
Test Case: 263 | Input/Output: [(40 43 64 47) 40]
Test Case: 264 | Input/Output: [(35 57 56 42) 35]
Test Case: 265 | Input/Output: [(22 77 52 91) 22]
Test Case: 266 | Input/Output: [(76 5 35 30) 5]
Test Case: 267 | Input/Output: [(99 8 90 60) 8]
Test Case: 268 | Input/Output: [(91 71 11 6) 6]
Test Case: 269 | Input/Output: [(32 21 53 73) 21]
Test Case: 270 | Input/Output: [(8 10 81 59) 8]
Test Case: 271 | Input/Output: [(85 33 57 8) 8]
Test Case: 272 | Input/Output: [(65 88 25 62) 25]
Test Case: 273 | Input/Output: [(6 8 85 85) 6]
Test Case: 274 | Input/Output: [(86 16 33 40) 16]
Test Case: 275 | Input/Output: [(3 66 48 18) 3]
Test Case: 276 | Input/Output: [(15 75 28 26) 15]
Test Case: 277 | Input/Output: [(36 40 51 24) 24]
Test Case: 278 | Input/Output: [(15 82 56 81) 15]
Test Case: 279 | Input/Output: [(67 92 6 26) 6]
Test Case: 280 | Input/Output: [(47 55 76 14) 14]
Test Case: 281 | Input/Output: [(22 65 69 57) 22]
Test Case: 282 | Input/Output: [(72 6 11 67) 6]
Test Case: 283 | Input/Output: [(61 41 29 93) 29]
Test Case: 284 | Input/Output: [(57 27 71 29) 27]
Test Case: 285 | Input/Output: [(39 46 7 31) 7]
Test Case: 286 | Input/Output: [(70 3 59 23) 3]
Test Case: 287 | Input/Output: [(39 58 21 80) 21]
Test Case: 288 | Input/Output: [(32 48 73 79) 32]
Test Case: 289 | Input/Output: [(4 44 8 68) 4]
Test Case: 290 | Input/Output: [(43 16 55 31) 16]
Test Case: 291 | Input/Output: [(66 28 87 77) 28]
Test Case: 292 | Input/Output: [(56 60 20 87) 20]
Test Case: 293 | Input/Output: [(35 77 92 46) 35]
Test Case: 294 | Input/Output: [(51 60 41 98) 41]
Test Case: 295 | Input/Output: [(21 96 9 96) 9]
Test Case: 296 | Input/Output: [(89 93 43 11) 11]
Test Case: 297 | Input/Output: [(87 32 88 40) 32]
Test Case: 298 | Input/Output: [(19 7 89 32) 7]
Test Case: 299 | Input/Output: [(40 72 34 90) 34]
Test Case: 300 | Input/Output: [(21 91 4 50) 4]
Test Case: 301 | Input/Output: [(59 5 83 2) 2]
Test Case: 302 | Input/Output: [(87 63 83 75) 63]
Test Case: 303 | Input/Output: [(11 75 90 52) 11]
Test Case: 304 | Input/Output: [(87 16 27 92) 16]
Test Case: 305 | Input/Output: [(76 18 48 86) 18]
Test Case: 306 | Input/Output: [(68 30 62 25) 25]
Test Case: 307 | Input/Output: [(41 40 1 83) 1]
Test Case: 308 | Input/Output: [(8 85 72 49) 8]
Test Case: 309 | Input/Output: [(55 94 83 9) 9]
Test Case: 310 | Input/Output: [(58 17 37 60) 17]
Test Case: 311 | Input/Output: [(10 14 53 24) 10]
Test Case: 312 | Input/Output: [(77 11 54 93) 11]
Test Case: 313 | Input/Output: [(2 56 37 12) 2]
Test Case: 314 | Input/Output: [(78 9 67 4) 4]
Test Case: 315 | Input/Output: [(21 62 14 36) 14]
Test Case: 316 | Input/Output: [(88 32 91 92) 32]
Test Case: 317 | Input/Output: [(60 28 20 2) 2]
Test Case: 318 | Input/Output: [(37 78 46 90) 37]
Test Case: 319 | Input/Output: [(97 51 88 35) 35]
Test Case: 320 | Input/Output: [(35 32 96 83) 32]
Test Case: 321 | Input/Output: [(37 48 86 73) 37]
Test Case: 322 | Input/Output: [(18 68 41 72) 18]
Test Case: 323 | Input/Output: [(92 28 27 32) 27]
Test Case: 324 | Input/Output: [(92 55 27 43) 27]
Test Case: 325 | Input/Output: [(34 82 22 32) 22]
Test Case: 326 | Input/Output: [(2 63 34 28) 2]
Test Case: 327 | Input/Output: [(72 41 85 37) 37]
Test Case: 328 | Input/Output: [(65 90 8 0) 0]
Test Case: 329 | Input/Output: [(38 38 95 1) 1]
Test Case: 330 | Input/Output: [(79 79 39 99) 39]
Test Case: 331 | Input/Output: [(46 61 48 74) 46]
Test Case: 332 | Input/Output: [(53 25 9 89) 9]
Test Case: 333 | Input/Output: [(23 54 8 48) 8]
Test Case: 334 | Input/Output: [(14 54 43 19) 14]
Test Case: 335 | Input/Output: [(75 67 52 18) 18]
Test Case: 336 | Input/Output: [(21 68 75 52) 21]
Test Case: 337 | Input/Output: [(99 75 38 17) 17]
Test Case: 338 | Input/Output: [(23 37 31 30) 23]
Test Case: 339 | Input/Output: [(84 62 27 33) 27]
Test Case: 340 | Input/Output: [(3 37 67 25) 3]
Test Case: 341 | Input/Output: [(96 13 97 46) 13]
Test Case: 342 | Input/Output: [(44 30 44 97) 30]
Test Case: 343 | Input/Output: [(43 75 0 97) 0]
Test Case: 344 | Input/Output: [(12 41 32 94) 12]
Test Case: 345 | Input/Output: [(53 72 21 11) 11]
Test Case: 346 | Input/Output: [(15 57 74 79) 15]
Test Case: 347 | Input/Output: [(92 23 75 37) 23]
Test Case: 348 | Input/Output: [(86 19 10 31) 10]
Test Case: 349 | Input/Output: [(92 95 43 49) 43]
Test Case: 350 | Input/Output: [(100 58 58 91) 58]
Test Case: 351 | Input/Output: [(69 90 7 48) 7]
Test Case: 352 | Input/Output: [(52 39 92 28) 28]
Test Case: 353 | Input/Output: [(48 69 32 31) 31]
Test Case: 354 | Input/Output: [(61 38 41 29) 29]
Test Case: 355 | Input/Output: [(44 13 5 94) 5]
Test Case: 356 | Input/Output: [(10 4 80 70) 4]
Test Case: 357 | Input/Output: [(28 99 51 16) 16]
Test Case: 358 | Input/Output: [(36 25 27 15) 15]
Test Case: 359 | Input/Output: [(5 18 21 10) 5]
Test Case: 360 | Input/Output: [(77 79 48 11) 11]
Test Case: 361 | Input/Output: [(35 4 77 15) 4]
Test Case: 362 | Input/Output: [(81 84 46 50) 46]
Test Case: 363 | Input/Output: [(94 73 42 76) 42]
Test Case: 364 | Input/Output: [(10 9 43 72) 9]
Test Case: 365 | Input/Output: [(100 14 99 61) 14]
Test Case: 366 | Input/Output: [(17 25 2 82) 2]
Test Case: 367 | Input/Output: [(49 4 78 51) 4]
Test Case: 368 | Input/Output: [(31 21 87 28) 21]
Test Case: 369 | Input/Output: [(11 15 46 86) 11]
Test Case: 370 | Input/Output: [(77 75 38 11) 11]
Test Case: 371 | Input/Output: [(85 29 32 15) 15]
Test Case: 372 | Input/Output: [(70 5 90 96) 5]
Test Case: 373 | Input/Output: [(1 93 78 11) 1]
Test Case: 374 | Input/Output: [(32 8 7 83) 7]
Test Case: 375 | Input/Output: [(25 36 49 17) 17]
Test Case: 376 | Input/Output: [(89 89 33 50) 33]
Test Case: 377 | Input/Output: [(0 90 3 28) 0]
Test Case: 378 | Input/Output: [(28 15 95 67) 15]
Test Case: 379 | Input/Output: [(55 85 76 56) 55]
Test Case: 380 | Input/Output: [(26 29 62 25) 25]
Test Case: 381 | Input/Output: [(70 13 1 27) 1]
Test Case: 382 | Input/Output: [(50 85 75 83) 50]
Test Case: 383 | Input/Output: [(77 36 18 35) 18]
Test Case: 384 | Input/Output: [(44 48 16 78) 16]
Test Case: 385 | Input/Output: [(19 87 26 0) 0]
Test Case: 386 | Input/Output: [(31 76 59 47) 31]
Test Case: 387 | Input/Output: [(60 66 60 76) 60]
Test Case: 388 | Input/Output: [(15 0 68 15) 0]
Test Case: 389 | Input/Output: [(73 20 35 63) 20]
Test Case: 390 | Input/Output: [(37 9 59 41) 9]
Test Case: 391 | Input/Output: [(54 49 0 40) 0]
Test Case: 392 | Input/Output: [(79 38 95 57) 38]
Test Case: 393 | Input/Output: [(61 68 20 88) 20]
Test Case: 394 | Input/Output: [(31 63 79 90) 31]
Test Case: 395 | Input/Output: [(83 93 87 27) 27]
Test Case: 396 | Input/Output: [(95 30 42 59) 30]
Test Case: 397 | Input/Output: [(16 94 22 42) 16]
Test Case: 398 | Input/Output: [(78 87 34 45) 34]
Test Case: 399 | Input/Output: [(96 12 56 59) 12]
Test Case: 400 | Input/Output: [(-57 -83 37 7) -83]
Test Case: 401 | Input/Output: [(-22 -78 27 55) -78]
Test Case: 402 | Input/Output: [(81 -91 63 -39) -91]
Test Case: 403 | Input/Output: [(-61 98 -37 -81) -81]
Test Case: 404 | Input/Output: [(-32 3 78 60) -32]
Test Case: 405 | Input/Output: [(-77 -86 87 -11) -86]
Test Case: 406 | Input/Output: [(-53 47 71 19) -53]
Test Case: 407 | Input/Output: [(-38 -83 -77 -61) -83]
Test Case: 408 | Input/Output: [(-4 -88 94 1) -88]
Test Case: 409 | Input/Output: [(10 60 -76 10) -76]
Test Case: 410 | Input/Output: [(-11 -15 -32 -2) -32]
Test Case: 411 | Input/Output: [(57 -97 3 68) -97]
Test Case: 412 | Input/Output: [(72 -32 59 29) -32]
Test Case: 413 | Input/Output: [(92 -51 43 31) -51]
Test Case: 414 | Input/Output: [(-93 31 88 -71) -93]
Test Case: 415 | Input/Output: [(76 58 27 -99) -99]
Test Case: 416 | Input/Output: [(45 -51 -19 61) -51]
Test Case: 417 | Input/Output: [(-70 2 -56 47) -70]
Test Case: 418 | Input/Output: [(88 40 -43 69) -43]
Test Case: 419 | Input/Output: [(-36 31 -16 -84) -84]
Test Case: 420 | Input/Output: [(72 87 -18 36) -18]
Test Case: 421 | Input/Output: [(75 66 40 -68) -68]
Test Case: 422 | Input/Output: [(70 -89 100 -67) -89]
Test Case: 423 | Input/Output: [(-6 47 93 -48) -48]
Test Case: 424 | Input/Output: [(-8 37 68 32) -8]
Test Case: 425 | Input/Output: [(4 18 24 -95) -95]
Test Case: 426 | Input/Output: [(-95 -70 8 -25) -95]
Test Case: 427 | Input/Output: [(22 32 94 79) 22]
Test Case: 428 | Input/Output: [(-86 20 33 -23) -86]
Test Case: 429 | Input/Output: [(77 -50 48 96) -50]
Test Case: 430 | Input/Output: [(71 -73 50 70) -73]
Test Case: 431 | Input/Output: [(-37 37 63 -37) -37]
Test Case: 432 | Input/Output: [(-6 31 -69 42) -69]
Test Case: 433 | Input/Output: [(-63 40 36 -68) -68]
Test Case: 434 | Input/Output: [(65 -88 -27 -58) -88]
Test Case: 435 | Input/Output: [(-63 93 61 -40) -63]
Test Case: 436 | Input/Output: [(-79 44 -78 -75) -79]
Test Case: 437 | Input/Output: [(-7 37 -82 96) -82]
Test Case: 438 | Input/Output: [(-32 -29 -75 -39) -75]
Test Case: 439 | Input/Output: [(17 31 -67 86) -67]
Test Case: 440 | Input/Output: [(96 -15 -38 -57) -57]
Test Case: 441 | Input/Output: [(-51 94 99 21) -51]
Test Case: 442 | Input/Output: [(-77 37 9 39) -77]
Test Case: 443 | Input/Output: [(-44 82 -58 -13) -58]
Test Case: 444 | Input/Output: [(-69 58 -88 2) -88]
Test Case: 445 | Input/Output: [(89 7 27 -22) -22]
Test Case: 446 | Input/Output: [(66 -54 26 -8) -54]
Test Case: 447 | Input/Output: [(-42 -43 -5 27) -43]
Test Case: 448 | Input/Output: [(12 90 20 6) 6]
Test Case: 449 | Input/Output: [(86 97 93 -20) -20]
Test Case: 450 | Input/Output: [(-82 8 -15 48) -82]
Test Case: 451 | Input/Output: [(-68 -86 46 91) -86]
Test Case: 452 | Input/Output: [(99 -95 94 95) -95]
Test Case: 453 | Input/Output: [(16 -90 54 95) -90]
Test Case: 454 | Input/Output: [(9 -86 -90 15) -90]
Test Case: 455 | Input/Output: [(-28 50 80 -44) -44]
Test Case: 456 | Input/Output: [(67 -68 59 -65) -68]
Test Case: 457 | Input/Output: [(12 38 -64 -10) -64]
Test Case: 458 | Input/Output: [(-26 -28 11 82) -28]
Test Case: 459 | Input/Output: [(10 46 -35 4) -35]
Test Case: 460 | Input/Output: [(-88 -22 -58 -32) -88]
Test Case: 461 | Input/Output: [(-11 -68 51 -84) -84]
Test Case: 462 | Input/Output: [(78 -65 99 22) -65]
Test Case: 463 | Input/Output: [(-90 36 -51 -70) -90]
Test Case: 464 | Input/Output: [(50 6 -85 -86) -86]
Test Case: 465 | Input/Output: [(-84 6 92 17) -84]
Test Case: 466 | Input/Output: [(-9 63 -100 -5) -100]
Test Case: 467 | Input/Output: [(1 55 99 -42) -42]
Test Case: 468 | Input/Output: [(-41 -93 -41 3) -93]
Test Case: 469 | Input/Output: [(-8 34 30 -55) -55]
Test Case: 470 | Input/Output: [(73 -29 -30 55) -30]
Test Case: 471 | Input/Output: [(-14 -5 -80 53) -80]
Test Case: 472 | Input/Output: [(-11 -84 51 -39) -84]
Test Case: 473 | Input/Output: [(19 59 -74 54) -74]
Test Case: 474 | Input/Output: [(100 92 94 -26) -26]
Test Case: 475 | Input/Output: [(50 5 -91 -63) -91]
Test Case: 476 | Input/Output: [(-90 -100 -89 -32) -100]
Test Case: 477 | Input/Output: [(37 -58 76 -4) -58]
Test Case: 478 | Input/Output: [(20 66 76 -85) -85]
Test Case: 479 | Input/Output: [(45 -56 63 20) -56]
Test Case: 480 | Input/Output: [(-17 -73 -84 29) -84]
Test Case: 481 | Input/Output: [(53 8 -40 -88) -88]
Test Case: 482 | Input/Output: [(-63 73 -39 -60) -63]
Test Case: 483 | Input/Output: [(30 -73 -95 -67) -95]
Test Case: 484 | Input/Output: [(-39 5 -70 92) -70]
Test Case: 485 | Input/Output: [(-92 -69 -61 -91) -92]
Test Case: 486 | Input/Output: [(41 -15 65 16) -15]
Test Case: 487 | Input/Output: [(80 -25 100 -62) -62]
Test Case: 488 | Input/Output: [(-67 81 23 -88) -88]
Test Case: 489 | Input/Output: [(-4 61 28 -64) -64]
Test Case: 490 | Input/Output: [(55 78 53 -93) -93]
Test Case: 491 | Input/Output: [(53 -59 94 -48) -59]
Test Case: 492 | Input/Output: [(94 74 83 98) 74]
Test Case: 493 | Input/Output: [(11 16 83 -58) -58]
Test Case: 494 | Input/Output: [(-15 25 -62 -46) -62]
Test Case: 495 | Input/Output: [(-74 -88 -75 -11) -88]
Test Case: 496 | Input/Output: [(10 77 73 -34) -34]
Test Case: 497 | Input/Output: [(6 1 -74 9) -74]
Test Case: 498 | Input/Output: [(18 81 62 -98) -98]
Test Case: 499 | Input/Output: [(-14 -70 87 -91) -91]
Test Case: 500 | Input/Output: [(49 -8 66 23) -8]
Test Case: 501 | Input/Output: [(27 8 -69 97) -69]
Test Case: 502 | Input/Output: [(94 -39 -85 9) -85]
Test Case: 503 | Input/Output: [(-91 38 -38 -11) -91]
Test Case: 504 | Input/Output: [(-77 5 44 -30) -77]
Test Case: 505 | Input/Output: [(7 -100 64 58) -100]
Test Case: 506 | Input/Output: [(-88 -50 -19 80) -88]
Test Case: 507 | Input/Output: [(-95 12 5 -37) -95]
Test Case: 508 | Input/Output: [(-20 -62 91 28) -62]
Test Case: 509 | Input/Output: [(-2 -94 -97 70) -97]
Test Case: 510 | Input/Output: [(46 -41 100 6) -41]
Test Case: 511 | Input/Output: [(-37 46 -86 19) -86]
Test Case: 512 | Input/Output: [(-73 -95 -25 -82) -95]
Test Case: 513 | Input/Output: [(39 90 96 -100) -100]
Test Case: 514 | Input/Output: [(-18 -98 -21 -68) -98]
Test Case: 515 | Input/Output: [(-83 51 15 2) -83]
Test Case: 516 | Input/Output: [(41 -44 56 58) -44]
Test Case: 517 | Input/Output: [(-69 -25 -35 -34) -69]
Test Case: 518 | Input/Output: [(79 19 49 -94) -94]
Test Case: 519 | Input/Output: [(8 89 40 -35) -35]
Test Case: 520 | Input/Output: [(-98 7 97 78) -98]
Test Case: 521 | Input/Output: [(-26 -3 29 68) -26]
Test Case: 522 | Input/Output: [(55 31 -19 84) -19]
Test Case: 523 | Input/Output: [(17 57 44 -79) -79]
Test Case: 524 | Input/Output: [(-63 -69 83 -7) -69]
Test Case: 525 | Input/Output: [(37 -4 -84 79) -84]
Test Case: 526 | Input/Output: [(16 24 75 -55) -55]
Test Case: 527 | Input/Output: [(-85 27 -21 42) -85]
Test Case: 528 | Input/Output: [(88 -4 12 -78) -78]
Test Case: 529 | Input/Output: [(-39 -76 -72 91) -76]
Test Case: 530 | Input/Output: [(-31 17 -69 -53) -69]
Test Case: 531 | Input/Output: [(99 17 -39 93) -39]
Test Case: 532 | Input/Output: [(67 -38 30 84) -38]
Test Case: 533 | Input/Output: [(95 63 -64 7) -64]
Test Case: 534 | Input/Output: [(-18 48 94 -41) -41]
Test Case: 535 | Input/Output: [(-54 -10 27 -90) -90]
Test Case: 536 | Input/Output: [(72 52 98 -65) -65]
Test Case: 537 | Input/Output: [(-69 -39 -43 99) -69]
Test Case: 538 | Input/Output: [(22 85 -11 78) -11]
Test Case: 539 | Input/Output: [(18 85 -84 -51) -84]
Test Case: 540 | Input/Output: [(-3 17 56 99) -3]
Test Case: 541 | Input/Output: [(83 38 50 16) 16]
Test Case: 542 | Input/Output: [(6 -17 53 31) -17]
Test Case: 543 | Input/Output: [(56 44 82 53) 44]
Test Case: 544 | Input/Output: [(23 49 48 -55) -55]
Test Case: 545 | Input/Output: [(-50 8 93 -95) -95]
Test Case: 546 | Input/Output: [(35 -66 -27 -90) -90]
Test Case: 547 | Input/Output: [(35 -41 81 -38) -41]
Test Case: 548 | Input/Output: [(-23 21 5 -76) -76]
Test Case: 549 | Input/Output: [(24 -68 68 70) -68]
Test Case: 550 | Input/Output: [(92 47 -57 71) -57]
Test Case: 551 | Input/Output: [(-21 90 34 70) -21]
Test Case: 552 | Input/Output: [(-44 1 -15 12) -44]
Test Case: 553 | Input/Output: [(19 -4 -95 -68) -95]
Test Case: 554 | Input/Output: [(-81 -48 -37 68) -81]
Test Case: 555 | Input/Output: [(80 75 -81 48) -81]
Test Case: 556 | Input/Output: [(-99 -81 -50 26) -99]
Test Case: 557 | Input/Output: [(75 -81 7 -30) -81]
Test Case: 558 | Input/Output: [(30 15 31 91) 15]
Test Case: 559 | Input/Output: [(11 98 -57 93) -57]
Test Case: 560 | Input/Output: [(2 -3 -71 42) -71]
Test Case: 561 | Input/Output: [(-92 -86 -83 63) -92]
Test Case: 562 | Input/Output: [(-44 -15 6 -78) -78]
Test Case: 563 | Input/Output: [(-77 0 76 -76) -77]
Test Case: 564 | Input/Output: [(-26 23 -52 46) -52]
Test Case: 565 | Input/Output: [(-88 -3 -12 5) -88]
Test Case: 566 | Input/Output: [(25 -87 -15 -3) -87]
Test Case: 567 | Input/Output: [(65 75 74 13) 13]
Test Case: 568 | Input/Output: [(48 -30 -17 35) -30]
Test Case: 569 | Input/Output: [(-61 -12 -90 -39) -90]
Test Case: 570 | Input/Output: [(96 85 40 -79) -79]
Test Case: 571 | Input/Output: [(72 57 84 -95) -95]
Test Case: 572 | Input/Output: [(21 34 -58 -87) -87]
Test Case: 573 | Input/Output: [(47 -98 -28 71) -98]
Test Case: 574 | Input/Output: [(21 62 24 -58) -58]
Test Case: 575 | Input/Output: [(-93 46 3 -100) -100]
Test Case: 576 | Input/Output: [(-7 87 -20 -97) -97]
Test Case: 577 | Input/Output: [(-27 -65 -47 76) -65]
Test Case: 578 | Input/Output: [(-21 55 0 -9) -21]
Test Case: 579 | Input/Output: [(-37 89 7 -28) -37]
Test Case: 580 | Input/Output: [(-24 -61 81 42) -61]
Test Case: 581 | Input/Output: [(-83 7 -14 100) -83]
Test Case: 582 | Input/Output: [(-41 -83 -59 55) -83]
Test Case: 583 | Input/Output: [(-88 59 -61 -75) -88]
Test Case: 584 | Input/Output: [(-27 -94 34 -56) -94]
Test Case: 585 | Input/Output: [(-27 26 70 43) -27]
Test Case: 586 | Input/Output: [(-34 -66 -17 49) -66]
Test Case: 587 | Input/Output: [(71 -92 75 73) -92]
Test Case: 588 | Input/Output: [(35 47 55 -69) -69]
Test Case: 589 | Input/Output: [(-45 13 -59 -67) -67]
Test Case: 590 | Input/Output: [(71 -96 88 25) -96]
Test Case: 591 | Input/Output: [(25 -13 34 89) -13]
Test Case: 592 | Input/Output: [(-56 -13 97 -79) -79]
Test Case: 593 | Input/Output: [(-30 96 7 84) -30]
Test Case: 594 | Input/Output: [(12 -62 -40 -31) -62]
Test Case: 595 | Input/Output: [(-65 -93 41 53) -93]
Test Case: 596 | Input/Output: [(-68 -81 50 28) -81]
Test Case: 597 | Input/Output: [(-96 20 3 43) -96]
Test Case: 598 | Input/Output: [(-92 -97 52 -75) -97]
Test Case: 599 | Input/Output: [(-23 59 73 -28) -28]
Test Case: 600 | Input/Output: [(9 -34 92 93) -34]
Test Case: 601 | Input/Output: [(-43 57 98 28) -43]
Test Case: 602 | Input/Output: [(-10 55 -85 19) -85]
Test Case: 603 | Input/Output: [(-45 -39 -83 89) -83]
Test Case: 604 | Input/Output: [(80 10 -18 53) -18]
Test Case: 605 | Input/Output: [(55 -82 12 9) -82]
Test Case: 606 | Input/Output: [(-99 -61 75 26) -99]
Test Case: 607 | Input/Output: [(-77 -79 -37 -28) -79]
Test Case: 608 | Input/Output: [(98 -13 -65 -20) -65]
Test Case: 609 | Input/Output: [(-28 -93 -85 -81) -93]
Test Case: 610 | Input/Output: [(-12 -26 -52 26) -52]
Test Case: 611 | Input/Output: [(60 -18 100 26) -18]
Test Case: 612 | Input/Output: [(2 -52 67 4) -52]
Test Case: 613 | Input/Output: [(55 -27 -70 52) -70]
Test Case: 614 | Input/Output: [(81 -37 90 -14) -37]
Test Case: 615 | Input/Output: [(41 69 66 -48) -48]
Test Case: 616 | Input/Output: [(-97 81 20 -95) -97]
Test Case: 617 | Input/Output: [(80 -70 39 57) -70]
Test Case: 618 | Input/Output: [(32 -88 -89 15) -89]
Test Case: 619 | Input/Output: [(62 30 17 15) 15]
Test Case: 620 | Input/Output: [(10 40 -26 31) -26]
Test Case: 621 | Input/Output: [(17 -23 -94 -64) -94]
Test Case: 622 | Input/Output: [(-29 -51 -99 -73) -99]
Test Case: 623 | Input/Output: [(-36 -66 77 -85) -85]
Test Case: 624 | Input/Output: [(-43 29 -84 41) -84]
Test Case: 625 | Input/Output: [(98 -18 -65 21) -65]
Test Case: 626 | Input/Output: [(38 -75 57 -56) -75]
Test Case: 627 | Input/Output: [(-92 -82 -63 75) -92]
Test Case: 628 | Input/Output: [(-91 99 -8 -43) -91]
Test Case: 629 | Input/Output: [(14 5 -94 -17) -94]
Test Case: 630 | Input/Output: [(3 32 15 -65) -65]
Test Case: 631 | Input/Output: [(94 -33 -17 72) -33]
Test Case: 632 | Input/Output: [(13 24 -32 -36) -36]
Test Case: 633 | Input/Output: [(64 -31 65 44) -31]
Test Case: 634 | Input/Output: [(66 26 -51 60) -51]
Test Case: 635 | Input/Output: [(-65 -55 69 -73) -73]
Test Case: 636 | Input/Output: [(-71 -71 -23 -97) -97]
Test Case: 637 | Input/Output: [(-2 26 45 78) -2]
Test Case: 638 | Input/Output: [(-31 61 98 75) -31]
Test Case: 639 | Input/Output: [(83 -97 -27 29) -97]
Test Case: 640 | Input/Output: [(16 72 -16 -90) -90]
Test Case: 641 | Input/Output: [(-15 -63 -87 7) -87]
Test Case: 642 | Input/Output: [(1 -71 75 46) -71]
Test Case: 643 | Input/Output: [(-54 -42 -56 -67) -67]
Test Case: 644 | Input/Output: [(89 -95 33 -94) -95]
Test Case: 645 | Input/Output: [(16 -37 -90 38) -90]
Test Case: 646 | Input/Output: [(29 -39 -90 -22) -90]
Test Case: 647 | Input/Output: [(-18 -64 -73 -20) -73]
Test Case: 648 | Input/Output: [(-7 -57 -45 -53) -57]
Test Case: 649 | Input/Output: [(63 60 31 98) 31]
Test Case: 650 | Input/Output: [(-75 71 21 -47) -75]
Test Case: 651 | Input/Output: [(-77 40 -88 -19) -88]
Test Case: 652 | Input/Output: [(80 -61 49 -5) -61]
Test Case: 653 | Input/Output: [(32 -47 82 66) -47]
Test Case: 654 | Input/Output: [(86 4 -94 -36) -94]
Test Case: 655 | Input/Output: [(-57 36 8 28) -57]
Test Case: 656 | Input/Output: [(67 24 12 -50) -50]
Test Case: 657 | Input/Output: [(-100 -74 -92 -36) -100]
Test Case: 658 | Input/Output: [(98 -96 -42 4) -96]
Test Case: 659 | Input/Output: [(-72 -52 -92 -64) -92]
Test Case: 660 | Input/Output: [(77 19 82 -82) -82]
Test Case: 661 | Input/Output: [(-75 -53 14 38) -75]
Test Case: 662 | Input/Output: [(-49 75 97 -34) -49]
Test Case: 663 | Input/Output: [(-34 -68 20 33) -68]
Test Case: 664 | Input/Output: [(29 -23 -88 31) -88]
Test Case: 665 | Input/Output: [(5 -19 32 -41) -41]
Test Case: 666 | Input/Output: [(83 -7 -100 70) -100]
Test Case: 667 | Input/Output: [(-100 -54 -35 -54) -100]
Test Case: 668 | Input/Output: [(58 91 -30 -12) -30]
Test Case: 669 | Input/Output: [(-68 65 -26 -89) -89]
Test Case: 670 | Input/Output: [(-77 -39 -82 -97) -97]
Test Case: 671 | Input/Output: [(82 -75 -2 48) -75]
Test Case: 672 | Input/Output: [(11 35 -88 80) -88]
Test Case: 673 | Input/Output: [(-21 -97 0 43) -97]
Test Case: 674 | Input/Output: [(-22 34 14 83) -22]
Test Case: 675 | Input/Output: [(68 -21 -90 86) -90]
Test Case: 676 | Input/Output: [(7 -25 67 68) -25]
Test Case: 677 | Input/Output: [(71 -66 -44 -63) -66]
Test Case: 678 | Input/Output: [(-33 -33 -7 -61) -61]
Test Case: 679 | Input/Output: [(10 -55 -26 59) -55]
Test Case: 680 | Input/Output: [(50 -76 56 17) -76]
Test Case: 681 | Input/Output: [(-27 34 29 59) -27]
Test Case: 682 | Input/Output: [(86 -83 -57 -29) -83]
Test Case: 683 | Input/Output: [(-99 7 -84 -94) -99]
Test Case: 684 | Input/Output: [(-50 4 -15 -93) -93]
Test Case: 685 | Input/Output: [(-83 -5 -34 -63) -83]
Test Case: 686 | Input/Output: [(-59 27 -45 -94) -94]
Test Case: 687 | Input/Output: [(-80 50 98 -48) -80]
Test Case: 688 | Input/Output: [(41 37 97 7) 7]
Test Case: 689 | Input/Output: [(-68 3 13 77) -68]
Test Case: 690 | Input/Output: [(-93 73 -56 -84) -93]
Test Case: 691 | Input/Output: [(42 3 38 77) 3]
Test Case: 692 | Input/Output: [(-92 58 61 -4) -92]
Test Case: 693 | Input/Output: [(-49 -29 86 94) -49]
Test Case: 694 | Input/Output: [(59 41 78 95) 41]
Test Case: 695 | Input/Output: [(-37 21 -18 92) -37]
Test Case: 696 | Input/Output: [(-66 -18 7 -24) -66]
Test Case: 697 | Input/Output: [(-93 -10 88 -91) -93]
Test Case: 698 | Input/Output: [(-35 66 -71 51) -71]
Test Case: 699 | Input/Output: [(9 -58 88 -20) -58]
Test Case: 700 | Input/Output: [(92 6 -32 19) -32]
Test Case: 701 | Input/Output: [(22 -90 57 77) -90]
Test Case: 702 | Input/Output: [(74 33 -75 -42) -75]
Test Case: 703 | Input/Output: [(-70 57 -41 33) -70]
Test Case: 704 | Input/Output: [(82 9 0 -6) -6]
Test Case: 705 | Input/Output: [(51 80 28 -64) -64]
Test Case: 706 | Input/Output: [(-27 24 -21 21) -27]
Test Case: 707 | Input/Output: [(18 83 -37 -21) -37]
Test Case: 708 | Input/Output: [(-30 94 10 1) -30]
Test Case: 709 | Input/Output: [(90 -21 21 -47) -47]
Test Case: 710 | Input/Output: [(84 31 1 22) 1]
Test Case: 711 | Input/Output: [(-54 -79 19 27) -79]
Test Case: 712 | Input/Output: [(-20 -50 10 -72) -72]
Test Case: 713 | Input/Output: [(69 -20 51 3) -20]
Test Case: 714 | Input/Output: [(17 -49 88 60) -49]
Test Case: 715 | Input/Output: [(-74 -23 100 86) -74]
Test Case: 716 | Input/Output: [(94 -42 22 87) -42]
Test Case: 717 | Input/Output: [(-25 -23 -89 -38) -89]
Test Case: 718 | Input/Output: [(-10 84 60 -62) -62]
Test Case: 719 | Input/Output: [(-28 29 -56 9) -56]
Test Case: 720 | Input/Output: [(-16 -32 41 62) -32]
Test Case: 721 | Input/Output: [(26 21 -28 38) -28]
Test Case: 722 | Input/Output: [(-2 -2 -52 -15) -52]
Test Case: 723 | Input/Output: [(96 -14 -88 -32) -88]
Test Case: 724 | Input/Output: [(-10 20 45 -68) -68]
Test Case: 725 | Input/Output: [(-42 52 92 25) -42]
Test Case: 726 | Input/Output: [(12 -29 46 -50) -50]
Test Case: 727 | Input/Output: [(41 65 -92 23) -92]
Test Case: 728 | Input/Output: [(53 -63 -82 3) -82]
Test Case: 729 | Input/Output: [(55 -99 59 10) -99]
Test Case: 730 | Input/Output: [(-87 -39 -80 -49) -87]
Test Case: 731 | Input/Output: [(-96 14 75 -43) -96]
Test Case: 732 | Input/Output: [(-3 -57 -63 -45) -63]
Test Case: 733 | Input/Output: [(88 72 22 24) 22]
Test Case: 734 | Input/Output: [(59 -92 10 69) -92]
Test Case: 735 | Input/Output: [(72 -35 17 -29) -35]
Test Case: 736 | Input/Output: [(-77 -91 -27 45) -91]
Test Case: 737 | Input/Output: [(50 -10 -93 -83) -93]
Test Case: 738 | Input/Output: [(62 -58 -47 44) -58]
Test Case: 739 | Input/Output: [(100 7 -59 -65) -65]
Test Case: 740 | Input/Output: [(29 66 74 2) 2]
Test Case: 741 | Input/Output: [(-46 -61 7 -73) -73]
Test Case: 742 | Input/Output: [(82 29 -40 52) -40]
Test Case: 743 | Input/Output: [(-25 2 93 30) -25]
Test Case: 744 | Input/Output: [(91 -56 -18 13) -56]
Test Case: 745 | Input/Output: [(-74 -30 44 55) -74]
Test Case: 746 | Input/Output: [(-2 92 -26 0) -26]
Test Case: 747 | Input/Output: [(20 13 -86 -66) -86]
Test Case: 748 | Input/Output: [(-41 -37 5 77) -41]
Test Case: 749 | Input/Output: [(35 9 -78 36) -78]
Test Case: 750 | Input/Output: [(99 89 -92 36) -92]
Test Case: 751 | Input/Output: [(65 -28 85 -15) -28]
Test Case: 752 | Input/Output: [(0 80 -26 72) -26]
Test Case: 753 | Input/Output: [(12 -56 -24 -38) -56]
Test Case: 754 | Input/Output: [(-99 -9 30 -55) -99]
Test Case: 755 | Input/Output: [(30 -16 92 -22) -22]
Test Case: 756 | Input/Output: [(38 -27 62 -62) -62]
Test Case: 757 | Input/Output: [(100 83 4 67) 4]
Test Case: 758 | Input/Output: [(-70 21 21 20) -70]
Test Case: 759 | Input/Output: [(-11 -33 99 77) -33]
Test Case: 760 | Input/Output: [(94 38 -67 94) -67]
Test Case: 761 | Input/Output: [(92 -68 -35 -91) -91]
Test Case: 762 | Input/Output: [(-11 -18 15 -4) -18]
Test Case: 763 | Input/Output: [(-51 -19 -97 -53) -97]
Test Case: 764 | Input/Output: [(6 -38 -66 -92) -92]
Test Case: 765 | Input/Output: [(32 -12 -14 -46) -46]
Test Case: 766 | Input/Output: [(-75 15 17 35) -75]
Test Case: 767 | Input/Output: [(59 24 36 -70) -70]
Test Case: 768 | Input/Output: [(-49 -22 11 -67) -67]
Test Case: 769 | Input/Output: [(42 29 -10 -47) -47]
Test Case: 770 | Input/Output: [(42 66 -100 98) -100]
Test Case: 771 | Input/Output: [(82 24 -5 -6) -6]
Test Case: 772 | Input/Output: [(74 -92 -32 -38) -92]
Test Case: 773 | Input/Output: [(-72 -36 -67 -68) -72]
Test Case: 774 | Input/Output: [(-50 -19 45 -19) -50]
Test Case: 775 | Input/Output: [(-9 26 -60 38) -60]
Test Case: 776 | Input/Output: [(10 -15 75 42) -15]
Test Case: 777 | Input/Output: [(-81 -100 43 -39) -100]
Test Case: 778 | Input/Output: [(-96 -60 93 -58) -96]
Test Case: 779 | Input/Output: [(18 28 -83 65) -83]
Test Case: 780 | Input/Output: [(-51 -53 -72 -89) -89]
Test Case: 781 | Input/Output: [(-13 -35 -90 -66) -90]
Test Case: 782 | Input/Output: [(-56 -19 -21 13) -56]
Test Case: 783 | Input/Output: [(-90 -21 68 -94) -94]
Test Case: 784 | Input/Output: [(78 44 -61 -87) -87]
Test Case: 785 | Input/Output: [(-31 -52 88 9) -52]
Test Case: 786 | Input/Output: [(-5 21 47 75) -5]
Test Case: 787 | Input/Output: [(40 -22 78 54) -22]
Test Case: 788 | Input/Output: [(-52 -92 8 -100) -100]
Test Case: 789 | Input/Output: [(-86 -73 -14 1) -86]
Test Case: 790 | Input/Output: [(28 98 -94 -85) -94]
Test Case: 791 | Input/Output: [(-83 -91 -97 -75) -97]
Test Case: 792 | Input/Output: [(9 57 65 -21) -21]
Test Case: 793 | Input/Output: [(-22 53 53 58) -22]
Test Case: 794 | Input/Output: [(-55 51 -24 -2) -55]
Test Case: 795 | Input/Output: [(-79 -6 -30 -9) -79]
Test Case: 796 | Input/Output: [(13 -88 92 0) -88]
Test Case: 797 | Input/Output: [(72 -53 98 81) -53]
Test Case: 798 | Input/Output: [(-7 -65 -5 -45) -65]
Test Case: 799 | Input/Output: [(64 -48 4 -2) -48]
Test Case: 800 | Input/Output: [(-33 -99 -29 -79) -99]
Test Case: 801 | Input/Output: [(57 11 21 -9) -9]
Test Case: 802 | Input/Output: [(2 18 4 -25) -25]
Test Case: 803 | Input/Output: [(-96 -72 -27 -49) -96]
Test Case: 804 | Input/Output: [(84 -18 63 7) -18]
Test Case: 805 | Input/Output: [(-5 64 74 -33) -33]
Test Case: 806 | Input/Output: [(-75 88 46 33) -75]
Test Case: 807 | Input/Output: [(-84 -66 65 94) -84]
Test Case: 808 | Input/Output: [(57 -68 44 28) -68]
Test Case: 809 | Input/Output: [(-72 -66 45 94) -72]
Test Case: 810 | Input/Output: [(-7 47 34 -100) -100]
Test Case: 811 | Input/Output: [(14 9 92 -46) -46]
Test Case: 812 | Input/Output: [(-68 16 38 31) -68]
Test Case: 813 | Input/Output: [(7 50 -16 74) -16]
Test Case: 814 | Input/Output: [(97 -99 18 64) -99]
Test Case: 815 | Input/Output: [(2 78 55 -63) -63]
Test Case: 816 | Input/Output: [(-33 38 -7 -10) -33]
Test Case: 817 | Input/Output: [(15 -17 72 -93) -93]
Test Case: 818 | Input/Output: [(-75 16 89 -62) -75]
Test Case: 819 | Input/Output: [(-82 -83 -10 51) -83]
Test Case: 820 | Input/Output: [(-1 43 -9 41) -9]
Test Case: 821 | Input/Output: [(6 68 71 -95) -95]
Test Case: 822 | Input/Output: [(13 -66 82 -30) -66]
Test Case: 823 | Input/Output: [(82 -68 -86 -26) -86]
Test Case: 824 | Input/Output: [(-64 -85 -67 -87) -87]
Test Case: 825 | Input/Output: [(24 98 88 -88) -88]
Test Case: 826 | Input/Output: [(6 48 -56 34) -56]
Test Case: 827 | Input/Output: [(20 66 -93 -82) -93]
Test Case: 828 | Input/Output: [(27 4 56 20) 4]
Test Case: 829 | Input/Output: [(-35 -95 -43 -36) -95]
Test Case: 830 | Input/Output: [(-70 40 86 31) -70]
Test Case: 831 | Input/Output: [(-93 2 98 94) -93]
Test Case: 832 | Input/Output: [(27 -30 -14 75) -30]
Test Case: 833 | Input/Output: [(41 45 -33 -49) -49]
Test Case: 834 | Input/Output: [(12 -1 -91 2) -91]
Test Case: 835 | Input/Output: [(53 5 21 1) 1]
Test Case: 836 | Input/Output: [(0 44 -9 4) -9]
Test Case: 837 | Input/Output: [(-48 38 99 -52) -52]
Test Case: 838 | Input/Output: [(-79 34 97 98) -79]
Test Case: 839 | Input/Output: [(-81 10 8 4) -81]
Test Case: 840 | Input/Output: [(43 -68 99 -37) -68]
Test Case: 841 | Input/Output: [(90 -19 14 69) -19]
Test Case: 842 | Input/Output: [(-73 -1 67 94) -73]
Test Case: 843 | Input/Output: [(-16 -42 62 35) -42]
Test Case: 844 | Input/Output: [(78 -21 -66 -47) -66]
Test Case: 845 | Input/Output: [(45 -73 -25 24) -73]
Test Case: 846 | Input/Output: [(-86 -68 42 33) -86]
Test Case: 847 | Input/Output: [(-55 -35 -97 -52) -97]
Test Case: 848 | Input/Output: [(3 -7 -69 45) -69]
Test Case: 849 | Input/Output: [(-16 41 -96 -17) -96]
Test Case: 850 | Input/Output: [(-81 -95 38 85) -95]
Test Case: 851 | Input/Output: [(-36 1 7 -1) -36]
Test Case: 852 | Input/Output: [(-85 -45 72 -18) -85]
Test Case: 853 | Input/Output: [(-9 -50 -53 44) -53]
Test Case: 854 | Input/Output: [(-39 35 15 -3) -39]
Test Case: 855 | Input/Output: [(-65 59 -10 -23) -65]
Test Case: 856 | Input/Output: [(33 -13 -12 -86) -86]
Test Case: 857 | Input/Output: [(66 81 63 -58) -58]
Test Case: 858 | Input/Output: [(-63 -1 -5 90) -63]
Test Case: 859 | Input/Output: [(27 95 -25 52) -25]
Test Case: 860 | Input/Output: [(97 -5 -100 -7) -100]
Test Case: 861 | Input/Output: [(-66 6 -65 -45) -66]
Test Case: 862 | Input/Output: [(83 23 -4 -11) -11]
Test Case: 863 | Input/Output: [(-13 4 2 -18) -18]
Test Case: 864 | Input/Output: [(-99 84 17 -93) -99]
Test Case: 865 | Input/Output: [(-8 -52 55 81) -52]
Test Case: 866 | Input/Output: [(8 73 -74 83) -74]
Test Case: 867 | Input/Output: [(93 -79 -2 4) -79]
Test Case: 868 | Input/Output: [(15 53 67 28) 15]
Test Case: 869 | Input/Output: [(73 69 -90 34) -90]
Test Case: 870 | Input/Output: [(32 46 -49 62) -49]
Test Case: 871 | Input/Output: [(-5 29 20 56) -5]
Test Case: 872 | Input/Output: [(-32 -15 54 4) -32]
Test Case: 873 | Input/Output: [(53 85 -89 54) -89]
Test Case: 874 | Input/Output: [(-35 72 54 38) -35]
Test Case: 875 | Input/Output: [(-27 -86 -17 -37) -86]
Test Case: 876 | Input/Output: [(-61 87 74 -12) -61]
Test Case: 877 | Input/Output: [(-93 3 57 -59) -93]
Test Case: 878 | Input/Output: [(-40 -100 59 79) -100]
Test Case: 879 | Input/Output: [(-90 -35 -86 39) -90]
Test Case: 880 | Input/Output: [(16 -7 -35 27) -35]
Test Case: 881 | Input/Output: [(-3 86 -33 20) -33]
Test Case: 882 | Input/Output: [(48 -7 16 65) -7]
Test Case: 883 | Input/Output: [(90 37 -75 -82) -82]
Test Case: 884 | Input/Output: [(82 48 79 10) 10]
Test Case: 885 | Input/Output: [(-82 -73 0 81) -82]
Test Case: 886 | Input/Output: [(4 -64 -63 21) -64]
Test Case: 887 | Input/Output: [(-16 -76 17 63) -76]
Test Case: 888 | Input/Output: [(-40 -74 56 17) -74]
Test Case: 889 | Input/Output: [(19 20 -36 -49) -49]
Test Case: 890 | Input/Output: [(-4 -89 4 -75) -89]
Test Case: 891 | Input/Output: [(-23 -13 -76 26) -76]
Test Case: 892 | Input/Output: [(5 16 -13 37) -13]
Test Case: 893 | Input/Output: [(-27 -7 -18 -8) -27]
Test Case: 894 | Input/Output: [(-78 43 -5 55) -78]
Test Case: 895 | Input/Output: [(60 96 31 -97) -97]
Test Case: 896 | Input/Output: [(22 92 -52 12) -52]
Test Case: 897 | Input/Output: [(-66 -19 50 -39) -66]
Test Case: 898 | Input/Output: [(61 -38 20 81) -38]
Test Case: 899 | Input/Output: [(74 36 78 75) 36]
Test Case: 900 | Input/Output: [(19 40 -15 -46) -46]
Test Case: 901 | Input/Output: [(54 53 -47 24) -47]
Test Case: 902 | Input/Output: [(50 16 35 -92) -92]
Test Case: 903 | Input/Output: [(15 27 95 100) 15]
Test Case: 904 | Input/Output: [(-42 73 36 35) -42]
Test Case: 905 | Input/Output: [(34 -20 87 -56) -56]
Test Case: 906 | Input/Output: [(-16 -33 -21 -92) -92]
Test Case: 907 | Input/Output: [(28 -39 -38 18) -39]
Test Case: 908 | Input/Output: [(77 52 9 91) 9]
Test Case: 909 | Input/Output: [(100 -56 -18 -2) -56]
Test Case: 910 | Input/Output: [(27 30 -83 2) -83]
Test Case: 911 | Input/Output: [(76 50 -56 36) -56]
Test Case: 912 | Input/Output: [(29 -100 -100 35) -100]
Test Case: 913 | Input/Output: [(2 -72 -8 -57) -72]
Test Case: 914 | Input/Output: [(-2 7 83 -4) -4]
Test Case: 915 | Input/Output: [(-32 -84 -97 -60) -97]
Test Case: 916 | Input/Output: [(86 54 43 26) 26]
Test Case: 917 | Input/Output: [(78 -56 -88 68) -88]
Test Case: 918 | Input/Output: [(-8 53 -19 77) -19]
Test Case: 919 | Input/Output: [(36 -36 -13 -28) -36]
Test Case: 920 | Input/Output: [(27 -17 -45 -3) -45]
Test Case: 921 | Input/Output: [(71 -69 35 64) -69]
Test Case: 922 | Input/Output: [(3 35 -5 -24) -24]
Test Case: 923 | Input/Output: [(-42 23 18 -21) -42]
Test Case: 924 | Input/Output: [(-21 39 -94 92) -94]
Test Case: 925 | Input/Output: [(-50 -47 -80 -85) -85]
Test Case: 926 | Input/Output: [(-56 -88 -47 36) -88]
Test Case: 927 | Input/Output: [(78 72 -9 -100) -100]
Test Case: 928 | Input/Output: [(61 1 -98 -43) -98]
Test Case: 929 | Input/Output: [(-11 1 92 19) -11]
Test Case: 930 | Input/Output: [(-3 93 -51 -6) -51]
Test Case: 931 | Input/Output: [(-39 -67 17 60) -67]
Test Case: 932 | Input/Output: [(26 -77 -72 72) -77]
Test Case: 933 | Input/Output: [(54 79 50 -98) -98]
Test Case: 934 | Input/Output: [(-17 90 -8 30) -17]
Test Case: 935 | Input/Output: [(11 10 -42 66) -42]
Test Case: 936 | Input/Output: [(79 -91 63 2) -91]
Test Case: 937 | Input/Output: [(1 94 -7 99) -7]
Test Case: 938 | Input/Output: [(-48 1 -35 -68) -68]
Test Case: 939 | Input/Output: [(24 1 -29 84) -29]
Test Case: 940 | Input/Output: [(-1 -50 -5 -91) -91]
Test Case: 941 | Input/Output: [(-84 -51 -5 -75) -84]
Test Case: 942 | Input/Output: [(-48 -84 -39 -29) -84]
Test Case: 943 | Input/Output: [(67 -44 76 54) -44]
Test Case: 944 | Input/Output: [(-68 -16 56 -70) -70]
Test Case: 945 | Input/Output: [(-77 -94 3 22) -94]
Test Case: 946 | Input/Output: [(-91 70 27 45) -91]
Test Case: 947 | Input/Output: [(-52 42 38 -47) -52]
Test Case: 948 | Input/Output: [(-55 -22 -56 -39) -56]
Test Case: 949 | Input/Output: [(-22 -99 -97 43) -99]
Test Case: 950 | Input/Output: [(27 65 -67 -35) -67]
Test Case: 951 | Input/Output: [(30 -39 -65 -25) -65]
Test Case: 952 | Input/Output: [(-85 -14 50 -100) -100]
Test Case: 953 | Input/Output: [(-87 12 -82 42) -87]
Test Case: 954 | Input/Output: [(-15 -4 -75 -3) -75]
Test Case: 955 | Input/Output: [(69 75 93 -80) -80]
Test Case: 956 | Input/Output: [(96 -48 63 89) -48]
Test Case: 957 | Input/Output: [(-59 84 -15 58) -59]
Test Case: 958 | Input/Output: [(-88 -45 -86 70) -88]
Test Case: 959 | Input/Output: [(51 58 -7 44) -7]
Test Case: 960 | Input/Output: [(-11 -73 95 31) -73]
Test Case: 961 | Input/Output: [(-45 -47 -5 75) -47]
Test Case: 962 | Input/Output: [(-29 2 -82 -72) -82]
Test Case: 963 | Input/Output: [(-60 43 2 92) -60]
Test Case: 964 | Input/Output: [(94 -42 -39 -23) -42]
Test Case: 965 | Input/Output: [(47 27 70 -60) -60]
Test Case: 966 | Input/Output: [(12 -63 63 93) -63]
Test Case: 967 | Input/Output: [(45 -80 39 -48) -80]
Test Case: 968 | Input/Output: [(25 -3 -42 -9) -42]
Test Case: 969 | Input/Output: [(47 84 72 -84) -84]
Test Case: 970 | Input/Output: [(-15 -38 -49 -98) -98]
Test Case: 971 | Input/Output: [(4 -46 -31 -79) -79]
Test Case: 972 | Input/Output: [(10 -72 -17 -95) -95]
Test Case: 973 | Input/Output: [(-22 75 65 93) -22]
Test Case: 974 | Input/Output: [(100 -47 42 27) -47]
Test Case: 975 | Input/Output: [(-75 -46 87 66) -75]
Test Case: 976 | Input/Output: [(97 67 60 -91) -91]
Test Case: 977 | Input/Output: [(38 87 -62 6) -62]
Test Case: 978 | Input/Output: [(-78 -29 93 47) -78]
Test Case: 979 | Input/Output: [(-72 -29 -17 -45) -72]
Test Case: 980 | Input/Output: [(-89 -30 72 92) -89]
Test Case: 981 | Input/Output: [(-13 -75 -99 32) -99]
Test Case: 982 | Input/Output: [(-90 -38 -2 66) -90]
Test Case: 983 | Input/Output: [(19 -11 -67 -51) -67]
Test Case: 984 | Input/Output: [(92 100 -26 87) -26]
Test Case: 985 | Input/Output: [(-43 21 -64 -84) -84]
Test Case: 986 | Input/Output: [(47 15 -56 -38) -56]
Test Case: 987 | Input/Output: [(80 8 -30 -74) -74]
Test Case: 988 | Input/Output: [(-39 45 60 -97) -97]
Test Case: 989 | Input/Output: [(-54 -39 -9 -46) -54]
Test Case: 990 | Input/Output: [(-50 8 -74 -7) -74]
Test Case: 991 | Input/Output: [(47 -22 51 -64) -64]
Test Case: 992 | Input/Output: [(54 34 85 -86) -86]
Test Case: 993 | Input/Output: [(-51 -78 90 -87) -87]
Test Case: 994 | Input/Output: [(60 -44 -96 22) -96]
Test Case: 995 | Input/Output: [(35 26 21 -48) -48]
Test Case: 996 | Input/Output: [(6 90 -58 -23) -58]
Test Case: 997 | Input/Output: [(-38 97 -77 93) -77]
Test Case: 998 | Input/Output: [(25 -15 87 -83) -83]
Test Case: 999 | Input/Output: [(49 -62 -86 -62) -86]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 98f17fffbd710431b7ffe02918e462d48a2ebada
GitHub link = https://github.com/lspector/Clojush/commit/98f17fffbd710431b7ffe02918e462d48a2ebada
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x579dde54 clojush.problems.software.smallest$fn__7460@579dde54] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x6b899971 clojush.instructions.tag$tag_instruction_erc$fn__2160@6b899971] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x7cec3975 clojush.instructions.tag$tagged_instruction_erc$fn__2166@7cec3975] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x7e2a76be clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@7e2a76be]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x417bfebd clojush.problems.software.smallest$smallest_initial_report@417bfebd]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_report@2a4cb8ae]
random-screen = false
random-seed = 48 124 -109 -115 -1 79 -89 -17 -55 -123 126 37 105 29 100 -74
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[3 -20 3 3] -20] [[-37 37 -37 -37] -37] [[-97 -74 -74 -74] -97] [[-38 -38 -45 -38] -45] [[72 72 72 55] 55] [[-79 -79 84 -79] -79] [[53 53 53 85] 53] [[99 99 99 38] 38] [[-45 61 -45 -45] -45] [[-55 -8 -8 -8] -55] [(37 37 37 37) 37] [(43 43 43 43) 43] [(5 5 5 5) 5] [(-27 -27 -27 -27) -27] [(-57 -57 -57 -57) -57] [(15 69 65 3) 3] [(11 93 65 17) 11] [(99 42 64 91) 42] [(80 60 2 86) 2] [(78 48 7 54) 7] [(97 62 66 14) 14] [(29 27 7 27) 7] [(34 53 64 5) 5] [(59 74 11 41) 11] [(56 6 74 68) 6] [(8 69 98 81) 8] [(12 29 97 15) 12] [(75 13 39 85) 13] [(84 38 26 100) 26] [(41 48 78 8) 8] [(2 86 38 0) 0] [(16 81 39 81) 16] [(39 61 41 57) 39] [(47 24 19 11) 11] [(97 100 5 93) 5] [(-67 78 57 -87) -87] [(72 -54 -11 12) -54] [(84 71 -61 83) -61] [(-24 -80 -58 45) -80] [(-36 -89 33 22) -89] [(-79 36 49 54) -79] [(-99 -36 -59 -41) -99] [(23 -42 73 21) -42] [(34 20 -93 -18) -93] [(-21 66 13 11) -21] [(-2 -88 64 9) -88] [(-98 -11 -53 37) -98] [(80 45 -14 72) -14] [(72 -16 -5 54) -16] [(-80 -47 69 -69) -80] [(-100 3 5 -27) -100] [(-21 62 98 42) -21] [(-7 42 -47 -25) -47] [(95 58 -20 95) -20] [(-100 -3 -59 98) -100] [(64 69 -89 33) -89] [(61 -55 0 -24) -55] [(-58 -1 20 97) -58] [(73 1 -65 -31) -65] [(-61 44 -5 48) -61] [(-17 -17 -82 -44) -82] [(-33 37 11 81) -33] [(62 52 58 26) 26] [(-18 33 60 -55) -55] [(-47 58 63 52) -47] [(-27 -24 -9 -78) -78] [(-88 -25 18 1) -88] [(57 -33 31 -89) -89] [(47 92 -11 -3) -11] [(60 -80 -60 18) -80] [(-53 74 65 9) -53] [(83 -23 -33 -50) -50] [(51 -22 8 94) -22] [(6 -58 -51 49) -58] [(63 87 -38 -27) -38] [(35 -49 88 -34) -49] [(36 -25 73 -25) -25] [(50 6 -65 -80) -80] [(65 -28 -83 13) -83] [(64 -32 50 9) -32] [(-79 62 -61 -71) -79] [(79 2 23 -55) -55] [(-40 -44 -73 83) -73] [(11 -29 72 -64) -64] [(72 -41 70 -62) -62] [(58 53 77 25) 25] [(24 77 -3 -91) -91] [(-74 -54 -27 28) -74] [(-60 46 3 31) -60] [(99 -87 -44 83) -87] [(-50 -58 40 -52) -58] [(77 2 30 -65) -65] [(-66 96 32 -21) -66] [(79 -79 29 -16) -79] [(36 -33 73 -87) -87])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: 3                  
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: 84                 
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 65                 
Correct output: 11                  | Program output: 65                 
Correct output: 42                  | Program output: 64                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 66                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 64                 
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 74                 
Correct output: 8                   | Program output: 98                 
Correct output: 12                  | Program output: 97                 
Correct output: 13                  | Program output: 39                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 78                 
Correct output: 0                   | Program output: 38                 
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 19                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: 57                 
Correct output: -54                 | Program output: -11                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -58                
Correct output: -89                 | Program output: 33                 
Correct output: -79                 | Program output: 49                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: 73                 
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 13                 
Correct output: -88                 | Program output: 64                 
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -5                 
Correct output: -80                 | Program output: 69                 
Correct output: -100                | Program output: 5                  
Correct output: -21                 | Program output: 98                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: 0                  
Correct output: -58                 | Program output: 20                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 58                 
Correct output: -55                 | Program output: 60                 
Correct output: -47                 | Program output: 63                 
Correct output: -78                 | Program output: -9                 
Correct output: -88                 | Program output: 18                 
Correct output: -89                 | Program output: 31                 
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -60                
Correct output: -53                 | Program output: 65                 
Correct output: -50                 | Program output: -33                
Correct output: -22                 | Program output: 8                  
Correct output: -58                 | Program output: -51                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: 88                 
Correct output: -25                 | Program output: 73                 
Correct output: -80                 | Program output: -65                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: 50                 
Correct output: -79                 | Program output: -61                
Correct output: -55                 | Program output: 23                 
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: 72                 
Correct output: -62                 | Program output: 70                 
Correct output: 25                  | Program output: 77                 
Correct output: -91                 | Program output: -3                 
Correct output: -74                 | Program output: -27                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -44                
Correct output: -58                 | Program output: 40                 
Correct output: -65                 | Program output: 30                 
Correct output: -66                 | Program output: 32                 
Correct output: -79                 | Program output: 29                 
Correct output: -87                 | Program output: 73                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction print_boolean} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_add} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_yank} {:close 0, :instruction in4} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_eq} {:close 2, :instruction exec_eq} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dec} {:close 0, :instruction in1} {:close 0, :instruction tag_boolean_635})
Lexicase best program: (print_boolean in3 print_integer integer_fromboolean integer_add boolean_or exec_y_when_autoconstructing (boolean_yank in4 boolean_pop boolean_and boolean_not boolean_stackdepth exec_dup_items boolean_dup_times exec_dup_times () exec_empty) integer_pop integer_max exec_yank boolean_frominteger boolean_yankdup integer_gt boolean_eq exec_eq print_boolean integer_yankdup exec_do*count (exec_while (boolean_yankdup boolean_empty integer_dec in1 tag_boolean_635)))
Lexicase best errors: [0 1 0 1 0 1 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 39
Percent parens: 0.128
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction print_boolean} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_add} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_yank} {:close 0, :instruction in4} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_eq} {:close 2, :instruction exec_eq} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dec} {:close 0, :instruction in1} {:close 0, :instruction tag_boolean_635})
Zero cases best program: (print_boolean in3 print_integer integer_fromboolean integer_add boolean_or exec_y_when_autoconstructing (boolean_yank in4 boolean_pop boolean_and boolean_not boolean_stackdepth exec_dup_items boolean_dup_times exec_dup_times () exec_empty) integer_pop integer_max exec_yank boolean_frominteger boolean_yankdup integer_gt boolean_eq exec_eq print_boolean integer_yankdup exec_do*count (exec_while (boolean_yankdup boolean_empty integer_dec in1 tag_boolean_635)))
Zero cases best errors: [0 1 0 1 0 1 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 39
Percent parens: 0.128
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 3 7 3 7 1000 13 3 1000 6)
Population mean number of elite cases: 2.05
Count of perfect (error zero) individuals by case: (5 3 7 3 7 0 13 3 0 6)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 0, :instruction print_integer})
Best program: (integer_lte integer_sub boolean_eq exec_empty integer_gte in3 print_integer)
Errors: [0 1 0 1 0 1 0 1 1 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 8
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 9.953
Median total errors in population: 10
Error averages by case: (0.995 0.997 0.993 0.997 0.993 1.0 0.987 0.997 1.0 0.994)
Error minima by case: (0 0 0 0 0 1 0 0 1 0)
Average genome size in population (length): 50.632
Average program size in population (points): 69.63
Average percent parens in population: 0.281
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.998
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.274
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 478116
--- Timings ---
Current time: 1559314345631 milliseconds
Total Time:           2.7 seconds
Initialization:       0.1 seconds,  3.8%
Reproduction:         0.8 seconds, 29.0%
Fitness Testing:      1.8 seconds, 67.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 634
Test mean error for best: 0.63400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: 37                 
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -38                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: 61                 
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 69                 
Correct output: 11                  | Program output: 93                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 60                 
Correct output: 7                   | Program output: 48                 
Correct output: 14                  | Program output: 62                 
Correct output: 7                   | Program output: 27                 
Correct output: 5                   | Program output: 53                 
Correct output: 11                  | Program output: 74                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 29                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 38                 
Correct output: 8                   | Program output: 48                 
Correct output: 0                   | Program output: 86                 
Correct output: 16                  | Program output: 81                 
Correct output: 39                  | Program output: 61                 
Correct output: 11                  | Program output: 24                 
Correct output: 5                   | Program output: 100                
Correct output: -87                 | Program output: 78                 
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: 71                 
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -36                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: 20                 
Correct output: -21                 | Program output: 66                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -11                
Correct output: -14                 | Program output: 45                 
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -47                
Correct output: -100                | Program output: 3                  
Correct output: -21                 | Program output: 62                 
Correct output: -47                 | Program output: 42                 
Correct output: -20                 | Program output: 58                 
Correct output: -100                | Program output: -3                 
Correct output: -89                 | Program output: 69                 
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: 1                  
Correct output: -61                 | Program output: 44                 
Correct output: -82                 | Program output: -17                
Correct output: -33                 | Program output: 37                 
Correct output: 26                  | Program output: 52                 
Correct output: -55                 | Program output: 33                 
Correct output: -47                 | Program output: 58                 
Correct output: -78                 | Program output: -24                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -33                
Correct output: -11                 | Program output: 92                 
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 74                 
Correct output: -50                 | Program output: -23                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: 87                 
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: 6                  
Correct output: -83                 | Program output: -28                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: 62                 
Correct output: -55                 | Program output: 2                  
Correct output: -73                 | Program output: -44                
Correct output: -64                 | Program output: -29                
Correct output: -62                 | Program output: -41                
Correct output: 25                  | Program output: 53                 
Correct output: -91                 | Program output: 77                 
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 46                 
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: 2                  
Correct output: -66                 | Program output: 96                 
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction print_boolean} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_add} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_yank} {:close 0, :instruction in4} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_pop} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k})
Lexicase best program: (print_boolean in3 print_integer integer_fromboolean integer_add boolean_or exec_y_when_autoconstructing (boolean_yank in4 boolean_pop boolean_and boolean_not boolean_stackdepth exec_dup_items boolean_dup_times exec_dup_times () exec_empty) integer_pop integer_max exec_yank boolean_frominteger boolean_yankdup integer_gt exec_eq integer_pop boolean_xor boolean_dup_items boolean_swap integer_dec exec_k () ())
Lexicase best errors: [0 1 1 0 0 1 1 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 35
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction print_boolean} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction integer_add} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_yank} {:close 0, :instruction in4} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_pop} {:close 1, :instruction boolean_xor} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_k})
Zero cases best program: (print_boolean in3 print_integer integer_fromboolean integer_add boolean_or exec_y_when_autoconstructing (boolean_yank in4 boolean_pop boolean_and boolean_not boolean_stackdepth exec_dup_items boolean_dup_times exec_dup_times () exec_empty) integer_pop integer_max exec_yank boolean_frominteger boolean_yankdup integer_gt exec_eq integer_pop boolean_xor boolean_dup_items boolean_swap integer_dec exec_k () ())
Zero cases best errors: [0 1 1 0 0 1 1 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 35
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (946 342 342 604 947 1000 1000 604 1000 1000)
Population mean number of elite cases: 7.78
Count of perfect (error zero) individuals by case: (946 342 342 604 947 0 0 604 0 0)
Population mean number of perfect (error zero) cases: 3.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction integer_min} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_eq} {:close 2, :instruction exec_eq} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_dec} {:close 0, :instruction in1} {:close 0, :instruction tag_boolean_635})
Best program: (integer_min exec_dup_times (boolean_empty) integer_pop boolean_yank boolean_shove exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) exec_dup_times () exec_empty integer_pop integer_max exec_yank boolean_frominteger boolean_yankdup integer_gt boolean_eq exec_eq print_boolean integer_yankdup exec_do*count (exec_while (boolean_yankdup boolean_empty integer_dec in1 tag_boolean_635)))
Errors: [0 0 0 1 0 1 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 30
Size: 36
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 6.215
Median total errors in population: 6
Error averages by case: (0.054 0.658 0.658 0.396 0.053 1.0 1.0 0.396 1.0 1.0)
Error minima by case: (0 0 0 0 0 1 1 0 1 1)
Average genome size in population (length): 29.881
Average program size in population (points): 38.951
Average percent parens in population: 0.200
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.501
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 181
Genome diversity (% unique genomes):	 0.344
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 185
Syntactic diversity (% unique Push programs):	 0.329
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 643750
--- Timings ---
Current time: 1559314347783 milliseconds
Total Time:           4.9 seconds
Initialization:       0.1 seconds,  2.1%
Reproduction:         2.4 seconds, 49.8%
Fitness Testing:      2.1 seconds, 42.4%
Report:               0.3 seconds,  5.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: 3                  
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: 84                 
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 65                 
Correct output: 11                  | Program output: 65                 
Correct output: 42                  | Program output: 64                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 66                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 64                 
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 74                 
Correct output: 8                   | Program output: 98                 
Correct output: 12                  | Program output: 97                 
Correct output: 13                  | Program output: 39                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 78                 
Correct output: 0                   | Program output: 38                 
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 19                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: 57                 
Correct output: -54                 | Program output: -11                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -58                
Correct output: -89                 | Program output: 33                 
Correct output: -79                 | Program output: 49                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: 73                 
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 13                 
Correct output: -88                 | Program output: 64                 
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -5                 
Correct output: -80                 | Program output: 69                 
Correct output: -100                | Program output: 5                  
Correct output: -21                 | Program output: 98                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: 0                  
Correct output: -58                 | Program output: 20                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 58                 
Correct output: -55                 | Program output: 60                 
Correct output: -47                 | Program output: 63                 
Correct output: -78                 | Program output: -9                 
Correct output: -88                 | Program output: 18                 
Correct output: -89                 | Program output: 31                 
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -60                
Correct output: -53                 | Program output: 65                 
Correct output: -50                 | Program output: -33                
Correct output: -22                 | Program output: 8                  
Correct output: -58                 | Program output: -51                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: 88                 
Correct output: -25                 | Program output: 73                 
Correct output: -80                 | Program output: -65                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: 50                 
Correct output: -79                 | Program output: -61                
Correct output: -55                 | Program output: 23                 
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: 72                 
Correct output: -62                 | Program output: 70                 
Correct output: 25                  | Program output: 77                 
Correct output: -91                 | Program output: -3                 
Correct output: -74                 | Program output: -27                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -44                
Correct output: -58                 | Program output: 40                 
Correct output: -65                 | Program output: 30                 
Correct output: -66                 | Program output: 32                 
Correct output: -79                 | Program output: 29                 
Correct output: -87                 | Program output: 73                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 0, :instruction print_integer})
Lexicase best program: (integer_lte integer_sub boolean_eq exec_empty integer_gte in3 print_integer)
Lexicase best errors: [0 1 0 1 0 0 0 0 1 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 8
Percent parens: 0.125
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 0, :instruction print_integer})
Zero cases best program: (integer_lte integer_sub boolean_eq exec_empty integer_gte in3 print_integer)
Zero cases best errors: [0 1 0 1 0 0 0 0 1 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 8
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (465 480 465 1000 465 465 465 949 1000 1000)
Population mean number of elite cases: 6.75
Count of perfect (error zero) individuals by case: (465 480 465 0 465 465 465 949 0 0)
Population mean number of perfect (error zero) cases: 3.75
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_rot} {:close 0, :instruction in4} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 1, :instruction in4} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction tag_exec_283} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_div} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_shove} {:close 0, :instruction tagged_238} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction in4} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_mod})
Best program: (in3 print_integer integer_lte boolean_not integer_flush integer_mult exec_rot (in4 integer_lt integer_gte exec_flush integer_gt exec_flush integer_yankdup boolean_yankdup exec_do*while (in4 exec_rot (exec_do*range () exec_k (boolean_or in4 exec_when (in4) boolean_invert_first_then_and exec_s_when_autoconstructing () (tag_exec_283 (integer_dup_times integer_div integer_dec boolean_invert_first_then_and integer_flush boolean_yankdup boolean_shove integer_shove tagged_238 exec_empty boolean_dup_items exec_y (integer_mult exec_yankdup boolean_and integer_inc boolean_flush integer_gt exec_s_when_autoconstructing (in4 boolean_frominteger exec_do*count (exec_flush integer_fromboolean boolean_yankdup exec_k_when_autoconstructing () (integer_lt integer_yank exec_eq integer_mod))) () ()))) ()) ()) () ())) () ())
Errors: [0 1 0 1 0 0 0 0 1 1]
Total: 4
Mean: 0.4
Genome size: 57
Size: 80
Percent parens: 0.288
--- Population Statistics ---
Average total errors in population: 6.246
Median total errors in population: 8
Error averages by case: (0.535 0.52 0.535 1.0 0.535 0.535 0.535 0.051 1.0 1.0)
Error minima by case: (0 0 0 1 0 0 0 0 1 1)
Average genome size in population (length): 30.341
Average program size in population (points): 40.514
Average percent parens in population: 0.218
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.977
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 144
Genome diversity (% unique genomes):	 0.455
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 145
Syntactic diversity (% unique Push programs):	 0.436
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 814418
--- Timings ---
Current time: 1559314350163 milliseconds
Total Time:           7.4 seconds
Initialization:       0.1 seconds,  1.4%
Reproduction:         4.4 seconds, 59.6%
Fitness Testing:      2.4 seconds, 32.0%
Report:               0.5 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 634
Test mean error for best: 0.63400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: 37                 
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -38                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: 61                 
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 69                 
Correct output: 11                  | Program output: 93                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 60                 
Correct output: 7                   | Program output: 48                 
Correct output: 14                  | Program output: 62                 
Correct output: 7                   | Program output: 27                 
Correct output: 5                   | Program output: 53                 
Correct output: 11                  | Program output: 74                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 29                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 38                 
Correct output: 8                   | Program output: 48                 
Correct output: 0                   | Program output: 86                 
Correct output: 16                  | Program output: 81                 
Correct output: 39                  | Program output: 61                 
Correct output: 11                  | Program output: 24                 
Correct output: 5                   | Program output: 100                
Correct output: -87                 | Program output: 78                 
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: 71                 
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -36                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: 20                 
Correct output: -21                 | Program output: 66                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -11                
Correct output: -14                 | Program output: 45                 
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -47                
Correct output: -100                | Program output: 3                  
Correct output: -21                 | Program output: 62                 
Correct output: -47                 | Program output: 42                 
Correct output: -20                 | Program output: 58                 
Correct output: -100                | Program output: -3                 
Correct output: -89                 | Program output: 69                 
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: 1                  
Correct output: -61                 | Program output: 44                 
Correct output: -82                 | Program output: -17                
Correct output: -33                 | Program output: 37                 
Correct output: 26                  | Program output: 52                 
Correct output: -55                 | Program output: 33                 
Correct output: -47                 | Program output: 58                 
Correct output: -78                 | Program output: -24                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -33                
Correct output: -11                 | Program output: 92                 
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 74                 
Correct output: -50                 | Program output: -23                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: 87                 
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: 6                  
Correct output: -83                 | Program output: -28                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: 62                 
Correct output: -55                 | Program output: 2                  
Correct output: -73                 | Program output: -44                
Correct output: -64                 | Program output: -29                
Correct output: -62                 | Program output: -41                
Correct output: 25                  | Program output: 53                 
Correct output: -91                 | Program output: 77                 
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 46                 
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: 2                  
Correct output: -66                 | Program output: 96                 
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 0, :instruction print_integer})
Lexicase best program: (integer_lte integer_sub boolean_dup exec_empty integer_gte in3 print_integer)
Lexicase best errors: [1 1 0 0 1 1 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 8
Percent parens: 0.125
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 0, :instruction print_integer})
Zero cases best program: (integer_lte integer_sub boolean_dup exec_empty integer_gte in3 print_integer)
Zero cases best errors: [1 1 0 0 1 1 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 8
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 158 792 950 1000 158 1000 158 792 792)
Population mean number of elite cases: 6.80
Count of perfect (error zero) individuals by case: (0 158 792 950 0 158 0 158 792 792)
Population mean number of perfect (error zero) cases: 3.80
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_dup} {:close 1, :instruction exec_when} {:close 0, :instruction exec_yankdup} {:close 0, :instruction in2} {:close 0, :instruction exec_do*range} {:close 2, :instruction exec_noop} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_dup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_when} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_rot} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction exec_when} {:close 1, :instruction in4} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction tag_exec_283} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_div} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_shove} {:close 0, :instruction tagged_238} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction tagged_57} {:close 1, :instruction exec_pop})
Best program: (integer_dup exec_when () exec_yankdup in2 exec_do*range (exec_noop) integer_dup_times integer_sub print_integer boolean_dup exec_k_when_autoconstructing (boolean_yankdup exec_when () boolean_xor) (exec_rot (exec_do*range () exec_k (boolean_or in4 exec_when (in4) boolean_invert_first_then_and exec_s_when_autoconstructing () (tag_exec_283 (integer_dup_times integer_div integer_dec boolean_invert_first_then_and boolean_dup_times boolean_yankdup boolean_shove integer_shove tagged_238 exec_empty boolean_yank integer_gte) boolean_frominteger tagged_57 exec_pop ()) ()) ()) () ()))
Errors: [1 0 1 0 1 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 39
Size: 57
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 6.2
Median total errors in population: 6
Error averages by case: (1.0 0.842 0.208 0.05 1.0 0.842 1.0 0.842 0.208 0.208)
Error minima by case: (1 0 0 0 1 0 1 0 0 0)
Average genome size in population (length): 23.792
Average program size in population (points): 30.167
Average percent parens in population: 0.183
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.487
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 261
Genome diversity (% unique genomes):	 0.45
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 263
Syntactic diversity (% unique Push programs):	 0.431
Total error diversity:				 0.002
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 970805
--- Timings ---
Current time: 1559314353060 milliseconds
Total Time:           9.6 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         6.2 seconds, 65.0%
Fitness Testing:      2.6 seconds, 26.9%
Report:               0.7 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 395
Test mean error for best: 0.39500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 65                 
Correct output: 11                  | Program output: 65                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 62                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 53                 
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 29                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 48                 
Correct output: 0                   | Program output: 38                 
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 19                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: 57                 
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 13                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -47                
Correct output: -100                | Program output: 3                  
Correct output: -21                 | Program output: 62                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 52                 
Correct output: -55                 | Program output: 33                 
Correct output: -47                 | Program output: 58                 
Correct output: -78                 | Program output: -24                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -33                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 65                 
Correct output: -50                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -65                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -61                
Correct output: -55                 | Program output: 2                  
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -29                
Correct output: -62                 | Program output: -41                
Correct output: 25                  | Program output: 53                 
Correct output: -91                 | Program output: -3                 
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: 2                  
Correct output: -66                 | Program output: 32                 
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Lexicase best errors: [0 1 0 1 0 1 1 1 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Zero cases best errors: [0 1 0 1 0 1 1 1 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (496 1000 448 1000 496 1000 1000 1000 448 448)
Population mean number of elite cases: 7.34
Count of perfect (error zero) individuals by case: (496 0 448 0 496 0 0 0 448 448)
Population mean number of perfect (error zero) cases: 2.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (integer_lte integer_sub boolean_eq exec_empty integer_gte in3 exec_noop in2 integer_min print_integer boolean_pop)
Errors: [0 1 0 1 0 1 1 1 0 0]
Total: 5
Mean: 0.5
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 7.664
Median total errors in population: 8
Error averages by case: (0.504 1.0 0.552 1.0 0.504 1.0 1.0 1.0 0.552 0.552)
Error minima by case: (0 1 0 1 0 1 1 1 0 0)
Average genome size in population (length): 25.903
Average program size in population (points): 34.122
Average percent parens in population: 0.211
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.9885
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 152
Genome diversity (% unique genomes):	 0.524
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 155
Syntactic diversity (% unique Push programs):	 0.5
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 1146867
--- Timings ---
Current time: 1559314355464 milliseconds
Total Time:          12.7 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         8.2 seconds, 65.0%
Fitness Testing:      2.8 seconds, 22.2%
Report:               1.5 seconds, 12.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 395
Test mean error for best: 0.39500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 65                 
Correct output: 11                  | Program output: 65                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 62                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 53                 
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 29                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 48                 
Correct output: 0                   | Program output: 38                 
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 19                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: 57                 
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 13                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -47                
Correct output: -100                | Program output: 3                  
Correct output: -21                 | Program output: 62                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 52                 
Correct output: -55                 | Program output: 33                 
Correct output: -47                 | Program output: 58                 
Correct output: -78                 | Program output: -24                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -33                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 65                 
Correct output: -50                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -65                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -61                
Correct output: -55                 | Program output: 2                  
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -29                
Correct output: -62                 | Program output: -41                
Correct output: 25                  | Program output: 53                 
Correct output: -91                 | Program output: -3                 
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: 2                  
Correct output: -66                 | Program output: 32                 
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 1 0 1 1 0 1 1 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 1 0 1 1 0 1 1 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (977 961 1000 973 1000 1000 973 1000 1000 1000)
Population mean number of elite cases: 9.88
Count of perfect (error zero) individuals by case: (977 961 0 973 0 0 973 0 0 0)
Population mean number of perfect (error zero) cases: 3.88
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Errors: [0 0 1 0 1 1 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 7
Size: 9
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 6.116
Median total errors in population: 6
Error averages by case: (0.023 0.039 1.0 0.027 1.0 1.0 0.027 1.0 1.0 1.0)
Error minima by case: (0 0 1 0 1 1 0 1 1 1)
Average genome size in population (length): 8.971
Average program size in population (points): 10.483
Average percent parens in population: 0.155
Minimum age in population: 7.25
Maximum age in population: 9.125
Average age in population: 8.2023125
Median age in population: 8.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 450
Genome diversity (% unique genomes):	 0.106
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 455
Syntactic diversity (% unique Push programs):	 0.093
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 1239201
--- Timings ---
Current time: 1559314357506 milliseconds
Total Time:          14.8 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:        10.1 seconds, 68.1%
Fitness Testing:      3.0 seconds, 20.0%
Report:               1.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 395
Test mean error for best: 0.39500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 65                 
Correct output: 11                  | Program output: 65                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 62                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 53                 
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 29                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 48                 
Correct output: 0                   | Program output: 38                 
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 19                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: 57                 
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 13                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -47                
Correct output: -100                | Program output: 3                  
Correct output: -21                 | Program output: 62                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 52                 
Correct output: -55                 | Program output: 33                 
Correct output: -47                 | Program output: 58                 
Correct output: -78                 | Program output: -24                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -33                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 65                 
Correct output: -50                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -65                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -61                
Correct output: -55                 | Program output: 2                  
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -29                
Correct output: -62                 | Program output: -41                
Correct output: 25                  | Program output: 53                 
Correct output: -91                 | Program output: -3                 
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: 2                  
Correct output: -66                 | Program output: 32                 
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 integer_gt exec_noop in2 integer_min print_integer boolean_pop)
Lexicase best errors: [0 1 0 1 0 1 1 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 8
Percent parens: 0.125
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 integer_gt exec_noop in2 integer_min print_integer boolean_pop)
Zero cases best errors: [0 1 0 1 0 1 1 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 8
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (958 1000 957 1000 957 1 1000 957 957 1000)
Population mean number of elite cases: 8.79
Count of perfect (error zero) individuals by case: (958 0 957 0 957 1 0 957 957 0)
Population mean number of perfect (error zero) cases: 4.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Errors: [0 1 0 1 0 1 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 7
Size: 9
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 5.213
Median total errors in population: 5
Error averages by case: (0.042 1.0 0.043 1.0 0.043 0.999 1.0 0.043 0.043 1.0)
Error minima by case: (0 1 0 1 0 0 1 0 0 1)
Average genome size in population (length): 8.914
Average program size in population (points): 10.449
Average percent parens in population: 0.160
Minimum age in population: 8.25
Maximum age in population: 11.125
Average age in population: 9.68578125
Median age in population: 9.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 416
Genome diversity (% unique genomes):	 0.142
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 429
Syntactic diversity (% unique Push programs):	 0.125
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 1331914
--- Timings ---
Current time: 1559314359787 milliseconds
Total Time:          17.1 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        12.1 seconds, 71.0%
Fitness Testing:      3.1 seconds, 18.1%
Report:               1.8 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 395
Test mean error for best: 0.39500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 72                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 99                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 65                 
Correct output: 11                  | Program output: 65                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 62                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 53                 
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 29                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 48                 
Correct output: 0                   | Program output: 38                 
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 19                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: 57                 
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 13                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -47                
Correct output: -100                | Program output: 3                  
Correct output: -21                 | Program output: 62                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 52                 
Correct output: -55                 | Program output: 33                 
Correct output: -47                 | Program output: 58                 
Correct output: -78                 | Program output: -24                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -33                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 65                 
Correct output: -50                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -65                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -61                
Correct output: -55                 | Program output: 2                  
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -29                
Correct output: -62                 | Program output: -41                
Correct output: 25                  | Program output: 53                 
Correct output: -91                 | Program output: -3                 
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: 2                  
Correct output: -66                 | Program output: 32                 
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -33                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 1 0 1 1 1 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 1 0 1 1 1 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (788 962 791 1000 788 1000 1000 164 787 1000)
Population mean number of elite cases: 8.28
Count of perfect (error zero) individuals by case: (788 962 791 0 788 0 0 164 787 0)
Population mean number of perfect (error zero) cases: 4.28
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (integer_lte integer_sub boolean_eq exec_empty integer_gte in3 exec_noop in2 integer_min print_integer boolean_pop)
Errors: [0 0 0 1 0 1 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 5.72
Median total errors in population: 5
Error averages by case: (0.212 0.038 0.209 1.0 0.212 1.0 1.0 0.836 0.213 1.0)
Error minima by case: (0 0 0 1 0 1 1 0 0 1)
Average genome size in population (length): 8.644
Average program size in population (points): 10.284
Average percent parens in population: 0.170
Minimum age in population: 9.25
Maximum age in population: 12.765625
Average age in population: 11.06815625
Median age in population: 11.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 319
Genome diversity (% unique genomes):	 0.183
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 337
Syntactic diversity (% unique Push programs):	 0.155
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 1421272
--- Timings ---
Current time: 1559314361542 milliseconds
Total Time:          18.8 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        13.6 seconds, 72.5%
Fitness Testing:      3.2 seconds, 17.1%
Report:               1.8 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 419
Test mean error for best: 0.41900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -38                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 17                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 60                 
Correct output: 7                   | Program output: 48                 
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 27                 
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 41                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 15                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 38                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 81                 
Correct output: 39                  | Program output: 57                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 93                 
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: 71                 
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -41                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -18                
Correct output: -21                 | Program output: 11                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -11                
Correct output: -14                 | Program output: 45                 
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -69                
Correct output: -100                | Program output: -27                
Correct output: -21                 | Program output: 42                 
Correct output: -47                 | Program output: -25                
Correct output: -20                 | Program output: 58                 
Correct output: -100                | Program output: -3                 
Correct output: -89                 | Program output: 33                 
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -31                
Correct output: -61                 | Program output: 44                 
Correct output: -82                 | Program output: -44                
Correct output: -33                 | Program output: 37                 
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: 52                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -3                 
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 9                  
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -27                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -28                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -71                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -44                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 31                 
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 1 0 1 1 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 10
Percent parens: 0.200
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 1 0 1 1 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 10
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (202 762 760 1000 202 1000 754 202 202 763)
Population mean number of elite cases: 5.85
Count of perfect (error zero) individuals by case: (202 762 760 0 202 0 754 202 202 763)
Population mean number of perfect (error zero) cases: 3.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min print_integer) boolean_pop)
Errors: [0 0 0 1 0 1 1 0 0 0]
Total: 3
Mean: 0.3
Genome size: 8
Size: 10
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 6.153
Median total errors in population: 6
Error averages by case: (0.798 0.238 0.24 1.0 0.798 1.0 0.246 0.798 0.798 0.237)
Error minima by case: (0 0 0 1 0 1 0 0 0 0)
Average genome size in population (length): 8.624
Average program size in population (points): 10.266
Average percent parens in population: 0.171
Minimum age in population: 10.25
Maximum age in population: 14.5859375
Average age in population: 12.47934375
Median age in population: 12.51171875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 278
Genome diversity (% unique genomes):	 0.185
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 293
Syntactic diversity (% unique Push programs):	 0.156
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 1512292
--- Timings ---
Current time: 1559314363430 milliseconds
Total Time:          20.7 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        15.3 seconds, 73.9%
Fitness Testing:      3.4 seconds, 16.2%
Report:               1.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 197
Test mean error for best: 0.19700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 17                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 15                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 11                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -69                
Correct output: -100                | Program output: -27                
Correct output: -21                 | Program output: 42                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: 52                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 9                  
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -71                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (202 774 974 202 960 202 202 1000 958 202)
Population mean number of elite cases: 5.68
Count of perfect (error zero) individuals by case: (202 774 974 202 960 202 202 0 958 202)
Population mean number of perfect (error zero) cases: 4.68
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 0 0 0 0 0 1 0 0]
Total: 1
Mean: 0.1
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 5.324
Median total errors in population: 6
Error averages by case: (0.798 0.226 0.026 0.798 0.04 0.798 0.798 1.0 0.042 0.798)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 8.205
Average program size in population (points): 10.157
Average percent parens in population: 0.195
Minimum age in population: 11.25
Maximum age in population: 15.59375
Average age in population: 14.47784375
Median age in population: 14.33984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 722
Genome diversity (% unique genomes):	 0.123
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 732
Syntactic diversity (% unique Push programs):	 0.104
Total error diversity:				 0.008
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 1594312
--- Timings ---
Current time: 1559314365366 milliseconds
Total Time:          22.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        17.0 seconds, 75.2%
Fitness Testing:      3.5 seconds, 15.4%
Report:               2.0 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Smallest problem report - generation 10
Test total error for best: 197
Test mean error for best: 0.19700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 17                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 15                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 11                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -69                
Correct output: -100                | Program output: -27                
Correct output: -21                 | Program output: 42                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: 52                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 9                  
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -71                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 1 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 1 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (959 954 1000 933 959 933 934 954 1000 956)
Population mean number of elite cases: 9.58
Count of perfect (error zero) individuals by case: (959 954 0 933 959 933 934 954 0 956)
Population mean number of perfect (error zero) cases: 7.58
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 1 0 0 0 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 2.418
Median total errors in population: 2
Error averages by case: (0.041 0.046 1.0 0.067 0.041 0.067 0.066 0.046 1.0 0.044)
Error minima by case: (0 0 1 0 0 0 0 0 1 0)
Average genome size in population (length): 8.952
Average program size in population (points): 10.976
Average percent parens in population: 0.186
Minimum age in population: 16.0859375
Maximum age in population: 17.0859375
Average age in population: 16.5909375
Median age in population: 17.0859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 858
Genome diversity (% unique genomes):	 0.101
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 869
Syntactic diversity (% unique Push programs):	 0.096
Total error diversity:				 0.008
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 1688458
--- Timings ---
Current time: 1559314367328 milliseconds
Total Time:          24.6 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        18.7 seconds, 76.2%
Fitness Testing:      3.6 seconds, 14.7%
Report:               2.1 seconds,  8.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 197
Test mean error for best: 0.19700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 17                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 15                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 11                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -69                
Correct output: -100                | Program output: -27                
Correct output: -21                 | Program output: 42                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: 52                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 9                  
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -71                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 1 0 0 1 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 1 0 0 1 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (951 959 950 1000 952 959 1000 952 953 955)
Population mean number of elite cases: 9.63
Count of perfect (error zero) individuals by case: (951 959 950 0 952 959 0 952 953 955)
Population mean number of perfect (error zero) cases: 7.63
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 0 1 0 0 1 0 0 0]
Total: 2
Mean: 0.2
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 2.369
Median total errors in population: 2
Error averages by case: (0.049 0.041 0.05 1.0 0.048 0.041 1.0 0.048 0.047 0.045)
Error minima by case: (0 0 0 1 0 0 1 0 0 0)
Average genome size in population (length): 9.048
Average program size in population (points): 11.073
Average percent parens in population: 0.184
Minimum age in population: 17.0859375
Maximum age in population: 19.0859375
Average age in population: 18.0964375
Median age in population: 18.0859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 800
Genome diversity (% unique genomes):	 0.127
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 818
Syntactic diversity (% unique Push programs):	 0.117
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 1779258
--- Timings ---
Current time: 1559314369285 milliseconds
Total Time:          26.5 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        20.5 seconds, 77.1%
Fitness Testing:      3.8 seconds, 14.2%
Report:               2.2 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Smallest problem report - generation 12
Test total error for best: 197
Test mean error for best: 0.19700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 17                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 15                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 11                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -69                
Correct output: -100                | Program output: -27                
Correct output: -21                 | Program output: 42                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: 52                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 9                  
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -71                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer integer_rot))
Lexicase best errors: [1 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction integer_rot})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer integer_rot))
Zero cases best errors: [1 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 951 956 973 951 956 937 951 951 956)
Population mean number of elite cases: 8.58
Count of perfect (error zero) individuals by case: (1 951 956 973 951 956 937 951 951 956)
Population mean number of perfect (error zero) cases: 8.58
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Errors: [1 0 0 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 1.417
Median total errors in population: 1
Error averages by case: (0.999 0.049 0.044 0.027 0.049 0.044 0.063 0.049 0.049 0.044)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.079
Average program size in population (points): 11.119
Average percent parens in population: 0.184
Minimum age in population: 18.0859375
Maximum age in population: 21.0859375
Average age in population: 19.6001875
Median age in population: 19.5859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 732
Genome diversity (% unique genomes):	 0.139
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 759
Syntactic diversity (% unique Push programs):	 0.125
Total error diversity:				 0.007
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 1869918
--- Timings ---
Current time: 1559314371235 milliseconds
Total Time:          28.5 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        22.2 seconds, 77.8%
Fitness Testing:      3.9 seconds, 13.7%
Report:               2.3 seconds,  8.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Smallest problem report - generation 13
Test total error for best: 197
Test mean error for best: 0.19700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 17                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 15                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 11                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -69                
Correct output: -100                | Program output: -27                
Correct output: -21                 | Program output: 42                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: 52                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 9                  
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -71                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 0 1 0 0 0 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 0 1 0 0 0 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (847 846 844 838 118 974 847 844 847 119)
Population mean number of elite cases: 7.12
Count of perfect (error zero) individuals by case: (847 846 844 838 118 974 847 844 847 119)
Population mean number of perfect (error zero) cases: 7.12
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 0 0 1 0 0 0 0 1]
Total: 2
Mean: 0.2
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 2.876
Median total errors in population: 2
Error averages by case: (0.153 0.154 0.156 0.162 0.882 0.026 0.153 0.156 0.153 0.881)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.451
Average program size in population (points): 11.616
Average percent parens in population: 0.186
Minimum age in population: 19.0859375
Maximum age in population: 22.9609375
Average age in population: 21.2063125
Median age in population: 21.3359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 608
Genome diversity (% unique genomes):	 0.137
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 644
Syntactic diversity (% unique Push programs):	 0.123
Total error diversity:				 0.008
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 1966531
--- Timings ---
Current time: 1559314373000 milliseconds
Total Time:          30.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        23.7 seconds, 78.4%
Fitness Testing:      4.0 seconds, 13.3%
Report:               2.4 seconds,  8.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Smallest problem report - generation 14
Test total error for best: 223
Test mean error for best: 0.22300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: 3                  
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -97                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -55                
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 42                  | Program output: 64                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 56                 
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 12                 
Correct output: 13                  | Program output: 39                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 39                  | Program output: 39                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -11                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -58                
Correct output: -89                 | Program output: -36                
Correct output: -79                 | Program output: -79                
Correct output: -99                 | Program output: -99                
Correct output: -42                 | Program output: 21                 
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: -21                
Correct output: -88                 | Program output: -2                 
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -5                 
Correct output: -80                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -21                 | Program output: -21                
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -24                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -61                
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: -33                
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: -47                
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -88                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -60                
Correct output: -53                 | Program output: -53                
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: 8                  
Correct output: -58                 | Program output: -51                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -34                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: 9                  
Correct output: -79                 | Program output: -79                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -74                
Correct output: -60                 | Program output: -60                
Correct output: -87                 | Program output: -44                
Correct output: -58                 | Program output: -52                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -66                
Correct output: -79                 | Program output: -16                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in1 in4 integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 1 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in1 in4 integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 1 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (751 207 743 207 207 738 207 741 207 207)
Population mean number of elite cases: 4.22
Count of perfect (error zero) individuals by case: (751 207 743 207 207 738 207 741 207 207)
Population mean number of perfect (error zero) cases: 4.22
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in1 in4 integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 1 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 5.785
Median total errors in population: 6
Error averages by case: (0.249 0.793 0.257 0.793 0.793 0.262 0.793 0.259 0.793 0.793)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.728
Average program size in population (points): 11.99
Average percent parens in population: 0.188
Minimum age in population: 20.0859375
Maximum age in population: 24.5859375
Average age in population: 22.7586875
Median age in population: 22.8359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 491
Genome diversity (% unique genomes):	 0.187
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 525
Syntactic diversity (% unique Push programs):	 0.168
Total error diversity:				 0.007
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 2064729
--- Timings ---
Current time: 1559314374868 milliseconds
Total Time:          32.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        25.3 seconds, 78.9%
Fitness Testing:      4.2 seconds, 13.0%
Report:               2.5 seconds,  7.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Smallest problem report - generation 15
Test total error for best: 197
Test mean error for best: 0.19700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -74                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -8                 
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 17                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 69                 
Correct output: 12                  | Program output: 15                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 39                 
Correct output: 39                  | Program output: 41                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: 36                 
Correct output: -99                 | Program output: -59                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: 11                 
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -53                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -69                
Correct output: -100                | Program output: -27                
Correct output: -21                 | Program output: 42                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -1                 
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -5                 
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: 11                 
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: 52                 
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -25                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: 9                  
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -71                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -54                
Correct output: -60                 | Program output: 3                  
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -21                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 0 0 0 0 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 0 0 0 0 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (940 136 941 948 950 960 964 136 136 808)
Population mean number of elite cases: 6.92
Count of perfect (error zero) individuals by case: (940 136 941 948 950 960 964 136 136 808)
Population mean number of perfect (error zero) cases: 6.92
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction in1})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in4 integer_min integer_min print_integer) in1)
Errors: [0 0 0 0 0 0 0 0 0 1]
Total: 1
Mean: 0.1
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 3.081
Median total errors in population: 3
Error averages by case: (0.06 0.864 0.059 0.052 0.05 0.04 0.036 0.864 0.864 0.192)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.994
Average program size in population (points): 11.021
Average percent parens in population: 0.185
Minimum age in population: 21.5859375
Maximum age in population: 25.8671875
Average age in population: 24.58621875
Median age in population: 24.3828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 728
Genome diversity (% unique genomes):	 0.14
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 736
Syntactic diversity (% unique Push programs):	 0.129
Total error diversity:				 0.008
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 2155976
--- Timings ---
Current time: 1559314376859 milliseconds
Total Time:          34.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        27.1 seconds, 79.4%
Fitness Testing:      4.3 seconds, 12.6%
Report:               2.6 seconds,  7.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Smallest problem report - generation 16
Test total error for best: 221
Test mean error for best: 0.22100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -97                
Correct output: -45                 | Program output: -38                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -55                
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 60                 
Correct output: 7                   | Program output: 48                 
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 27                 
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 41                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 12                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 38                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 39                  | Program output: 39                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 93                 
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: 71                 
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: -79                
Correct output: -99                 | Program output: -99                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -18                
Correct output: -21                 | Program output: -21                
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: 45                 
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -21                 | Program output: -21                
Correct output: -47                 | Program output: -25                
Correct output: -20                 | Program output: 58                 
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: 33                 
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -31                
Correct output: -61                 | Program output: -61                
Correct output: -82                 | Program output: -44                
Correct output: -33                 | Program output: -33                
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: -47                
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -88                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -3                 
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: -53                
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -27                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -28                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -79                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -44                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -74                
Correct output: -60                 | Program output: -60                
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -66                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 0 0 0 1 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 12
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 0 0 0 1 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 12
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (953 710 968 967 953 708 938 241 241 954)
Population mean number of elite cases: 7.63
Count of perfect (error zero) individuals by case: (953 710 968 967 953 708 938 241 241 954)
Population mean number of perfect (error zero) cases: 7.63
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 0 0 0 0 1 0 0 0]
Total: 1
Mean: 0.1
Genome size: 10
Size: 12
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 2.367
Median total errors in population: 2
Error averages by case: (0.047 0.29 0.032 0.033 0.047 0.292 0.062 0.759 0.759 0.046)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.16
Average program size in population (points): 11.24
Average percent parens in population: 0.186
Minimum age in population: 22.5859375
Maximum age in population: 27.5859375
Average age in population: 25.9435
Median age in population: 26.0234375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 405
Genome diversity (% unique genomes):	 0.166
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 432
Syntactic diversity (% unique Push programs):	 0.154
Total error diversity:				 0.01
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 2248586
--- Timings ---
Current time: 1559314378932 milliseconds
Total Time:          36.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        28.9 seconds, 80.0%
Fitness Testing:      4.4 seconds, 12.3%
Report:               2.7 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Smallest problem report - generation 17
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -97                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -55                
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 12                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 39                  | Program output: 39                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: -79                
Correct output: -99                 | Program output: -99                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: -21                
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -21                 | Program output: -21                
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -61                
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: -33                
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: -47                
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -88                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: -53                
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -79                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -74                
Correct output: -60                 | Program output: -60                
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -66                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Lexicase best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Zero cases best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (716 971 971 971 738 971 971 483 738 716)
Population mean number of elite cases: 8.25
Count of perfect (error zero) individuals by case: (716 971 971 971 738 971 971 483 738 716)
Population mean number of perfect (error zero) cases: 8.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 0, :instruction in2} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 1, :instruction print_integer} {:close 1, :instruction boolean_pop})
Best program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 1.754
Median total errors in population: 2
Error averages by case: (0.284 0.029 0.029 0.029 0.262 0.029 0.029 0.517 0.262 0.284)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.629
Average program size in population (points): 11.688
Average percent parens in population: 0.176
Minimum age in population: 24.5859375
Maximum age in population: 29.15625
Average age in population: 27.6733671875
Median age in population: 27.6484375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 450
Genome diversity (% unique genomes):	 0.166
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 453
Syntactic diversity (% unique Push programs):	 0.149
Total error diversity:				 0.011
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 2346375
--- Timings ---
Current time: 1559314381053 milliseconds
Total Time:          38.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        30.8 seconds, 80.4%
Fitness Testing:      4.6 seconds, 12.0%
Report:               2.8 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 17
Successful program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 14


Auto-simplifying with starting size: 14
step: 0
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 500
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 1000
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 1500
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 2000
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 2500
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 3000
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 3500
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 4000
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 4500
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 5000
program: (in3 exec_y_when_autoconstructing (exec_noop in2 in1 in4 integer_min integer_min integer_min integer_min print_integer) boolean_pop)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 17
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -20                 | Program output: -20                
Correct output: -37                 | Program output: -37                
Correct output: -97                 | Program output: -97                
Correct output: -45                 | Program output: -45                
Correct output: 55                  | Program output: 55                 
Correct output: -79                 | Program output: -79                
Correct output: 53                  | Program output: 53                 
Correct output: 38                  | Program output: 38                 
Correct output: -45                 | Program output: -45                
Correct output: -55                 | Program output: -55                
Correct output: 37                  | Program output: 37                 
Correct output: 43                  | Program output: 43                 
Correct output: 5                   | Program output: 5                  
Correct output: -27                 | Program output: -27                
Correct output: -57                 | Program output: -57                
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 42                  | Program output: 42                 
Correct output: 2                   | Program output: 2                  
Correct output: 7                   | Program output: 7                  
Correct output: 14                  | Program output: 14                 
Correct output: 7                   | Program output: 7                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 8                  
Correct output: 12                  | Program output: 12                 
Correct output: 13                  | Program output: 13                 
Correct output: 26                  | Program output: 26                 
Correct output: 8                   | Program output: 8                  
Correct output: 0                   | Program output: 0                  
Correct output: 16                  | Program output: 16                 
Correct output: 39                  | Program output: 39                 
Correct output: 11                  | Program output: 11                 
Correct output: 5                   | Program output: 5                  
Correct output: -87                 | Program output: -87                
Correct output: -54                 | Program output: -54                
Correct output: -61                 | Program output: -61                
Correct output: -80                 | Program output: -80                
Correct output: -89                 | Program output: -89                
Correct output: -79                 | Program output: -79                
Correct output: -99                 | Program output: -99                
Correct output: -42                 | Program output: -42                
Correct output: -93                 | Program output: -93                
Correct output: -21                 | Program output: -21                
Correct output: -88                 | Program output: -88                
Correct output: -98                 | Program output: -98                
Correct output: -14                 | Program output: -14                
Correct output: -16                 | Program output: -16                
Correct output: -80                 | Program output: -80                
Correct output: -100                | Program output: -100               
Correct output: -21                 | Program output: -21                
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -55                 | Program output: -55                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -61                 | Program output: -61                
Correct output: -82                 | Program output: -82                
Correct output: -33                 | Program output: -33                
Correct output: 26                  | Program output: 26                 
Correct output: -55                 | Program output: -55                
Correct output: -47                 | Program output: -47                
Correct output: -78                 | Program output: -78                
Correct output: -88                 | Program output: -88                
Correct output: -89                 | Program output: -89                
Correct output: -11                 | Program output: -11                
Correct output: -80                 | Program output: -80                
Correct output: -53                 | Program output: -53                
Correct output: -50                 | Program output: -50                
Correct output: -22                 | Program output: -22                
Correct output: -58                 | Program output: -58                
Correct output: -38                 | Program output: -38                
Correct output: -49                 | Program output: -49                
Correct output: -25                 | Program output: -25                
Correct output: -80                 | Program output: -80                
Correct output: -83                 | Program output: -83                
Correct output: -32                 | Program output: -32                
Correct output: -79                 | Program output: -79                
Correct output: -55                 | Program output: -55                
Correct output: -73                 | Program output: -73                
Correct output: -64                 | Program output: -64                
Correct output: -62                 | Program output: -62                
Correct output: 25                  | Program output: 25                 
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -74                
Correct output: -60                 | Program output: -60                
Correct output: -87                 | Program output: -87                
Correct output: -58                 | Program output: -58                
Correct output: -65                 | Program output: -65                
Correct output: -66                 | Program output: -66                
Correct output: -79                 | Program output: -79                
Correct output: -87                 | Program output: -87                
;;******************************
