Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x30b9728f clojush.problems.software.smallest$fn__7460@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[91 91 69 91] 69] [[40 40 40 -77] -77] [[-96 37 37 37] -96] [[57 -74 -74 -74] -74] [[-81 -81 -81 -10] -81] [[59 59 59 25] 25] [[-38 -14 -14 -14] -38] [[-63 -63 -63 79] -63] [[-44 90 -44 -44] -44] [[52 -88 52 52] -88] [(23 23 23 23) 23] [(87 87 87 87) 87] [(-12 -12 -12 -12) -12] [(-38 -38 -38 -38) -38] [(-27 -27 -27 -27) -27] [(27 88 61 22) 22] [(25 30 92 47) 25] [(93 5 72 41) 5] [(90 89 29 88) 29] [(90 33 43 74) 33] [(48 65 27 60) 27] [(100 12 83 86) 12] [(19 0 60 22) 0] [(85 87 22 60) 22] [(38 80 96 84) 38] [(83 0 39 12) 0] [(3 61 5 28) 3] [(11 64 36 98) 11] [(20 64 33 14) 14] [(21 86 52 95) 21] [(41 58 50 13) 13] [(74 71 72 100) 71] [(79 54 4 49) 4] [(44 59 1 95) 1] [(10 14 55 11) 10] [(2 -1 -64 69) -64] [(41 -40 -46 34) -46] [(-20 -5 5 -93) -93] [(31 79 26 -10) -10] [(-43 -84 25 88) -84] [(93 3 2 44) 2] [(10 33 43 98) 10] [(-84 -13 -97 -6) -97] [(9 -69 91 90) -69] [(-79 51 37 31) -79] [(-80 -79 63 71) -80] [(28 -21 -61 6) -61] [(59 -82 -23 92) -82] [(-23 -17 -2 -62) -62] [(-97 -84 -89 15) -97] [(-29 22 64 -2) -29] [(-20 11 -4 48) -20] [(69 70 -32 -38) -38] [(-28 5 48 -13) -28] [(-32 -69 -48 85) -69] [(-53 -55 -59 98) -59] [(62 19 61 -86) -86] [(-55 -16 54 -88) -88] [(64 9 -23 -25) -25] [(24 72 -33 70) -33] [(-22 -13 -72 -30) -72] [(71 -85 22 -34) -85] [(-71 69 80 -78) -78] [(-51 -35 23 -9) -51] [(-95 -6 71 -78) -95] [(-18 1 90 69) -18] [(2 17 7 -36) -36] [(2 -30 93 -18) -30] [(7 42 35 -83) -83] [(86 -89 -87 -88) -89] [(19 49 64 65) 19] [(0 32 19 -83) -83] [(70 -63 6 -94) -94] [(22 -14 73 64) -14] [(17 -42 32 9) -42] [(-45 -15 70 43) -45] [(46 -29 82 12) -29] [(-59 -77 -82 98) -82] [(6 -88 -42 14) -88] [(-3 -37 71 76) -37] [(-45 -33 -64 33) -64] [(-86 -8 -14 -83) -86] [(84 31 -85 13) -85] [(-78 85 17 44) -78] [(-13 54 38 -5) -13] [(83 9 18 -85) -85] [(31 26 71 -50) -50] [(58 99 -79 -97) -97] [(84 52 -86 52) -86] [(-2 -63 68 25) -63] [(-5 -97 50 83) -97] [(-39 -23 98 34) -39] [(19 54 48 -78) -78] [(-63 -57 -11 -42) -63] [(-88 -40 -13 -9) -88])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[91 91 69 91] 69]
Train Case:   6 | Input/Output: [[40 40 40 -77] -77]
Train Case:   7 | Input/Output: [[-96 37 37 37] -96]
Train Case:   8 | Input/Output: [[57 -74 -74 -74] -74]
Train Case:   9 | Input/Output: [[-81 -81 -81 -10] -81]
Train Case:  10 | Input/Output: [[59 59 59 25] 25]
Train Case:  11 | Input/Output: [[-38 -14 -14 -14] -38]
Train Case:  12 | Input/Output: [[-63 -63 -63 79] -63]
Train Case:  13 | Input/Output: [[-44 90 -44 -44] -44]
Train Case:  14 | Input/Output: [[52 -88 52 52] -88]
Train Case:  15 | Input/Output: [(23 23 23 23) 23]
Train Case:  16 | Input/Output: [(87 87 87 87) 87]
Train Case:  17 | Input/Output: [(-12 -12 -12 -12) -12]
Train Case:  18 | Input/Output: [(-38 -38 -38 -38) -38]
Train Case:  19 | Input/Output: [(-27 -27 -27 -27) -27]
Train Case:  20 | Input/Output: [(27 88 61 22) 22]
Train Case:  21 | Input/Output: [(25 30 92 47) 25]
Train Case:  22 | Input/Output: [(93 5 72 41) 5]
Train Case:  23 | Input/Output: [(90 89 29 88) 29]
Train Case:  24 | Input/Output: [(90 33 43 74) 33]
Train Case:  25 | Input/Output: [(48 65 27 60) 27]
Train Case:  26 | Input/Output: [(100 12 83 86) 12]
Train Case:  27 | Input/Output: [(19 0 60 22) 0]
Train Case:  28 | Input/Output: [(85 87 22 60) 22]
Train Case:  29 | Input/Output: [(38 80 96 84) 38]
Train Case:  30 | Input/Output: [(83 0 39 12) 0]
Train Case:  31 | Input/Output: [(3 61 5 28) 3]
Train Case:  32 | Input/Output: [(11 64 36 98) 11]
Train Case:  33 | Input/Output: [(20 64 33 14) 14]
Train Case:  34 | Input/Output: [(21 86 52 95) 21]
Train Case:  35 | Input/Output: [(41 58 50 13) 13]
Train Case:  36 | Input/Output: [(74 71 72 100) 71]
Train Case:  37 | Input/Output: [(79 54 4 49) 4]
Train Case:  38 | Input/Output: [(44 59 1 95) 1]
Train Case:  39 | Input/Output: [(10 14 55 11) 10]
Train Case:  40 | Input/Output: [(2 -1 -64 69) -64]
Train Case:  41 | Input/Output: [(41 -40 -46 34) -46]
Train Case:  42 | Input/Output: [(-20 -5 5 -93) -93]
Train Case:  43 | Input/Output: [(31 79 26 -10) -10]
Train Case:  44 | Input/Output: [(-43 -84 25 88) -84]
Train Case:  45 | Input/Output: [(93 3 2 44) 2]
Train Case:  46 | Input/Output: [(10 33 43 98) 10]
Train Case:  47 | Input/Output: [(-84 -13 -97 -6) -97]
Train Case:  48 | Input/Output: [(9 -69 91 90) -69]
Train Case:  49 | Input/Output: [(-79 51 37 31) -79]
Train Case:  50 | Input/Output: [(-80 -79 63 71) -80]
Train Case:  51 | Input/Output: [(28 -21 -61 6) -61]
Train Case:  52 | Input/Output: [(59 -82 -23 92) -82]
Train Case:  53 | Input/Output: [(-23 -17 -2 -62) -62]
Train Case:  54 | Input/Output: [(-97 -84 -89 15) -97]
Train Case:  55 | Input/Output: [(-29 22 64 -2) -29]
Train Case:  56 | Input/Output: [(-20 11 -4 48) -20]
Train Case:  57 | Input/Output: [(69 70 -32 -38) -38]
Train Case:  58 | Input/Output: [(-28 5 48 -13) -28]
Train Case:  59 | Input/Output: [(-32 -69 -48 85) -69]
Train Case:  60 | Input/Output: [(-53 -55 -59 98) -59]
Train Case:  61 | Input/Output: [(62 19 61 -86) -86]
Train Case:  62 | Input/Output: [(-55 -16 54 -88) -88]
Train Case:  63 | Input/Output: [(64 9 -23 -25) -25]
Train Case:  64 | Input/Output: [(24 72 -33 70) -33]
Train Case:  65 | Input/Output: [(-22 -13 -72 -30) -72]
Train Case:  66 | Input/Output: [(71 -85 22 -34) -85]
Train Case:  67 | Input/Output: [(-71 69 80 -78) -78]
Train Case:  68 | Input/Output: [(-51 -35 23 -9) -51]
Train Case:  69 | Input/Output: [(-95 -6 71 -78) -95]
Train Case:  70 | Input/Output: [(-18 1 90 69) -18]
Train Case:  71 | Input/Output: [(2 17 7 -36) -36]
Train Case:  72 | Input/Output: [(2 -30 93 -18) -30]
Train Case:  73 | Input/Output: [(7 42 35 -83) -83]
Train Case:  74 | Input/Output: [(86 -89 -87 -88) -89]
Train Case:  75 | Input/Output: [(19 49 64 65) 19]
Train Case:  76 | Input/Output: [(0 32 19 -83) -83]
Train Case:  77 | Input/Output: [(70 -63 6 -94) -94]
Train Case:  78 | Input/Output: [(22 -14 73 64) -14]
Train Case:  79 | Input/Output: [(17 -42 32 9) -42]
Train Case:  80 | Input/Output: [(-45 -15 70 43) -45]
Train Case:  81 | Input/Output: [(46 -29 82 12) -29]
Train Case:  82 | Input/Output: [(-59 -77 -82 98) -82]
Train Case:  83 | Input/Output: [(6 -88 -42 14) -88]
Train Case:  84 | Input/Output: [(-3 -37 71 76) -37]
Train Case:  85 | Input/Output: [(-45 -33 -64 33) -64]
Train Case:  86 | Input/Output: [(-86 -8 -14 -83) -86]
Train Case:  87 | Input/Output: [(84 31 -85 13) -85]
Train Case:  88 | Input/Output: [(-78 85 17 44) -78]
Train Case:  89 | Input/Output: [(-13 54 38 -5) -13]
Train Case:  90 | Input/Output: [(83 9 18 -85) -85]
Train Case:  91 | Input/Output: [(31 26 71 -50) -50]
Train Case:  92 | Input/Output: [(58 99 -79 -97) -97]
Train Case:  93 | Input/Output: [(84 52 -86 52) -86]
Train Case:  94 | Input/Output: [(-2 -63 68 25) -63]
Train Case:  95 | Input/Output: [(-5 -97 50 83) -97]
Train Case:  96 | Input/Output: [(-39 -23 98 34) -39]
Train Case:  97 | Input/Output: [(19 54 48 -78) -78]
Train Case:  98 | Input/Output: [(-63 -57 -11 -42) -63]
Train Case:  99 | Input/Output: [(-88 -40 -13 -9) -88]
Test Case:   0 | Input/Output: [[57 57 99 57] 57]
Test Case:   1 | Input/Output: [[-70 -70 53 -70] -70]
Test Case:   2 | Input/Output: [[55 79 55 55] 55]
Test Case:   3 | Input/Output: [[86 86 86 -55] -55]
Test Case:   4 | Input/Output: [[21 21 21 -96] -96]
Test Case:   5 | Input/Output: [[82 33 33 33] 33]
Test Case:   6 | Input/Output: [[-4 -4 -4 -51] -51]
Test Case:   7 | Input/Output: [[-29 19 -29 -29] -29]
Test Case:   8 | Input/Output: [[-88 25 25 25] -88]
Test Case:   9 | Input/Output: [[73 1 73 73] 1]
Test Case:  10 | Input/Output: [[-60 -61 -60 -60] -61]
Test Case:  11 | Input/Output: [[33 -10 33 33] -10]
Test Case:  12 | Input/Output: [[-100 -100 4 -100] -100]
Test Case:  13 | Input/Output: [[99 93 93 93] 93]
Test Case:  14 | Input/Output: [[-98 -24 -98 -98] -98]
Test Case:  15 | Input/Output: [[-60 8 -60 -60] -60]
Test Case:  16 | Input/Output: [[-31 9 9 9] -31]
Test Case:  17 | Input/Output: [[-23 -23 56 -23] -23]
Test Case:  18 | Input/Output: [[-21 -94 -21 -21] -94]
Test Case:  19 | Input/Output: [[-94 -90 -94 -94] -94]
Test Case:  20 | Input/Output: [[-11 -63 -63 -63] -63]
Test Case:  21 | Input/Output: [[59 59 59 8] 8]
Test Case:  22 | Input/Output: [[-96 -16 -16 -16] -96]
Test Case:  23 | Input/Output: [[-84 -84 -77 -84] -84]
Test Case:  24 | Input/Output: [[77 77 77 73] 73]
Test Case:  25 | Input/Output: [[53 53 53 12] 12]
Test Case:  26 | Input/Output: [[97 -58 97 97] -58]
Test Case:  27 | Input/Output: [[-72 -67 -67 -67] -72]
Test Case:  28 | Input/Output: [[75 79 79 79] 75]
Test Case:  29 | Input/Output: [[90 57 57 57] 57]
Test Case:  30 | Input/Output: [[100 100 -55 100] -55]
Test Case:  31 | Input/Output: [[35 35 35 10] 10]
Test Case:  32 | Input/Output: [[-9 11 -9 -9] -9]
Test Case:  33 | Input/Output: [[-35 -22 -35 -35] -35]
Test Case:  34 | Input/Output: [[-85 -85 21 -85] -85]
Test Case:  35 | Input/Output: [[75 -44 75 75] -44]
Test Case:  36 | Input/Output: [[-40 22 22 22] -40]
Test Case:  37 | Input/Output: [[-80 50 -80 -80] -80]
Test Case:  38 | Input/Output: [[62 -7 62 62] -7]
Test Case:  39 | Input/Output: [[-91 26 -91 -91] -91]
Test Case:  40 | Input/Output: [[-61 -61 -27 -61] -61]
Test Case:  41 | Input/Output: [[-77 99 99 99] -77]
Test Case:  42 | Input/Output: [[55 55 -60 55] -60]
Test Case:  43 | Input/Output: [[-56 15 15 15] -56]
Test Case:  44 | Input/Output: [[23 23 -4 23] -4]
Test Case:  45 | Input/Output: [[12 -28 -28 -28] -28]
Test Case:  46 | Input/Output: [[73 -95 -95 -95] -95]
Test Case:  47 | Input/Output: [[77 41 41 41] 41]
Test Case:  48 | Input/Output: [[42 42 42 -94] -94]
Test Case:  49 | Input/Output: [[-21 -73 -21 -21] -73]
Test Case:  50 | Input/Output: [[-26 77 77 77] -26]
Test Case:  51 | Input/Output: [[-65 -65 97 -65] -65]
Test Case:  52 | Input/Output: [[37 77 77 77] 37]
Test Case:  53 | Input/Output: [[-24 41 41 41] -24]
Test Case:  54 | Input/Output: [[-66 -66 -9 -66] -66]
Test Case:  55 | Input/Output: [[74 -16 74 74] -16]
Test Case:  56 | Input/Output: [[-9 -58 -9 -9] -58]
Test Case:  57 | Input/Output: [[70 70 -74 70] -74]
Test Case:  58 | Input/Output: [[18 70 18 18] 18]
Test Case:  59 | Input/Output: [[-76 -49 -49 -49] -76]
Test Case:  60 | Input/Output: [[-27 90 -27 -27] -27]
Test Case:  61 | Input/Output: [[-64 -64 -64 58] -64]
Test Case:  62 | Input/Output: [[-84 19 -84 -84] -84]
Test Case:  63 | Input/Output: [[3 3 3 -9] -9]
Test Case:  64 | Input/Output: [[-70 82 -70 -70] -70]
Test Case:  65 | Input/Output: [[18 18 -26 18] -26]
Test Case:  66 | Input/Output: [[2 2 2 -70] -70]
Test Case:  67 | Input/Output: [[-6 90 90 90] -6]
Test Case:  68 | Input/Output: [[-19 -19 -97 -19] -97]
Test Case:  69 | Input/Output: [[-75 -75 18 -75] -75]
Test Case:  70 | Input/Output: [[70 70 70 44] 44]
Test Case:  71 | Input/Output: [[24 -58 24 24] -58]
Test Case:  72 | Input/Output: [[-44 98 98 98] -44]
Test Case:  73 | Input/Output: [[11 -61 11 11] -61]
Test Case:  74 | Input/Output: [[-77 -77 26 -77] -77]
Test Case:  75 | Input/Output: [[7 7 -42 7] -42]
Test Case:  76 | Input/Output: [[28 28 28 12] 12]
Test Case:  77 | Input/Output: [[-90 -75 -75 -75] -90]
Test Case:  78 | Input/Output: [[-84 30 30 30] -84]
Test Case:  79 | Input/Output: [[59 59 99 59] 59]
Test Case:  80 | Input/Output: [[45 45 45 -37] -37]
Test Case:  81 | Input/Output: [[-51 -67 -67 -67] -67]
Test Case:  82 | Input/Output: [[17 -20 17 17] -20]
Test Case:  83 | Input/Output: [[88 -31 88 88] -31]
Test Case:  84 | Input/Output: [[19 19 19 40] 19]
Test Case:  85 | Input/Output: [[1 -19 -19 -19] -19]
Test Case:  86 | Input/Output: [[-66 79 79 79] -66]
Test Case:  87 | Input/Output: [[77 -22 77 77] -22]
Test Case:  88 | Input/Output: [[19 19 19 12] 12]
Test Case:  89 | Input/Output: [[33 -17 33 33] -17]
Test Case:  90 | Input/Output: [[-37 -37 -37 45] -37]
Test Case:  91 | Input/Output: [[-20 -16 -16 -16] -20]
Test Case:  92 | Input/Output: [[-83 -99 -99 -99] -99]
Test Case:  93 | Input/Output: [[69 22 22 22] 22]
Test Case:  94 | Input/Output: [[51 51 51 14] 14]
Test Case:  95 | Input/Output: [[-98 -24 -24 -24] -98]
Test Case:  96 | Input/Output: [[-69 -93 -93 -93] -93]
Test Case:  97 | Input/Output: [[4 4 -10 4] -10]
Test Case:  98 | Input/Output: [[81 81 81 -32] -32]
Test Case:  99 | Input/Output: [[-53 -53 13 -53] -53]
Test Case: 100 | Input/Output: [(15 15 15 15) 15]
Test Case: 101 | Input/Output: [(0 0 0 0) 0]
Test Case: 102 | Input/Output: [(41 41 41 41) 41]
Test Case: 103 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 104 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 105 | Input/Output: [(36 36 36 36) 36]
Test Case: 106 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 107 | Input/Output: [(59 59 59 59) 59]
Test Case: 108 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 109 | Input/Output: [(9 9 9 9) 9]
Test Case: 110 | Input/Output: [(91 91 91 91) 91]
Test Case: 111 | Input/Output: [(53 53 53 53) 53]
Test Case: 112 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 113 | Input/Output: [(16 16 16 16) 16]
Test Case: 114 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 115 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 116 | Input/Output: [(68 68 68 68) 68]
Test Case: 117 | Input/Output: [(53 53 53 53) 53]
Test Case: 118 | Input/Output: [(18 18 18 18) 18]
Test Case: 119 | Input/Output: [(54 54 54 54) 54]
Test Case: 120 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 121 | Input/Output: [(52 52 52 52) 52]
Test Case: 122 | Input/Output: [(90 90 90 90) 90]
Test Case: 123 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 124 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 125 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 126 | Input/Output: [(52 52 52 52) 52]
Test Case: 127 | Input/Output: [(38 38 38 38) 38]
Test Case: 128 | Input/Output: [(64 64 64 64) 64]
Test Case: 129 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 130 | Input/Output: [(93 93 93 93) 93]
Test Case: 131 | Input/Output: [(30 30 30 30) 30]
Test Case: 132 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 133 | Input/Output: [(23 23 23 23) 23]
Test Case: 134 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 135 | Input/Output: [(6 6 6 6) 6]
Test Case: 136 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 137 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 138 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 139 | Input/Output: [(86 86 86 86) 86]
Test Case: 140 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 141 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 142 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 143 | Input/Output: [(42 42 42 42) 42]
Test Case: 144 | Input/Output: [(63 63 63 63) 63]
Test Case: 145 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 146 | Input/Output: [(95 95 95 95) 95]
Test Case: 147 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 148 | Input/Output: [(40 40 40 40) 40]
Test Case: 149 | Input/Output: [(7 7 7 7) 7]
Test Case: 150 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 151 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 152 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 153 | Input/Output: [(46 46 46 46) 46]
Test Case: 154 | Input/Output: [(83 83 83 83) 83]
Test Case: 155 | Input/Output: [(83 83 83 83) 83]
Test Case: 156 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 157 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 158 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 159 | Input/Output: [(38 38 38 38) 38]
Test Case: 160 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 161 | Input/Output: [(21 21 21 21) 21]
Test Case: 162 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 163 | Input/Output: [(74 74 74 74) 74]
Test Case: 164 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 165 | Input/Output: [(68 68 68 68) 68]
Test Case: 166 | Input/Output: [(83 83 83 83) 83]
Test Case: 167 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 168 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 169 | Input/Output: [(40 40 40 40) 40]
Test Case: 170 | Input/Output: [(53 53 53 53) 53]
Test Case: 171 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 172 | Input/Output: [(23 23 23 23) 23]
Test Case: 173 | Input/Output: [(46 46 46 46) 46]
Test Case: 174 | Input/Output: [(80 80 80 80) 80]
Test Case: 175 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 176 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 177 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 178 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 179 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 180 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 181 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 182 | Input/Output: [(36 36 36 36) 36]
Test Case: 183 | Input/Output: [(28 28 28 28) 28]
Test Case: 184 | Input/Output: [(90 90 90 90) 90]
Test Case: 185 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 186 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 187 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 188 | Input/Output: [(45 45 45 45) 45]
Test Case: 189 | Input/Output: [(69 69 69 69) 69]
Test Case: 190 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 191 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 192 | Input/Output: [(64 64 64 64) 64]
Test Case: 193 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 194 | Input/Output: [(53 53 53 53) 53]
Test Case: 195 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 196 | Input/Output: [(34 34 34 34) 34]
Test Case: 197 | Input/Output: [(36 36 36 36) 36]
Test Case: 198 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 199 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 200 | Input/Output: [(30 68 68 29) 29]
Test Case: 201 | Input/Output: [(7 15 50 15) 7]
Test Case: 202 | Input/Output: [(57 22 20 34) 20]
Test Case: 203 | Input/Output: [(70 4 4 95) 4]
Test Case: 204 | Input/Output: [(71 76 40 49) 40]
Test Case: 205 | Input/Output: [(37 20 6 1) 1]
Test Case: 206 | Input/Output: [(6 97 16 19) 6]
Test Case: 207 | Input/Output: [(4 29 40 42) 4]
Test Case: 208 | Input/Output: [(33 93 47 77) 33]
Test Case: 209 | Input/Output: [(36 19 23 79) 19]
Test Case: 210 | Input/Output: [(65 20 59 37) 20]
Test Case: 211 | Input/Output: [(61 4 3 47) 3]
Test Case: 212 | Input/Output: [(54 98 88 36) 36]
Test Case: 213 | Input/Output: [(60 14 55 91) 14]
Test Case: 214 | Input/Output: [(16 62 6 64) 6]
Test Case: 215 | Input/Output: [(29 47 74 0) 0]
Test Case: 216 | Input/Output: [(18 21 49 6) 6]
Test Case: 217 | Input/Output: [(77 30 38 98) 30]
Test Case: 218 | Input/Output: [(59 18 2 44) 2]
Test Case: 219 | Input/Output: [(73 15 14 83) 14]
Test Case: 220 | Input/Output: [(49 21 99 10) 10]
Test Case: 221 | Input/Output: [(84 22 64 21) 21]
Test Case: 222 | Input/Output: [(32 16 20 72) 16]
Test Case: 223 | Input/Output: [(6 33 62 100) 6]
Test Case: 224 | Input/Output: [(28 55 8 82) 8]
Test Case: 225 | Input/Output: [(49 39 68 38) 38]
Test Case: 226 | Input/Output: [(95 2 24 43) 2]
Test Case: 227 | Input/Output: [(78 79 18 27) 18]
Test Case: 228 | Input/Output: [(13 21 28 26) 13]
Test Case: 229 | Input/Output: [(54 43 94 75) 43]
Test Case: 230 | Input/Output: [(50 99 30 4) 4]
Test Case: 231 | Input/Output: [(45 19 44 4) 4]
Test Case: 232 | Input/Output: [(62 1 55 44) 1]
Test Case: 233 | Input/Output: [(65 76 94 85) 65]
Test Case: 234 | Input/Output: [(10 75 13 12) 10]
Test Case: 235 | Input/Output: [(53 26 17 55) 17]
Test Case: 236 | Input/Output: [(30 63 8 80) 8]
Test Case: 237 | Input/Output: [(44 50 49 7) 7]
Test Case: 238 | Input/Output: [(81 86 78 14) 14]
Test Case: 239 | Input/Output: [(3 71 1 39) 1]
Test Case: 240 | Input/Output: [(74 84 39 28) 28]
Test Case: 241 | Input/Output: [(47 64 46 33) 33]
Test Case: 242 | Input/Output: [(85 66 2 64) 2]
Test Case: 243 | Input/Output: [(90 4 11 44) 4]
Test Case: 244 | Input/Output: [(76 57 63 80) 57]
Test Case: 245 | Input/Output: [(26 42 32 29) 26]
Test Case: 246 | Input/Output: [(52 37 2 15) 2]
Test Case: 247 | Input/Output: [(49 88 1 39) 1]
Test Case: 248 | Input/Output: [(60 29 63 78) 29]
Test Case: 249 | Input/Output: [(25 93 37 77) 25]
Test Case: 250 | Input/Output: [(32 37 5 80) 5]
Test Case: 251 | Input/Output: [(82 77 81 24) 24]
Test Case: 252 | Input/Output: [(23 25 89 70) 23]
Test Case: 253 | Input/Output: [(49 4 22 74) 4]
Test Case: 254 | Input/Output: [(0 83 42 40) 0]
Test Case: 255 | Input/Output: [(4 61 21 3) 3]
Test Case: 256 | Input/Output: [(93 43 2 14) 2]
Test Case: 257 | Input/Output: [(8 57 20 15) 8]
Test Case: 258 | Input/Output: [(46 78 83 73) 46]
Test Case: 259 | Input/Output: [(14 55 14 90) 14]
Test Case: 260 | Input/Output: [(49 16 77 14) 14]
Test Case: 261 | Input/Output: [(80 23 21 79) 21]
Test Case: 262 | Input/Output: [(70 80 79 79) 70]
Test Case: 263 | Input/Output: [(8 34 12 2) 2]
Test Case: 264 | Input/Output: [(70 79 37 5) 5]
Test Case: 265 | Input/Output: [(67 99 66 42) 42]
Test Case: 266 | Input/Output: [(39 10 62 60) 10]
Test Case: 267 | Input/Output: [(96 63 64 100) 63]
Test Case: 268 | Input/Output: [(43 32 96 72) 32]
Test Case: 269 | Input/Output: [(21 42 65 67) 21]
Test Case: 270 | Input/Output: [(47 37 97 40) 37]
Test Case: 271 | Input/Output: [(85 42 36 10) 10]
Test Case: 272 | Input/Output: [(74 57 75 49) 49]
Test Case: 273 | Input/Output: [(3 58 67 81) 3]
Test Case: 274 | Input/Output: [(43 46 3 70) 3]
Test Case: 275 | Input/Output: [(55 15 27 66) 15]
Test Case: 276 | Input/Output: [(100 41 22 54) 22]
Test Case: 277 | Input/Output: [(68 81 84 75) 68]
Test Case: 278 | Input/Output: [(15 82 99 78) 15]
Test Case: 279 | Input/Output: [(51 14 55 49) 14]
Test Case: 280 | Input/Output: [(85 1 83 82) 1]
Test Case: 281 | Input/Output: [(9 68 4 7) 4]
Test Case: 282 | Input/Output: [(80 16 8 92) 8]
Test Case: 283 | Input/Output: [(63 67 37 18) 18]
Test Case: 284 | Input/Output: [(20 89 8 71) 8]
Test Case: 285 | Input/Output: [(9 29 30 61) 9]
Test Case: 286 | Input/Output: [(53 25 18 12) 12]
Test Case: 287 | Input/Output: [(3 46 37 11) 3]
Test Case: 288 | Input/Output: [(84 62 94 74) 62]
Test Case: 289 | Input/Output: [(96 11 27 50) 11]
Test Case: 290 | Input/Output: [(29 31 50 2) 2]
Test Case: 291 | Input/Output: [(32 98 51 65) 32]
Test Case: 292 | Input/Output: [(3 70 26 61) 3]
Test Case: 293 | Input/Output: [(20 42 75 48) 20]
Test Case: 294 | Input/Output: [(95 47 34 64) 34]
Test Case: 295 | Input/Output: [(28 13 89 23) 13]
Test Case: 296 | Input/Output: [(56 2 18 65) 2]
Test Case: 297 | Input/Output: [(41 68 58 12) 12]
Test Case: 298 | Input/Output: [(0 35 20 20) 0]
Test Case: 299 | Input/Output: [(6 52 6 46) 6]
Test Case: 300 | Input/Output: [(73 88 75 34) 34]
Test Case: 301 | Input/Output: [(23 28 16 65) 16]
Test Case: 302 | Input/Output: [(9 78 89 24) 9]
Test Case: 303 | Input/Output: [(78 29 63 92) 29]
Test Case: 304 | Input/Output: [(79 54 47 5) 5]
Test Case: 305 | Input/Output: [(34 68 74 20) 20]
Test Case: 306 | Input/Output: [(39 33 73 34) 33]
Test Case: 307 | Input/Output: [(96 99 75 25) 25]
Test Case: 308 | Input/Output: [(31 24 59 87) 24]
Test Case: 309 | Input/Output: [(6 76 39 84) 6]
Test Case: 310 | Input/Output: [(70 89 8 25) 8]
Test Case: 311 | Input/Output: [(86 11 69 13) 11]
Test Case: 312 | Input/Output: [(18 89 79 53) 18]
Test Case: 313 | Input/Output: [(79 5 27 65) 5]
Test Case: 314 | Input/Output: [(31 54 36 49) 31]
Test Case: 315 | Input/Output: [(23 47 18 55) 18]
Test Case: 316 | Input/Output: [(11 19 79 52) 11]
Test Case: 317 | Input/Output: [(60 22 66 18) 18]
Test Case: 318 | Input/Output: [(15 99 33 44) 15]
Test Case: 319 | Input/Output: [(70 54 83 26) 26]
Test Case: 320 | Input/Output: [(39 98 18 38) 18]
Test Case: 321 | Input/Output: [(69 36 75 29) 29]
Test Case: 322 | Input/Output: [(93 31 63 78) 31]
Test Case: 323 | Input/Output: [(24 61 60 35) 24]
Test Case: 324 | Input/Output: [(60 7 78 96) 7]
Test Case: 325 | Input/Output: [(12 80 50 11) 11]
Test Case: 326 | Input/Output: [(69 79 25 26) 25]
Test Case: 327 | Input/Output: [(49 49 54 77) 49]
Test Case: 328 | Input/Output: [(75 25 30 30) 25]
Test Case: 329 | Input/Output: [(69 10 45 97) 10]
Test Case: 330 | Input/Output: [(49 9 84 60) 9]
Test Case: 331 | Input/Output: [(19 92 54 95) 19]
Test Case: 332 | Input/Output: [(75 41 58 88) 41]
Test Case: 333 | Input/Output: [(36 7 77 3) 3]
Test Case: 334 | Input/Output: [(50 26 75 13) 13]
Test Case: 335 | Input/Output: [(89 37 86 62) 37]
Test Case: 336 | Input/Output: [(60 66 27 14) 14]
Test Case: 337 | Input/Output: [(34 24 61 88) 24]
Test Case: 338 | Input/Output: [(69 85 63 57) 57]
Test Case: 339 | Input/Output: [(52 88 51 0) 0]
Test Case: 340 | Input/Output: [(67 66 28 90) 28]
Test Case: 341 | Input/Output: [(61 52 8 6) 6]
Test Case: 342 | Input/Output: [(99 18 53 59) 18]
Test Case: 343 | Input/Output: [(22 65 96 15) 15]
Test Case: 344 | Input/Output: [(17 39 63 67) 17]
Test Case: 345 | Input/Output: [(95 32 67 19) 19]
Test Case: 346 | Input/Output: [(21 100 60 69) 21]
Test Case: 347 | Input/Output: [(9 70 17 58) 9]
Test Case: 348 | Input/Output: [(45 7 3 50) 3]
Test Case: 349 | Input/Output: [(81 76 29 68) 29]
Test Case: 350 | Input/Output: [(42 64 37 40) 37]
Test Case: 351 | Input/Output: [(79 37 15 99) 15]
Test Case: 352 | Input/Output: [(33 87 29 53) 29]
Test Case: 353 | Input/Output: [(22 66 15 22) 15]
Test Case: 354 | Input/Output: [(12 39 67 91) 12]
Test Case: 355 | Input/Output: [(55 42 75 57) 42]
Test Case: 356 | Input/Output: [(43 25 18 40) 18]
Test Case: 357 | Input/Output: [(52 6 14 99) 6]
Test Case: 358 | Input/Output: [(4 81 92 75) 4]
Test Case: 359 | Input/Output: [(72 52 15 63) 15]
Test Case: 360 | Input/Output: [(84 49 41 38) 38]
Test Case: 361 | Input/Output: [(25 17 85 42) 17]
Test Case: 362 | Input/Output: [(76 64 73 2) 2]
Test Case: 363 | Input/Output: [(61 80 42 80) 42]
Test Case: 364 | Input/Output: [(57 98 73 51) 51]
Test Case: 365 | Input/Output: [(100 92 74 34) 34]
Test Case: 366 | Input/Output: [(15 70 55 23) 15]
Test Case: 367 | Input/Output: [(85 100 74 78) 74]
Test Case: 368 | Input/Output: [(88 93 92 12) 12]
Test Case: 369 | Input/Output: [(53 86 46 18) 18]
Test Case: 370 | Input/Output: [(78 24 52 48) 24]
Test Case: 371 | Input/Output: [(36 54 31 60) 31]
Test Case: 372 | Input/Output: [(15 34 35 52) 15]
Test Case: 373 | Input/Output: [(24 59 39 10) 10]
Test Case: 374 | Input/Output: [(63 4 98 87) 4]
Test Case: 375 | Input/Output: [(53 55 21 0) 0]
Test Case: 376 | Input/Output: [(96 83 70 66) 66]
Test Case: 377 | Input/Output: [(58 9 63 96) 9]
Test Case: 378 | Input/Output: [(99 79 44 3) 3]
Test Case: 379 | Input/Output: [(29 8 9 31) 8]
Test Case: 380 | Input/Output: [(78 13 68 37) 13]
Test Case: 381 | Input/Output: [(5 37 13 70) 5]
Test Case: 382 | Input/Output: [(28 50 74 18) 18]
Test Case: 383 | Input/Output: [(74 16 46 98) 16]
Test Case: 384 | Input/Output: [(56 43 92 22) 22]
Test Case: 385 | Input/Output: [(85 52 74 63) 52]
Test Case: 386 | Input/Output: [(72 41 56 97) 41]
Test Case: 387 | Input/Output: [(81 84 47 57) 47]
Test Case: 388 | Input/Output: [(95 14 59 2) 2]
Test Case: 389 | Input/Output: [(34 17 6 0) 0]
Test Case: 390 | Input/Output: [(22 99 20 94) 20]
Test Case: 391 | Input/Output: [(50 30 71 98) 30]
Test Case: 392 | Input/Output: [(35 26 69 74) 26]
Test Case: 393 | Input/Output: [(23 52 56 94) 23]
Test Case: 394 | Input/Output: [(45 32 60 70) 32]
Test Case: 395 | Input/Output: [(43 80 51 57) 43]
Test Case: 396 | Input/Output: [(4 20 16 29) 4]
Test Case: 397 | Input/Output: [(94 46 64 63) 46]
Test Case: 398 | Input/Output: [(80 76 53 84) 53]
Test Case: 399 | Input/Output: [(25 14 80 55) 14]
Test Case: 400 | Input/Output: [(-8 -4 -9 -5) -9]
Test Case: 401 | Input/Output: [(-48 90 -72 -19) -72]
Test Case: 402 | Input/Output: [(18 8 -94 80) -94]
Test Case: 403 | Input/Output: [(-20 -86 5 85) -86]
Test Case: 404 | Input/Output: [(-59 23 -73 -38) -73]
Test Case: 405 | Input/Output: [(62 -96 7 39) -96]
Test Case: 406 | Input/Output: [(-75 -82 16 9) -82]
Test Case: 407 | Input/Output: [(21 -74 53 88) -74]
Test Case: 408 | Input/Output: [(58 -80 81 58) -80]
Test Case: 409 | Input/Output: [(-71 -11 -37 91) -71]
Test Case: 410 | Input/Output: [(71 -90 66 49) -90]
Test Case: 411 | Input/Output: [(-84 12 64 10) -84]
Test Case: 412 | Input/Output: [(-78 -66 83 1) -78]
Test Case: 413 | Input/Output: [(-82 64 25 -38) -82]
Test Case: 414 | Input/Output: [(-36 -86 -71 28) -86]
Test Case: 415 | Input/Output: [(-22 65 80 41) -22]
Test Case: 416 | Input/Output: [(-81 94 -7 -65) -81]
Test Case: 417 | Input/Output: [(53 -26 35 35) -26]
Test Case: 418 | Input/Output: [(-44 81 71 -47) -47]
Test Case: 419 | Input/Output: [(82 42 -3 -84) -84]
Test Case: 420 | Input/Output: [(6 57 -48 75) -48]
Test Case: 421 | Input/Output: [(13 36 -99 64) -99]
Test Case: 422 | Input/Output: [(57 54 -74 -95) -95]
Test Case: 423 | Input/Output: [(-9 41 21 -36) -36]
Test Case: 424 | Input/Output: [(-95 -10 58 -61) -95]
Test Case: 425 | Input/Output: [(-26 15 76 67) -26]
Test Case: 426 | Input/Output: [(-33 -94 -35 -30) -94]
Test Case: 427 | Input/Output: [(54 66 -57 -99) -99]
Test Case: 428 | Input/Output: [(86 94 81 -44) -44]
Test Case: 429 | Input/Output: [(-97 -16 98 51) -97]
Test Case: 430 | Input/Output: [(91 -71 -81 -11) -81]
Test Case: 431 | Input/Output: [(54 10 -25 35) -25]
Test Case: 432 | Input/Output: [(-69 -43 -94 63) -94]
Test Case: 433 | Input/Output: [(57 -25 0 -70) -70]
Test Case: 434 | Input/Output: [(-43 43 29 14) -43]
Test Case: 435 | Input/Output: [(58 12 91 60) 12]
Test Case: 436 | Input/Output: [(30 -16 12 22) -16]
Test Case: 437 | Input/Output: [(-82 -96 -70 16) -96]
Test Case: 438 | Input/Output: [(-74 -92 77 58) -92]
Test Case: 439 | Input/Output: [(91 -31 -26 31) -31]
Test Case: 440 | Input/Output: [(18 -77 87 -70) -77]
Test Case: 441 | Input/Output: [(90 43 30 97) 30]
Test Case: 442 | Input/Output: [(23 67 -49 85) -49]
Test Case: 443 | Input/Output: [(70 -17 90 58) -17]
Test Case: 444 | Input/Output: [(-26 -12 82 -92) -92]
Test Case: 445 | Input/Output: [(-58 44 -29 -43) -58]
Test Case: 446 | Input/Output: [(83 14 -32 -75) -75]
Test Case: 447 | Input/Output: [(24 -54 -48 95) -54]
Test Case: 448 | Input/Output: [(26 90 76 58) 26]
Test Case: 449 | Input/Output: [(25 84 91 -70) -70]
Test Case: 450 | Input/Output: [(-31 -94 25 -89) -94]
Test Case: 451 | Input/Output: [(-41 -26 -79 49) -79]
Test Case: 452 | Input/Output: [(93 48 40 38) 38]
Test Case: 453 | Input/Output: [(8 61 -42 96) -42]
Test Case: 454 | Input/Output: [(67 6 85 -99) -99]
Test Case: 455 | Input/Output: [(85 -39 60 41) -39]
Test Case: 456 | Input/Output: [(-51 -75 -91 -73) -91]
Test Case: 457 | Input/Output: [(15 91 -93 23) -93]
Test Case: 458 | Input/Output: [(92 63 -12 89) -12]
Test Case: 459 | Input/Output: [(-10 -86 -3 40) -86]
Test Case: 460 | Input/Output: [(76 -75 -90 -13) -90]
Test Case: 461 | Input/Output: [(22 -33 14 -89) -89]
Test Case: 462 | Input/Output: [(-91 -45 -4 48) -91]
Test Case: 463 | Input/Output: [(-74 41 -8 27) -74]
Test Case: 464 | Input/Output: [(65 63 -84 36) -84]
Test Case: 465 | Input/Output: [(-26 31 81 -52) -52]
Test Case: 466 | Input/Output: [(-90 52 -59 -57) -90]
Test Case: 467 | Input/Output: [(-92 81 -66 -90) -92]
Test Case: 468 | Input/Output: [(-25 7 -9 76) -25]
Test Case: 469 | Input/Output: [(24 22 -3 -29) -29]
Test Case: 470 | Input/Output: [(-43 -16 86 -74) -74]
Test Case: 471 | Input/Output: [(94 50 18 81) 18]
Test Case: 472 | Input/Output: [(-8 35 6 -15) -15]
Test Case: 473 | Input/Output: [(6 -57 -1 84) -57]
Test Case: 474 | Input/Output: [(50 -12 -37 -10) -37]
Test Case: 475 | Input/Output: [(-57 57 -73 33) -73]
Test Case: 476 | Input/Output: [(-2 -80 93 -81) -81]
Test Case: 477 | Input/Output: [(-70 -43 -37 -67) -70]
Test Case: 478 | Input/Output: [(-3 -2 44 52) -3]
Test Case: 479 | Input/Output: [(-74 13 -64 45) -74]
Test Case: 480 | Input/Output: [(-29 -65 -19 14) -65]
Test Case: 481 | Input/Output: [(-43 85 53 46) -43]
Test Case: 482 | Input/Output: [(44 -66 55 67) -66]
Test Case: 483 | Input/Output: [(-74 -60 -56 62) -74]
Test Case: 484 | Input/Output: [(19 -76 -1 48) -76]
Test Case: 485 | Input/Output: [(27 -15 10 -3) -15]
Test Case: 486 | Input/Output: [(-80 89 -92 72) -92]
Test Case: 487 | Input/Output: [(9 39 37 19) 9]
Test Case: 488 | Input/Output: [(47 -27 -46 -20) -46]
Test Case: 489 | Input/Output: [(-94 0 40 -22) -94]
Test Case: 490 | Input/Output: [(-29 16 91 99) -29]
Test Case: 491 | Input/Output: [(-54 -8 -70 -88) -88]
Test Case: 492 | Input/Output: [(-30 37 -28 -85) -85]
Test Case: 493 | Input/Output: [(-88 6 -31 83) -88]
Test Case: 494 | Input/Output: [(-1 -3 30 25) -3]
Test Case: 495 | Input/Output: [(-38 -52 17 -64) -64]
Test Case: 496 | Input/Output: [(43 84 14 94) 14]
Test Case: 497 | Input/Output: [(59 -89 48 93) -89]
Test Case: 498 | Input/Output: [(6 -42 -31 72) -42]
Test Case: 499 | Input/Output: [(-88 -62 -13 44) -88]
Test Case: 500 | Input/Output: [(85 -98 100 -35) -98]
Test Case: 501 | Input/Output: [(61 59 -30 84) -30]
Test Case: 502 | Input/Output: [(59 38 -86 -78) -86]
Test Case: 503 | Input/Output: [(-37 -60 -94 84) -94]
Test Case: 504 | Input/Output: [(38 85 45 -52) -52]
Test Case: 505 | Input/Output: [(-42 -36 55 -96) -96]
Test Case: 506 | Input/Output: [(87 96 -99 -49) -99]
Test Case: 507 | Input/Output: [(15 20 96 -27) -27]
Test Case: 508 | Input/Output: [(-62 76 -24 -68) -68]
Test Case: 509 | Input/Output: [(9 27 55 10) 9]
Test Case: 510 | Input/Output: [(7 68 37 -41) -41]
Test Case: 511 | Input/Output: [(17 -52 49 -93) -93]
Test Case: 512 | Input/Output: [(89 26 -84 -55) -84]
Test Case: 513 | Input/Output: [(-28 -30 93 39) -30]
Test Case: 514 | Input/Output: [(75 -9 73 75) -9]
Test Case: 515 | Input/Output: [(95 -31 -53 62) -53]
Test Case: 516 | Input/Output: [(-5 -78 89 -76) -78]
Test Case: 517 | Input/Output: [(80 18 8 -64) -64]
Test Case: 518 | Input/Output: [(11 49 44 38) 11]
Test Case: 519 | Input/Output: [(58 85 -85 20) -85]
Test Case: 520 | Input/Output: [(75 61 44 24) 24]
Test Case: 521 | Input/Output: [(-55 44 66 -89) -89]
Test Case: 522 | Input/Output: [(74 -72 -67 40) -72]
Test Case: 523 | Input/Output: [(-70 29 12 80) -70]
Test Case: 524 | Input/Output: [(-47 25 71 -60) -60]
Test Case: 525 | Input/Output: [(-76 -51 26 -73) -76]
Test Case: 526 | Input/Output: [(-3 -95 -49 -4) -95]
Test Case: 527 | Input/Output: [(-25 11 -69 43) -69]
Test Case: 528 | Input/Output: [(-35 33 -98 -74) -98]
Test Case: 529 | Input/Output: [(26 71 80 22) 22]
Test Case: 530 | Input/Output: [(-21 -12 64 19) -21]
Test Case: 531 | Input/Output: [(91 50 -99 27) -99]
Test Case: 532 | Input/Output: [(14 5 90 6) 5]
Test Case: 533 | Input/Output: [(-79 -24 -63 -92) -92]
Test Case: 534 | Input/Output: [(44 31 -32 40) -32]
Test Case: 535 | Input/Output: [(63 77 58 89) 58]
Test Case: 536 | Input/Output: [(94 99 -45 0) -45]
Test Case: 537 | Input/Output: [(-46 -85 -68 46) -85]
Test Case: 538 | Input/Output: [(-37 34 -9 19) -37]
Test Case: 539 | Input/Output: [(55 38 -45 68) -45]
Test Case: 540 | Input/Output: [(9 -76 -12 49) -76]
Test Case: 541 | Input/Output: [(-34 89 21 -34) -34]
Test Case: 542 | Input/Output: [(26 90 44 5) 5]
Test Case: 543 | Input/Output: [(-58 61 -48 75) -58]
Test Case: 544 | Input/Output: [(71 -49 -14 78) -49]
Test Case: 545 | Input/Output: [(3 15 20 31) 3]
Test Case: 546 | Input/Output: [(-15 21 -97 -38) -97]
Test Case: 547 | Input/Output: [(-31 -65 -76 -33) -76]
Test Case: 548 | Input/Output: [(-53 -48 84 63) -53]
Test Case: 549 | Input/Output: [(92 14 25 21) 14]
Test Case: 550 | Input/Output: [(-29 -82 -81 49) -82]
Test Case: 551 | Input/Output: [(-16 -63 -40 83) -63]
Test Case: 552 | Input/Output: [(19 -17 -99 50) -99]
Test Case: 553 | Input/Output: [(-36 -31 90 6) -36]
Test Case: 554 | Input/Output: [(-76 -3 -68 -1) -76]
Test Case: 555 | Input/Output: [(-36 63 68 -59) -59]
Test Case: 556 | Input/Output: [(2 -65 -15 -16) -65]
Test Case: 557 | Input/Output: [(-47 73 22 -55) -55]
Test Case: 558 | Input/Output: [(33 -67 -89 79) -89]
Test Case: 559 | Input/Output: [(15 -90 -33 -97) -97]
Test Case: 560 | Input/Output: [(71 -32 67 69) -32]
Test Case: 561 | Input/Output: [(60 93 -53 10) -53]
Test Case: 562 | Input/Output: [(49 8 -54 -5) -54]
Test Case: 563 | Input/Output: [(-7 5 -20 12) -20]
Test Case: 564 | Input/Output: [(79 -22 -10 -31) -31]
Test Case: 565 | Input/Output: [(-55 34 68 -38) -55]
Test Case: 566 | Input/Output: [(-50 -99 -46 -18) -99]
Test Case: 567 | Input/Output: [(99 -63 -45 52) -63]
Test Case: 568 | Input/Output: [(88 -62 76 66) -62]
Test Case: 569 | Input/Output: [(36 86 -90 -40) -90]
Test Case: 570 | Input/Output: [(-96 -57 -68 17) -96]
Test Case: 571 | Input/Output: [(86 -59 -47 77) -59]
Test Case: 572 | Input/Output: [(-95 -32 -50 -43) -95]
Test Case: 573 | Input/Output: [(52 56 81 3) 3]
Test Case: 574 | Input/Output: [(-39 -7 -6 -47) -47]
Test Case: 575 | Input/Output: [(54 -44 -84 65) -84]
Test Case: 576 | Input/Output: [(-32 -18 -27 -45) -45]
Test Case: 577 | Input/Output: [(-70 -15 -72 -70) -72]
Test Case: 578 | Input/Output: [(45 -49 -56 59) -56]
Test Case: 579 | Input/Output: [(33 30 85 59) 30]
Test Case: 580 | Input/Output: [(35 100 89 65) 35]
Test Case: 581 | Input/Output: [(-79 -32 -13 -50) -79]
Test Case: 582 | Input/Output: [(93 87 -22 -37) -37]
Test Case: 583 | Input/Output: [(-86 -23 19 40) -86]
Test Case: 584 | Input/Output: [(-17 35 -44 -71) -71]
Test Case: 585 | Input/Output: [(-22 -48 91 -12) -48]
Test Case: 586 | Input/Output: [(73 -81 25 -52) -81]
Test Case: 587 | Input/Output: [(-84 -78 -11 -52) -84]
Test Case: 588 | Input/Output: [(74 -56 97 66) -56]
Test Case: 589 | Input/Output: [(33 -11 -39 -48) -48]
Test Case: 590 | Input/Output: [(-94 -92 -46 44) -94]
Test Case: 591 | Input/Output: [(28 45 -40 70) -40]
Test Case: 592 | Input/Output: [(62 63 -29 8) -29]
Test Case: 593 | Input/Output: [(43 57 -8 52) -8]
Test Case: 594 | Input/Output: [(-50 83 -16 8) -50]
Test Case: 595 | Input/Output: [(79 -39 76 -28) -39]
Test Case: 596 | Input/Output: [(-68 63 70 -17) -68]
Test Case: 597 | Input/Output: [(-31 66 49 -43) -43]
Test Case: 598 | Input/Output: [(-5 30 -73 -7) -73]
Test Case: 599 | Input/Output: [(13 98 82 -43) -43]
Test Case: 600 | Input/Output: [(32 -3 44 -71) -71]
Test Case: 601 | Input/Output: [(-55 39 -52 -93) -93]
Test Case: 602 | Input/Output: [(78 70 -66 92) -66]
Test Case: 603 | Input/Output: [(-10 -46 2 37) -46]
Test Case: 604 | Input/Output: [(13 4 87 83) 4]
Test Case: 605 | Input/Output: [(72 -83 -91 -66) -91]
Test Case: 606 | Input/Output: [(-81 -86 -35 -23) -86]
Test Case: 607 | Input/Output: [(78 56 70 64) 56]
Test Case: 608 | Input/Output: [(-12 -89 -46 100) -89]
Test Case: 609 | Input/Output: [(-31 44 -38 69) -38]
Test Case: 610 | Input/Output: [(-2 -98 56 3) -98]
Test Case: 611 | Input/Output: [(-44 -91 27 79) -91]
Test Case: 612 | Input/Output: [(5 -2 -68 4) -68]
Test Case: 613 | Input/Output: [(16 92 -39 68) -39]
Test Case: 614 | Input/Output: [(-57 14 10 -39) -57]
Test Case: 615 | Input/Output: [(28 93 8 71) 8]
Test Case: 616 | Input/Output: [(-36 74 -12 59) -36]
Test Case: 617 | Input/Output: [(98 0 11 69) 0]
Test Case: 618 | Input/Output: [(88 -97 39 17) -97]
Test Case: 619 | Input/Output: [(33 87 72 0) 0]
Test Case: 620 | Input/Output: [(-65 -30 -16 -26) -65]
Test Case: 621 | Input/Output: [(-31 -47 8 38) -47]
Test Case: 622 | Input/Output: [(-13 -38 99 76) -38]
Test Case: 623 | Input/Output: [(80 -92 66 -69) -92]
Test Case: 624 | Input/Output: [(50 30 -96 -7) -96]
Test Case: 625 | Input/Output: [(-38 -60 61 -57) -60]
Test Case: 626 | Input/Output: [(73 -86 27 -21) -86]
Test Case: 627 | Input/Output: [(-4 -34 69 -27) -34]
Test Case: 628 | Input/Output: [(-28 53 10 86) -28]
Test Case: 629 | Input/Output: [(-64 -34 25 -81) -81]
Test Case: 630 | Input/Output: [(68 61 -88 -30) -88]
Test Case: 631 | Input/Output: [(45 27 -20 -64) -64]
Test Case: 632 | Input/Output: [(-8 47 -63 -79) -79]
Test Case: 633 | Input/Output: [(78 21 -94 17) -94]
Test Case: 634 | Input/Output: [(-25 64 -43 68) -43]
Test Case: 635 | Input/Output: [(37 39 -99 -69) -99]
Test Case: 636 | Input/Output: [(-49 38 -43 12) -49]
Test Case: 637 | Input/Output: [(31 33 -11 -46) -46]
Test Case: 638 | Input/Output: [(88 -79 -56 -72) -79]
Test Case: 639 | Input/Output: [(40 -86 16 -80) -86]
Test Case: 640 | Input/Output: [(-59 -60 69 -41) -60]
Test Case: 641 | Input/Output: [(23 -5 -34 -53) -53]
Test Case: 642 | Input/Output: [(96 -4 51 39) -4]
Test Case: 643 | Input/Output: [(60 -49 25 -29) -49]
Test Case: 644 | Input/Output: [(-74 62 -92 -62) -92]
Test Case: 645 | Input/Output: [(-42 48 -84 -87) -87]
Test Case: 646 | Input/Output: [(99 10 -22 -95) -95]
Test Case: 647 | Input/Output: [(57 95 16 10) 10]
Test Case: 648 | Input/Output: [(95 87 18 92) 18]
Test Case: 649 | Input/Output: [(92 92 55 68) 55]
Test Case: 650 | Input/Output: [(62 -74 6 90) -74]
Test Case: 651 | Input/Output: [(-71 15 98 2) -71]
Test Case: 652 | Input/Output: [(-2 36 -78 -94) -94]
Test Case: 653 | Input/Output: [(92 25 -100 -36) -100]
Test Case: 654 | Input/Output: [(71 -62 -54 40) -62]
Test Case: 655 | Input/Output: [(48 43 74 -5) -5]
Test Case: 656 | Input/Output: [(-30 29 -73 63) -73]
Test Case: 657 | Input/Output: [(62 -7 -69 -85) -85]
Test Case: 658 | Input/Output: [(84 98 -62 -11) -62]
Test Case: 659 | Input/Output: [(17 -29 38 43) -29]
Test Case: 660 | Input/Output: [(16 -75 -60 70) -75]
Test Case: 661 | Input/Output: [(-55 19 15 -25) -55]
Test Case: 662 | Input/Output: [(-29 73 -98 64) -98]
Test Case: 663 | Input/Output: [(-83 55 -92 -57) -92]
Test Case: 664 | Input/Output: [(-49 -31 32 79) -49]
Test Case: 665 | Input/Output: [(-69 -87 -37 -18) -87]
Test Case: 666 | Input/Output: [(88 96 82 -7) -7]
Test Case: 667 | Input/Output: [(-2 75 98 19) -2]
Test Case: 668 | Input/Output: [(78 77 88 93) 77]
Test Case: 669 | Input/Output: [(-32 28 -30 -92) -92]
Test Case: 670 | Input/Output: [(72 20 -79 16) -79]
Test Case: 671 | Input/Output: [(97 -31 82 -15) -31]
Test Case: 672 | Input/Output: [(63 98 1 80) 1]
Test Case: 673 | Input/Output: [(-36 27 78 21) -36]
Test Case: 674 | Input/Output: [(50 31 -32 60) -32]
Test Case: 675 | Input/Output: [(-28 61 5 35) -28]
Test Case: 676 | Input/Output: [(37 -24 -39 -100) -100]
Test Case: 677 | Input/Output: [(40 -80 -67 -81) -81]
Test Case: 678 | Input/Output: [(-45 -52 8 2) -52]
Test Case: 679 | Input/Output: [(-80 13 -18 21) -80]
Test Case: 680 | Input/Output: [(-10 81 73 -71) -71]
Test Case: 681 | Input/Output: [(89 0 47 -99) -99]
Test Case: 682 | Input/Output: [(-9 -46 -4 -9) -46]
Test Case: 683 | Input/Output: [(-90 -75 -25 86) -90]
Test Case: 684 | Input/Output: [(-88 -75 -68 -7) -88]
Test Case: 685 | Input/Output: [(27 13 91 -62) -62]
Test Case: 686 | Input/Output: [(52 77 10 -91) -91]
Test Case: 687 | Input/Output: [(-97 -50 -80 72) -97]
Test Case: 688 | Input/Output: [(25 43 -14 -80) -80]
Test Case: 689 | Input/Output: [(52 -59 -3 -45) -59]
Test Case: 690 | Input/Output: [(-31 77 37 15) -31]
Test Case: 691 | Input/Output: [(-92 60 -56 43) -92]
Test Case: 692 | Input/Output: [(49 -50 -92 49) -92]
Test Case: 693 | Input/Output: [(76 -63 36 79) -63]
Test Case: 694 | Input/Output: [(-72 -91 -67 50) -91]
Test Case: 695 | Input/Output: [(-12 78 47 -54) -54]
Test Case: 696 | Input/Output: [(45 23 -5 2) -5]
Test Case: 697 | Input/Output: [(24 -27 -60 -73) -73]
Test Case: 698 | Input/Output: [(75 -100 -32 -72) -100]
Test Case: 699 | Input/Output: [(-22 99 73 2) -22]
Test Case: 700 | Input/Output: [(68 40 6 -62) -62]
Test Case: 701 | Input/Output: [(-21 78 8 10) -21]
Test Case: 702 | Input/Output: [(30 -56 34 -16) -56]
Test Case: 703 | Input/Output: [(34 -33 60 -71) -71]
Test Case: 704 | Input/Output: [(44 -86 -84 21) -86]
Test Case: 705 | Input/Output: [(-57 -53 -31 -18) -57]
Test Case: 706 | Input/Output: [(-19 19 -57 -59) -59]
Test Case: 707 | Input/Output: [(40 -6 -33 40) -33]
Test Case: 708 | Input/Output: [(73 52 -25 24) -25]
Test Case: 709 | Input/Output: [(-86 42 -98 7) -98]
Test Case: 710 | Input/Output: [(69 -52 8 -28) -52]
Test Case: 711 | Input/Output: [(-74 -81 -92 -42) -92]
Test Case: 712 | Input/Output: [(-20 36 80 69) -20]
Test Case: 713 | Input/Output: [(31 -18 -24 27) -24]
Test Case: 714 | Input/Output: [(3 1 15 18) 1]
Test Case: 715 | Input/Output: [(-41 6 -8 53) -41]
Test Case: 716 | Input/Output: [(47 94 -91 41) -91]
Test Case: 717 | Input/Output: [(37 30 50 2) 2]
Test Case: 718 | Input/Output: [(-83 1 -77 -52) -83]
Test Case: 719 | Input/Output: [(-11 -20 -18 -73) -73]
Test Case: 720 | Input/Output: [(91 -20 -43 -40) -43]
Test Case: 721 | Input/Output: [(-56 -11 23 -7) -56]
Test Case: 722 | Input/Output: [(-48 45 25 5) -48]
Test Case: 723 | Input/Output: [(-67 95 -25 -16) -67]
Test Case: 724 | Input/Output: [(-74 -17 -24 -29) -74]
Test Case: 725 | Input/Output: [(97 -1 -27 -56) -56]
Test Case: 726 | Input/Output: [(-74 -96 -10 49) -96]
Test Case: 727 | Input/Output: [(-23 -5 -50 19) -50]
Test Case: 728 | Input/Output: [(-46 -1 13 -12) -46]
Test Case: 729 | Input/Output: [(-42 -56 -85 100) -85]
Test Case: 730 | Input/Output: [(-38 -41 6 26) -41]
Test Case: 731 | Input/Output: [(-18 71 -82 -77) -82]
Test Case: 732 | Input/Output: [(19 43 -22 12) -22]
Test Case: 733 | Input/Output: [(37 37 7 -80) -80]
Test Case: 734 | Input/Output: [(45 -84 56 -9) -84]
Test Case: 735 | Input/Output: [(-18 10 83 -68) -68]
Test Case: 736 | Input/Output: [(32 -32 2 27) -32]
Test Case: 737 | Input/Output: [(-74 26 82 47) -74]
Test Case: 738 | Input/Output: [(8 73 27 -48) -48]
Test Case: 739 | Input/Output: [(15 -55 75 -54) -55]
Test Case: 740 | Input/Output: [(31 -84 29 26) -84]
Test Case: 741 | Input/Output: [(-80 96 -25 -5) -80]
Test Case: 742 | Input/Output: [(43 21 95 -82) -82]
Test Case: 743 | Input/Output: [(-19 -48 9 62) -48]
Test Case: 744 | Input/Output: [(6 57 43 59) 6]
Test Case: 745 | Input/Output: [(-23 93 -27 -41) -41]
Test Case: 746 | Input/Output: [(58 -74 67 -46) -74]
Test Case: 747 | Input/Output: [(-60 96 6 61) -60]
Test Case: 748 | Input/Output: [(-38 5 83 19) -38]
Test Case: 749 | Input/Output: [(74 57 41 -70) -70]
Test Case: 750 | Input/Output: [(93 -38 -60 -29) -60]
Test Case: 751 | Input/Output: [(97 -54 -34 17) -54]
Test Case: 752 | Input/Output: [(59 17 27 31) 17]
Test Case: 753 | Input/Output: [(31 -15 -60 66) -60]
Test Case: 754 | Input/Output: [(-75 -26 29 62) -75]
Test Case: 755 | Input/Output: [(-91 -74 62 -16) -91]
Test Case: 756 | Input/Output: [(-33 -79 -66 98) -79]
Test Case: 757 | Input/Output: [(-82 -64 41 -7) -82]
Test Case: 758 | Input/Output: [(-97 6 24 -4) -97]
Test Case: 759 | Input/Output: [(65 48 81 -16) -16]
Test Case: 760 | Input/Output: [(65 -78 -8 -20) -78]
Test Case: 761 | Input/Output: [(-78 -44 18 14) -78]
Test Case: 762 | Input/Output: [(-73 59 -5 72) -73]
Test Case: 763 | Input/Output: [(-76 16 57 43) -76]
Test Case: 764 | Input/Output: [(-65 87 24 -54) -65]
Test Case: 765 | Input/Output: [(-99 -100 62 34) -100]
Test Case: 766 | Input/Output: [(-25 -34 -64 -69) -69]
Test Case: 767 | Input/Output: [(84 50 8 89) 8]
Test Case: 768 | Input/Output: [(60 -8 99 -50) -50]
Test Case: 769 | Input/Output: [(32 -29 99 -28) -29]
Test Case: 770 | Input/Output: [(-13 2 -37 -75) -75]
Test Case: 771 | Input/Output: [(-11 97 -9 -56) -56]
Test Case: 772 | Input/Output: [(45 72 -17 -32) -32]
Test Case: 773 | Input/Output: [(-19 93 42 -15) -19]
Test Case: 774 | Input/Output: [(-35 -75 -60 81) -75]
Test Case: 775 | Input/Output: [(-62 82 -45 34) -62]
Test Case: 776 | Input/Output: [(31 -68 -54 75) -68]
Test Case: 777 | Input/Output: [(20 53 -16 58) -16]
Test Case: 778 | Input/Output: [(58 -2 -49 -94) -94]
Test Case: 779 | Input/Output: [(48 54 -95 -44) -95]
Test Case: 780 | Input/Output: [(68 -91 61 99) -91]
Test Case: 781 | Input/Output: [(-16 -14 44 -44) -44]
Test Case: 782 | Input/Output: [(89 -27 -100 6) -100]
Test Case: 783 | Input/Output: [(-88 -14 -34 -16) -88]
Test Case: 784 | Input/Output: [(79 -9 -89 -84) -89]
Test Case: 785 | Input/Output: [(-16 -49 18 81) -49]
Test Case: 786 | Input/Output: [(50 66 -43 77) -43]
Test Case: 787 | Input/Output: [(-82 13 6 71) -82]
Test Case: 788 | Input/Output: [(-71 67 31 -49) -71]
Test Case: 789 | Input/Output: [(-97 95 99 19) -97]
Test Case: 790 | Input/Output: [(77 -38 -56 72) -56]
Test Case: 791 | Input/Output: [(-99 89 59 1) -99]
Test Case: 792 | Input/Output: [(85 12 45 24) 12]
Test Case: 793 | Input/Output: [(95 99 17 -93) -93]
Test Case: 794 | Input/Output: [(-96 54 84 45) -96]
Test Case: 795 | Input/Output: [(86 12 -56 -4) -56]
Test Case: 796 | Input/Output: [(39 43 92 82) 39]
Test Case: 797 | Input/Output: [(70 -71 -31 -81) -81]
Test Case: 798 | Input/Output: [(29 96 -85 3) -85]
Test Case: 799 | Input/Output: [(-66 -92 -65 40) -92]
Test Case: 800 | Input/Output: [(100 -74 -38 -34) -74]
Test Case: 801 | Input/Output: [(19 56 70 -11) -11]
Test Case: 802 | Input/Output: [(72 31 -29 77) -29]
Test Case: 803 | Input/Output: [(15 -49 -75 27) -75]
Test Case: 804 | Input/Output: [(73 -26 71 -8) -26]
Test Case: 805 | Input/Output: [(-53 89 47 -30) -53]
Test Case: 806 | Input/Output: [(-27 -52 -54 -5) -54]
Test Case: 807 | Input/Output: [(30 -38 -64 -86) -86]
Test Case: 808 | Input/Output: [(18 61 97 34) 18]
Test Case: 809 | Input/Output: [(-51 -3 7 -37) -51]
Test Case: 810 | Input/Output: [(-64 14 94 -75) -75]
Test Case: 811 | Input/Output: [(81 -36 -52 -59) -59]
Test Case: 812 | Input/Output: [(90 -41 100 -50) -50]
Test Case: 813 | Input/Output: [(-58 3 47 -16) -58]
Test Case: 814 | Input/Output: [(11 -5 -88 95) -88]
Test Case: 815 | Input/Output: [(15 -8 -60 -91) -91]
Test Case: 816 | Input/Output: [(71 -17 -8 22) -17]
Test Case: 817 | Input/Output: [(73 99 -76 62) -76]
Test Case: 818 | Input/Output: [(-45 69 -2 -28) -45]
Test Case: 819 | Input/Output: [(58 -32 49 63) -32]
Test Case: 820 | Input/Output: [(-69 95 29 -62) -69]
Test Case: 821 | Input/Output: [(-96 11 34 -57) -96]
Test Case: 822 | Input/Output: [(87 71 -41 -29) -41]
Test Case: 823 | Input/Output: [(-93 63 5 94) -93]
Test Case: 824 | Input/Output: [(-98 45 -33 -3) -98]
Test Case: 825 | Input/Output: [(-90 69 -99 16) -99]
Test Case: 826 | Input/Output: [(12 41 92 -14) -14]
Test Case: 827 | Input/Output: [(-29 69 9 -34) -34]
Test Case: 828 | Input/Output: [(-16 69 -68 7) -68]
Test Case: 829 | Input/Output: [(41 72 21 -10) -10]
Test Case: 830 | Input/Output: [(-35 92 -41 -21) -41]
Test Case: 831 | Input/Output: [(-40 -7 72 -64) -64]
Test Case: 832 | Input/Output: [(95 100 -92 3) -92]
Test Case: 833 | Input/Output: [(-24 32 45 -71) -71]
Test Case: 834 | Input/Output: [(-23 69 68 96) -23]
Test Case: 835 | Input/Output: [(61 -28 24 -5) -28]
Test Case: 836 | Input/Output: [(-73 92 -35 -26) -73]
Test Case: 837 | Input/Output: [(3 85 -78 -7) -78]
Test Case: 838 | Input/Output: [(45 2 69 85) 2]
Test Case: 839 | Input/Output: [(2 -64 -78 -33) -78]
Test Case: 840 | Input/Output: [(29 88 -60 77) -60]
Test Case: 841 | Input/Output: [(91 -52 -85 70) -85]
Test Case: 842 | Input/Output: [(14 43 47 15) 14]
Test Case: 843 | Input/Output: [(100 -100 70 41) -100]
Test Case: 844 | Input/Output: [(48 -3 -28 -17) -28]
Test Case: 845 | Input/Output: [(61 -60 -10 -25) -60]
Test Case: 846 | Input/Output: [(-60 -90 -66 -73) -90]
Test Case: 847 | Input/Output: [(-65 -44 -96 -97) -97]
Test Case: 848 | Input/Output: [(-6 81 99 -3) -6]
Test Case: 849 | Input/Output: [(58 -16 -58 78) -58]
Test Case: 850 | Input/Output: [(-66 -23 -45 76) -66]
Test Case: 851 | Input/Output: [(69 -89 -72 -34) -89]
Test Case: 852 | Input/Output: [(45 -28 80 50) -28]
Test Case: 853 | Input/Output: [(-84 -42 44 -49) -84]
Test Case: 854 | Input/Output: [(-90 -65 26 6) -90]
Test Case: 855 | Input/Output: [(10 -95 4 -58) -95]
Test Case: 856 | Input/Output: [(62 -94 -75 36) -94]
Test Case: 857 | Input/Output: [(-53 -1 51 -89) -89]
Test Case: 858 | Input/Output: [(33 39 -49 13) -49]
Test Case: 859 | Input/Output: [(-77 97 3 -47) -77]
Test Case: 860 | Input/Output: [(-2 90 -54 59) -54]
Test Case: 861 | Input/Output: [(-99 8 75 -92) -99]
Test Case: 862 | Input/Output: [(-72 5 -44 14) -72]
Test Case: 863 | Input/Output: [(65 -17 12 -96) -96]
Test Case: 864 | Input/Output: [(-9 -83 30 -30) -83]
Test Case: 865 | Input/Output: [(64 50 -37 60) -37]
Test Case: 866 | Input/Output: [(-36 -31 39 71) -36]
Test Case: 867 | Input/Output: [(-15 73 42 80) -15]
Test Case: 868 | Input/Output: [(-67 -83 -35 -50) -83]
Test Case: 869 | Input/Output: [(-33 -93 -27 68) -93]
Test Case: 870 | Input/Output: [(-18 -6 15 -5) -18]
Test Case: 871 | Input/Output: [(-99 15 28 -68) -99]
Test Case: 872 | Input/Output: [(60 -39 76 -17) -39]
Test Case: 873 | Input/Output: [(76 99 -89 -93) -93]
Test Case: 874 | Input/Output: [(43 -94 40 33) -94]
Test Case: 875 | Input/Output: [(91 -87 95 -65) -87]
Test Case: 876 | Input/Output: [(92 42 61 55) 42]
Test Case: 877 | Input/Output: [(80 -36 44 -65) -65]
Test Case: 878 | Input/Output: [(-62 72 -67 -17) -67]
Test Case: 879 | Input/Output: [(-16 81 99 -95) -95]
Test Case: 880 | Input/Output: [(81 -66 -38 -94) -94]
Test Case: 881 | Input/Output: [(-26 -11 65 10) -26]
Test Case: 882 | Input/Output: [(76 -31 -14 26) -31]
Test Case: 883 | Input/Output: [(38 -9 -16 84) -16]
Test Case: 884 | Input/Output: [(-76 -27 57 -5) -76]
Test Case: 885 | Input/Output: [(78 11 94 -25) -25]
Test Case: 886 | Input/Output: [(-24 -23 -59 -8) -59]
Test Case: 887 | Input/Output: [(83 -34 -18 58) -34]
Test Case: 888 | Input/Output: [(42 -20 86 34) -20]
Test Case: 889 | Input/Output: [(26 -54 -49 31) -54]
Test Case: 890 | Input/Output: [(-24 29 95 -65) -65]
Test Case: 891 | Input/Output: [(-45 -76 -8 -79) -79]
Test Case: 892 | Input/Output: [(-71 43 63 9) -71]
Test Case: 893 | Input/Output: [(79 -21 29 -5) -21]
Test Case: 894 | Input/Output: [(-54 76 -30 -83) -83]
Test Case: 895 | Input/Output: [(-80 -31 -100 0) -100]
Test Case: 896 | Input/Output: [(-83 63 -27 66) -83]
Test Case: 897 | Input/Output: [(63 -1 -94 -83) -94]
Test Case: 898 | Input/Output: [(-67 -38 89 -48) -67]
Test Case: 899 | Input/Output: [(-32 -97 -90 -50) -97]
Test Case: 900 | Input/Output: [(-32 95 81 1) -32]
Test Case: 901 | Input/Output: [(-84 -30 -76 -95) -95]
Test Case: 902 | Input/Output: [(56 62 71 32) 32]
Test Case: 903 | Input/Output: [(-36 -2 -48 -54) -54]
Test Case: 904 | Input/Output: [(79 61 9 -90) -90]
Test Case: 905 | Input/Output: [(84 51 -45 -22) -45]
Test Case: 906 | Input/Output: [(46 63 -55 -43) -55]
Test Case: 907 | Input/Output: [(-32 22 87 50) -32]
Test Case: 908 | Input/Output: [(-38 61 -62 -90) -90]
Test Case: 909 | Input/Output: [(-69 -92 76 -13) -92]
Test Case: 910 | Input/Output: [(5 35 -1 68) -1]
Test Case: 911 | Input/Output: [(2 -75 -9 67) -75]
Test Case: 912 | Input/Output: [(60 23 -84 -11) -84]
Test Case: 913 | Input/Output: [(-28 -57 70 28) -57]
Test Case: 914 | Input/Output: [(26 -8 -38 -36) -38]
Test Case: 915 | Input/Output: [(-56 3 3 22) -56]
Test Case: 916 | Input/Output: [(-44 0 60 54) -44]
Test Case: 917 | Input/Output: [(-36 -12 -84 49) -84]
Test Case: 918 | Input/Output: [(59 -74 15 -91) -91]
Test Case: 919 | Input/Output: [(-76 -65 23 18) -76]
Test Case: 920 | Input/Output: [(88 89 52 18) 18]
Test Case: 921 | Input/Output: [(60 48 -25 45) -25]
Test Case: 922 | Input/Output: [(16 -61 -55 58) -61]
Test Case: 923 | Input/Output: [(-11 13 3 -65) -65]
Test Case: 924 | Input/Output: [(46 36 46 59) 36]
Test Case: 925 | Input/Output: [(46 90 -87 64) -87]
Test Case: 926 | Input/Output: [(67 9 -20 -43) -43]
Test Case: 927 | Input/Output: [(-96 32 -58 84) -96]
Test Case: 928 | Input/Output: [(-65 -28 5 -73) -73]
Test Case: 929 | Input/Output: [(-88 -83 -19 84) -88]
Test Case: 930 | Input/Output: [(-45 -36 18 -95) -95]
Test Case: 931 | Input/Output: [(-15 -54 100 18) -54]
Test Case: 932 | Input/Output: [(83 76 94 99) 76]
Test Case: 933 | Input/Output: [(-86 25 14 93) -86]
Test Case: 934 | Input/Output: [(19 -65 51 99) -65]
Test Case: 935 | Input/Output: [(-21 -17 -13 88) -21]
Test Case: 936 | Input/Output: [(44 9 23 -6) -6]
Test Case: 937 | Input/Output: [(43 -27 -51 -41) -51]
Test Case: 938 | Input/Output: [(4 88 63 -88) -88]
Test Case: 939 | Input/Output: [(21 -50 83 100) -50]
Test Case: 940 | Input/Output: [(66 18 -74 82) -74]
Test Case: 941 | Input/Output: [(19 -4 -93 82) -93]
Test Case: 942 | Input/Output: [(-4 98 -58 93) -58]
Test Case: 943 | Input/Output: [(-46 84 97 36) -46]
Test Case: 944 | Input/Output: [(-48 23 -10 -63) -63]
Test Case: 945 | Input/Output: [(88 61 7 51) 7]
Test Case: 946 | Input/Output: [(-19 49 54 -42) -42]
Test Case: 947 | Input/Output: [(-30 -3 -45 -80) -80]
Test Case: 948 | Input/Output: [(-34 99 -62 12) -62]
Test Case: 949 | Input/Output: [(-73 -13 46 -29) -73]
Test Case: 950 | Input/Output: [(89 75 -97 -7) -97]
Test Case: 951 | Input/Output: [(21 -5 -67 42) -67]
Test Case: 952 | Input/Output: [(-84 -45 -34 -25) -84]
Test Case: 953 | Input/Output: [(-81 -58 -56 35) -81]
Test Case: 954 | Input/Output: [(-73 -30 -4 -20) -73]
Test Case: 955 | Input/Output: [(72 43 -39 6) -39]
Test Case: 956 | Input/Output: [(63 98 -81 22) -81]
Test Case: 957 | Input/Output: [(55 9 73 -61) -61]
Test Case: 958 | Input/Output: [(65 -17 -68 67) -68]
Test Case: 959 | Input/Output: [(-76 45 -13 20) -76]
Test Case: 960 | Input/Output: [(-5 73 84 28) -5]
Test Case: 961 | Input/Output: [(37 68 -42 -21) -42]
Test Case: 962 | Input/Output: [(31 29 18 -71) -71]
Test Case: 963 | Input/Output: [(96 76 68 -99) -99]
Test Case: 964 | Input/Output: [(32 90 94 83) 32]
Test Case: 965 | Input/Output: [(40 -52 -50 -61) -61]
Test Case: 966 | Input/Output: [(31 27 -30 -27) -30]
Test Case: 967 | Input/Output: [(76 -47 -45 7) -47]
Test Case: 968 | Input/Output: [(-6 -50 90 75) -50]
Test Case: 969 | Input/Output: [(-87 -55 10 41) -87]
Test Case: 970 | Input/Output: [(-6 93 -14 32) -14]
Test Case: 971 | Input/Output: [(-36 94 -60 46) -60]
Test Case: 972 | Input/Output: [(45 82 77 39) 39]
Test Case: 973 | Input/Output: [(57 0 17 3) 0]
Test Case: 974 | Input/Output: [(-81 23 8 31) -81]
Test Case: 975 | Input/Output: [(61 -12 -39 4) -39]
Test Case: 976 | Input/Output: [(41 -53 21 24) -53]
Test Case: 977 | Input/Output: [(98 -3 15 -47) -47]
Test Case: 978 | Input/Output: [(86 6 -65 22) -65]
Test Case: 979 | Input/Output: [(17 -81 -18 56) -81]
Test Case: 980 | Input/Output: [(-58 -2 -89 -96) -96]
Test Case: 981 | Input/Output: [(-19 -13 76 93) -19]
Test Case: 982 | Input/Output: [(44 -61 72 -40) -61]
Test Case: 983 | Input/Output: [(65 -18 -96 54) -96]
Test Case: 984 | Input/Output: [(-61 99 -10 14) -61]
Test Case: 985 | Input/Output: [(25 -77 18 -10) -77]
Test Case: 986 | Input/Output: [(98 -85 75 -60) -85]
Test Case: 987 | Input/Output: [(51 63 63 59) 51]
Test Case: 988 | Input/Output: [(-35 -21 -15 -31) -35]
Test Case: 989 | Input/Output: [(21 30 -16 -76) -76]
Test Case: 990 | Input/Output: [(58 98 65 91) 58]
Test Case: 991 | Input/Output: [(-48 -58 -58 24) -58]
Test Case: 992 | Input/Output: [(16 -22 16 -97) -97]
Test Case: 993 | Input/Output: [(84 91 -18 -51) -51]
Test Case: 994 | Input/Output: [(-3 70 45 72) -3]
Test Case: 995 | Input/Output: [(20 64 43 56) 20]
Test Case: 996 | Input/Output: [(81 -27 -17 -96) -96]
Test Case: 997 | Input/Output: [(-65 -57 -58 -16) -65]
Test Case: 998 | Input/Output: [(58 35 29 10) 10]
Test Case: 999 | Input/Output: [(42 44 -54 -48) -54]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 98f17fffbd710431b7ffe02918e462d48a2ebada
GitHub link = https://github.com/lspector/Clojush/commit/98f17fffbd710431b7ffe02918e462d48a2ebada
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x30b9728f clojush.problems.software.smallest$fn__7460@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = 69 28 32 19 -72 -45 87 -3 -37 -23 -98 -110 -56 21 80 113
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[91 91 69 91] 69] [[40 40 40 -77] -77] [[-96 37 37 37] -96] [[57 -74 -74 -74] -74] [[-81 -81 -81 -10] -81] [[59 59 59 25] 25] [[-38 -14 -14 -14] -38] [[-63 -63 -63 79] -63] [[-44 90 -44 -44] -44] [[52 -88 52 52] -88] [(23 23 23 23) 23] [(87 87 87 87) 87] [(-12 -12 -12 -12) -12] [(-38 -38 -38 -38) -38] [(-27 -27 -27 -27) -27] [(27 88 61 22) 22] [(25 30 92 47) 25] [(93 5 72 41) 5] [(90 89 29 88) 29] [(90 33 43 74) 33] [(48 65 27 60) 27] [(100 12 83 86) 12] [(19 0 60 22) 0] [(85 87 22 60) 22] [(38 80 96 84) 38] [(83 0 39 12) 0] [(3 61 5 28) 3] [(11 64 36 98) 11] [(20 64 33 14) 14] [(21 86 52 95) 21] [(41 58 50 13) 13] [(74 71 72 100) 71] [(79 54 4 49) 4] [(44 59 1 95) 1] [(10 14 55 11) 10] [(2 -1 -64 69) -64] [(41 -40 -46 34) -46] [(-20 -5 5 -93) -93] [(31 79 26 -10) -10] [(-43 -84 25 88) -84] [(93 3 2 44) 2] [(10 33 43 98) 10] [(-84 -13 -97 -6) -97] [(9 -69 91 90) -69] [(-79 51 37 31) -79] [(-80 -79 63 71) -80] [(28 -21 -61 6) -61] [(59 -82 -23 92) -82] [(-23 -17 -2 -62) -62] [(-97 -84 -89 15) -97] [(-29 22 64 -2) -29] [(-20 11 -4 48) -20] [(69 70 -32 -38) -38] [(-28 5 48 -13) -28] [(-32 -69 -48 85) -69] [(-53 -55 -59 98) -59] [(62 19 61 -86) -86] [(-55 -16 54 -88) -88] [(64 9 -23 -25) -25] [(24 72 -33 70) -33] [(-22 -13 -72 -30) -72] [(71 -85 22 -34) -85] [(-71 69 80 -78) -78] [(-51 -35 23 -9) -51] [(-95 -6 71 -78) -95] [(-18 1 90 69) -18] [(2 17 7 -36) -36] [(2 -30 93 -18) -30] [(7 42 35 -83) -83] [(86 -89 -87 -88) -89] [(19 49 64 65) 19] [(0 32 19 -83) -83] [(70 -63 6 -94) -94] [(22 -14 73 64) -14] [(17 -42 32 9) -42] [(-45 -15 70 43) -45] [(46 -29 82 12) -29] [(-59 -77 -82 98) -82] [(6 -88 -42 14) -88] [(-3 -37 71 76) -37] [(-45 -33 -64 33) -64] [(-86 -8 -14 -83) -86] [(84 31 -85 13) -85] [(-78 85 17 44) -78] [(-13 54 38 -5) -13] [(83 9 18 -85) -85] [(31 26 71 -50) -50] [(58 99 -79 -97) -97] [(84 52 -86 52) -86] [(-2 -63 68 25) -63] [(-5 -97 50 83) -97] [(-39 -23 98 34) -39] [(19 54 48 -78) -78] [(-63 -57 -11 -42) -63] [(-88 -40 -13 -9) -88])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 69                  | Program output: 91                 
Correct output: -77                 | Program output: 40                 
Correct output: -96                 | Program output: -96                
Correct output: -74                 | Program output: 57                 
Correct output: -81                 | Program output: -81                
Correct output: 25                  | Program output: 59                 
Correct output: -38                 | Program output: -38                
Correct output: -63                 | Program output: -63                
Correct output: -44                 | Program output: -44                
Correct output: -88                 | Program output: 52                 
Correct output: 23                  | Program output: 23                 
Correct output: 87                  | Program output: 87                 
Correct output: -12                 | Program output: -12                
Correct output: -38                 | Program output: -38                
Correct output: -27                 | Program output: -27                
Correct output: 22                  | Program output: 27                 
Correct output: 25                  | Program output: 25                 
Correct output: 5                   | Program output: 93                 
Correct output: 29                  | Program output: 90                 
Correct output: 33                  | Program output: 90                 
Correct output: 27                  | Program output: 48                 
Correct output: 12                  | Program output: 100                
Correct output: 0                   | Program output: 19                 
Correct output: 22                  | Program output: 85                 
Correct output: 38                  | Program output: 38                 
Correct output: 0                   | Program output: 83                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 14                  | Program output: 20                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 41                 
Correct output: 71                  | Program output: 74                 
Correct output: 4                   | Program output: 79                 
Correct output: 1                   | Program output: 44                 
Correct output: 10                  | Program output: 10                 
Correct output: -64                 | Program output: 2                  
Correct output: -46                 | Program output: 41                 
Correct output: -93                 | Program output: -20                
Correct output: -10                 | Program output: 31                 
Correct output: -84                 | Program output: -43                
Correct output: 2                   | Program output: 93                 
Correct output: 10                  | Program output: 10                 
Correct output: -97                 | Program output: -84                
Correct output: -69                 | Program output: 9                  
Correct output: -79                 | Program output: -79                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: 28                 
Correct output: -82                 | Program output: 59                 
Correct output: -62                 | Program output: -23                
Correct output: -97                 | Program output: -97                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -38                 | Program output: 69                 
Correct output: -28                 | Program output: -28                
Correct output: -69                 | Program output: -32                
Correct output: -59                 | Program output: -53                
Correct output: -86                 | Program output: 62                 
Correct output: -88                 | Program output: -55                
Correct output: -25                 | Program output: 64                 
Correct output: -33                 | Program output: 24                 
Correct output: -72                 | Program output: -22                
Correct output: -85                 | Program output: 71                 
Correct output: -78                 | Program output: -71                
Correct output: -51                 | Program output: -51                
Correct output: -95                 | Program output: -95                
Correct output: -18                 | Program output: -18                
Correct output: -36                 | Program output: 2                  
Correct output: -30                 | Program output: 2                  
Correct output: -83                 | Program output: 7                  
Correct output: -89                 | Program output: 86                 
Correct output: 19                  | Program output: 19                 
Correct output: -83                 | Program output: 0                  
Correct output: -94                 | Program output: 70                 
Correct output: -14                 | Program output: 22                 
Correct output: -42                 | Program output: 17                 
Correct output: -45                 | Program output: -45                
Correct output: -29                 | Program output: 46                 
Correct output: -82                 | Program output: -59                
Correct output: -88                 | Program output: 6                  
Correct output: -37                 | Program output: -3                 
Correct output: -64                 | Program output: -45                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 84                 
Correct output: -78                 | Program output: -78                
Correct output: -13                 | Program output: -13                
Correct output: -85                 | Program output: 83                 
Correct output: -50                 | Program output: 31                 
Correct output: -97                 | Program output: 58                 
Correct output: -86                 | Program output: 84                 
Correct output: -63                 | Program output: -2                 
Correct output: -97                 | Program output: -5                 
Correct output: -39                 | Program output: -39                
Correct output: -78                 | Program output: 19                 
Correct output: -63                 | Program output: -63                
Correct output: -88                 | Program output: -88                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in1} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_invert_second_then_and} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction boolean_flush} {:close 2, :instruction boolean_rot} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction integer_gt} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction exec_do*while})
Lexicase best program: (in1 integer_yank exec_k () (integer_dup_times integer_div boolean_invert_second_then_and) boolean_stackdepth boolean_flush boolean_rot exec_do*while () integer_yank boolean_empty integer_swap boolean_flush integer_gt print_integer in3 exec_do*while ())
Lexicase best errors: [1 1 0 0 1 0 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 23
Percent parens: 0.217
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in1} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_k} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_invert_second_then_and} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction boolean_flush} {:close 2, :instruction boolean_rot} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction integer_gt} {:close 0, :instruction print_integer} {:close 0, :instruction in3} {:close 0, :instruction exec_do*while})
Zero cases best program: (in1 integer_yank exec_k () (integer_dup_times integer_div boolean_invert_second_then_and) boolean_stackdepth boolean_flush boolean_rot exec_do*while () integer_yank boolean_empty integer_swap boolean_flush integer_gt print_integer in3 exec_do*while ())
Zero cases best errors: [1 1 0 0 1 0 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 23
Percent parens: 0.217
--- Lexicase Population Statistics ---
Count of elite individuals by case: (6 1 4 14 6 4 4 7 4 1)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (6 1 4 14 6 4 4 7 4 1)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 0, :instruction in1} {:close 0, :instruction exec_when} {:close 1, :instruction tagged_550} {:close 0, :instruction print_integer} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_if} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_y} {:close 1, :instruction integer_pop} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_while} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_not} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_lte} {:close 0, :instruction -89} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_noop} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_k} {:close 0, :instruction in3} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_yank} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_shove} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_y} {:close 1, :instruction integer_pop} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_div} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction tagged_361} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_pop} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_yank})
Best program: (integer_yank integer_dup in1 exec_when (tagged_550) print_integer exec_swap (exec_if (integer_fromboolean) (boolean_dup exec_y (integer_pop) integer_gt) exec_while (integer_dup boolean_not) boolean_stackdepth) (boolean_pop integer_gte integer_empty integer_dec boolean_dup_items integer_dup_items integer_pop integer_lte -89 exec_s () (boolean_or boolean_dup_times exec_noop) (boolean_frominteger) integer_lt exec_k (in3 exec_dup_times () boolean_dup integer_dec integer_stackdepth exec_dup_items exec_y_when_autoconstructing (exec_swap (boolean_yank boolean_yank) (exec_shove (print_integer boolean_stackdepth boolean_dup exec_y (integer_pop) boolean_yankdup) integer_div exec_s_when_autoconstructing () (in1 boolean_frominteger integer_empty integer_gte integer_empty integer_swap integer_lte exec_y_when_autoconstructing (tagged_361) integer_yankdup exec_s (boolean_not integer_pop) (integer_eq integer_gt) (boolean_yank)) ()))) ()))
Errors: [1 1 0 0 1 0 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 68
Size: 94
Percent parens: 0.277
--- Population Statistics ---
Average total errors in population: 9.949
Median total errors in population: 10
Error averages by case: (0.994 0.999 0.996 0.986 0.994 0.996 0.996 0.993 0.996 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 49.16
Average program size in population (points): 67.747
Average percent parens in population: 0.281
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.263
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 485531
--- Timings ---
Current time: 1559314315072 milliseconds
Total Time:           2.5 seconds
Initialization:       0.1 seconds,  4.1%
Reproduction:         0.8 seconds, 30.0%
Fitness Testing:      1.7 seconds, 65.9%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 424
Test mean error for best: 0.42400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 69                  | Program output: 91                 
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -96                
Correct output: -74                 | Program output: -74                
Correct output: -81                 | Program output: -81                
Correct output: 25                  | Program output: 25                 
Correct output: -38                 | Program output: -38                
Correct output: -63                 | Program output: -63                
Correct output: -44                 | Program output: -44                
Correct output: -88                 | Program output: 52                 
Correct output: 23                  | Program output: 23                 
Correct output: 87                  | Program output: 87                 
Correct output: -12                 | Program output: -12                
Correct output: -38                 | Program output: -38                
Correct output: -27                 | Program output: -27                
Correct output: 22                  | Program output: 22                 
Correct output: 25                  | Program output: 25                 
Correct output: 5                   | Program output: 41                 
Correct output: 29                  | Program output: 88                 
Correct output: 33                  | Program output: 74                 
Correct output: 27                  | Program output: 48                 
Correct output: 12                  | Program output: 86                 
Correct output: 0                   | Program output: 19                 
Correct output: 22                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 0                   | Program output: 12                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 13                 
Correct output: 71                  | Program output: 74                 
Correct output: 4                   | Program output: 49                 
Correct output: 1                   | Program output: 44                 
Correct output: 10                  | Program output: 10                 
Correct output: -64                 | Program output: 2                  
Correct output: -46                 | Program output: 34                 
Correct output: -93                 | Program output: -93                
Correct output: -10                 | Program output: -10                
Correct output: -84                 | Program output: -43                
Correct output: 2                   | Program output: 44                 
Correct output: 10                  | Program output: 10                 
Correct output: -97                 | Program output: -84                
Correct output: -69                 | Program output: 9                  
Correct output: -79                 | Program output: -79                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: 6                  
Correct output: -82                 | Program output: 59                 
Correct output: -62                 | Program output: -62                
Correct output: -97                 | Program output: -97                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -38                 | Program output: -38                
Correct output: -28                 | Program output: -28                
Correct output: -69                 | Program output: -32                
Correct output: -59                 | Program output: -53                
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -88                
Correct output: -25                 | Program output: -25                
Correct output: -33                 | Program output: 24                 
Correct output: -72                 | Program output: -30                
Correct output: -85                 | Program output: -34                
Correct output: -78                 | Program output: -78                
Correct output: -51                 | Program output: -51                
Correct output: -95                 | Program output: -95                
Correct output: -18                 | Program output: -18                
Correct output: -36                 | Program output: -36                
Correct output: -30                 | Program output: -18                
Correct output: -83                 | Program output: -83                
Correct output: -89                 | Program output: -88                
Correct output: 19                  | Program output: 19                 
Correct output: -83                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -14                 | Program output: 22                 
Correct output: -42                 | Program output: 9                  
Correct output: -45                 | Program output: -45                
Correct output: -29                 | Program output: 12                 
Correct output: -82                 | Program output: -59                
Correct output: -88                 | Program output: 6                  
Correct output: -37                 | Program output: -3                 
Correct output: -64                 | Program output: -45                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 13                 
Correct output: -78                 | Program output: -78                
Correct output: -13                 | Program output: -13                
Correct output: -85                 | Program output: -85                
Correct output: -50                 | Program output: -50                
Correct output: -97                 | Program output: -97                
Correct output: -86                 | Program output: 52                 
Correct output: -63                 | Program output: -2                 
Correct output: -97                 | Program output: -5                 
Correct output: -39                 | Program output: -39                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -88                 | Program output: -88                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_empty} {:close 1, :instruction integer_div} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_do*while} {:close 2, :instruction exec_pop} {:close 1, :instruction integer_min})
Lexicase best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) print_integer exec_yankdup boolean_empty integer_div exec_stackdepth exec_do*while () exec_pop () integer_min)
Lexicase best errors: [0 0 0 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 26
Percent parens: 0.231
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_empty} {:close 1, :instruction integer_div} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_do*while} {:close 2, :instruction exec_pop} {:close 1, :instruction integer_min})
Zero cases best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) print_integer exec_yankdup boolean_empty integer_div exec_stackdepth exec_do*while () exec_pop () integer_min)
Zero cases best errors: [0 0 0 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 26
Percent parens: 0.231
--- Lexicase Population Statistics ---
Count of elite individuals by case: (407 318 408 408 158 315 158 408 319 319)
Population mean number of elite cases: 3.22
Count of perfect (error zero) individuals by case: (407 318 408 408 158 315 158 408 319 319)
Population mean number of perfect (error zero) cases: 3.22
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_empty} {:close 1, :instruction integer_div} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_do*while} {:close 2, :instruction exec_pop} {:close 1, :instruction integer_min})
Best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) print_integer exec_yankdup boolean_empty integer_div exec_stackdepth exec_do*while () exec_pop () integer_min)
Errors: [0 0 0 0 1 1 1 0 0 0]
Total: 3
Mean: 0.3
Genome size: 20
Size: 26
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 6.782
Median total errors in population: 6
Error averages by case: (0.593 0.682 0.592 0.592 0.842 0.685 0.842 0.592 0.681 0.681)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 40.432
Average program size in population (points): 53.933
Average percent parens in population: 0.246
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.505
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 246
Genome diversity (% unique genomes):	 0.433
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 253
Syntactic diversity (% unique Push programs):	 0.416
Total error diversity:				 0.006
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1053035
--- Timings ---
Current time: 1559314317727 milliseconds
Total Time:           5.7 seconds
Initialization:       0.1 seconds,  1.8%
Reproduction:         2.4 seconds, 42.6%
Fitness Testing:      2.4 seconds, 42.1%
Report:               0.8 seconds, 13.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 201
Test mean error for best: 0.20100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 69                  | Program output: 91                 
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -96                
Correct output: -74                 | Program output: -74                
Correct output: -81                 | Program output: -81                
Correct output: 25                  | Program output: 25                 
Correct output: -38                 | Program output: -38                
Correct output: -63                 | Program output: -63                
Correct output: -44                 | Program output: -44                
Correct output: -88                 | Program output: -88                
Correct output: 23                  | Program output: 23                 
Correct output: 87                  | Program output: 87                 
Correct output: -12                 | Program output: -12                
Correct output: -38                 | Program output: -38                
Correct output: -27                 | Program output: -27                
Correct output: 22                  | Program output: 22                 
Correct output: 25                  | Program output: 25                 
Correct output: 5                   | Program output: 5                  
Correct output: 29                  | Program output: 88                 
Correct output: 33                  | Program output: 33                 
Correct output: 27                  | Program output: 48                 
Correct output: 12                  | Program output: 12                 
Correct output: 0                   | Program output: 0                  
Correct output: 22                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 0                   | Program output: 0                  
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 13                 
Correct output: 71                  | Program output: 71                 
Correct output: 4                   | Program output: 49                 
Correct output: 1                   | Program output: 44                 
Correct output: 10                  | Program output: 10                 
Correct output: -64                 | Program output: -1                 
Correct output: -46                 | Program output: -40                
Correct output: -93                 | Program output: -93                
Correct output: -10                 | Program output: -10                
Correct output: -84                 | Program output: -84                
Correct output: 2                   | Program output: 3                  
Correct output: 10                  | Program output: 10                 
Correct output: -97                 | Program output: -84                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -21                
Correct output: -82                 | Program output: -82                
Correct output: -62                 | Program output: -62                
Correct output: -97                 | Program output: -97                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -38                 | Program output: -38                
Correct output: -28                 | Program output: -28                
Correct output: -69                 | Program output: -69                
Correct output: -59                 | Program output: -55                
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -88                
Correct output: -25                 | Program output: -25                
Correct output: -33                 | Program output: 24                 
Correct output: -72                 | Program output: -30                
Correct output: -85                 | Program output: -85                
Correct output: -78                 | Program output: -78                
Correct output: -51                 | Program output: -51                
Correct output: -95                 | Program output: -95                
Correct output: -18                 | Program output: -18                
Correct output: -36                 | Program output: -36                
Correct output: -30                 | Program output: -30                
Correct output: -83                 | Program output: -83                
Correct output: -89                 | Program output: -89                
Correct output: 19                  | Program output: 19                 
Correct output: -83                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -14                 | Program output: -14                
Correct output: -42                 | Program output: -42                
Correct output: -45                 | Program output: -45                
Correct output: -29                 | Program output: -29                
Correct output: -82                 | Program output: -77                
Correct output: -88                 | Program output: -88                
Correct output: -37                 | Program output: -37                
Correct output: -64                 | Program output: -45                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 13                 
Correct output: -78                 | Program output: -78                
Correct output: -13                 | Program output: -13                
Correct output: -85                 | Program output: -85                
Correct output: -50                 | Program output: -50                
Correct output: -97                 | Program output: -97                
Correct output: -86                 | Program output: 52                 
Correct output: -63                 | Program output: -63                
Correct output: -97                 | Program output: -97                
Correct output: -39                 | Program output: -39                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -88                 | Program output: -88                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_rot} {:close 0, :instruction in1} {:close 0, :instruction tagged_677} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_flush} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_newline} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_dup_items} {:close 1, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_k_when_autoconstructing})
Lexicase best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
Lexicase best errors: [0 0 0 0 0 1 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 113
Percent parens: 0.221
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_rot} {:close 0, :instruction in1} {:close 0, :instruction tagged_677} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_flush} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_newline} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_dup_items} {:close 1, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_k_when_autoconstructing})
Zero cases best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
Zero cases best errors: [0 0 0 0 0 1 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 113
Percent parens: 0.221
--- Lexicase Population Statistics ---
Count of elite individuals by case: (887 151 151 594 738 141 151 595 895 739)
Population mean number of elite cases: 5.04
Count of perfect (error zero) individuals by case: (887 151 151 594 738 141 151 595 895 739)
Population mean number of perfect (error zero) cases: 5.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_rot} {:close 0, :instruction in1} {:close 0, :instruction tagged_677} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_flush} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_newline} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_dup_items} {:close 1, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343})
Best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_and exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup) integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343))
Errors: [0 0 0 0 0 1 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 74
Size: 93
Percent parens: 0.204
--- Population Statistics ---
Average total errors in population: 4.958
Median total errors in population: 4
Error averages by case: (0.113 0.849 0.849 0.406 0.262 0.859 0.849 0.405 0.105 0.261)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 29.991
Average program size in population (points): 39.189
Average percent parens in population: 0.234
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.3315
Median age in population: 3.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 452
Genome diversity (% unique genomes):	 0.397
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 469
Syntactic diversity (% unique Push programs):	 0.376
Total error diversity:				 0.008
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1491393
--- Timings ---
Current time: 1559314321212 milliseconds
Total Time:           8.7 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.7 seconds, 53.7%
Fitness Testing:      2.9 seconds, 33.5%
Report:               1.0 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 201
Test mean error for best: 0.20100
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 1
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 1
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 1
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 1
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 1
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 1
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 1
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 1
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 1
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 1
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 1
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 1
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 1
Test Case  349 | Error: 1
Test Case  350 | Error: 1
Test Case  351 | Error: 1
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 1
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 1
Test Case  402 | Error: 1
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 1
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 1
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 1
Test Case  442 | Error: 1
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 1
Test Case  459 | Error: 0
Test Case  460 | Error: 1
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 1
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 1
Test Case  475 | Error: 1
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 1
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 1
Test Case  535 | Error: 1
Test Case  536 | Error: 1
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 1
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 1
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 1
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 1
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 1
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 1
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 0
Test Case  711 | Error: 1
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 1
Test Case  732 | Error: 1
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 1
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 1
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 1
Test Case  803 | Error: 1
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 1
Test Case  829 | Error: 0
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 1
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 1
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 1
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 1
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 1
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 1
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 69                  | Program output: 91                 
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -96                
Correct output: -74                 | Program output: -74                
Correct output: -81                 | Program output: -81                
Correct output: 25                  | Program output: 25                 
Correct output: -38                 | Program output: -38                
Correct output: -63                 | Program output: -63                
Correct output: -44                 | Program output: -44                
Correct output: -88                 | Program output: -88                
Correct output: 23                  | Program output: 23                 
Correct output: 87                  | Program output: 87                 
Correct output: -12                 | Program output: -12                
Correct output: -38                 | Program output: -38                
Correct output: -27                 | Program output: -27                
Correct output: 22                  | Program output: 22                 
Correct output: 25                  | Program output: 25                 
Correct output: 5                   | Program output: 5                  
Correct output: 29                  | Program output: 88                 
Correct output: 33                  | Program output: 33                 
Correct output: 27                  | Program output: 48                 
Correct output: 12                  | Program output: 12                 
Correct output: 0                   | Program output: 0                  
Correct output: 22                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 0                   | Program output: 0                  
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 13                 
Correct output: 71                  | Program output: 71                 
Correct output: 4                   | Program output: 49                 
Correct output: 1                   | Program output: 44                 
Correct output: 10                  | Program output: 10                 
Correct output: -64                 | Program output: -1                 
Correct output: -46                 | Program output: -40                
Correct output: -93                 | Program output: -93                
Correct output: -10                 | Program output: -10                
Correct output: -84                 | Program output: -84                
Correct output: 2                   | Program output: 3                  
Correct output: 10                  | Program output: 10                 
Correct output: -97                 | Program output: -84                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -21                
Correct output: -82                 | Program output: -82                
Correct output: -62                 | Program output: -62                
Correct output: -97                 | Program output: -97                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -38                 | Program output: -38                
Correct output: -28                 | Program output: -28                
Correct output: -69                 | Program output: -69                
Correct output: -59                 | Program output: -55                
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -88                
Correct output: -25                 | Program output: -25                
Correct output: -33                 | Program output: 24                 
Correct output: -72                 | Program output: -30                
Correct output: -85                 | Program output: -85                
Correct output: -78                 | Program output: -78                
Correct output: -51                 | Program output: -51                
Correct output: -95                 | Program output: -95                
Correct output: -18                 | Program output: -18                
Correct output: -36                 | Program output: -36                
Correct output: -30                 | Program output: -30                
Correct output: -83                 | Program output: -83                
Correct output: -89                 | Program output: -89                
Correct output: 19                  | Program output: 19                 
Correct output: -83                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -14                 | Program output: -14                
Correct output: -42                 | Program output: -42                
Correct output: -45                 | Program output: -45                
Correct output: -29                 | Program output: -29                
Correct output: -82                 | Program output: -77                
Correct output: -88                 | Program output: -88                
Correct output: -37                 | Program output: -37                
Correct output: -64                 | Program output: -45                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 13                 
Correct output: -78                 | Program output: -78                
Correct output: -13                 | Program output: -13                
Correct output: -85                 | Program output: -85                
Correct output: -50                 | Program output: -50                
Correct output: -97                 | Program output: -97                
Correct output: -86                 | Program output: 52                 
Correct output: -63                 | Program output: -63                
Correct output: -97                 | Program output: -97                
Correct output: -39                 | Program output: -39                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -88                 | Program output: -88                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_rot} {:close 0, :instruction in1} {:close 0, :instruction tagged_677} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_flush} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_newline} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_dup_items} {:close 1, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_k_when_autoconstructing})
Lexicase best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 119
Percent parens: 0.227
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_rot} {:close 0, :instruction in1} {:close 0, :instruction tagged_677} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_flush} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_newline} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_dup_items} {:close 1, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_k_when_autoconstructing})
Zero cases best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 119
Percent parens: 0.227
--- Lexicase Population Statistics ---
Count of elite individuals by case: (685 716 879 716 716 715 692 715 879 693)
Population mean number of elite cases: 7.41
Count of perfect (error zero) individuals by case: (685 716 879 716 716 715 692 715 879 693)
Population mean number of perfect (error zero) cases: 7.41
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_fromboolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_flush} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction in2} {:close 0, :instruction integer_min} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_rot} {:close 0, :instruction in1} {:close 0, :instruction tagged_677} {:close 1, :instruction exec_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction in2} {:close 1, :instruction integer_yank} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_flush} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_k} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_newline} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_dup_items} {:close 1, :instruction integer_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_k} {:close 0, :instruction tag_boolean_343} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_k} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_noop} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_k_when_autoconstructing})
Best program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 88
Size: 113
Percent parens: 0.221
--- Population Statistics ---
Average total errors in population: 2.594
Median total errors in population: 0
Error averages by case: (0.315 0.284 0.121 0.284 0.284 0.285 0.308 0.285 0.121 0.307)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 69.135
Average program size in population (points): 88.122
Average percent parens in population: 0.218
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.9395
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 129
Genome diversity (% unique genomes):	 0.649
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 132
Syntactic diversity (% unique Push programs):	 0.633
Total error diversity:				 0.01
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2733608
--- Timings ---
Current time: 1559314325136 milliseconds
Total Time:          12.5 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         6.6 seconds, 52.7%
Fitness Testing:      4.0 seconds, 32.4%
Report:               1.8 seconds, 14.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 3
Successful program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 113


Auto-simplifying with starting size: 113
step: 0
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 500
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 1000
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 1500
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 2000
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 2500
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 3000
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 3500
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 4000
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 4500
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

step: 5000
program: (integer_fromboolean boolean_invert_first_then_and boolean_and exec_shove (integer_yankdup exec_if () (in1 in4 integer_min) integer_gt boolean_flush boolean_yankdup) exec_if (in2 integer_min exec_eq boolean_or in4 boolean_dup exec_s_when_autoconstructing () (exec_noop exec_k_when_autoconstructing () (print_integer) integer_rot) () exec_yankdup integer_add exec_empty) (boolean_xor exec_dup_times () boolean_frominteger boolean_and exec_stackdepth) exec_pop (boolean_empty boolean_frominteger boolean_dup boolean_rot in1 tagged_677 exec_empty) exec_y (boolean_swap integer_flush exec_noop boolean_empty in2 integer_yank) exec_yankdup integer_lte integer_flush integer_eq boolean_not exec_noop integer_swap exec_k (exec_y_when_autoconstructing (print_newline integer_lte integer_sub boolean_invert_first_then_and integer_add exec_yank boolean_xor integer_dup_items) integer_pop) (in3 boolean_rot integer_stackdepth) integer_flush integer_sub boolean_frominteger boolean_flush exec_k () (tag_boolean_343 integer_pop integer_eq integer_div boolean_dup integer_inc) exec_k (exec_noop exec_noop exec_do*range () boolean_dup exec_do*range (integer_lt boolean_stackdepth exec_k_when_autoconstructing () ())) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 113

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 201
Test mean error for best: 0.20100
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 1
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 1
Test Case   43 | Error: 0
Test Case   44 | Error: 1
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 1
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 1
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 1
Test Case  203 | Error: 0
Test Case  204 | Error: 1
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 1
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 1
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 1
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 1
Test Case  236 | Error: 1
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 1
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 1
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 1
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 1
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 1
Test Case  282 | Error: 1
Test Case  283 | Error: 0
Test Case  284 | Error: 1
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 1
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 1
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 1
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 1
Test Case  349 | Error: 1
Test Case  350 | Error: 1
Test Case  351 | Error: 1
Test Case  352 | Error: 1
Test Case  353 | Error: 1
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 1
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 1
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 1
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 1
Test Case  402 | Error: 1
Test Case  403 | Error: 0
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 1
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 1
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 1
Test Case  442 | Error: 1
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 1
Test Case  458 | Error: 1
Test Case  459 | Error: 0
Test Case  460 | Error: 1
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 1
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 1
Test Case  475 | Error: 1
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 1
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 1
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 1
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 1
Test Case  535 | Error: 1
Test Case  536 | Error: 1
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 1
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 1
Test Case  576 | Error: 0
Test Case  577 | Error: 1
Test Case  578 | Error: 1
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 1
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 1
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 1
Test Case  614 | Error: 0
Test Case  615 | Error: 1
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 1
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 1
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 1
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 1
Test Case  663 | Error: 1
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 1
Test Case  673 | Error: 0
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 1
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 0
Test Case  711 | Error: 1
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 1
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 1
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 0
Test Case  731 | Error: 1
Test Case  732 | Error: 1
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 1
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 1
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 1
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 1
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 1
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 1
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 1
Test Case  803 | Error: 1
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 1
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 1
Test Case  829 | Error: 0
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 1
Test Case  838 | Error: 0
Test Case  839 | Error: 1
Test Case  840 | Error: 1
Test Case  841 | Error: 1
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 1
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 1
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 1
Test Case  896 | Error: 0
Test Case  897 | Error: 1
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 1
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 0
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 1
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 1
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 1
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 1
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 1
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 1
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 69                  | Program output: 91                 
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -96                
Correct output: -74                 | Program output: -74                
Correct output: -81                 | Program output: -81                
Correct output: 25                  | Program output: 25                 
Correct output: -38                 | Program output: -38                
Correct output: -63                 | Program output: -63                
Correct output: -44                 | Program output: -44                
Correct output: -88                 | Program output: -88                
Correct output: 23                  | Program output: 23                 
Correct output: 87                  | Program output: 87                 
Correct output: -12                 | Program output: -12                
Correct output: -38                 | Program output: -38                
Correct output: -27                 | Program output: -27                
Correct output: 22                  | Program output: 22                 
Correct output: 25                  | Program output: 25                 
Correct output: 5                   | Program output: 5                  
Correct output: 29                  | Program output: 88                 
Correct output: 33                  | Program output: 33                 
Correct output: 27                  | Program output: 48                 
Correct output: 12                  | Program output: 12                 
Correct output: 0                   | Program output: 0                  
Correct output: 22                  | Program output: 60                 
Correct output: 38                  | Program output: 38                 
Correct output: 0                   | Program output: 0                  
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 14                  | Program output: 14                 
Correct output: 21                  | Program output: 21                 
Correct output: 13                  | Program output: 13                 
Correct output: 71                  | Program output: 71                 
Correct output: 4                   | Program output: 49                 
Correct output: 1                   | Program output: 44                 
Correct output: 10                  | Program output: 10                 
Correct output: -64                 | Program output: -1                 
Correct output: -46                 | Program output: -40                
Correct output: -93                 | Program output: -93                
Correct output: -10                 | Program output: -10                
Correct output: -84                 | Program output: -84                
Correct output: 2                   | Program output: 3                  
Correct output: 10                  | Program output: 10                 
Correct output: -97                 | Program output: -84                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: -80                 | Program output: -80                
Correct output: -61                 | Program output: -21                
Correct output: -82                 | Program output: -82                
Correct output: -62                 | Program output: -62                
Correct output: -97                 | Program output: -97                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -38                 | Program output: -38                
Correct output: -28                 | Program output: -28                
Correct output: -69                 | Program output: -69                
Correct output: -59                 | Program output: -55                
Correct output: -86                 | Program output: -86                
Correct output: -88                 | Program output: -88                
Correct output: -25                 | Program output: -25                
Correct output: -33                 | Program output: 24                 
Correct output: -72                 | Program output: -30                
Correct output: -85                 | Program output: -85                
Correct output: -78                 | Program output: -78                
Correct output: -51                 | Program output: -51                
Correct output: -95                 | Program output: -95                
Correct output: -18                 | Program output: -18                
Correct output: -36                 | Program output: -36                
Correct output: -30                 | Program output: -30                
Correct output: -83                 | Program output: -83                
Correct output: -89                 | Program output: -89                
Correct output: 19                  | Program output: 19                 
Correct output: -83                 | Program output: -83                
Correct output: -94                 | Program output: -94                
Correct output: -14                 | Program output: -14                
Correct output: -42                 | Program output: -42                
Correct output: -45                 | Program output: -45                
Correct output: -29                 | Program output: -29                
Correct output: -82                 | Program output: -77                
Correct output: -88                 | Program output: -88                
Correct output: -37                 | Program output: -37                
Correct output: -64                 | Program output: -45                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 13                 
Correct output: -78                 | Program output: -78                
Correct output: -13                 | Program output: -13                
Correct output: -85                 | Program output: -85                
Correct output: -50                 | Program output: -50                
Correct output: -97                 | Program output: -97                
Correct output: -86                 | Program output: 52                 
Correct output: -63                 | Program output: -63                
Correct output: -97                 | Program output: -97                
Correct output: -39                 | Program output: -39                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -88                 | Program output: -88                
;;******************************
