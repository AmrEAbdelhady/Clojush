Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x30b9728f clojush.problems.software.smallest$fn__7460@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[47 47 47 14] 14] [[-77 75 -77 -77] -77] [[-74 53 53 53] -74] [[-29 25 25 25] -29] [[94 94 57 94] 57] [[-64 35 35 35] -64] [[58 58 58 -42] -42] [[-44 24 24 24] -44] [[-69 -69 56 -69] -69] [[75 75 -79 75] -79] [(14 14 14 14) 14] [(9 9 9 9) 9] [(78 78 78 78) 78] [(13 13 13 13) 13] [(-77 -77 -77 -77) -77] [(95 61 16 74) 16] [(27 37 11 26) 11] [(24 59 70 19) 19] [(18 86 29 26) 18] [(63 59 87 92) 59] [(57 62 52 1) 1] [(9 62 23 29) 9] [(43 35 84 68) 35] [(72 59 35 17) 17] [(15 75 4 89) 4] [(21 82 49 64) 21] [(95 5 23 78) 5] [(14 72 16 79) 14] [(92 89 16 9) 9] [(36 67 86 27) 27] [(74 64 63 87) 63] [(93 25 50 34) 25] [(38 36 15 34) 15] [(62 6 11 1) 1] [(29 13 80 74) 13] [(-52 57 -79 -21) -79] [(-82 89 -66 22) -82] [(-97 -11 79 84) -97] [(-16 39 -48 48) -48] [(60 70 76 -38) -38] [(11 33 53 -20) -20] [(-28 -80 68 18) -80] [(-69 -48 3 -85) -85] [(71 70 -70 -40) -70] [(60 -58 11 -95) -95] [(65 -18 -32 -2) -32] [(-5 -25 -81 -81) -81] [(25 2 -15 67) -15] [(32 -60 -29 89) -60] [(28 52 -16 -90) -90] [(-64 -69 -32 1) -69] [(25 -81 -48 -86) -86] [(26 86 -58 -16) -58] [(-19 31 -77 11) -77] [(-20 -73 -90 -96) -96] [(25 34 97 70) 25] [(-4 39 -70 82) -70] [(-32 70 77 7) -32] [(71 -32 -89 67) -89] [(-58 85 87 -71) -71] [(2 87 -8 -33) -33] [(61 36 36 52) 36] [(8 53 74 -47) -47] [(100 -57 59 -76) -76] [(6 64 79 55) 6] [(100 -14 -92 86) -92] [(96 74 -99 14) -99] [(79 53 -31 -83) -83] [(52 17 12 -66) -66] [(16 83 88 -7) -7] [(-99 23 32 -87) -99] [(94 34 36 7) 7] [(-31 91 52 37) -31] [(-84 31 -56 -70) -84] [(69 46 44 28) 28] [(78 46 100 75) 46] [(80 -31 -88 78) -88] [(23 -45 -54 12) -54] [(60 37 94 5) 5] [(10 -81 18 87) -81] [(13 46 84 56) 13] [(18 -23 56 -6) -23] [(7 -65 -74 -3) -74] [(-78 -13 97 81) -78] [(20 92 66 -90) -90] [(7 10 86 -28) -28] [(13 -19 54 -73) -73] [(-90 -9 -51 -20) -90] [(-49 52 -92 16) -92] [(81 94 -58 87) -58] [(-48 -70 -72 93) -72] [(-11 65 -96 59) -96] [(-69 -37 56 56) -69] [(-48 83 16 5) -48] [(100 -92 -43 -20) -92])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[47 47 47 14] 14]
Train Case:   6 | Input/Output: [[-77 75 -77 -77] -77]
Train Case:   7 | Input/Output: [[-74 53 53 53] -74]
Train Case:   8 | Input/Output: [[-29 25 25 25] -29]
Train Case:   9 | Input/Output: [[94 94 57 94] 57]
Train Case:  10 | Input/Output: [[-64 35 35 35] -64]
Train Case:  11 | Input/Output: [[58 58 58 -42] -42]
Train Case:  12 | Input/Output: [[-44 24 24 24] -44]
Train Case:  13 | Input/Output: [[-69 -69 56 -69] -69]
Train Case:  14 | Input/Output: [[75 75 -79 75] -79]
Train Case:  15 | Input/Output: [(14 14 14 14) 14]
Train Case:  16 | Input/Output: [(9 9 9 9) 9]
Train Case:  17 | Input/Output: [(78 78 78 78) 78]
Train Case:  18 | Input/Output: [(13 13 13 13) 13]
Train Case:  19 | Input/Output: [(-77 -77 -77 -77) -77]
Train Case:  20 | Input/Output: [(95 61 16 74) 16]
Train Case:  21 | Input/Output: [(27 37 11 26) 11]
Train Case:  22 | Input/Output: [(24 59 70 19) 19]
Train Case:  23 | Input/Output: [(18 86 29 26) 18]
Train Case:  24 | Input/Output: [(63 59 87 92) 59]
Train Case:  25 | Input/Output: [(57 62 52 1) 1]
Train Case:  26 | Input/Output: [(9 62 23 29) 9]
Train Case:  27 | Input/Output: [(43 35 84 68) 35]
Train Case:  28 | Input/Output: [(72 59 35 17) 17]
Train Case:  29 | Input/Output: [(15 75 4 89) 4]
Train Case:  30 | Input/Output: [(21 82 49 64) 21]
Train Case:  31 | Input/Output: [(95 5 23 78) 5]
Train Case:  32 | Input/Output: [(14 72 16 79) 14]
Train Case:  33 | Input/Output: [(92 89 16 9) 9]
Train Case:  34 | Input/Output: [(36 67 86 27) 27]
Train Case:  35 | Input/Output: [(74 64 63 87) 63]
Train Case:  36 | Input/Output: [(93 25 50 34) 25]
Train Case:  37 | Input/Output: [(38 36 15 34) 15]
Train Case:  38 | Input/Output: [(62 6 11 1) 1]
Train Case:  39 | Input/Output: [(29 13 80 74) 13]
Train Case:  40 | Input/Output: [(-52 57 -79 -21) -79]
Train Case:  41 | Input/Output: [(-82 89 -66 22) -82]
Train Case:  42 | Input/Output: [(-97 -11 79 84) -97]
Train Case:  43 | Input/Output: [(-16 39 -48 48) -48]
Train Case:  44 | Input/Output: [(60 70 76 -38) -38]
Train Case:  45 | Input/Output: [(11 33 53 -20) -20]
Train Case:  46 | Input/Output: [(-28 -80 68 18) -80]
Train Case:  47 | Input/Output: [(-69 -48 3 -85) -85]
Train Case:  48 | Input/Output: [(71 70 -70 -40) -70]
Train Case:  49 | Input/Output: [(60 -58 11 -95) -95]
Train Case:  50 | Input/Output: [(65 -18 -32 -2) -32]
Train Case:  51 | Input/Output: [(-5 -25 -81 -81) -81]
Train Case:  52 | Input/Output: [(25 2 -15 67) -15]
Train Case:  53 | Input/Output: [(32 -60 -29 89) -60]
Train Case:  54 | Input/Output: [(28 52 -16 -90) -90]
Train Case:  55 | Input/Output: [(-64 -69 -32 1) -69]
Train Case:  56 | Input/Output: [(25 -81 -48 -86) -86]
Train Case:  57 | Input/Output: [(26 86 -58 -16) -58]
Train Case:  58 | Input/Output: [(-19 31 -77 11) -77]
Train Case:  59 | Input/Output: [(-20 -73 -90 -96) -96]
Train Case:  60 | Input/Output: [(25 34 97 70) 25]
Train Case:  61 | Input/Output: [(-4 39 -70 82) -70]
Train Case:  62 | Input/Output: [(-32 70 77 7) -32]
Train Case:  63 | Input/Output: [(71 -32 -89 67) -89]
Train Case:  64 | Input/Output: [(-58 85 87 -71) -71]
Train Case:  65 | Input/Output: [(2 87 -8 -33) -33]
Train Case:  66 | Input/Output: [(61 36 36 52) 36]
Train Case:  67 | Input/Output: [(8 53 74 -47) -47]
Train Case:  68 | Input/Output: [(100 -57 59 -76) -76]
Train Case:  69 | Input/Output: [(6 64 79 55) 6]
Train Case:  70 | Input/Output: [(100 -14 -92 86) -92]
Train Case:  71 | Input/Output: [(96 74 -99 14) -99]
Train Case:  72 | Input/Output: [(79 53 -31 -83) -83]
Train Case:  73 | Input/Output: [(52 17 12 -66) -66]
Train Case:  74 | Input/Output: [(16 83 88 -7) -7]
Train Case:  75 | Input/Output: [(-99 23 32 -87) -99]
Train Case:  76 | Input/Output: [(94 34 36 7) 7]
Train Case:  77 | Input/Output: [(-31 91 52 37) -31]
Train Case:  78 | Input/Output: [(-84 31 -56 -70) -84]
Train Case:  79 | Input/Output: [(69 46 44 28) 28]
Train Case:  80 | Input/Output: [(78 46 100 75) 46]
Train Case:  81 | Input/Output: [(80 -31 -88 78) -88]
Train Case:  82 | Input/Output: [(23 -45 -54 12) -54]
Train Case:  83 | Input/Output: [(60 37 94 5) 5]
Train Case:  84 | Input/Output: [(10 -81 18 87) -81]
Train Case:  85 | Input/Output: [(13 46 84 56) 13]
Train Case:  86 | Input/Output: [(18 -23 56 -6) -23]
Train Case:  87 | Input/Output: [(7 -65 -74 -3) -74]
Train Case:  88 | Input/Output: [(-78 -13 97 81) -78]
Train Case:  89 | Input/Output: [(20 92 66 -90) -90]
Train Case:  90 | Input/Output: [(7 10 86 -28) -28]
Train Case:  91 | Input/Output: [(13 -19 54 -73) -73]
Train Case:  92 | Input/Output: [(-90 -9 -51 -20) -90]
Train Case:  93 | Input/Output: [(-49 52 -92 16) -92]
Train Case:  94 | Input/Output: [(81 94 -58 87) -58]
Train Case:  95 | Input/Output: [(-48 -70 -72 93) -72]
Train Case:  96 | Input/Output: [(-11 65 -96 59) -96]
Train Case:  97 | Input/Output: [(-69 -37 56 56) -69]
Train Case:  98 | Input/Output: [(-48 83 16 5) -48]
Train Case:  99 | Input/Output: [(100 -92 -43 -20) -92]
Test Case:   0 | Input/Output: [[-86 -86 -56 -86] -86]
Test Case:   1 | Input/Output: [[-36 -36 -36 62] -36]
Test Case:   2 | Input/Output: [[77 77 77 -4] -4]
Test Case:   3 | Input/Output: [[24 24 24 80] 24]
Test Case:   4 | Input/Output: [[100 100 11 100] 11]
Test Case:   5 | Input/Output: [[-81 -81 54 -81] -81]
Test Case:   6 | Input/Output: [[92 -72 -72 -72] -72]
Test Case:   7 | Input/Output: [[21 21 21 12] 12]
Test Case:   8 | Input/Output: [[-76 44 44 44] -76]
Test Case:   9 | Input/Output: [[51 51 -33 51] -33]
Test Case:  10 | Input/Output: [[-25 -25 -94 -25] -94]
Test Case:  11 | Input/Output: [[-89 -89 -31 -89] -89]
Test Case:  12 | Input/Output: [[-73 -59 -59 -59] -73]
Test Case:  13 | Input/Output: [[-39 -39 -39 -72] -72]
Test Case:  14 | Input/Output: [[-72 -72 -72 83] -72]
Test Case:  15 | Input/Output: [[-53 -53 -53 -97] -97]
Test Case:  16 | Input/Output: [[87 -28 87 87] -28]
Test Case:  17 | Input/Output: [[-72 21 21 21] -72]
Test Case:  18 | Input/Output: [[21 -9 21 21] -9]
Test Case:  19 | Input/Output: [[62 -6 -6 -6] -6]
Test Case:  20 | Input/Output: [[-84 -99 -84 -84] -99]
Test Case:  21 | Input/Output: [[71 71 71 35] 35]
Test Case:  22 | Input/Output: [[3 -50 -50 -50] -50]
Test Case:  23 | Input/Output: [[30 30 83 30] 30]
Test Case:  24 | Input/Output: [[-82 -82 -82 9] -82]
Test Case:  25 | Input/Output: [[-95 98 -95 -95] -95]
Test Case:  26 | Input/Output: [[-95 -40 -95 -95] -95]
Test Case:  27 | Input/Output: [[-1 -57 -57 -57] -57]
Test Case:  28 | Input/Output: [[30 -31 -31 -31] -31]
Test Case:  29 | Input/Output: [[22 22 -91 22] -91]
Test Case:  30 | Input/Output: [[-60 -9 -60 -60] -60]
Test Case:  31 | Input/Output: [[-32 -32 97 -32] -32]
Test Case:  32 | Input/Output: [[54 6 54 54] 6]
Test Case:  33 | Input/Output: [[-92 -92 -99 -92] -99]
Test Case:  34 | Input/Output: [[58 75 58 58] 58]
Test Case:  35 | Input/Output: [[-72 -72 62 -72] -72]
Test Case:  36 | Input/Output: [[-28 -28 -28 -56] -56]
Test Case:  37 | Input/Output: [[-48 -97 -97 -97] -97]
Test Case:  38 | Input/Output: [[30 -52 30 30] -52]
Test Case:  39 | Input/Output: [[5 5 5 -21] -21]
Test Case:  40 | Input/Output: [[-19 -19 -19 -76] -76]
Test Case:  41 | Input/Output: [[45 45 45 -100] -100]
Test Case:  42 | Input/Output: [[30 30 30 25] 25]
Test Case:  43 | Input/Output: [[65 33 65 65] 33]
Test Case:  44 | Input/Output: [[92 92 92 -44] -44]
Test Case:  45 | Input/Output: [[-80 -80 -80 -46] -80]
Test Case:  46 | Input/Output: [[-82 -82 -58 -82] -82]
Test Case:  47 | Input/Output: [[-74 68 -74 -74] -74]
Test Case:  48 | Input/Output: [[13 13 13 15] 13]
Test Case:  49 | Input/Output: [[61 -22 -22 -22] -22]
Test Case:  50 | Input/Output: [[78 35 78 78] 35]
Test Case:  51 | Input/Output: [[-95 -79 -79 -79] -95]
Test Case:  52 | Input/Output: [[63 61 61 61] 61]
Test Case:  53 | Input/Output: [[-92 57 57 57] -92]
Test Case:  54 | Input/Output: [[-63 -63 62 -63] -63]
Test Case:  55 | Input/Output: [[53 53 53 56] 53]
Test Case:  56 | Input/Output: [[-71 5 -71 -71] -71]
Test Case:  57 | Input/Output: [[55 55 82 55] 55]
Test Case:  58 | Input/Output: [[39 39 39 -48] -48]
Test Case:  59 | Input/Output: [[-96 -51 -51 -51] -96]
Test Case:  60 | Input/Output: [[53 53 53 -95] -95]
Test Case:  61 | Input/Output: [[-57 -57 45 -57] -57]
Test Case:  62 | Input/Output: [[36 36 36 -76] -76]
Test Case:  63 | Input/Output: [[94 94 38 94] 38]
Test Case:  64 | Input/Output: [[-58 -34 -58 -58] -58]
Test Case:  65 | Input/Output: [[75 -99 75 75] -99]
Test Case:  66 | Input/Output: [[57 57 -9 57] -9]
Test Case:  67 | Input/Output: [[-100 -100 66 -100] -100]
Test Case:  68 | Input/Output: [[90 90 90 51] 51]
Test Case:  69 | Input/Output: [[93 -42 93 93] -42]
Test Case:  70 | Input/Output: [[-68 -68 100 -68] -68]
Test Case:  71 | Input/Output: [[33 -65 33 33] -65]
Test Case:  72 | Input/Output: [[23 21 21 21] 21]
Test Case:  73 | Input/Output: [[-61 25 -61 -61] -61]
Test Case:  74 | Input/Output: [[25 -36 25 25] -36]
Test Case:  75 | Input/Output: [[85 83 83 83] 83]
Test Case:  76 | Input/Output: [[17 11 11 11] 11]
Test Case:  77 | Input/Output: [[-66 -33 -66 -66] -66]
Test Case:  78 | Input/Output: [[-99 -69 -69 -69] -99]
Test Case:  79 | Input/Output: [[11 11 85 11] 11]
Test Case:  80 | Input/Output: [[-28 -72 -72 -72] -72]
Test Case:  81 | Input/Output: [[-5 -5 -44 -5] -44]
Test Case:  82 | Input/Output: [[-48 -48 -39 -48] -48]
Test Case:  83 | Input/Output: [[16 8 16 16] 8]
Test Case:  84 | Input/Output: [[-34 -17 -34 -34] -34]
Test Case:  85 | Input/Output: [[54 27 27 27] 27]
Test Case:  86 | Input/Output: [[59 97 97 97] 59]
Test Case:  87 | Input/Output: [[51 51 -59 51] -59]
Test Case:  88 | Input/Output: [[-40 -40 -40 32] -40]
Test Case:  89 | Input/Output: [[-40 92 -40 -40] -40]
Test Case:  90 | Input/Output: [[84 84 -7 84] -7]
Test Case:  91 | Input/Output: [[-41 -41 -97 -41] -97]
Test Case:  92 | Input/Output: [[-11 -54 -54 -54] -54]
Test Case:  93 | Input/Output: [[-24 68 -24 -24] -24]
Test Case:  94 | Input/Output: [[58 78 58 58] 58]
Test Case:  95 | Input/Output: [[-16 -99 -99 -99] -99]
Test Case:  96 | Input/Output: [[41 -40 41 41] -40]
Test Case:  97 | Input/Output: [[-65 -65 44 -65] -65]
Test Case:  98 | Input/Output: [[-4 -65 -65 -65] -65]
Test Case:  99 | Input/Output: [[-27 -27 -27 80] -27]
Test Case: 100 | Input/Output: [(100 100 100 100) 100]
Test Case: 101 | Input/Output: [(77 77 77 77) 77]
Test Case: 102 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 103 | Input/Output: [(88 88 88 88) 88]
Test Case: 104 | Input/Output: [(40 40 40 40) 40]
Test Case: 105 | Input/Output: [(29 29 29 29) 29]
Test Case: 106 | Input/Output: [(76 76 76 76) 76]
Test Case: 107 | Input/Output: [(35 35 35 35) 35]
Test Case: 108 | Input/Output: [(75 75 75 75) 75]
Test Case: 109 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 110 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 111 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 112 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 113 | Input/Output: [(31 31 31 31) 31]
Test Case: 114 | Input/Output: [(71 71 71 71) 71]
Test Case: 115 | Input/Output: [(98 98 98 98) 98]
Test Case: 116 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 117 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 118 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 119 | Input/Output: [(16 16 16 16) 16]
Test Case: 120 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 121 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 122 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 123 | Input/Output: [(14 14 14 14) 14]
Test Case: 124 | Input/Output: [(41 41 41 41) 41]
Test Case: 125 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 126 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 127 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 128 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 129 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 130 | Input/Output: [(72 72 72 72) 72]
Test Case: 131 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 132 | Input/Output: [(21 21 21 21) 21]
Test Case: 133 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 134 | Input/Output: [(18 18 18 18) 18]
Test Case: 135 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 136 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 137 | Input/Output: [(54 54 54 54) 54]
Test Case: 138 | Input/Output: [(23 23 23 23) 23]
Test Case: 139 | Input/Output: [(46 46 46 46) 46]
Test Case: 140 | Input/Output: [(19 19 19 19) 19]
Test Case: 141 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 142 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 143 | Input/Output: [(4 4 4 4) 4]
Test Case: 144 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 145 | Input/Output: [(5 5 5 5) 5]
Test Case: 146 | Input/Output: [(35 35 35 35) 35]
Test Case: 147 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 148 | Input/Output: [(-52 -52 -52 -52) -52]
Test Case: 149 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 150 | Input/Output: [(58 58 58 58) 58]
Test Case: 151 | Input/Output: [(5 5 5 5) 5]
Test Case: 152 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 153 | Input/Output: [(62 62 62 62) 62]
Test Case: 154 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 155 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 156 | Input/Output: [(100 100 100 100) 100]
Test Case: 157 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 158 | Input/Output: [(57 57 57 57) 57]
Test Case: 159 | Input/Output: [(100 100 100 100) 100]
Test Case: 160 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 161 | Input/Output: [(14 14 14 14) 14]
Test Case: 162 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 163 | Input/Output: [(69 69 69 69) 69]
Test Case: 164 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 165 | Input/Output: [(-79 -79 -79 -79) -79]
Test Case: 166 | Input/Output: [(72 72 72 72) 72]
Test Case: 167 | Input/Output: [(79 79 79 79) 79]
Test Case: 168 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 169 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 170 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 171 | Input/Output: [(81 81 81 81) 81]
Test Case: 172 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 173 | Input/Output: [(70 70 70 70) 70]
Test Case: 174 | Input/Output: [(96 96 96 96) 96]
Test Case: 175 | Input/Output: [(39 39 39 39) 39]
Test Case: 176 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 177 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 178 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 179 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 180 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 181 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 182 | Input/Output: [(6 6 6 6) 6]
Test Case: 183 | Input/Output: [(84 84 84 84) 84]
Test Case: 184 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 185 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 186 | Input/Output: [(14 14 14 14) 14]
Test Case: 187 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 188 | Input/Output: [(95 95 95 95) 95]
Test Case: 189 | Input/Output: [(41 41 41 41) 41]
Test Case: 190 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 191 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 192 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 193 | Input/Output: [(3 3 3 3) 3]
Test Case: 194 | Input/Output: [(92 92 92 92) 92]
Test Case: 195 | Input/Output: [(16 16 16 16) 16]
Test Case: 196 | Input/Output: [(72 72 72 72) 72]
Test Case: 197 | Input/Output: [(47 47 47 47) 47]
Test Case: 198 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 199 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 200 | Input/Output: [(97 51 75 8) 8]
Test Case: 201 | Input/Output: [(68 75 70 12) 12]
Test Case: 202 | Input/Output: [(59 77 58 64) 58]
Test Case: 203 | Input/Output: [(69 48 47 97) 47]
Test Case: 204 | Input/Output: [(3 89 58 69) 3]
Test Case: 205 | Input/Output: [(23 74 16 17) 16]
Test Case: 206 | Input/Output: [(22 75 6 43) 6]
Test Case: 207 | Input/Output: [(48 24 3 4) 3]
Test Case: 208 | Input/Output: [(95 83 51 63) 51]
Test Case: 209 | Input/Output: [(15 85 24 96) 15]
Test Case: 210 | Input/Output: [(18 55 93 41) 18]
Test Case: 211 | Input/Output: [(29 69 4 18) 4]
Test Case: 212 | Input/Output: [(30 42 68 37) 30]
Test Case: 213 | Input/Output: [(36 53 42 10) 10]
Test Case: 214 | Input/Output: [(50 78 7 37) 7]
Test Case: 215 | Input/Output: [(24 66 63 59) 24]
Test Case: 216 | Input/Output: [(34 55 11 95) 11]
Test Case: 217 | Input/Output: [(56 91 23 42) 23]
Test Case: 218 | Input/Output: [(59 71 23 24) 23]
Test Case: 219 | Input/Output: [(11 53 70 76) 11]
Test Case: 220 | Input/Output: [(75 30 29 96) 29]
Test Case: 221 | Input/Output: [(8 5 6 75) 5]
Test Case: 222 | Input/Output: [(23 42 42 57) 23]
Test Case: 223 | Input/Output: [(57 99 42 46) 42]
Test Case: 224 | Input/Output: [(89 0 57 83) 0]
Test Case: 225 | Input/Output: [(85 55 87 87) 55]
Test Case: 226 | Input/Output: [(26 62 54 25) 25]
Test Case: 227 | Input/Output: [(30 47 90 58) 30]
Test Case: 228 | Input/Output: [(52 74 25 49) 25]
Test Case: 229 | Input/Output: [(68 54 85 39) 39]
Test Case: 230 | Input/Output: [(79 68 76 89) 68]
Test Case: 231 | Input/Output: [(5 84 29 79) 5]
Test Case: 232 | Input/Output: [(10 50 55 94) 10]
Test Case: 233 | Input/Output: [(4 79 53 19) 4]
Test Case: 234 | Input/Output: [(72 58 69 61) 58]
Test Case: 235 | Input/Output: [(94 5 83 49) 5]
Test Case: 236 | Input/Output: [(60 6 76 10) 6]
Test Case: 237 | Input/Output: [(50 62 9 50) 9]
Test Case: 238 | Input/Output: [(22 19 50 81) 19]
Test Case: 239 | Input/Output: [(21 7 75 98) 7]
Test Case: 240 | Input/Output: [(62 65 30 59) 30]
Test Case: 241 | Input/Output: [(28 1 99 25) 1]
Test Case: 242 | Input/Output: [(57 50 77 67) 50]
Test Case: 243 | Input/Output: [(68 54 82 10) 10]
Test Case: 244 | Input/Output: [(25 54 68 74) 25]
Test Case: 245 | Input/Output: [(11 84 50 12) 11]
Test Case: 246 | Input/Output: [(4 92 55 27) 4]
Test Case: 247 | Input/Output: [(16 99 95 6) 6]
Test Case: 248 | Input/Output: [(49 41 67 76) 41]
Test Case: 249 | Input/Output: [(85 8 59 79) 8]
Test Case: 250 | Input/Output: [(61 5 93 87) 5]
Test Case: 251 | Input/Output: [(94 17 94 1) 1]
Test Case: 252 | Input/Output: [(88 15 96 11) 11]
Test Case: 253 | Input/Output: [(7 77 99 37) 7]
Test Case: 254 | Input/Output: [(77 82 26 83) 26]
Test Case: 255 | Input/Output: [(57 51 22 3) 3]
Test Case: 256 | Input/Output: [(20 66 31 14) 14]
Test Case: 257 | Input/Output: [(45 48 26 74) 26]
Test Case: 258 | Input/Output: [(84 60 7 33) 7]
Test Case: 259 | Input/Output: [(56 57 4 8) 4]
Test Case: 260 | Input/Output: [(7 21 100 53) 7]
Test Case: 261 | Input/Output: [(81 11 50 66) 11]
Test Case: 262 | Input/Output: [(29 38 68 96) 29]
Test Case: 263 | Input/Output: [(55 61 91 31) 31]
Test Case: 264 | Input/Output: [(70 14 78 97) 14]
Test Case: 265 | Input/Output: [(59 79 68 98) 59]
Test Case: 266 | Input/Output: [(38 9 56 10) 9]
Test Case: 267 | Input/Output: [(80 30 38 31) 30]
Test Case: 268 | Input/Output: [(96 76 38 96) 38]
Test Case: 269 | Input/Output: [(94 3 30 72) 3]
Test Case: 270 | Input/Output: [(35 17 49 74) 17]
Test Case: 271 | Input/Output: [(31 97 97 99) 31]
Test Case: 272 | Input/Output: [(24 66 13 23) 13]
Test Case: 273 | Input/Output: [(38 41 70 65) 38]
Test Case: 274 | Input/Output: [(27 31 45 91) 27]
Test Case: 275 | Input/Output: [(28 88 6 65) 6]
Test Case: 276 | Input/Output: [(77 65 45 37) 37]
Test Case: 277 | Input/Output: [(9 32 11 35) 9]
Test Case: 278 | Input/Output: [(47 6 5 81) 5]
Test Case: 279 | Input/Output: [(94 87 42 43) 42]
Test Case: 280 | Input/Output: [(27 50 27 13) 13]
Test Case: 281 | Input/Output: [(84 87 36 20) 20]
Test Case: 282 | Input/Output: [(31 71 13 53) 13]
Test Case: 283 | Input/Output: [(97 31 79 6) 6]
Test Case: 284 | Input/Output: [(35 20 45 91) 20]
Test Case: 285 | Input/Output: [(42 34 36 35) 34]
Test Case: 286 | Input/Output: [(5 97 78 22) 5]
Test Case: 287 | Input/Output: [(1 81 28 56) 1]
Test Case: 288 | Input/Output: [(4 87 6 20) 4]
Test Case: 289 | Input/Output: [(62 76 91 89) 62]
Test Case: 290 | Input/Output: [(8 23 0 97) 0]
Test Case: 291 | Input/Output: [(89 85 77 71) 71]
Test Case: 292 | Input/Output: [(60 31 19 26) 19]
Test Case: 293 | Input/Output: [(5 41 92 89) 5]
Test Case: 294 | Input/Output: [(37 15 34 98) 15]
Test Case: 295 | Input/Output: [(94 71 85 60) 60]
Test Case: 296 | Input/Output: [(70 23 92 7) 7]
Test Case: 297 | Input/Output: [(54 14 77 85) 14]
Test Case: 298 | Input/Output: [(28 64 0 39) 0]
Test Case: 299 | Input/Output: [(20 12 97 7) 7]
Test Case: 300 | Input/Output: [(6 51 91 93) 6]
Test Case: 301 | Input/Output: [(24 51 88 67) 24]
Test Case: 302 | Input/Output: [(65 71 22 6) 6]
Test Case: 303 | Input/Output: [(55 80 87 96) 55]
Test Case: 304 | Input/Output: [(55 1 20 22) 1]
Test Case: 305 | Input/Output: [(25 74 14 15) 14]
Test Case: 306 | Input/Output: [(91 60 32 69) 32]
Test Case: 307 | Input/Output: [(29 12 91 99) 12]
Test Case: 308 | Input/Output: [(17 66 21 15) 15]
Test Case: 309 | Input/Output: [(4 17 6 78) 4]
Test Case: 310 | Input/Output: [(6 76 93 65) 6]
Test Case: 311 | Input/Output: [(88 98 55 55) 55]
Test Case: 312 | Input/Output: [(81 26 56 84) 26]
Test Case: 313 | Input/Output: [(19 74 13 96) 13]
Test Case: 314 | Input/Output: [(88 26 57 2) 2]
Test Case: 315 | Input/Output: [(19 33 41 66) 19]
Test Case: 316 | Input/Output: [(53 51 46 60) 46]
Test Case: 317 | Input/Output: [(20 87 99 93) 20]
Test Case: 318 | Input/Output: [(1 84 53 61) 1]
Test Case: 319 | Input/Output: [(63 57 79 20) 20]
Test Case: 320 | Input/Output: [(25 69 97 30) 25]
Test Case: 321 | Input/Output: [(48 46 38 16) 16]
Test Case: 322 | Input/Output: [(32 6 1 14) 1]
Test Case: 323 | Input/Output: [(98 28 4 86) 4]
Test Case: 324 | Input/Output: [(79 82 35 72) 35]
Test Case: 325 | Input/Output: [(50 90 99 8) 8]
Test Case: 326 | Input/Output: [(42 40 58 53) 40]
Test Case: 327 | Input/Output: [(54 59 56 84) 54]
Test Case: 328 | Input/Output: [(27 3 66 30) 3]
Test Case: 329 | Input/Output: [(1 78 7 21) 1]
Test Case: 330 | Input/Output: [(52 59 88 39) 39]
Test Case: 331 | Input/Output: [(13 65 36 10) 10]
Test Case: 332 | Input/Output: [(20 42 93 44) 20]
Test Case: 333 | Input/Output: [(63 74 83 25) 25]
Test Case: 334 | Input/Output: [(11 2 39 68) 2]
Test Case: 335 | Input/Output: [(85 47 75 37) 37]
Test Case: 336 | Input/Output: [(32 62 43 91) 32]
Test Case: 337 | Input/Output: [(55 22 83 36) 22]
Test Case: 338 | Input/Output: [(55 18 89 31) 18]
Test Case: 339 | Input/Output: [(47 32 38 89) 32]
Test Case: 340 | Input/Output: [(11 49 96 85) 11]
Test Case: 341 | Input/Output: [(30 76 78 7) 7]
Test Case: 342 | Input/Output: [(84 4 17 55) 4]
Test Case: 343 | Input/Output: [(37 86 35 56) 35]
Test Case: 344 | Input/Output: [(10 26 0 73) 0]
Test Case: 345 | Input/Output: [(51 93 9 59) 9]
Test Case: 346 | Input/Output: [(51 61 91 39) 39]
Test Case: 347 | Input/Output: [(87 38 90 35) 35]
Test Case: 348 | Input/Output: [(40 1 78 85) 1]
Test Case: 349 | Input/Output: [(83 1 91 87) 1]
Test Case: 350 | Input/Output: [(85 53 46 75) 46]
Test Case: 351 | Input/Output: [(18 17 13 31) 13]
Test Case: 352 | Input/Output: [(16 60 82 87) 16]
Test Case: 353 | Input/Output: [(13 37 75 4) 4]
Test Case: 354 | Input/Output: [(75 45 27 11) 11]
Test Case: 355 | Input/Output: [(45 61 16 39) 16]
Test Case: 356 | Input/Output: [(80 54 38 15) 15]
Test Case: 357 | Input/Output: [(64 3 76 69) 3]
Test Case: 358 | Input/Output: [(54 6 61 46) 6]
Test Case: 359 | Input/Output: [(25 87 30 53) 25]
Test Case: 360 | Input/Output: [(68 18 89 48) 18]
Test Case: 361 | Input/Output: [(25 47 93 6) 6]
Test Case: 362 | Input/Output: [(40 69 6 84) 6]
Test Case: 363 | Input/Output: [(71 33 17 95) 17]
Test Case: 364 | Input/Output: [(67 24 47 6) 6]
Test Case: 365 | Input/Output: [(20 70 42 93) 20]
Test Case: 366 | Input/Output: [(7 18 66 10) 7]
Test Case: 367 | Input/Output: [(70 8 86 35) 8]
Test Case: 368 | Input/Output: [(2 44 49 99) 2]
Test Case: 369 | Input/Output: [(11 10 29 37) 10]
Test Case: 370 | Input/Output: [(64 82 5 92) 5]
Test Case: 371 | Input/Output: [(9 7 44 61) 7]
Test Case: 372 | Input/Output: [(56 15 79 33) 15]
Test Case: 373 | Input/Output: [(34 66 25 46) 25]
Test Case: 374 | Input/Output: [(19 23 18 21) 18]
Test Case: 375 | Input/Output: [(39 54 89 79) 39]
Test Case: 376 | Input/Output: [(94 74 98 36) 36]
Test Case: 377 | Input/Output: [(28 84 95 84) 28]
Test Case: 378 | Input/Output: [(33 31 56 84) 31]
Test Case: 379 | Input/Output: [(45 98 62 72) 45]
Test Case: 380 | Input/Output: [(55 9 35 86) 9]
Test Case: 381 | Input/Output: [(62 89 37 34) 34]
Test Case: 382 | Input/Output: [(37 4 4 67) 4]
Test Case: 383 | Input/Output: [(83 64 81 77) 64]
Test Case: 384 | Input/Output: [(0 50 57 33) 0]
Test Case: 385 | Input/Output: [(8 50 100 76) 8]
Test Case: 386 | Input/Output: [(92 76 46 90) 46]
Test Case: 387 | Input/Output: [(10 77 34 88) 10]
Test Case: 388 | Input/Output: [(3 7 11 41) 3]
Test Case: 389 | Input/Output: [(94 33 26 20) 20]
Test Case: 390 | Input/Output: [(85 34 75 97) 34]
Test Case: 391 | Input/Output: [(31 27 25 13) 13]
Test Case: 392 | Input/Output: [(7 45 7 68) 7]
Test Case: 393 | Input/Output: [(40 85 86 76) 40]
Test Case: 394 | Input/Output: [(39 84 93 38) 38]
Test Case: 395 | Input/Output: [(8 97 4 100) 4]
Test Case: 396 | Input/Output: [(31 92 30 47) 30]
Test Case: 397 | Input/Output: [(95 6 14 37) 6]
Test Case: 398 | Input/Output: [(65 67 32 45) 32]
Test Case: 399 | Input/Output: [(11 20 3 56) 3]
Test Case: 400 | Input/Output: [(100 -68 -50 39) -68]
Test Case: 401 | Input/Output: [(68 47 49 -79) -79]
Test Case: 402 | Input/Output: [(-54 92 -32 -63) -63]
Test Case: 403 | Input/Output: [(11 -83 -57 21) -83]
Test Case: 404 | Input/Output: [(48 85 -36 52) -36]
Test Case: 405 | Input/Output: [(-36 49 28 67) -36]
Test Case: 406 | Input/Output: [(84 15 41 -10) -10]
Test Case: 407 | Input/Output: [(-63 -9 -19 -81) -81]
Test Case: 408 | Input/Output: [(88 -18 -89 -55) -89]
Test Case: 409 | Input/Output: [(20 -45 29 20) -45]
Test Case: 410 | Input/Output: [(10 85 -67 16) -67]
Test Case: 411 | Input/Output: [(61 -67 -83 -87) -87]
Test Case: 412 | Input/Output: [(73 -69 73 -14) -69]
Test Case: 413 | Input/Output: [(20 -87 -62 98) -87]
Test Case: 414 | Input/Output: [(-29 -66 91 15) -66]
Test Case: 415 | Input/Output: [(-83 7 -31 4) -83]
Test Case: 416 | Input/Output: [(-99 -33 -98 85) -99]
Test Case: 417 | Input/Output: [(-41 -24 -27 -11) -41]
Test Case: 418 | Input/Output: [(-96 -82 -22 -10) -96]
Test Case: 419 | Input/Output: [(63 -94 -43 -62) -94]
Test Case: 420 | Input/Output: [(-25 -72 -88 -20) -88]
Test Case: 421 | Input/Output: [(12 -8 41 84) -8]
Test Case: 422 | Input/Output: [(-42 88 9 38) -42]
Test Case: 423 | Input/Output: [(-18 -22 60 86) -22]
Test Case: 424 | Input/Output: [(-17 76 -21 -65) -65]
Test Case: 425 | Input/Output: [(14 -93 87 53) -93]
Test Case: 426 | Input/Output: [(-100 0 5 -2) -100]
Test Case: 427 | Input/Output: [(-60 -5 -44 84) -60]
Test Case: 428 | Input/Output: [(85 -17 -91 -6) -91]
Test Case: 429 | Input/Output: [(-5 16 63 -62) -62]
Test Case: 430 | Input/Output: [(77 2 -59 4) -59]
Test Case: 431 | Input/Output: [(77 -24 30 -58) -58]
Test Case: 432 | Input/Output: [(45 -4 9 7) -4]
Test Case: 433 | Input/Output: [(-89 70 31 -52) -89]
Test Case: 434 | Input/Output: [(57 -28 -54 18) -54]
Test Case: 435 | Input/Output: [(93 -68 48 38) -68]
Test Case: 436 | Input/Output: [(31 47 -70 22) -70]
Test Case: 437 | Input/Output: [(51 20 -91 39) -91]
Test Case: 438 | Input/Output: [(-83 13 38 61) -83]
Test Case: 439 | Input/Output: [(-10 -98 31 -91) -98]
Test Case: 440 | Input/Output: [(31 -71 70 -18) -71]
Test Case: 441 | Input/Output: [(30 33 63 -100) -100]
Test Case: 442 | Input/Output: [(0 -33 -18 -20) -33]
Test Case: 443 | Input/Output: [(33 -33 40 62) -33]
Test Case: 444 | Input/Output: [(98 94 73 -38) -38]
Test Case: 445 | Input/Output: [(-29 92 78 -4) -29]
Test Case: 446 | Input/Output: [(-8 -77 46 71) -77]
Test Case: 447 | Input/Output: [(59 -22 -47 1) -47]
Test Case: 448 | Input/Output: [(-32 -80 -25 -99) -99]
Test Case: 449 | Input/Output: [(24 -48 27 -24) -48]
Test Case: 450 | Input/Output: [(5 -62 -38 16) -62]
Test Case: 451 | Input/Output: [(43 45 68 79) 43]
Test Case: 452 | Input/Output: [(-57 57 -50 -29) -57]
Test Case: 453 | Input/Output: [(46 -15 28 -82) -82]
Test Case: 454 | Input/Output: [(-78 50 62 -87) -87]
Test Case: 455 | Input/Output: [(-55 50 2 -34) -55]
Test Case: 456 | Input/Output: [(-64 -96 69 37) -96]
Test Case: 457 | Input/Output: [(0 -91 -76 47) -91]
Test Case: 458 | Input/Output: [(65 -58 -17 -92) -92]
Test Case: 459 | Input/Output: [(79 74 -24 -86) -86]
Test Case: 460 | Input/Output: [(-28 89 -85 -35) -85]
Test Case: 461 | Input/Output: [(82 26 0 -17) -17]
Test Case: 462 | Input/Output: [(46 -69 -48 18) -69]
Test Case: 463 | Input/Output: [(61 -81 -38 32) -81]
Test Case: 464 | Input/Output: [(32 56 1 -19) -19]
Test Case: 465 | Input/Output: [(-48 77 -54 -1) -54]
Test Case: 466 | Input/Output: [(24 -50 36 54) -50]
Test Case: 467 | Input/Output: [(74 31 51 -80) -80]
Test Case: 468 | Input/Output: [(8 -80 -64 90) -80]
Test Case: 469 | Input/Output: [(26 -11 92 -53) -53]
Test Case: 470 | Input/Output: [(-91 93 93 37) -91]
Test Case: 471 | Input/Output: [(-90 -26 -24 24) -90]
Test Case: 472 | Input/Output: [(40 -40 58 -63) -63]
Test Case: 473 | Input/Output: [(32 69 -74 45) -74]
Test Case: 474 | Input/Output: [(-41 -86 -54 4) -86]
Test Case: 475 | Input/Output: [(38 76 -85 62) -85]
Test Case: 476 | Input/Output: [(-81 -73 -18 -50) -81]
Test Case: 477 | Input/Output: [(-37 -94 51 94) -94]
Test Case: 478 | Input/Output: [(21 22 57 -51) -51]
Test Case: 479 | Input/Output: [(74 74 53 -50) -50]
Test Case: 480 | Input/Output: [(41 -100 28 12) -100]
Test Case: 481 | Input/Output: [(-91 100 34 -27) -91]
Test Case: 482 | Input/Output: [(-87 89 -21 -57) -87]
Test Case: 483 | Input/Output: [(31 12 10 33) 10]
Test Case: 484 | Input/Output: [(-74 29 -53 82) -74]
Test Case: 485 | Input/Output: [(74 43 35 88) 35]
Test Case: 486 | Input/Output: [(-36 -59 31 -47) -59]
Test Case: 487 | Input/Output: [(53 60 84 -40) -40]
Test Case: 488 | Input/Output: [(-18 22 47 -21) -21]
Test Case: 489 | Input/Output: [(48 32 30 -84) -84]
Test Case: 490 | Input/Output: [(-54 -25 19 -55) -55]
Test Case: 491 | Input/Output: [(-100 10 -48 -2) -100]
Test Case: 492 | Input/Output: [(91 -27 -86 -95) -95]
Test Case: 493 | Input/Output: [(36 -47 30 59) -47]
Test Case: 494 | Input/Output: [(47 -69 91 37) -69]
Test Case: 495 | Input/Output: [(-48 51 -100 -12) -100]
Test Case: 496 | Input/Output: [(75 -95 -71 22) -95]
Test Case: 497 | Input/Output: [(56 0 -4 68) -4]
Test Case: 498 | Input/Output: [(-28 5 -29 -90) -90]
Test Case: 499 | Input/Output: [(-30 -70 -93 -43) -93]
Test Case: 500 | Input/Output: [(19 -37 -31 -61) -61]
Test Case: 501 | Input/Output: [(-26 67 90 89) -26]
Test Case: 502 | Input/Output: [(34 -85 -31 70) -85]
Test Case: 503 | Input/Output: [(74 -35 -36 -23) -36]
Test Case: 504 | Input/Output: [(17 -33 54 97) -33]
Test Case: 505 | Input/Output: [(15 22 -18 60) -18]
Test Case: 506 | Input/Output: [(-78 41 32 -68) -78]
Test Case: 507 | Input/Output: [(-75 54 8 -80) -80]
Test Case: 508 | Input/Output: [(-41 72 -60 52) -60]
Test Case: 509 | Input/Output: [(56 63 7 -86) -86]
Test Case: 510 | Input/Output: [(97 96 -35 42) -35]
Test Case: 511 | Input/Output: [(-100 45 43 -47) -100]
Test Case: 512 | Input/Output: [(-80 99 -82 -100) -100]
Test Case: 513 | Input/Output: [(89 -86 1 -2) -86]
Test Case: 514 | Input/Output: [(50 -51 44 -6) -51]
Test Case: 515 | Input/Output: [(-81 -23 6 1) -81]
Test Case: 516 | Input/Output: [(-58 88 72 71) -58]
Test Case: 517 | Input/Output: [(-70 -36 46 -1) -70]
Test Case: 518 | Input/Output: [(-54 -33 -24 -100) -100]
Test Case: 519 | Input/Output: [(23 98 32 90) 23]
Test Case: 520 | Input/Output: [(-64 19 -15 -86) -86]
Test Case: 521 | Input/Output: [(-14 89 -89 99) -89]
Test Case: 522 | Input/Output: [(-37 -87 60 -37) -87]
Test Case: 523 | Input/Output: [(70 80 42 -98) -98]
Test Case: 524 | Input/Output: [(97 -98 -83 -97) -98]
Test Case: 525 | Input/Output: [(11 93 46 5) 5]
Test Case: 526 | Input/Output: [(36 -33 8 84) -33]
Test Case: 527 | Input/Output: [(-16 -2 58 -70) -70]
Test Case: 528 | Input/Output: [(80 -80 -35 -10) -80]
Test Case: 529 | Input/Output: [(-41 -38 -50 -29) -50]
Test Case: 530 | Input/Output: [(55 81 -17 -66) -66]
Test Case: 531 | Input/Output: [(83 67 3 38) 3]
Test Case: 532 | Input/Output: [(-32 -18 -37 -71) -71]
Test Case: 533 | Input/Output: [(20 71 -73 95) -73]
Test Case: 534 | Input/Output: [(-88 -5 25 -56) -88]
Test Case: 535 | Input/Output: [(-94 92 -60 98) -94]
Test Case: 536 | Input/Output: [(-78 -53 48 -35) -78]
Test Case: 537 | Input/Output: [(27 -60 -95 -6) -95]
Test Case: 538 | Input/Output: [(92 50 -34 0) -34]
Test Case: 539 | Input/Output: [(-80 -57 29 -20) -80]
Test Case: 540 | Input/Output: [(19 78 -38 9) -38]
Test Case: 541 | Input/Output: [(-69 78 -30 8) -69]
Test Case: 542 | Input/Output: [(-85 90 62 -84) -85]
Test Case: 543 | Input/Output: [(51 -95 -82 -38) -95]
Test Case: 544 | Input/Output: [(-89 -88 72 -64) -89]
Test Case: 545 | Input/Output: [(-17 71 -86 -16) -86]
Test Case: 546 | Input/Output: [(-50 -78 80 -7) -78]
Test Case: 547 | Input/Output: [(-15 0 44 71) -15]
Test Case: 548 | Input/Output: [(91 64 69 -14) -14]
Test Case: 549 | Input/Output: [(65 -12 10 -87) -87]
Test Case: 550 | Input/Output: [(-47 -85 1 -51) -85]
Test Case: 551 | Input/Output: [(-50 -4 -64 82) -64]
Test Case: 552 | Input/Output: [(34 3 -8 -36) -36]
Test Case: 553 | Input/Output: [(23 93 68 18) 18]
Test Case: 554 | Input/Output: [(-75 46 -14 76) -75]
Test Case: 555 | Input/Output: [(-10 -18 -34 -76) -76]
Test Case: 556 | Input/Output: [(3 -59 27 20) -59]
Test Case: 557 | Input/Output: [(-56 -87 -85 -56) -87]
Test Case: 558 | Input/Output: [(-57 -71 -20 -46) -71]
Test Case: 559 | Input/Output: [(90 -6 90 -58) -58]
Test Case: 560 | Input/Output: [(55 -8 21 -41) -41]
Test Case: 561 | Input/Output: [(-45 -64 13 -92) -92]
Test Case: 562 | Input/Output: [(74 86 -59 -30) -59]
Test Case: 563 | Input/Output: [(-92 87 12 76) -92]
Test Case: 564 | Input/Output: [(3 15 -38 -21) -38]
Test Case: 565 | Input/Output: [(57 -30 80 -82) -82]
Test Case: 566 | Input/Output: [(-28 57 -20 11) -28]
Test Case: 567 | Input/Output: [(-30 18 49 -19) -30]
Test Case: 568 | Input/Output: [(-29 -64 44 -2) -64]
Test Case: 569 | Input/Output: [(-52 48 58 -31) -52]
Test Case: 570 | Input/Output: [(51 -72 -32 -84) -84]
Test Case: 571 | Input/Output: [(39 13 -74 98) -74]
Test Case: 572 | Input/Output: [(7 -22 -18 50) -22]
Test Case: 573 | Input/Output: [(-57 -47 94 5) -57]
Test Case: 574 | Input/Output: [(-25 -16 21 -23) -25]
Test Case: 575 | Input/Output: [(-47 -89 72 5) -89]
Test Case: 576 | Input/Output: [(-98 -9 -5 -31) -98]
Test Case: 577 | Input/Output: [(-4 54 -15 43) -15]
Test Case: 578 | Input/Output: [(-62 -23 -63 59) -63]
Test Case: 579 | Input/Output: [(-100 -13 -80 43) -100]
Test Case: 580 | Input/Output: [(-26 40 63 2) -26]
Test Case: 581 | Input/Output: [(-78 10 -87 84) -87]
Test Case: 582 | Input/Output: [(-99 73 80 -100) -100]
Test Case: 583 | Input/Output: [(57 -63 -42 16) -63]
Test Case: 584 | Input/Output: [(-21 38 -44 -77) -77]
Test Case: 585 | Input/Output: [(-13 9 -5 -64) -64]
Test Case: 586 | Input/Output: [(69 -49 46 14) -49]
Test Case: 587 | Input/Output: [(-89 -16 85 21) -89]
Test Case: 588 | Input/Output: [(42 55 64 53) 42]
Test Case: 589 | Input/Output: [(47 34 0 -38) -38]
Test Case: 590 | Input/Output: [(8 -55 -3 -47) -55]
Test Case: 591 | Input/Output: [(-62 54 -27 68) -62]
Test Case: 592 | Input/Output: [(-57 -49 -20 93) -57]
Test Case: 593 | Input/Output: [(-97 66 -43 -98) -98]
Test Case: 594 | Input/Output: [(-53 -54 -36 -10) -54]
Test Case: 595 | Input/Output: [(-58 8 -38 -61) -61]
Test Case: 596 | Input/Output: [(61 12 88 -94) -94]
Test Case: 597 | Input/Output: [(100 -32 -84 -18) -84]
Test Case: 598 | Input/Output: [(5 20 -21 -95) -95]
Test Case: 599 | Input/Output: [(85 -13 -15 25) -15]
Test Case: 600 | Input/Output: [(-4 -9 33 -34) -34]
Test Case: 601 | Input/Output: [(25 37 82 44) 25]
Test Case: 602 | Input/Output: [(79 94 53 -26) -26]
Test Case: 603 | Input/Output: [(93 -44 -33 21) -44]
Test Case: 604 | Input/Output: [(-64 40 61 25) -64]
Test Case: 605 | Input/Output: [(56 -94 -83 47) -94]
Test Case: 606 | Input/Output: [(-42 -79 -93 75) -93]
Test Case: 607 | Input/Output: [(17 13 92 -61) -61]
Test Case: 608 | Input/Output: [(64 -28 -82 15) -82]
Test Case: 609 | Input/Output: [(-50 7 44 -24) -50]
Test Case: 610 | Input/Output: [(38 -53 -48 88) -53]
Test Case: 611 | Input/Output: [(-99 6 3 47) -99]
Test Case: 612 | Input/Output: [(43 3 31 17) 3]
Test Case: 613 | Input/Output: [(33 -70 -89 96) -89]
Test Case: 614 | Input/Output: [(34 -42 33 69) -42]
Test Case: 615 | Input/Output: [(-19 -62 -1 15) -62]
Test Case: 616 | Input/Output: [(-35 -98 -42 91) -98]
Test Case: 617 | Input/Output: [(-64 -96 -82 -34) -96]
Test Case: 618 | Input/Output: [(-9 38 -60 83) -60]
Test Case: 619 | Input/Output: [(-46 -41 -45 61) -46]
Test Case: 620 | Input/Output: [(2 -56 50 32) -56]
Test Case: 621 | Input/Output: [(-97 8 -55 61) -97]
Test Case: 622 | Input/Output: [(9 -38 -56 -94) -94]
Test Case: 623 | Input/Output: [(-59 59 71 81) -59]
Test Case: 624 | Input/Output: [(-56 30 -77 75) -77]
Test Case: 625 | Input/Output: [(-34 -96 11 -98) -98]
Test Case: 626 | Input/Output: [(96 -93 30 22) -93]
Test Case: 627 | Input/Output: [(97 -77 -97 -54) -97]
Test Case: 628 | Input/Output: [(-86 11 -77 30) -86]
Test Case: 629 | Input/Output: [(7 -80 -69 99) -80]
Test Case: 630 | Input/Output: [(24 -10 4 85) -10]
Test Case: 631 | Input/Output: [(98 -3 29 -84) -84]
Test Case: 632 | Input/Output: [(-4 -89 1 -93) -93]
Test Case: 633 | Input/Output: [(-37 -87 -44 38) -87]
Test Case: 634 | Input/Output: [(91 -48 19 74) -48]
Test Case: 635 | Input/Output: [(65 8 -42 -35) -42]
Test Case: 636 | Input/Output: [(-42 5 91 88) -42]
Test Case: 637 | Input/Output: [(-48 -84 -74 74) -84]
Test Case: 638 | Input/Output: [(1 30 14 35) 1]
Test Case: 639 | Input/Output: [(29 -60 -24 46) -60]
Test Case: 640 | Input/Output: [(-52 -93 -60 93) -93]
Test Case: 641 | Input/Output: [(38 -6 85 -9) -9]
Test Case: 642 | Input/Output: [(-9 52 -72 20) -72]
Test Case: 643 | Input/Output: [(84 19 -54 30) -54]
Test Case: 644 | Input/Output: [(-21 -88 -2 -30) -88]
Test Case: 645 | Input/Output: [(-45 -47 79 81) -47]
Test Case: 646 | Input/Output: [(-62 -78 53 -21) -78]
Test Case: 647 | Input/Output: [(-85 50 73 -98) -98]
Test Case: 648 | Input/Output: [(-32 75 -83 -28) -83]
Test Case: 649 | Input/Output: [(-58 13 -24 -98) -98]
Test Case: 650 | Input/Output: [(67 -41 -57 52) -57]
Test Case: 651 | Input/Output: [(-5 28 -28 35) -28]
Test Case: 652 | Input/Output: [(-92 67 5 77) -92]
Test Case: 653 | Input/Output: [(-68 -84 -79 -19) -84]
Test Case: 654 | Input/Output: [(39 -59 -38 -94) -94]
Test Case: 655 | Input/Output: [(-74 -82 41 -83) -83]
Test Case: 656 | Input/Output: [(-31 -88 29 -15) -88]
Test Case: 657 | Input/Output: [(-29 68 -41 50) -41]
Test Case: 658 | Input/Output: [(-66 61 -43 -90) -90]
Test Case: 659 | Input/Output: [(-5 80 -27 -4) -27]
Test Case: 660 | Input/Output: [(100 70 -90 -22) -90]
Test Case: 661 | Input/Output: [(70 57 -67 -76) -76]
Test Case: 662 | Input/Output: [(58 -74 93 -27) -74]
Test Case: 663 | Input/Output: [(-44 84 12 39) -44]
Test Case: 664 | Input/Output: [(-20 31 58 27) -20]
Test Case: 665 | Input/Output: [(89 -91 90 81) -91]
Test Case: 666 | Input/Output: [(66 -28 24 -1) -28]
Test Case: 667 | Input/Output: [(-62 85 26 -82) -82]
Test Case: 668 | Input/Output: [(85 -79 -1 -88) -88]
Test Case: 669 | Input/Output: [(73 -87 -51 -44) -87]
Test Case: 670 | Input/Output: [(50 89 20 24) 20]
Test Case: 671 | Input/Output: [(-1 38 -11 -30) -30]
Test Case: 672 | Input/Output: [(100 85 97 -88) -88]
Test Case: 673 | Input/Output: [(-67 100 -26 -1) -67]
Test Case: 674 | Input/Output: [(70 -48 -61 -90) -90]
Test Case: 675 | Input/Output: [(65 -78 43 99) -78]
Test Case: 676 | Input/Output: [(-68 -20 54 88) -68]
Test Case: 677 | Input/Output: [(-90 -39 -11 -4) -90]
Test Case: 678 | Input/Output: [(58 55 -53 33) -53]
Test Case: 679 | Input/Output: [(54 -82 -65 10) -82]
Test Case: 680 | Input/Output: [(-33 7 15 40) -33]
Test Case: 681 | Input/Output: [(20 -27 -41 2) -41]
Test Case: 682 | Input/Output: [(0 -90 84 2) -90]
Test Case: 683 | Input/Output: [(-6 50 61 87) -6]
Test Case: 684 | Input/Output: [(-40 21 -14 23) -40]
Test Case: 685 | Input/Output: [(77 4 58 33) 4]
Test Case: 686 | Input/Output: [(-12 -32 37 -72) -72]
Test Case: 687 | Input/Output: [(-66 -24 2 -8) -66]
Test Case: 688 | Input/Output: [(-69 44 -43 -62) -69]
Test Case: 689 | Input/Output: [(90 -86 50 93) -86]
Test Case: 690 | Input/Output: [(33 38 33 -2) -2]
Test Case: 691 | Input/Output: [(58 -39 31 44) -39]
Test Case: 692 | Input/Output: [(96 -75 23 -88) -88]
Test Case: 693 | Input/Output: [(-65 48 -30 -65) -65]
Test Case: 694 | Input/Output: [(-2 -33 -57 3) -57]
Test Case: 695 | Input/Output: [(75 -23 55 6) -23]
Test Case: 696 | Input/Output: [(-4 41 47 -26) -26]
Test Case: 697 | Input/Output: [(-31 -20 96 97) -31]
Test Case: 698 | Input/Output: [(83 -4 62 -46) -46]
Test Case: 699 | Input/Output: [(-99 30 -16 52) -99]
Test Case: 700 | Input/Output: [(24 -6 -58 42) -58]
Test Case: 701 | Input/Output: [(-57 27 -69 76) -69]
Test Case: 702 | Input/Output: [(94 -71 49 -11) -71]
Test Case: 703 | Input/Output: [(-61 22 -56 46) -61]
Test Case: 704 | Input/Output: [(-44 60 -63 91) -63]
Test Case: 705 | Input/Output: [(100 -40 100 -74) -74]
Test Case: 706 | Input/Output: [(-99 -80 28 -37) -99]
Test Case: 707 | Input/Output: [(-43 50 58 -39) -43]
Test Case: 708 | Input/Output: [(-98 92 -35 -25) -98]
Test Case: 709 | Input/Output: [(43 3 31 47) 3]
Test Case: 710 | Input/Output: [(-43 -54 -62 6) -62]
Test Case: 711 | Input/Output: [(-25 95 -37 -93) -93]
Test Case: 712 | Input/Output: [(-48 -45 -13 -75) -75]
Test Case: 713 | Input/Output: [(8 93 -67 82) -67]
Test Case: 714 | Input/Output: [(-72 75 33 70) -72]
Test Case: 715 | Input/Output: [(89 -8 60 47) -8]
Test Case: 716 | Input/Output: [(-77 -60 53 -59) -77]
Test Case: 717 | Input/Output: [(57 72 -53 76) -53]
Test Case: 718 | Input/Output: [(-87 -21 -90 26) -90]
Test Case: 719 | Input/Output: [(-88 -56 45 -62) -88]
Test Case: 720 | Input/Output: [(41 -97 60 -96) -97]
Test Case: 721 | Input/Output: [(-48 -13 63 -45) -48]
Test Case: 722 | Input/Output: [(-39 -63 44 -49) -63]
Test Case: 723 | Input/Output: [(-25 6 -38 -18) -38]
Test Case: 724 | Input/Output: [(-80 58 -79 -95) -95]
Test Case: 725 | Input/Output: [(72 80 19 66) 19]
Test Case: 726 | Input/Output: [(76 62 73 -16) -16]
Test Case: 727 | Input/Output: [(-39 -55 95 13) -55]
Test Case: 728 | Input/Output: [(0 -42 46 83) -42]
Test Case: 729 | Input/Output: [(54 -19 56 -68) -68]
Test Case: 730 | Input/Output: [(-54 93 49 1) -54]
Test Case: 731 | Input/Output: [(-89 94 6 1) -89]
Test Case: 732 | Input/Output: [(26 -36 -50 -54) -54]
Test Case: 733 | Input/Output: [(-27 16 -88 -84) -88]
Test Case: 734 | Input/Output: [(-6 -32 -98 35) -98]
Test Case: 735 | Input/Output: [(-75 5 -77 10) -77]
Test Case: 736 | Input/Output: [(79 -83 55 72) -83]
Test Case: 737 | Input/Output: [(98 -68 -47 -24) -68]
Test Case: 738 | Input/Output: [(86 100 -90 73) -90]
Test Case: 739 | Input/Output: [(89 -93 -30 96) -93]
Test Case: 740 | Input/Output: [(-94 -87 -52 -21) -94]
Test Case: 741 | Input/Output: [(-32 33 -13 -20) -32]
Test Case: 742 | Input/Output: [(86 2 -84 -31) -84]
Test Case: 743 | Input/Output: [(-26 76 -92 95) -92]
Test Case: 744 | Input/Output: [(55 -60 -1 -42) -60]
Test Case: 745 | Input/Output: [(28 -29 19 16) -29]
Test Case: 746 | Input/Output: [(-46 82 -17 -47) -47]
Test Case: 747 | Input/Output: [(-79 -92 83 -77) -92]
Test Case: 748 | Input/Output: [(-26 -52 -83 -59) -83]
Test Case: 749 | Input/Output: [(-100 -69 -9 36) -100]
Test Case: 750 | Input/Output: [(-75 -36 -54 53) -75]
Test Case: 751 | Input/Output: [(63 -56 -35 14) -56]
Test Case: 752 | Input/Output: [(-17 41 77 -56) -56]
Test Case: 753 | Input/Output: [(16 77 34 -61) -61]
Test Case: 754 | Input/Output: [(51 99 91 -32) -32]
Test Case: 755 | Input/Output: [(51 -44 68 -23) -44]
Test Case: 756 | Input/Output: [(89 11 -100 94) -100]
Test Case: 757 | Input/Output: [(-85 3 -72 12) -85]
Test Case: 758 | Input/Output: [(94 -22 -81 81) -81]
Test Case: 759 | Input/Output: [(99 -69 54 -94) -94]
Test Case: 760 | Input/Output: [(74 -96 -63 -73) -96]
Test Case: 761 | Input/Output: [(94 20 92 29) 20]
Test Case: 762 | Input/Output: [(-44 70 73 -14) -44]
Test Case: 763 | Input/Output: [(4 85 -30 -14) -30]
Test Case: 764 | Input/Output: [(-31 23 71 -50) -50]
Test Case: 765 | Input/Output: [(-52 -81 -51 88) -81]
Test Case: 766 | Input/Output: [(73 56 -76 -15) -76]
Test Case: 767 | Input/Output: [(-37 -67 -54 99) -67]
Test Case: 768 | Input/Output: [(-84 20 -85 -44) -85]
Test Case: 769 | Input/Output: [(-45 28 -61 -1) -61]
Test Case: 770 | Input/Output: [(22 63 94 9) 9]
Test Case: 771 | Input/Output: [(-54 22 -85 96) -85]
Test Case: 772 | Input/Output: [(-28 60 -36 62) -36]
Test Case: 773 | Input/Output: [(-92 -69 53 60) -92]
Test Case: 774 | Input/Output: [(-82 -42 40 94) -82]
Test Case: 775 | Input/Output: [(4 82 14 -5) -5]
Test Case: 776 | Input/Output: [(21 28 61 76) 21]
Test Case: 777 | Input/Output: [(5 -90 50 35) -90]
Test Case: 778 | Input/Output: [(-18 -4 5 -60) -60]
Test Case: 779 | Input/Output: [(-34 -96 -74 2) -96]
Test Case: 780 | Input/Output: [(81 42 -74 -44) -74]
Test Case: 781 | Input/Output: [(77 -56 77 -53) -56]
Test Case: 782 | Input/Output: [(45 47 64 27) 27]
Test Case: 783 | Input/Output: [(-20 -93 92 -57) -93]
Test Case: 784 | Input/Output: [(98 21 94 59) 21]
Test Case: 785 | Input/Output: [(32 -35 43 -72) -72]
Test Case: 786 | Input/Output: [(-18 68 47 37) -18]
Test Case: 787 | Input/Output: [(-92 56 -96 41) -96]
Test Case: 788 | Input/Output: [(30 90 -70 -15) -70]
Test Case: 789 | Input/Output: [(-54 -2 94 -26) -54]
Test Case: 790 | Input/Output: [(-7 91 97 -40) -40]
Test Case: 791 | Input/Output: [(-35 -32 45 -8) -35]
Test Case: 792 | Input/Output: [(-5 -25 7 -49) -49]
Test Case: 793 | Input/Output: [(44 84 55 8) 8]
Test Case: 794 | Input/Output: [(-49 -16 49 99) -49]
Test Case: 795 | Input/Output: [(-43 -70 -64 90) -70]
Test Case: 796 | Input/Output: [(9 -16 -89 -74) -89]
Test Case: 797 | Input/Output: [(-96 -9 61 94) -96]
Test Case: 798 | Input/Output: [(85 -33 -63 -70) -70]
Test Case: 799 | Input/Output: [(-44 12 -64 55) -64]
Test Case: 800 | Input/Output: [(60 -41 27 30) -41]
Test Case: 801 | Input/Output: [(41 4 69 53) 4]
Test Case: 802 | Input/Output: [(-4 98 -45 31) -45]
Test Case: 803 | Input/Output: [(2 -81 47 -55) -81]
Test Case: 804 | Input/Output: [(-13 -28 -12 93) -28]
Test Case: 805 | Input/Output: [(-37 40 -41 -37) -41]
Test Case: 806 | Input/Output: [(97 83 -55 -90) -90]
Test Case: 807 | Input/Output: [(-85 -87 -32 -33) -87]
Test Case: 808 | Input/Output: [(75 31 13 -57) -57]
Test Case: 809 | Input/Output: [(85 37 -69 -97) -97]
Test Case: 810 | Input/Output: [(-55 -90 81 -94) -94]
Test Case: 811 | Input/Output: [(15 32 -57 20) -57]
Test Case: 812 | Input/Output: [(-45 58 68 84) -45]
Test Case: 813 | Input/Output: [(67 -4 -16 -64) -64]
Test Case: 814 | Input/Output: [(-17 95 35 -9) -17]
Test Case: 815 | Input/Output: [(-50 86 -69 26) -69]
Test Case: 816 | Input/Output: [(9 92 -20 4) -20]
Test Case: 817 | Input/Output: [(75 54 -79 37) -79]
Test Case: 818 | Input/Output: [(72 25 -79 -82) -82]
Test Case: 819 | Input/Output: [(-82 -96 -45 -4) -96]
Test Case: 820 | Input/Output: [(85 -84 73 93) -84]
Test Case: 821 | Input/Output: [(-39 -6 17 -31) -39]
Test Case: 822 | Input/Output: [(-21 -95 1 46) -95]
Test Case: 823 | Input/Output: [(73 50 -50 -26) -50]
Test Case: 824 | Input/Output: [(62 -45 21 95) -45]
Test Case: 825 | Input/Output: [(-17 -59 93 -41) -59]
Test Case: 826 | Input/Output: [(-52 -77 -69 -57) -77]
Test Case: 827 | Input/Output: [(-41 -53 -6 33) -53]
Test Case: 828 | Input/Output: [(73 -71 -19 15) -71]
Test Case: 829 | Input/Output: [(28 -10 86 62) -10]
Test Case: 830 | Input/Output: [(-41 9 -78 -82) -82]
Test Case: 831 | Input/Output: [(29 4 -100 -30) -100]
Test Case: 832 | Input/Output: [(91 -92 -76 82) -92]
Test Case: 833 | Input/Output: [(-98 72 100 99) -98]
Test Case: 834 | Input/Output: [(-77 -60 -47 -47) -77]
Test Case: 835 | Input/Output: [(45 48 41 2) 2]
Test Case: 836 | Input/Output: [(-17 -67 -8 19) -67]
Test Case: 837 | Input/Output: [(-30 -37 45 59) -37]
Test Case: 838 | Input/Output: [(-94 -50 1 37) -94]
Test Case: 839 | Input/Output: [(-55 79 100 -71) -71]
Test Case: 840 | Input/Output: [(-34 61 59 51) -34]
Test Case: 841 | Input/Output: [(-36 -99 13 71) -99]
Test Case: 842 | Input/Output: [(-39 63 -98 16) -98]
Test Case: 843 | Input/Output: [(-76 -79 25 33) -79]
Test Case: 844 | Input/Output: [(-39 -17 -95 70) -95]
Test Case: 845 | Input/Output: [(22 44 -100 58) -100]
Test Case: 846 | Input/Output: [(-49 -70 -29 92) -70]
Test Case: 847 | Input/Output: [(-6 -72 45 63) -72]
Test Case: 848 | Input/Output: [(-84 53 -56 76) -84]
Test Case: 849 | Input/Output: [(-24 15 -51 -39) -51]
Test Case: 850 | Input/Output: [(-61 56 42 61) -61]
Test Case: 851 | Input/Output: [(24 -78 29 -80) -80]
Test Case: 852 | Input/Output: [(51 -93 60 67) -93]
Test Case: 853 | Input/Output: [(37 72 -11 58) -11]
Test Case: 854 | Input/Output: [(51 15 -10 -68) -68]
Test Case: 855 | Input/Output: [(-16 -25 -97 71) -97]
Test Case: 856 | Input/Output: [(36 98 -49 54) -49]
Test Case: 857 | Input/Output: [(-74 -86 75 -17) -86]
Test Case: 858 | Input/Output: [(-23 -46 -86 92) -86]
Test Case: 859 | Input/Output: [(82 -34 -68 -67) -68]
Test Case: 860 | Input/Output: [(-30 -92 8 34) -92]
Test Case: 861 | Input/Output: [(12 100 50 40) 12]
Test Case: 862 | Input/Output: [(-78 -66 -34 84) -78]
Test Case: 863 | Input/Output: [(30 -40 76 78) -40]
Test Case: 864 | Input/Output: [(-74 -97 -4 85) -97]
Test Case: 865 | Input/Output: [(63 93 -12 -74) -74]
Test Case: 866 | Input/Output: [(-39 13 45 62) -39]
Test Case: 867 | Input/Output: [(31 -84 -81 -79) -84]
Test Case: 868 | Input/Output: [(84 -30 71 55) -30]
Test Case: 869 | Input/Output: [(-23 49 -39 8) -39]
Test Case: 870 | Input/Output: [(79 -58 91 -96) -96]
Test Case: 871 | Input/Output: [(73 -95 -3 -19) -95]
Test Case: 872 | Input/Output: [(7 -71 90 -31) -71]
Test Case: 873 | Input/Output: [(63 -41 16 -62) -62]
Test Case: 874 | Input/Output: [(-90 -84 43 63) -90]
Test Case: 875 | Input/Output: [(-1 25 53 -33) -33]
Test Case: 876 | Input/Output: [(-29 90 -90 -29) -90]
Test Case: 877 | Input/Output: [(67 36 93 -2) -2]
Test Case: 878 | Input/Output: [(-27 40 44 -77) -77]
Test Case: 879 | Input/Output: [(2 -79 -4 -70) -79]
Test Case: 880 | Input/Output: [(61 -5 -6 -75) -75]
Test Case: 881 | Input/Output: [(-83 57 -92 65) -92]
Test Case: 882 | Input/Output: [(-15 -11 -87 6) -87]
Test Case: 883 | Input/Output: [(-14 9 -87 100) -87]
Test Case: 884 | Input/Output: [(87 44 -21 -64) -64]
Test Case: 885 | Input/Output: [(-79 -14 78 88) -79]
Test Case: 886 | Input/Output: [(80 47 -4 61) -4]
Test Case: 887 | Input/Output: [(81 -6 4 -7) -7]
Test Case: 888 | Input/Output: [(63 46 32 -91) -91]
Test Case: 889 | Input/Output: [(15 -71 -46 -53) -71]
Test Case: 890 | Input/Output: [(-90 0 17 7) -90]
Test Case: 891 | Input/Output: [(76 38 42 83) 38]
Test Case: 892 | Input/Output: [(19 100 -65 71) -65]
Test Case: 893 | Input/Output: [(-29 21 -38 93) -38]
Test Case: 894 | Input/Output: [(91 55 -19 78) -19]
Test Case: 895 | Input/Output: [(-33 66 -49 -31) -49]
Test Case: 896 | Input/Output: [(-13 -36 -78 95) -78]
Test Case: 897 | Input/Output: [(-74 -86 -75 38) -86]
Test Case: 898 | Input/Output: [(-84 18 -3 40) -84]
Test Case: 899 | Input/Output: [(8 -53 -88 27) -88]
Test Case: 900 | Input/Output: [(64 -48 49 33) -48]
Test Case: 901 | Input/Output: [(74 -34 35 24) -34]
Test Case: 902 | Input/Output: [(81 31 -62 79) -62]
Test Case: 903 | Input/Output: [(-21 36 81 -79) -79]
Test Case: 904 | Input/Output: [(63 -23 -87 92) -87]
Test Case: 905 | Input/Output: [(-52 -27 -32 -89) -89]
Test Case: 906 | Input/Output: [(-33 -44 -15 -93) -93]
Test Case: 907 | Input/Output: [(66 34 51 -79) -79]
Test Case: 908 | Input/Output: [(-25 0 76 92) -25]
Test Case: 909 | Input/Output: [(-70 69 -80 -56) -80]
Test Case: 910 | Input/Output: [(48 -77 38 -55) -77]
Test Case: 911 | Input/Output: [(36 25 5 15) 5]
Test Case: 912 | Input/Output: [(-28 35 0 -33) -33]
Test Case: 913 | Input/Output: [(37 14 26 -91) -91]
Test Case: 914 | Input/Output: [(43 87 97 14) 14]
Test Case: 915 | Input/Output: [(38 42 -83 -44) -83]
Test Case: 916 | Input/Output: [(54 -87 -25 3) -87]
Test Case: 917 | Input/Output: [(80 54 -24 73) -24]
Test Case: 918 | Input/Output: [(-34 -94 71 45) -94]
Test Case: 919 | Input/Output: [(-23 98 -63 94) -63]
Test Case: 920 | Input/Output: [(-79 40 -92 -11) -92]
Test Case: 921 | Input/Output: [(-20 -41 4 8) -41]
Test Case: 922 | Input/Output: [(14 94 -9 -23) -23]
Test Case: 923 | Input/Output: [(-94 -74 5 -45) -94]
Test Case: 924 | Input/Output: [(-61 84 70 -59) -61]
Test Case: 925 | Input/Output: [(-54 45 95 -33) -54]
Test Case: 926 | Input/Output: [(81 87 71 -74) -74]
Test Case: 927 | Input/Output: [(-49 22 17 12) -49]
Test Case: 928 | Input/Output: [(-21 -98 -26 81) -98]
Test Case: 929 | Input/Output: [(70 -75 -19 66) -75]
Test Case: 930 | Input/Output: [(27 45 -97 -70) -97]
Test Case: 931 | Input/Output: [(-28 -5 62 26) -28]
Test Case: 932 | Input/Output: [(63 68 11 -45) -45]
Test Case: 933 | Input/Output: [(6 52 -53 -65) -65]
Test Case: 934 | Input/Output: [(-23 51 -34 -80) -80]
Test Case: 935 | Input/Output: [(-46 -10 19 -68) -68]
Test Case: 936 | Input/Output: [(-38 7 -94 50) -94]
Test Case: 937 | Input/Output: [(-84 9 34 29) -84]
Test Case: 938 | Input/Output: [(-93 27 39 67) -93]
Test Case: 939 | Input/Output: [(-15 78 57 19) -15]
Test Case: 940 | Input/Output: [(98 0 -57 -61) -61]
Test Case: 941 | Input/Output: [(41 93 -14 29) -14]
Test Case: 942 | Input/Output: [(-10 22 59 -50) -50]
Test Case: 943 | Input/Output: [(-45 73 -20 -50) -50]
Test Case: 944 | Input/Output: [(64 -7 48 39) -7]
Test Case: 945 | Input/Output: [(-78 -55 11 -81) -81]
Test Case: 946 | Input/Output: [(-45 70 -79 13) -79]
Test Case: 947 | Input/Output: [(29 16 -25 -37) -37]
Test Case: 948 | Input/Output: [(67 -75 -78 -13) -78]
Test Case: 949 | Input/Output: [(-42 -16 94 -85) -85]
Test Case: 950 | Input/Output: [(35 -11 38 -75) -75]
Test Case: 951 | Input/Output: [(67 -16 -5 14) -16]
Test Case: 952 | Input/Output: [(11 21 72 25) 11]
Test Case: 953 | Input/Output: [(-80 -12 100 47) -80]
Test Case: 954 | Input/Output: [(86 99 36 -5) -5]
Test Case: 955 | Input/Output: [(47 32 71 6) 6]
Test Case: 956 | Input/Output: [(93 19 94 -82) -82]
Test Case: 957 | Input/Output: [(-8 86 -1 30) -8]
Test Case: 958 | Input/Output: [(-1 -32 91 44) -32]
Test Case: 959 | Input/Output: [(85 31 46 -81) -81]
Test Case: 960 | Input/Output: [(67 55 -83 -13) -83]
Test Case: 961 | Input/Output: [(-30 -20 -93 68) -93]
Test Case: 962 | Input/Output: [(-95 -99 -27 -67) -99]
Test Case: 963 | Input/Output: [(-23 79 74 -6) -23]
Test Case: 964 | Input/Output: [(20 9 50 -91) -91]
Test Case: 965 | Input/Output: [(-76 -45 67 -4) -76]
Test Case: 966 | Input/Output: [(-21 -37 -40 -83) -83]
Test Case: 967 | Input/Output: [(-98 -44 44 -46) -98]
Test Case: 968 | Input/Output: [(-40 88 -7 -16) -40]
Test Case: 969 | Input/Output: [(-75 96 88 -34) -75]
Test Case: 970 | Input/Output: [(-30 7 -23 14) -30]
Test Case: 971 | Input/Output: [(14 -28 16 -80) -80]
Test Case: 972 | Input/Output: [(-18 95 -75 -96) -96]
Test Case: 973 | Input/Output: [(0 20 -97 -32) -97]
Test Case: 974 | Input/Output: [(-11 -87 -25 80) -87]
Test Case: 975 | Input/Output: [(27 -34 -2 -97) -97]
Test Case: 976 | Input/Output: [(84 -47 83 49) -47]
Test Case: 977 | Input/Output: [(-45 -63 -80 -28) -80]
Test Case: 978 | Input/Output: [(50 -88 8 -71) -88]
Test Case: 979 | Input/Output: [(-16 13 -7 -35) -35]
Test Case: 980 | Input/Output: [(-41 -82 46 -24) -82]
Test Case: 981 | Input/Output: [(-21 -52 -68 -24) -68]
Test Case: 982 | Input/Output: [(-24 -27 -86 54) -86]
Test Case: 983 | Input/Output: [(-16 81 -27 -85) -85]
Test Case: 984 | Input/Output: [(26 -45 -80 2) -80]
Test Case: 985 | Input/Output: [(86 10 78 -79) -79]
Test Case: 986 | Input/Output: [(-33 -63 26 -17) -63]
Test Case: 987 | Input/Output: [(31 18 52 10) 10]
Test Case: 988 | Input/Output: [(-5 -9 -25 -32) -32]
Test Case: 989 | Input/Output: [(23 76 -17 -1) -17]
Test Case: 990 | Input/Output: [(70 -99 7 78) -99]
Test Case: 991 | Input/Output: [(34 65 37 2) 2]
Test Case: 992 | Input/Output: [(11 -16 62 46) -16]
Test Case: 993 | Input/Output: [(53 83 24 -38) -38]
Test Case: 994 | Input/Output: [(-4 -28 -67 -75) -75]
Test Case: 995 | Input/Output: [(-74 -35 65 23) -74]
Test Case: 996 | Input/Output: [(-25 67 -14 84) -25]
Test Case: 997 | Input/Output: [(-22 -24 -75 34) -75]
Test Case: 998 | Input/Output: [(-91 -33 -15 23) -91]
Test Case: 999 | Input/Output: [(-32 58 -91 -7) -91]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 98f17fffbd710431b7ffe02918e462d48a2ebada
GitHub link = https://github.com/lspector/Clojush/commit/98f17fffbd710431b7ffe02918e462d48a2ebada
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x30b9728f clojush.problems.software.smallest$fn__7460@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = 18 -61 61 -80 59 82 72 -45 30 -54 97 94 -34 -82 -56 -35
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[47 47 47 14] 14] [[-77 75 -77 -77] -77] [[-74 53 53 53] -74] [[-29 25 25 25] -29] [[94 94 57 94] 57] [[-64 35 35 35] -64] [[58 58 58 -42] -42] [[-44 24 24 24] -44] [[-69 -69 56 -69] -69] [[75 75 -79 75] -79] [(14 14 14 14) 14] [(9 9 9 9) 9] [(78 78 78 78) 78] [(13 13 13 13) 13] [(-77 -77 -77 -77) -77] [(95 61 16 74) 16] [(27 37 11 26) 11] [(24 59 70 19) 19] [(18 86 29 26) 18] [(63 59 87 92) 59] [(57 62 52 1) 1] [(9 62 23 29) 9] [(43 35 84 68) 35] [(72 59 35 17) 17] [(15 75 4 89) 4] [(21 82 49 64) 21] [(95 5 23 78) 5] [(14 72 16 79) 14] [(92 89 16 9) 9] [(36 67 86 27) 27] [(74 64 63 87) 63] [(93 25 50 34) 25] [(38 36 15 34) 15] [(62 6 11 1) 1] [(29 13 80 74) 13] [(-52 57 -79 -21) -79] [(-82 89 -66 22) -82] [(-97 -11 79 84) -97] [(-16 39 -48 48) -48] [(60 70 76 -38) -38] [(11 33 53 -20) -20] [(-28 -80 68 18) -80] [(-69 -48 3 -85) -85] [(71 70 -70 -40) -70] [(60 -58 11 -95) -95] [(65 -18 -32 -2) -32] [(-5 -25 -81 -81) -81] [(25 2 -15 67) -15] [(32 -60 -29 89) -60] [(28 52 -16 -90) -90] [(-64 -69 -32 1) -69] [(25 -81 -48 -86) -86] [(26 86 -58 -16) -58] [(-19 31 -77 11) -77] [(-20 -73 -90 -96) -96] [(25 34 97 70) 25] [(-4 39 -70 82) -70] [(-32 70 77 7) -32] [(71 -32 -89 67) -89] [(-58 85 87 -71) -71] [(2 87 -8 -33) -33] [(61 36 36 52) 36] [(8 53 74 -47) -47] [(100 -57 59 -76) -76] [(6 64 79 55) 6] [(100 -14 -92 86) -92] [(96 74 -99 14) -99] [(79 53 -31 -83) -83] [(52 17 12 -66) -66] [(16 83 88 -7) -7] [(-99 23 32 -87) -99] [(94 34 36 7) 7] [(-31 91 52 37) -31] [(-84 31 -56 -70) -84] [(69 46 44 28) 28] [(78 46 100 75) 46] [(80 -31 -88 78) -88] [(23 -45 -54 12) -54] [(60 37 94 5) 5] [(10 -81 18 87) -81] [(13 46 84 56) 13] [(18 -23 56 -6) -23] [(7 -65 -74 -3) -74] [(-78 -13 97 81) -78] [(20 92 66 -90) -90] [(7 10 86 -28) -28] [(13 -19 54 -73) -73] [(-90 -9 -51 -20) -90] [(-49 52 -92 16) -92] [(81 94 -58 87) -58] [(-48 -70 -72 93) -72] [(-11 65 -96 59) -96] [(-69 -37 56 56) -69] [(-48 83 16 5) -48] [(100 -92 -43 -20) -92])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction -65} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_gt} {:close 2, :instruction exec_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_lte} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_while} {:close 1, :instruction 36} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_max} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_div} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 2, :instruction integer_dup} {:close 1, :instruction exec_k} {:close 1, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_div} {:close 1, :instruction exec_k} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_yank} {:close 2, :instruction boolean_or})
Lexicase best program: (-65 exec_dup_items in4 boolean_yank print_integer exec_eq boolean_invert_second_then_and exec_rot (integer_gt exec_shove ()) (exec_pop (boolean_or integer_lte) boolean_shove) (boolean_empty integer_lt integer_fromboolean exec_dup (exec_while () 36) exec_do*count (exec_flush exec_shove (integer_rot boolean_swap boolean_shove integer_gt integer_mult exec_rot (integer_fromboolean) (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt boolean_rot integer_dup_items print_boolean exec_empty) boolean_swap integer_eq integer_lte integer_max exec_when () boolean_eq in1 exec_do*while (integer_div integer_swap boolean_flush integer_dup)) (exec_k () (integer_rot) boolean_dup print_exec (exec_dup () integer_max boolean_and exec_shove (exec_y () exec_rot (integer_div) (exec_k () (integer_flush exec_do*while (exec_yank) boolean_or)) ())))))))
Lexicase best errors: [1 1 0 0 1 0 0 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 103
Percent parens: 0.291
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction -65} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_gt} {:close 2, :instruction exec_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_lte} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_while} {:close 1, :instruction 36} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_max} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_div} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 2, :instruction integer_dup} {:close 1, :instruction exec_k} {:close 1, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_div} {:close 1, :instruction exec_k} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_yank} {:close 2, :instruction boolean_or})
Zero cases best program: (-65 exec_dup_items in4 boolean_yank print_integer exec_eq boolean_invert_second_then_and exec_rot (integer_gt exec_shove ()) (exec_pop (boolean_or integer_lte) boolean_shove) (boolean_empty integer_lt integer_fromboolean exec_dup (exec_while () 36) exec_do*count (exec_flush exec_shove (integer_rot boolean_swap boolean_shove integer_gt integer_mult exec_rot (integer_fromboolean) (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt boolean_rot integer_dup_items print_boolean exec_empty) boolean_swap integer_eq integer_lte integer_max exec_when () boolean_eq in1 exec_do*while (integer_div integer_swap boolean_flush integer_dup)) (exec_k () (integer_rot) boolean_dup print_exec (exec_dup () integer_max boolean_and exec_shove (exec_y () exec_rot (integer_div) (exec_k () (integer_flush exec_do*while (exec_yank) boolean_or)) ())))))))
Zero cases best errors: [1 1 0 0 1 0 0 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 103
Percent parens: 0.291
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 1 2 7 1 4 1 3 2 1)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (4 1 2 7 1 4 1 3 2 1)
Population mean number of perfect (error zero) cases: 0.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction -65} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_gt} {:close 2, :instruction exec_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_lte} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_while} {:close 1, :instruction 36} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_max} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_div} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 2, :instruction integer_dup} {:close 1, :instruction exec_k} {:close 1, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_div} {:close 1, :instruction exec_k} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_yank} {:close 2, :instruction boolean_or})
Best program: (-65 exec_dup_items in4 boolean_yank print_integer exec_eq boolean_invert_second_then_and exec_rot (integer_gt exec_shove ()) (exec_pop (boolean_or integer_lte) boolean_shove) (boolean_empty integer_lt integer_fromboolean exec_dup (exec_while () 36) exec_do*count (exec_flush exec_shove (integer_rot boolean_swap boolean_shove integer_gt integer_mult exec_rot (integer_fromboolean) (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt boolean_rot integer_dup_items print_boolean exec_empty) boolean_swap integer_eq integer_lte integer_max exec_when () boolean_eq in1 exec_do*while (integer_div integer_swap boolean_flush integer_dup)) (exec_k () (integer_rot) boolean_dup print_exec (exec_dup () integer_max boolean_and exec_shove (exec_y () exec_rot (integer_div) (exec_k () (integer_flush exec_do*while (exec_yank) boolean_or)) ())))))))
Errors: [1 1 0 0 1 0 0 1 0 0]
Total: 4
Mean: 0.4
Genome size: 73
Size: 103
Percent parens: 0.291
--- Population Statistics ---
Average total errors in population: 9.974
Median total errors in population: 10
Error averages by case: (0.996 0.999 0.998 0.993 0.999 0.996 0.999 0.997 0.998 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.806
Average program size in population (points): 71.385
Average percent parens in population: 0.281
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 3
Syntactic diversity (% unique Push programs):	 0.998
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.299
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 490899
--- Timings ---
Current time: 1559314322633 milliseconds
Total Time:           2.6 seconds
Initialization:       0.1 seconds,  3.9%
Reproduction:         0.8 seconds, 29.2%
Fitness Testing:      1.7 seconds, 66.9%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 0 0 1 1 0 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 13
Percent parens: 0.308
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 0 0 1 1 0 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 13
Percent parens: 0.308
--- Lexicase Population Statistics ---
Count of elite individuals by case: (248 510 248 248 85 85 847 248 248 2)
Population mean number of elite cases: 2.77
Count of perfect (error zero) individuals by case: (248 510 248 248 85 85 847 248 248 2)
Population mean number of perfect (error zero) cases: 2.77
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [0 1 0 0 1 1 0 0 0 1]
Total: 4
Mean: 0.4
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 7.231
Median total errors in population: 8
Error averages by case: (0.752 0.49 0.752 0.752 0.915 0.915 0.153 0.752 0.752 0.998)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.364
Average program size in population (points): 73.581
Average percent parens in population: 0.298
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.487
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 222
Genome diversity (% unique genomes):	 0.49
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 224
Syntactic diversity (% unique Push programs):	 0.486
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 736113
--- Timings ---
Current time: 1559314324885 milliseconds
Total Time:           5.0 seconds
Initialization:       0.1 seconds,  2.0%
Reproduction:         2.4 seconds, 47.7%
Fitness Testing:      2.1 seconds, 43.0%
Report:               0.4 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 0 0 1 0 1 1 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 13
Percent parens: 0.308
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 0 0 1 0 1 1 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 13
Percent parens: 0.308
--- Lexicase Population Statistics ---
Count of elite individuals by case: (563 96 563 920 1000 563 249 1000 1000 563)
Population mean number of elite cases: 6.52
Count of perfect (error zero) individuals by case: (563 96 563 920 0 563 249 0 0 563)
Population mean number of perfect (error zero) cases: 3.52
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [0 1 0 0 1 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 6.483
Median total errors in population: 5
Error averages by case: (0.437 0.904 0.437 0.08 1.0 0.437 0.751 1.0 1.0 0.437)
Error minima by case: (0 0 0 0 1 0 0 1 1 0)
Average genome size in population (length): 33.339
Average program size in population (points): 50.235
Average percent parens in population: 0.320
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.148
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 452
Genome diversity (% unique genomes):	 0.397
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 461
Syntactic diversity (% unique Push programs):	 0.392
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1067279
--- Timings ---
Current time: 1559314328093 milliseconds
Total Time:           8.2 seconds
Initialization:       0.1 seconds,  1.2%
Reproduction:         4.8 seconds, 58.7%
Fitness Testing:      2.7 seconds, 33.0%
Report:               0.6 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 678
Test mean error for best: 0.67800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: true               
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: true               
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_yankdup} {:close 1, :instruction exec_s} {:close 1, :instruction integer_div} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 0, :instruction exec_empty} {:close 1, :instruction exec_if} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_y} {:close 0, :instruction exec_when} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_k} {:close 0, :instruction exec_when} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_pop} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_s} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction integer_dup_times} {:close 1, :instruction in3} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_min} {:close 0, :instruction integer_dup_times} {:close 1, :instruction in3} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction print_newline} {:close 0, :instruction -14} {:close 0, :instruction exec_dup_items} {:close 0, :instruction print_exec} {:close 0, :instruction exec_while} {:close 0, :instruction exec_s} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_exec} {:close 0, :instruction exec_while} {:close 0, :instruction exec_s} {:close 1, :instruction exec_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_div} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_shove})
Lexicase best program: (integer_shove exec_do*range (integer_dup_times exec_s (in3 boolean_pop integer_lte) (exec_yankdup integer_add integer_max exec_eq exec_rot () (integer_dup_items boolean_not integer_yankdup) (exec_yankdup exec_s () (integer_div) (exec_dup_items boolean_pop in3 boolean_not integer_lte boolean_and) print_integer boolean_dup exec_s (exec_empty exec_if () (exec_rot (exec_y (exec_when (integer_empty exec_pop () exec_k (exec_when (integer_empty exec_pop () boolean_empty) boolean_yankdup boolean_xor) (exec_pop (exec_k_when_autoconstructing (exec_k_when_autoconstructing (integer_lte integer_rot) (exec_eq exec_yankdup integer_shove exec_s (boolean_empty) (exec_yank exec_dup_times () in2 integer_min) (integer_dup_times in3) integer_lte integer_min) integer_dup_times in3) (integer_lte exec_while (integer_max print_newline -14 exec_dup_items print_exec (exec_while (exec_s (exec_yankdup) (print_exec (exec_while (exec_s (exec_yankdup) (exec_k_when_autoconstructing () (integer_swap exec_yankdup integer_add boolean_flush exec_noop in1 boolean_swap) exec_swap (exec_s (boolean_dup_items boolean_xor integer_div integer_stackdepth exec_shove ()) () ()) ()) ()))) ()))))))))) () ())) () ())) ()))
Lexicase best errors: [0 0 1 0 1 1 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 144
Percent parens: 0.375
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_yankdup} {:close 1, :instruction exec_s} {:close 1, :instruction integer_div} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 0, :instruction exec_empty} {:close 1, :instruction exec_if} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_y} {:close 0, :instruction exec_when} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_k} {:close 0, :instruction exec_when} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_pop} {:close 1, :instruction boolean_empty} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_s} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_yank} {:close 1, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction integer_dup_times} {:close 1, :instruction in3} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_min} {:close 0, :instruction integer_dup_times} {:close 1, :instruction in3} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction print_newline} {:close 0, :instruction -14} {:close 0, :instruction exec_dup_items} {:close 0, :instruction print_exec} {:close 0, :instruction exec_while} {:close 0, :instruction exec_s} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_exec} {:close 0, :instruction exec_while} {:close 0, :instruction exec_s} {:close 1, :instruction exec_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_noop} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_div} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_shove})
Zero cases best program: (integer_shove exec_do*range (integer_dup_times exec_s (in3 boolean_pop integer_lte) (exec_yankdup integer_add integer_max exec_eq exec_rot () (integer_dup_items boolean_not integer_yankdup) (exec_yankdup exec_s () (integer_div) (exec_dup_items boolean_pop in3 boolean_not integer_lte boolean_and) print_integer boolean_dup exec_s (exec_empty exec_if () (exec_rot (exec_y (exec_when (integer_empty exec_pop () exec_k (exec_when (integer_empty exec_pop () boolean_empty) boolean_yankdup boolean_xor) (exec_pop (exec_k_when_autoconstructing (exec_k_when_autoconstructing (integer_lte integer_rot) (exec_eq exec_yankdup integer_shove exec_s (boolean_empty) (exec_yank exec_dup_times () in2 integer_min) (integer_dup_times in3) integer_lte integer_min) integer_dup_times in3) (integer_lte exec_while (integer_max print_newline -14 exec_dup_items print_exec (exec_while (exec_s (exec_yankdup) (print_exec (exec_while (exec_s (exec_yankdup) (exec_k_when_autoconstructing () (integer_swap exec_yankdup integer_add boolean_flush exec_noop in1 boolean_swap) exec_swap (exec_s (boolean_dup_items boolean_xor integer_div integer_stackdepth exec_shove ()) () ()) ()) ()))) ()))))))))) () ())) () ())) ()))
Zero cases best errors: [0 0 1 0 1 1 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 144
Percent parens: 0.375
--- Lexicase Population Statistics ---
Count of elite individuals by case: (110 110 680 105 1000 137 110 137 1000 137)
Population mean number of elite cases: 3.53
Count of perfect (error zero) individuals by case: (110 110 680 105 0 137 110 137 0 137)
Population mean number of perfect (error zero) cases: 1.53
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_yankdup} {:close 1, :instruction exec_s} {:close 1, :instruction integer_div} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_if} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_k} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_max})
Best program: (integer_shove exec_dup_times (integer_dup_times exec_s (in3 boolean_pop integer_lte) (exec_yankdup integer_add integer_max exec_eq exec_rot () (integer_dup_items boolean_not integer_yankdup) (exec_yankdup exec_s () (integer_div) (exec_dup_items boolean_pop in3 boolean_not integer_lte boolean_and) print_integer boolean_dup exec_s (print_boolean exec_if () (exec_rot (exec_k (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt boolean_rot integer_dup_items print_boolean exec_empty) boolean_swap integer_eq integer_lte integer_max) ()) () ())) () ())) ()))
Errors: [0 0 1 0 1 1 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 50
Size: 74
Percent parens: 0.324
--- Population Statistics ---
Average total errors in population: 8.474
Median total errors in population: 9
Error averages by case: (0.89 0.89 0.32 0.895 1.0 0.863 0.89 0.863 1.0 0.863)
Error minima by case: (0 0 0 0 1 0 0 0 1 0)
Average genome size in population (length): 24.84
Average program size in population (points): 36.648
Average percent parens in population: 0.311
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.614
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 476
Genome diversity (% unique genomes):	 0.406
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 487
Syntactic diversity (% unique Push programs):	 0.399
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1298063
--- Timings ---
Current time: 1559314330683 milliseconds
Total Time:          10.6 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         6.7 seconds, 63.1%
Fitness Testing:      3.1 seconds, 28.8%
Report:               0.8 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 678
Test mean error for best: 0.67800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: true               
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: true               
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction in1} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_yankdup} {:close 1, :instruction exec_s} {:close 1, :instruction integer_div} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_if} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_k} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt})
Lexicase best program: (integer_shove exec_dup_times (integer_dup_times integer_dup_times exec_s (in3 boolean_pop integer_lte) (exec_yankdup integer_add in1 exec_eq exec_rot () (integer_dup_items boolean_not integer_yankdup) (exec_yankdup exec_s () (integer_div) (exec_dup_items boolean_pop in3 boolean_not integer_lte boolean_and) print_integer boolean_dup exec_s (print_boolean exec_if () (exec_rot (exec_k (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt)) ()) () ())) () ())) ()))
Lexicase best errors: [1 0 0 0 1 0 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 67
Percent parens: 0.358
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction in3} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction in1} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_yankdup} {:close 1, :instruction exec_s} {:close 1, :instruction integer_div} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_if} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_k} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt})
Zero cases best program: (integer_shove exec_dup_times (integer_dup_times integer_dup_times exec_s (in3 boolean_pop integer_lte) (exec_yankdup integer_add in1 exec_eq exec_rot () (integer_dup_items boolean_not integer_yankdup) (exec_yankdup exec_s () (integer_div) (exec_dup_items boolean_pop in3 boolean_not integer_lte boolean_and) print_integer boolean_dup exec_s (print_boolean exec_if () (exec_rot (exec_k (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt)) ()) () ())) () ())) ()))
Zero cases best errors: [1 0 0 0 1 0 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 67
Percent parens: 0.358
--- Lexicase Population Statistics ---
Count of elite individuals by case: (342 434 434 434 342 420 433 108 1000 108)
Population mean number of elite cases: 4.05
Count of perfect (error zero) individuals by case: (342 434 434 434 342 420 433 108 0 108)
Population mean number of perfect (error zero) cases: 3.06
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction -65} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_add} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_not} {:close 1, :instruction integer_yankdup} {:close 0, :instruction exec_yankdup} {:close 1, :instruction exec_s} {:close 1, :instruction integer_div} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction in3} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_s} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_if} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_k} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_max} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_div} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 2, :instruction integer_dup} {:close 1, :instruction exec_k} {:close 1, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove} {:close 1, :instruction exec_y} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_div} {:close 1, :instruction exec_k} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_yank} {:close 2, :instruction boolean_or})
Best program: (-65 exec_dup_items exec_yankdup integer_add integer_max exec_eq exec_rot () (integer_dup_items boolean_not integer_yankdup) (exec_yankdup exec_s () (integer_div) (exec_dup_items boolean_pop in3 boolean_not integer_lte boolean_and) print_integer boolean_dup exec_s (print_boolean exec_if () (exec_rot (exec_k (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt boolean_rot integer_dup_items print_boolean exec_empty) boolean_swap integer_eq integer_lte integer_max exec_while () boolean_eq in1 exec_do*while (integer_div integer_swap boolean_flush integer_dup)) (exec_k () (integer_rot) boolean_dup print_exec (exec_dup () integer_max boolean_and exec_shove (exec_y () exec_rot (integer_div) (exec_k () (integer_flush exec_do*while (exec_yank) boolean_or)) ())))) () ())) () ()))
Errors: [1 0 0 0 1 0 0 1 1 1]
Total: 5
Mean: 0.5
Genome size: 69
Size: 103
Percent parens: 0.330
--- Population Statistics ---
Average total errors in population: 6.945
Median total errors in population: 8
Error averages by case: (0.658 0.566 0.566 0.566 0.658 0.58 0.567 0.892 1.0 0.892)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 56.077
Average program size in population (points): 84.263
Average percent parens in population: 0.326
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.141875
Median age in population: 6.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 66
Genome diversity (% unique genomes):	 0.74
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 69
Syntactic diversity (% unique Push programs):	 0.738
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 1841535
--- Timings ---
Current time: 1559314333886 milliseconds
Total Time:          13.8 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         8.8 seconds, 63.8%
Fitness Testing:      3.8 seconds, 27.2%
Report:               1.1 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [1 0 1 0 0 0 1 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 13
Percent parens: 0.308
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [1 0 1 0 0 0 1 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 13
Percent parens: 0.308
--- Lexicase Population Statistics ---
Count of elite individuals by case: (194 670 194 209 839 880 1 878 209 1)
Population mean number of elite cases: 4.07
Count of perfect (error zero) individuals by case: (194 670 194 209 839 880 1 878 209 1)
Population mean number of perfect (error zero) cases: 4.07
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [1 0 1 0 0 0 1 0 0 1]
Total: 4
Mean: 0.4
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 5.925
Median total errors in population: 6
Error averages by case: (0.806 0.33 0.806 0.791 0.161 0.12 0.999 0.122 0.791 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.087
Average program size in population (points): 77.8
Average percent parens in population: 0.332
Minimum age in population: 5.0
Maximum age in population: 9.375
Average age in population: 7.60475
Median age in population: 7.6875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 129
Genome diversity (% unique genomes):	 0.75
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 135
Syntactic diversity (% unique Push programs):	 0.746
Total error diversity:				 0.007
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.091
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2400480
--- Timings ---
Current time: 1559314337083 milliseconds
Total Time:          17.2 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        11.1 seconds, 64.6%
Fitness Testing:      4.5 seconds, 26.1%
Report:               1.5 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) () integer_mult))
Lexicase best errors: [0 1 1 0 1 0 1 0 0 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 13
Percent parens: 0.308
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) () integer_mult))
Zero cases best errors: [0 1 1 0 1 0 1 0 0 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 13
Percent parens: 0.308
--- Lexicase Population Statistics ---
Count of elite individuals by case: (393 1000 1000 964 1000 393 1000 393 393 1000)
Population mean number of elite cases: 7.54
Count of perfect (error zero) individuals by case: (393 0 0 964 0 393 0 393 393 0)
Population mean number of perfect (error zero) cases: 2.54
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [0 1 1 0 1 0 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 7.464
Median total errors in population: 9
Error averages by case: (0.607 1.0 1.0 0.036 1.0 0.607 1.0 0.607 0.607 1.0)
Error minima by case: (0 1 1 0 1 0 1 0 0 1)
Average genome size in population (length): 36.443
Average program size in population (points): 50.286
Average percent parens in population: 0.283
Minimum age in population: 6.0
Maximum age in population: 10.84375
Average age in population: 9.08121875
Median age in population: 9.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 232
Genome diversity (% unique genomes):	 0.522
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 239
Syntactic diversity (% unique Push programs):	 0.513
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2590353
--- Timings ---
Current time: 1559314339569 milliseconds
Total Time:          19.7 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        13.2 seconds, 67.0%
Fitness Testing:      4.7 seconds, 23.8%
Report:               1.7 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 0 1 1 1 1 1 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 13
Percent parens: 0.308
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 0 1 1 1 1 1 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 13
Percent parens: 0.308
--- Lexicase Population Statistics ---
Count of elite individuals by case: (963 1000 963 1000 1000 1000 1000 1000 1000 963)
Population mean number of elite cases: 9.89
Count of perfect (error zero) individuals by case: (963 0 963 0 0 0 0 0 0 963)
Population mean number of perfect (error zero) cases: 2.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [0 1 0 1 1 1 1 1 1 0]
Total: 7
Mean: 0.7
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 7.111
Median total errors in population: 7
Error averages by case: (0.037 1.0 0.037 1.0 1.0 1.0 1.0 1.0 1.0 0.037)
Error minima by case: (0 1 0 1 1 1 1 1 1 0)
Average genome size in population (length): 10.631
Average program size in population (points): 15.301
Average percent parens in population: 0.304
Minimum age in population: 7.0
Maximum age in population: 12.546875
Average age in population: 10.5819375
Median age in population: 10.640625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 506
Genome diversity (% unique genomes):	 0.192
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 523
Syntactic diversity (% unique Push programs):	 0.184
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.006
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 2725097
--- Timings ---
Current time: 1559314341557 milliseconds
Total Time:          21.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        14.9 seconds, 68.5%
Fitness Testing:      4.9 seconds, 22.4%
Report:               1.9 seconds,  8.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction -46} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or -46 integer_min boolean_frominteger) integer_mult)
Lexicase best errors: [0 0 1 1 0 1 1 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction -46} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or -46 integer_min boolean_frominteger) integer_mult)
Zero cases best errors: [0 0 1 1 0 1 1 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (969 971 1000 1000 969 1000 1 969 971 1000)
Population mean number of elite cases: 8.85
Count of perfect (error zero) individuals by case: (969 971 0 0 969 0 1 969 971 0)
Population mean number of perfect (error zero) cases: 4.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_gt} {:close 2, :instruction exec_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_lte} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_while} {:close 1, :instruction 36} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction exec_swap} {:close 0, :instruction exec_yankdup} {:close 0, :instruction tag_boolean_247} {:close 1, :instruction exec_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_empty} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_max} {:close 1, :instruction exec_when} {:close 0, :instruction boolean_eq} {:close 0, :instruction in1} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_div} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_flush} {:close 2, :instruction integer_dup} {:close 1, :instruction exec_k} {:close 1, :instruction integer_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_shove})
Best program: (in1 print_integer exec_dup_times (boolean_yank print_integer exec_eq boolean_invert_second_then_and exec_rot (integer_gt exec_shove ()) (exec_pop (boolean_or integer_lte) boolean_shove) (boolean_empty integer_lt integer_fromboolean exec_dup (exec_while () 36) exec_do*count (exec_flush exec_shove (integer_rot boolean_swap boolean_shove integer_gt exec_do*count (exec_flush exec_shove (integer_rot boolean_swap boolean_shove integer_gt integer_mult exec_rot (integer_fromboolean) (exec_swap () (exec_yankdup tag_boolean_247 exec_yankdup) print_boolean in1 exec_y_when_autoconstructing (boolean_or boolean_xor exec_flush integer_gt boolean_rot integer_dup_items print_boolean exec_empty) boolean_swap integer_eq integer_lte integer_max exec_when () boolean_eq in1 exec_do*while (integer_div integer_swap boolean_flush integer_dup)) (exec_k () (integer_rot) boolean_dup print_exec (exec_dup () integer_max boolean_and exec_shove ())))))))))
Errors: [0 0 1 1 0 1 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 72
Size: 98
Percent parens: 0.265
--- Population Statistics ---
Average total errors in population: 5.15
Median total errors in population: 5
Error averages by case: (0.031 0.029 1.0 1.0 0.031 1.0 0.999 0.031 0.029 1.0)
Error minima by case: (0 0 1 1 0 1 0 0 0 1)
Average genome size in population (length): 10.283
Average program size in population (points): 14.802
Average percent parens in population: 0.304
Minimum age in population: 9.53125
Maximum age in population: 13.921875
Average age in population: 12.1066953125
Median age in population: 12.203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 435
Genome diversity (% unique genomes):	 0.236
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 455
Syntactic diversity (% unique Push programs):	 0.223
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 2853703
--- Timings ---
Current time: 1559314343326 milliseconds
Total Time:          23.5 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        16.3 seconds, 69.6%
Fitness Testing:      5.1 seconds, 21.5%
Report:               2.0 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_swap (integer_min boolean_frominteger) (integer_mult))
Lexicase best errors: [1 1 1 1 1 1 1 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 8
Lexicase best mean error: 0.8
Lexicase best size: 9
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_swap (integer_min boolean_frominteger) (integer_mult))
Zero cases best errors: [1 1 1 1 1 1 1 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 2
Zero cases best total error: 8
Zero cases best mean error: 0.8
Zero cases best size: 9
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (228 1000 228 1 1000 1000 1000 731 731 1)
Population mean number of elite cases: 5.92
Count of perfect (error zero) individuals by case: (228 0 228 1 0 0 0 731 731 1)
Population mean number of perfect (error zero) cases: 1.92
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [1 1 1 1 1 1 1 0 0 1]
Total: 8
Mean: 0.8
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 8.08
Median total errors in population: 8
Error averages by case: (0.772 1.0 0.772 0.999 1.0 1.0 1.0 0.269 0.269 0.999)
Error minima by case: (0 1 0 0 1 1 1 0 0 0)
Average genome size in population (length): 10.549
Average program size in population (points): 15.529
Average percent parens in population: 0.317
Minimum age in population: 10.53125
Maximum age in population: 15.19921875
Average age in population: 13.52665625
Median age in population: 13.5859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 302
Genome diversity (% unique genomes):	 0.254
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 318
Syntactic diversity (% unique Push programs):	 0.242
Total error diversity:				 0.002
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 2992959
--- Timings ---
Current time: 1559314345035 milliseconds
Total Time:          25.2 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        17.8 seconds, 70.4%
Fitness Testing:      5.2 seconds, 20.7%
Report:               2.1 seconds,  8.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Smallest problem report - generation 10
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [1 0 1 1 1 0 1 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 13
Percent parens: 0.308
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [1 0 1 1 1 0 1 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 13
Percent parens: 0.308
--- Lexicase Population Statistics ---
Count of elite individuals by case: (322 315 1000 1000 1000 315 1000 315 315 1000)
Population mean number of elite cases: 6.58
Count of perfect (error zero) individuals by case: (322 315 0 0 0 315 0 315 315 0)
Population mean number of perfect (error zero) cases: 1.58
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [1 0 1 1 1 0 1 0 0 1]
Total: 6
Mean: 0.6
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 8.418
Median total errors in population: 9
Error averages by case: (0.678 0.685 1.0 1.0 1.0 0.685 1.0 0.685 0.685 1.0)
Error minima by case: (0 0 1 1 1 0 1 0 0 1)
Average genome size in population (length): 11.928
Average program size in population (points): 17.37
Average percent parens in population: 0.311
Minimum age in population: 12.375
Maximum age in population: 16.73828125
Average age in population: 15.052859375
Median age in population: 15.109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 276
Genome diversity (% unique genomes):	 0.263
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 277
Syntactic diversity (% unique Push programs):	 0.253
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 3412470
--- Timings ---
Current time: 1559314347181 milliseconds
Total Time:          27.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        19.4 seconds, 70.7%
Fitness Testing:      5.7 seconds, 20.7%
Report:               2.2 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing () exec_dup_items in4 boolean_yank exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ())
Lexicase best errors: [1 0 0 0 1 0 0 1 1 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 20
Percent parens: 0.350
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing () exec_dup_items in4 boolean_yank exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ())
Zero cases best errors: [1 0 0 0 1 0 0 1 1 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 20
Percent parens: 0.350
--- Lexicase Population Statistics ---
Count of elite individuals by case: (764 199 963 199 1000 199 199 1000 1000 1000)
Population mean number of elite cases: 6.52
Count of perfect (error zero) individuals by case: (764 199 963 199 0 199 199 0 0 0)
Population mean number of perfect (error zero) cases: 2.52
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer exec_dup_times (integer_mult)) ()))
Errors: [1 0 0 0 1 0 0 1 1 1]
Total: 5
Mean: 0.5
Genome size: 8
Size: 13
Percent parens: 0.385
--- Population Statistics ---
Average total errors in population: 7.477
Median total errors in population: 8
Error averages by case: (0.236 0.801 0.037 0.801 1.0 0.801 0.801 1.0 1.0 1.0)
Error minima by case: (0 0 0 0 1 0 0 1 1 1)
Average genome size in population (length): 10.164
Average program size in population (points): 14.892
Average percent parens in population: 0.311
Minimum age in population: 13.375
Maximum age in population: 18.2998046875
Average age in population: 16.5302802734375
Median age in population: 16.6162109375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 245
Genome diversity (% unique genomes):	 0.289
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 261
Syntactic diversity (% unique Push programs):	 0.274
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 3569448
--- Timings ---
Current time: 1559314349472 milliseconds
Total Time:          29.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        21.4 seconds, 72.0%
Fitness Testing:      5.9 seconds, 19.8%
Report:               2.3 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Smallest problem report - generation 12
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank) exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ())
Lexicase best errors: [1 0 1 1 0 1 1 0 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 20
Percent parens: 0.350
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank) exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ())
Zero cases best errors: [1 0 1 1 0 1 1 0 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 20
Percent parens: 0.350
--- Lexicase Population Statistics ---
Count of elite individuals by case: (193 761 1000 2 761 1 193 955 761 2)
Population mean number of elite cases: 4.63
Count of perfect (error zero) individuals by case: (193 761 0 2 761 1 193 955 761 2)
Population mean number of perfect (error zero) cases: 3.63
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) ())) ()))
Errors: [1 0 1 1 0 1 1 0 0 1]
Total: 6
Mean: 0.6
Genome size: 12
Size: 19
Percent parens: 0.368
--- Population Statistics ---
Average total errors in population: 6.371
Median total errors in population: 6
Error averages by case: (0.807 0.239 1.0 0.998 0.239 0.999 0.807 0.045 0.239 0.998)
Error minima by case: (0 0 1 0 0 0 0 0 0 0)
Average genome size in population (length): 12.135
Average program size in population (points): 18.523
Average percent parens in population: 0.342
Minimum age in population: 15.4375
Maximum age in population: 20.01953125
Average age in population: 18.01679150390625
Median age in population: 18.119140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 358
Genome diversity (% unique genomes):	 0.286
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 358
Syntactic diversity (% unique Push programs):	 0.274
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 3705513
--- Timings ---
Current time: 1559314351315 milliseconds
Total Time:          31.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        22.9 seconds, 72.7%
Fitness Testing:      6.0 seconds, 19.2%
Report:               2.5 seconds,  7.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Smallest problem report - generation 13
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer) (exec_dup_times (in3 boolean_frominteger) integer_mult)))
Lexicase best errors: [1 0 0 1 0 1 1 0 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer) (exec_dup_times (in3 boolean_frominteger) integer_mult)))
Zero cases best errors: [1 0 0 1 0 1 1 0 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 342 960 1 341 365 251 960 342 251)
Population mean number of elite cases: 3.81
Count of perfect (error zero) individuals by case: (1 342 960 1 341 365 251 960 342 251)
Population mean number of perfect (error zero) cases: 3.81
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ()))
Errors: [1 0 0 1 0 1 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 13
Size: 20
Percent parens: 0.350
--- Population Statistics ---
Average total errors in population: 6.186
Median total errors in population: 6
Error averages by case: (0.999 0.658 0.04 0.999 0.659 0.635 0.749 0.04 0.658 0.749)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.877
Average program size in population (points): 15.042
Average percent parens in population: 0.342
Minimum age in population: 16.666015625
Maximum age in population: 21.361572265625
Average age in population: 19.08305224609375
Median age in population: 19.044677734375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 334
Genome diversity (% unique genomes):	 0.276
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 339
Syntactic diversity (% unique Push programs):	 0.26
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 3820349
--- Timings ---
Current time: 1559314353279 milliseconds
Total Time:          33.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        24.6 seconds, 73.4%
Fitness Testing:      6.2 seconds, 18.6%
Report:               2.6 seconds,  7.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Smallest problem report - generation 14
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 1 0 1 0 1 0 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 1 0 1 0 1 0 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (119 240 240 119 346 119 347 119 347 346)
Population mean number of elite cases: 2.34
Count of perfect (error zero) individuals by case: (119 240 240 119 346 119 347 119 347 346)
Population mean number of perfect (error zero) cases: 2.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [0 1 1 0 1 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 7.658
Median total errors in population: 8
Error averages by case: (0.881 0.76 0.76 0.881 0.654 0.881 0.653 0.881 0.653 0.654)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.426
Average program size in population (points): 14.14
Average percent parens in population: 0.324
Minimum age in population: 18.556640625
Maximum age in population: 22.6739501953125
Average age in population: 21.02607287597656
Median age in population: 21.150390625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 251
Genome diversity (% unique genomes):	 0.284
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 253
Syntactic diversity (% unique Push programs):	 0.268
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 3940347
--- Timings ---
Current time: 1559314355628 milliseconds
Total Time:          35.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        26.7 seconds, 74.4%
Fitness Testing:      6.4 seconds, 17.8%
Report:               2.7 seconds,  7.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Smallest problem report - generation 15
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [1 0 1 0 0 0 0 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [1 0 1 0 0 0 0 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (215 382 381 382 978 382 382 598 215 382)
Population mean number of elite cases: 4.30
Count of perfect (error zero) individuals by case: (215 382 381 382 978 382 382 598 215 382)
Population mean number of perfect (error zero) cases: 4.30
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ())))
Errors: [1 0 1 0 0 0 0 1 1 0]
Total: 4
Mean: 0.4
Genome size: 15
Size: 24
Percent parens: 0.375
--- Population Statistics ---
Average total errors in population: 5.703
Median total errors in population: 6
Error averages by case: (0.785 0.618 0.619 0.618 0.022 0.618 0.618 0.402 0.785 0.618)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.042
Average program size in population (points): 15.362
Average percent parens in population: 0.345
Minimum age in population: 19.556640625
Maximum age in population: 24.49896240234375
Average age in population: 22.26973046875
Median age in population: 22.322509765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 250
Genome diversity (% unique genomes):	 0.302
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 257
Syntactic diversity (% unique Push programs):	 0.285
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 4075155
--- Timings ---
Current time: 1559314358355 milliseconds
Total Time:          38.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        29.1 seconds, 75.5%
Fitness Testing:      6.5 seconds, 17.0%
Report:               2.8 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Smallest problem report - generation 16
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [1 1 1 1 0 0 0 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [1 1 1 1 0 0 0 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (132 132 285 285 546 546 546 1000 546 963)
Population mean number of elite cases: 4.98
Count of perfect (error zero) individuals by case: (132 132 285 285 546 546 546 0 546 963)
Population mean number of perfect (error zero) cases: 3.98
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [1 1 1 1 0 0 0 1 0 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 6.019
Median total errors in population: 5
Error averages by case: (0.868 0.868 0.715 0.715 0.454 0.454 0.454 1.0 0.454 0.037)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 8.928
Average program size in population (points): 13.603
Average percent parens in population: 0.345
Minimum age in population: 20.970703125
Maximum age in population: 25.6282958984375
Average age in population: 23.69725103759766
Median age in population: 23.75044250488281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 336
Genome diversity (% unique genomes):	 0.287
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 345
Syntactic diversity (% unique Push programs):	 0.27
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 4183048
--- Timings ---
Current time: 1559314360525 milliseconds
Total Time:          40.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.0 seconds, 76.0%
Fitness Testing:      6.7 seconds, 16.5%
Report:               2.9 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Smallest problem report - generation 17
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 1 0 1 1 0 1 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 1 0 1 1 0 1 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (447 246 1000 447 268 1000 447 268 267 246)
Population mean number of elite cases: 4.64
Count of perfect (error zero) individuals by case: (447 246 0 447 268 0 447 268 267 246)
Population mean number of perfect (error zero) cases: 2.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_noop exec_dup_times (boolean_or exec_swap (integer_min boolean_frominteger) (exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ())))
Errors: [1 1 1 1 0 1 1 0 0 1]
Total: 7
Mean: 0.7
Genome size: 17
Size: 26
Percent parens: 0.346
--- Population Statistics ---
Average total errors in population: 7.364
Median total errors in population: 7
Error averages by case: (0.553 0.754 1.0 0.553 0.732 1.0 0.553 0.732 0.733 0.754)
Error minima by case: (0 0 1 0 0 1 0 0 0 0)
Average genome size in population (length): 9.354
Average program size in population (points): 14.316
Average percent parens in population: 0.345
Minimum age in population: 21.970703125
Maximum age in population: 27.12310791015625
Average age in population: 25.18485607910156
Median age in population: 25.27070617675781
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 256
Genome diversity (% unique genomes):	 0.301
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 267
Syntactic diversity (% unique Push programs):	 0.289
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 4299013
--- Timings ---
Current time: 1559314362698 milliseconds
Total Time:          42.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.8 seconds, 76.6%
Fitness Testing:      6.9 seconds, 16.0%
Report:               3.1 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Smallest problem report - generation 18
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer) (exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger integer_mult) ()))))
Lexicase best errors: [1 0 1 1 1 0 0 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 20
Percent parens: 0.350
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer) (exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger integer_mult) ()))))
Zero cases best errors: [1 0 1 1 1 0 0 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 20
Percent parens: 0.350
--- Lexicase Population Statistics ---
Count of elite individuals by case: (387 214 387 355 387 214 214 214 214 214)
Population mean number of elite cases: 2.80
Count of perfect (error zero) individuals by case: (387 214 387 355 387 214 214 214 214 214)
Population mean number of perfect (error zero) cases: 2.80
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_mod} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_mod in4 boolean_yank exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ()))
Errors: [1 0 1 1 1 0 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 13
Size: 20
Percent parens: 0.350
--- Population Statistics ---
Average total errors in population: 7.2
Median total errors in population: 7
Error averages by case: (0.613 0.786 0.613 0.645 0.613 0.786 0.786 0.786 0.786 0.786)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.576
Average program size in population (points): 14.55
Average percent parens in population: 0.341
Minimum age in population: 23.84130859375
Maximum age in population: 28.69951629638672
Average age in population: 26.72426631164551
Median age in population: 26.80120468139648
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 183
Genome diversity (% unique genomes):	 0.331
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 194
Syntactic diversity (% unique Push programs):	 0.316
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 4429792
--- Timings ---
Current time: 1559314365086 milliseconds
Total Time:          45.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        34.9 seconds, 77.2%
Fitness Testing:      7.0 seconds, 15.5%
Report:               3.2 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Smallest problem report - generation 19
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer exec_dup_times (in3 exec_swap (exec_swap (integer_min boolean_frominteger) (integer_mult)) ())) ()))
Lexicase best errors: [0 1 1 1 0 1 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 22
Percent parens: 0.409
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 boolean_yank exec_if (print_integer exec_dup_times (in3 exec_swap (exec_swap (integer_min boolean_frominteger) (integer_mult)) ())) ()))
Zero cases best errors: [0 1 1 1 0 1 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 22
Percent parens: 0.409
--- Lexicase Population Statistics ---
Count of elite individuals by case: (565 1000 84 84 565 315 315 565 84 565)
Population mean number of elite cases: 4.14
Count of perfect (error zero) individuals by case: (565 0 84 84 565 315 315 565 84 565)
Population mean number of perfect (error zero) cases: 3.14
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_rot})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 integer_dup exec_if (print_integer exec_dup_times (in3 boolean_or boolean_and integer_min boolean_frominteger) exec_rot () () ()) ()))
Errors: [0 1 1 1 0 1 1 0 1 0]
Total: 6
Mean: 0.6
Genome size: 13
Size: 21
Percent parens: 0.381
--- Population Statistics ---
Average total errors in population: 6.858
Median total errors in population: 6
Error averages by case: (0.435 1.0 0.916 0.916 0.435 0.685 0.685 0.435 0.916 0.435)
Error minima by case: (0 1 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.028
Average program size in population (points): 16.857
Average percent parens in population: 0.344
Minimum age in population: 25.534423828125
Maximum age in population: 30.15549468994141
Average age in population: 28.31176317977905
Median age in population: 28.37895965576172
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 106
Genome diversity (% unique genomes):	 0.321
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 106
Syntactic diversity (% unique Push programs):	 0.307
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 4563097
--- Timings ---
Current time: 1559314367891 milliseconds
Total Time:          47.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        37.2 seconds, 77.8%
Fitness Testing:      7.2 seconds, 15.1%
Report:               3.3 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Smallest problem report - generation 20
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 in1 exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ()))
Lexicase best errors: [0 0 0 1 0 1 0 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 20
Percent parens: 0.350
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 in1 exec_if (print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))) ()))
Zero cases best errors: [0 0 0 1 0 1 0 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 20
Percent parens: 0.350
--- Lexicase Population Statistics ---
Count of elite individuals by case: (950 224 224 314 224 314 224 314 727 224)
Population mean number of elite cases: 3.74
Count of perfect (error zero) individuals by case: (950 224 224 314 224 314 224 314 727 224)
Population mean number of perfect (error zero) cases: 3.74
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_dup})
Best program: (in1 print_integer exec_dup_times (boolean_invert_first_then_and boolean_or exec_swap (integer_min boolean_frominteger) (exec_dup ())))
Errors: [0 0 0 1 0 1 0 1 1 0]
Total: 4
Mean: 0.4
Genome size: 9
Size: 14
Percent parens: 0.357
--- Population Statistics ---
Average total errors in population: 6.261
Median total errors in population: 5
Error averages by case: (0.05 0.776 0.776 0.686 0.776 0.686 0.776 0.686 0.273 0.776)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.967
Average program size in population (points): 15.365
Average percent parens in population: 0.350
Minimum age in population: 26.534423828125
Maximum age in population: 31.54119873046875
Average age in population: 29.73622285270691
Median age in population: 29.78637886047363
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 157
Genome diversity (% unique genomes):	 0.354
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 167
Syntactic diversity (% unique Push programs):	 0.335
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 4690617
--- Timings ---
Current time: 1559314370067 milliseconds
Total Time:          50.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        39.0 seconds, 77.7%
Fitness Testing:      7.4 seconds, 14.7%
Report:               3.7 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Smallest problem report - generation 21
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_dup})
Lexicase best program: (in1 print_integer exec_dup_times (boolean_invert_first_then_and boolean_or exec_swap (integer_min boolean_frominteger exec_dup ()) ()))
Lexicase best errors: [0 1 1 0 0 0 1 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 14
Percent parens: 0.357
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_dup})
Zero cases best program: (in1 print_integer exec_dup_times (boolean_invert_first_then_and boolean_or exec_swap (integer_min boolean_frominteger exec_dup ()) ()))
Zero cases best errors: [0 1 1 0 0 0 1 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 14
Percent parens: 0.357
--- Lexicase Population Statistics ---
Count of elite individuals by case: (539 1000 428 539 539 967 428 539 1000 539)
Population mean number of elite cases: 6.52
Count of perfect (error zero) individuals by case: (539 0 428 539 539 967 428 539 0 539)
Population mean number of perfect (error zero) cases: 4.52
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_inc boolean_frominteger integer_mult) ()))
Errors: [0 1 1 0 0 0 1 0 1 0]
Total: 4
Mean: 0.4
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 5.482
Median total errors in population: 4
Error averages by case: (0.461 1.0 0.572 0.461 0.461 0.033 0.572 0.461 1.0 0.461)
Error minima by case: (0 1 0 0 0 0 0 0 1 0)
Average genome size in population (length): 8.392
Average program size in population (points): 12.646
Average percent parens in population: 0.334
Minimum age in population: 28.44290161132812
Maximum age in population: 33.07958793640137
Average age in population: 31.23789833545685
Median age in population: 31.274001121521
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 206
Genome diversity (% unique genomes):	 0.249
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 225
Syntactic diversity (% unique Push programs):	 0.227
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 4806202
--- Timings ---
Current time: 1559314372405 milliseconds
Total Time:          52.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        41.1 seconds, 78.2%
Fitness Testing:      7.6 seconds, 14.4%
Report:               3.8 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Smallest problem report - generation 22
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (exec_stackdepth exec_k (exec_swap (integer_min boolean_frominteger) (integer_mult)) ()))
Lexicase best errors: [1 0 0 1 0 1 1 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 15
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_k} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (exec_stackdepth exec_k (exec_swap (integer_min boolean_frominteger) (integer_mult)) ()))
Zero cases best errors: [1 0 0 1 0 1 1 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 15
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (300 667 667 300 667 1000 1000 964 1000 667)
Population mean number of elite cases: 7.23
Count of perfect (error zero) individuals by case: (300 667 667 300 667 0 0 964 0 667)
Population mean number of perfect (error zero) cases: 4.23
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min boolean_frominteger integer_mult) ()))
Errors: [1 0 0 1 0 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 5.768
Median total errors in population: 5
Error averages by case: (0.7 0.333 0.333 0.7 0.333 1.0 1.0 0.036 1.0 0.333)
Error minima by case: (0 0 0 0 0 1 1 0 1 0)
Average genome size in population (length): 8.637
Average program size in population (points): 12.945
Average percent parens in population: 0.329
Minimum age in population: 29.84122085571289
Maximum age in population: 34.7250599861145
Average age in population: 32.77736691617966
Median age in population: 32.89272427558899
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 117
Genome diversity (% unique genomes):	 0.301
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 129
Syntactic diversity (% unique Push programs):	 0.275
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 4930622
--- Timings ---
Current time: 1559314374379 milliseconds
Total Time:          54.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        42.8 seconds, 78.4%
Fitness Testing:      7.7 seconds, 14.2%
Report:               4.0 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Smallest problem report - generation 23
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap () ()))
Lexicase best errors: [0 1 1 0 1 1 1 0 1 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 10
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap () ()))
Zero cases best errors: [0 1 1 0 1 1 1 0 1 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 10
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (628 337 1000 965 1000 1000 1000 627 1000 1000)
Population mean number of elite cases: 8.56
Count of perfect (error zero) individuals by case: (628 337 0 965 0 0 0 627 0 0)
Population mean number of perfect (error zero) cases: 2.56
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_min} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_or} {:close 1, :instruction integer_lte} {:close 1, :instruction boolean_frominteger})
Best program: (in1 print_integer exec_dup_times (in3 boolean_or boolean_dup_items integer_min) exec_pop (boolean_or integer_lte) boolean_frominteger)
Errors: [0 1 1 0 1 1 1 0 1 1]
Total: 7
Mean: 0.7
Genome size: 11
Size: 14
Percent parens: 0.214
--- Population Statistics ---
Average total errors in population: 7.443
Median total errors in population: 7
Error averages by case: (0.372 0.663 1.0 0.035 1.0 1.0 1.0 0.373 1.0 1.0)
Error minima by case: (0 0 1 0 1 1 1 0 1 1)
Average genome size in population (length): 8.498
Average program size in population (points): 12.759
Average percent parens in population: 0.330
Minimum age in population: 31.5445556640625
Maximum age in population: 36.30195450782776
Average age in population: 34.28720748233795
Median age in population: 34.34778940677643
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 121
Genome diversity (% unique genomes):	 0.328
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 144
Syntactic diversity (% unique Push programs):	 0.297
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 5051210
--- Timings ---
Current time: 1559314376268 milliseconds
Total Time:          56.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        44.4 seconds, 78.7%
Fitness Testing:      7.9 seconds, 14.0%
Report:               4.1 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Smallest problem report - generation 24
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction tagged_110} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or tagged_110 integer_min boolean_frominteger) integer_mult)
Lexicase best errors: [0 0 0 0 1 1 1 1 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction tagged_110} {:close 0, :instruction integer_min} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or tagged_110 integer_min boolean_frominteger) integer_mult)
Zero cases best errors: [0 0 0 0 1 1 1 1 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (626 626 626 627 1 339 1000 339 339 1)
Population mean number of elite cases: 4.52
Count of perfect (error zero) individuals by case: (626 626 626 627 1 339 0 339 339 1)
Population mean number of perfect (error zero) cases: 3.52
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min})
Best program: (in1 print_integer exec_dup_times (exec_dup_times (boolean_or exec_swap (integer_min) ())))
Errors: [0 0 0 0 1 1 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 7
Size: 12
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 6.476
Median total errors in population: 6
Error averages by case: (0.374 0.374 0.374 0.373 0.999 0.661 1.0 0.661 0.661 0.999)
Error minima by case: (0 0 0 0 0 0 1 0 0 0)
Average genome size in population (length): 8.402
Average program size in population (points): 12.635
Average percent parens in population: 0.330
Minimum age in population: 32.97296142578125
Maximum age in population: 38.13316595554352
Average age in population: 35.75906020009518
Median age in population: 35.80004489421844
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 97
Genome diversity (% unique genomes):	 0.342
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 121
Syntactic diversity (% unique Push programs):	 0.313
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 5168606
--- Timings ---
Current time: 1559314378168 milliseconds
Total Time:          58.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        46.1 seconds, 78.9%
Fitness Testing:      8.1 seconds, 13.8%
Report:               4.2 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Smallest problem report - generation 25
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times (boolean_frominteger) integer_mult) () ()))
Lexicase best errors: [0 0 0 1 1 0 1 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 15
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times (boolean_frominteger) integer_mult) () ()))
Zero cases best errors: [0 0 0 1 1 0 1 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 15
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (961 211 961 1000 313 211 434 1000 433 210)
Population mean number of elite cases: 5.73
Count of perfect (error zero) individuals by case: (961 211 961 0 313 211 434 0 433 210)
Population mean number of perfect (error zero) cases: 3.73
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times (boolean_frominteger) integer_mult) () ()))
Errors: [0 0 0 1 1 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 9
Size: 15
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.266
Median total errors in population: 6
Error averages by case: (0.039 0.789 0.039 1.0 0.687 0.789 0.566 1.0 0.567 0.79)
Error minima by case: (0 0 0 1 0 0 0 1 0 0)
Average genome size in population (length): 8.564
Average program size in population (points): 13.226
Average percent parens in population: 0.349
Minimum age in population: 34.17462539672852
Maximum age in population: 39.34728664159775
Average age in population: 37.13752166426182
Median age in population: 37.23499131202698
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 193
Genome diversity (% unique genomes):	 0.331
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 193
Syntactic diversity (% unique Push programs):	 0.31
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 5287375
--- Timings ---
Current time: 1559314380072 milliseconds
Total Time:          60.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        47.7 seconds, 79.1%
Fitness Testing:      8.2 seconds, 13.6%
Report:               4.3 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Smallest problem report - generation 26
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_lt boolean_yank exec_if (print_integer exec_dup_times (in3 boolean_or)) ()) ()))
Lexicase best errors: [1 1 1 1 0 1 1 0 0 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.389
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_lt boolean_yank exec_if (print_integer exec_dup_times (in3 boolean_or)) ()) ()))
Zero cases best errors: [1 1 1 1 0 1 1 0 0 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.389
--- Lexicase Population Statistics ---
Count of elite individuals by case: (491 310 488 310 160 490 310 651 160 160)
Population mean number of elite cases: 3.53
Count of perfect (error zero) individuals by case: (491 310 488 310 160 490 310 651 160 160)
Population mean number of perfect (error zero) cases: 3.53
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times (boolean_frominteger) integer_mult) () ()))
Errors: [0 1 0 1 1 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 9
Size: 15
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.47
Median total errors in population: 6
Error averages by case: (0.509 0.69 0.512 0.69 0.84 0.51 0.69 0.349 0.84 0.84)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.69
Average program size in population (points): 13.782
Average percent parens in population: 0.365
Minimum age in population: 35.3359203338623
Maximum age in population: 40.74059587717056
Average age in population: 38.52726800608635
Median age in population: 38.62530526518822
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 416
Genome diversity (% unique genomes):	 0.297
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 417
Syntactic diversity (% unique Push programs):	 0.275
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 5391533
--- Timings ---
Current time: 1559314382443 milliseconds
Total Time:          62.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        49.8 seconds, 79.5%
Fitness Testing:      8.4 seconds, 13.4%
Report:               4.4 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Smallest problem report - generation 27
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot) (print_integer exec_dup_times (boolean_frominteger) integer_mult) ()))
Lexicase best errors: [0 0 1 1 1 0 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 15
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot) (print_integer exec_dup_times (boolean_frominteger) integer_mult) ()))
Zero cases best errors: [0 0 1 1 1 0 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 15
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (335 962 372 260 260 332 968 333 329 332)
Population mean number of elite cases: 4.48
Count of perfect (error zero) individuals by case: (335 962 372 260 260 332 968 333 329 332)
Population mean number of perfect (error zero) cases: 4.48
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times (print_integer) exec_dup_times (exec_swap (integer_min boolean_frominteger print_integer exec_dup_times (boolean_frominteger) integer_mult) ())) () ()))
Errors: [0 0 1 1 1 0 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 16
Size: 26
Percent parens: 0.385
--- Population Statistics ---
Average total errors in population: 5.517
Median total errors in population: 6
Error averages by case: (0.665 0.038 0.628 0.74 0.74 0.668 0.032 0.667 0.671 0.668)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.217
Average program size in population (points): 12.963
Average percent parens in population: 0.362
Minimum age in population: 36.76027393341064
Maximum age in population: 42.00723785161972
Average age in population: 40.07845204398036
Median age in population: 40.14770863950253
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 258
Genome diversity (% unique genomes):	 0.281
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 259
Syntactic diversity (% unique Push programs):	 0.266
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 5490628
--- Timings ---
Current time: 1559314384657 milliseconds
Total Time:          64.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        51.8 seconds, 79.8%
Fitness Testing:      8.5 seconds, 13.1%
Report:               4.5 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Smallest problem report - generation 28
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 0 0 1 1 0 0 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 0 0 1 1 0 0 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (951 956 127 570 1000 381 956 127 254 1000)
Population mean number of elite cases: 6.32
Count of perfect (error zero) individuals by case: (951 956 127 570 0 381 956 127 254 0)
Population mean number of perfect (error zero) cases: 4.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [0 0 0 1 1 0 0 0 1 1]
Total: 4
Mean: 0.4
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 5.678
Median total errors in population: 6
Error averages by case: (0.049 0.044 0.873 0.43 1.0 0.619 0.044 0.873 0.746 1.0)
Error minima by case: (0 0 0 0 1 0 0 0 0 1)
Average genome size in population (length): 8.672
Average program size in population (points): 13.912
Average percent parens in population: 0.372
Minimum age in population: 37.76027393341064
Maximum age in population: 43.60027698427439
Average age in population: 41.48160010985285
Median age in population: 41.57139644026756
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 427
Genome diversity (% unique genomes):	 0.29
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 430
Syntactic diversity (% unique Push programs):	 0.277
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 5603234
--- Timings ---
Current time: 1559314386944 milliseconds
Total Time:          67.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        53.8 seconds, 80.1%
Fitness Testing:      8.7 seconds, 12.9%
Report:               4.6 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Smallest problem report - generation 29
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [1 1 0 1 1 0 0 1 1 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [1 1 0 1 1 0 0 1 1 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (189 188 527 188 189 527 527 251 251 527)
Population mean number of elite cases: 3.36
Count of perfect (error zero) individuals by case: (189 188 527 188 189 527 527 251 251 527)
Population mean number of perfect (error zero) cases: 3.36
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (in3 print_integer) exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [1 1 0 1 1 0 0 1 1 0]
Total: 6
Mean: 0.6
Genome size: 8
Size: 13
Percent parens: 0.385
--- Population Statistics ---
Average total errors in population: 6.636
Median total errors in population: 6
Error averages by case: (0.811 0.812 0.473 0.812 0.811 0.473 0.473 0.749 0.749 0.473)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.794
Average program size in population (points): 12.194
Average percent parens in population: 0.357
Minimum age in population: 38.76027393341064
Maximum age in population: 45.04926312714815
Average age in population: 43.02982618397474
Median age in population: 43.11520633101463
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 155
Genome diversity (% unique genomes):	 0.279
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 186
Syntactic diversity (% unique Push programs):	 0.261
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 5699913
--- Timings ---
Current time: 1559314389360 milliseconds
Total Time:          69.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.0 seconds, 80.5%
Fitness Testing:      8.8 seconds, 12.6%
Report:               4.7 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Smallest problem report - generation 30
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or integer_mult))
Lexicase best errors: [0 1 1 1 0 0 0 1 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 8
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or integer_mult))
Zero cases best errors: [0 1 1 1 0 0 0 1 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 8
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (955 388 1000 1000 165 165 165 1000 1000 399)
Population mean number of elite cases: 6.24
Count of perfect (error zero) individuals by case: (955 388 0 0 165 165 165 0 0 399)
Population mean number of perfect (error zero) cases: 2.24
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in1 print_integer integer_min boolean_frominteger integer_mult)
Errors: [0 1 1 1 0 0 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 5
Size: 6
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 7.763
Median total errors in population: 8
Error averages by case: (0.045 0.612 1.0 1.0 0.835 0.835 0.835 1.0 1.0 0.601)
Error minima by case: (0 0 1 1 0 0 0 1 1 0)
Average genome size in population (length): 8.057
Average program size in population (points): 12.893
Average percent parens in population: 0.371
Minimum age in population: 41.49654138088226
Maximum age in population: 46.63868266716599
Average age in population: 44.49946089005657
Median age in population: 44.58541581872851
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 241
Genome diversity (% unique genomes):	 0.285
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 246
Syntactic diversity (% unique Push programs):	 0.268
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 5803439
--- Timings ---
Current time: 1559314391590 milliseconds
Total Time:          71.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.0 seconds, 80.7%
Fitness Testing:      9.0 seconds, 12.5%
Report:               4.8 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Smallest problem report - generation 31
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger boolean_not) ()))
Lexicase best errors: [1 0 1 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger boolean_not) ()))
Zero cases best errors: [1 0 1 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (186 200 1000 200 577 184 184 961 200 200)
Population mean number of elite cases: 3.89
Count of perfect (error zero) individuals by case: (186 200 0 200 577 184 184 961 200 200)
Population mean number of perfect (error zero) cases: 2.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_yankdup} {:close 1, :instruction boolean_frominteger})
Best program: (in3 print_integer boolean_invert_first_then_and exec_swap (exec_yankdup) (boolean_frominteger))
Errors: [1 0 1 0 1 1 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 6
Size: 9
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.108
Median total errors in population: 8
Error averages by case: (0.814 0.8 1.0 0.8 0.423 0.816 0.816 0.039 0.8 0.8)
Error minima by case: (0 0 1 0 0 0 0 0 0 0)
Average genome size in population (length): 8.249
Average program size in population (points): 12.647
Average percent parens in population: 0.339
Minimum age in population: 43.01617273688316
Maximum age in population: 48.0396098094061
Average age in population: 46.00916438465845
Median age in population: 46.11218441510573
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 106
Genome diversity (% unique genomes):	 0.266
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 108
Syntactic diversity (% unique Push programs):	 0.253
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 5948095
--- Timings ---
Current time: 1559314393747 milliseconds
Total Time:          74.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.8 seconds, 80.9%
Fitness Testing:      9.1 seconds, 12.4%
Report:               4.9 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Smallest problem report - generation 32
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 0 0 1 1 0 1 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 0 0 1 1 0 1 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (479 127 479 479 127 1000 833 354 127 127)
Population mean number of elite cases: 4.13
Count of perfect (error zero) individuals by case: (479 127 479 479 127 0 833 354 127 127)
Population mean number of perfect (error zero) cases: 3.13
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_yank} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_yank boolean_frominteger) () integer_mult))
Errors: [0 1 0 0 1 1 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 6.868
Median total errors in population: 6
Error averages by case: (0.521 0.873 0.521 0.521 0.873 1.0 0.167 0.646 0.873 0.873)
Error minima by case: (0 0 0 0 0 1 0 0 0 0)
Average genome size in population (length): 7.91
Average program size in population (points): 12.61
Average percent parens in population: 0.367
Minimum age in population: 44.85305198282003
Maximum age in population: 49.473498262465
Average age in population: 47.52845871722884
Median age in population: 47.57609511446208
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 188
Genome diversity (% unique genomes):	 0.265
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 194
Syntactic diversity (% unique Push programs):	 0.253
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 6050452
--- Timings ---
Current time: 1559314396012 milliseconds
Total Time:          76.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.9 seconds, 81.2%
Fitness Testing:      9.3 seconds, 12.2%
Report:               5.0 seconds,  6.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Smallest problem report - generation 33
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s (integer_rot print_integer exec_dup_times (boolean_frominteger) integer_mult) () ()))
Lexicase best errors: [0 1 0 0 0 1 1 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 15
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s (integer_rot print_integer exec_dup_times (boolean_frominteger) integer_mult) () ()))
Zero cases best errors: [0 1 0 0 0 1 1 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 15
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (140 388 967 967 141 388 1000 1000 529 438)
Population mean number of elite cases: 5.96
Count of perfect (error zero) individuals by case: (140 388 967 967 141 388 0 0 529 438)
Population mean number of perfect (error zero) cases: 3.96
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger integer_mult) ()))
Errors: [1 0 0 0 1 0 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 6.042
Median total errors in population: 5
Error averages by case: (0.86 0.612 0.033 0.033 0.859 0.612 1.0 1.0 0.471 0.562)
Error minima by case: (0 0 0 0 0 0 1 1 0 0)
Average genome size in population (length): 7.486
Average program size in population (points): 11.494
Average percent parens in population: 0.342
Minimum age in population: 46.45647805184126
Maximum age in population: 50.88621178641915
Average age in population: 49.03697295530513
Median age in population: 49.12686771084554
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 96
Genome diversity (% unique genomes):	 0.27
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 112
Syntactic diversity (% unique Push programs):	 0.253
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 6146678
--- Timings ---
Current time: 1559314398193 milliseconds
Total Time:          78.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.8 seconds, 81.4%
Fitness Testing:      9.4 seconds, 12.0%
Report:               5.1 seconds,  6.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Smallest problem report - generation 34
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 0 1 0 1 1 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 0 1 0 1 1 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (963 381 432 146 432 146 381 578 432 432)
Population mean number of elite cases: 4.32
Count of perfect (error zero) individuals by case: (963 381 432 146 432 146 381 578 432 432)
Population mean number of perfect (error zero) cases: 4.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [0 1 0 1 0 1 1 0 0 0]
Total: 4
Mean: 0.4
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 5.677
Median total errors in population: 6
Error averages by case: (0.037 0.619 0.568 0.854 0.568 0.854 0.619 0.422 0.568 0.568)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.729
Average program size in population (points): 12.386
Average percent parens in population: 0.370
Minimum age in population: 47.45647805184126
Maximum age in population: 52.41486709832679
Average age in population: 50.52052666427847
Median age in population: 50.57786304759793
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 160
Genome diversity (% unique genomes):	 0.28
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 174
Syntactic diversity (% unique Push programs):	 0.265
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 6245033
--- Timings ---
Current time: 1559314400335 milliseconds
Total Time:          80.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.7 seconds, 81.6%
Fitness Testing:      9.6 seconds, 11.9%
Report:               5.2 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Smallest problem report - generation 35
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap () (integer_min boolean_frominteger) integer_mult))
Lexicase best errors: [1 0 1 0 0 1 1 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap () (integer_min boolean_frominteger) integer_mult))
Zero cases best errors: [1 0 1 0 0 1 1 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (269 478 221 478 478 269 219 700 1000 478)
Population mean number of elite cases: 4.59
Count of perfect (error zero) individuals by case: (269 478 221 478 478 269 219 700 0 478)
Population mean number of perfect (error zero) cases: 3.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (integer_mult)))
Errors: [1 0 1 0 0 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 6.41
Median total errors in population: 7
Error averages by case: (0.731 0.522 0.779 0.522 0.522 0.731 0.781 0.3 1.0 0.522)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 7.309
Average program size in population (points): 11.508
Average percent parens in population: 0.356
Minimum age in population: 49.0925378613174
Maximum age in population: 54.24544216843788
Average age in population: 51.98352350794803
Median age in population: 52.04801961508929
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 99
Genome diversity (% unique genomes):	 0.291
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 121
Syntactic diversity (% unique Push programs):	 0.269
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 6340008
--- Timings ---
Current time: 1559314402753 milliseconds
Total Time:          83.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.9 seconds, 81.8%
Fitness Testing:      9.7 seconds, 11.7%
Report:               5.2 seconds,  6.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Smallest problem report - generation 36
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger})
Lexicase best program: (in3 print_integer exec_dup_times (exec_k_when_autoconstructing () (boolean_invert_first_then_and exec_swap (integer_min boolean_frominteger) ())))
Lexicase best errors: [1 1 1 0 0 0 1 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 14
Percent parens: 0.429
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger})
Zero cases best program: (in3 print_integer exec_dup_times (exec_k_when_autoconstructing () (boolean_invert_first_then_and exec_swap (integer_min boolean_frominteger) ())))
Zero cases best errors: [1 1 1 0 0 0 1 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 14
Percent parens: 0.429
--- Lexicase Population Statistics ---
Count of elite individuals by case: (225 253 225 493 493 492 1000 253 492 252)
Population mean number of elite cases: 4.18
Count of perfect (error zero) individuals by case: (225 253 225 493 493 492 0 253 492 252)
Population mean number of perfect (error zero) cases: 3.18
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction integer_shove} {:close 0, :instruction print_integer})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min integer_shove) (print_integer)))
Errors: [1 1 1 0 0 0 1 1 0 1]
Total: 6
Mean: 0.6
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 6.822
Median total errors in population: 7
Error averages by case: (0.775 0.747 0.775 0.507 0.507 0.508 1.0 0.747 0.508 0.748)
Error minima by case: (0 0 0 0 0 0 1 0 0 0)
Average genome size in population (length): 7.323
Average program size in population (points): 11.578
Average percent parens in population: 0.360
Minimum age in population: 50.0925378613174
Maximum age in population: 55.76702607556945
Average age in population: 53.43898146326642
Median age in population: 53.50896846860996
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 85
Genome diversity (% unique genomes):	 0.308
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 112
Syntactic diversity (% unique Push programs):	 0.285
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 6440043
--- Timings ---
Current time: 1559314405154 milliseconds
Total Time:          85.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.1 seconds, 82.1%
Fitness Testing:      9.9 seconds, 11.6%
Report:               5.3 seconds,  6.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Smallest problem report - generation 37
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction integer_gte} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (boolean_xor integer_min integer_gte) integer_mult)
Lexicase best errors: [1 0 1 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 1, :instruction integer_gte} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (boolean_xor integer_min integer_gte) integer_mult)
Zero cases best errors: [1 0 1 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (212 449 212 212 449 449 449 212 294 449)
Population mean number of elite cases: 3.39
Count of perfect (error zero) individuals by case: (212 449 212 212 449 449 449 212 294 449)
Population mean number of perfect (error zero) cases: 3.39
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger) (in1) print_integer exec_dup_times (integer_min boolean_or exec_swap (integer_min boolean_frominteger) (integer_mult))))
Errors: [1 0 1 1 0 0 0 1 1 0]
Total: 5
Mean: 0.5
Genome size: 15
Size: 22
Percent parens: 0.318
--- Population Statistics ---
Average total errors in population: 6.613
Median total errors in population: 6
Error averages by case: (0.788 0.551 0.788 0.788 0.551 0.551 0.551 0.788 0.706 0.551)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.462
Average program size in population (points): 11.843
Average percent parens in population: 0.362
Minimum age in population: 51.0925378613174
Maximum age in population: 57.17670464546245
Average age in population: 54.86511191560687
Median age in population: 54.90317942292313
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 78
Genome diversity (% unique genomes):	 0.337
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 82
Syntactic diversity (% unique Push programs):	 0.313
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 6536844
--- Timings ---
Current time: 1559314407407 milliseconds
Total Time:          87.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.0 seconds, 82.2%
Fitness Testing:     10.0 seconds, 11.4%
Report:               5.4 seconds,  6.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Smallest problem report - generation 38
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_min})
Lexicase best program: (in3 print_integer exec_do*count (boolean_pop integer_min))
Lexicase best errors: [1 0 1 1 0 1 0 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 7
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_min})
Zero cases best program: (in3 print_integer exec_do*count (boolean_pop integer_min))
Zero cases best errors: [1 0 1 1 0 1 0 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 7
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (364 515 1000 1000 965 85 515 85 365 515)
Population mean number of elite cases: 5.41
Count of perfect (error zero) individuals by case: (364 515 0 0 965 85 515 85 365 515)
Population mean number of perfect (error zero) cases: 3.41
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [1 0 1 1 0 1 0 1 1 0]
Total: 6
Mean: 0.6
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.591
Median total errors in population: 6
Error averages by case: (0.636 0.485 1.0 1.0 0.035 0.915 0.485 0.915 0.635 0.485)
Error minima by case: (0 0 1 1 0 0 0 0 0 0)
Average genome size in population (length): 6.822
Average program size in population (points): 10.472
Average percent parens in population: 0.342
Minimum age in population: 52.0925378613174
Maximum age in population: 58.28471315682691
Average age in population: 56.38239884493816
Median age in population: 56.47707218119831
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 83
Genome diversity (% unique genomes):	 0.317
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 91
Syntactic diversity (% unique Push programs):	 0.285
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 6636108
--- Timings ---
Current time: 1559314409591 milliseconds
Total Time:          89.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.0 seconds, 82.4%
Fitness Testing:     10.2 seconds, 11.3%
Report:               5.6 seconds,  6.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Smallest problem report - generation 39
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in1 print_integer exec_swap (integer_min boolean_frominteger) (integer_mult)))
Lexicase best errors: [0 1 0 1 1 0 1 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 12
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in1 print_integer exec_swap (integer_min boolean_frominteger) (integer_mult)))
Zero cases best errors: [0 1 0 1 1 0 1 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 12
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (290 277 291 1000 408 290 1000 976 408 1000)
Population mean number of elite cases: 5.94
Count of perfect (error zero) individuals by case: (290 277 291 0 408 290 0 976 408 0)
Population mean number of perfect (error zero) cases: 2.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction exec_if})
Best program: (in1 print_integer boolean_and in3 boolean_or exec_swap (integer_min boolean_frominteger) (exec_if () ()))
Errors: [0 1 0 1 1 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 9
Size: 14
Percent parens: 0.357
--- Population Statistics ---
Average total errors in population: 7.06
Median total errors in population: 7
Error averages by case: (0.71 0.723 0.709 1.0 0.592 0.71 1.0 0.024 0.592 1.0)
Error minima by case: (0 0 0 1 0 0 1 0 0 1)
Average genome size in population (length): 7.409
Average program size in population (points): 11.606
Average percent parens in population: 0.353
Minimum age in population: 53.0925378613174
Maximum age in population: 59.6894714478949
Average age in population: 57.87424524378704
Median age in population: 57.92088664760377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 58
Genome diversity (% unique genomes):	 0.322
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 68
Syntactic diversity (% unique Push programs):	 0.29
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 6743174
--- Timings ---
Current time: 1559314411699 milliseconds
Total Time:          91.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.9 seconds, 82.5%
Fitness Testing:     10.3 seconds, 11.2%
Report:               5.6 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Smallest problem report - generation 40
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_swap})
Lexicase best program: (in3 print_integer boolean_or exec_pop (integer_min boolean_frominteger) integer_swap)
Lexicase best errors: [0 1 1 1 0 0 1 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_swap})
Zero cases best program: (in3 print_integer boolean_or exec_pop (integer_min boolean_frominteger) integer_swap)
Zero cases best errors: [0 1 1 1 0 0 1 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (326 154 153 491 326 326 1000 491 491 971)
Population mean number of elite cases: 4.73
Count of perfect (error zero) individuals by case: (326 154 153 491 326 326 0 491 491 971)
Population mean number of perfect (error zero) cases: 3.73
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction integer_min} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_dup})
Best program: (in1 print_integer integer_min exec_yankdup exec_dup ())
Errors: [1 1 1 0 1 1 1 0 0 0]
Total: 6
Mean: 0.6
Genome size: 5
Size: 7
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 6.271
Median total errors in population: 6
Error averages by case: (0.674 0.846 0.847 0.509 0.674 0.674 1.0 0.509 0.509 0.029)
Error minima by case: (0 0 0 0 0 0 1 0 0 0)
Average genome size in population (length): 6.999
Average program size in population (points): 10.771
Average percent parens in population: 0.345
Minimum age in population: 56.58412906224839
Maximum age in population: 61.27319515259296
Average age in population: 59.35433009145296
Median age in population: 59.42585245666578
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 106
Genome diversity (% unique genomes):	 0.322
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 117
Syntactic diversity (% unique Push programs):	 0.287
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 6841894
--- Timings ---
Current time: 1559314413999 milliseconds
Total Time:          94.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.9 seconds, 82.7%
Fitness Testing:     10.5 seconds, 11.1%
Report:               5.7 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Smallest problem report - generation 41
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min integer_empty boolean_or boolean_frominteger) (integer_mult)))
Lexicase best errors: [1 0 0 0 1 0 0 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 15
Percent parens: 0.267
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in3} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_or} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in1 print_integer exec_dup_times (in3 boolean_or exec_swap (integer_min integer_empty boolean_or boolean_frominteger) (integer_mult)))
Zero cases best errors: [1 0 0 0 1 0 0 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 15
Percent parens: 0.267
--- Lexicase Population Statistics ---
Count of elite individuals by case: (378 348 348 349 237 349 964 237 378 349)
Population mean number of elite cases: 3.94
Count of perfect (error zero) individuals by case: (378 348 348 349 237 349 964 237 378 349)
Population mean number of perfect (error zero) cases: 3.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_or} {:close 0, :instruction print_integer} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min})
Best program: (in4 integer_empty in1 print_integer exec_dup_times (exec_flush boolean_or print_integer exec_rot (integer_gt integer_empty boolean_or exec_swap (integer_min) ()) () ()))
Errors: [1 0 0 0 1 0 0 1 1 0]
Total: 4
Mean: 0.4
Genome size: 14
Size: 21
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.063
Median total errors in population: 7
Error averages by case: (0.622 0.652 0.652 0.651 0.763 0.651 0.036 0.763 0.622 0.651)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.232
Average program size in population (points): 11.277
Average percent parens in population: 0.350
Minimum age in population: 57.58412906224839
Maximum age in population: 63.00752301954344
Average age in population: 60.86716142610027
Median age in population: 60.96847206130133
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 83
Genome diversity (% unique genomes):	 0.338
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.307
Total error diversity:				 0.006
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 6943010
--- Timings ---
Current time: 1559314416065 milliseconds
Total Time:          96.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.8 seconds, 82.8%
Fitness Testing:     10.6 seconds, 11.0%
Report:               5.8 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Smallest problem report - generation 42
Test total error for best: 665
Test mean error for best: 0.66500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 95                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 72                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 95                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 92                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 93                 
Correct output: 15                  | Program output: 38                 
Correct output: 1                   | Program output: 62                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 71                 
Correct output: -95                 | Program output: 60                 
Correct output: -32                 | Program output: 65                 
Correct output: -81                 | Program output: -5                 
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: 25                 
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -20                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 71                 
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 61                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 100                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 100                
Correct output: -99                 | Program output: 96                 
Correct output: -83                 | Program output: 79                 
Correct output: -66                 | Program output: 52                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 94                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 69                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: 80                 
Correct output: -54                 | Program output: 23                 
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: 7                  
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: 100                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_flush} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in4 integer_empty in1 print_integer exec_dup_times (exec_flush exec_s_when_autoconstructing () (integer_rot print_integer exec_dup_times (boolean_frominteger)) (integer_mult)))
Lexicase best errors: [1 0 0 1 1 1 0 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_flush} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 2, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in4 integer_empty in1 print_integer exec_dup_times (exec_flush exec_s_when_autoconstructing () (integer_rot print_integer exec_dup_times (boolean_frominteger)) (integer_mult)))
Zero cases best errors: [1 0 0 1 1 1 0 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (225 540 538 218 217 217 983 755 973 1000)
Population mean number of elite cases: 5.67
Count of perfect (error zero) individuals by case: (225 540 538 218 217 217 983 755 973 0)
Population mean number of perfect (error zero) cases: 4.67
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_swap} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_swap (exec_dup_items in4 in1 integer_rot print_integer exec_dup_times (boolean_frominteger) integer_mult) ())
Errors: [1 0 0 1 1 1 0 0 0 1]
Total: 5
Mean: 0.5
Genome size: 9
Size: 13
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 5.334
Median total errors in population: 5
Error averages by case: (0.775 0.46 0.462 0.782 0.783 0.783 0.017 0.245 0.027 1.0)
Error minima by case: (0 0 0 0 0 0 0 0 0 1)
Average genome size in population (length): 7.145
Average program size in population (points): 10.963
Average percent parens in population: 0.339
Minimum age in population: 59.23123356462747
Maximum age in population: 64.3454904827604
Average age in population: 62.34462202431616
Median age in population: 62.41991259880501
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 121
Genome diversity (% unique genomes):	 0.312
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 129
Syntactic diversity (% unique Push programs):	 0.285
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 7056644
--- Timings ---
Current time: 1559314418450 milliseconds
Total Time:          98.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.8 seconds, 83.0%
Fitness Testing:     10.8 seconds, 10.9%
Report:               5.9 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Smallest problem report - generation 43
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot) (print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Lexicase best errors: [0 1 1 1 1 1 1 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 15
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot) (print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Zero cases best errors: [0 1 1 1 1 1 1 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 15
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (282 1000 1000 351 334 1000 334 280 350 964)
Population mean number of elite cases: 5.89
Count of perfect (error zero) individuals by case: (282 0 0 351 334 0 334 280 350 964)
Population mean number of perfect (error zero) cases: 2.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times ()) () ()))
Errors: [0 1 1 1 1 1 1 0 1 0]
Total: 7
Mean: 0.7
Genome size: 7
Size: 13
Percent parens: 0.462
--- Population Statistics ---
Average total errors in population: 7.105
Median total errors in population: 7
Error averages by case: (0.718 1.0 1.0 0.649 0.666 1.0 0.666 0.72 0.65 0.036)
Error minima by case: (0 1 1 0 0 1 0 0 0 0)
Average genome size in population (length): 7.14
Average program size in population (points): 11.218
Average percent parens in population: 0.354
Minimum age in population: 60.72124622257979
Maximum age in population: 65.84316098547242
Average age in population: 63.84917474667155
Median age in population: 63.8980129915509
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 90
Genome diversity (% unique genomes):	 0.34
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 96
Syntactic diversity (% unique Push programs):	 0.308
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 7163845
--- Timings ---
Current time: 1559314420513 milliseconds
Total Time:         100.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.6 seconds, 83.0%
Fitness Testing:     10.9 seconds, 10.9%
Report:               6.1 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Smallest problem report - generation 44
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer print_boolean boolean_invert_first_then_and) (integer_mult) ()))
Lexicase best errors: [0 1 1 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 14
Percent parens: 0.357
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer print_boolean boolean_invert_first_then_and) (integer_mult) ()))
Zero cases best errors: [0 1 1 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 14
Percent parens: 0.357
--- Lexicase Population Statistics ---
Count of elite individuals by case: (254 346 346 346 251 254 254 346 367 336)
Population mean number of elite cases: 3.10
Count of perfect (error zero) individuals by case: (254 346 346 346 251 254 254 346 367 336)
Population mean number of perfect (error zero) cases: 3.10
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_do*times} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing () exec_do*times (in4 exec_s_when_autoconstructing (integer_rot) (print_integer integer_lte boolean_frominteger integer_mult) ()))
Errors: [0 1 1 1 0 0 0 1 1 0]
Total: 5
Mean: 0.5
Genome size: 9
Size: 15
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.9
Median total errors in population: 6
Error averages by case: (0.746 0.654 0.654 0.654 0.749 0.746 0.746 0.654 0.633 0.664)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.636
Average program size in population (points): 11.836
Average percent parens in population: 0.350
Minimum age in population: 61.7729728660197
Maximum age in population: 67.24874794137952
Average age in population: 65.35831734860064
Median age in population: 65.43717525863212
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 77
Genome diversity (% unique genomes):	 0.341
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 84
Syntactic diversity (% unique Push programs):	 0.312
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 7327461
--- Timings ---
Current time: 1559314422853 milliseconds
Total Time:         103.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        85.6 seconds, 83.1%
Fitness Testing:     11.1 seconds, 10.8%
Report:               6.2 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Smallest problem report - generation 45
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: 56                 
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 70                 
Correct output: 18                  | Program output: 29                 
Correct output: 59                  | Program output: 87                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 23                 
Correct output: 35                  | Program output: 84                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 49                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 16                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 86                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 80                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -66                
Correct output: -97                 | Program output: 79                 
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 76                 
Correct output: -20                 | Program output: 53                 
Correct output: -80                 | Program output: 68                 
Correct output: -85                 | Program output: 3                  
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -32                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 97                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: 77                 
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: 87                 
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 74                 
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 79                 
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 88                 
Correct output: -99                 | Program output: 32                 
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: 52                 
Correct output: -84                 | Program output: -56                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 100                
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 94                 
Correct output: -81                 | Program output: 18                 
Correct output: 13                  | Program output: 84                 
Correct output: -23                 | Program output: 56                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: 97                 
Correct output: -90                 | Program output: 66                 
Correct output: -28                 | Program output: 86                 
Correct output: -73                 | Program output: 54                 
Correct output: -90                 | Program output: -51                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 16                 
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger integer_mult) ()))
Lexicase best errors: [1 0 1 0 1 1 0 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 11
Percent parens: 0.364
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 print_integer exec_dup_times (exec_swap (integer_min boolean_frominteger integer_mult) ()))
Zero cases best errors: [1 0 1 0 1 1 0 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 11
Percent parens: 0.364
--- Lexicase Population Statistics ---
Count of elite individuals by case: (455 394 7 394 453 112 966 394 1000 963)
Population mean number of elite cases: 5.14
Count of perfect (error zero) individuals by case: (455 394 7 394 453 112 966 394 0 963)
Population mean number of perfect (error zero) cases: 4.14
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_min} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_mult})
Best program: (in3 print_integer exec_dup_times (boolean_xor integer_min integer_gte integer_mult))
Errors: [1 0 1 0 1 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 9
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 5.862
Median total errors in population: 6
Error averages by case: (0.545 0.606 0.993 0.606 0.547 0.888 0.034 0.606 1.0 0.037)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 8.61
Average program size in population (points): 13.67
Average percent parens in population: 0.369
Minimum age in population: 64.35104651794018
Maximum age in population: 68.75157671062152
Average age in population: 66.85366095876094
Median age in population: 66.90930184145267
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 91
Genome diversity (% unique genomes):	 0.295
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 91
Syntactic diversity (% unique Push programs):	 0.271
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 7462031
--- Timings ---
Current time: 1559314425348 milliseconds
Total Time:         105.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.9 seconds, 83.2%
Fitness Testing:     11.3 seconds, 10.7%
Report:               6.3 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Smallest problem report - generation 46
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing () exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) () ())
Lexicase best errors: [1 0 0 0 1 1 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 15
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing () exec_dup_items in4 exec_s_when_autoconstructing (integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) () ())
Zero cases best errors: [1 0 0 0 1 1 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 15
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (248 946 271 271 1000 427 271 427 1000 248)
Population mean number of elite cases: 5.11
Count of perfect (error zero) individuals by case: (248 946 271 271 0 427 271 427 0 248)
Population mean number of perfect (error zero) cases: 3.11
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in4} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_dup_items in4 exec_s_when_autoconstructing (integer_rot) (print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Errors: [1 0 0 0 1 1 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 9
Size: 15
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.891
Median total errors in population: 7
Error averages by case: (0.752 0.054 0.729 0.729 1.0 0.573 0.729 0.573 1.0 0.752)
Error minima by case: (0 0 0 0 1 0 0 0 1 0)
Average genome size in population (length): 8.772
Average program size in population (points): 13.684
Average percent parens in population: 0.361
Minimum age in population: 65.9622724499144
Maximum age in population: 70.07313904360839
Average age in population: 68.36702715155447
Median age in population: 68.39459980230352
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 45
Genome diversity (% unique genomes):	 0.302
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.282
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 7664424
--- Timings ---
Current time: 1559314427538 milliseconds
Total Time:         107.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.7 seconds, 83.3%
Fitness Testing:     11.5 seconds, 10.7%
Report:               6.4 seconds,  5.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Smallest problem report - generation 47
Test total error for best: 444
Test mean error for best: 0.44400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Lexicase best errors: [0 0 1 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 19
Percent parens: 0.316
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Zero cases best errors: [0 0 1 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 19
Percent parens: 0.316
--- Lexicase Population Statistics ---
Count of elite individuals by case: (260 264 432 260 260 260 433 432 260 260)
Population mean number of elite cases: 3.12
Count of perfect (error zero) individuals by case: (260 264 432 260 260 260 433 432 260 260)
Population mean number of perfect (error zero) cases: 3.12
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Errors: [0 0 1 0 0 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 6.879
Median total errors in population: 7
Error averages by case: (0.74 0.736 0.568 0.74 0.74 0.74 0.567 0.568 0.74 0.74)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.177
Average program size in population (points): 14.472
Average percent parens in population: 0.368
Minimum age in population: 67.10111141846983
Maximum age in population: 71.93602081965925
Average age in population: 69.86549720039667
Median age in population: 69.93555987993481
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 47
Genome diversity (% unique genomes):	 0.338
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 47
Syntactic diversity (% unique Push programs):	 0.323
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 7848555
--- Timings ---
Current time: 1559314430151 milliseconds
Total Time:         110.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        91.8 seconds, 83.4%
Fitness Testing:     11.7 seconds, 10.6%
Report:               6.5 seconds,  5.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Smallest problem report - generation 48
Test total error for best: 444
Test mean error for best: 0.44400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Lexicase best errors: [1 1 1 0 0 1 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 19
Percent parens: 0.316
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Zero cases best errors: [1 1 1 0 0 1 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 19
Percent parens: 0.316
--- Lexicase Population Statistics ---
Count of elite individuals by case: (280 1000 280 657 949 280 953 641 656 657)
Population mean number of elite cases: 6.35
Count of perfect (error zero) individuals by case: (280 0 280 657 949 280 953 641 656 657)
Population mean number of perfect (error zero) cases: 5.35
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Errors: [1 1 1 0 0 1 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 4.647
Median total errors in population: 4
Error averages by case: (0.72 1.0 0.72 0.343 0.051 0.72 0.047 0.359 0.344 0.343)
Error minima by case: (0 1 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.711
Average program size in population (points): 17.724
Average percent parens in population: 0.343
Minimum age in population: 69.16188211985889
Maximum age in population: 73.31320674422653
Average age in population: 71.4143174877257
Median age in population: 71.42171793898979
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 585
Genome diversity (% unique genomes):	 0.231
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 588
Syntactic diversity (% unique Push programs):	 0.227
Total error diversity:				 0.007
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 8211726
--- Timings ---
Current time: 1559314432761 milliseconds
Total Time:         112.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        93.8 seconds, 83.2%
Fitness Testing:     12.1 seconds, 10.7%
Report:               6.8 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Smallest problem report - generation 49
Test total error for best: 444
Test mean error for best: 0.44400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Lexicase best errors: [0 0 0 0 0 0 1 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 19
Percent parens: 0.316
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Zero cases best errors: [0 0 0 0 0 0 1 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 19
Percent parens: 0.316
--- Lexicase Population Statistics ---
Count of elite individuals by case: (534 940 534 527 527 527 406 405 534 410)
Population mean number of elite cases: 5.34
Count of perfect (error zero) individuals by case: (534 940 534 527 527 527 406 405 534 410)
Population mean number of perfect (error zero) cases: 5.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Errors: [0 0 0 0 0 0 1 1 0 1]
Total: 3
Mean: 0.3
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 4.656
Median total errors in population: 3
Error averages by case: (0.466 0.06 0.466 0.473 0.473 0.473 0.594 0.595 0.466 0.59)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.192
Average program size in population (points): 17.172
Average percent parens in population: 0.353
Minimum age in population: 70.51384223814185
Maximum age in population: 74.68324395982062
Average age in population: 72.89538024627247
Median age in population: 72.90356584236564
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 417
Genome diversity (% unique genomes):	 0.261
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 422
Syntactic diversity (% unique Push programs):	 0.257
Total error diversity:				 0.008
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 8420633
--- Timings ---
Current time: 1559314435247 milliseconds
Total Time:         115.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.7 seconds, 83.1%
Fitness Testing:     12.3 seconds, 10.7%
Report:               7.1 seconds,  6.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Smallest problem report - generation 50
Test total error for best: 444
Test mean error for best: 0.44400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Lexicase best errors: [0 0 1 0 0 1 0 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 19
Percent parens: 0.316
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Zero cases best errors: [0 0 1 0 0 1 0 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 19
Percent parens: 0.316
--- Lexicase Population Statistics ---
Count of elite individuals by case: (569 553 254 685 570 254 553 254 550 550)
Population mean number of elite cases: 4.79
Count of perfect (error zero) individuals by case: (569 553 254 685 570 254 553 254 550 550)
Population mean number of perfect (error zero) cases: 4.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Errors: [0 0 1 0 0 1 0 1 0 0]
Total: 3
Mean: 0.3
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 5.208
Median total errors in population: 3
Error averages by case: (0.431 0.447 0.746 0.315 0.43 0.746 0.447 0.746 0.45 0.45)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.855
Average program size in population (points): 17.609
Average percent parens in population: 0.329
Minimum age in population: 72.03284949842333
Maximum age in population: 76.21079875908535
Average age in population: 74.3991620388512
Median age in population: 74.40400011298418
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 412
Genome diversity (% unique genomes):	 0.28
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 419
Syntactic diversity (% unique Push programs):	 0.272
Total error diversity:				 0.007
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 8881632
--- Timings ---
Current time: 1559314437826 milliseconds
Total Time:         117.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        97.6 seconds, 82.8%
Fitness Testing:     12.8 seconds, 10.8%
Report:               7.4 seconds,  6.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Smallest problem report - generation 51
Test total error for best: 444
Test mean error for best: 0.44400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Lexicase best errors: [1 0 1 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 19
Percent parens: 0.316
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ())
Zero cases best errors: [1 0 1 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 19
Percent parens: 0.316
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 661 1 952 1 678 678 660 660 956)
Population mean number of elite cases: 5.25
Count of perfect (error zero) individuals by case: (1 661 1 952 1 678 678 660 660 956)
Population mean number of perfect (error zero) cases: 5.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 1, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (in3 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1) (integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult))) ())
Errors: [1 0 1 0 1 0 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 4.752
Median total errors in population: 3
Error averages by case: (0.999 0.339 0.999 0.048 0.999 0.322 0.322 0.34 0.34 0.044)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.876
Average program size in population (points): 17.868
Average percent parens in population: 0.338
Minimum age in population: 73.22475406937635
Maximum age in population: 77.70933311805138
Average age in population: 75.8560758550988
Median age in population: 75.91690668159752
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 446
Genome diversity (% unique genomes):	 0.281
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 456
Syntactic diversity (% unique Push programs):	 0.274
Total error diversity:				 0.007
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 9345694
--- Timings ---
Current time: 1559314440376 milliseconds
Total Time:         120.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        99.6 seconds, 82.6%
Fitness Testing:     13.2 seconds, 10.9%
Report:               7.7 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Smallest problem report - generation 52
Test total error for best: 423
Test mean error for best: 0.42300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 61                 
Correct output: 11                  | Program output: 27                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 59                 
Correct output: 1                   | Program output: 57                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 35                 
Correct output: 17                  | Program output: 59                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 89                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 64                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 36                 
Correct output: 1                   | Program output: 6                  
Correct output: 13                  | Program output: 13                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -80                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: 70                 
Correct output: -95                 | Program output: -58                
Correct output: -32                 | Program output: -18                
Correct output: -81                 | Program output: -25                
Correct output: -15                 | Program output: 2                  
Correct output: -60                 | Program output: -60                
Correct output: -90                 | Program output: 28                 
Correct output: -69                 | Program output: -69                
Correct output: -86                 | Program output: -81                
Correct output: -58                 | Program output: 26                 
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -73                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -32                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: 2                  
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: -57                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -14                
Correct output: -99                 | Program output: 74                 
Correct output: -83                 | Program output: 53                 
Correct output: -66                 | Program output: 17                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 34                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 46                 
Correct output: 46                  | Program output: 46                 
Correct output: -88                 | Program output: -31                
Correct output: -54                 | Program output: -45                
Correct output: 5                   | Program output: 37                 
Correct output: -81                 | Program output: -81                
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: -23                
Correct output: -74                 | Program output: -65                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: -19                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -70                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()))
Lexicase best errors: [1 0 0 1 0 1 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 22
Percent parens: 0.318
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()))
Zero cases best errors: [1 0 0 1 0 1 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 22
Percent parens: 0.318
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 947 943 1 934 1 437 943 952 437)
Population mean number of elite cases: 5.60
Count of perfect (error zero) individuals by case: (1 947 943 1 934 1 437 943 952 437)
Population mean number of perfect (error zero) cases: 5.60
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()))
Errors: [1 0 0 1 0 1 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 15
Size: 22
Percent parens: 0.318
--- Population Statistics ---
Average total errors in population: 4.404
Median total errors in population: 5
Error averages by case: (0.999 0.053 0.057 0.999 0.066 0.999 0.563 0.057 0.048 0.563)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.997
Average program size in population (points): 20.46
Average percent parens in population: 0.316
Minimum age in population: 74.90282059163908
Maximum age in population: 78.88133042370887
Average age in population: 77.21076863508598
Median age in population: 77.26445694401204
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 383
Genome diversity (% unique genomes):	 0.216
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 383
Syntactic diversity (% unique Push programs):	 0.214
Total error diversity:				 0.007
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 9851845
--- Timings ---
Current time: 1559314443236 milliseconds
Total Time:         123.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       101.6 seconds, 82.5%
Fitness Testing:     13.7 seconds, 11.1%
Report:               7.8 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Smallest problem report - generation 53
Test total error for best: 444
Test mean error for best: 0.44400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Lexicase best errors: [0 0 0 0 1 0 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 20
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Zero cases best errors: [0 0 0 0 1 0 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 20
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (570 1 957 1 380 1 1 574 383 380)
Population mean number of elite cases: 3.25
Count of perfect (error zero) individuals by case: (570 1 957 1 380 1 1 574 383 380)
Population mean number of perfect (error zero) cases: 3.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Errors: [0 0 0 0 1 0 0 0 1 1]
Total: 3
Mean: 0.3
Genome size: 15
Size: 20
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.752
Median total errors in population: 7
Error averages by case: (0.43 0.999 0.043 0.999 0.62 0.999 0.999 0.426 0.617 0.62)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.654
Average program size in population (points): 21.691
Average percent parens in population: 0.324
Minimum age in population: 76.96520393164018
Maximum age in population: 80.2741719740122
Average age in population: 78.89515561163527
Median age in population: 78.9132340108087
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 419
Genome diversity (% unique genomes):	 0.196
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 419
Syntactic diversity (% unique Push programs):	 0.195
Total error diversity:				 0.006
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 10240272
--- Timings ---
Current time: 1559314445992 milliseconds
Total Time:         126.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       103.7 seconds, 82.3%
Fitness Testing:     14.0 seconds, 11.2%
Report:               8.2 seconds,  6.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Smallest problem report - generation 54
Test total error for best: 444
Test mean error for best: 0.44400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 47                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: 58                 
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 24                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 52                 
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 35                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 16                 
Correct output: 27                  | Program output: 36                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 50                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 11                 
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: 60                 
Correct output: -20                 | Program output: 11                 
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -69                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: 11                 
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -16                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -48                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -90                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -58                
Correct output: -33                 | Program output: -8                 
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: 8                  
Correct output: -76                 | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -31                
Correct output: -66                 | Program output: 12                 
Correct output: -7                  | Program output: 16                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 36                 
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 44                 
Correct output: 46                  | Program output: 78                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 60                 
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: 18                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: 20                 
Correct output: -28                 | Program output: 7                  
Correct output: -73                 | Program output: 13                 
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Lexicase best errors: [0 0 0 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 20
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Zero cases best errors: [0 0 0 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 20
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (595 956 572 327 595 572 595 25 327 595)
Population mean number of elite cases: 5.16
Count of perfect (error zero) individuals by case: (595 956 572 327 595 572 595 25 327 595)
Population mean number of perfect (error zero) cases: 5.16
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Errors: [0 0 0 1 0 0 0 1 1 0]
Total: 3
Mean: 0.3
Genome size: 15
Size: 20
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 4.841
Median total errors in population: 3
Error averages by case: (0.405 0.044 0.428 0.673 0.405 0.428 0.405 0.975 0.673 0.405)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.609
Average program size in population (points): 20.27
Average percent parens in population: 0.278
Minimum age in population: 79.11063356404262
Maximum age in population: 81.94223945062704
Average age in population: 80.62728177746558
Median age in population: 80.9132340108087
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 508
Genome diversity (% unique genomes):	 0.237
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 511
Syntactic diversity (% unique Push programs):	 0.234
Total error diversity:				 0.008
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 10769576
--- Timings ---
Current time: 1559314448502 milliseconds
Total Time:         128.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       105.4 seconds, 82.0%
Fitness Testing:     14.5 seconds, 11.3%
Report:               8.5 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Smallest problem report - generation 55
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Lexicase best errors: [1 0 0 0 0 0 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 20
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Zero cases best errors: [1 0 0 0 0 0 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 20
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (212 620 710 494 937 620 213 212 212 729)
Population mean number of elite cases: 4.96
Count of perfect (error zero) individuals by case: (212 620 710 494 937 620 213 212 212 729)
Population mean number of perfect (error zero) cases: 4.96
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 print_integer boolean_flush integer_mult) ()) ()))
Errors: [0 1 0 1 0 1 0 0 0 1]
Total: 4
Mean: 0.4
Genome size: 14
Size: 20
Percent parens: 0.300
--- Population Statistics ---
Average total errors in population: 5.041
Median total errors in population: 4
Error averages by case: (0.788 0.38 0.29 0.506 0.063 0.38 0.787 0.788 0.788 0.271)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.785
Average program size in population (points): 20.666
Average percent parens in population: 0.283
Minimum age in population: 80.11063356404262
Maximum age in population: 83.50156310350356
Average age in population: 82.10128078458509
Median age in population: 82.06088675638006
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 302
Genome diversity (% unique genomes):	 0.273
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 307
Syntactic diversity (% unique Push programs):	 0.272
Total error diversity:				 0.006
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 11169764
--- Timings ---
Current time: 1559314450928 milliseconds
Total Time:         131.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       107.3 seconds, 81.8%
Fitness Testing:     14.9 seconds, 11.4%
Report:               8.8 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Smallest problem report - generation 56
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 print_integer integer_mult) ()) ()))
Lexicase best errors: [0 0 1 0 1 0 1 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 19
Percent parens: 0.316
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 print_integer integer_mult) ()) ()))
Zero cases best errors: [0 0 1 0 1 0 1 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 19
Percent parens: 0.316
--- Lexicase Population Statistics ---
Count of elite individuals by case: (956 942 18 469 468 469 452 469 469 456)
Population mean number of elite cases: 5.17
Count of perfect (error zero) individuals by case: (956 942 18 469 468 469 452 469 469 456)
Population mean number of perfect (error zero) cases: 5.17
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 print_integer exec_dup_times (integer_mult)) ()) ()))
Errors: [0 0 1 0 1 0 1 0 0 1]
Total: 4
Mean: 0.4
Genome size: 14
Size: 21
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 4.832
Median total errors in population: 5
Error averages by case: (0.044 0.058 0.982 0.531 0.532 0.531 0.548 0.531 0.531 0.544)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.508
Average program size in population (points): 20.451
Average percent parens in population: 0.290
Minimum age in population: 81.11063356404262
Maximum age in population: 85.22913752934303
Average age in population: 83.59334644034118
Median age in population: 83.62873442168812
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 330
Genome diversity (% unique genomes):	 0.285
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 334
Syntactic diversity (% unique Push programs):	 0.283
Total error diversity:				 0.007
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 11656696
--- Timings ---
Current time: 1559314453616 milliseconds
Total Time:         133.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       109.2 seconds, 81.7%
Fitness Testing:     15.4 seconds, 11.5%
Report:               8.9 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Smallest problem report - generation 57
Test total error for best: 635
Test mean error for best: 0.63500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: 53                 
Correct output: -29                 | Program output: 25                 
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: 35                 
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: 24                 
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 26                 
Correct output: 59                  | Program output: 92                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 29                 
Correct output: 35                  | Program output: 68                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 89                 
Correct output: 21                  | Program output: 64                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 79                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 87                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 74                 
Correct output: -79                 | Program output: -21                
Correct output: -82                 | Program output: 22                 
Correct output: -97                 | Program output: 84                 
Correct output: -48                 | Program output: 48                 
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: 18                 
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 67                 
Correct output: -60                 | Program output: 89                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: 1                  
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: 11                 
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 70                 
Correct output: -70                 | Program output: 82                 
Correct output: -32                 | Program output: 7                  
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 55                 
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -87                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: 37                 
Correct output: -84                 | Program output: -70                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 87                 
Correct output: 13                  | Program output: 56                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: 81                 
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -20                
Correct output: -92                 | Program output: 16                 
Correct output: -58                 | Program output: 87                 
Correct output: -72                 | Program output: 93                 
Correct output: -96                 | Program output: 59                 
Correct output: -69                 | Program output: 56                 
Correct output: -48                 | Program output: 5                  
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 print_integer exec_dup_times (integer_mult)) ()) ()))
Lexicase best errors: [1 0 1 0 1 1 0 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 21
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 print_integer exec_dup_times (integer_mult)) ()) ()))
Zero cases best errors: [1 0 1 0 1 1 0 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 21
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (304 451 304 451 379 479 456 451 376 451)
Population mean number of elite cases: 4.10
Count of perfect (error zero) individuals by case: (304 451 304 451 379 479 456 451 376 451)
Population mean number of perfect (error zero) cases: 4.10
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop in2 exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 print_integer exec_dup_times (integer_mult)) ()) ()))
Errors: [1 0 1 0 1 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 14
Size: 21
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.898
Median total errors in population: 5
Error averages by case: (0.696 0.549 0.696 0.549 0.621 0.521 0.544 0.549 0.624 0.549)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.48
Average program size in population (points): 20.461
Average percent parens in population: 0.292
Minimum age in population: 82.23706038359438
Maximum age in population: 87.0067998750186
Average age in population: 84.96471041138052
Median age in population: 85.03382178603692
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 177
Genome diversity (% unique genomes):	 0.314
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 178
Syntactic diversity (% unique Push programs):	 0.311
Total error diversity:				 0.005
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 12156629
--- Timings ---
Current time: 1559314456338 milliseconds
Total Time:         136.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       111.2 seconds, 81.6%
Fitness Testing:     15.9 seconds, 11.6%
Report:               9.2 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Smallest problem report - generation 58
Test total error for best: 429
Test mean error for best: 0.42900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop boolean_dup exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()) ()))
Lexicase best errors: [0 1 0 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 30
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop boolean_dup exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()) ()))
Zero cases best errors: [0 1 0 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 30
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (912 266 516 534 516 412 414 516 495 414)
Population mean number of elite cases: 4.99
Count of perfect (error zero) individuals by case: (912 266 516 534 516 412 414 516 495 414)
Population mean number of perfect (error zero) cases: 4.99
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop boolean_dup exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()) ()))
Errors: [0 1 0 0 0 0 0 0 1 0]
Total: 2
Mean: 0.2
Genome size: 21
Size: 30
Percent parens: 0.300
--- Population Statistics ---
Average total errors in population: 5.005
Median total errors in population: 6
Error averages by case: (0.088 0.734 0.484 0.466 0.484 0.588 0.586 0.484 0.505 0.586)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 15.726
Average program size in population (points): 22.085
Average percent parens in population: 0.288
Minimum age in population: 83.58576016021134
Maximum age in population: 88.43264757420381
Average age in population: 86.67657830547148
Median age in population: 86.6620123306154
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 197
Genome diversity (% unique genomes):	 0.345
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 200
Syntactic diversity (% unique Push programs):	 0.341
Total error diversity:				 0.007
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 12666279
--- Timings ---
Current time: 1559314459053 milliseconds
Total Time:         139.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       113.1 seconds, 81.4%
Fitness Testing:     16.4 seconds, 11.8%
Report:               9.4 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Smallest problem report - generation 59
Test total error for best: 429
Test mean error for best: 0.42900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 94                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: 75                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 74                 
Correct output: 11                  | Program output: 26                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 15                 
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 78                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 74                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 34                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -52                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -16                
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -40                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -2                 
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: 25                 
Correct output: -60                 | Program output: 32                 
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -16                
Correct output: -77                 | Program output: -19                
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -4                 
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: 67                 
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 52                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: 86                 
Correct output: -99                 | Program output: 14                 
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: 78                 
Correct output: -54                 | Program output: 12                 
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -3                 
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -49                
Correct output: -58                 | Program output: 81                 
Correct output: -72                 | Program output: -48                
Correct output: -96                 | Program output: -11                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -20                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop boolean_dup exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()) ()))
Lexicase best errors: [1 0 1 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 30
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop boolean_dup exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()) ()))
Zero cases best errors: [1 0 1 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 30
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (11 514 378 932 921 932 932 377 514 514)
Population mean number of elite cases: 6.03
Count of perfect (error zero) individuals by case: (11 514 378 932 921 932 932 377 514 514)
Population mean number of perfect (error zero) cases: 6.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (integer_pop boolean_dup exec_swap (in1 integer_min exec_swap (boolean_stackdepth integer_inc in1 in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()) ()))
Errors: [1 0 1 0 0 0 0 1 0 0]
Total: 3
Mean: 0.3
Genome size: 21
Size: 30
Percent parens: 0.300
--- Population Statistics ---
Average total errors in population: 3.975
Median total errors in population: 3
Error averages by case: (0.989 0.486 0.622 0.068 0.079 0.068 0.068 0.623 0.486 0.486)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 18.475
Average program size in population (points): 25.819
Average percent parens in population: 0.280
Minimum age in population: 85.06088675638006
Maximum age in population: 89.63852184921386
Average age in population: 86.9210949719419
Median age in population: 86.66357315341187
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 423
Genome diversity (% unique genomes):	 0.278
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 423
Syntactic diversity (% unique Push programs):	 0.274
Total error diversity:				 0.008
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 13275211
--- Timings ---
Current time: 1559314461941 milliseconds
Total Time:         141.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       115.1 seconds, 81.1%
Fitness Testing:     16.9 seconds, 11.9%
Report:               9.7 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Smallest problem report - generation 60
Test total error for best: 225
Test mean error for best: 0.22500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 63                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 43                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 23                 
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 29                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: -28                
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -29                
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: -64                
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 75                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: -6                 
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -43                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_inc} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min) exec_swap (boolean_stackdepth integer_inc) (in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Lexicase best errors: [1 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 27
Percent parens: 0.259
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_inc} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (integer_pop in2 in3 in1 integer_min) exec_swap (boolean_stackdepth integer_inc) (in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()))
Zero cases best errors: [1 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 27
Percent parens: 0.259
--- Lexicase Population Statistics ---
Count of elite individuals by case: (449 456 941 916 935 923 439 924 441 440)
Population mean number of elite cases: 6.86
Count of perfect (error zero) individuals by case: (449 456 941 916 935 923 439 924 441 440)
Population mean number of perfect (error zero) cases: 6.86
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()))
Errors: [1 0 0 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 17
Size: 24
Percent parens: 0.292
--- Population Statistics ---
Average total errors in population: 3.136
Median total errors in population: 3
Error averages by case: (0.551 0.544 0.059 0.084 0.065 0.077 0.561 0.076 0.559 0.56)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.515
Average program size in population (points): 27.426
Average percent parens in population: 0.288
Minimum age in population: 86.56445186658543
Maximum age in population: 90.62805833997098
Average age in population: 88.66215440007605
Median age in population: 88.66773282540449
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 303
Genome diversity (% unique genomes):	 0.274
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 304
Syntactic diversity (% unique Push programs):	 0.273
Total error diversity:				 0.009
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 13613954
--- Timings ---
Current time: 1559314464513 milliseconds
Total Time:         144.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       117.0 seconds, 81.0%
Fitness Testing:     17.3 seconds, 12.0%
Report:              10.1 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Smallest problem report - generation 61
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 59                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 35                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 13                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: -80                
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -60                
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: -69                
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 46                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: -81                
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: -23                
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Lexicase best program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min integer_min boolean_and in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 28
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Zero cases best program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min integer_min boolean_and in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ()) ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 28
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (719 343 740 704 694 740 732 701 704 729)
Population mean number of elite cases: 6.81
Count of perfect (error zero) individuals by case: (719 343 740 704 694 740 732 701 704 729)
Population mean number of perfect (error zero) cases: 6.81
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_swap} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction in1} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction integer_inc} {:close 0, :instruction integer_min} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_inc} {:close 0, :instruction in1} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_mult})
Best program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 25
Size: 34
Percent parens: 0.265
--- Population Statistics ---
Average total errors in population: 3.194
Median total errors in population: 1
Error averages by case: (0.281 0.657 0.26 0.296 0.306 0.26 0.268 0.299 0.296 0.271)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.188
Average program size in population (points): 26.228
Average percent parens in population: 0.270
Minimum age in population: 88.65783319460186
Maximum age in population: 91.89789558268772
Average age in population: 89.85633987859197
Median age in population: 89.85623407462928
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 236
Genome diversity (% unique genomes):	 0.291
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 236
Syntactic diversity (% unique Push programs):	 0.289
Total error diversity:				 0.011
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 14087304
--- Timings ---
Current time: 1559314467316 milliseconds
Total Time:         147.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       119.0 seconds, 80.8%
Fitness Testing:     17.7 seconds, 12.0%
Report:              10.4 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 61
Successful program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 34


Auto-simplifying with starting size: 34
step: 0
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 500
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 1000
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 1500
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 2000
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 2500
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 3000
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 3500
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 4000
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 4500
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

step: 5000
program: (exec_y_when_autoconstructing (exec_swap (in2 in3 in1 integer_min in4 integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot boolean_stackdepth integer_inc) (integer_min exec_swap (boolean_stackdepth integer_inc in1 integer_rot print_integer exec_dup_times (boolean_frominteger integer_mult)) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 34

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 61
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 14                  | Program output: 14                 
Correct output: -77                 | Program output: -77                
Correct output: -74                 | Program output: -74                
Correct output: -29                 | Program output: -29                
Correct output: 57                  | Program output: 57                 
Correct output: -64                 | Program output: -64                
Correct output: -42                 | Program output: -42                
Correct output: -44                 | Program output: -44                
Correct output: -69                 | Program output: -69                
Correct output: -79                 | Program output: -79                
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 78                  | Program output: 78                 
Correct output: 13                  | Program output: 13                 
Correct output: -77                 | Program output: -77                
Correct output: 16                  | Program output: 16                 
Correct output: 11                  | Program output: 11                 
Correct output: 19                  | Program output: 19                 
Correct output: 18                  | Program output: 18                 
Correct output: 59                  | Program output: 59                 
Correct output: 1                   | Program output: 1                  
Correct output: 9                   | Program output: 9                  
Correct output: 35                  | Program output: 35                 
Correct output: 17                  | Program output: 17                 
Correct output: 4                   | Program output: 4                  
Correct output: 21                  | Program output: 21                 
Correct output: 5                   | Program output: 5                  
Correct output: 14                  | Program output: 14                 
Correct output: 9                   | Program output: 9                  
Correct output: 27                  | Program output: 27                 
Correct output: 63                  | Program output: 63                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 1                   | Program output: 1                  
Correct output: 13                  | Program output: 13                 
Correct output: -79                 | Program output: -79                
Correct output: -82                 | Program output: -82                
Correct output: -97                 | Program output: -97                
Correct output: -48                 | Program output: -48                
Correct output: -38                 | Program output: -38                
Correct output: -20                 | Program output: -20                
Correct output: -80                 | Program output: -80                
Correct output: -85                 | Program output: -85                
Correct output: -70                 | Program output: -70                
Correct output: -95                 | Program output: -95                
Correct output: -32                 | Program output: -32                
Correct output: -81                 | Program output: -81                
Correct output: -15                 | Program output: -15                
Correct output: -60                 | Program output: -60                
Correct output: -90                 | Program output: -90                
Correct output: -69                 | Program output: -69                
Correct output: -86                 | Program output: -86                
Correct output: -58                 | Program output: -58                
Correct output: -77                 | Program output: -77                
Correct output: -96                 | Program output: -96                
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -32                 | Program output: -32                
Correct output: -89                 | Program output: -89                
Correct output: -71                 | Program output: -71                
Correct output: -33                 | Program output: -33                
Correct output: 36                  | Program output: 36                 
Correct output: -47                 | Program output: -47                
Correct output: -76                 | Program output: -76                
Correct output: 6                   | Program output: 6                  
Correct output: -92                 | Program output: -92                
Correct output: -99                 | Program output: -99                
Correct output: -83                 | Program output: -83                
Correct output: -66                 | Program output: -66                
Correct output: -7                  | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: 7                   | Program output: 7                  
Correct output: -31                 | Program output: -31                
Correct output: -84                 | Program output: -84                
Correct output: 28                  | Program output: 28                 
Correct output: 46                  | Program output: 46                 
Correct output: -88                 | Program output: -88                
Correct output: -54                 | Program output: -54                
Correct output: 5                   | Program output: 5                  
Correct output: -81                 | Program output: -81                
Correct output: 13                  | Program output: 13                 
Correct output: -23                 | Program output: -23                
Correct output: -74                 | Program output: -74                
Correct output: -78                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -73                 | Program output: -73                
Correct output: -90                 | Program output: -90                
Correct output: -92                 | Program output: -92                
Correct output: -58                 | Program output: -58                
Correct output: -72                 | Program output: -72                
Correct output: -96                 | Program output: -96                
Correct output: -69                 | Program output: -69                
Correct output: -48                 | Program output: -48                
Correct output: -92                 | Program output: -92                
;;******************************
