Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x30b9728f clojush.problems.software.smallest$fn__7460@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[82 20 20 20] 20] [[66 -43 -43 -43] -43] [[96 -4 -4 -4] -4] [[100 -52 100 100] -52] [[-12 -59 -59 -59] -59] [[82 62 82 82] 62] [[-82 93 -82 -82] -82] [[-94 -87 -94 -94] -94] [[92 92 -89 92] -89] [[31 -85 -85 -85] -85] [(6 6 6 6) 6] [(-31 -31 -31 -31) -31] [(-36 -36 -36 -36) -36] [(-98 -98 -98 -98) -98] [(-66 -66 -66 -66) -66] [(17 77 41 77) 17] [(81 6 94 65) 6] [(82 70 26 2) 2] [(1 69 88 3) 1] [(8 2 73 42) 2] [(27 92 42 38) 27] [(42 12 35 83) 12] [(21 77 9 62) 9] [(31 38 38 66) 31] [(53 96 59 77) 53] [(18 0 7 4) 0] [(52 5 90 45) 5] [(11 44 42 85) 11] [(87 17 64 28) 17] [(1 58 47 28) 1] [(6 28 50 9) 6] [(52 38 8 37) 8] [(32 41 100 7) 7] [(79 78 2 54) 2] [(25 53 83 47) 25] [(-29 -70 -51 11) -70] [(-45 -81 -15 -73) -81] [(20 -48 -76 95) -76] [(-59 80 58 95) -59] [(42 49 39 -89) -89] [(12 76 -52 28) -52] [(88 97 -6 58) -6] [(-51 25 14 -12) -51] [(-98 82 44 62) -98] [(60 13 81 0) 0] [(30 72 47 -40) -40] [(-2 -60 0 61) -60] [(97 -62 20 0) -62] [(88 -95 48 -89) -95] [(-42 -92 28 -72) -92] [(-92 17 93 21) -92] [(-87 28 8 23) -87] [(23 -24 100 97) -24] [(90 -62 -25 -69) -69] [(81 32 -66 -76) -76] [(52 -28 -14 -27) -28] [(-26 -27 -48 -58) -58] [(-61 30 -92 57) -92] [(-72 -85 -68 -80) -85] [(-72 95 -15 -67) -72] [(54 -28 60 -62) -62] [(69 88 -98 34) -98] [(51 19 39 -100) -100] [(8 15 -29 -58) -58] [(-86 -82 55 -32) -86] [(-30 -25 -56 -79) -79] [(76 8 26 0) 0] [(-29 80 21 17) -29] [(-32 -12 -86 82) -86] [(54 86 -37 -96) -96] [(8 -32 91 -70) -70] [(-79 -19 71 17) -79] [(-63 72 20 11) -63] [(-50 -62 22 79) -62] [(-55 2 87 -83) -83] [(-76 80 -97 -58) -97] [(42 -53 75 -64) -64] [(-20 79 -67 -6) -67] [(-51 55 -7 -87) -87] [(-36 -4 53 0) -36] [(-5 14 -16 -63) -63] [(-81 22 -98 -38) -98] [(27 8 -22 15) -22] [(-40 19 47 31) -40] [(90 -56 -13 69) -56] [(30 19 42 -70) -70] [(36 -92 13 -9) -92] [(-22 -25 71 78) -25] [(-95 67 64 -85) -95] [(-73 55 -9 44) -73] [(-22 44 59 77) -22] [(54 11 50 -45) -45] [(-27 22 -16 -57) -57] [(71 59 52 70) 52] [(-16 -49 47 6) -49])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[82 20 20 20] 20]
Train Case:   6 | Input/Output: [[66 -43 -43 -43] -43]
Train Case:   7 | Input/Output: [[96 -4 -4 -4] -4]
Train Case:   8 | Input/Output: [[100 -52 100 100] -52]
Train Case:   9 | Input/Output: [[-12 -59 -59 -59] -59]
Train Case:  10 | Input/Output: [[82 62 82 82] 62]
Train Case:  11 | Input/Output: [[-82 93 -82 -82] -82]
Train Case:  12 | Input/Output: [[-94 -87 -94 -94] -94]
Train Case:  13 | Input/Output: [[92 92 -89 92] -89]
Train Case:  14 | Input/Output: [[31 -85 -85 -85] -85]
Train Case:  15 | Input/Output: [(6 6 6 6) 6]
Train Case:  16 | Input/Output: [(-31 -31 -31 -31) -31]
Train Case:  17 | Input/Output: [(-36 -36 -36 -36) -36]
Train Case:  18 | Input/Output: [(-98 -98 -98 -98) -98]
Train Case:  19 | Input/Output: [(-66 -66 -66 -66) -66]
Train Case:  20 | Input/Output: [(17 77 41 77) 17]
Train Case:  21 | Input/Output: [(81 6 94 65) 6]
Train Case:  22 | Input/Output: [(82 70 26 2) 2]
Train Case:  23 | Input/Output: [(1 69 88 3) 1]
Train Case:  24 | Input/Output: [(8 2 73 42) 2]
Train Case:  25 | Input/Output: [(27 92 42 38) 27]
Train Case:  26 | Input/Output: [(42 12 35 83) 12]
Train Case:  27 | Input/Output: [(21 77 9 62) 9]
Train Case:  28 | Input/Output: [(31 38 38 66) 31]
Train Case:  29 | Input/Output: [(53 96 59 77) 53]
Train Case:  30 | Input/Output: [(18 0 7 4) 0]
Train Case:  31 | Input/Output: [(52 5 90 45) 5]
Train Case:  32 | Input/Output: [(11 44 42 85) 11]
Train Case:  33 | Input/Output: [(87 17 64 28) 17]
Train Case:  34 | Input/Output: [(1 58 47 28) 1]
Train Case:  35 | Input/Output: [(6 28 50 9) 6]
Train Case:  36 | Input/Output: [(52 38 8 37) 8]
Train Case:  37 | Input/Output: [(32 41 100 7) 7]
Train Case:  38 | Input/Output: [(79 78 2 54) 2]
Train Case:  39 | Input/Output: [(25 53 83 47) 25]
Train Case:  40 | Input/Output: [(-29 -70 -51 11) -70]
Train Case:  41 | Input/Output: [(-45 -81 -15 -73) -81]
Train Case:  42 | Input/Output: [(20 -48 -76 95) -76]
Train Case:  43 | Input/Output: [(-59 80 58 95) -59]
Train Case:  44 | Input/Output: [(42 49 39 -89) -89]
Train Case:  45 | Input/Output: [(12 76 -52 28) -52]
Train Case:  46 | Input/Output: [(88 97 -6 58) -6]
Train Case:  47 | Input/Output: [(-51 25 14 -12) -51]
Train Case:  48 | Input/Output: [(-98 82 44 62) -98]
Train Case:  49 | Input/Output: [(60 13 81 0) 0]
Train Case:  50 | Input/Output: [(30 72 47 -40) -40]
Train Case:  51 | Input/Output: [(-2 -60 0 61) -60]
Train Case:  52 | Input/Output: [(97 -62 20 0) -62]
Train Case:  53 | Input/Output: [(88 -95 48 -89) -95]
Train Case:  54 | Input/Output: [(-42 -92 28 -72) -92]
Train Case:  55 | Input/Output: [(-92 17 93 21) -92]
Train Case:  56 | Input/Output: [(-87 28 8 23) -87]
Train Case:  57 | Input/Output: [(23 -24 100 97) -24]
Train Case:  58 | Input/Output: [(90 -62 -25 -69) -69]
Train Case:  59 | Input/Output: [(81 32 -66 -76) -76]
Train Case:  60 | Input/Output: [(52 -28 -14 -27) -28]
Train Case:  61 | Input/Output: [(-26 -27 -48 -58) -58]
Train Case:  62 | Input/Output: [(-61 30 -92 57) -92]
Train Case:  63 | Input/Output: [(-72 -85 -68 -80) -85]
Train Case:  64 | Input/Output: [(-72 95 -15 -67) -72]
Train Case:  65 | Input/Output: [(54 -28 60 -62) -62]
Train Case:  66 | Input/Output: [(69 88 -98 34) -98]
Train Case:  67 | Input/Output: [(51 19 39 -100) -100]
Train Case:  68 | Input/Output: [(8 15 -29 -58) -58]
Train Case:  69 | Input/Output: [(-86 -82 55 -32) -86]
Train Case:  70 | Input/Output: [(-30 -25 -56 -79) -79]
Train Case:  71 | Input/Output: [(76 8 26 0) 0]
Train Case:  72 | Input/Output: [(-29 80 21 17) -29]
Train Case:  73 | Input/Output: [(-32 -12 -86 82) -86]
Train Case:  74 | Input/Output: [(54 86 -37 -96) -96]
Train Case:  75 | Input/Output: [(8 -32 91 -70) -70]
Train Case:  76 | Input/Output: [(-79 -19 71 17) -79]
Train Case:  77 | Input/Output: [(-63 72 20 11) -63]
Train Case:  78 | Input/Output: [(-50 -62 22 79) -62]
Train Case:  79 | Input/Output: [(-55 2 87 -83) -83]
Train Case:  80 | Input/Output: [(-76 80 -97 -58) -97]
Train Case:  81 | Input/Output: [(42 -53 75 -64) -64]
Train Case:  82 | Input/Output: [(-20 79 -67 -6) -67]
Train Case:  83 | Input/Output: [(-51 55 -7 -87) -87]
Train Case:  84 | Input/Output: [(-36 -4 53 0) -36]
Train Case:  85 | Input/Output: [(-5 14 -16 -63) -63]
Train Case:  86 | Input/Output: [(-81 22 -98 -38) -98]
Train Case:  87 | Input/Output: [(27 8 -22 15) -22]
Train Case:  88 | Input/Output: [(-40 19 47 31) -40]
Train Case:  89 | Input/Output: [(90 -56 -13 69) -56]
Train Case:  90 | Input/Output: [(30 19 42 -70) -70]
Train Case:  91 | Input/Output: [(36 -92 13 -9) -92]
Train Case:  92 | Input/Output: [(-22 -25 71 78) -25]
Train Case:  93 | Input/Output: [(-95 67 64 -85) -95]
Train Case:  94 | Input/Output: [(-73 55 -9 44) -73]
Train Case:  95 | Input/Output: [(-22 44 59 77) -22]
Train Case:  96 | Input/Output: [(54 11 50 -45) -45]
Train Case:  97 | Input/Output: [(-27 22 -16 -57) -57]
Train Case:  98 | Input/Output: [(71 59 52 70) 52]
Train Case:  99 | Input/Output: [(-16 -49 47 6) -49]
Test Case:   0 | Input/Output: [[61 61 -48 61] -48]
Test Case:   1 | Input/Output: [[1 3 1 1] 1]
Test Case:   2 | Input/Output: [[-40 -40 97 -40] -40]
Test Case:   3 | Input/Output: [[-76 -17 -76 -76] -76]
Test Case:   4 | Input/Output: [[-71 42 -71 -71] -71]
Test Case:   5 | Input/Output: [[33 33 86 33] 33]
Test Case:   6 | Input/Output: [[-28 -28 -28 87] -28]
Test Case:   7 | Input/Output: [[46 46 19 46] 19]
Test Case:   8 | Input/Output: [[45 87 45 45] 45]
Test Case:   9 | Input/Output: [[-6 -6 -6 -23] -23]
Test Case:  10 | Input/Output: [[21 21 57 21] 21]
Test Case:  11 | Input/Output: [[53 53 53 -34] -34]
Test Case:  12 | Input/Output: [[-9 -9 51 -9] -9]
Test Case:  13 | Input/Output: [[-17 -17 -17 -83] -83]
Test Case:  14 | Input/Output: [[72 72 64 72] 64]
Test Case:  15 | Input/Output: [[-43 -43 -43 -33] -43]
Test Case:  16 | Input/Output: [[96 13 96 96] 13]
Test Case:  17 | Input/Output: [[-61 51 -61 -61] -61]
Test Case:  18 | Input/Output: [[-25 -77 -25 -25] -77]
Test Case:  19 | Input/Output: [[66 66 66 96] 66]
Test Case:  20 | Input/Output: [[-27 47 -27 -27] -27]
Test Case:  21 | Input/Output: [[-2 -48 -2 -2] -48]
Test Case:  22 | Input/Output: [[23 23 82 23] 23]
Test Case:  23 | Input/Output: [[-53 72 72 72] -53]
Test Case:  24 | Input/Output: [[-81 63 -81 -81] -81]
Test Case:  25 | Input/Output: [[-49 -49 -67 -49] -67]
Test Case:  26 | Input/Output: [[-93 48 48 48] -93]
Test Case:  27 | Input/Output: [[-93 -93 -4 -93] -93]
Test Case:  28 | Input/Output: [[-81 -81 -81 -43] -81]
Test Case:  29 | Input/Output: [[20 20 33 20] 20]
Test Case:  30 | Input/Output: [[31 31 31 20] 20]
Test Case:  31 | Input/Output: [[-51 98 98 98] -51]
Test Case:  32 | Input/Output: [[17 17 29 17] 17]
Test Case:  33 | Input/Output: [[87 87 87 -70] -70]
Test Case:  34 | Input/Output: [[41 41 -74 41] -74]
Test Case:  35 | Input/Output: [[17 17 5 17] 5]
Test Case:  36 | Input/Output: [[-80 -51 -51 -51] -80]
Test Case:  37 | Input/Output: [[83 83 88 83] 83]
Test Case:  38 | Input/Output: [[-57 -57 -57 56] -57]
Test Case:  39 | Input/Output: [[-34 -34 -34 25] -34]
Test Case:  40 | Input/Output: [[21 -82 21 21] -82]
Test Case:  41 | Input/Output: [[-9 -9 89 -9] -9]
Test Case:  42 | Input/Output: [[68 34 68 68] 34]
Test Case:  43 | Input/Output: [[68 68 -5 68] -5]
Test Case:  44 | Input/Output: [[-45 -45 -45 39] -45]
Test Case:  45 | Input/Output: [[-91 -82 -91 -91] -91]
Test Case:  46 | Input/Output: [[82 -89 -89 -89] -89]
Test Case:  47 | Input/Output: [[22 -57 22 22] -57]
Test Case:  48 | Input/Output: [[-56 50 50 50] -56]
Test Case:  49 | Input/Output: [[-86 -86 -86 -63] -86]
Test Case:  50 | Input/Output: [[-48 -48 59 -48] -48]
Test Case:  51 | Input/Output: [[2 2 2 -59] -59]
Test Case:  52 | Input/Output: [[64 64 64 -9] -9]
Test Case:  53 | Input/Output: [[-21 60 60 60] -21]
Test Case:  54 | Input/Output: [[0 0 0 -47] -47]
Test Case:  55 | Input/Output: [[85 85 13 85] 13]
Test Case:  56 | Input/Output: [[36 2 36 36] 2]
Test Case:  57 | Input/Output: [[0 0 0 64] 0]
Test Case:  58 | Input/Output: [[-70 -70 -70 60] -70]
Test Case:  59 | Input/Output: [[-9 17 17 17] -9]
Test Case:  60 | Input/Output: [[75 100 100 100] 75]
Test Case:  61 | Input/Output: [[-55 -55 -55 37] -55]
Test Case:  62 | Input/Output: [[99 -48 99 99] -48]
Test Case:  63 | Input/Output: [[-49 -49 81 -49] -49]
Test Case:  64 | Input/Output: [[13 69 13 13] 13]
Test Case:  65 | Input/Output: [[-35 -47 -47 -47] -47]
Test Case:  66 | Input/Output: [[-86 -86 -34 -86] -86]
Test Case:  67 | Input/Output: [[57 57 57 -44] -44]
Test Case:  68 | Input/Output: [[78 -72 -72 -72] -72]
Test Case:  69 | Input/Output: [[18 18 -44 18] -44]
Test Case:  70 | Input/Output: [[24 71 24 24] 24]
Test Case:  71 | Input/Output: [[29 29 29 25] 25]
Test Case:  72 | Input/Output: [[33 33 61 33] 33]
Test Case:  73 | Input/Output: [[70 -56 70 70] -56]
Test Case:  74 | Input/Output: [[-54 -54 -25 -54] -54]
Test Case:  75 | Input/Output: [[54 54 27 54] 27]
Test Case:  76 | Input/Output: [[-35 -37 -37 -37] -37]
Test Case:  77 | Input/Output: [[-23 -23 44 -23] -23]
Test Case:  78 | Input/Output: [[81 59 81 81] 59]
Test Case:  79 | Input/Output: [[-12 -12 20 -12] -12]
Test Case:  80 | Input/Output: [[38 75 75 75] 38]
Test Case:  81 | Input/Output: [[-50 -78 -50 -50] -78]
Test Case:  82 | Input/Output: [[36 42 42 42] 36]
Test Case:  83 | Input/Output: [[-80 -80 -82 -80] -82]
Test Case:  84 | Input/Output: [[51 -73 -73 -73] -73]
Test Case:  85 | Input/Output: [[50 41 41 41] 41]
Test Case:  86 | Input/Output: [[-14 -14 79 -14] -14]
Test Case:  87 | Input/Output: [[-48 -48 -48 -48] -48]
Test Case:  88 | Input/Output: [[81 81 -5 81] -5]
Test Case:  89 | Input/Output: [[-36 11 -36 -36] -36]
Test Case:  90 | Input/Output: [[-25 -25 -25 -19] -25]
Test Case:  91 | Input/Output: [[99 47 99 99] 47]
Test Case:  92 | Input/Output: [[96 75 96 96] 75]
Test Case:  93 | Input/Output: [[57 57 -24 57] -24]
Test Case:  94 | Input/Output: [[14 40 14 14] 14]
Test Case:  95 | Input/Output: [[-86 -86 -86 3] -86]
Test Case:  96 | Input/Output: [[-78 66 -78 -78] -78]
Test Case:  97 | Input/Output: [[19 46 46 46] 19]
Test Case:  98 | Input/Output: [[-47 -47 -47 -2] -47]
Test Case:  99 | Input/Output: [[-72 -81 -81 -81] -81]
Test Case: 100 | Input/Output: [(53 53 53 53) 53]
Test Case: 101 | Input/Output: [(30 30 30 30) 30]
Test Case: 102 | Input/Output: [(25 25 25 25) 25]
Test Case: 103 | Input/Output: [(95 95 95 95) 95]
Test Case: 104 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 105 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 106 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 107 | Input/Output: [(90 90 90 90) 90]
Test Case: 108 | Input/Output: [(13 13 13 13) 13]
Test Case: 109 | Input/Output: [(77 77 77 77) 77]
Test Case: 110 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 111 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 112 | Input/Output: [(71 71 71 71) 71]
Test Case: 113 | Input/Output: [(90 90 90 90) 90]
Test Case: 114 | Input/Output: [(73 73 73 73) 73]
Test Case: 115 | Input/Output: [(90 90 90 90) 90]
Test Case: 116 | Input/Output: [(-32 -32 -32 -32) -32]
Test Case: 117 | Input/Output: [(5 5 5 5) 5]
Test Case: 118 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 119 | Input/Output: [(69 69 69 69) 69]
Test Case: 120 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 121 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 122 | Input/Output: [(41 41 41 41) 41]
Test Case: 123 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 124 | Input/Output: [(86 86 86 86) 86]
Test Case: 125 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 126 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 127 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 128 | Input/Output: [(90 90 90 90) 90]
Test Case: 129 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 130 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 131 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 132 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 133 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 134 | Input/Output: [(13 13 13 13) 13]
Test Case: 135 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 136 | Input/Output: [(19 19 19 19) 19]
Test Case: 137 | Input/Output: [(-4 -4 -4 -4) -4]
Test Case: 138 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 139 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 140 | Input/Output: [(88 88 88 88) 88]
Test Case: 141 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 142 | Input/Output: [(72 72 72 72) 72]
Test Case: 143 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 144 | Input/Output: [(90 90 90 90) 90]
Test Case: 145 | Input/Output: [(73 73 73 73) 73]
Test Case: 146 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 147 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 148 | Input/Output: [(16 16 16 16) 16]
Test Case: 149 | Input/Output: [(40 40 40 40) 40]
Test Case: 150 | Input/Output: [(20 20 20 20) 20]
Test Case: 151 | Input/Output: [(23 23 23 23) 23]
Test Case: 152 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 153 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 154 | Input/Output: [(60 60 60 60) 60]
Test Case: 155 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 156 | Input/Output: [(-6 -6 -6 -6) -6]
Test Case: 157 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 158 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 159 | Input/Output: [(54 54 54 54) 54]
Test Case: 160 | Input/Output: [(80 80 80 80) 80]
Test Case: 161 | Input/Output: [(52 52 52 52) 52]
Test Case: 162 | Input/Output: [(69 69 69 69) 69]
Test Case: 163 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 164 | Input/Output: [(48 48 48 48) 48]
Test Case: 165 | Input/Output: [(3 3 3 3) 3]
Test Case: 166 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 167 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 168 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 169 | Input/Output: [(24 24 24 24) 24]
Test Case: 170 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 171 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 172 | Input/Output: [(-30 -30 -30 -30) -30]
Test Case: 173 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 174 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 175 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 176 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 177 | Input/Output: [(48 48 48 48) 48]
Test Case: 178 | Input/Output: [(3 3 3 3) 3]
Test Case: 179 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 180 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 181 | Input/Output: [(8 8 8 8) 8]
Test Case: 182 | Input/Output: [(93 93 93 93) 93]
Test Case: 183 | Input/Output: [(67 67 67 67) 67]
Test Case: 184 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 185 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 186 | Input/Output: [(48 48 48 48) 48]
Test Case: 187 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 188 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 189 | Input/Output: [(56 56 56 56) 56]
Test Case: 190 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 191 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 192 | Input/Output: [(-54 -54 -54 -54) -54]
Test Case: 193 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 194 | Input/Output: [(39 39 39 39) 39]
Test Case: 195 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 196 | Input/Output: [(13 13 13 13) 13]
Test Case: 197 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 198 | Input/Output: [(44 44 44 44) 44]
Test Case: 199 | Input/Output: [(65 65 65 65) 65]
Test Case: 200 | Input/Output: [(41 63 72 23) 23]
Test Case: 201 | Input/Output: [(25 28 77 67) 25]
Test Case: 202 | Input/Output: [(9 84 13 15) 9]
Test Case: 203 | Input/Output: [(66 39 7 42) 7]
Test Case: 204 | Input/Output: [(88 7 98 21) 7]
Test Case: 205 | Input/Output: [(48 90 71 90) 48]
Test Case: 206 | Input/Output: [(82 37 95 20) 20]
Test Case: 207 | Input/Output: [(90 66 76 21) 21]
Test Case: 208 | Input/Output: [(50 67 38 87) 38]
Test Case: 209 | Input/Output: [(96 26 67 35) 26]
Test Case: 210 | Input/Output: [(63 23 49 16) 16]
Test Case: 211 | Input/Output: [(79 7 97 51) 7]
Test Case: 212 | Input/Output: [(27 29 21 26) 21]
Test Case: 213 | Input/Output: [(31 14 67 48) 14]
Test Case: 214 | Input/Output: [(70 80 75 33) 33]
Test Case: 215 | Input/Output: [(90 44 72 72) 44]
Test Case: 216 | Input/Output: [(61 32 6 21) 6]
Test Case: 217 | Input/Output: [(93 77 58 39) 39]
Test Case: 218 | Input/Output: [(41 36 31 10) 10]
Test Case: 219 | Input/Output: [(65 77 48 93) 48]
Test Case: 220 | Input/Output: [(1 15 28 17) 1]
Test Case: 221 | Input/Output: [(37 58 38 9) 9]
Test Case: 222 | Input/Output: [(55 1 31 23) 1]
Test Case: 223 | Input/Output: [(70 24 36 30) 24]
Test Case: 224 | Input/Output: [(36 48 60 24) 24]
Test Case: 225 | Input/Output: [(75 28 20 35) 20]
Test Case: 226 | Input/Output: [(20 83 85 83) 20]
Test Case: 227 | Input/Output: [(34 88 90 57) 34]
Test Case: 228 | Input/Output: [(5 34 55 11) 5]
Test Case: 229 | Input/Output: [(57 28 91 33) 28]
Test Case: 230 | Input/Output: [(87 88 27 8) 8]
Test Case: 231 | Input/Output: [(5 59 22 92) 5]
Test Case: 232 | Input/Output: [(73 37 35 43) 35]
Test Case: 233 | Input/Output: [(6 43 53 53) 6]
Test Case: 234 | Input/Output: [(97 5 36 3) 3]
Test Case: 235 | Input/Output: [(37 49 59 92) 37]
Test Case: 236 | Input/Output: [(32 44 93 75) 32]
Test Case: 237 | Input/Output: [(7 13 9 62) 7]
Test Case: 238 | Input/Output: [(58 97 98 62) 58]
Test Case: 239 | Input/Output: [(18 46 79 31) 18]
Test Case: 240 | Input/Output: [(13 81 19 64) 13]
Test Case: 241 | Input/Output: [(77 75 75 16) 16]
Test Case: 242 | Input/Output: [(25 71 82 56) 25]
Test Case: 243 | Input/Output: [(34 43 66 27) 27]
Test Case: 244 | Input/Output: [(41 82 25 23) 23]
Test Case: 245 | Input/Output: [(54 36 42 74) 36]
Test Case: 246 | Input/Output: [(100 77 88 81) 77]
Test Case: 247 | Input/Output: [(70 48 61 14) 14]
Test Case: 248 | Input/Output: [(82 0 86 14) 0]
Test Case: 249 | Input/Output: [(82 72 52 87) 52]
Test Case: 250 | Input/Output: [(84 61 58 30) 30]
Test Case: 251 | Input/Output: [(66 88 48 42) 42]
Test Case: 252 | Input/Output: [(19 37 21 0) 0]
Test Case: 253 | Input/Output: [(3 14 32 96) 3]
Test Case: 254 | Input/Output: [(31 79 90 100) 31]
Test Case: 255 | Input/Output: [(69 40 74 72) 40]
Test Case: 256 | Input/Output: [(50 8 98 42) 8]
Test Case: 257 | Input/Output: [(42 55 25 98) 25]
Test Case: 258 | Input/Output: [(72 71 75 15) 15]
Test Case: 259 | Input/Output: [(70 66 30 16) 16]
Test Case: 260 | Input/Output: [(23 58 74 90) 23]
Test Case: 261 | Input/Output: [(38 15 40 37) 15]
Test Case: 262 | Input/Output: [(37 9 6 90) 6]
Test Case: 263 | Input/Output: [(46 44 29 47) 29]
Test Case: 264 | Input/Output: [(29 89 88 52) 29]
Test Case: 265 | Input/Output: [(70 18 81 91) 18]
Test Case: 266 | Input/Output: [(46 27 55 9) 9]
Test Case: 267 | Input/Output: [(14 44 41 46) 14]
Test Case: 268 | Input/Output: [(11 50 12 62) 11]
Test Case: 269 | Input/Output: [(100 41 0 37) 0]
Test Case: 270 | Input/Output: [(15 38 69 99) 15]
Test Case: 271 | Input/Output: [(90 89 78 23) 23]
Test Case: 272 | Input/Output: [(47 61 1 60) 1]
Test Case: 273 | Input/Output: [(93 100 22 11) 11]
Test Case: 274 | Input/Output: [(16 90 72 27) 16]
Test Case: 275 | Input/Output: [(8 5 28 30) 5]
Test Case: 276 | Input/Output: [(15 18 45 3) 3]
Test Case: 277 | Input/Output: [(71 40 38 90) 38]
Test Case: 278 | Input/Output: [(11 42 100 24) 11]
Test Case: 279 | Input/Output: [(93 26 61 57) 26]
Test Case: 280 | Input/Output: [(62 43 56 31) 31]
Test Case: 281 | Input/Output: [(15 25 21 85) 15]
Test Case: 282 | Input/Output: [(44 24 93 51) 24]
Test Case: 283 | Input/Output: [(21 16 65 53) 16]
Test Case: 284 | Input/Output: [(38 37 78 12) 12]
Test Case: 285 | Input/Output: [(71 36 90 74) 36]
Test Case: 286 | Input/Output: [(39 47 2 5) 2]
Test Case: 287 | Input/Output: [(30 29 28 28) 28]
Test Case: 288 | Input/Output: [(51 22 52 80) 22]
Test Case: 289 | Input/Output: [(24 69 98 83) 24]
Test Case: 290 | Input/Output: [(53 46 95 4) 4]
Test Case: 291 | Input/Output: [(69 65 10 1) 1]
Test Case: 292 | Input/Output: [(61 3 24 60) 3]
Test Case: 293 | Input/Output: [(58 31 36 4) 4]
Test Case: 294 | Input/Output: [(25 77 12 15) 12]
Test Case: 295 | Input/Output: [(6 99 62 48) 6]
Test Case: 296 | Input/Output: [(64 35 51 60) 35]
Test Case: 297 | Input/Output: [(94 61 68 84) 61]
Test Case: 298 | Input/Output: [(45 62 34 2) 2]
Test Case: 299 | Input/Output: [(26 33 100 7) 7]
Test Case: 300 | Input/Output: [(16 51 47 32) 16]
Test Case: 301 | Input/Output: [(90 15 44 24) 15]
Test Case: 302 | Input/Output: [(18 57 59 81) 18]
Test Case: 303 | Input/Output: [(55 62 9 38) 9]
Test Case: 304 | Input/Output: [(8 81 54 43) 8]
Test Case: 305 | Input/Output: [(40 13 71 86) 13]
Test Case: 306 | Input/Output: [(48 92 26 56) 26]
Test Case: 307 | Input/Output: [(15 65 23 78) 15]
Test Case: 308 | Input/Output: [(43 94 9 12) 9]
Test Case: 309 | Input/Output: [(69 59 64 79) 59]
Test Case: 310 | Input/Output: [(76 90 19 18) 18]
Test Case: 311 | Input/Output: [(7 86 87 24) 7]
Test Case: 312 | Input/Output: [(75 81 17 43) 17]
Test Case: 313 | Input/Output: [(92 77 29 64) 29]
Test Case: 314 | Input/Output: [(88 48 86 54) 48]
Test Case: 315 | Input/Output: [(21 2 86 20) 2]
Test Case: 316 | Input/Output: [(82 16 88 91) 16]
Test Case: 317 | Input/Output: [(28 25 34 9) 9]
Test Case: 318 | Input/Output: [(64 83 97 91) 64]
Test Case: 319 | Input/Output: [(33 4 75 61) 4]
Test Case: 320 | Input/Output: [(63 27 52 47) 27]
Test Case: 321 | Input/Output: [(14 24 25 12) 12]
Test Case: 322 | Input/Output: [(87 43 5 95) 5]
Test Case: 323 | Input/Output: [(47 25 47 84) 25]
Test Case: 324 | Input/Output: [(35 9 58 2) 2]
Test Case: 325 | Input/Output: [(49 90 37 27) 27]
Test Case: 326 | Input/Output: [(58 93 85 88) 58]
Test Case: 327 | Input/Output: [(55 72 25 82) 25]
Test Case: 328 | Input/Output: [(31 94 52 38) 31]
Test Case: 329 | Input/Output: [(91 91 9 86) 9]
Test Case: 330 | Input/Output: [(37 18 32 85) 18]
Test Case: 331 | Input/Output: [(79 31 23 70) 23]
Test Case: 332 | Input/Output: [(24 68 26 9) 9]
Test Case: 333 | Input/Output: [(38 58 38 16) 16]
Test Case: 334 | Input/Output: [(50 40 18 63) 18]
Test Case: 335 | Input/Output: [(77 24 54 13) 13]
Test Case: 336 | Input/Output: [(47 74 21 35) 21]
Test Case: 337 | Input/Output: [(87 95 7 5) 5]
Test Case: 338 | Input/Output: [(42 51 92 42) 42]
Test Case: 339 | Input/Output: [(60 39 77 25) 25]
Test Case: 340 | Input/Output: [(32 11 61 7) 7]
Test Case: 341 | Input/Output: [(78 89 91 96) 78]
Test Case: 342 | Input/Output: [(67 75 15 10) 10]
Test Case: 343 | Input/Output: [(8 86 31 59) 8]
Test Case: 344 | Input/Output: [(47 58 64 55) 47]
Test Case: 345 | Input/Output: [(36 28 64 38) 28]
Test Case: 346 | Input/Output: [(27 85 81 46) 27]
Test Case: 347 | Input/Output: [(18 34 29 62) 18]
Test Case: 348 | Input/Output: [(91 35 13 44) 13]
Test Case: 349 | Input/Output: [(100 66 90 49) 49]
Test Case: 350 | Input/Output: [(46 20 19 45) 19]
Test Case: 351 | Input/Output: [(43 34 17 68) 17]
Test Case: 352 | Input/Output: [(61 32 50 26) 26]
Test Case: 353 | Input/Output: [(55 42 77 18) 18]
Test Case: 354 | Input/Output: [(19 28 60 56) 19]
Test Case: 355 | Input/Output: [(13 34 17 19) 13]
Test Case: 356 | Input/Output: [(56 55 7 78) 7]
Test Case: 357 | Input/Output: [(86 96 73 32) 32]
Test Case: 358 | Input/Output: [(31 68 30 52) 30]
Test Case: 359 | Input/Output: [(96 2 93 71) 2]
Test Case: 360 | Input/Output: [(70 26 15 5) 5]
Test Case: 361 | Input/Output: [(50 81 26 81) 26]
Test Case: 362 | Input/Output: [(50 43 18 63) 18]
Test Case: 363 | Input/Output: [(39 25 48 99) 25]
Test Case: 364 | Input/Output: [(74 30 12 78) 12]
Test Case: 365 | Input/Output: [(64 21 0 74) 0]
Test Case: 366 | Input/Output: [(10 23 66 96) 10]
Test Case: 367 | Input/Output: [(14 14 63 58) 14]
Test Case: 368 | Input/Output: [(4 69 55 74) 4]
Test Case: 369 | Input/Output: [(56 15 27 50) 15]
Test Case: 370 | Input/Output: [(99 90 95 19) 19]
Test Case: 371 | Input/Output: [(65 85 50 58) 50]
Test Case: 372 | Input/Output: [(30 32 83 31) 30]
Test Case: 373 | Input/Output: [(34 66 0 22) 0]
Test Case: 374 | Input/Output: [(32 24 64 29) 24]
Test Case: 375 | Input/Output: [(13 48 72 42) 13]
Test Case: 376 | Input/Output: [(57 89 49 79) 49]
Test Case: 377 | Input/Output: [(36 9 91 99) 9]
Test Case: 378 | Input/Output: [(37 29 78 55) 29]
Test Case: 379 | Input/Output: [(28 70 6 59) 6]
Test Case: 380 | Input/Output: [(35 9 94 51) 9]
Test Case: 381 | Input/Output: [(67 9 81 67) 9]
Test Case: 382 | Input/Output: [(53 30 21 69) 21]
Test Case: 383 | Input/Output: [(81 91 30 97) 30]
Test Case: 384 | Input/Output: [(29 3 5 45) 3]
Test Case: 385 | Input/Output: [(32 38 51 73) 32]
Test Case: 386 | Input/Output: [(34 77 72 68) 34]
Test Case: 387 | Input/Output: [(62 29 37 12) 12]
Test Case: 388 | Input/Output: [(55 64 43 53) 43]
Test Case: 389 | Input/Output: [(95 57 12 28) 12]
Test Case: 390 | Input/Output: [(71 75 46 24) 24]
Test Case: 391 | Input/Output: [(23 16 22 87) 16]
Test Case: 392 | Input/Output: [(78 58 23 90) 23]
Test Case: 393 | Input/Output: [(36 44 37 19) 19]
Test Case: 394 | Input/Output: [(51 83 81 24) 24]
Test Case: 395 | Input/Output: [(51 5 57 98) 5]
Test Case: 396 | Input/Output: [(16 12 80 15) 12]
Test Case: 397 | Input/Output: [(64 39 28 87) 28]
Test Case: 398 | Input/Output: [(24 73 50 33) 24]
Test Case: 399 | Input/Output: [(39 89 43 23) 23]
Test Case: 400 | Input/Output: [(-12 -33 -2 93) -33]
Test Case: 401 | Input/Output: [(-94 4 -70 -50) -94]
Test Case: 402 | Input/Output: [(57 -33 8 -47) -47]
Test Case: 403 | Input/Output: [(-21 28 -49 95) -49]
Test Case: 404 | Input/Output: [(79 87 -77 -12) -77]
Test Case: 405 | Input/Output: [(95 -96 63 84) -96]
Test Case: 406 | Input/Output: [(61 -94 -76 18) -94]
Test Case: 407 | Input/Output: [(-26 6 11 -80) -80]
Test Case: 408 | Input/Output: [(-10 -26 -53 -41) -53]
Test Case: 409 | Input/Output: [(60 3 -30 -99) -99]
Test Case: 410 | Input/Output: [(-23 -25 -3 -84) -84]
Test Case: 411 | Input/Output: [(57 6 51 -11) -11]
Test Case: 412 | Input/Output: [(65 -38 21 -65) -65]
Test Case: 413 | Input/Output: [(12 -80 -67 85) -80]
Test Case: 414 | Input/Output: [(94 -5 -31 20) -31]
Test Case: 415 | Input/Output: [(-41 -63 -88 -26) -88]
Test Case: 416 | Input/Output: [(-73 3 -59 -54) -73]
Test Case: 417 | Input/Output: [(-3 -42 57 -51) -51]
Test Case: 418 | Input/Output: [(-63 77 63 -48) -63]
Test Case: 419 | Input/Output: [(65 61 37 -48) -48]
Test Case: 420 | Input/Output: [(-15 -76 23 -76) -76]
Test Case: 421 | Input/Output: [(44 -3 12 -10) -10]
Test Case: 422 | Input/Output: [(93 3 28 -56) -56]
Test Case: 423 | Input/Output: [(-69 82 -3 85) -69]
Test Case: 424 | Input/Output: [(-49 -48 90 -40) -49]
Test Case: 425 | Input/Output: [(14 78 18 -55) -55]
Test Case: 426 | Input/Output: [(-40 -9 82 -46) -46]
Test Case: 427 | Input/Output: [(96 76 44 -96) -96]
Test Case: 428 | Input/Output: [(22 3 -36 72) -36]
Test Case: 429 | Input/Output: [(-78 89 -92 92) -92]
Test Case: 430 | Input/Output: [(65 -48 98 33) -48]
Test Case: 431 | Input/Output: [(23 56 95 78) 23]
Test Case: 432 | Input/Output: [(-12 -13 0 -14) -14]
Test Case: 433 | Input/Output: [(-73 31 -75 69) -75]
Test Case: 434 | Input/Output: [(-58 16 94 -60) -60]
Test Case: 435 | Input/Output: [(-4 -38 61 -24) -38]
Test Case: 436 | Input/Output: [(89 28 -44 -85) -85]
Test Case: 437 | Input/Output: [(19 97 33 33) 19]
Test Case: 438 | Input/Output: [(-8 80 -12 35) -12]
Test Case: 439 | Input/Output: [(29 -12 65 77) -12]
Test Case: 440 | Input/Output: [(-84 -52 -23 -71) -84]
Test Case: 441 | Input/Output: [(-62 65 -78 -34) -78]
Test Case: 442 | Input/Output: [(100 11 -73 82) -73]
Test Case: 443 | Input/Output: [(44 15 -37 99) -37]
Test Case: 444 | Input/Output: [(-84 -27 3 39) -84]
Test Case: 445 | Input/Output: [(17 -90 40 85) -90]
Test Case: 446 | Input/Output: [(-71 -53 5 -33) -71]
Test Case: 447 | Input/Output: [(-18 -44 -57 -19) -57]
Test Case: 448 | Input/Output: [(-22 28 56 -15) -22]
Test Case: 449 | Input/Output: [(-4 32 0 57) -4]
Test Case: 450 | Input/Output: [(88 87 -57 74) -57]
Test Case: 451 | Input/Output: [(-84 85 -37 34) -84]
Test Case: 452 | Input/Output: [(81 -51 49 89) -51]
Test Case: 453 | Input/Output: [(57 -65 -9 84) -65]
Test Case: 454 | Input/Output: [(-72 -25 0 3) -72]
Test Case: 455 | Input/Output: [(100 -87 62 30) -87]
Test Case: 456 | Input/Output: [(-29 -88 37 51) -88]
Test Case: 457 | Input/Output: [(-8 -11 -33 96) -33]
Test Case: 458 | Input/Output: [(-15 -37 -45 -15) -45]
Test Case: 459 | Input/Output: [(50 -14 -69 68) -69]
Test Case: 460 | Input/Output: [(18 29 35 -17) -17]
Test Case: 461 | Input/Output: [(87 -48 -27 -77) -77]
Test Case: 462 | Input/Output: [(-36 -16 -17 -83) -83]
Test Case: 463 | Input/Output: [(-93 100 -15 51) -93]
Test Case: 464 | Input/Output: [(99 -76 84 78) -76]
Test Case: 465 | Input/Output: [(24 -17 -12 35) -17]
Test Case: 466 | Input/Output: [(-52 -3 -32 -81) -81]
Test Case: 467 | Input/Output: [(72 34 81 83) 34]
Test Case: 468 | Input/Output: [(14 42 85 72) 14]
Test Case: 469 | Input/Output: [(15 -47 -93 -84) -93]
Test Case: 470 | Input/Output: [(-35 -90 10 -30) -90]
Test Case: 471 | Input/Output: [(40 -2 31 -32) -32]
Test Case: 472 | Input/Output: [(68 -33 -60 -87) -87]
Test Case: 473 | Input/Output: [(84 -19 76 -32) -32]
Test Case: 474 | Input/Output: [(-24 -53 33 -94) -94]
Test Case: 475 | Input/Output: [(-25 -61 0 7) -61]
Test Case: 476 | Input/Output: [(-32 -27 -44 21) -44]
Test Case: 477 | Input/Output: [(-45 98 -61 70) -61]
Test Case: 478 | Input/Output: [(-98 -25 -19 24) -98]
Test Case: 479 | Input/Output: [(10 12 -72 -54) -72]
Test Case: 480 | Input/Output: [(-72 -39 21 -95) -95]
Test Case: 481 | Input/Output: [(72 -86 88 59) -86]
Test Case: 482 | Input/Output: [(-37 -40 91 -10) -40]
Test Case: 483 | Input/Output: [(-41 62 37 -18) -41]
Test Case: 484 | Input/Output: [(-60 -36 -39 62) -60]
Test Case: 485 | Input/Output: [(-36 6 12 -78) -78]
Test Case: 486 | Input/Output: [(-100 7 95 -17) -100]
Test Case: 487 | Input/Output: [(-30 -14 -48 63) -48]
Test Case: 488 | Input/Output: [(49 32 -29 40) -29]
Test Case: 489 | Input/Output: [(-71 -72 11 67) -72]
Test Case: 490 | Input/Output: [(75 84 -34 -50) -50]
Test Case: 491 | Input/Output: [(-87 -85 -56 57) -87]
Test Case: 492 | Input/Output: [(-84 20 -23 -97) -97]
Test Case: 493 | Input/Output: [(7 -59 -6 -94) -94]
Test Case: 494 | Input/Output: [(55 24 39 42) 24]
Test Case: 495 | Input/Output: [(74 -47 -40 -99) -99]
Test Case: 496 | Input/Output: [(-15 76 -21 1) -21]
Test Case: 497 | Input/Output: [(45 -14 -93 69) -93]
Test Case: 498 | Input/Output: [(-86 -98 72 9) -98]
Test Case: 499 | Input/Output: [(-48 64 93 15) -48]
Test Case: 500 | Input/Output: [(59 64 23 -83) -83]
Test Case: 501 | Input/Output: [(-61 61 -92 -90) -92]
Test Case: 502 | Input/Output: [(81 -23 37 -76) -76]
Test Case: 503 | Input/Output: [(20 24 -97 -32) -97]
Test Case: 504 | Input/Output: [(97 92 52 95) 52]
Test Case: 505 | Input/Output: [(16 23 -24 77) -24]
Test Case: 506 | Input/Output: [(-7 10 -29 -65) -65]
Test Case: 507 | Input/Output: [(31 -65 -42 -36) -65]
Test Case: 508 | Input/Output: [(-33 -100 85 -86) -100]
Test Case: 509 | Input/Output: [(9 -4 -69 -65) -69]
Test Case: 510 | Input/Output: [(76 -10 20 -39) -39]
Test Case: 511 | Input/Output: [(4 21 -30 -57) -57]
Test Case: 512 | Input/Output: [(-14 -44 -78 -23) -78]
Test Case: 513 | Input/Output: [(-40 -18 98 61) -40]
Test Case: 514 | Input/Output: [(-54 39 -69 -48) -69]
Test Case: 515 | Input/Output: [(76 81 64 -80) -80]
Test Case: 516 | Input/Output: [(53 97 16 -6) -6]
Test Case: 517 | Input/Output: [(-100 20 -13 -60) -100]
Test Case: 518 | Input/Output: [(82 69 -22 -9) -22]
Test Case: 519 | Input/Output: [(-44 11 89 -33) -44]
Test Case: 520 | Input/Output: [(-44 -37 41 -44) -44]
Test Case: 521 | Input/Output: [(53 3 -98 21) -98]
Test Case: 522 | Input/Output: [(59 90 65 46) 46]
Test Case: 523 | Input/Output: [(51 30 75 -48) -48]
Test Case: 524 | Input/Output: [(27 -96 -72 -82) -96]
Test Case: 525 | Input/Output: [(-59 25 36 56) -59]
Test Case: 526 | Input/Output: [(34 -11 -82 -7) -82]
Test Case: 527 | Input/Output: [(78 -63 38 33) -63]
Test Case: 528 | Input/Output: [(-54 80 95 51) -54]
Test Case: 529 | Input/Output: [(-92 9 100 -13) -92]
Test Case: 530 | Input/Output: [(-68 69 49 95) -68]
Test Case: 531 | Input/Output: [(-68 -83 -74 54) -83]
Test Case: 532 | Input/Output: [(65 -65 -73 67) -73]
Test Case: 533 | Input/Output: [(-89 -26 -82 87) -89]
Test Case: 534 | Input/Output: [(-98 94 83 -37) -98]
Test Case: 535 | Input/Output: [(23 -18 73 -45) -45]
Test Case: 536 | Input/Output: [(88 -9 -54 -95) -95]
Test Case: 537 | Input/Output: [(-26 30 96 -61) -61]
Test Case: 538 | Input/Output: [(71 51 -23 16) -23]
Test Case: 539 | Input/Output: [(18 -6 100 -100) -100]
Test Case: 540 | Input/Output: [(-33 13 3 38) -33]
Test Case: 541 | Input/Output: [(91 80 -97 -51) -97]
Test Case: 542 | Input/Output: [(26 -97 100 9) -97]
Test Case: 543 | Input/Output: [(74 21 60 -11) -11]
Test Case: 544 | Input/Output: [(4 -6 84 22) -6]
Test Case: 545 | Input/Output: [(-45 -44 -17 -57) -57]
Test Case: 546 | Input/Output: [(-89 -41 60 44) -89]
Test Case: 547 | Input/Output: [(-47 -85 -39 7) -85]
Test Case: 548 | Input/Output: [(70 -83 -66 52) -83]
Test Case: 549 | Input/Output: [(66 95 23 88) 23]
Test Case: 550 | Input/Output: [(-82 -25 -1 81) -82]
Test Case: 551 | Input/Output: [(-10 -1 -22 -9) -22]
Test Case: 552 | Input/Output: [(-17 -72 -92 -12) -92]
Test Case: 553 | Input/Output: [(-20 44 44 31) -20]
Test Case: 554 | Input/Output: [(-68 67 -65 73) -68]
Test Case: 555 | Input/Output: [(2 -73 48 -95) -95]
Test Case: 556 | Input/Output: [(-11 68 57 79) -11]
Test Case: 557 | Input/Output: [(-90 82 -61 96) -90]
Test Case: 558 | Input/Output: [(73 -100 -97 72) -100]
Test Case: 559 | Input/Output: [(14 18 88 -11) -11]
Test Case: 560 | Input/Output: [(70 59 23 -12) -12]
Test Case: 561 | Input/Output: [(69 -73 -27 -15) -73]
Test Case: 562 | Input/Output: [(-59 76 -66 56) -66]
Test Case: 563 | Input/Output: [(66 14 -94 -30) -94]
Test Case: 564 | Input/Output: [(-90 46 85 -63) -90]
Test Case: 565 | Input/Output: [(-11 -68 -71 75) -71]
Test Case: 566 | Input/Output: [(79 34 59 16) 16]
Test Case: 567 | Input/Output: [(47 78 42 4) 4]
Test Case: 568 | Input/Output: [(-54 70 -95 -57) -95]
Test Case: 569 | Input/Output: [(88 -89 -5 -61) -89]
Test Case: 570 | Input/Output: [(85 31 98 -13) -13]
Test Case: 571 | Input/Output: [(-7 44 -92 -10) -92]
Test Case: 572 | Input/Output: [(14 58 -10 -51) -51]
Test Case: 573 | Input/Output: [(2 30 65 -9) -9]
Test Case: 574 | Input/Output: [(-78 64 13 -59) -78]
Test Case: 575 | Input/Output: [(-85 20 62 41) -85]
Test Case: 576 | Input/Output: [(-97 82 66 -61) -97]
Test Case: 577 | Input/Output: [(-93 -97 -78 -38) -97]
Test Case: 578 | Input/Output: [(44 -94 80 -68) -94]
Test Case: 579 | Input/Output: [(-98 46 76 32) -98]
Test Case: 580 | Input/Output: [(63 -27 -82 81) -82]
Test Case: 581 | Input/Output: [(54 81 -76 40) -76]
Test Case: 582 | Input/Output: [(83 -18 72 48) -18]
Test Case: 583 | Input/Output: [(16 59 17 32) 16]
Test Case: 584 | Input/Output: [(35 -25 -58 5) -58]
Test Case: 585 | Input/Output: [(14 44 70 -5) -5]
Test Case: 586 | Input/Output: [(-69 -29 -18 0) -69]
Test Case: 587 | Input/Output: [(-30 -29 26 -74) -74]
Test Case: 588 | Input/Output: [(99 23 -28 37) -28]
Test Case: 589 | Input/Output: [(24 12 -64 -67) -67]
Test Case: 590 | Input/Output: [(-94 85 76 69) -94]
Test Case: 591 | Input/Output: [(11 -18 77 -9) -18]
Test Case: 592 | Input/Output: [(73 65 -10 81) -10]
Test Case: 593 | Input/Output: [(-24 -40 91 -11) -40]
Test Case: 594 | Input/Output: [(4 -21 -28 -59) -59]
Test Case: 595 | Input/Output: [(-12 -81 2 -92) -92]
Test Case: 596 | Input/Output: [(22 58 -55 -31) -55]
Test Case: 597 | Input/Output: [(51 94 39 55) 39]
Test Case: 598 | Input/Output: [(74 -93 -6 1) -93]
Test Case: 599 | Input/Output: [(21 -92 -60 65) -92]
Test Case: 600 | Input/Output: [(-41 -22 -48 14) -48]
Test Case: 601 | Input/Output: [(46 -71 -49 3) -71]
Test Case: 602 | Input/Output: [(-74 -2 -4 32) -74]
Test Case: 603 | Input/Output: [(-56 31 -69 85) -69]
Test Case: 604 | Input/Output: [(-58 34 -59 -15) -59]
Test Case: 605 | Input/Output: [(98 96 -9 -59) -59]
Test Case: 606 | Input/Output: [(62 -17 -15 -21) -21]
Test Case: 607 | Input/Output: [(-100 98 -22 19) -100]
Test Case: 608 | Input/Output: [(1 0 -65 94) -65]
Test Case: 609 | Input/Output: [(42 35 -90 23) -90]
Test Case: 610 | Input/Output: [(69 -74 65 -74) -74]
Test Case: 611 | Input/Output: [(49 -72 57 -37) -72]
Test Case: 612 | Input/Output: [(83 -77 -95 -17) -95]
Test Case: 613 | Input/Output: [(-27 -63 -55 -31) -63]
Test Case: 614 | Input/Output: [(82 92 -99 -19) -99]
Test Case: 615 | Input/Output: [(-29 -53 -46 -52) -53]
Test Case: 616 | Input/Output: [(-62 -86 -8 -96) -96]
Test Case: 617 | Input/Output: [(-17 -33 34 -5) -33]
Test Case: 618 | Input/Output: [(-29 -14 20 -1) -29]
Test Case: 619 | Input/Output: [(-96 -98 93 -84) -98]
Test Case: 620 | Input/Output: [(7 51 -4 59) -4]
Test Case: 621 | Input/Output: [(70 -53 100 -56) -56]
Test Case: 622 | Input/Output: [(59 -100 57 -45) -100]
Test Case: 623 | Input/Output: [(99 44 10 14) 10]
Test Case: 624 | Input/Output: [(28 93 71 58) 28]
Test Case: 625 | Input/Output: [(-91 -6 -18 -11) -91]
Test Case: 626 | Input/Output: [(81 -8 -71 -84) -84]
Test Case: 627 | Input/Output: [(-60 -96 -84 17) -96]
Test Case: 628 | Input/Output: [(91 -39 -43 25) -43]
Test Case: 629 | Input/Output: [(30 2 -62 57) -62]
Test Case: 630 | Input/Output: [(94 80 -22 -1) -22]
Test Case: 631 | Input/Output: [(64 67 25 57) 25]
Test Case: 632 | Input/Output: [(15 2 -13 34) -13]
Test Case: 633 | Input/Output: [(19 89 -3 43) -3]
Test Case: 634 | Input/Output: [(52 -98 -20 15) -98]
Test Case: 635 | Input/Output: [(-42 56 -100 -26) -100]
Test Case: 636 | Input/Output: [(81 -75 72 93) -75]
Test Case: 637 | Input/Output: [(-51 -26 -51 81) -51]
Test Case: 638 | Input/Output: [(91 5 63 -26) -26]
Test Case: 639 | Input/Output: [(-50 -40 -11 -24) -50]
Test Case: 640 | Input/Output: [(-34 87 -61 -72) -72]
Test Case: 641 | Input/Output: [(92 41 -88 83) -88]
Test Case: 642 | Input/Output: [(26 46 69 -13) -13]
Test Case: 643 | Input/Output: [(-13 -40 59 58) -40]
Test Case: 644 | Input/Output: [(-54 -38 98 -48) -54]
Test Case: 645 | Input/Output: [(9 -64 -81 -81) -81]
Test Case: 646 | Input/Output: [(55 -67 -83 -96) -96]
Test Case: 647 | Input/Output: [(-19 20 -40 4) -40]
Test Case: 648 | Input/Output: [(-17 -57 -68 56) -68]
Test Case: 649 | Input/Output: [(1 -44 -97 -66) -97]
Test Case: 650 | Input/Output: [(30 27 52 8) 8]
Test Case: 651 | Input/Output: [(-41 38 -36 98) -41]
Test Case: 652 | Input/Output: [(-61 64 -81 35) -81]
Test Case: 653 | Input/Output: [(16 45 -53 62) -53]
Test Case: 654 | Input/Output: [(32 -35 -84 -19) -84]
Test Case: 655 | Input/Output: [(68 -55 -6 30) -55]
Test Case: 656 | Input/Output: [(16 -64 -36 7) -64]
Test Case: 657 | Input/Output: [(97 15 -47 95) -47]
Test Case: 658 | Input/Output: [(13 86 -5 15) -5]
Test Case: 659 | Input/Output: [(72 64 99 -75) -75]
Test Case: 660 | Input/Output: [(88 86 -31 -79) -79]
Test Case: 661 | Input/Output: [(-53 86 86 -86) -86]
Test Case: 662 | Input/Output: [(94 17 -14 20) -14]
Test Case: 663 | Input/Output: [(72 -16 39 -23) -23]
Test Case: 664 | Input/Output: [(96 -54 -67 -69) -69]
Test Case: 665 | Input/Output: [(17 48 -7 74) -7]
Test Case: 666 | Input/Output: [(61 -67 72 73) -67]
Test Case: 667 | Input/Output: [(-63 26 100 -32) -63]
Test Case: 668 | Input/Output: [(-25 -60 -12 41) -60]
Test Case: 669 | Input/Output: [(62 70 -98 -74) -98]
Test Case: 670 | Input/Output: [(-69 -33 -83 -27) -83]
Test Case: 671 | Input/Output: [(20 73 -31 84) -31]
Test Case: 672 | Input/Output: [(69 -52 -18 94) -52]
Test Case: 673 | Input/Output: [(51 -99 88 45) -99]
Test Case: 674 | Input/Output: [(95 -34 -71 -54) -71]
Test Case: 675 | Input/Output: [(50 -80 -78 -88) -88]
Test Case: 676 | Input/Output: [(-62 -87 -36 -19) -87]
Test Case: 677 | Input/Output: [(46 -12 -52 -15) -52]
Test Case: 678 | Input/Output: [(34 -33 34 19) -33]
Test Case: 679 | Input/Output: [(21 -90 34 56) -90]
Test Case: 680 | Input/Output: [(82 -17 42 77) -17]
Test Case: 681 | Input/Output: [(0 -51 -6 -22) -51]
Test Case: 682 | Input/Output: [(59 18 99 50) 18]
Test Case: 683 | Input/Output: [(28 93 -11 -36) -36]
Test Case: 684 | Input/Output: [(-63 60 78 -11) -63]
Test Case: 685 | Input/Output: [(92 -93 85 68) -93]
Test Case: 686 | Input/Output: [(-61 -100 -30 -7) -100]
Test Case: 687 | Input/Output: [(-28 10 -91 0) -91]
Test Case: 688 | Input/Output: [(-51 78 11 -58) -58]
Test Case: 689 | Input/Output: [(-4 88 -47 69) -47]
Test Case: 690 | Input/Output: [(77 3 71 2) 2]
Test Case: 691 | Input/Output: [(74 -78 -42 66) -78]
Test Case: 692 | Input/Output: [(93 20 -17 -29) -29]
Test Case: 693 | Input/Output: [(-17 76 72 -77) -77]
Test Case: 694 | Input/Output: [(-33 -17 -81 69) -81]
Test Case: 695 | Input/Output: [(56 -19 -38 39) -38]
Test Case: 696 | Input/Output: [(-18 91 92 -10) -18]
Test Case: 697 | Input/Output: [(-67 -89 -5 -90) -90]
Test Case: 698 | Input/Output: [(-36 18 12 88) -36]
Test Case: 699 | Input/Output: [(11 11 -59 -73) -73]
Test Case: 700 | Input/Output: [(91 7 -49 -16) -49]
Test Case: 701 | Input/Output: [(82 12 -1 7) -1]
Test Case: 702 | Input/Output: [(-35 77 94 -23) -35]
Test Case: 703 | Input/Output: [(-10 94 7 -62) -62]
Test Case: 704 | Input/Output: [(-100 -51 76 92) -100]
Test Case: 705 | Input/Output: [(17 19 0 53) 0]
Test Case: 706 | Input/Output: [(-2 73 -77 -25) -77]
Test Case: 707 | Input/Output: [(-9 -95 6 -16) -95]
Test Case: 708 | Input/Output: [(-18 -82 -83 -59) -83]
Test Case: 709 | Input/Output: [(90 -52 24 -53) -53]
Test Case: 710 | Input/Output: [(-17 -78 11 -66) -78]
Test Case: 711 | Input/Output: [(-14 75 25 -4) -14]
Test Case: 712 | Input/Output: [(95 40 -43 -26) -43]
Test Case: 713 | Input/Output: [(93 -54 -3 -13) -54]
Test Case: 714 | Input/Output: [(40 -1 3 -79) -79]
Test Case: 715 | Input/Output: [(8 -87 -88 76) -88]
Test Case: 716 | Input/Output: [(30 31 -38 94) -38]
Test Case: 717 | Input/Output: [(-24 -50 45 -39) -50]
Test Case: 718 | Input/Output: [(26 -13 -72 -97) -97]
Test Case: 719 | Input/Output: [(-39 86 15 15) -39]
Test Case: 720 | Input/Output: [(-39 -19 88 -3) -39]
Test Case: 721 | Input/Output: [(7 -51 -96 -11) -96]
Test Case: 722 | Input/Output: [(44 37 -86 -15) -86]
Test Case: 723 | Input/Output: [(-42 51 -59 54) -59]
Test Case: 724 | Input/Output: [(35 4 -82 42) -82]
Test Case: 725 | Input/Output: [(43 -69 68 -15) -69]
Test Case: 726 | Input/Output: [(-48 -4 26 -64) -64]
Test Case: 727 | Input/Output: [(97 -94 23 25) -94]
Test Case: 728 | Input/Output: [(-78 8 83 -80) -80]
Test Case: 729 | Input/Output: [(-15 -29 45 27) -29]
Test Case: 730 | Input/Output: [(-85 17 -62 45) -85]
Test Case: 731 | Input/Output: [(-91 35 51 56) -91]
Test Case: 732 | Input/Output: [(64 -98 -60 16) -98]
Test Case: 733 | Input/Output: [(58 -93 90 31) -93]
Test Case: 734 | Input/Output: [(67 -22 -38 80) -38]
Test Case: 735 | Input/Output: [(-72 34 -52 -50) -72]
Test Case: 736 | Input/Output: [(-76 -15 -88 21) -88]
Test Case: 737 | Input/Output: [(-51 -44 -42 -21) -51]
Test Case: 738 | Input/Output: [(-49 17 16 -24) -49]
Test Case: 739 | Input/Output: [(-68 -75 -24 13) -75]
Test Case: 740 | Input/Output: [(72 64 -58 -63) -63]
Test Case: 741 | Input/Output: [(-89 19 31 83) -89]
Test Case: 742 | Input/Output: [(-68 -35 52 -2) -68]
Test Case: 743 | Input/Output: [(-36 93 11 -18) -36]
Test Case: 744 | Input/Output: [(-72 27 -20 40) -72]
Test Case: 745 | Input/Output: [(38 -40 -95 88) -95]
Test Case: 746 | Input/Output: [(-16 -1 -6 -8) -16]
Test Case: 747 | Input/Output: [(87 -66 98 -93) -93]
Test Case: 748 | Input/Output: [(25 66 48 6) 6]
Test Case: 749 | Input/Output: [(44 80 46 -46) -46]
Test Case: 750 | Input/Output: [(69 -54 -29 5) -54]
Test Case: 751 | Input/Output: [(-24 72 70 36) -24]
Test Case: 752 | Input/Output: [(62 79 -25 -73) -73]
Test Case: 753 | Input/Output: [(57 76 86 75) 57]
Test Case: 754 | Input/Output: [(59 -2 93 -27) -27]
Test Case: 755 | Input/Output: [(76 -39 40 -78) -78]
Test Case: 756 | Input/Output: [(-77 10 -46 22) -77]
Test Case: 757 | Input/Output: [(-87 61 91 -35) -87]
Test Case: 758 | Input/Output: [(-73 -28 -27 -20) -73]
Test Case: 759 | Input/Output: [(-67 55 76 -34) -67]
Test Case: 760 | Input/Output: [(-65 84 -81 -98) -98]
Test Case: 761 | Input/Output: [(-24 56 4 -90) -90]
Test Case: 762 | Input/Output: [(-8 53 83 -73) -73]
Test Case: 763 | Input/Output: [(31 -97 74 42) -97]
Test Case: 764 | Input/Output: [(26 -43 75 91) -43]
Test Case: 765 | Input/Output: [(-32 -34 69 -41) -41]
Test Case: 766 | Input/Output: [(18 -13 22 51) -13]
Test Case: 767 | Input/Output: [(57 -46 8 32) -46]
Test Case: 768 | Input/Output: [(-39 72 97 42) -39]
Test Case: 769 | Input/Output: [(-97 48 40 39) -97]
Test Case: 770 | Input/Output: [(25 -67 79 15) -67]
Test Case: 771 | Input/Output: [(-1 -67 26 -30) -67]
Test Case: 772 | Input/Output: [(36 85 55 42) 36]
Test Case: 773 | Input/Output: [(-85 -62 -28 -84) -85]
Test Case: 774 | Input/Output: [(23 88 75 57) 23]
Test Case: 775 | Input/Output: [(-18 61 64 -1) -18]
Test Case: 776 | Input/Output: [(87 -17 43 54) -17]
Test Case: 777 | Input/Output: [(-39 10 -5 -90) -90]
Test Case: 778 | Input/Output: [(62 90 84 -12) -12]
Test Case: 779 | Input/Output: [(-48 58 16 62) -48]
Test Case: 780 | Input/Output: [(-76 -26 -46 12) -76]
Test Case: 781 | Input/Output: [(-87 85 -97 39) -97]
Test Case: 782 | Input/Output: [(-78 -62 -7 84) -78]
Test Case: 783 | Input/Output: [(35 42 12 43) 12]
Test Case: 784 | Input/Output: [(71 -3 -63 8) -63]
Test Case: 785 | Input/Output: [(-74 -94 -19 18) -94]
Test Case: 786 | Input/Output: [(-81 12 -9 53) -81]
Test Case: 787 | Input/Output: [(63 5 46 8) 5]
Test Case: 788 | Input/Output: [(-11 86 -32 -53) -53]
Test Case: 789 | Input/Output: [(-42 -100 89 -7) -100]
Test Case: 790 | Input/Output: [(-23 75 -25 -87) -87]
Test Case: 791 | Input/Output: [(-37 -52 -5 -47) -52]
Test Case: 792 | Input/Output: [(-65 -52 -78 -30) -78]
Test Case: 793 | Input/Output: [(82 -96 -97 -12) -97]
Test Case: 794 | Input/Output: [(40 -52 -79 59) -79]
Test Case: 795 | Input/Output: [(-66 66 76 -67) -67]
Test Case: 796 | Input/Output: [(37 1 33 5) 1]
Test Case: 797 | Input/Output: [(49 -82 75 11) -82]
Test Case: 798 | Input/Output: [(-38 70 -94 74) -94]
Test Case: 799 | Input/Output: [(82 61 17 -91) -91]
Test Case: 800 | Input/Output: [(25 -15 -56 36) -56]
Test Case: 801 | Input/Output: [(-21 85 -59 97) -59]
Test Case: 802 | Input/Output: [(6 43 92 -73) -73]
Test Case: 803 | Input/Output: [(0 74 58 22) 0]
Test Case: 804 | Input/Output: [(-31 17 87 52) -31]
Test Case: 805 | Input/Output: [(-75 -12 7 78) -75]
Test Case: 806 | Input/Output: [(22 -20 -68 -46) -68]
Test Case: 807 | Input/Output: [(-65 -37 69 -36) -65]
Test Case: 808 | Input/Output: [(20 -100 25 62) -100]
Test Case: 809 | Input/Output: [(-32 47 -10 -65) -65]
Test Case: 810 | Input/Output: [(34 -39 -21 44) -39]
Test Case: 811 | Input/Output: [(-37 -34 -89 -98) -98]
Test Case: 812 | Input/Output: [(56 -43 10 57) -43]
Test Case: 813 | Input/Output: [(12 33 -64 24) -64]
Test Case: 814 | Input/Output: [(-90 -53 -95 -51) -95]
Test Case: 815 | Input/Output: [(69 -71 31 -38) -71]
Test Case: 816 | Input/Output: [(78 -89 -18 -11) -89]
Test Case: 817 | Input/Output: [(37 54 21 -47) -47]
Test Case: 818 | Input/Output: [(-24 -93 43 -58) -93]
Test Case: 819 | Input/Output: [(-5 7 39 74) -5]
Test Case: 820 | Input/Output: [(11 -11 46 49) -11]
Test Case: 821 | Input/Output: [(-47 23 16 -64) -64]
Test Case: 822 | Input/Output: [(-10 34 63 -55) -55]
Test Case: 823 | Input/Output: [(68 5 -36 32) -36]
Test Case: 824 | Input/Output: [(37 -67 91 80) -67]
Test Case: 825 | Input/Output: [(-25 99 93 48) -25]
Test Case: 826 | Input/Output: [(-64 -89 -20 -19) -89]
Test Case: 827 | Input/Output: [(-66 -47 -77 67) -77]
Test Case: 828 | Input/Output: [(88 11 86 15) 11]
Test Case: 829 | Input/Output: [(-30 13 57 -51) -51]
Test Case: 830 | Input/Output: [(-14 46 89 26) -14]
Test Case: 831 | Input/Output: [(-63 -47 -83 71) -83]
Test Case: 832 | Input/Output: [(31 79 75 -77) -77]
Test Case: 833 | Input/Output: [(-57 -99 -98 -85) -99]
Test Case: 834 | Input/Output: [(0 63 -47 34) -47]
Test Case: 835 | Input/Output: [(-33 -94 -10 -98) -98]
Test Case: 836 | Input/Output: [(-68 39 -70 -47) -70]
Test Case: 837 | Input/Output: [(-36 -55 25 -24) -55]
Test Case: 838 | Input/Output: [(9 46 70 -85) -85]
Test Case: 839 | Input/Output: [(-18 -96 -80 -26) -96]
Test Case: 840 | Input/Output: [(-55 83 65 -47) -55]
Test Case: 841 | Input/Output: [(73 -56 95 -37) -56]
Test Case: 842 | Input/Output: [(54 22 -84 -13) -84]
Test Case: 843 | Input/Output: [(0 10 72 77) 0]
Test Case: 844 | Input/Output: [(-51 28 27 -7) -51]
Test Case: 845 | Input/Output: [(-6 8 -34 93) -34]
Test Case: 846 | Input/Output: [(-3 69 -64 -93) -93]
Test Case: 847 | Input/Output: [(10 66 -15 59) -15]
Test Case: 848 | Input/Output: [(-1 45 95 -60) -60]
Test Case: 849 | Input/Output: [(49 75 75 49) 49]
Test Case: 850 | Input/Output: [(-78 12 -11 -95) -95]
Test Case: 851 | Input/Output: [(-18 47 -68 47) -68]
Test Case: 852 | Input/Output: [(45 24 -69 -8) -69]
Test Case: 853 | Input/Output: [(-27 -61 53 -39) -61]
Test Case: 854 | Input/Output: [(60 47 93 -4) -4]
Test Case: 855 | Input/Output: [(97 26 52 16) 16]
Test Case: 856 | Input/Output: [(73 71 -99 -18) -99]
Test Case: 857 | Input/Output: [(36 -12 -30 62) -30]
Test Case: 858 | Input/Output: [(-10 -38 -2 23) -38]
Test Case: 859 | Input/Output: [(67 -25 14 -69) -69]
Test Case: 860 | Input/Output: [(-3 5 18 -63) -63]
Test Case: 861 | Input/Output: [(-88 86 98 41) -88]
Test Case: 862 | Input/Output: [(-43 33 -8 -2) -43]
Test Case: 863 | Input/Output: [(-59 66 -10 61) -59]
Test Case: 864 | Input/Output: [(91 73 -33 89) -33]
Test Case: 865 | Input/Output: [(73 100 -1 73) -1]
Test Case: 866 | Input/Output: [(-43 46 -47 -9) -47]
Test Case: 867 | Input/Output: [(6 -21 -21 -35) -35]
Test Case: 868 | Input/Output: [(76 -76 7 -10) -76]
Test Case: 869 | Input/Output: [(45 -32 100 85) -32]
Test Case: 870 | Input/Output: [(-88 -13 -1 72) -88]
Test Case: 871 | Input/Output: [(-29 -70 49 -4) -70]
Test Case: 872 | Input/Output: [(-59 -66 -31 29) -66]
Test Case: 873 | Input/Output: [(-68 -58 40 43) -68]
Test Case: 874 | Input/Output: [(-73 -78 -26 98) -78]
Test Case: 875 | Input/Output: [(-4 -20 92 -98) -98]
Test Case: 876 | Input/Output: [(-63 32 -3 51) -63]
Test Case: 877 | Input/Output: [(33 43 -12 -66) -66]
Test Case: 878 | Input/Output: [(-73 -71 -69 86) -73]
Test Case: 879 | Input/Output: [(-14 77 -28 -66) -66]
Test Case: 880 | Input/Output: [(-74 -82 -11 -35) -82]
Test Case: 881 | Input/Output: [(-41 28 93 69) -41]
Test Case: 882 | Input/Output: [(66 -18 -53 -61) -61]
Test Case: 883 | Input/Output: [(-75 -43 -33 -26) -75]
Test Case: 884 | Input/Output: [(-67 -63 -21 38) -67]
Test Case: 885 | Input/Output: [(79 22 -94 -33) -94]
Test Case: 886 | Input/Output: [(-3 16 -36 63) -36]
Test Case: 887 | Input/Output: [(-60 71 89 71) -60]
Test Case: 888 | Input/Output: [(-19 32 -59 67) -59]
Test Case: 889 | Input/Output: [(75 59 -32 76) -32]
Test Case: 890 | Input/Output: [(82 -64 -40 81) -64]
Test Case: 891 | Input/Output: [(-36 68 66 -8) -36]
Test Case: 892 | Input/Output: [(-80 -79 94 100) -80]
Test Case: 893 | Input/Output: [(-51 -4 55 -61) -61]
Test Case: 894 | Input/Output: [(-63 -99 2 36) -99]
Test Case: 895 | Input/Output: [(56 70 18 -26) -26]
Test Case: 896 | Input/Output: [(66 -70 54 17) -70]
Test Case: 897 | Input/Output: [(70 -85 32 -9) -85]
Test Case: 898 | Input/Output: [(-99 18 -18 47) -99]
Test Case: 899 | Input/Output: [(-87 47 -15 -5) -87]
Test Case: 900 | Input/Output: [(95 -77 -34 -97) -97]
Test Case: 901 | Input/Output: [(78 -80 43 2) -80]
Test Case: 902 | Input/Output: [(-88 -64 84 -54) -88]
Test Case: 903 | Input/Output: [(-18 0 -7 -81) -81]
Test Case: 904 | Input/Output: [(-85 49 -20 22) -85]
Test Case: 905 | Input/Output: [(68 54 24 18) 18]
Test Case: 906 | Input/Output: [(49 -53 -78 6) -78]
Test Case: 907 | Input/Output: [(5 60 6 -52) -52]
Test Case: 908 | Input/Output: [(97 63 -95 -48) -95]
Test Case: 909 | Input/Output: [(-4 -90 77 -35) -90]
Test Case: 910 | Input/Output: [(-22 15 85 -51) -51]
Test Case: 911 | Input/Output: [(24 -59 -100 -84) -100]
Test Case: 912 | Input/Output: [(-42 -31 1 -43) -43]
Test Case: 913 | Input/Output: [(89 -82 -30 -78) -82]
Test Case: 914 | Input/Output: [(-71 83 -34 94) -71]
Test Case: 915 | Input/Output: [(62 -9 24 -63) -63]
Test Case: 916 | Input/Output: [(97 -9 -5 -97) -97]
Test Case: 917 | Input/Output: [(14 23 -40 40) -40]
Test Case: 918 | Input/Output: [(5 -43 32 67) -43]
Test Case: 919 | Input/Output: [(57 51 34 85) 34]
Test Case: 920 | Input/Output: [(-41 32 66 38) -41]
Test Case: 921 | Input/Output: [(-14 99 -55 35) -55]
Test Case: 922 | Input/Output: [(24 72 17 -88) -88]
Test Case: 923 | Input/Output: [(-31 44 13 35) -31]
Test Case: 924 | Input/Output: [(61 -10 61 -15) -15]
Test Case: 925 | Input/Output: [(-56 59 68 -72) -72]
Test Case: 926 | Input/Output: [(-9 46 64 -39) -39]
Test Case: 927 | Input/Output: [(83 73 -12 79) -12]
Test Case: 928 | Input/Output: [(33 -22 -66 -59) -66]
Test Case: 929 | Input/Output: [(6 67 50 -54) -54]
Test Case: 930 | Input/Output: [(62 27 57 -69) -69]
Test Case: 931 | Input/Output: [(21 -84 -97 21) -97]
Test Case: 932 | Input/Output: [(75 22 89 62) 22]
Test Case: 933 | Input/Output: [(-59 -23 -13 87) -59]
Test Case: 934 | Input/Output: [(-47 53 31 -13) -47]
Test Case: 935 | Input/Output: [(7 -4 -65 21) -65]
Test Case: 936 | Input/Output: [(68 23 55 -56) -56]
Test Case: 937 | Input/Output: [(-99 87 48 65) -99]
Test Case: 938 | Input/Output: [(-22 48 -36 95) -36]
Test Case: 939 | Input/Output: [(-65 -60 -36 89) -65]
Test Case: 940 | Input/Output: [(90 -28 28 9) -28]
Test Case: 941 | Input/Output: [(-60 -9 2 -80) -80]
Test Case: 942 | Input/Output: [(50 -30 37 -38) -38]
Test Case: 943 | Input/Output: [(68 -84 36 58) -84]
Test Case: 944 | Input/Output: [(-54 30 68 -96) -96]
Test Case: 945 | Input/Output: [(92 -34 -88 47) -88]
Test Case: 946 | Input/Output: [(89 9 42 0) 0]
Test Case: 947 | Input/Output: [(2 -29 47 -99) -99]
Test Case: 948 | Input/Output: [(46 88 52 -3) -3]
Test Case: 949 | Input/Output: [(99 3 18 37) 3]
Test Case: 950 | Input/Output: [(95 -40 21 -77) -77]
Test Case: 951 | Input/Output: [(-32 10 -58 -34) -58]
Test Case: 952 | Input/Output: [(-38 -5 27 50) -38]
Test Case: 953 | Input/Output: [(-76 -65 47 -90) -90]
Test Case: 954 | Input/Output: [(49 -32 -89 33) -89]
Test Case: 955 | Input/Output: [(99 -61 -31 -95) -95]
Test Case: 956 | Input/Output: [(69 94 61 -68) -68]
Test Case: 957 | Input/Output: [(-20 76 -5 50) -20]
Test Case: 958 | Input/Output: [(11 -81 -45 -23) -81]
Test Case: 959 | Input/Output: [(-69 -55 -39 -72) -72]
Test Case: 960 | Input/Output: [(91 94 34 10) 10]
Test Case: 961 | Input/Output: [(57 -92 -8 -40) -92]
Test Case: 962 | Input/Output: [(-92 81 81 -51) -92]
Test Case: 963 | Input/Output: [(-11 44 -76 90) -76]
Test Case: 964 | Input/Output: [(-83 -43 -55 17) -83]
Test Case: 965 | Input/Output: [(-88 -69 -82 94) -88]
Test Case: 966 | Input/Output: [(28 15 61 -65) -65]
Test Case: 967 | Input/Output: [(-39 71 -94 15) -94]
Test Case: 968 | Input/Output: [(-7 12 -77 -27) -77]
Test Case: 969 | Input/Output: [(23 -100 83 -33) -100]
Test Case: 970 | Input/Output: [(-31 94 -22 -47) -47]
Test Case: 971 | Input/Output: [(-19 -97 22 -26) -97]
Test Case: 972 | Input/Output: [(34 87 92 38) 34]
Test Case: 973 | Input/Output: [(-88 16 -58 -74) -88]
Test Case: 974 | Input/Output: [(-81 -88 -16 51) -88]
Test Case: 975 | Input/Output: [(86 -60 -40 22) -60]
Test Case: 976 | Input/Output: [(85 -69 61 98) -69]
Test Case: 977 | Input/Output: [(-27 39 -60 -3) -60]
Test Case: 978 | Input/Output: [(-31 13 35 35) -31]
Test Case: 979 | Input/Output: [(-82 2 86 29) -82]
Test Case: 980 | Input/Output: [(21 -49 27 -63) -63]
Test Case: 981 | Input/Output: [(52 -55 34 86) -55]
Test Case: 982 | Input/Output: [(-13 -11 100 90) -13]
Test Case: 983 | Input/Output: [(65 -25 65 -34) -34]
Test Case: 984 | Input/Output: [(50 49 1 65) 1]
Test Case: 985 | Input/Output: [(78 8 71 71) 8]
Test Case: 986 | Input/Output: [(-100 -93 19 -76) -100]
Test Case: 987 | Input/Output: [(-51 53 41 -14) -51]
Test Case: 988 | Input/Output: [(72 51 19 58) 19]
Test Case: 989 | Input/Output: [(31 57 64 25) 25]
Test Case: 990 | Input/Output: [(18 24 -1 -3) -3]
Test Case: 991 | Input/Output: [(-71 62 -8 96) -71]
Test Case: 992 | Input/Output: [(-4 -20 -20 26) -20]
Test Case: 993 | Input/Output: [(-62 61 86 57) -62]
Test Case: 994 | Input/Output: [(38 -22 42 28) -22]
Test Case: 995 | Input/Output: [(19 -78 -31 -65) -78]
Test Case: 996 | Input/Output: [(42 -71 21 -9) -71]
Test Case: 997 | Input/Output: [(51 -79 33 39) -79]
Test Case: 998 | Input/Output: [(-72 91 -99 92) -99]
Test Case: 999 | Input/Output: [(31 -62 -62 59) -62]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 98f17fffbd710431b7ffe02918e462d48a2ebada
GitHub link = https://github.com/lspector/Clojush/commit/98f17fffbd710431b7ffe02918e462d48a2ebada
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7460 0x30b9728f clojush.problems.software.smallest$fn__7460@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7478@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000.0
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = 44 -50 47 44 -25 -23 -11 -18 -89 -87 40 100 -64 25 -44 -100
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[82 20 20 20] 20] [[66 -43 -43 -43] -43] [[96 -4 -4 -4] -4] [[100 -52 100 100] -52] [[-12 -59 -59 -59] -59] [[82 62 82 82] 62] [[-82 93 -82 -82] -82] [[-94 -87 -94 -94] -94] [[92 92 -89 92] -89] [[31 -85 -85 -85] -85] [(6 6 6 6) 6] [(-31 -31 -31 -31) -31] [(-36 -36 -36 -36) -36] [(-98 -98 -98 -98) -98] [(-66 -66 -66 -66) -66] [(17 77 41 77) 17] [(81 6 94 65) 6] [(82 70 26 2) 2] [(1 69 88 3) 1] [(8 2 73 42) 2] [(27 92 42 38) 27] [(42 12 35 83) 12] [(21 77 9 62) 9] [(31 38 38 66) 31] [(53 96 59 77) 53] [(18 0 7 4) 0] [(52 5 90 45) 5] [(11 44 42 85) 11] [(87 17 64 28) 17] [(1 58 47 28) 1] [(6 28 50 9) 6] [(52 38 8 37) 8] [(32 41 100 7) 7] [(79 78 2 54) 2] [(25 53 83 47) 25] [(-29 -70 -51 11) -70] [(-45 -81 -15 -73) -81] [(20 -48 -76 95) -76] [(-59 80 58 95) -59] [(42 49 39 -89) -89] [(12 76 -52 28) -52] [(88 97 -6 58) -6] [(-51 25 14 -12) -51] [(-98 82 44 62) -98] [(60 13 81 0) 0] [(30 72 47 -40) -40] [(-2 -60 0 61) -60] [(97 -62 20 0) -62] [(88 -95 48 -89) -95] [(-42 -92 28 -72) -92] [(-92 17 93 21) -92] [(-87 28 8 23) -87] [(23 -24 100 97) -24] [(90 -62 -25 -69) -69] [(81 32 -66 -76) -76] [(52 -28 -14 -27) -28] [(-26 -27 -48 -58) -58] [(-61 30 -92 57) -92] [(-72 -85 -68 -80) -85] [(-72 95 -15 -67) -72] [(54 -28 60 -62) -62] [(69 88 -98 34) -98] [(51 19 39 -100) -100] [(8 15 -29 -58) -58] [(-86 -82 55 -32) -86] [(-30 -25 -56 -79) -79] [(76 8 26 0) 0] [(-29 80 21 17) -29] [(-32 -12 -86 82) -86] [(54 86 -37 -96) -96] [(8 -32 91 -70) -70] [(-79 -19 71 17) -79] [(-63 72 20 11) -63] [(-50 -62 22 79) -62] [(-55 2 87 -83) -83] [(-76 80 -97 -58) -97] [(42 -53 75 -64) -64] [(-20 79 -67 -6) -67] [(-51 55 -7 -87) -87] [(-36 -4 53 0) -36] [(-5 14 -16 -63) -63] [(-81 22 -98 -38) -98] [(27 8 -22 15) -22] [(-40 19 47 31) -40] [(90 -56 -13 69) -56] [(30 19 42 -70) -70] [(36 -92 13 -9) -92] [(-22 -25 71 78) -25] [(-95 67 64 -85) -95] [(-73 55 -9 44) -73] [(-22 44 59 77) -22] [(54 11 50 -45) -45] [(-27 22 -16 -57) -57] [(71 59 52 70) 52] [(-16 -49 47 6) -49])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: 93                 
Correct output: -94                 | Program output: -87                
Correct output: -89                 | Program output: 92                 
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 77                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 70                 
Correct output: 1                   | Program output: 69                 
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 92                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 77                 
Correct output: 31                  | Program output: 38                 
Correct output: 53                  | Program output: 96                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 44                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 58                 
Correct output: 6                   | Program output: 28                 
Correct output: 8                   | Program output: 38                 
Correct output: 7                   | Program output: 41                 
Correct output: 2                   | Program output: 78                 
Correct output: 25                  | Program output: 53                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -48                
Correct output: -59                 | Program output: 80                 
Correct output: -89                 | Program output: 49                 
Correct output: -52                 | Program output: 76                 
Correct output: -6                  | Program output: 97                 
Correct output: -51                 | Program output: 25                 
Correct output: -98                 | Program output: 82                 
Correct output: 0                   | Program output: 13                 
Correct output: -40                 | Program output: 72                 
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: 17                 
Correct output: -87                 | Program output: 28                 
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -62                
Correct output: -76                 | Program output: 32                 
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -27                
Correct output: -92                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: 95                 
Correct output: -62                 | Program output: -28                
Correct output: -98                 | Program output: 88                 
Correct output: -100                | Program output: 19                 
Correct output: -58                 | Program output: 15                 
Correct output: -86                 | Program output: -82                
Correct output: -79                 | Program output: -25                
Correct output: 0                   | Program output: 8                  
Correct output: -29                 | Program output: 80                 
Correct output: -86                 | Program output: -12                
Correct output: -96                 | Program output: 86                 
Correct output: -70                 | Program output: -32                
Correct output: -79                 | Program output: -19                
Correct output: -63                 | Program output: 72                 
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: 2                  
Correct output: -97                 | Program output: 80                 
Correct output: -64                 | Program output: -53                
Correct output: -67                 | Program output: 79                 
Correct output: -87                 | Program output: 55                 
Correct output: -36                 | Program output: -4                 
Correct output: -63                 | Program output: 14                 
Correct output: -98                 | Program output: 22                 
Correct output: -22                 | Program output: 8                  
Correct output: -40                 | Program output: 19                 
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: 19                 
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: 67                 
Correct output: -73                 | Program output: 55                 
Correct output: -22                 | Program output: 44                 
Correct output: -45                 | Program output: 11                 
Correct output: -57                 | Program output: 22                 
Correct output: 52                  | Program output: 59                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_inc} {:close 0, :instruction in2} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_if} {:close 0, :instruction tagged_819} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_gt} {:close 0, :instruction tagged_400} {:close 2, :instruction boolean_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_k} {:close 1, :instruction in1} {:close 0, :instruction integer_flush} {:close 0, :instruction tag_exec_463} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_while} {:close 0, :instruction print_integer} {:close 1, :instruction exec_yank} {:close 1, :instruction exec_pop} {:close 1, :instruction integer_gt} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_y})
Lexicase best program: (integer_dup_times boolean_dup exec_rot (boolean_stackdepth exec_dup_items boolean_eq exec_s (boolean_rot integer_inc) (in2 exec_stackdepth integer_fromboolean in1 in3 boolean_dup_items exec_rot (boolean_invert_second_then_and exec_rot (exec_do*range (exec_if (tagged_819 exec_shove (exec_yankdup integer_lt integer_yank integer_dec) print_boolean print_integer) (integer_dec boolean_xor integer_gt tagged_400 boolean_shove)) exec_yankdup boolean_swap exec_dup_items exec_dup_times (integer_shove boolean_dup_items integer_rot) integer_inc exec_stackdepth integer_gte integer_empty integer_inc exec_k (in1) (integer_flush tag_exec_463 (exec_yank boolean_yank exec_while () print_integer exec_yank) exec_pop () integer_gt) boolean_pop) (exec_y ()) ()) () ()) ()) () ())
Lexicase best errors: [1 0 0 1 1 0 1 0 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 82
Percent parens: 0.293
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_rot} {:close 1, :instruction integer_inc} {:close 0, :instruction in2} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_if} {:close 0, :instruction tagged_819} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_yank} {:close 1, :instruction integer_dec} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_gt} {:close 0, :instruction tagged_400} {:close 2, :instruction boolean_shove} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_k} {:close 1, :instruction in1} {:close 0, :instruction integer_flush} {:close 0, :instruction tag_exec_463} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_yank} {:close 1, :instruction exec_while} {:close 0, :instruction print_integer} {:close 1, :instruction exec_yank} {:close 1, :instruction exec_pop} {:close 1, :instruction integer_gt} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_y})
Zero cases best program: (integer_dup_times boolean_dup exec_rot (boolean_stackdepth exec_dup_items boolean_eq exec_s (boolean_rot integer_inc) (in2 exec_stackdepth integer_fromboolean in1 in3 boolean_dup_items exec_rot (boolean_invert_second_then_and exec_rot (exec_do*range (exec_if (tagged_819 exec_shove (exec_yankdup integer_lt integer_yank integer_dec) print_boolean print_integer) (integer_dec boolean_xor integer_gt tagged_400 boolean_shove)) exec_yankdup boolean_swap exec_dup_items exec_dup_times (integer_shove boolean_dup_items integer_rot) integer_inc exec_stackdepth integer_gte integer_empty integer_inc exec_k (in1) (integer_flush tag_exec_463 (exec_yank boolean_yank exec_while () print_integer exec_yank) exec_pop () integer_gt) boolean_pop) (exec_y ()) ()) () ()) ()) () ())
Zero cases best errors: [1 0 0 1 1 0 1 0 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 82
Percent parens: 0.293
--- Lexicase Population Statistics ---
Count of elite individuals by case: (4 13 4 1 1 5 4 4 12 1)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (4 13 4 1 1 5 4 4 12 1)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction exec_do*while} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) exec_do*while () print_integer integer_inc)
Errors: [1 0 0 1 1 0 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 22
Size: 30
Percent parens: 0.267
--- Population Statistics ---
Average total errors in population: 9.951
Median total errors in population: 10
Error averages by case: (0.996 0.987 0.996 0.999 0.999 0.995 0.996 0.996 0.988 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 51.827
Average program size in population (points): 71.6
Average percent parens in population: 0.280
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.27
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 466522
--- Timings ---
Current time: 1559314311791 milliseconds
Total Time:           2.7 seconds
Initialization:       0.1 seconds,  3.7%
Reproduction:         0.9 seconds, 32.6%
Fitness Testing:      1.7 seconds, 63.7%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 414
Test mean error for best: 0.41400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: 92                 
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 77                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 3                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 38                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 62                 
Correct output: 31                  | Program output: 38                 
Correct output: 53                  | Program output: 77                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 44                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 28                 
Correct output: 6                   | Program output: 9                  
Correct output: 8                   | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 54                 
Correct output: 25                  | Program output: 47                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -48                
Correct output: -59                 | Program output: 80                 
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: 28                 
Correct output: -6                  | Program output: 58                 
Correct output: -51                 | Program output: -12                
Correct output: -98                 | Program output: 62                 
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: 17                 
Correct output: -87                 | Program output: 23                 
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -67                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: 34                 
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -82                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: 17                 
Correct output: -86                 | Program output: -12                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: -19                
Correct output: -63                 | Program output: 11                 
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: -4                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -38                
Correct output: -22                 | Program output: 8                  
Correct output: -40                 | Program output: 19                 
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -85                
Correct output: -73                 | Program output: 44                 
Correct output: -22                 | Program output: 44                 
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 59                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Lexicase best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Lexicase best errors: [0 0 0 1 0 0 1 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 29
Percent parens: 0.241
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Zero cases best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Zero cases best errors: [0 0 0 1 0 0 1 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 29
Percent parens: 0.241
--- Lexicase Population Statistics ---
Count of elite individuals by case: (359 361 359 298 359 3 298 361 883 218)
Population mean number of elite cases: 3.50
Count of perfect (error zero) individuals by case: (359 361 359 298 359 3 298 361 883 218)
Population mean number of perfect (error zero) cases: 3.50
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Errors: [0 0 0 1 0 0 1 0 0 1]
Total: 3
Mean: 0.3
Genome size: 22
Size: 29
Percent parens: 0.241
--- Population Statistics ---
Average total errors in population: 6.501
Median total errors in population: 7
Error averages by case: (0.641 0.639 0.641 0.702 0.641 0.997 0.702 0.639 0.117 0.782)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 59.918
Average program size in population (points): 82.09
Average percent parens in population: 0.265
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.506
Median age in population: 2.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 91
Genome diversity (% unique genomes):	 0.588
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.581
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1088433
--- Timings ---
Current time: 1559314314669 milliseconds
Total Time:           5.6 seconds
Initialization:       0.1 seconds,  1.8%
Reproduction:         2.6 seconds, 45.8%
Fitness Testing:      2.6 seconds, 46.3%
Report:               0.3 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 414
Test mean error for best: 0.41400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: 92                 
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 77                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 3                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 38                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 62                 
Correct output: 31                  | Program output: 38                 
Correct output: 53                  | Program output: 77                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 44                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 28                 
Correct output: 6                   | Program output: 9                  
Correct output: 8                   | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 54                 
Correct output: 25                  | Program output: 47                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -48                
Correct output: -59                 | Program output: 80                 
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: 28                 
Correct output: -6                  | Program output: 58                 
Correct output: -51                 | Program output: -12                
Correct output: -98                 | Program output: 62                 
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: 17                 
Correct output: -87                 | Program output: 23                 
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -67                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: 34                 
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -82                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: 17                 
Correct output: -86                 | Program output: -12                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: -19                
Correct output: -63                 | Program output: 11                 
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: -4                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -38                
Correct output: -22                 | Program output: 8                  
Correct output: -40                 | Program output: 19                 
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -85                
Correct output: -73                 | Program output: 44                 
Correct output: -22                 | Program output: 44                 
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 59                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Lexicase best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Lexicase best errors: [1 0 0 1 0 0 1 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 29
Percent parens: 0.241
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Zero cases best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Zero cases best errors: [1 0 0 1 0 0 1 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 29
Percent parens: 0.241
--- Lexicase Population Statistics ---
Count of elite individuals by case: (96 614 720 204 920 923 95 611 95 613)
Population mean number of elite cases: 4.89
Count of perfect (error zero) individuals by case: (96 614 720 204 920 923 95 611 95 613)
Population mean number of perfect (error zero) cases: 4.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Errors: [1 0 0 1 0 0 1 0 1 0]
Total: 4
Mean: 0.4
Genome size: 22
Size: 29
Percent parens: 0.241
--- Population Statistics ---
Average total errors in population: 5.109
Median total errors in population: 4
Error averages by case: (0.904 0.386 0.28 0.796 0.08 0.077 0.905 0.389 0.905 0.387)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 36.104
Average program size in population (points): 49.397
Average percent parens in population: 0.258
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.3565
Median age in population: 3.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 461
Genome diversity (% unique genomes):	 0.472
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 470
Syntactic diversity (% unique Push programs):	 0.457
Total error diversity:				 0.006
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1483088
--- Timings ---
Current time: 1559314317821 milliseconds
Total Time:           8.9 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         5.0 seconds, 56.5%
Fitness Testing:      3.1 seconds, 35.0%
Report:               0.7 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 414
Test mean error for best: 0.41400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: 92                 
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 77                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 3                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 38                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 62                 
Correct output: 31                  | Program output: 38                 
Correct output: 53                  | Program output: 77                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 44                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 28                 
Correct output: 6                   | Program output: 9                  
Correct output: 8                   | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 54                 
Correct output: 25                  | Program output: 47                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -48                
Correct output: -59                 | Program output: 80                 
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: 28                 
Correct output: -6                  | Program output: 58                 
Correct output: -51                 | Program output: -12                
Correct output: -98                 | Program output: 62                 
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: 17                 
Correct output: -87                 | Program output: 23                 
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -67                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: 34                 
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -82                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: 17                 
Correct output: -86                 | Program output: -12                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: -19                
Correct output: -63                 | Program output: 11                 
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: -4                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -38                
Correct output: -22                 | Program output: 8                  
Correct output: -40                 | Program output: 19                 
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -85                
Correct output: -73                 | Program output: 44                 
Correct output: -22                 | Program output: 44                 
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 59                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Lexicase best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Lexicase best errors: [0 1 0 0 1 0 1 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 29
Percent parens: 0.241
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Zero cases best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Zero cases best errors: [0 1 0 0 1 0 1 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 29
Percent parens: 0.241
--- Lexicase Population Statistics ---
Count of elite individuals by case: (829 326 361 318 388 318 124 386 388 318)
Population mean number of elite cases: 3.76
Count of perfect (error zero) individuals by case: (829 326 361 318 388 318 124 386 388 318)
Population mean number of perfect (error zero) cases: 3.76
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Errors: [0 1 0 0 1 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 22
Size: 29
Percent parens: 0.241
--- Population Statistics ---
Average total errors in population: 6.244
Median total errors in population: 5
Error averages by case: (0.171 0.674 0.639 0.682 0.612 0.682 0.876 0.614 0.612 0.682)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 39.859
Average program size in population (points): 56.23
Average percent parens in population: 0.283
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.75425
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 205
Genome diversity (% unique genomes):	 0.605
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 209
Syntactic diversity (% unique Push programs):	 0.593
Total error diversity:				 0.006
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.055
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1993771
--- Timings ---
Current time: 1559314320618 milliseconds
Total Time:          11.7 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         7.0 seconds, 60.0%
Fitness Testing:      3.7 seconds, 31.7%
Report:               0.9 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 414
Test mean error for best: 0.41400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: 92                 
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 77                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 3                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 38                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 62                 
Correct output: 31                  | Program output: 38                 
Correct output: 53                  | Program output: 77                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 44                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 28                 
Correct output: 6                   | Program output: 9                  
Correct output: 8                   | Program output: 37                 
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 54                 
Correct output: 25                  | Program output: 47                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -48                
Correct output: -59                 | Program output: 80                 
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: 28                 
Correct output: -6                  | Program output: 58                 
Correct output: -51                 | Program output: -12                
Correct output: -98                 | Program output: 62                 
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: 17                 
Correct output: -87                 | Program output: 23                 
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: 30                 
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -67                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: 34                 
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -82                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: 17                 
Correct output: -86                 | Program output: -12                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: -19                
Correct output: -63                 | Program output: 11                 
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -58                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: -4                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -38                
Correct output: -22                 | Program output: 8                  
Correct output: -40                 | Program output: 19                 
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -85                
Correct output: -73                 | Program output: 44                 
Correct output: -22                 | Program output: 44                 
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 59                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 2, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Lexicase best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () () print_integer in4 exec_rot (boolean_yankdup integer_lt integer_shove) (integer_lte) () in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Lexicase best errors: [0 0 0 0 1 0 0 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 29
Percent parens: 0.241
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 2, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Zero cases best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () () print_integer in4 exec_rot (boolean_yankdup integer_lt integer_shove) (integer_lte) () in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Zero cases best errors: [0 0 0 0 1 0 0 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 29
Percent parens: 0.241
--- Lexicase Population Statistics ---
Count of elite individuals by case: (338 904 508 508 386 508 339 142 338 385)
Population mean number of elite cases: 4.36
Count of perfect (error zero) individuals by case: (338 904 508 508 386 508 339 142 338 385)
Population mean number of perfect (error zero) cases: 4.36
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_gte} {:close 1, :instruction exec_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Best program: (exec_dup_items integer_sub boolean_not integer_gte exec_swap () (print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte)) in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer integer_inc)
Errors: [0 0 0 0 1 0 0 1 0 1]
Total: 3
Mean: 0.3
Genome size: 22
Size: 29
Percent parens: 0.241
--- Population Statistics ---
Average total errors in population: 5.644
Median total errors in population: 6
Error averages by case: (0.662 0.096 0.492 0.492 0.614 0.492 0.661 0.858 0.662 0.615)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 32.875
Average program size in population (points): 46.97
Average percent parens in population: 0.287
Minimum age in population: 4.0
Maximum age in population: 8.0
Average age in population: 6.320125
Median age in population: 6.375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 181
Genome diversity (% unique genomes):	 0.555
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 188
Syntactic diversity (% unique Push programs):	 0.544
Total error diversity:				 0.008
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.047
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2374787
--- Timings ---
Current time: 1559314323492 milliseconds
Total Time:          14.6 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         9.3 seconds, 63.7%
Fitness Testing:      4.1 seconds, 28.1%
Report:               1.1 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 397
Test mean error for best: 0.39700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: 100                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 82                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: -89                
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 41                 
Correct output: 6                   | Program output: 65                 
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 3                  
Correct output: 2                   | Program output: 42                 
Correct output: 27                  | Program output: 38                 
Correct output: 12                  | Program output: 35                 
Correct output: 9                   | Program output: 9                  
Correct output: 31                  | Program output: 38                 
Correct output: 53                  | Program output: 59                 
Correct output: 0                   | Program output: 4                  
Correct output: 5                   | Program output: 45                 
Correct output: 11                  | Program output: 42                 
Correct output: 17                  | Program output: 28                 
Correct output: 1                   | Program output: 28                 
Correct output: 6                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 2                  
Correct output: 25                  | Program output: 47                 
Correct output: -70                 | Program output: -51                
Correct output: -81                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -59                 | Program output: 58                 
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: -52                
Correct output: -6                  | Program output: -6                 
Correct output: -51                 | Program output: -12                
Correct output: -98                 | Program output: 44                 
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: 0                  
Correct output: -62                 | Program output: 0                  
Correct output: -95                 | Program output: -89                
Correct output: -92                 | Program output: -72                
Correct output: -92                 | Program output: 21                 
Correct output: -87                 | Program output: 8                  
Correct output: -24                 | Program output: 97                 
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -27                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: -92                
Correct output: -85                 | Program output: -80                
Correct output: -72                 | Program output: -67                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -32                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: 17                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: 17                 
Correct output: -63                 | Program output: 11                 
Correct output: -62                 | Program output: 22                 
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -67                
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: 0                  
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -22                 | Program output: -22                
Correct output: -40                 | Program output: 31                 
Correct output: -56                 | Program output: -13                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -9                 
Correct output: -25                 | Program output: 71                 
Correct output: -95                 | Program output: -85                
Correct output: -73                 | Program output: -9                 
Correct output: -22                 | Program output: 59                 
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 52                 
Correct output: -49                 | Program output: 6                  
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction -92})
Lexicase best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer -92)
Lexicase best errors: [0 0 0 0 1 0 1 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 27
Percent parens: 0.259
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction -92})
Zero cases best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer -92)
Zero cases best errors: [0 0 0 0 1 0 1 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 27
Percent parens: 0.259
--- Lexicase Population Statistics ---
Count of elite individuals by case: (472 471 472 201 696 202 201 201 698 471)
Population mean number of elite cases: 4.09
Count of perfect (error zero) individuals by case: (472 471 472 201 696 202 201 201 698 471)
Population mean number of perfect (error zero) cases: 4.09
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction -92})
Best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer -92)
Errors: [0 0 0 0 1 0 1 0 1 0]
Total: 3
Mean: 0.3
Genome size: 20
Size: 27
Percent parens: 0.259
--- Population Statistics ---
Average total errors in population: 5.915
Median total errors in population: 7
Error averages by case: (0.528 0.529 0.528 0.799 0.304 0.798 0.799 0.799 0.302 0.529)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 27.632
Average program size in population (points): 38.424
Average percent parens in population: 0.267
Minimum age in population: 5.5
Maximum age in population: 9.4375
Average age in population: 7.8369375
Median age in population: 7.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 205
Genome diversity (% unique genomes):	 0.505
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 221
Syntactic diversity (% unique Push programs):	 0.485
Total error diversity:				 0.008
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2684751
--- Timings ---
Current time: 1559314326000 milliseconds
Total Time:          17.1 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        11.3 seconds, 66.0%
Fitness Testing:      4.4 seconds, 25.8%
Report:               1.3 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 198
Test mean error for best: 0.19800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: -89                
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 41                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 3                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 38                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 9                  
Correct output: 31                  | Program output: 38                 
Correct output: 53                  | Program output: 59                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 42                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 28                 
Correct output: 6                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 2                  
Correct output: 25                  | Program output: 47                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -76                
Correct output: -59                 | Program output: 58                 
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: -52                
Correct output: -6                  | Program output: -6                 
Correct output: -51                 | Program output: -12                
Correct output: -98                 | Program output: 44                 
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: 17                 
Correct output: -87                 | Program output: 8                  
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: -92                
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -67                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -82                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: 17                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: -19                
Correct output: -63                 | Program output: 11                 
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -67                
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: -4                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -22                 | Program output: -22                
Correct output: -40                 | Program output: 19                 
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -85                
Correct output: -73                 | Program output: -9                 
Correct output: -22                 | Program output: 44                 
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 52                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_yankdup} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction tag_exec_12} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction -72} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_xor} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq})
Lexicase best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
Lexicase best errors: [0 1 0 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 59
Percent parens: 0.237
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_yankdup} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction tag_exec_12} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction -72} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_xor} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq})
Zero cases best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
Zero cases best errors: [0 1 0 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 59
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (585 96 611 465 95 612 466 921 613 903)
Population mean number of elite cases: 5.37
Count of perfect (error zero) individuals by case: (585 96 611 465 95 612 466 921 613 903)
Population mean number of perfect (error zero) cases: 5.37
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_yankdup} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction tag_exec_12} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction -72} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_xor} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq})
Best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
Errors: [0 1 0 0 1 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 45
Size: 59
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 4.633
Median total errors in population: 4
Error averages by case: (0.415 0.904 0.389 0.535 0.905 0.388 0.534 0.079 0.387 0.097)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 23.984
Average program size in population (points): 32.769
Average percent parens in population: 0.263
Minimum age in population: 7.0
Maximum age in population: 11.0625
Average age in population: 9.86159375
Median age in population: 9.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 332
Genome diversity (% unique genomes):	 0.419
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 339
Syntactic diversity (% unique Push programs):	 0.396
Total error diversity:				 0.009
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2911034
--- Timings ---
Current time: 1559314328501 milliseconds
Total Time:          19.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        13.3 seconds, 68.1%
Fitness Testing:      4.7 seconds, 23.8%
Report:               1.5 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 442
Test mean error for best: 0.44200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: 92                 
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 17                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 70                 
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 21                 
Correct output: 31                  | Program output: 31                 
Correct output: 53                  | Program output: 53                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 1                  
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 38                 
Correct output: 7                   | Program output: 32                 
Correct output: 2                   | Program output: 78                 
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -48                
Correct output: -59                 | Program output: -59                
Correct output: -89                 | Program output: 42                 
Correct output: -52                 | Program output: 12                 
Correct output: -6                  | Program output: 88                 
Correct output: -51                 | Program output: -51                
Correct output: -98                 | Program output: -98                
Correct output: 0                   | Program output: 13                 
Correct output: -40                 | Program output: 30                 
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -92                
Correct output: -87                 | Program output: -87                
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -62                
Correct output: -76                 | Program output: 32                 
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -27                
Correct output: -92                 | Program output: -61                
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -72                
Correct output: -62                 | Program output: -28                
Correct output: -98                 | Program output: 69                 
Correct output: -100                | Program output: 19                 
Correct output: -58                 | Program output: 8                  
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -30                
Correct output: 0                   | Program output: 8                  
Correct output: -29                 | Program output: -29                
Correct output: -86                 | Program output: -32                
Correct output: -96                 | Program output: 54                 
Correct output: -70                 | Program output: -32                
Correct output: -79                 | Program output: -79                
Correct output: -63                 | Program output: -63                
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -55                
Correct output: -97                 | Program output: -76                
Correct output: -64                 | Program output: -53                
Correct output: -67                 | Program output: -20                
Correct output: -87                 | Program output: -51                
Correct output: -36                 | Program output: -36                
Correct output: -63                 | Program output: -5                 
Correct output: -98                 | Program output: -81                
Correct output: -22                 | Program output: 8                  
Correct output: -40                 | Program output: -40                
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: 19                 
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -73                
Correct output: -22                 | Program output: -22                
Correct output: -45                 | Program output: 11                 
Correct output: -57                 | Program output: -27                
Correct output: 52                  | Program output: 59                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_sub} {:close 1, :instruction exec_do*while} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Lexicase best program: (exec_do*times () boolean_xor boolean_swap integer_stackdepth boolean_dup_items integer_sub exec_do*range (boolean_yankdup exec_k_when_autoconstructing (integer_sub exec_do*while () in1 in2 exec_noop boolean_xor boolean_dup) (boolean_eq exec_while (print_integer) integer_min) print_integer integer_inc))
Lexicase best errors: [0 0 0 1 0 0 0 0 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 29
Percent parens: 0.241
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_sub} {:close 1, :instruction exec_do*while} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Zero cases best program: (exec_do*times () boolean_xor boolean_swap integer_stackdepth boolean_dup_items integer_sub exec_do*range (boolean_yankdup exec_k_when_autoconstructing (integer_sub exec_do*while () in1 in2 exec_noop boolean_xor boolean_dup) (boolean_eq exec_while (print_integer) integer_min) print_integer integer_inc))
Zero cases best errors: [0 0 0 1 0 0 0 0 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 29
Percent parens: 0.241
--- Lexicase Population Statistics ---
Count of elite individuals by case: (924 311 897 545 923 923 312 312 894 545)
Population mean number of elite cases: 6.59
Count of perfect (error zero) individuals by case: (924 311 897 545 923 923 312 312 894 545)
Population mean number of perfect (error zero) cases: 6.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_sub} {:close 1, :instruction exec_do*while} {:close 0, :instruction in1} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc})
Best program: (exec_do*times () boolean_xor boolean_swap integer_stackdepth boolean_dup_items integer_sub exec_do*range (boolean_yankdup exec_k_when_autoconstructing (integer_sub exec_do*while () in1 in2 exec_noop boolean_xor boolean_dup) (boolean_eq exec_while (print_integer) integer_min) print_integer integer_inc))
Errors: [0 0 0 1 0 0 0 0 0 1]
Total: 2
Mean: 0.2
Genome size: 22
Size: 29
Percent parens: 0.241
--- Population Statistics ---
Average total errors in population: 3.414
Median total errors in population: 3
Error averages by case: (0.076 0.689 0.103 0.455 0.077 0.077 0.688 0.688 0.106 0.455)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 36.726
Average program size in population (points): 48.309
Average percent parens in population: 0.241
Minimum age in population: 8.375
Maximum age in population: 12.84375
Average age in population: 11.79353125
Median age in population: 11.71875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 320
Genome diversity (% unique genomes):	 0.463
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 324
Syntactic diversity (% unique Push programs):	 0.441
Total error diversity:				 0.008
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.048
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 3221955
--- Timings ---
Current time: 1559314330914 milliseconds
Total Time:          22.0 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        15.2 seconds, 69.2%
Fitness Testing:      5.0 seconds, 22.6%
Report:               1.7 seconds,  7.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: -89                
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 17                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 9                  
Correct output: 31                  | Program output: 31                 
Correct output: 53                  | Program output: 53                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 1                  
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 8                  
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 2                  
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -76                
Correct output: -59                 | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: -52                
Correct output: -6                  | Program output: -6                 
Correct output: -51                 | Program output: -51                
Correct output: -98                 | Program output: -98                
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -92                
Correct output: -87                 | Program output: -87                
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: -92                
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -72                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: -29                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: -79                
Correct output: -63                 | Program output: -63                
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -67                
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: -36                
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -22                 | Program output: -22                
Correct output: -40                 | Program output: -40                
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -73                
Correct output: -22                 | Program output: -22                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 52                 
Correct output: -49                 | Program output: -49                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_min} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_yankdup} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction tag_exec_12} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction -72} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_xor} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq})
Lexicase best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 62
Percent parens: 0.226
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_min} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_yankdup} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction tag_exec_12} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction -72} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_xor} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq})
Zero cases best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 62
Percent parens: 0.226
--- Lexicase Population Statistics ---
Count of elite individuals by case: (557 494 557 698 556 556 506 494 493 493)
Population mean number of elite cases: 5.40
Count of perfect (error zero) individuals by case: (557 494 557 698 556 556 506 494 493 493)
Population mean number of perfect (error zero) cases: 5.40
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_do*times} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in4} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_shove} {:close 2, :instruction integer_lte} {:close 0, :instruction in3} {:close 1, :instruction exec_dup} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction in2} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_min} {:close 0, :instruction in1} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_while} {:close 1, :instruction print_integer} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_yankdup} {:close 1, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction tag_exec_12} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction in4} {:close 0, :instruction -72} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_xor} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_eq})
Best program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 48
Size: 62
Percent parens: 0.226
--- Population Statistics ---
Average total errors in population: 4.596
Median total errors in population: 5
Error averages by case: (0.443 0.506 0.443 0.302 0.444 0.444 0.494 0.506 0.507 0.507)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 35.975
Average program size in population (points): 47.313
Average percent parens in population: 0.240
Minimum age in population: 10.3125
Maximum age in population: 14.84375
Average age in population: 13.5243046875
Median age in population: 13.71875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 186
Genome diversity (% unique genomes):	 0.545
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 192
Syntactic diversity (% unique Push programs):	 0.522
Total error diversity:				 0.01
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 3535259
--- Timings ---
Current time: 1559314333373 milliseconds
Total Time:          24.4 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        17.1 seconds, 70.0%
Fitness Testing:      5.3 seconds, 21.7%
Report:               1.9 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 8
Successful program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 62


Auto-simplifying with starting size: 62
step: 0
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 500
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 1000
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 1500
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 2000
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 2500
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 3000
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 3500
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 4000
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 4500
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

step: 5000
program: (exec_do*times () boolean_xor boolean_swap print_integer in4 exec_rot (boolean_yankdup) (integer_lt integer_shove) (integer_lte) in3 exec_dup () boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min in2 exec_noop integer_min in1 exec_noop boolean_xor boolean_dup boolean_eq exec_while (print_integer) integer_min print_integer boolean_rot integer_add exec_do*while (boolean_yank exec_if (exec_pop (exec_yankdup boolean_shove) exec_pop (tag_exec_12 (boolean_stackdepth in4 -72 integer_gt boolean_xor) boolean_swap) boolean_pop exec_eq) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 62

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 20                 
Correct output: -43                 | Program output: -43                
Correct output: -4                  | Program output: -4                 
Correct output: -52                 | Program output: -52                
Correct output: -59                 | Program output: -59                
Correct output: 62                  | Program output: 62                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -89                 | Program output: -89                
Correct output: -85                 | Program output: -85                
Correct output: 6                   | Program output: 6                  
Correct output: -31                 | Program output: -31                
Correct output: -36                 | Program output: -36                
Correct output: -98                 | Program output: -98                
Correct output: -66                 | Program output: -66                
Correct output: 17                  | Program output: 17                 
Correct output: 6                   | Program output: 6                  
Correct output: 2                   | Program output: 2                  
Correct output: 1                   | Program output: 1                  
Correct output: 2                   | Program output: 2                  
Correct output: 27                  | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: 9                   | Program output: 9                  
Correct output: 31                  | Program output: 31                 
Correct output: 53                  | Program output: 53                 
Correct output: 0                   | Program output: 0                  
Correct output: 5                   | Program output: 5                  
Correct output: 11                  | Program output: 11                 
Correct output: 17                  | Program output: 17                 
Correct output: 1                   | Program output: 1                  
Correct output: 6                   | Program output: 6                  
Correct output: 8                   | Program output: 8                  
Correct output: 7                   | Program output: 7                  
Correct output: 2                   | Program output: 2                  
Correct output: 25                  | Program output: 25                 
Correct output: -70                 | Program output: -70                
Correct output: -81                 | Program output: -81                
Correct output: -76                 | Program output: -76                
Correct output: -59                 | Program output: -59                
Correct output: -89                 | Program output: -89                
Correct output: -52                 | Program output: -52                
Correct output: -6                  | Program output: -6                 
Correct output: -51                 | Program output: -51                
Correct output: -98                 | Program output: -98                
Correct output: 0                   | Program output: 0                  
Correct output: -40                 | Program output: -40                
Correct output: -60                 | Program output: -60                
Correct output: -62                 | Program output: -62                
Correct output: -95                 | Program output: -95                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -92                
Correct output: -87                 | Program output: -87                
Correct output: -24                 | Program output: -24                
Correct output: -69                 | Program output: -69                
Correct output: -76                 | Program output: -76                
Correct output: -28                 | Program output: -28                
Correct output: -58                 | Program output: -58                
Correct output: -92                 | Program output: -92                
Correct output: -85                 | Program output: -85                
Correct output: -72                 | Program output: -72                
Correct output: -62                 | Program output: -62                
Correct output: -98                 | Program output: -98                
Correct output: -100                | Program output: -100               
Correct output: -58                 | Program output: -58                
Correct output: -86                 | Program output: -86                
Correct output: -79                 | Program output: -79                
Correct output: 0                   | Program output: 0                  
Correct output: -29                 | Program output: -29                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -70                 | Program output: -70                
Correct output: -79                 | Program output: -79                
Correct output: -63                 | Program output: -63                
Correct output: -62                 | Program output: -62                
Correct output: -83                 | Program output: -83                
Correct output: -97                 | Program output: -97                
Correct output: -64                 | Program output: -64                
Correct output: -67                 | Program output: -67                
Correct output: -87                 | Program output: -87                
Correct output: -36                 | Program output: -36                
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -22                 | Program output: -22                
Correct output: -40                 | Program output: -40                
Correct output: -56                 | Program output: -56                
Correct output: -70                 | Program output: -70                
Correct output: -92                 | Program output: -92                
Correct output: -25                 | Program output: -25                
Correct output: -95                 | Program output: -95                
Correct output: -73                 | Program output: -73                
Correct output: -22                 | Program output: -22                
Correct output: -45                 | Program output: -45                
Correct output: -57                 | Program output: -57                
Correct output: 52                  | Program output: 52                 
Correct output: -49                 | Program output: -49                
;;******************************
