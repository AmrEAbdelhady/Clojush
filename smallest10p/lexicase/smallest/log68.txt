Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 2000
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[34 -67 -67 -67] -67] [[-50 93 93 93] -50] [[54 54 -79 54] -79] [[-50 2 -50 -50] -50] [[-40 88 88 88] -40] [[40 61 61 61] 40] [[68 68 68 -95] -95] [[-77 -77 -77 -7] -77] [[-16 -16 47 -16] -16] [[42 -24 42 42] -24] [(67 67 67 67) 67] [(-10 -10 -10 -10) -10] [(21 21 21 21) 21] [(-9 -9 -9 -9) -9] [(-18 -18 -18 -18) -18] [(52 12 17 14) 12] [(92 25 2 43) 2] [(42 27 82 8) 8] [(61 3 51 74) 3] [(34 81 11 34) 11] [(78 63 23 44) 23] [(37 32 90 67) 32] [(29 99 92 95) 29] [(32 95 18 3) 3] [(35 11 66 63) 11] [(81 8 18 99) 8] [(58 91 43 4) 4] [(95 91 3 33) 3] [(74 58 64 29) 29] [(25 69 34 98) 25] [(15 53 45 25) 15] [(12 83 38 42) 12] [(36 21 62 23) 21] [(58 38 96 48) 38] [(95 7 94 69) 7] [(27 15 -50 -90) -90] [(12 72 73 93) 12] [(95 -26 -94 -66) -94] [(1 -24 73 4) -24] [(-100 -64 -40 93) -100] [(-11 -23 61 33) -23] [(12 -15 71 87) -15] [(-50 91 -86 54) -86] [(95 17 77 -85) -85] [(20 47 -94 -3) -94] [(-2 -29 25 77) -29] [(-20 47 66 35) -20] [(67 67 -68 56) -68] [(-47 2 23 -94) -94] [(41 51 16 18) 16] [(57 37 94 5) 5] [(17 83 13 62) 13] [(92 75 20 -49) -49] [(-44 26 9 -5) -44] [(-10 40 -52 -31) -52] [(97 65 -85 -7) -85] [(-35 -22 41 -58) -58] [(70 11 -9 -22) -22] [(67 -97 -87 -91) -97] [(99 -83 -32 93) -83] [(-12 -58 -60 -11) -60] [(-4 32 37 -5) -5] [(-51 5 -94 58) -94] [(-68 62 58 -18) -68] [(-89 77 62 -90) -90] [(3 -93 -57 -39) -93] [(-39 22 20 39) -39] [(72 24 -53 -23) -53] [(-40 -82 59 61) -82] [(80 -94 -69 94) -94] [(10 -78 -34 73) -78] [(-37 -53 -27 72) -53] [(-44 65 89 25) -44] [(87 -92 34 -57) -92] [(81 14 -94 -15) -94] [(-88 85 -28 43) -88] [(70 9 -57 32) -57] [(-29 55 71 -5) -29] [(-51 -34 -6 -60) -60] [(2 -80 -46 -8) -80] [(44 -87 74 -92) -92] [(47 -74 22 -8) -74] [(52 -57 -76 -26) -76] [(-7 -80 -3 -29) -80] [(-85 -44 -94 -46) -94] [(58 -24 53 -33) -33] [(-59 40 -31 -37) -59] [(-73 31 -50 85) -73] [(-76 66 19 -14) -76] [(-6 55 -86 96) -86] [(55 -46 -96 -17) -96] [(-37 -60 52 4) -60] [(-74 100 -47 -41) -74] [(100 -44 -8 49) -44] [(26 -8 -74 -36) -74])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[34 -67 -67 -67] -67]
Train Case:   6 | Input/Output: [[-50 93 93 93] -50]
Train Case:   7 | Input/Output: [[54 54 -79 54] -79]
Train Case:   8 | Input/Output: [[-50 2 -50 -50] -50]
Train Case:   9 | Input/Output: [[-40 88 88 88] -40]
Train Case:  10 | Input/Output: [[40 61 61 61] 40]
Train Case:  11 | Input/Output: [[68 68 68 -95] -95]
Train Case:  12 | Input/Output: [[-77 -77 -77 -7] -77]
Train Case:  13 | Input/Output: [[-16 -16 47 -16] -16]
Train Case:  14 | Input/Output: [[42 -24 42 42] -24]
Train Case:  15 | Input/Output: [(67 67 67 67) 67]
Train Case:  16 | Input/Output: [(-10 -10 -10 -10) -10]
Train Case:  17 | Input/Output: [(21 21 21 21) 21]
Train Case:  18 | Input/Output: [(-9 -9 -9 -9) -9]
Train Case:  19 | Input/Output: [(-18 -18 -18 -18) -18]
Train Case:  20 | Input/Output: [(52 12 17 14) 12]
Train Case:  21 | Input/Output: [(92 25 2 43) 2]
Train Case:  22 | Input/Output: [(42 27 82 8) 8]
Train Case:  23 | Input/Output: [(61 3 51 74) 3]
Train Case:  24 | Input/Output: [(34 81 11 34) 11]
Train Case:  25 | Input/Output: [(78 63 23 44) 23]
Train Case:  26 | Input/Output: [(37 32 90 67) 32]
Train Case:  27 | Input/Output: [(29 99 92 95) 29]
Train Case:  28 | Input/Output: [(32 95 18 3) 3]
Train Case:  29 | Input/Output: [(35 11 66 63) 11]
Train Case:  30 | Input/Output: [(81 8 18 99) 8]
Train Case:  31 | Input/Output: [(58 91 43 4) 4]
Train Case:  32 | Input/Output: [(95 91 3 33) 3]
Train Case:  33 | Input/Output: [(74 58 64 29) 29]
Train Case:  34 | Input/Output: [(25 69 34 98) 25]
Train Case:  35 | Input/Output: [(15 53 45 25) 15]
Train Case:  36 | Input/Output: [(12 83 38 42) 12]
Train Case:  37 | Input/Output: [(36 21 62 23) 21]
Train Case:  38 | Input/Output: [(58 38 96 48) 38]
Train Case:  39 | Input/Output: [(95 7 94 69) 7]
Train Case:  40 | Input/Output: [(27 15 -50 -90) -90]
Train Case:  41 | Input/Output: [(12 72 73 93) 12]
Train Case:  42 | Input/Output: [(95 -26 -94 -66) -94]
Train Case:  43 | Input/Output: [(1 -24 73 4) -24]
Train Case:  44 | Input/Output: [(-100 -64 -40 93) -100]
Train Case:  45 | Input/Output: [(-11 -23 61 33) -23]
Train Case:  46 | Input/Output: [(12 -15 71 87) -15]
Train Case:  47 | Input/Output: [(-50 91 -86 54) -86]
Train Case:  48 | Input/Output: [(95 17 77 -85) -85]
Train Case:  49 | Input/Output: [(20 47 -94 -3) -94]
Train Case:  50 | Input/Output: [(-2 -29 25 77) -29]
Train Case:  51 | Input/Output: [(-20 47 66 35) -20]
Train Case:  52 | Input/Output: [(67 67 -68 56) -68]
Train Case:  53 | Input/Output: [(-47 2 23 -94) -94]
Train Case:  54 | Input/Output: [(41 51 16 18) 16]
Train Case:  55 | Input/Output: [(57 37 94 5) 5]
Train Case:  56 | Input/Output: [(17 83 13 62) 13]
Train Case:  57 | Input/Output: [(92 75 20 -49) -49]
Train Case:  58 | Input/Output: [(-44 26 9 -5) -44]
Train Case:  59 | Input/Output: [(-10 40 -52 -31) -52]
Train Case:  60 | Input/Output: [(97 65 -85 -7) -85]
Train Case:  61 | Input/Output: [(-35 -22 41 -58) -58]
Train Case:  62 | Input/Output: [(70 11 -9 -22) -22]
Train Case:  63 | Input/Output: [(67 -97 -87 -91) -97]
Train Case:  64 | Input/Output: [(99 -83 -32 93) -83]
Train Case:  65 | Input/Output: [(-12 -58 -60 -11) -60]
Train Case:  66 | Input/Output: [(-4 32 37 -5) -5]
Train Case:  67 | Input/Output: [(-51 5 -94 58) -94]
Train Case:  68 | Input/Output: [(-68 62 58 -18) -68]
Train Case:  69 | Input/Output: [(-89 77 62 -90) -90]
Train Case:  70 | Input/Output: [(3 -93 -57 -39) -93]
Train Case:  71 | Input/Output: [(-39 22 20 39) -39]
Train Case:  72 | Input/Output: [(72 24 -53 -23) -53]
Train Case:  73 | Input/Output: [(-40 -82 59 61) -82]
Train Case:  74 | Input/Output: [(80 -94 -69 94) -94]
Train Case:  75 | Input/Output: [(10 -78 -34 73) -78]
Train Case:  76 | Input/Output: [(-37 -53 -27 72) -53]
Train Case:  77 | Input/Output: [(-44 65 89 25) -44]
Train Case:  78 | Input/Output: [(87 -92 34 -57) -92]
Train Case:  79 | Input/Output: [(81 14 -94 -15) -94]
Train Case:  80 | Input/Output: [(-88 85 -28 43) -88]
Train Case:  81 | Input/Output: [(70 9 -57 32) -57]
Train Case:  82 | Input/Output: [(-29 55 71 -5) -29]
Train Case:  83 | Input/Output: [(-51 -34 -6 -60) -60]
Train Case:  84 | Input/Output: [(2 -80 -46 -8) -80]
Train Case:  85 | Input/Output: [(44 -87 74 -92) -92]
Train Case:  86 | Input/Output: [(47 -74 22 -8) -74]
Train Case:  87 | Input/Output: [(52 -57 -76 -26) -76]
Train Case:  88 | Input/Output: [(-7 -80 -3 -29) -80]
Train Case:  89 | Input/Output: [(-85 -44 -94 -46) -94]
Train Case:  90 | Input/Output: [(58 -24 53 -33) -33]
Train Case:  91 | Input/Output: [(-59 40 -31 -37) -59]
Train Case:  92 | Input/Output: [(-73 31 -50 85) -73]
Train Case:  93 | Input/Output: [(-76 66 19 -14) -76]
Train Case:  94 | Input/Output: [(-6 55 -86 96) -86]
Train Case:  95 | Input/Output: [(55 -46 -96 -17) -96]
Train Case:  96 | Input/Output: [(-37 -60 52 4) -60]
Train Case:  97 | Input/Output: [(-74 100 -47 -41) -74]
Train Case:  98 | Input/Output: [(100 -44 -8 49) -44]
Train Case:  99 | Input/Output: [(26 -8 -74 -36) -74]
Test Case:   0 | Input/Output: [[-38 -3 -3 -3] -38]
Test Case:   1 | Input/Output: [[36 36 36 41] 36]
Test Case:   2 | Input/Output: [[78 34 34 34] 34]
Test Case:   3 | Input/Output: [[56 56 56 14] 14]
Test Case:   4 | Input/Output: [[89 89 -34 89] -34]
Test Case:   5 | Input/Output: [[-94 -94 -12 -94] -94]
Test Case:   6 | Input/Output: [[63 63 63 -82] -82]
Test Case:   7 | Input/Output: [[47 9 9 9] 9]
Test Case:   8 | Input/Output: [[14 14 14 73] 14]
Test Case:   9 | Input/Output: [[-31 -31 -31 -40] -40]
Test Case:  10 | Input/Output: [[90 90 72 90] 72]
Test Case:  11 | Input/Output: [[1 1 -25 1] -25]
Test Case:  12 | Input/Output: [[-64 -64 -64 -22] -64]
Test Case:  13 | Input/Output: [[-100 18 -100 -100] -100]
Test Case:  14 | Input/Output: [[-57 -57 -57 -19] -57]
Test Case:  15 | Input/Output: [[12 80 12 12] 12]
Test Case:  16 | Input/Output: [[35 35 58 35] 35]
Test Case:  17 | Input/Output: [[97 -12 -12 -12] -12]
Test Case:  18 | Input/Output: [[34 -77 34 34] -77]
Test Case:  19 | Input/Output: [[82 10 10 10] 10]
Test Case:  20 | Input/Output: [[15 15 -57 15] -57]
Test Case:  21 | Input/Output: [[-30 -30 -45 -30] -45]
Test Case:  22 | Input/Output: [[98 80 80 80] 80]
Test Case:  23 | Input/Output: [[73 73 12 73] 12]
Test Case:  24 | Input/Output: [[0 0 -93 0] -93]
Test Case:  25 | Input/Output: [[20 20 20 56] 20]
Test Case:  26 | Input/Output: [[-27 -11 -11 -11] -27]
Test Case:  27 | Input/Output: [[-50 -50 -50 53] -50]
Test Case:  28 | Input/Output: [[9 48 48 48] 9]
Test Case:  29 | Input/Output: [[-82 52 -82 -82] -82]
Test Case:  30 | Input/Output: [[99 -39 99 99] -39]
Test Case:  31 | Input/Output: [[27 -6 27 27] -6]
Test Case:  32 | Input/Output: [[-91 92 -91 -91] -91]
Test Case:  33 | Input/Output: [[91 -3 91 91] -3]
Test Case:  34 | Input/Output: [[43 43 -29 43] -29]
Test Case:  35 | Input/Output: [[88 84 84 84] 84]
Test Case:  36 | Input/Output: [[-24 -24 -49 -24] -49]
Test Case:  37 | Input/Output: [[0 0 0 -93] -93]
Test Case:  38 | Input/Output: [[20 66 66 66] 20]
Test Case:  39 | Input/Output: [[-58 -58 69 -58] -58]
Test Case:  40 | Input/Output: [[-68 44 -68 -68] -68]
Test Case:  41 | Input/Output: [[66 61 61 61] 61]
Test Case:  42 | Input/Output: [[100 100 88 100] 88]
Test Case:  43 | Input/Output: [[5 5 5 24] 5]
Test Case:  44 | Input/Output: [[35 -31 -31 -31] -31]
Test Case:  45 | Input/Output: [[25 82 25 25] 25]
Test Case:  46 | Input/Output: [[66 66 66 78] 66]
Test Case:  47 | Input/Output: [[-13 5 -13 -13] -13]
Test Case:  48 | Input/Output: [[-20 -20 -20 -50] -50]
Test Case:  49 | Input/Output: [[73 43 73 73] 43]
Test Case:  50 | Input/Output: [[-49 100 -49 -49] -49]
Test Case:  51 | Input/Output: [[-94 -94 -94 28] -94]
Test Case:  52 | Input/Output: [[-15 -88 -15 -15] -88]
Test Case:  53 | Input/Output: [[91 68 68 68] 68]
Test Case:  54 | Input/Output: [[-29 -42 -42 -42] -42]
Test Case:  55 | Input/Output: [[31 53 53 53] 31]
Test Case:  56 | Input/Output: [[38 43 38 38] 38]
Test Case:  57 | Input/Output: [[-72 -72 -72 -99] -99]
Test Case:  58 | Input/Output: [[-48 78 -48 -48] -48]
Test Case:  59 | Input/Output: [[9 9 9 33] 9]
Test Case:  60 | Input/Output: [[-74 -61 -74 -74] -74]
Test Case:  61 | Input/Output: [[11 11 11 -15] -15]
Test Case:  62 | Input/Output: [[96 96 96 -93] -93]
Test Case:  63 | Input/Output: [[74 -18 -18 -18] -18]
Test Case:  64 | Input/Output: [[29 29 -31 29] -31]
Test Case:  65 | Input/Output: [[-33 -33 -33 47] -33]
Test Case:  66 | Input/Output: [[43 43 -2 43] -2]
Test Case:  67 | Input/Output: [[-42 -42 75 -42] -42]
Test Case:  68 | Input/Output: [[-76 74 -76 -76] -76]
Test Case:  69 | Input/Output: [[-19 79 -19 -19] -19]
Test Case:  70 | Input/Output: [[-25 -48 -48 -48] -48]
Test Case:  71 | Input/Output: [[20 20 20 -66] -66]
Test Case:  72 | Input/Output: [[0 0 0 71] 0]
Test Case:  73 | Input/Output: [[-28 77 77 77] -28]
Test Case:  74 | Input/Output: [[-68 48 48 48] -68]
Test Case:  75 | Input/Output: [[-64 -41 -64 -64] -64]
Test Case:  76 | Input/Output: [[-84 -84 -84 78] -84]
Test Case:  77 | Input/Output: [[92 78 92 92] 78]
Test Case:  78 | Input/Output: [[42 42 42 -57] -57]
Test Case:  79 | Input/Output: [[9 -25 -25 -25] -25]
Test Case:  80 | Input/Output: [[-45 -45 -45 62] -45]
Test Case:  81 | Input/Output: [[30 -82 -82 -82] -82]
Test Case:  82 | Input/Output: [[-98 -26 -98 -98] -98]
Test Case:  83 | Input/Output: [[1 1 1 -97] -97]
Test Case:  84 | Input/Output: [[54 100 100 100] 54]
Test Case:  85 | Input/Output: [[77 -63 -63 -63] -63]
Test Case:  86 | Input/Output: [[42 42 -71 42] -71]
Test Case:  87 | Input/Output: [[30 30 30 -12] -12]
Test Case:  88 | Input/Output: [[-31 -31 -74 -31] -74]
Test Case:  89 | Input/Output: [[-40 -66 -40 -40] -66]
Test Case:  90 | Input/Output: [[80 -29 -29 -29] -29]
Test Case:  91 | Input/Output: [[63 63 -38 63] -38]
Test Case:  92 | Input/Output: [[-76 -76 40 -76] -76]
Test Case:  93 | Input/Output: [[63 63 81 63] 63]
Test Case:  94 | Input/Output: [[-35 -19 -35 -35] -35]
Test Case:  95 | Input/Output: [[-53 -53 39 -53] -53]
Test Case:  96 | Input/Output: [[79 79 -58 79] -58]
Test Case:  97 | Input/Output: [[-24 57 57 57] -24]
Test Case:  98 | Input/Output: [[-54 -54 66 -54] -54]
Test Case:  99 | Input/Output: [[31 77 31 31] 31]
Test Case: 100 | Input/Output: [(5 5 5 5) 5]
Test Case: 101 | Input/Output: [(-10 -10 -10 -10) -10]
Test Case: 102 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 103 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 104 | Input/Output: [(8 8 8 8) 8]
Test Case: 105 | Input/Output: [(97 97 97 97) 97]
Test Case: 106 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 107 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 108 | Input/Output: [(78 78 78 78) 78]
Test Case: 109 | Input/Output: [(59 59 59 59) 59]
Test Case: 110 | Input/Output: [(-72 -72 -72 -72) -72]
Test Case: 111 | Input/Output: [(89 89 89 89) 89]
Test Case: 112 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 113 | Input/Output: [(58 58 58 58) 58]
Test Case: 114 | Input/Output: [(90 90 90 90) 90]
Test Case: 115 | Input/Output: [(52 52 52 52) 52]
Test Case: 116 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 117 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 118 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 119 | Input/Output: [(93 93 93 93) 93]
Test Case: 120 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 121 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 122 | Input/Output: [(67 67 67 67) 67]
Test Case: 123 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 124 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 125 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 126 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 127 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 128 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 129 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 130 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 131 | Input/Output: [(-83 -83 -83 -83) -83]
Test Case: 132 | Input/Output: [(67 67 67 67) 67]
Test Case: 133 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 134 | Input/Output: [(90 90 90 90) 90]
Test Case: 135 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 136 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 137 | Input/Output: [(57 57 57 57) 57]
Test Case: 138 | Input/Output: [(25 25 25 25) 25]
Test Case: 139 | Input/Output: [(-41 -41 -41 -41) -41]
Test Case: 140 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 141 | Input/Output: [(82 82 82 82) 82]
Test Case: 142 | Input/Output: [(94 94 94 94) 94]
Test Case: 143 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 144 | Input/Output: [(42 42 42 42) 42]
Test Case: 145 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 146 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 147 | Input/Output: [(-9 -9 -9 -9) -9]
Test Case: 148 | Input/Output: [(19 19 19 19) 19]
Test Case: 149 | Input/Output: [(97 97 97 97) 97]
Test Case: 150 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 151 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 152 | Input/Output: [(15 15 15 15) 15]
Test Case: 153 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 154 | Input/Output: [(43 43 43 43) 43]
Test Case: 155 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 156 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 157 | Input/Output: [(34 34 34 34) 34]
Test Case: 158 | Input/Output: [(77 77 77 77) 77]
Test Case: 159 | Input/Output: [(53 53 53 53) 53]
Test Case: 160 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 161 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 162 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 163 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 164 | Input/Output: [(43 43 43 43) 43]
Test Case: 165 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 166 | Input/Output: [(-47 -47 -47 -47) -47]
Test Case: 167 | Input/Output: [(0 0 0 0) 0]
Test Case: 168 | Input/Output: [(80 80 80 80) 80]
Test Case: 169 | Input/Output: [(92 92 92 92) 92]
Test Case: 170 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 171 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 172 | Input/Output: [(-51 -51 -51 -51) -51]
Test Case: 173 | Input/Output: [(59 59 59 59) 59]
Test Case: 174 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 175 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 176 | Input/Output: [(-74 -74 -74 -74) -74]
Test Case: 177 | Input/Output: [(-50 -50 -50 -50) -50]
Test Case: 178 | Input/Output: [(52 52 52 52) 52]
Test Case: 179 | Input/Output: [(32 32 32 32) 32]
Test Case: 180 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 181 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 182 | Input/Output: [(54 54 54 54) 54]
Test Case: 183 | Input/Output: [(48 48 48 48) 48]
Test Case: 184 | Input/Output: [(0 0 0 0) 0]
Test Case: 185 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 186 | Input/Output: [(-67 -67 -67 -67) -67]
Test Case: 187 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 188 | Input/Output: [(66 66 66 66) 66]
Test Case: 189 | Input/Output: [(54 54 54 54) 54]
Test Case: 190 | Input/Output: [(28 28 28 28) 28]
Test Case: 191 | Input/Output: [(65 65 65 65) 65]
Test Case: 192 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 193 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 194 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 195 | Input/Output: [(6 6 6 6) 6]
Test Case: 196 | Input/Output: [(83 83 83 83) 83]
Test Case: 197 | Input/Output: [(-71 -71 -71 -71) -71]
Test Case: 198 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 199 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 200 | Input/Output: [(24 65 59 24) 24]
Test Case: 201 | Input/Output: [(43 100 27 93) 27]
Test Case: 202 | Input/Output: [(12 52 89 0) 0]
Test Case: 203 | Input/Output: [(38 67 4 77) 4]
Test Case: 204 | Input/Output: [(93 51 41 48) 41]
Test Case: 205 | Input/Output: [(23 94 41 49) 23]
Test Case: 206 | Input/Output: [(84 57 36 76) 36]
Test Case: 207 | Input/Output: [(4 56 81 45) 4]
Test Case: 208 | Input/Output: [(94 88 50 83) 50]
Test Case: 209 | Input/Output: [(58 58 10 64) 10]
Test Case: 210 | Input/Output: [(3 9 71 31) 3]
Test Case: 211 | Input/Output: [(31 37 88 93) 31]
Test Case: 212 | Input/Output: [(34 45 42 5) 5]
Test Case: 213 | Input/Output: [(2 92 95 28) 2]
Test Case: 214 | Input/Output: [(26 56 90 44) 26]
Test Case: 215 | Input/Output: [(26 70 26 29) 26]
Test Case: 216 | Input/Output: [(33 72 56 64) 33]
Test Case: 217 | Input/Output: [(13 13 58 28) 13]
Test Case: 218 | Input/Output: [(76 19 22 28) 19]
Test Case: 219 | Input/Output: [(37 91 44 60) 37]
Test Case: 220 | Input/Output: [(72 77 38 0) 0]
Test Case: 221 | Input/Output: [(43 28 26 66) 26]
Test Case: 222 | Input/Output: [(61 17 55 0) 0]
Test Case: 223 | Input/Output: [(45 47 47 87) 45]
Test Case: 224 | Input/Output: [(19 8 88 87) 8]
Test Case: 225 | Input/Output: [(25 65 36 84) 25]
Test Case: 226 | Input/Output: [(96 56 5 46) 5]
Test Case: 227 | Input/Output: [(91 42 25 63) 25]
Test Case: 228 | Input/Output: [(92 58 39 62) 39]
Test Case: 229 | Input/Output: [(37 67 26 13) 13]
Test Case: 230 | Input/Output: [(87 89 49 1) 1]
Test Case: 231 | Input/Output: [(80 4 69 49) 4]
Test Case: 232 | Input/Output: [(5 22 87 39) 5]
Test Case: 233 | Input/Output: [(90 25 63 17) 17]
Test Case: 234 | Input/Output: [(41 57 12 8) 8]
Test Case: 235 | Input/Output: [(76 79 25 17) 17]
Test Case: 236 | Input/Output: [(62 2 80 45) 2]
Test Case: 237 | Input/Output: [(74 3 33 88) 3]
Test Case: 238 | Input/Output: [(83 93 61 58) 58]
Test Case: 239 | Input/Output: [(94 77 4 68) 4]
Test Case: 240 | Input/Output: [(57 12 64 74) 12]
Test Case: 241 | Input/Output: [(27 86 78 28) 27]
Test Case: 242 | Input/Output: [(66 42 96 30) 30]
Test Case: 243 | Input/Output: [(76 57 55 83) 55]
Test Case: 244 | Input/Output: [(21 4 61 2) 2]
Test Case: 245 | Input/Output: [(7 99 46 10) 7]
Test Case: 246 | Input/Output: [(58 56 52 92) 52]
Test Case: 247 | Input/Output: [(4 0 24 53) 0]
Test Case: 248 | Input/Output: [(49 98 6 51) 6]
Test Case: 249 | Input/Output: [(7 91 90 29) 7]
Test Case: 250 | Input/Output: [(52 4 98 96) 4]
Test Case: 251 | Input/Output: [(51 37 76 93) 37]
Test Case: 252 | Input/Output: [(2 19 12 20) 2]
Test Case: 253 | Input/Output: [(8 59 35 52) 8]
Test Case: 254 | Input/Output: [(84 24 15 62) 15]
Test Case: 255 | Input/Output: [(97 29 95 86) 29]
Test Case: 256 | Input/Output: [(71 71 72 81) 71]
Test Case: 257 | Input/Output: [(20 32 62 22) 20]
Test Case: 258 | Input/Output: [(56 47 37 60) 37]
Test Case: 259 | Input/Output: [(74 43 48 21) 21]
Test Case: 260 | Input/Output: [(86 94 66 8) 8]
Test Case: 261 | Input/Output: [(18 28 23 72) 18]
Test Case: 262 | Input/Output: [(86 69 87 3) 3]
Test Case: 263 | Input/Output: [(20 56 40 7) 7]
Test Case: 264 | Input/Output: [(46 93 35 43) 35]
Test Case: 265 | Input/Output: [(97 38 60 86) 38]
Test Case: 266 | Input/Output: [(46 80 44 61) 44]
Test Case: 267 | Input/Output: [(92 32 36 19) 19]
Test Case: 268 | Input/Output: [(25 37 36 76) 25]
Test Case: 269 | Input/Output: [(9 80 76 78) 9]
Test Case: 270 | Input/Output: [(49 19 52 68) 19]
Test Case: 271 | Input/Output: [(64 81 17 47) 17]
Test Case: 272 | Input/Output: [(96 98 18 26) 18]
Test Case: 273 | Input/Output: [(68 26 76 12) 12]
Test Case: 274 | Input/Output: [(32 16 28 77) 16]
Test Case: 275 | Input/Output: [(49 31 76 39) 31]
Test Case: 276 | Input/Output: [(45 64 90 30) 30]
Test Case: 277 | Input/Output: [(46 84 60 27) 27]
Test Case: 278 | Input/Output: [(99 91 78 41) 41]
Test Case: 279 | Input/Output: [(92 55 92 79) 55]
Test Case: 280 | Input/Output: [(11 2 60 47) 2]
Test Case: 281 | Input/Output: [(7 41 87 55) 7]
Test Case: 282 | Input/Output: [(12 22 82 52) 12]
Test Case: 283 | Input/Output: [(56 99 63 6) 6]
Test Case: 284 | Input/Output: [(13 80 82 78) 13]
Test Case: 285 | Input/Output: [(20 5 92 49) 5]
Test Case: 286 | Input/Output: [(97 79 61 91) 61]
Test Case: 287 | Input/Output: [(39 5 53 78) 5]
Test Case: 288 | Input/Output: [(74 52 70 74) 52]
Test Case: 289 | Input/Output: [(28 46 82 75) 28]
Test Case: 290 | Input/Output: [(15 73 82 1) 1]
Test Case: 291 | Input/Output: [(6 1 27 10) 1]
Test Case: 292 | Input/Output: [(16 59 16 44) 16]
Test Case: 293 | Input/Output: [(46 0 71 45) 0]
Test Case: 294 | Input/Output: [(15 51 55 33) 15]
Test Case: 295 | Input/Output: [(30 90 90 75) 30]
Test Case: 296 | Input/Output: [(95 84 23 67) 23]
Test Case: 297 | Input/Output: [(43 71 25 65) 25]
Test Case: 298 | Input/Output: [(65 98 58 51) 51]
Test Case: 299 | Input/Output: [(30 48 4 16) 4]
Test Case: 300 | Input/Output: [(92 27 5 71) 5]
Test Case: 301 | Input/Output: [(24 63 27 20) 20]
Test Case: 302 | Input/Output: [(48 93 92 70) 48]
Test Case: 303 | Input/Output: [(53 19 83 59) 19]
Test Case: 304 | Input/Output: [(10 58 25 78) 10]
Test Case: 305 | Input/Output: [(96 40 42 73) 40]
Test Case: 306 | Input/Output: [(57 87 31 96) 31]
Test Case: 307 | Input/Output: [(1 6 11 81) 1]
Test Case: 308 | Input/Output: [(96 0 100 5) 0]
Test Case: 309 | Input/Output: [(1 68 20 0) 0]
Test Case: 310 | Input/Output: [(94 21 7 22) 7]
Test Case: 311 | Input/Output: [(48 74 45 64) 45]
Test Case: 312 | Input/Output: [(10 45 72 39) 10]
Test Case: 313 | Input/Output: [(43 52 76 24) 24]
Test Case: 314 | Input/Output: [(55 24 6 45) 6]
Test Case: 315 | Input/Output: [(90 36 25 54) 25]
Test Case: 316 | Input/Output: [(3 17 37 13) 3]
Test Case: 317 | Input/Output: [(23 27 67 14) 14]
Test Case: 318 | Input/Output: [(62 20 56 92) 20]
Test Case: 319 | Input/Output: [(60 84 67 95) 60]
Test Case: 320 | Input/Output: [(3 37 88 46) 3]
Test Case: 321 | Input/Output: [(69 81 22 61) 22]
Test Case: 322 | Input/Output: [(48 94 53 99) 48]
Test Case: 323 | Input/Output: [(55 12 30 83) 12]
Test Case: 324 | Input/Output: [(98 17 70 44) 17]
Test Case: 325 | Input/Output: [(59 26 14 45) 14]
Test Case: 326 | Input/Output: [(28 14 93 22) 14]
Test Case: 327 | Input/Output: [(9 3 57 43) 3]
Test Case: 328 | Input/Output: [(64 64 83 50) 50]
Test Case: 329 | Input/Output: [(98 78 65 9) 9]
Test Case: 330 | Input/Output: [(86 8 81 0) 0]
Test Case: 331 | Input/Output: [(92 23 31 66) 23]
Test Case: 332 | Input/Output: [(12 18 53 96) 12]
Test Case: 333 | Input/Output: [(62 28 14 55) 14]
Test Case: 334 | Input/Output: [(50 80 76 42) 42]
Test Case: 335 | Input/Output: [(22 64 8 34) 8]
Test Case: 336 | Input/Output: [(30 50 98 96) 30]
Test Case: 337 | Input/Output: [(34 23 5 42) 5]
Test Case: 338 | Input/Output: [(61 80 24 1) 1]
Test Case: 339 | Input/Output: [(19 27 87 43) 19]
Test Case: 340 | Input/Output: [(66 82 97 49) 49]
Test Case: 341 | Input/Output: [(75 21 67 66) 21]
Test Case: 342 | Input/Output: [(25 96 97 96) 25]
Test Case: 343 | Input/Output: [(80 19 9 64) 9]
Test Case: 344 | Input/Output: [(75 77 1 11) 1]
Test Case: 345 | Input/Output: [(56 37 22 9) 9]
Test Case: 346 | Input/Output: [(44 82 45 37) 37]
Test Case: 347 | Input/Output: [(18 7 47 43) 7]
Test Case: 348 | Input/Output: [(21 10 40 13) 10]
Test Case: 349 | Input/Output: [(64 85 86 24) 24]
Test Case: 350 | Input/Output: [(13 21 9 68) 9]
Test Case: 351 | Input/Output: [(28 10 12 68) 10]
Test Case: 352 | Input/Output: [(65 74 88 67) 65]
Test Case: 353 | Input/Output: [(78 49 87 33) 33]
Test Case: 354 | Input/Output: [(56 94 61 2) 2]
Test Case: 355 | Input/Output: [(49 83 17 60) 17]
Test Case: 356 | Input/Output: [(56 89 42 62) 42]
Test Case: 357 | Input/Output: [(19 47 93 100) 19]
Test Case: 358 | Input/Output: [(64 77 68 20) 20]
Test Case: 359 | Input/Output: [(31 5 36 87) 5]
Test Case: 360 | Input/Output: [(60 91 41 86) 41]
Test Case: 361 | Input/Output: [(78 45 32 58) 32]
Test Case: 362 | Input/Output: [(69 71 75 8) 8]
Test Case: 363 | Input/Output: [(94 11 93 19) 11]
Test Case: 364 | Input/Output: [(35 35 79 9) 9]
Test Case: 365 | Input/Output: [(79 68 77 41) 41]
Test Case: 366 | Input/Output: [(92 42 49 89) 42]
Test Case: 367 | Input/Output: [(4 78 28 1) 1]
Test Case: 368 | Input/Output: [(68 32 41 53) 32]
Test Case: 369 | Input/Output: [(99 6 74 19) 6]
Test Case: 370 | Input/Output: [(54 24 58 14) 14]
Test Case: 371 | Input/Output: [(47 96 73 70) 47]
Test Case: 372 | Input/Output: [(67 72 61 37) 37]
Test Case: 373 | Input/Output: [(73 48 95 12) 12]
Test Case: 374 | Input/Output: [(56 9 81 69) 9]
Test Case: 375 | Input/Output: [(33 28 84 60) 28]
Test Case: 376 | Input/Output: [(37 17 38 63) 17]
Test Case: 377 | Input/Output: [(32 35 49 1) 1]
Test Case: 378 | Input/Output: [(59 97 51 35) 35]
Test Case: 379 | Input/Output: [(35 50 78 26) 26]
Test Case: 380 | Input/Output: [(86 46 21 10) 10]
Test Case: 381 | Input/Output: [(24 42 51 14) 14]
Test Case: 382 | Input/Output: [(64 76 13 56) 13]
Test Case: 383 | Input/Output: [(61 34 56 36) 34]
Test Case: 384 | Input/Output: [(93 27 48 49) 27]
Test Case: 385 | Input/Output: [(62 26 62 85) 26]
Test Case: 386 | Input/Output: [(92 0 19 1) 0]
Test Case: 387 | Input/Output: [(36 79 31 3) 3]
Test Case: 388 | Input/Output: [(88 30 49 5) 5]
Test Case: 389 | Input/Output: [(62 82 20 90) 20]
Test Case: 390 | Input/Output: [(41 4 67 20) 4]
Test Case: 391 | Input/Output: [(14 67 56 16) 14]
Test Case: 392 | Input/Output: [(41 40 85 95) 40]
Test Case: 393 | Input/Output: [(12 78 81 45) 12]
Test Case: 394 | Input/Output: [(100 100 72 89) 72]
Test Case: 395 | Input/Output: [(69 46 23 67) 23]
Test Case: 396 | Input/Output: [(22 90 21 44) 21]
Test Case: 397 | Input/Output: [(21 39 84 78) 21]
Test Case: 398 | Input/Output: [(24 99 37 19) 19]
Test Case: 399 | Input/Output: [(26 28 11 99) 11]
Test Case: 400 | Input/Output: [(84 50 30 47) 30]
Test Case: 401 | Input/Output: [(-3 40 -37 28) -37]
Test Case: 402 | Input/Output: [(61 64 -33 -37) -37]
Test Case: 403 | Input/Output: [(25 57 93 -63) -63]
Test Case: 404 | Input/Output: [(-66 -71 -50 35) -71]
Test Case: 405 | Input/Output: [(-12 24 71 2) -12]
Test Case: 406 | Input/Output: [(-50 -7 -81 26) -81]
Test Case: 407 | Input/Output: [(95 87 1 63) 1]
Test Case: 408 | Input/Output: [(-51 89 62 51) -51]
Test Case: 409 | Input/Output: [(-59 -74 -33 -86) -86]
Test Case: 410 | Input/Output: [(-97 5 -57 7) -97]
Test Case: 411 | Input/Output: [(-100 18 -39 37) -100]
Test Case: 412 | Input/Output: [(62 -51 -17 -4) -51]
Test Case: 413 | Input/Output: [(73 -94 70 -13) -94]
Test Case: 414 | Input/Output: [(97 42 -89 22) -89]
Test Case: 415 | Input/Output: [(57 -14 -80 16) -80]
Test Case: 416 | Input/Output: [(-44 -88 -32 26) -88]
Test Case: 417 | Input/Output: [(-57 71 24 -75) -75]
Test Case: 418 | Input/Output: [(-88 -22 97 -91) -91]
Test Case: 419 | Input/Output: [(-4 -76 50 5) -76]
Test Case: 420 | Input/Output: [(-68 13 17 50) -68]
Test Case: 421 | Input/Output: [(-66 54 -34 -52) -66]
Test Case: 422 | Input/Output: [(-33 -98 -41 12) -98]
Test Case: 423 | Input/Output: [(18 -71 -52 4) -71]
Test Case: 424 | Input/Output: [(28 28 -94 73) -94]
Test Case: 425 | Input/Output: [(-20 12 -54 25) -54]
Test Case: 426 | Input/Output: [(-39 -24 89 -66) -66]
Test Case: 427 | Input/Output: [(63 35 -1 70) -1]
Test Case: 428 | Input/Output: [(-69 -51 50 -18) -69]
Test Case: 429 | Input/Output: [(-27 6 34 81) -27]
Test Case: 430 | Input/Output: [(-70 59 -52 34) -70]
Test Case: 431 | Input/Output: [(-37 -84 -43 -67) -84]
Test Case: 432 | Input/Output: [(-10 -49 46 99) -49]
Test Case: 433 | Input/Output: [(-32 46 13 63) -32]
Test Case: 434 | Input/Output: [(-29 20 -19 -72) -72]
Test Case: 435 | Input/Output: [(-46 99 -25 18) -46]
Test Case: 436 | Input/Output: [(37 -37 80 -70) -70]
Test Case: 437 | Input/Output: [(12 -22 77 -40) -40]
Test Case: 438 | Input/Output: [(-14 -18 69 94) -18]
Test Case: 439 | Input/Output: [(-57 -45 16 96) -57]
Test Case: 440 | Input/Output: [(88 90 16 47) 16]
Test Case: 441 | Input/Output: [(5 -37 25 10) -37]
Test Case: 442 | Input/Output: [(-20 -42 -27 -97) -97]
Test Case: 443 | Input/Output: [(94 23 -98 55) -98]
Test Case: 444 | Input/Output: [(13 1 -80 -76) -80]
Test Case: 445 | Input/Output: [(29 -20 -64 49) -64]
Test Case: 446 | Input/Output: [(10 52 12 83) 10]
Test Case: 447 | Input/Output: [(-97 84 -79 -22) -97]
Test Case: 448 | Input/Output: [(-90 -63 91 -18) -90]
Test Case: 449 | Input/Output: [(96 31 92 -73) -73]
Test Case: 450 | Input/Output: [(39 42 32 -75) -75]
Test Case: 451 | Input/Output: [(-27 -71 19 61) -71]
Test Case: 452 | Input/Output: [(-11 -26 -59 -40) -59]
Test Case: 453 | Input/Output: [(86 -96 -77 -94) -96]
Test Case: 454 | Input/Output: [(26 53 0 -39) -39]
Test Case: 455 | Input/Output: [(-54 -13 81 67) -54]
Test Case: 456 | Input/Output: [(-80 -86 62 78) -86]
Test Case: 457 | Input/Output: [(-7 17 45 -9) -9]
Test Case: 458 | Input/Output: [(51 -18 26 54) -18]
Test Case: 459 | Input/Output: [(22 27 62 -22) -22]
Test Case: 460 | Input/Output: [(41 -1 17 8) -1]
Test Case: 461 | Input/Output: [(31 5 -16 -38) -38]
Test Case: 462 | Input/Output: [(-73 -33 74 51) -73]
Test Case: 463 | Input/Output: [(41 15 -91 92) -91]
Test Case: 464 | Input/Output: [(-84 54 91 92) -84]
Test Case: 465 | Input/Output: [(26 77 30 -62) -62]
Test Case: 466 | Input/Output: [(-16 52 -28 -35) -35]
Test Case: 467 | Input/Output: [(-92 -95 4 42) -95]
Test Case: 468 | Input/Output: [(-73 59 -42 -70) -73]
Test Case: 469 | Input/Output: [(14 4 -15 15) -15]
Test Case: 470 | Input/Output: [(-49 -71 56 -8) -71]
Test Case: 471 | Input/Output: [(0 24 12 -84) -84]
Test Case: 472 | Input/Output: [(-71 89 -53 12) -71]
Test Case: 473 | Input/Output: [(5 -22 -24 -53) -53]
Test Case: 474 | Input/Output: [(-25 63 80 98) -25]
Test Case: 475 | Input/Output: [(-2 82 26 5) -2]
Test Case: 476 | Input/Output: [(-27 -81 72 -83) -83]
Test Case: 477 | Input/Output: [(-81 -57 -66 18) -81]
Test Case: 478 | Input/Output: [(9 -99 92 -36) -99]
Test Case: 479 | Input/Output: [(-34 -26 28 -82) -82]
Test Case: 480 | Input/Output: [(-43 -45 6 -99) -99]
Test Case: 481 | Input/Output: [(89 18 11 4) 4]
Test Case: 482 | Input/Output: [(57 33 -86 -97) -97]
Test Case: 483 | Input/Output: [(-42 -66 97 -43) -66]
Test Case: 484 | Input/Output: [(6 74 51 -13) -13]
Test Case: 485 | Input/Output: [(60 -22 86 -3) -22]
Test Case: 486 | Input/Output: [(-2 62 82 48) -2]
Test Case: 487 | Input/Output: [(58 19 46 -99) -99]
Test Case: 488 | Input/Output: [(25 0 -59 -27) -59]
Test Case: 489 | Input/Output: [(-35 -20 -10 -68) -68]
Test Case: 490 | Input/Output: [(42 -82 -61 -65) -82]
Test Case: 491 | Input/Output: [(-12 99 -10 66) -12]
Test Case: 492 | Input/Output: [(-57 98 18 65) -57]
Test Case: 493 | Input/Output: [(62 -37 -10 3) -37]
Test Case: 494 | Input/Output: [(5 -45 14 -45) -45]
Test Case: 495 | Input/Output: [(-97 -59 -86 52) -97]
Test Case: 496 | Input/Output: [(-81 68 37 -83) -83]
Test Case: 497 | Input/Output: [(52 44 42 -91) -91]
Test Case: 498 | Input/Output: [(-56 61 82 96) -56]
Test Case: 499 | Input/Output: [(40 -50 23 66) -50]
Test Case: 500 | Input/Output: [(2 -8 -98 52) -98]
Test Case: 501 | Input/Output: [(-45 43 -69 -98) -98]
Test Case: 502 | Input/Output: [(-38 -71 62 -44) -71]
Test Case: 503 | Input/Output: [(55 -76 5 78) -76]
Test Case: 504 | Input/Output: [(91 -88 -82 -24) -88]
Test Case: 505 | Input/Output: [(-69 -45 89 65) -69]
Test Case: 506 | Input/Output: [(19 59 -47 81) -47]
Test Case: 507 | Input/Output: [(-36 -2 80 -41) -41]
Test Case: 508 | Input/Output: [(-88 97 85 -56) -88]
Test Case: 509 | Input/Output: [(-13 11 -48 94) -48]
Test Case: 510 | Input/Output: [(-26 79 -56 -92) -92]
Test Case: 511 | Input/Output: [(-1 92 -56 5) -56]
Test Case: 512 | Input/Output: [(-8 -79 -95 2) -95]
Test Case: 513 | Input/Output: [(-28 2 53 -26) -28]
Test Case: 514 | Input/Output: [(-27 -48 -81 -39) -81]
Test Case: 515 | Input/Output: [(-7 58 47 34) -7]
Test Case: 516 | Input/Output: [(42 -57 -14 28) -57]
Test Case: 517 | Input/Output: [(-49 -67 -11 1) -67]
Test Case: 518 | Input/Output: [(86 -84 22 0) -84]
Test Case: 519 | Input/Output: [(71 14 82 -7) -7]
Test Case: 520 | Input/Output: [(-29 -22 24 62) -29]
Test Case: 521 | Input/Output: [(80 -38 37 -13) -38]
Test Case: 522 | Input/Output: [(-53 -30 88 66) -53]
Test Case: 523 | Input/Output: [(-44 -96 -13 50) -96]
Test Case: 524 | Input/Output: [(53 -46 -63 -63) -63]
Test Case: 525 | Input/Output: [(53 46 -12 -57) -57]
Test Case: 526 | Input/Output: [(46 -86 100 70) -86]
Test Case: 527 | Input/Output: [(8 -91 96 30) -91]
Test Case: 528 | Input/Output: [(86 -17 -58 -13) -58]
Test Case: 529 | Input/Output: [(-12 -70 29 79) -70]
Test Case: 530 | Input/Output: [(8 32 -74 90) -74]
Test Case: 531 | Input/Output: [(-52 -33 79 94) -52]
Test Case: 532 | Input/Output: [(-41 41 -17 2) -41]
Test Case: 533 | Input/Output: [(52 -10 -60 -16) -60]
Test Case: 534 | Input/Output: [(-7 70 -22 22) -22]
Test Case: 535 | Input/Output: [(36 4 56 65) 4]
Test Case: 536 | Input/Output: [(-12 59 85 43) -12]
Test Case: 537 | Input/Output: [(-89 81 87 7) -89]
Test Case: 538 | Input/Output: [(65 -9 12 30) -9]
Test Case: 539 | Input/Output: [(27 -59 1 25) -59]
Test Case: 540 | Input/Output: [(-9 -86 -56 75) -86]
Test Case: 541 | Input/Output: [(-57 -44 -70 -7) -70]
Test Case: 542 | Input/Output: [(71 -55 -92 -93) -93]
Test Case: 543 | Input/Output: [(3 51 18 -46) -46]
Test Case: 544 | Input/Output: [(-41 -72 -95 93) -95]
Test Case: 545 | Input/Output: [(-83 64 0 -70) -83]
Test Case: 546 | Input/Output: [(91 -76 24 -34) -76]
Test Case: 547 | Input/Output: [(25 -69 50 -52) -69]
Test Case: 548 | Input/Output: [(-42 -7 1 -59) -59]
Test Case: 549 | Input/Output: [(37 -85 -4 -47) -85]
Test Case: 550 | Input/Output: [(75 42 46 -97) -97]
Test Case: 551 | Input/Output: [(96 -53 90 -17) -53]
Test Case: 552 | Input/Output: [(15 56 -58 -18) -58]
Test Case: 553 | Input/Output: [(-56 -29 -8 56) -56]
Test Case: 554 | Input/Output: [(-57 57 -10 -93) -93]
Test Case: 555 | Input/Output: [(-42 -39 76 81) -42]
Test Case: 556 | Input/Output: [(7 34 -92 -71) -92]
Test Case: 557 | Input/Output: [(3 17 -94 -85) -94]
Test Case: 558 | Input/Output: [(2 61 87 23) 2]
Test Case: 559 | Input/Output: [(-46 -31 -28 -9) -46]
Test Case: 560 | Input/Output: [(-18 45 17 78) -18]
Test Case: 561 | Input/Output: [(47 24 -5 89) -5]
Test Case: 562 | Input/Output: [(18 29 29 -49) -49]
Test Case: 563 | Input/Output: [(-71 -56 -47 94) -71]
Test Case: 564 | Input/Output: [(-73 -92 79 71) -92]
Test Case: 565 | Input/Output: [(3 28 17 52) 3]
Test Case: 566 | Input/Output: [(40 45 -74 6) -74]
Test Case: 567 | Input/Output: [(-67 -23 -15 -43) -67]
Test Case: 568 | Input/Output: [(-21 11 -34 9) -34]
Test Case: 569 | Input/Output: [(-51 -19 -92 -84) -92]
Test Case: 570 | Input/Output: [(63 59 -50 11) -50]
Test Case: 571 | Input/Output: [(-47 -52 -45 13) -52]
Test Case: 572 | Input/Output: [(54 -39 -55 -98) -98]
Test Case: 573 | Input/Output: [(-2 -16 94 44) -16]
Test Case: 574 | Input/Output: [(-15 -7 -23 2) -23]
Test Case: 575 | Input/Output: [(8 33 -31 87) -31]
Test Case: 576 | Input/Output: [(20 -16 -78 -11) -78]
Test Case: 577 | Input/Output: [(-65 83 53 35) -65]
Test Case: 578 | Input/Output: [(39 12 -91 88) -91]
Test Case: 579 | Input/Output: [(40 -58 97 33) -58]
Test Case: 580 | Input/Output: [(-54 20 -64 49) -64]
Test Case: 581 | Input/Output: [(-1 -7 -12 -71) -71]
Test Case: 582 | Input/Output: [(3 -18 -17 -20) -20]
Test Case: 583 | Input/Output: [(-21 7 12 -15) -21]
Test Case: 584 | Input/Output: [(38 83 30 -19) -19]
Test Case: 585 | Input/Output: [(-51 0 63 -97) -97]
Test Case: 586 | Input/Output: [(86 -33 47 -100) -100]
Test Case: 587 | Input/Output: [(31 -27 46 -95) -95]
Test Case: 588 | Input/Output: [(-23 -77 -41 99) -77]
Test Case: 589 | Input/Output: [(48 70 -77 53) -77]
Test Case: 590 | Input/Output: [(33 -12 72 31) -12]
Test Case: 591 | Input/Output: [(-96 93 -32 41) -96]
Test Case: 592 | Input/Output: [(-50 5 25 66) -50]
Test Case: 593 | Input/Output: [(6 86 74 14) 6]
Test Case: 594 | Input/Output: [(34 -8 34 -63) -63]
Test Case: 595 | Input/Output: [(19 62 0 -32) -32]
Test Case: 596 | Input/Output: [(13 -93 -19 74) -93]
Test Case: 597 | Input/Output: [(-67 -74 -35 2) -74]
Test Case: 598 | Input/Output: [(-5 -38 36 -37) -38]
Test Case: 599 | Input/Output: [(-86 -13 20 32) -86]
Test Case: 600 | Input/Output: [(98 16 -53 -90) -90]
Test Case: 601 | Input/Output: [(-85 50 14 -84) -85]
Test Case: 602 | Input/Output: [(45 52 51 79) 45]
Test Case: 603 | Input/Output: [(-71 -36 28 -19) -71]
Test Case: 604 | Input/Output: [(10 89 65 96) 10]
Test Case: 605 | Input/Output: [(-6 -11 -1 -19) -19]
Test Case: 606 | Input/Output: [(69 98 -95 97) -95]
Test Case: 607 | Input/Output: [(-82 74 41 -26) -82]
Test Case: 608 | Input/Output: [(16 -18 65 48) -18]
Test Case: 609 | Input/Output: [(-41 49 63 17) -41]
Test Case: 610 | Input/Output: [(-65 -29 12 100) -65]
Test Case: 611 | Input/Output: [(-13 72 90 -78) -78]
Test Case: 612 | Input/Output: [(62 -23 33 -100) -100]
Test Case: 613 | Input/Output: [(50 -14 -21 75) -21]
Test Case: 614 | Input/Output: [(93 -26 59 -12) -26]
Test Case: 615 | Input/Output: [(66 4 14 -91) -91]
Test Case: 616 | Input/Output: [(100 -43 -18 -94) -94]
Test Case: 617 | Input/Output: [(7 -16 -80 55) -80]
Test Case: 618 | Input/Output: [(-24 69 -41 -89) -89]
Test Case: 619 | Input/Output: [(84 21 56 -34) -34]
Test Case: 620 | Input/Output: [(87 -4 3 4) -4]
Test Case: 621 | Input/Output: [(72 50 31 -75) -75]
Test Case: 622 | Input/Output: [(58 35 -13 -20) -20]
Test Case: 623 | Input/Output: [(84 38 38 -27) -27]
Test Case: 624 | Input/Output: [(10 59 73 43) 10]
Test Case: 625 | Input/Output: [(37 -80 49 -24) -80]
Test Case: 626 | Input/Output: [(-50 75 10 22) -50]
Test Case: 627 | Input/Output: [(23 37 -63 44) -63]
Test Case: 628 | Input/Output: [(-30 86 -92 98) -92]
Test Case: 629 | Input/Output: [(15 94 85 -46) -46]
Test Case: 630 | Input/Output: [(-89 50 -72 64) -89]
Test Case: 631 | Input/Output: [(-53 58 58 48) -53]
Test Case: 632 | Input/Output: [(40 60 45 -32) -32]
Test Case: 633 | Input/Output: [(-19 -30 45 28) -30]
Test Case: 634 | Input/Output: [(-26 19 99 66) -26]
Test Case: 635 | Input/Output: [(-65 53 55 1) -65]
Test Case: 636 | Input/Output: [(45 -46 -23 40) -46]
Test Case: 637 | Input/Output: [(53 -43 -65 26) -65]
Test Case: 638 | Input/Output: [(61 43 16 -78) -78]
Test Case: 639 | Input/Output: [(9 60 43 61) 9]
Test Case: 640 | Input/Output: [(64 -80 -49 67) -80]
Test Case: 641 | Input/Output: [(81 32 -3 -45) -45]
Test Case: 642 | Input/Output: [(-28 -90 -3 -33) -90]
Test Case: 643 | Input/Output: [(-37 -56 52 -42) -56]
Test Case: 644 | Input/Output: [(64 94 -35 57) -35]
Test Case: 645 | Input/Output: [(-30 99 -94 -81) -94]
Test Case: 646 | Input/Output: [(4 87 -94 70) -94]
Test Case: 647 | Input/Output: [(-32 71 -98 3) -98]
Test Case: 648 | Input/Output: [(-7 95 58 40) -7]
Test Case: 649 | Input/Output: [(76 100 -73 -3) -73]
Test Case: 650 | Input/Output: [(-53 -38 -3 -15) -53]
Test Case: 651 | Input/Output: [(41 -59 -80 -66) -80]
Test Case: 652 | Input/Output: [(3 -73 44 -26) -73]
Test Case: 653 | Input/Output: [(-17 -43 -26 -60) -60]
Test Case: 654 | Input/Output: [(24 -34 -56 -88) -88]
Test Case: 655 | Input/Output: [(-59 88 -100 -74) -100]
Test Case: 656 | Input/Output: [(41 -47 50 4) -47]
Test Case: 657 | Input/Output: [(-38 82 86 -71) -71]
Test Case: 658 | Input/Output: [(-39 -44 64 28) -44]
Test Case: 659 | Input/Output: [(29 -32 -52 86) -52]
Test Case: 660 | Input/Output: [(77 47 -9 4) -9]
Test Case: 661 | Input/Output: [(-37 10 -67 6) -67]
Test Case: 662 | Input/Output: [(-76 -70 -96 -63) -96]
Test Case: 663 | Input/Output: [(11 47 -30 96) -30]
Test Case: 664 | Input/Output: [(-17 -69 0 94) -69]
Test Case: 665 | Input/Output: [(-70 77 34 21) -70]
Test Case: 666 | Input/Output: [(-67 25 -65 53) -67]
Test Case: 667 | Input/Output: [(21 -20 -83 -2) -83]
Test Case: 668 | Input/Output: [(89 -1 -95 -91) -95]
Test Case: 669 | Input/Output: [(-11 -5 35 -55) -55]
Test Case: 670 | Input/Output: [(-6 59 71 -54) -54]
Test Case: 671 | Input/Output: [(-20 47 -74 71) -74]
Test Case: 672 | Input/Output: [(-56 25 94 -72) -72]
Test Case: 673 | Input/Output: [(-64 -13 93 -61) -64]
Test Case: 674 | Input/Output: [(25 45 73 -1) -1]
Test Case: 675 | Input/Output: [(4 54 -81 64) -81]
Test Case: 676 | Input/Output: [(-63 76 -50 -56) -63]
Test Case: 677 | Input/Output: [(-8 83 -34 87) -34]
Test Case: 678 | Input/Output: [(-6 -72 -81 43) -81]
Test Case: 679 | Input/Output: [(-17 68 85 -47) -47]
Test Case: 680 | Input/Output: [(85 74 79 74) 74]
Test Case: 681 | Input/Output: [(-61 54 14 -84) -84]
Test Case: 682 | Input/Output: [(40 29 -100 -49) -100]
Test Case: 683 | Input/Output: [(20 -33 38 -56) -56]
Test Case: 684 | Input/Output: [(96 92 -100 -14) -100]
Test Case: 685 | Input/Output: [(49 -89 4 -5) -89]
Test Case: 686 | Input/Output: [(4 -4 -95 -95) -95]
Test Case: 687 | Input/Output: [(-34 -73 40 -6) -73]
Test Case: 688 | Input/Output: [(-25 34 -58 -51) -58]
Test Case: 689 | Input/Output: [(-85 -32 37 -69) -85]
Test Case: 690 | Input/Output: [(8 27 -22 42) -22]
Test Case: 691 | Input/Output: [(61 -79 -1 50) -79]
Test Case: 692 | Input/Output: [(-62 -98 45 52) -98]
Test Case: 693 | Input/Output: [(-50 -30 81 74) -50]
Test Case: 694 | Input/Output: [(-53 13 -89 -93) -93]
Test Case: 695 | Input/Output: [(94 76 -6 71) -6]
Test Case: 696 | Input/Output: [(3 47 -34 -1) -34]
Test Case: 697 | Input/Output: [(-35 79 55 -7) -35]
Test Case: 698 | Input/Output: [(-25 28 -13 -88) -88]
Test Case: 699 | Input/Output: [(83 -1 58 -11) -11]
Test Case: 700 | Input/Output: [(19 -93 24 -50) -93]
Test Case: 701 | Input/Output: [(-84 -22 90 31) -84]
Test Case: 702 | Input/Output: [(77 -91 -93 29) -93]
Test Case: 703 | Input/Output: [(-93 -45 -25 -85) -93]
Test Case: 704 | Input/Output: [(35 -33 -97 -10) -97]
Test Case: 705 | Input/Output: [(-22 -34 -99 -82) -99]
Test Case: 706 | Input/Output: [(82 -23 99 1) -23]
Test Case: 707 | Input/Output: [(-87 26 85 -62) -87]
Test Case: 708 | Input/Output: [(-95 -1 -28 41) -95]
Test Case: 709 | Input/Output: [(60 82 -38 50) -38]
Test Case: 710 | Input/Output: [(73 -50 23 -62) -62]
Test Case: 711 | Input/Output: [(-86 -72 47 -82) -86]
Test Case: 712 | Input/Output: [(92 -38 -3 60) -38]
Test Case: 713 | Input/Output: [(24 32 63 45) 24]
Test Case: 714 | Input/Output: [(6 -54 -8 -56) -56]
Test Case: 715 | Input/Output: [(-99 16 -87 -6) -99]
Test Case: 716 | Input/Output: [(-63 -2 -81 -81) -81]
Test Case: 717 | Input/Output: [(11 83 -34 12) -34]
Test Case: 718 | Input/Output: [(-5 47 3 -93) -93]
Test Case: 719 | Input/Output: [(-61 -85 43 60) -85]
Test Case: 720 | Input/Output: [(-22 3 15 -36) -36]
Test Case: 721 | Input/Output: [(-83 27 23 -88) -88]
Test Case: 722 | Input/Output: [(11 -93 -37 46) -93]
Test Case: 723 | Input/Output: [(-67 -30 64 -90) -90]
Test Case: 724 | Input/Output: [(96 -64 -54 -60) -64]
Test Case: 725 | Input/Output: [(-43 -75 19 52) -75]
Test Case: 726 | Input/Output: [(-23 -97 -54 14) -97]
Test Case: 727 | Input/Output: [(-20 -25 -35 77) -35]
Test Case: 728 | Input/Output: [(13 40 76 -69) -69]
Test Case: 729 | Input/Output: [(-100 47 -44 84) -100]
Test Case: 730 | Input/Output: [(-10 -61 27 -89) -89]
Test Case: 731 | Input/Output: [(-55 -76 21 16) -76]
Test Case: 732 | Input/Output: [(86 -93 -82 83) -93]
Test Case: 733 | Input/Output: [(27 -71 15 13) -71]
Test Case: 734 | Input/Output: [(83 48 11 -71) -71]
Test Case: 735 | Input/Output: [(12 47 -24 69) -24]
Test Case: 736 | Input/Output: [(-31 -83 100 -99) -99]
Test Case: 737 | Input/Output: [(-16 -36 -26 35) -36]
Test Case: 738 | Input/Output: [(39 -1 -36 41) -36]
Test Case: 739 | Input/Output: [(-9 -51 37 25) -51]
Test Case: 740 | Input/Output: [(34 31 -94 -97) -97]
Test Case: 741 | Input/Output: [(73 -32 -67 -54) -67]
Test Case: 742 | Input/Output: [(17 79 65 -53) -53]
Test Case: 743 | Input/Output: [(9 82 41 36) 9]
Test Case: 744 | Input/Output: [(-54 92 23 65) -54]
Test Case: 745 | Input/Output: [(17 94 88 -1) -1]
Test Case: 746 | Input/Output: [(99 73 59 96) 59]
Test Case: 747 | Input/Output: [(7 4 60 91) 4]
Test Case: 748 | Input/Output: [(-4 -25 47 100) -25]
Test Case: 749 | Input/Output: [(25 -31 40 -60) -60]
Test Case: 750 | Input/Output: [(-47 48 96 48) -47]
Test Case: 751 | Input/Output: [(31 91 -99 -5) -99]
Test Case: 752 | Input/Output: [(-61 93 -72 -47) -72]
Test Case: 753 | Input/Output: [(-50 64 -1 -71) -71]
Test Case: 754 | Input/Output: [(57 -56 96 10) -56]
Test Case: 755 | Input/Output: [(78 -18 -65 -28) -65]
Test Case: 756 | Input/Output: [(-10 -93 -47 94) -93]
Test Case: 757 | Input/Output: [(45 64 -52 -74) -74]
Test Case: 758 | Input/Output: [(90 -16 61 -98) -98]
Test Case: 759 | Input/Output: [(29 19 62 63) 19]
Test Case: 760 | Input/Output: [(-32 -27 -6 31) -32]
Test Case: 761 | Input/Output: [(-82 -52 -32 85) -82]
Test Case: 762 | Input/Output: [(46 66 33 -23) -23]
Test Case: 763 | Input/Output: [(-100 -41 32 -9) -100]
Test Case: 764 | Input/Output: [(75 70 10 73) 10]
Test Case: 765 | Input/Output: [(-72 82 -5 94) -72]
Test Case: 766 | Input/Output: [(89 -45 -70 0) -70]
Test Case: 767 | Input/Output: [(-94 99 -13 74) -94]
Test Case: 768 | Input/Output: [(-6 74 7 4) -6]
Test Case: 769 | Input/Output: [(53 -23 42 -93) -93]
Test Case: 770 | Input/Output: [(17 64 80 17) 17]
Test Case: 771 | Input/Output: [(0 -23 -54 61) -54]
Test Case: 772 | Input/Output: [(91 -94 69 98) -94]
Test Case: 773 | Input/Output: [(-68 -82 1 42) -82]
Test Case: 774 | Input/Output: [(-60 -9 26 -12) -60]
Test Case: 775 | Input/Output: [(-2 -49 -56 -38) -56]
Test Case: 776 | Input/Output: [(-88 6 70 -80) -88]
Test Case: 777 | Input/Output: [(79 -7 -13 54) -13]
Test Case: 778 | Input/Output: [(-17 -78 -82 41) -82]
Test Case: 779 | Input/Output: [(32 -2 47 18) -2]
Test Case: 780 | Input/Output: [(99 -73 -8 1) -73]
Test Case: 781 | Input/Output: [(-64 -1 93 76) -64]
Test Case: 782 | Input/Output: [(60 74 45 46) 45]
Test Case: 783 | Input/Output: [(83 -52 -38 -29) -52]
Test Case: 784 | Input/Output: [(59 -92 -43 89) -92]
Test Case: 785 | Input/Output: [(-15 -61 43 -90) -90]
Test Case: 786 | Input/Output: [(-57 -72 -44 8) -72]
Test Case: 787 | Input/Output: [(45 43 69 -8) -8]
Test Case: 788 | Input/Output: [(50 -81 36 62) -81]
Test Case: 789 | Input/Output: [(-30 -99 -24 -14) -99]
Test Case: 790 | Input/Output: [(-79 -75 71 -4) -79]
Test Case: 791 | Input/Output: [(2 82 -40 30) -40]
Test Case: 792 | Input/Output: [(-15 53 69 -40) -40]
Test Case: 793 | Input/Output: [(-5 -15 32 66) -15]
Test Case: 794 | Input/Output: [(-53 -74 -81 69) -81]
Test Case: 795 | Input/Output: [(50 -56 19 -88) -88]
Test Case: 796 | Input/Output: [(13 5 49 24) 5]
Test Case: 797 | Input/Output: [(-10 61 -18 -54) -54]
Test Case: 798 | Input/Output: [(-21 80 21 -13) -21]
Test Case: 799 | Input/Output: [(-73 -4 92 -72) -73]
Test Case: 800 | Input/Output: [(-30 -29 -98 44) -98]
Test Case: 801 | Input/Output: [(-45 63 -68 -50) -68]
Test Case: 802 | Input/Output: [(-31 -81 -13 24) -81]
Test Case: 803 | Input/Output: [(-100 -52 15 -46) -100]
Test Case: 804 | Input/Output: [(-27 -82 9 93) -82]
Test Case: 805 | Input/Output: [(18 49 -47 70) -47]
Test Case: 806 | Input/Output: [(80 -83 59 -63) -83]
Test Case: 807 | Input/Output: [(23 -27 -83 -50) -83]
Test Case: 808 | Input/Output: [(-13 -23 -62 38) -62]
Test Case: 809 | Input/Output: [(36 3 -74 15) -74]
Test Case: 810 | Input/Output: [(19 35 -81 36) -81]
Test Case: 811 | Input/Output: [(-12 -67 27 -71) -71]
Test Case: 812 | Input/Output: [(-57 -30 -12 2) -57]
Test Case: 813 | Input/Output: [(75 35 -83 12) -83]
Test Case: 814 | Input/Output: [(-25 -76 71 -60) -76]
Test Case: 815 | Input/Output: [(15 -90 89 63) -90]
Test Case: 816 | Input/Output: [(-38 -47 -45 32) -47]
Test Case: 817 | Input/Output: [(-100 63 -38 -44) -100]
Test Case: 818 | Input/Output: [(6 32 76 -79) -79]
Test Case: 819 | Input/Output: [(-20 -89 4 -54) -89]
Test Case: 820 | Input/Output: [(44 -28 -9 98) -28]
Test Case: 821 | Input/Output: [(-10 -81 -7 97) -81]
Test Case: 822 | Input/Output: [(42 -25 -27 15) -27]
Test Case: 823 | Input/Output: [(-78 45 53 -43) -78]
Test Case: 824 | Input/Output: [(-3 -45 -41 68) -45]
Test Case: 825 | Input/Output: [(-83 70 59 -38) -83]
Test Case: 826 | Input/Output: [(-66 8 28 70) -66]
Test Case: 827 | Input/Output: [(-69 -63 45 73) -69]
Test Case: 828 | Input/Output: [(45 72 -100 -34) -100]
Test Case: 829 | Input/Output: [(77 -72 27 74) -72]
Test Case: 830 | Input/Output: [(-10 -51 -7 -50) -51]
Test Case: 831 | Input/Output: [(21 -83 -37 83) -83]
Test Case: 832 | Input/Output: [(-58 -25 -31 -47) -58]
Test Case: 833 | Input/Output: [(76 14 -36 5) -36]
Test Case: 834 | Input/Output: [(-84 21 -40 -46) -84]
Test Case: 835 | Input/Output: [(49 39 -78 -27) -78]
Test Case: 836 | Input/Output: [(-69 -97 -65 100) -97]
Test Case: 837 | Input/Output: [(-52 9 -48 -78) -78]
Test Case: 838 | Input/Output: [(-100 -25 -77 -32) -100]
Test Case: 839 | Input/Output: [(48 85 76 65) 48]
Test Case: 840 | Input/Output: [(-15 -91 23 -45) -91]
Test Case: 841 | Input/Output: [(90 86 86 57) 57]
Test Case: 842 | Input/Output: [(-42 48 5 -99) -99]
Test Case: 843 | Input/Output: [(-33 -47 -14 -23) -47]
Test Case: 844 | Input/Output: [(32 -23 -85 -38) -85]
Test Case: 845 | Input/Output: [(-45 -99 -74 -25) -99]
Test Case: 846 | Input/Output: [(3 -56 36 65) -56]
Test Case: 847 | Input/Output: [(-82 83 38 -38) -82]
Test Case: 848 | Input/Output: [(-67 -80 -45 53) -80]
Test Case: 849 | Input/Output: [(-14 -31 -62 100) -62]
Test Case: 850 | Input/Output: [(55 -37 -88 28) -88]
Test Case: 851 | Input/Output: [(-60 -46 -91 -48) -91]
Test Case: 852 | Input/Output: [(-46 36 21 -80) -80]
Test Case: 853 | Input/Output: [(-69 -21 83 -85) -85]
Test Case: 854 | Input/Output: [(53 -60 83 -48) -60]
Test Case: 855 | Input/Output: [(60 23 -86 64) -86]
Test Case: 856 | Input/Output: [(-68 55 22 23) -68]
Test Case: 857 | Input/Output: [(89 -99 -40 -98) -99]
Test Case: 858 | Input/Output: [(41 95 -79 -15) -79]
Test Case: 859 | Input/Output: [(49 63 12 -51) -51]
Test Case: 860 | Input/Output: [(-87 9 8 -27) -87]
Test Case: 861 | Input/Output: [(-36 -100 -94 -100) -100]
Test Case: 862 | Input/Output: [(-5 59 96 -18) -18]
Test Case: 863 | Input/Output: [(-52 14 -94 36) -94]
Test Case: 864 | Input/Output: [(63 -71 -24 74) -71]
Test Case: 865 | Input/Output: [(-88 74 45 15) -88]
Test Case: 866 | Input/Output: [(85 -96 -46 44) -96]
Test Case: 867 | Input/Output: [(-92 83 -25 86) -92]
Test Case: 868 | Input/Output: [(64 98 94 -58) -58]
Test Case: 869 | Input/Output: [(97 26 9 35) 9]
Test Case: 870 | Input/Output: [(70 -31 -16 54) -31]
Test Case: 871 | Input/Output: [(-60 62 -41 -100) -100]
Test Case: 872 | Input/Output: [(90 -74 -96 -2) -96]
Test Case: 873 | Input/Output: [(88 24 100 61) 24]
Test Case: 874 | Input/Output: [(7 -41 -9 9) -41]
Test Case: 875 | Input/Output: [(-90 -13 -9 62) -90]
Test Case: 876 | Input/Output: [(95 -98 6 -75) -98]
Test Case: 877 | Input/Output: [(-74 3 -14 76) -74]
Test Case: 878 | Input/Output: [(79 -53 -12 -78) -78]
Test Case: 879 | Input/Output: [(-67 -60 1 -39) -67]
Test Case: 880 | Input/Output: [(38 -42 99 56) -42]
Test Case: 881 | Input/Output: [(12 -95 -84 21) -95]
Test Case: 882 | Input/Output: [(-27 46 -63 57) -63]
Test Case: 883 | Input/Output: [(-70 -9 64 93) -70]
Test Case: 884 | Input/Output: [(54 31 -40 -48) -48]
Test Case: 885 | Input/Output: [(-57 -99 -38 9) -99]
Test Case: 886 | Input/Output: [(91 36 87 66) 36]
Test Case: 887 | Input/Output: [(36 29 0 14) 0]
Test Case: 888 | Input/Output: [(-35 20 -57 6) -57]
Test Case: 889 | Input/Output: [(-63 4 47 47) -63]
Test Case: 890 | Input/Output: [(32 -17 23 -67) -67]
Test Case: 891 | Input/Output: [(-88 -5 19 35) -88]
Test Case: 892 | Input/Output: [(73 -10 69 9) -10]
Test Case: 893 | Input/Output: [(-2 64 -80 22) -80]
Test Case: 894 | Input/Output: [(-32 -72 -85 -81) -85]
Test Case: 895 | Input/Output: [(34 96 -1 68) -1]
Test Case: 896 | Input/Output: [(57 -7 28 -78) -78]
Test Case: 897 | Input/Output: [(20 -40 -10 59) -40]
Test Case: 898 | Input/Output: [(-50 66 64 -33) -50]
Test Case: 899 | Input/Output: [(26 -57 -80 90) -80]
Test Case: 900 | Input/Output: [(93 -59 -96 -95) -96]
Test Case: 901 | Input/Output: [(37 28 -72 -64) -72]
Test Case: 902 | Input/Output: [(-57 -35 3 73) -57]
Test Case: 903 | Input/Output: [(71 18 82 34) 18]
Test Case: 904 | Input/Output: [(2 24 -29 -80) -80]
Test Case: 905 | Input/Output: [(63 38 88 -43) -43]
Test Case: 906 | Input/Output: [(10 46 63 73) 10]
Test Case: 907 | Input/Output: [(21 33 -58 52) -58]
Test Case: 908 | Input/Output: [(5 43 -56 16) -56]
Test Case: 909 | Input/Output: [(56 45 -6 -40) -40]
Test Case: 910 | Input/Output: [(23 19 -60 -20) -60]
Test Case: 911 | Input/Output: [(49 67 100 -82) -82]
Test Case: 912 | Input/Output: [(6 90 4 -28) -28]
Test Case: 913 | Input/Output: [(69 -93 -38 26) -93]
Test Case: 914 | Input/Output: [(-60 81 -55 66) -60]
Test Case: 915 | Input/Output: [(6 41 -1 42) -1]
Test Case: 916 | Input/Output: [(39 -45 98 -93) -93]
Test Case: 917 | Input/Output: [(25 95 -99 -60) -99]
Test Case: 918 | Input/Output: [(-64 -90 34 -89) -90]
Test Case: 919 | Input/Output: [(81 -69 63 -8) -69]
Test Case: 920 | Input/Output: [(87 5 76 -43) -43]
Test Case: 921 | Input/Output: [(-62 54 99 -76) -76]
Test Case: 922 | Input/Output: [(-100 -41 43 23) -100]
Test Case: 923 | Input/Output: [(51 -54 52 -28) -54]
Test Case: 924 | Input/Output: [(-30 48 -51 -46) -51]
Test Case: 925 | Input/Output: [(-31 -85 -35 71) -85]
Test Case: 926 | Input/Output: [(8 18 -79 -79) -79]
Test Case: 927 | Input/Output: [(-21 58 -26 50) -26]
Test Case: 928 | Input/Output: [(-82 -27 76 -67) -82]
Test Case: 929 | Input/Output: [(-37 81 28 58) -37]
Test Case: 930 | Input/Output: [(-77 98 90 39) -77]
Test Case: 931 | Input/Output: [(-27 69 62 -60) -60]
Test Case: 932 | Input/Output: [(-95 -12 -51 88) -95]
Test Case: 933 | Input/Output: [(94 -91 -59 8) -91]
Test Case: 934 | Input/Output: [(-16 71 -81 -33) -81]
Test Case: 935 | Input/Output: [(95 94 18 -13) -13]
Test Case: 936 | Input/Output: [(9 7 57 -30) -30]
Test Case: 937 | Input/Output: [(35 -59 -93 -39) -93]
Test Case: 938 | Input/Output: [(-30 -26 41 -33) -33]
Test Case: 939 | Input/Output: [(100 70 33 9) 9]
Test Case: 940 | Input/Output: [(-4 -19 -8 10) -19]
Test Case: 941 | Input/Output: [(-4 8 -36 -63) -63]
Test Case: 942 | Input/Output: [(-17 93 59 92) -17]
Test Case: 943 | Input/Output: [(-90 -81 87 -50) -90]
Test Case: 944 | Input/Output: [(81 -10 0 80) -10]
Test Case: 945 | Input/Output: [(-35 42 -47 55) -47]
Test Case: 946 | Input/Output: [(-21 -27 -3 59) -27]
Test Case: 947 | Input/Output: [(-39 41 48 1) -39]
Test Case: 948 | Input/Output: [(12 -23 -41 -91) -91]
Test Case: 949 | Input/Output: [(-81 73 97 39) -81]
Test Case: 950 | Input/Output: [(12 -1 15 -29) -29]
Test Case: 951 | Input/Output: [(-11 23 -38 26) -38]
Test Case: 952 | Input/Output: [(-71 -81 34 -57) -81]
Test Case: 953 | Input/Output: [(60 -95 15 78) -95]
Test Case: 954 | Input/Output: [(-11 -57 26 -87) -87]
Test Case: 955 | Input/Output: [(-43 -18 -12 -52) -52]
Test Case: 956 | Input/Output: [(88 -1 -100 85) -100]
Test Case: 957 | Input/Output: [(16 -48 -60 14) -60]
Test Case: 958 | Input/Output: [(-52 -98 31 53) -98]
Test Case: 959 | Input/Output: [(66 -12 -76 23) -76]
Test Case: 960 | Input/Output: [(-70 8 90 -99) -99]
Test Case: 961 | Input/Output: [(-81 73 -41 1) -81]
Test Case: 962 | Input/Output: [(86 -73 -50 -36) -73]
Test Case: 963 | Input/Output: [(-17 67 13 81) -17]
Test Case: 964 | Input/Output: [(-27 -61 22 -14) -61]
Test Case: 965 | Input/Output: [(-97 -60 -86 -23) -97]
Test Case: 966 | Input/Output: [(88 -8 40 87) -8]
Test Case: 967 | Input/Output: [(57 66 89 31) 31]
Test Case: 968 | Input/Output: [(-3 65 -90 -79) -90]
Test Case: 969 | Input/Output: [(-97 -94 -22 8) -97]
Test Case: 970 | Input/Output: [(-50 85 2 91) -50]
Test Case: 971 | Input/Output: [(83 97 -75 -53) -75]
Test Case: 972 | Input/Output: [(64 46 22 85) 22]
Test Case: 973 | Input/Output: [(100 -3 58 80) -3]
Test Case: 974 | Input/Output: [(44 -25 12 0) -25]
Test Case: 975 | Input/Output: [(-93 79 -47 -66) -93]
Test Case: 976 | Input/Output: [(81 7 -45 27) -45]
Test Case: 977 | Input/Output: [(5 -53 19 73) -53]
Test Case: 978 | Input/Output: [(-95 -31 -8 22) -95]
Test Case: 979 | Input/Output: [(-15 36 -44 93) -44]
Test Case: 980 | Input/Output: [(-8 -33 -1 -99) -99]
Test Case: 981 | Input/Output: [(68 5 -57 32) -57]
Test Case: 982 | Input/Output: [(-75 -25 -96 27) -96]
Test Case: 983 | Input/Output: [(97 -40 26 17) -40]
Test Case: 984 | Input/Output: [(-58 94 -49 4) -58]
Test Case: 985 | Input/Output: [(38 -97 -24 61) -97]
Test Case: 986 | Input/Output: [(85 34 71 -67) -67]
Test Case: 987 | Input/Output: [(76 -94 68 23) -94]
Test Case: 988 | Input/Output: [(8 -43 -64 -9) -64]
Test Case: 989 | Input/Output: [(-69 63 2 3) -69]
Test Case: 990 | Input/Output: [(-27 -6 39 30) -27]
Test Case: 991 | Input/Output: [(-29 -77 -80 -40) -80]
Test Case: 992 | Input/Output: [(76 26 -7 63) -7]
Test Case: 993 | Input/Output: [(-63 -85 -46 66) -85]
Test Case: 994 | Input/Output: [(-5 80 81 -66) -66]
Test Case: 995 | Input/Output: [(-41 23 32 34) -41]
Test Case: 996 | Input/Output: [(-71 -86 -5 -78) -86]
Test Case: 997 | Input/Output: [(98 -9 -48 -3) -48]
Test Case: 998 | Input/Output: [(2 -71 91 71) -71]
Test Case: 999 | Input/Output: [(56 -79 53 -10) -79]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = -90 116 -82 90 74 0 29 -117 -101 91 -46 98 -40 -126 120 31
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[34 -67 -67 -67] -67] [[-50 93 93 93] -50] [[54 54 -79 54] -79] [[-50 2 -50 -50] -50] [[-40 88 88 88] -40] [[40 61 61 61] 40] [[68 68 68 -95] -95] [[-77 -77 -77 -7] -77] [[-16 -16 47 -16] -16] [[42 -24 42 42] -24] [(67 67 67 67) 67] [(-10 -10 -10 -10) -10] [(21 21 21 21) 21] [(-9 -9 -9 -9) -9] [(-18 -18 -18 -18) -18] [(52 12 17 14) 12] [(92 25 2 43) 2] [(42 27 82 8) 8] [(61 3 51 74) 3] [(34 81 11 34) 11] [(78 63 23 44) 23] [(37 32 90 67) 32] [(29 99 92 95) 29] [(32 95 18 3) 3] [(35 11 66 63) 11] [(81 8 18 99) 8] [(58 91 43 4) 4] [(95 91 3 33) 3] [(74 58 64 29) 29] [(25 69 34 98) 25] [(15 53 45 25) 15] [(12 83 38 42) 12] [(36 21 62 23) 21] [(58 38 96 48) 38] [(95 7 94 69) 7] [(27 15 -50 -90) -90] [(12 72 73 93) 12] [(95 -26 -94 -66) -94] [(1 -24 73 4) -24] [(-100 -64 -40 93) -100] [(-11 -23 61 33) -23] [(12 -15 71 87) -15] [(-50 91 -86 54) -86] [(95 17 77 -85) -85] [(20 47 -94 -3) -94] [(-2 -29 25 77) -29] [(-20 47 66 35) -20] [(67 67 -68 56) -68] [(-47 2 23 -94) -94] [(41 51 16 18) 16] [(57 37 94 5) 5] [(17 83 13 62) 13] [(92 75 20 -49) -49] [(-44 26 9 -5) -44] [(-10 40 -52 -31) -52] [(97 65 -85 -7) -85] [(-35 -22 41 -58) -58] [(70 11 -9 -22) -22] [(67 -97 -87 -91) -97] [(99 -83 -32 93) -83] [(-12 -58 -60 -11) -60] [(-4 32 37 -5) -5] [(-51 5 -94 58) -94] [(-68 62 58 -18) -68] [(-89 77 62 -90) -90] [(3 -93 -57 -39) -93] [(-39 22 20 39) -39] [(72 24 -53 -23) -53] [(-40 -82 59 61) -82] [(80 -94 -69 94) -94] [(10 -78 -34 73) -78] [(-37 -53 -27 72) -53] [(-44 65 89 25) -44] [(87 -92 34 -57) -92] [(81 14 -94 -15) -94] [(-88 85 -28 43) -88] [(70 9 -57 32) -57] [(-29 55 71 -5) -29] [(-51 -34 -6 -60) -60] [(2 -80 -46 -8) -80] [(44 -87 74 -92) -92] [(47 -74 22 -8) -74] [(52 -57 -76 -26) -76] [(-7 -80 -3 -29) -80] [(-85 -44 -94 -46) -94] [(58 -24 53 -33) -33] [(-59 40 -31 -37) -59] [(-73 31 -50 85) -73] [(-76 66 19 -14) -76] [(-6 55 -86 96) -86] [(55 -46 -96 -17) -96] [(-37 -60 52 4) -60] [(-74 100 -47 -41) -74] [(100 -44 -8 49) -44] [(26 -8 -74 -36) -74])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction tagged_57} {:close 0, :instruction in2} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 2, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_boolean_699} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction tagged_569} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_rot} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_mod})
Lexicase best program: (tagged_57 in2 integer_inc boolean_or exec_pop () integer_gte boolean_swap exec_when (integer_pop integer_swap in2 in2) integer_eq boolean_invert_second_then_and print_integer integer_dec tag_boolean_699 integer_dup_times exec_y_when_autoconstructing (in1 boolean_yank print_integer boolean_dup_items exec_k (integer_dec exec_shove (integer_flush integer_max boolean_swap integer_empty exec_dup_times () integer_gte tagged_569 print_integer boolean_rot exec_do*times (boolean_swap boolean_yank) exec_rot (exec_pop () exec_yank integer_mod) () ())) ()))
Lexicase best errors: [1 1 0 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 55
Percent parens: 0.236
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction tagged_57} {:close 0, :instruction in2} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_when} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 2, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_boolean_699} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_max} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction tagged_569} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_swap} {:close 1, :instruction boolean_yank} {:close 0, :instruction exec_rot} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_mod})
Zero cases best program: (tagged_57 in2 integer_inc boolean_or exec_pop () integer_gte boolean_swap exec_when (integer_pop integer_swap in2 in2) integer_eq boolean_invert_second_then_and print_integer integer_dec tag_boolean_699 integer_dup_times exec_y_when_autoconstructing (in1 boolean_yank print_integer boolean_dup_items exec_k (integer_dec exec_shove (integer_flush integer_max boolean_swap integer_empty exec_dup_times () integer_gte tagged_569 print_integer boolean_rot exec_do*times (boolean_swap boolean_yank) exec_rot (exec_pop () exec_yank integer_mod) () ())) ()))
Zero cases best errors: [1 1 0 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 55
Percent parens: 0.236
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 2 8 2 3 3 2 6 2 3)
Population mean number of elite cases: 0.03
Count of perfect (error zero) individuals by case: (3 2 8 2 3 3 2 6 2 3)
Population mean number of perfect (error zero) cases: 0.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_max} {:close 1, :instruction exec_dup_times} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_dup_items} {:close 1, :instruction exec_rot} {:close 0, :instruction in1} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_y} {:close 0, :instruction integer_pop} {:close 1, :instruction integer_empty} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_shove} {:close 1, :instruction boolean_not} {:close 0, :instruction integer_flush} {:close 0, :instruction in3} {:close 0, :instruction in2} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction tag_integer_218} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_while} {:close 1, :instruction exec_dup_items} {:close 0, :instruction 69} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in2} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_or})
Best program: (boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush integer_empty boolean_flush integer_max exec_dup_times () exec_s_when_autoconstructing () (integer_dup_times integer_dup_items) (exec_rot () (in1 boolean_eq exec_k_when_autoconstructing (print_integer boolean_rot exec_y (integer_pop integer_empty) integer_yank boolean_dup exec_shove () boolean_not) (integer_flush in3 in2 boolean_stackdepth integer_eq tag_integer_218 exec_pop () exec_while (exec_dup_items) 69 exec_y_when_autoconstructing (in2 boolean_or boolean_dup_times exec_do*count (exec_do*range (integer_stackdepth boolean_or))))) ()))
Errors: [1 1 0 0 1 1 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 43
Size: 60
Percent parens: 0.283
--- Population Statistics ---
Average total errors in population: 9.966
Median total errors in population: 10
Error averages by case: (0.997 0.998 0.992 0.998 0.997 0.997 0.998 0.994 0.998 0.997)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 50.359
Average program size in population (points): 69.287
Average percent parens in population: 0.280
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.289
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 485459
--- Timings ---
Current time: 1559583951417 milliseconds
Total Time:           2.9 seconds
Initialization:       0.1 seconds,  3.4%
Reproduction:         0.8 seconds, 27.0%
Fitness Testing:      2.0 seconds, 69.6%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 645
Test mean error for best: 0.64500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 1111               
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 1111               
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Lexicase best errors: [1 1 1 1 1 0 0 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 24
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Zero cases best errors: [1 1 1 1 1 0 0 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 24
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 361 1000 319 1000 210 108 210 362 319)
Population mean number of elite cases: 4.89
Count of perfect (error zero) individuals by case: (0 361 0 319 0 210 108 210 362 319)
Population mean number of perfect (error zero) cases: 1.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Errors: [1 1 1 1 1 0 0 0 1 1]
Total: 7
Mean: 0.7
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 8.111
Median total errors in population: 8
Error averages by case: (1.0 0.639 1.0 0.681 1.0 0.79 0.892 0.79 0.638 0.681)
Error minima by case: (1 0 1 0 1 0 0 0 0 0)
Average genome size in population (length): 49.432
Average program size in population (points): 67.182
Average percent parens in population: 0.270
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.5
Median age in population: 1.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 117
Genome diversity (% unique genomes):	 0.5
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 122
Syntactic diversity (% unique Push programs):	 0.492
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1132062
--- Timings ---
Current time: 1559583954350 milliseconds
Total Time:           6.3 seconds
Initialization:       0.1 seconds,  1.5%
Reproduction:         2.5 seconds, 39.0%
Fitness Testing:      2.9 seconds, 45.7%
Report:               0.9 seconds, 13.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 646
Test mean error for best: 0.64600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 1414               
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_frominteger boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Lexicase best errors: [1 1 1 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 25
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_frominteger boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Zero cases best errors: [1 1 1 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 25
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (264 1000 264 627 358 358 358 98 358 358)
Population mean number of elite cases: 4.04
Count of perfect (error zero) individuals by case: (264 0 264 627 358 358 358 98 358 358)
Population mean number of perfect (error zero) cases: 3.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction integer_sub} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (integer_sub in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Errors: [1 1 1 0 0 0 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 6.957
Median total errors in population: 8
Error averages by case: (0.736 1.0 0.736 0.373 0.642 0.642 0.642 0.902 0.642 0.642)
Error minima by case: (0 1 0 0 0 0 0 0 0 0)
Average genome size in population (length): 39.007
Average program size in population (points): 54.782
Average percent parens in population: 0.319
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.028
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 245
Genome diversity (% unique genomes):	 0.577
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 245
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1618985
--- Timings ---
Current time: 1559583957588 milliseconds
Total Time:           9.5 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.7 seconds, 49.5%
Fitness Testing:      3.5 seconds, 36.6%
Report:               1.2 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 646
Test mean error for best: 0.64600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 1212               
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction integer_div} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer integer_div tag_exec_999 ()) ()))
Lexicase best errors: [1 1 0 1 0 1 0 1 1 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 23
Percent parens: 0.391
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction integer_div} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer integer_div tag_exec_999 ()) ()))
Zero cases best errors: [1 1 0 1 0 1 0 1 1 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 23
Percent parens: 0.391
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 692 1000 694 1000 694 1000 1000 1000)
Population mean number of elite cases: 9.08
Count of perfect (error zero) individuals by case: (0 0 692 0 694 0 694 0 0 0)
Population mean number of perfect (error zero) cases: 2.08
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction integer_div} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer integer_div tag_exec_999 ()) ()))
Errors: [1 1 0 1 0 1 0 1 1 1]
Total: 7
Mean: 0.7
Genome size: 14
Size: 23
Percent parens: 0.391
--- Population Statistics ---
Average total errors in population: 7.92
Median total errors in population: 7
Error averages by case: (1.0 1.0 0.308 1.0 0.306 1.0 0.306 1.0 1.0 1.0)
Error minima by case: (1 1 0 1 0 1 0 1 1 1)
Average genome size in population (length): 28.103
Average program size in population (points): 40.309
Average percent parens in population: 0.333
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.6695
Median age in population: 4.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 32
Genome diversity (% unique genomes):	 0.46
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.451
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1933310
--- Timings ---
Current time: 1559583960641 milliseconds
Total Time:          12.7 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         7.0 seconds, 55.4%
Fitness Testing:      3.9 seconds, 31.0%
Report:               1.6 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) boolean_flush) boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Lexicase best errors: [1 1 0 0 1 1 0 0 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 21
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) boolean_flush) boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Zero cases best errors: [1 1 0 0 1 1 0 0 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 21
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 915 916 1000 1000 915 915 1000 914)
Population mean number of elite cases: 9.57
Count of perfect (error zero) individuals by case: (0 0 915 916 0 0 915 915 0 914)
Population mean number of perfect (error zero) cases: 4.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) boolean_flush) boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Errors: [1 1 0 0 1 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 14
Size: 21
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.425
Median total errors in population: 5
Error averages by case: (1.0 1.0 0.085 0.084 1.0 1.0 0.085 0.085 1.0 0.086)
Error minima by case: (1 1 0 0 1 1 0 0 1 0)
Average genome size in population (length): 16.904
Average program size in population (points): 25.706
Average percent parens in population: 0.354
Minimum age in population: 4.0
Maximum age in population: 8.0
Average age in population: 6.216875
Median age in population: 6.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 37
Genome diversity (% unique genomes):	 0.382
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.367
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2203327
--- Timings ---
Current time: 1559583962921 milliseconds
Total Time:          14.9 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         8.6 seconds, 57.8%
Fitness Testing:      4.3 seconds, 28.6%
Report:               1.9 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 646
Test mean error for best: 0.64600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 1212               
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_do*while (exec_eq in2 exec_do*while (exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))))
Lexicase best errors: [0 1 1 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 28
Percent parens: 0.429
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_do*while (exec_eq in2 exec_do*while (exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))))
Zero cases best errors: [0 1 1 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 28
Percent parens: 0.429
--- Lexicase Population Statistics ---
Count of elite individuals by case: (919 1000 1 913 1 1000 1000 918 917 917)
Population mean number of elite cases: 7.59
Count of perfect (error zero) individuals by case: (919 0 1 913 1 0 0 918 917 917)
Population mean number of perfect (error zero) cases: 4.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) () ()))
Errors: [0 1 1 0 1 1 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 5.414
Median total errors in population: 5
Error averages by case: (0.081 1.0 0.999 0.087 0.999 1.0 1.0 0.082 0.083 0.083)
Error minima by case: (0 1 0 0 0 1 1 0 0 0)
Average genome size in population (length): 16.983
Average program size in population (points): 25.841
Average percent parens in population: 0.354
Minimum age in population: 5.0
Maximum age in population: 9.4375
Average age in population: 7.6563125
Median age in population: 7.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 35
Genome diversity (% unique genomes):	 0.418
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.405
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 2476104
--- Timings ---
Current time: 1559583965011 milliseconds
Total Time:          17.1 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        10.1 seconds, 59.3%
Fitness Testing:      4.6 seconds, 27.1%
Report:               2.2 seconds, 13.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 659
Test mean error for best: 0.65900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction tagged_57} {:close 0, :instruction in2} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 2, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_boolean_699} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec})
Lexicase best program: (tagged_57 in2 integer_inc boolean_or exec_pop () integer_gte boolean_swap exec_dup (integer_pop integer_swap in2 in2) integer_eq boolean_invert_second_then_and print_integer integer_dec tag_boolean_699 integer_dup_times exec_y_when_autoconstructing (in1 boolean_yank boolean_yank boolean_dup_items exec_k (integer_dec) ()))
Lexicase best errors: [0 1 0 1 1 0 1 1 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 31
Percent parens: 0.194
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction tagged_57} {:close 0, :instruction in2} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_or} {:close 1, :instruction exec_pop} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_swap} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 2, :instruction integer_eq} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_boolean_699} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec})
Zero cases best program: (tagged_57 in2 integer_inc boolean_or exec_pop () integer_gte boolean_swap exec_dup (integer_pop integer_swap in2 in2) integer_eq boolean_invert_second_then_and print_integer integer_dec tag_boolean_699 integer_dup_times exec_y_when_autoconstructing (in1 boolean_yank boolean_yank boolean_dup_items exec_k (integer_dec) ()))
Zero cases best errors: [0 1 0 1 1 0 1 1 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 31
Percent parens: 0.194
--- Lexicase Population Statistics ---
Count of elite individuals by case: (571 1000 587 321 1000 908 1000 1000 1000 321)
Population mean number of elite cases: 7.71
Count of perfect (error zero) individuals by case: (571 0 587 321 0 908 0 0 0 321)
Population mean number of perfect (error zero) cases: 2.71
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ()))
Errors: [1 1 1 0 1 0 1 1 1 0]
Total: 7
Mean: 0.7
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 7.292
Median total errors in population: 7
Error averages by case: (0.429 1.0 0.413 0.679 1.0 0.092 1.0 1.0 1.0 0.679)
Error minima by case: (0 1 0 0 1 0 1 1 1 0)
Average genome size in population (length): 15.537
Average program size in population (points): 24.795
Average percent parens in population: 0.381
Minimum age in population: 6.0
Maximum age in population: 10.96875
Average age in population: 9.16359375
Median age in population: 9.125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 289
Genome diversity (% unique genomes):	 0.397
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 289
Syntactic diversity (% unique Push programs):	 0.387
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2756952
--- Timings ---
Current time: 1559583967193 milliseconds
Total Time:          19.3 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        11.6 seconds, 60.5%
Fitness Testing:      5.0 seconds, 26.1%
Report:               2.5 seconds, 12.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 647
Test mean error for best: 0.64700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 88                 
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 1515               
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_if} {:close 0, :instruction integer_max} {:close 0, :instruction exec_noop} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction -20} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_min})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq exec_if () (integer_max exec_noop boolean_swap) boolean_dup integer_add) exec_dup (integer_gte print_integer -20 integer_sub integer_dup_items integer_min)))
Lexicase best errors: [0 1 1 0 0 1 1 1 1 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 28
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_if} {:close 0, :instruction integer_max} {:close 0, :instruction exec_noop} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction -20} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_min})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq exec_if () (integer_max exec_noop boolean_swap) boolean_dup integer_add) exec_dup (integer_gte print_integer -20 integer_sub integer_dup_items integer_min)))
Zero cases best errors: [0 1 1 0 0 1 1 1 1 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 28
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (425 1000 1000 472 470 1000 430 1000 1000 1000)
Population mean number of elite cases: 7.80
Count of perfect (error zero) individuals by case: (425 0 0 472 470 0 430 0 0 0)
Population mean number of perfect (error zero) cases: 1.80
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_xor} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup_times} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (boolean_xor in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer integer_dup_times tag_exec_999 ()) ()))
Errors: [0 1 1 0 0 1 1 1 1 1]
Total: 7
Mean: 0.7
Genome size: 14
Size: 23
Percent parens: 0.391
--- Population Statistics ---
Average total errors in population: 8.203
Median total errors in population: 9
Error averages by case: (0.575 1.0 1.0 0.528 0.53 1.0 0.57 1.0 1.0 1.0)
Error minima by case: (0 1 1 0 0 1 0 1 1 1)
Average genome size in population (length): 14.974
Average program size in population (points): 24.29
Average percent parens in population: 0.387
Minimum age in population: 8.0
Maximum age in population: 12.5
Average age in population: 10.695484375
Median age in population: 10.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 342
Genome diversity (% unique genomes):	 0.395
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 343
Syntactic diversity (% unique Push programs):	 0.383
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 3031181
--- Timings ---
Current time: 1559583970314 milliseconds
Total Time:          22.3 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        14.0 seconds, 63.0%
Fitness Testing:      5.4 seconds, 24.3%
Report:               2.7 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_xor} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_do*while (boolean_xor in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ())))
Lexicase best errors: [0 1 0 0 1 1 1 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 26
Percent parens: 0.423
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_xor} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_do*while (boolean_xor in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ())))
Zero cases best errors: [0 1 0 0 1 1 1 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 26
Percent parens: 0.423
--- Lexicase Population Statistics ---
Count of elite individuals by case: (693 1000 689 695 1000 225 1000 693 918 1000)
Population mean number of elite cases: 7.91
Count of perfect (error zero) individuals by case: (693 0 689 695 0 225 0 693 918 0)
Population mean number of perfect (error zero) cases: 3.91
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Errors: [0 1 0 0 1 1 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 13
Size: 18
Percent parens: 0.278
--- Population Statistics ---
Average total errors in population: 6.087
Median total errors in population: 5
Error averages by case: (0.307 1.0 0.311 0.305 1.0 0.775 1.0 0.307 0.082 1.0)
Error minima by case: (0 1 0 0 1 0 1 0 0 1)
Average genome size in population (length): 15.382
Average program size in population (points): 24.248
Average percent parens in population: 0.370
Minimum age in population: 9.125
Maximum age in population: 14.09375
Average age in population: 12.1650859375
Median age in population: 12.20703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 158
Genome diversity (% unique genomes):	 0.431
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 159
Syntactic diversity (% unique Push programs):	 0.424
Total error diversity:				 0.006
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 3296988
--- Timings ---
Current time: 1559583972718 milliseconds
Total Time:          24.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        16.0 seconds, 64.1%
Fitness Testing:      5.8 seconds, 23.2%
Report:               3.1 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction integer_max} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction -20} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_min})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) integer_max exec_noop boolean_swap boolean_dup integer_add) exec_dup (integer_gte print_integer -20 integer_sub integer_dup_items integer_min))
Lexicase best errors: [1 0 1 1 1 1 1 0 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 26
Percent parens: 0.192
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction integer_max} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction -20} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_min})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) integer_max exec_noop boolean_swap boolean_dup integer_add) exec_dup (integer_gte print_integer -20 integer_sub integer_dup_items integer_min))
Zero cases best errors: [1 0 1 1 1 1 1 0 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 26
Percent parens: 0.192
--- Lexicase Population Statistics ---
Count of elite individuals by case: (188 921 1000 1000 1000 1000 188 734 733 1000)
Population mean number of elite cases: 7.76
Count of perfect (error zero) individuals by case: (188 921 0 0 0 0 188 734 733 0)
Population mean number of perfect (error zero) cases: 2.76
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_max} {:close 0, :instruction integer_max} {:close 0, :instruction exec_noop} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_add} {:close 0, :instruction integer_div} {:close 0, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction -20} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_min})
Best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max integer_max exec_noop boolean_swap) boolean_dup integer_add) integer_div integer_gte print_integer -20 integer_sub integer_dup_items integer_min)
Errors: [1 0 1 1 1 1 1 0 0 1]
Total: 7
Mean: 0.7
Genome size: 21
Size: 25
Percent parens: 0.160
--- Population Statistics ---
Average total errors in population: 7.236
Median total errors in population: 7
Error averages by case: (0.812 0.079 1.0 1.0 1.0 1.0 0.812 0.266 0.267 1.0)
Error minima by case: (0 0 1 1 1 1 0 0 0 1)
Average genome size in population (length): 15.345
Average program size in population (points): 24.076
Average percent parens in population: 0.366
Minimum age in population: 10.125
Maximum age in population: 15.4921875
Average age in population: 13.64635546875
Median age in population: 13.705078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 105
Genome diversity (% unique genomes):	 0.475
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.464
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 3554017
--- Timings ---
Current time: 1559583974839 milliseconds
Total Time:          27.0 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        17.6 seconds, 65.1%
Fitness Testing:      6.1 seconds, 22.7%
Report:               3.2 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Smallest problem report - generation 10
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ()))
Lexicase best errors: [1 1 1 1 0 1 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 24
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ()))
Zero cases best errors: [1 1 1 1 0 1 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 24
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 452 1 462 1000 463 462 462 435)
Population mean number of elite cases: 5.74
Count of perfect (error zero) individuals by case: (0 0 452 1 462 0 463 462 462 435)
Population mean number of perfect (error zero) cases: 2.74
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Errors: [1 1 1 1 0 1 0 0 0 0]
Total: 5
Mean: 0.5
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 7.263
Median total errors in population: 9
Error averages by case: (1.0 1.0 0.548 0.999 0.538 1.0 0.537 0.538 0.538 0.565)
Error minima by case: (1 1 0 0 0 1 0 0 0 0)
Average genome size in population (length): 14.995
Average program size in population (points): 23.992
Average percent parens in population: 0.377
Minimum age in population: 12.40625
Maximum age in population: 16.9921875
Average age in population: 15.16487109375
Median age in population: 15.244140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 223
Genome diversity (% unique genomes):	 0.445
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 227
Syntactic diversity (% unique Push programs):	 0.436
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 3817247
--- Timings ---
Current time: 1559583977101 milliseconds
Total Time:          29.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.2 seconds, 65.9%
Fitness Testing:      6.5 seconds, 22.3%
Report:               3.3 seconds, 11.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ())) ()))
Lexicase best errors: [1 0 1 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 36
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ())) ()))
Zero cases best errors: [1 0 1 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 36
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 664 125 663 664 663 125 1000 789 789)
Population mean number of elite cases: 6.48
Count of perfect (error zero) individuals by case: (0 664 125 663 664 663 125 0 789 789)
Population mean number of perfect (error zero) cases: 4.48
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 boolean_swap) print_integer exec_while () tag_exec_999 ())
Errors: [1 0 1 0 0 0 1 1 0 0]
Total: 4
Mean: 0.4
Genome size: 14
Size: 20
Percent parens: 0.300
--- Population Statistics ---
Average total errors in population: 5.518
Median total errors in population: 4
Error averages by case: (1.0 0.336 0.875 0.337 0.336 0.337 0.875 1.0 0.211 0.211)
Error minima by case: (1 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 14.298
Average program size in population (points): 23.464
Average percent parens in population: 0.390
Minimum age in population: 13.40625
Maximum age in population: 18.447265625
Average age in population: 16.641859375
Median age in population: 16.7314453125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 316
Genome diversity (% unique genomes):	 0.346
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 322
Syntactic diversity (% unique Push programs):	 0.339
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 4056274
--- Timings ---
Current time: 1559583979604 milliseconds
Total Time:          31.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        21.3 seconds, 66.9%
Fitness Testing:      6.8 seconds, 21.5%
Report:               3.6 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Smallest problem report - generation 12
Test total error for best: 659
Test mean error for best: 0.65900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ()))
Lexicase best errors: [1 1 1 0 0 0 1 1 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 24
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ()))
Zero cases best errors: [1 1 1 0 0 0 1 1 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 24
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (320 1000 1000 595 914 584 1000 1000 595 316)
Population mean number of elite cases: 7.32
Count of perfect (error zero) individuals by case: (320 0 0 595 914 584 0 0 595 316)
Population mean number of perfect (error zero) cases: 3.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ()))
Errors: [1 1 1 0 0 0 1 1 0 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 6.676
Median total errors in population: 6
Error averages by case: (0.68 1.0 1.0 0.405 0.086 0.416 1.0 1.0 0.405 0.684)
Error minima by case: (0 1 1 0 0 0 1 1 0 0)
Average genome size in population (length): 14.716
Average program size in population (points): 23.942
Average percent parens in population: 0.385
Minimum age in population: 14.40625
Maximum age in population: 20.0791015625
Average age in population: 18.13303955078125
Median age in population: 18.19140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 224
Genome diversity (% unique genomes):	 0.402
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 227
Syntactic diversity (% unique Push programs):	 0.394
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 4320633
--- Timings ---
Current time: 1559583981964 milliseconds
Total Time:          34.0 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        23.0 seconds, 67.6%
Fitness Testing:      7.2 seconds, 21.1%
Report:               3.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Smallest problem report - generation 13
Test total error for best: 659
Test mean error for best: 0.65900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq exec_shove () in1 boolean_swap print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [0 0 1 0 1 0 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq exec_shove () in1 boolean_swap print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [0 0 1 0 1 0 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (918 557 355 911 1000 910 910 355 555 910)
Population mean number of elite cases: 7.38
Count of perfect (error zero) individuals by case: (918 557 355 911 0 910 910 355 555 910)
Population mean number of perfect (error zero) cases: 6.38
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth exec_s (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) () ())))
Errors: [0 0 1 0 1 0 0 1 0 0]
Total: 3
Mean: 0.3
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 3.619
Median total errors in population: 3
Error averages by case: (0.082 0.443 0.645 0.089 1.0 0.09 0.09 0.645 0.445 0.09)
Error minima by case: (0 0 0 0 1 0 0 0 0 0)
Average genome size in population (length): 14.668
Average program size in population (points): 23.79
Average percent parens in population: 0.383
Minimum age in population: 16.75390625
Maximum age in population: 21.45703125
Average age in population: 19.60232543945312
Median age in population: 19.6468505859375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 194
Genome diversity (% unique genomes):	 0.411
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 197
Syntactic diversity (% unique Push programs):	 0.399
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 4581355
--- Timings ---
Current time: 1559583984868 milliseconds
Total Time:          36.9 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        25.3 seconds, 68.4%
Fitness Testing:      7.5 seconds, 20.4%
Report:               4.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Smallest problem report - generation 14
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Lexicase best errors: [1 1 1 0 1 1 1 0 1 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 24
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ()))
Zero cases best errors: [1 1 1 0 1 1 1 0 1 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 24
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 1000 470 1000 1000 1000 902 432 470)
Population mean number of elite cases: 8.27
Count of perfect (error zero) individuals by case: (0 0 0 470 0 0 0 902 432 470)
Population mean number of perfect (error zero) cases: 2.27
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_s} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush exec_s () (exec_do*count (exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))) ())
Errors: [1 1 1 0 1 1 1 0 1 0]
Total: 7
Mean: 0.7
Genome size: 14
Size: 23
Percent parens: 0.391
--- Population Statistics ---
Average total errors in population: 7.726
Median total errors in population: 8
Error averages by case: (1.0 1.0 1.0 0.53 1.0 1.0 1.0 0.098 0.568 0.53)
Error minima by case: (1 1 1 0 1 1 1 0 0 0)
Average genome size in population (length): 14.877
Average program size in population (points): 23.863
Average percent parens in population: 0.376
Minimum age in population: 17.75390625
Maximum age in population: 23.401123046875
Average age in population: 21.11276086425781
Median age in population: 21.197509765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 124
Genome diversity (% unique genomes):	 0.452
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 126
Syntactic diversity (% unique Push programs):	 0.442
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 4828862
--- Timings ---
Current time: 1559583987225 milliseconds
Total Time:          39.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        27.2 seconds, 68.9%
Fitness Testing:      7.9 seconds, 20.0%
Report:               4.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Smallest problem report - generation 15
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_not} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction integer_dup_items} {:close 0, :instruction in2} {:close 3, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (boolean_not exec_stackdepth exec_eq in2 exec_do*while (integer_dup_items) in2 boolean_swap print_integer exec_while (tag_exec_999 ()))
Lexicase best errors: [0 0 1 1 1 1 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 15
Percent parens: 0.267
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_not} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction integer_dup_items} {:close 0, :instruction in2} {:close 3, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (boolean_not exec_stackdepth exec_eq in2 exec_do*while (integer_dup_items) in2 boolean_swap print_integer exec_while (tag_exec_999 ()))
Zero cases best errors: [0 0 1 1 1 1 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 15
Percent parens: 0.267
--- Lexicase Population Statistics ---
Count of elite individuals by case: (905 604 1 1000 1000 300 604 300 1000 605)
Population mean number of elite cases: 6.32
Count of perfect (error zero) individuals by case: (905 604 1 0 0 300 604 300 0 605)
Population mean number of perfect (error zero) cases: 3.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_flush} {:close 0, :instruction tagged_650} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_964})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) boolean_flush tagged_650 exec_dup_times (exec_shove () in2 boolean_swap) boolean_swap) print_integer exec_while (tag_exec_964 ()))
Errors: [0 0 1 1 1 1 0 1 1 0]
Total: 6
Mean: 0.6
Genome size: 15
Size: 22
Percent parens: 0.318
--- Population Statistics ---
Average total errors in population: 6.681
Median total errors in population: 6
Error averages by case: (0.095 0.396 0.999 1.0 1.0 0.7 0.396 0.7 1.0 0.395)
Error minima by case: (0 0 0 1 1 0 0 0 1 0)
Average genome size in population (length): 15.178
Average program size in population (points): 24.048
Average percent parens in population: 0.369
Minimum age in population: 19.36083984375
Maximum age in population: 24.5909423828125
Average age in population: 22.62782977294922
Median age in population: 22.70645141601562
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 72
Genome diversity (% unique genomes):	 0.469
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 74
Syntactic diversity (% unique Push programs):	 0.458
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 5076335
--- Timings ---
Current time: 1559583990066 milliseconds
Total Time:          42.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.3 seconds, 69.8%
Fitness Testing:      8.2 seconds, 19.5%
Report:               4.4 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Smallest problem report - generation 16
Test total error for best: 643
Test mean error for best: 0.64300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -7                 
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 43                 
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 74                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 44                 
Correct output: 32                  | Program output: 67                 
Correct output: 29                  | Program output: 95                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 63                 
Correct output: 8                   | Program output: 99                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 33                 
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 98                 
Correct output: 15                  | Program output: 25                 
Correct output: 12                  | Program output: 42                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 93                 
Correct output: -94                 | Program output: -66                
Correct output: -24                 | Program output: 4                  
Correct output: -100                | Program output: 93                 
Correct output: -23                 | Program output: 33                 
Correct output: -15                 | Program output: 87                 
Correct output: -86                 | Program output: 54                 
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -3                 
Correct output: -29                 | Program output: 77                 
Correct output: -20                 | Program output: 35                 
Correct output: -68                 | Program output: 56                 
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 18                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 62                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -5                 
Correct output: -52                 | Program output: -31                
Correct output: -85                 | Program output: -7                 
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: 93                 
Correct output: -60                 | Program output: -11                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: 58                 
Correct output: -68                 | Program output: -18                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -39                
Correct output: -39                 | Program output: 39                 
Correct output: -53                 | Program output: -23                
Correct output: -82                 | Program output: 61                 
Correct output: -94                 | Program output: 94                 
Correct output: -78                 | Program output: 73                 
Correct output: -53                 | Program output: 72                 
Correct output: -44                 | Program output: 25                 
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -15                
Correct output: -88                 | Program output: 43                 
Correct output: -57                 | Program output: 32                 
Correct output: -29                 | Program output: -5                 
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -8                 
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -26                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -46                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -37                
Correct output: -73                 | Program output: 85                 
Correct output: -76                 | Program output: -14                
Correct output: -86                 | Program output: 96                 
Correct output: -96                 | Program output: -17                
Correct output: -60                 | Program output: 4                  
Correct output: -74                 | Program output: -41                
Correct output: -44                 | Program output: 49                 
Correct output: -74                 | Program output: -36                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction tagged_57} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction exec_when} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_dup} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 1, :instruction exec_do*range} {:close 0, :instruction in4} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_yankdup})
Lexicase best program: (tagged_57 in2 integer_min exec_when (integer_eq integer_empty print_integer exec_yank boolean_stackdepth exec_do*range (boolean_dup integer_dup) exec_y_when_autoconstructing () integer_dup_times exec_do*range () in4 integer_fromboolean) boolean_pop exec_yankdup)
Lexicase best errors: [1 1 1 1 0 1 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 8
Lexicase best mean error: 0.8
Lexicase best size: 24
Percent parens: 0.208
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction tagged_57} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction exec_when} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_empty} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_dup} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 1, :instruction exec_do*range} {:close 0, :instruction in4} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_yankdup})
Zero cases best program: (tagged_57 in2 integer_min exec_when (integer_eq integer_empty print_integer exec_yank boolean_stackdepth exec_do*range (boolean_dup integer_dup) exec_y_when_autoconstructing () integer_dup_times exec_do*range () in4 integer_fromboolean) boolean_pop exec_yankdup)
Zero cases best errors: [1 1 1 1 0 1 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 2
Zero cases best total error: 8
Zero cases best mean error: 0.8
Zero cases best size: 24
Percent parens: 0.208
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 223 1000 242 467 241 220 1000 467 1000)
Population mean number of elite cases: 5.86
Count of perfect (error zero) individuals by case: (0 223 0 242 467 241 220 0 467 0)
Population mean number of perfect (error zero) cases: 1.86
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 in4) print_integer exec_while () tag_exec_999 ())
Errors: [1 1 1 0 1 0 1 1 1 1]
Total: 8
Mean: 0.8
Genome size: 14
Size: 20
Percent parens: 0.300
--- Population Statistics ---
Average total errors in population: 8.14
Median total errors in population: 8
Error averages by case: (1.0 0.777 1.0 0.758 0.533 0.759 0.78 1.0 0.533 1.0)
Error minima by case: (1 0 1 0 0 0 0 1 0 1)
Average genome size in population (length): 14.539
Average program size in population (points): 22.5
Average percent parens in population: 0.351
Minimum age in population: 21.23046875
Maximum age in population: 26.234130859375
Average age in population: 24.24700143432617
Median age in population: 24.41752624511719
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 202
Genome diversity (% unique genomes):	 0.465
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 205
Syntactic diversity (% unique Push programs):	 0.448
Total error diversity:				 0.003
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 5278882
--- Timings ---
Current time: 1559583992326 milliseconds
Total Time:          44.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.2 seconds, 70.1%
Fitness Testing:      8.5 seconds, 19.1%
Report:               4.7 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Smallest problem report - generation 17
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer})
Lexicase best program: (boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush boolean_eq integer_yankdup boolean_flush boolean_eq boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush boolean_eq exec_dup_times (exec_shove (in2 boolean_swap) print_integer))
Lexicase best errors: [1 0 1 0 0 1 1 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 23
Percent parens: 0.130
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer})
Zero cases best program: (boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush boolean_eq integer_yankdup boolean_flush boolean_eq boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush boolean_eq exec_dup_times (exec_shove (in2 boolean_swap) print_integer))
Zero cases best errors: [1 0 1 0 0 1 1 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 23
Percent parens: 0.130
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 596 331 303 301 293 331 1000 293 1000)
Population mean number of elite cases: 5.45
Count of perfect (error zero) individuals by case: (0 596 331 303 301 293 331 0 293 0)
Population mean number of perfect (error zero) cases: 2.45
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 1, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq) in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ())
Errors: [1 0 1 0 0 1 1 1 1 1]
Total: 7
Mean: 0.7
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 7.552
Median total errors in population: 7
Error averages by case: (1.0 0.404 0.669 0.697 0.699 0.707 0.669 1.0 0.707 1.0)
Error minima by case: (1 0 0 0 0 0 0 1 0 1)
Average genome size in population (length): 14.327
Average program size in population (points): 22.097
Average percent parens in population: 0.347
Minimum age in population: 22.67388916015625
Maximum age in population: 27.71870422363281
Average age in population: 25.74519075012207
Median age in population: 25.79286193847656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 235
Genome diversity (% unique genomes):	 0.445
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 239
Syntactic diversity (% unique Push programs):	 0.434
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 5475061
--- Timings ---
Current time: 1559583995037 milliseconds
Total Time:          47.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        33.4 seconds, 70.8%
Fitness Testing:      8.8 seconds, 18.6%
Report:               4.9 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Smallest problem report - generation 18
Test total error for best: 659
Test mean error for best: 0.65900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 in4 exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ())
Lexicase best errors: [1 0 1 1 1 1 1 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 23
Percent parens: 0.391
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 in4 exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ())
Zero cases best errors: [1 0 1 1 1 1 1 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 23
Percent parens: 0.391
--- Lexicase Population Statistics ---
Count of elite individuals by case: (355 305 362 1000 1000 259 1000 305 258 305)
Population mean number of elite cases: 5.15
Count of perfect (error zero) individuals by case: (355 305 362 0 0 259 0 305 258 305)
Population mean number of perfect (error zero) cases: 2.15
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in1} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s () (boolean_eq exec_dup_times (exec_shove () in1 boolean_swap) print_integer exec_while () tag_exec_999 ()) ()))
Errors: [1 0 1 1 1 1 1 0 1 0]
Total: 7
Mean: 0.7
Genome size: 14
Size: 24
Percent parens: 0.417
--- Population Statistics ---
Average total errors in population: 7.851
Median total errors in population: 8
Error averages by case: (0.645 0.695 0.638 1.0 1.0 0.741 1.0 0.695 0.742 0.695)
Error minima by case: (0 0 0 1 1 0 1 0 0 0)
Average genome size in population (length): 14.342
Average program size in population (points): 22.19
Average percent parens in population: 0.349
Minimum age in population: 24.60150146484375
Maximum age in population: 29.2716064453125
Average age in population: 27.22018165588379
Median age in population: 27.27301788330078
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 136
Genome diversity (% unique genomes):	 0.478
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 142
Syntactic diversity (% unique Push programs):	 0.465
Total error diversity:				 0.004
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 5680935
--- Timings ---
Current time: 1559583997637 milliseconds
Total Time:          49.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        35.4 seconds, 71.3%
Fitness Testing:      9.1 seconds, 18.2%
Report:               5.1 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Smallest problem report - generation 19
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Lexicase best errors: [0 0 1 0 1 1 0 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 12
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Zero cases best errors: [0 0 1 0 1 1 0 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 12
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (280 279 286 279 1000 286 644 284 1000 1000)
Population mean number of elite cases: 5.34
Count of perfect (error zero) individuals by case: (280 279 286 279 0 286 644 284 0 0)
Population mean number of perfect (error zero) cases: 2.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_s} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 2, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (boolean_yank integer_dup_items integer_inc integer_yankdup boolean_flush exec_s () (exec_do*count (exec_dup_times (exec_shove () in2 boolean_swap)) print_integer exec_while (tag_exec_999 ())) ())
Errors: [0 0 1 0 1 1 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 23
Percent parens: 0.391
--- Population Statistics ---
Average total errors in population: 7.662
Median total errors in population: 7
Error averages by case: (0.72 0.721 0.714 0.721 1.0 0.714 0.356 0.716 1.0 1.0)
Error minima by case: (0 0 0 0 1 0 0 0 1 1)
Average genome size in population (length): 14.372
Average program size in population (points): 22.215
Average percent parens in population: 0.348
Minimum age in population: 25.70458984375
Maximum age in population: 30.77449417114258
Average age in population: 28.76055807876587
Median age in population: 28.83216094970703
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 128
Genome diversity (% unique genomes):	 0.494
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 133
Syntactic diversity (% unique Push programs):	 0.481
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 5885014
--- Timings ---
Current time: 1559584000325 milliseconds
Total Time:          52.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        37.7 seconds, 71.7%
Fitness Testing:      9.4 seconds, 17.8%
Report:               5.4 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Smallest problem report - generation 20
Test total error for best: 643
Test mean error for best: 0.64300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -7                 
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 43                 
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 74                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 44                 
Correct output: 32                  | Program output: 67                 
Correct output: 29                  | Program output: 95                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 63                 
Correct output: 8                   | Program output: 99                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 33                 
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 98                 
Correct output: 15                  | Program output: 25                 
Correct output: 12                  | Program output: 42                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 93                 
Correct output: -94                 | Program output: -66                
Correct output: -24                 | Program output: 4                  
Correct output: -100                | Program output: 93                 
Correct output: -23                 | Program output: 33                 
Correct output: -15                 | Program output: 87                 
Correct output: -86                 | Program output: 54                 
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -3                 
Correct output: -29                 | Program output: 77                 
Correct output: -20                 | Program output: 35                 
Correct output: -68                 | Program output: 56                 
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 18                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 62                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -5                 
Correct output: -52                 | Program output: -31                
Correct output: -85                 | Program output: -7                 
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: 93                 
Correct output: -60                 | Program output: -11                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: 58                 
Correct output: -68                 | Program output: -18                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -39                
Correct output: -39                 | Program output: 39                 
Correct output: -53                 | Program output: -23                
Correct output: -82                 | Program output: 61                 
Correct output: -94                 | Program output: 94                 
Correct output: -78                 | Program output: 73                 
Correct output: -53                 | Program output: 72                 
Correct output: -44                 | Program output: 25                 
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -15                
Correct output: -88                 | Program output: 43                 
Correct output: -57                 | Program output: 32                 
Correct output: -29                 | Program output: -5                 
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -8                 
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -26                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -46                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -37                
Correct output: -73                 | Program output: 85                 
Correct output: -76                 | Program output: -14                
Correct output: -86                 | Program output: 96                 
Correct output: -96                 | Program output: -17                
Correct output: -60                 | Program output: 4                  
Correct output: -74                 | Program output: -41                
Correct output: -44                 | Program output: 49                 
Correct output: -74                 | Program output: -36                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 1, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1) in4 print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [1 1 0 1 1 0 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 20
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 1, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1) in4 print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [1 1 0 1 1 0 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 20
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (522 525 930 3 1000 409 412 409 1000 1000)
Population mean number of elite cases: 6.21
Count of perfect (error zero) individuals by case: (522 525 930 3 0 409 412 409 0 0)
Population mean number of perfect (error zero) cases: 3.21
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (boolean_not integer_eq integer_max) in1 in4 print_integer exec_while () tag_exec_999 ())
Errors: [1 1 0 1 1 0 0 0 1 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 19
Percent parens: 0.263
--- Population Statistics ---
Average total errors in population: 6.79
Median total errors in population: 7
Error averages by case: (0.478 0.475 0.07 0.997 1.0 0.591 0.588 0.591 1.0 1.0)
Error minima by case: (0 0 0 0 1 0 0 0 1 1)
Average genome size in population (length): 14.612
Average program size in population (points): 21.803
Average percent parens in population: 0.327
Minimum age in population: 27.36093139648438
Maximum age in population: 32.22770309448242
Average age in population: 30.3395237865448
Median age in population: 30.42415809631348
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 152
Genome diversity (% unique genomes):	 0.435
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 158
Syntactic diversity (% unique Push programs):	 0.42
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 6056446
--- Timings ---
Current time: 1559584002788 milliseconds
Total Time:          55.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        39.8 seconds, 72.3%
Fitness Testing:      9.6 seconds, 17.4%
Report:               5.5 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Smallest problem report - generation 21
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s (boolean_eq exec_dup_times (in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) () ()))
Lexicase best errors: [1 1 0 0 1 0 1 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 22
Percent parens: 0.409
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) exec_s (boolean_eq exec_dup_times (in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) () ()))
Zero cases best errors: [1 1 0 0 1 0 1 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 22
Percent parens: 0.409
--- Lexicase Population Statistics ---
Count of elite individuals by case: (154 154 326 481 461 327 1000 326 154 463)
Population mean number of elite cases: 3.85
Count of perfect (error zero) individuals by case: (154 154 326 481 461 327 0 326 154 463)
Population mean number of perfect (error zero) cases: 2.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 1, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction integer_lt})
Best program: (exec_do*while (exec_eq) in2 boolean_dup_times exec_stackdepth exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (integer_lt)) ())
Errors: [1 1 0 0 1 0 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 22
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 7.154
Median total errors in population: 8
Error averages by case: (0.846 0.846 0.674 0.519 0.539 0.673 1.0 0.674 0.846 0.537)
Error minima by case: (0 0 0 0 0 0 1 0 0 0)
Average genome size in population (length): 14.595
Average program size in population (points): 21.561
Average percent parens in population: 0.321
Minimum age in population: 28.36093139648438
Maximum age in population: 33.82324314117432
Average age in population: 31.94678715515137
Median age in population: 32.03020620346069
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 137
Genome diversity (% unique genomes):	 0.428
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 147
Syntactic diversity (% unique Push programs):	 0.416
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 6212991
--- Timings ---
Current time: 1559584004996 milliseconds
Total Time:          57.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        41.5 seconds, 72.7%
Fitness Testing:      9.8 seconds, 17.2%
Report:               5.7 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Smallest problem report - generation 22
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_shove integer_mult exec_noop exec_eq boolean_dup exec_do*range (exec_while (integer_eq integer_max) in1 exec_if () (print_integer exec_while () tag_exec_999 ())))
Lexicase best errors: [1 1 0 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 21
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_shove integer_mult exec_noop exec_eq boolean_dup exec_do*range (exec_while (integer_eq integer_max) in1 exec_if () (print_integer exec_while () tag_exec_999 ())))
Zero cases best errors: [1 1 0 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 21
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (332 557 382 380 334 225 225 938 380 380)
Population mean number of elite cases: 4.13
Count of perfect (error zero) individuals by case: (332 557 382 380 334 225 225 938 380 380)
Population mean number of perfect (error zero) cases: 4.13
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 exec_k_when_autoconstructing () (print_integer exec_while () tag_exec_999 ())))
Errors: [1 1 0 0 1 1 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 14
Size: 22
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 5.867
Median total errors in population: 6
Error averages by case: (0.668 0.443 0.618 0.62 0.666 0.775 0.775 0.062 0.62 0.62)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.402
Average program size in population (points): 21.639
Average percent parens in population: 0.333
Minimum age in population: 29.93562316894531
Maximum age in population: 35.41302108764648
Average age in population: 33.39473416280746
Median age in population: 33.440269947052
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 98
Genome diversity (% unique genomes):	 0.432
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 98
Syntactic diversity (% unique Push programs):	 0.417
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 6365026
--- Timings ---
Current time: 1559584007430 milliseconds
Total Time:          59.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        43.6 seconds, 73.2%
Fitness Testing:     10.0 seconds, 16.8%
Report:               5.9 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Smallest problem report - generation 23
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 1, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1) in4 print_integer exec_while (tag_exec_999 ()))
Lexicase best errors: [0 1 0 0 1 1 0 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 20
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 1, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1) in4 print_integer exec_while (tag_exec_999 ()))
Zero cases best errors: [0 1 0 0 1 1 0 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 20
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (513 1000 938 249 687 1000 249 263 425 1000)
Population mean number of elite cases: 6.32
Count of perfect (error zero) individuals by case: (513 0 938 249 687 0 249 263 425 0)
Population mean number of perfect (error zero) cases: 3.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_dec} {:close 0, :instruction boolean_xor} {:close 0, :instruction in2} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (integer_dec boolean_xor in2 integer_eq exec_stackdepth exec_s () (boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ())) ())
Errors: [0 1 0 1 0 1 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 22
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 6.676
Median total errors in population: 6
Error averages by case: (0.487 1.0 0.062 0.751 0.313 1.0 0.751 0.737 0.575 1.0)
Error minima by case: (0 1 0 0 0 1 0 0 0 1)
Average genome size in population (length): 14.319
Average program size in population (points): 21.436
Average percent parens in population: 0.331
Minimum age in population: 31.3389892578125
Maximum age in population: 36.81545400619507
Average age in population: 34.88710246968269
Median age in population: 34.94806504249573
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 91
Genome diversity (% unique genomes):	 0.456
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 91
Syntactic diversity (% unique Push programs):	 0.44
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 6506479
--- Timings ---
Current time: 1559584009877 milliseconds
Total Time:          62.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        45.7 seconds, 73.7%
Fitness Testing:     10.2 seconds, 16.5%
Report:               6.0 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Smallest problem report - generation 24
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_boolean_699} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_shove})
Lexicase best program: (in3 exec_do*range () boolean_yank integer_dup_items integer_inc exec_shove () in2 boolean_swap print_integer print_integer integer_dec tag_boolean_699 integer_dup_times exec_y_when_autoconstructing (in1 boolean_yank boolean_yank exec_k_when_autoconstructing (exec_k (integer_dec exec_shove ()) ()) ()))
Lexicase best errors: [1 0 0 1 0 1 0 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 30
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_boolean_699} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_k} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_shove})
Zero cases best program: (in3 exec_do*range () boolean_yank integer_dup_items integer_inc exec_shove () in2 boolean_swap print_integer print_integer integer_dec tag_boolean_699 integer_dup_times exec_y_when_autoconstructing (in1 boolean_yank boolean_yank exec_k_when_autoconstructing (exec_k (integer_dec exec_shove ()) ()) ()))
Zero cases best errors: [1 0 0 1 0 1 0 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 30
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 945 356 1000 573 217 355 344 217 944)
Population mean number of elite cases: 5.95
Count of perfect (error zero) individuals by case: (0 945 356 0 573 217 355 344 217 944)
Population mean number of perfect (error zero) cases: 3.95
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction integer_dec} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (exec_eq in2 exec_do*while (exec_stackdepth) integer_dec) boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Errors: [1 0 0 1 0 1 0 0 1 0]
Total: 4
Mean: 0.4
Genome size: 14
Size: 21
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.049
Median total errors in population: 5
Error averages by case: (1.0 0.055 0.644 1.0 0.427 0.783 0.645 0.656 0.783 0.056)
Error minima by case: (1 0 0 1 0 0 0 0 0 0)
Average genome size in population (length): 14.234
Average program size in population (points): 21.21
Average percent parens in population: 0.327
Minimum age in population: 33.04058647155762
Maximum age in population: 38.4661238193512
Average age in population: 36.41411874032021
Median age in population: 36.46661347150803
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 39
Genome diversity (% unique genomes):	 0.486
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.468
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 6665081
--- Timings ---
Current time: 1559584012299 milliseconds
Total Time:          64.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        47.6 seconds, 74.0%
Fitness Testing:     10.4 seconds, 16.2%
Report:               6.2 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Smallest problem report - generation 25
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_max) in1 boolean_not) (print_integer tag_exec_782 () tag_exec_999 ()))
Lexicase best errors: [0 1 0 0 1 1 1 1 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 21
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_max) in1 boolean_not) (print_integer tag_exec_782 () tag_exec_999 ()))
Zero cases best errors: [0 1 0 0 1 1 1 1 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 21
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (386 568 386 954 1000 1000 1000 1000 567 386)
Population mean number of elite cases: 7.25
Count of perfect (error zero) individuals by case: (386 568 386 954 0 0 0 0 567 386)
Population mean number of perfect (error zero) cases: 3.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_noop} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_div} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 2, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult exec_noop) exec_eq boolean_dup exec_do*range (integer_div integer_eq integer_max) in1 exec_if () (print_integer exec_while ()) tag_exec_999 ())
Errors: [0 1 0 0 1 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 14
Size: 21
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.753
Median total errors in population: 7
Error averages by case: (0.614 0.432 0.614 0.046 1.0 1.0 1.0 1.0 0.433 0.614)
Error minima by case: (0 0 0 0 1 1 1 1 0 0)
Average genome size in population (length): 14.415
Average program size in population (points): 22.135
Average percent parens in population: 0.348
Minimum age in population: 34.60760879516602
Maximum age in population: 39.9515073299408
Average age in population: 37.92259825593233
Median age in population: 38.02329900860786
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 64
Genome diversity (% unique genomes):	 0.428
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.41
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 6829108
--- Timings ---
Current time: 1559584014811 milliseconds
Total Time:          67.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.8 seconds, 74.3%
Fitness Testing:     10.6 seconds, 15.9%
Report:               6.5 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Smallest problem report - generation 26
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_do*count} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*while (exec_eq in2 boolean_xor exec_stackdepth) exec_do*count () boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Lexicase best errors: [1 0 1 1 1 0 1 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 21
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction exec_eq} {:close 0, :instruction in2} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_do*count} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_shove} {:close 0, :instruction in2} {:close 1, :instruction boolean_swap} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*while (exec_eq in2 boolean_xor exec_stackdepth) exec_do*count () boolean_eq exec_dup_times (exec_shove () in2 boolean_swap) print_integer exec_while (tag_exec_999 ()))
Zero cases best errors: [1 0 1 1 1 0 1 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 21
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (561 929 1000 561 1000 368 1000 368 1000 1000)
Population mean number of elite cases: 7.79
Count of perfect (error zero) individuals by case: (561 929 0 561 0 368 0 368 0 0)
Population mean number of perfect (error zero) cases: 2.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult exec_while (integer_eq integer_max) in1 exec_if () (print_integer exec_while () tag_exec_999 ())))
Errors: [0 0 1 0 1 1 1 1 1 1]
Total: 7
Mean: 0.7
Genome size: 10
Size: 17
Percent parens: 0.412
--- Population Statistics ---
Average total errors in population: 7.213
Median total errors in population: 7
Error averages by case: (0.439 0.071 1.0 0.439 1.0 0.632 1.0 0.632 1.0 1.0)
Error minima by case: (0 0 1 0 1 0 1 0 1 1)
Average genome size in population (length): 14.133
Average program size in population (points): 21.633
Average percent parens in population: 0.346
Minimum age in population: 35.84859085083008
Maximum age in population: 41.31031635403633
Average age in population: 39.45007630255818
Median age in population: 39.54339474439621
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 89
Genome diversity (% unique genomes):	 0.461
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 91
Syntactic diversity (% unique Push programs):	 0.447
Total error diversity:				 0.002
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 6974685
--- Timings ---
Current time: 1559584016921 milliseconds
Total Time:          69.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.6 seconds, 74.6%
Fitness Testing:     10.8 seconds, 15.7%
Report:               6.6 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Smallest problem report - generation 27
Test total error for best: 643
Test mean error for best: 0.64300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -7                 
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 43                 
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 74                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 44                 
Correct output: 32                  | Program output: 67                 
Correct output: 29                  | Program output: 95                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 63                 
Correct output: 8                   | Program output: 99                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 33                 
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 98                 
Correct output: 15                  | Program output: 25                 
Correct output: 12                  | Program output: 42                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 93                 
Correct output: -94                 | Program output: -66                
Correct output: -24                 | Program output: 4                  
Correct output: -100                | Program output: 93                 
Correct output: -23                 | Program output: 33                 
Correct output: -15                 | Program output: 87                 
Correct output: -86                 | Program output: 54                 
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -3                 
Correct output: -29                 | Program output: 77                 
Correct output: -20                 | Program output: 35                 
Correct output: -68                 | Program output: 56                 
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 18                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 62                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -5                 
Correct output: -52                 | Program output: -31                
Correct output: -85                 | Program output: -7                 
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: 93                 
Correct output: -60                 | Program output: -11                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: 58                 
Correct output: -68                 | Program output: -18                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -39                
Correct output: -39                 | Program output: 39                 
Correct output: -53                 | Program output: -23                
Correct output: -82                 | Program output: 61                 
Correct output: -94                 | Program output: 94                 
Correct output: -78                 | Program output: 73                 
Correct output: -53                 | Program output: 72                 
Correct output: -44                 | Program output: 25                 
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -15                
Correct output: -88                 | Program output: 43                 
Correct output: -57                 | Program output: 32                 
Correct output: -29                 | Program output: -5                 
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -8                 
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -26                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -46                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -37                
Correct output: -73                 | Program output: 85                 
Correct output: -76                 | Program output: -14                
Correct output: -86                 | Program output: 96                 
Correct output: -96                 | Program output: -17                
Correct output: -60                 | Program output: 4                  
Correct output: -74                 | Program output: -41                
Correct output: -44                 | Program output: 49                 
Correct output: -74                 | Program output: -36                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (in3 exec_do*range () boolean_yank integer_dup_items integer_inc exec_shove () integer_eq integer_max in1 in4 print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [1 0 0 1 1 1 0 0 1 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.278
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (in3 exec_do*range () boolean_yank integer_dup_items integer_inc exec_shove () integer_eq integer_max in1 in4 print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [1 0 0 1 1 1 0 0 1 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.278
--- Lexicase Population Statistics ---
Count of elite individuals by case: (461 930 1 1000 1000 1000 930 1 1000 1)
Population mean number of elite cases: 6.32
Count of perfect (error zero) individuals by case: (461 930 1 0 0 0 930 1 0 1)
Population mean number of perfect (error zero) cases: 2.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (in3 exec_do*range () boolean_yank integer_dup_items integer_inc exec_shove () integer_eq integer_max in1 in4 print_integer exec_while () tag_exec_999 ())
Errors: [1 0 0 1 1 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 13
Size: 18
Percent parens: 0.278
--- Population Statistics ---
Average total errors in population: 7.676
Median total errors in population: 8
Error averages by case: (0.539 0.07 0.999 1.0 1.0 1.0 0.07 0.999 1.0 0.999)
Error minima by case: (0 0 0 1 1 1 0 0 1 0)
Average genome size in population (length): 14.247
Average program size in population (points): 21.837
Average percent parens in population: 0.347
Minimum age in population: 36.90419769287109
Maximum age in population: 42.80202797055244
Average age in population: 40.92035552664101
Median age in population: 40.99937983602285
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 55
Genome diversity (% unique genomes):	 0.496
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.484
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 7131088
--- Timings ---
Current time: 1559584019121 milliseconds
Total Time:          71.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.4 seconds, 74.9%
Fitness Testing:     11.1 seconds, 15.5%
Report:               6.7 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Smallest problem report - generation 28
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [0 0 1 0 1 1 0 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.444
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [0 0 1 0 1 1 0 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.444
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 2 1000 2 235 715 955 235 2 1000)
Population mean number of elite cases: 4.15
Count of perfect (error zero) individuals by case: (2 2 0 2 235 715 955 235 2 0)
Population mean number of perfect (error zero) cases: 2.15
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (in3 exec_if () (print_integer exec_while () tag_exec_999 ()))
Errors: [0 0 1 0 1 1 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 5
Size: 10
Percent parens: 0.500
--- Population Statistics ---
Average total errors in population: 7.852
Median total errors in population: 8
Error averages by case: (0.998 0.998 1.0 0.998 0.765 0.285 0.045 0.765 0.998 1.0)
Error minima by case: (0 0 1 0 0 0 0 0 0 1)
Average genome size in population (length): 13.181
Average program size in population (points): 18.744
Average percent parens in population: 0.295
Minimum age in population: 37.90419769287109
Maximum age in population: 44.21853265166283
Average age in population: 43.06199747473747
Median age in population: 42.79607236385345
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 585
Genome diversity (% unique genomes):	 0.266
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 607
Syntactic diversity (% unique Push programs):	 0.25
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 7257721
--- Timings ---
Current time: 1559584021130 milliseconds
Total Time:          73.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.2 seconds, 75.2%
Fitness Testing:     11.2 seconds, 15.3%
Report:               6.9 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Smallest problem report - generation 29
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Lexicase best errors: [0 1 0 1 0 0 1 1 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Zero cases best errors: [0 1 0 1 0 0 1 1 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 557 1 556 1 1 263 557 262 145)
Population mean number of elite cases: 2.34
Count of perfect (error zero) individuals by case: (1 557 1 556 1 1 263 557 262 145)
Population mean number of perfect (error zero) cases: 2.34
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [0 1 0 1 0 0 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.656
Median total errors in population: 7
Error averages by case: (0.999 0.443 0.999 0.444 0.999 0.999 0.737 0.443 0.738 0.855)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.69
Average program size in population (points): 13.955
Average percent parens in population: 0.403
Minimum age in population: 41.50971412658691
Maximum age in population: 45.94648510217667
Average age in population: 44.43103724098578
Median age in population: 44.64565609022975
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 290
Genome diversity (% unique genomes):	 0.246
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 294
Syntactic diversity (% unique Push programs):	 0.226
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 7337950
--- Timings ---
Current time: 1559584023095 milliseconds
Total Time:          75.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.9 seconds, 75.5%
Fitness Testing:     11.4 seconds, 15.1%
Report:               7.0 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Smallest problem report - generation 30
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_min} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_min integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [1 1 0 0 0 1 0 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_min} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_min integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [1 1 0 0 0 1 0 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (95 493 363 950 362 93 364 363 191 361)
Population mean number of elite cases: 3.63
Count of perfect (error zero) individuals by case: (95 493 363 950 362 93 364 363 191 361)
Population mean number of perfect (error zero) cases: 3.63
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [1 1 0 0 0 1 0 0 1 0]
Total: 4
Mean: 0.4
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.365
Median total errors in population: 7
Error averages by case: (0.905 0.507 0.637 0.05 0.638 0.907 0.636 0.637 0.809 0.639)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.544
Average program size in population (points): 14.802
Average percent parens in population: 0.371
Minimum age in population: 43.28526715934277
Maximum age in population: 47.82383540645242
Average age in population: 46.14408627018705
Median age in population: 46.05747187137604
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 325
Genome diversity (% unique genomes):	 0.253
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 325
Syntactic diversity (% unique Push programs):	 0.237
Total error diversity:				 0.005
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 7426978
--- Timings ---
Current time: 1559584025169 milliseconds
Total Time:          77.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.7 seconds, 75.9%
Fitness Testing:     11.5 seconds, 14.8%
Report:               7.1 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Smallest problem report - generation 31
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [0 1 1 1 0 1 1 1 0 1]
Lexicase best number of elite cases: 3
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 20
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [0 1 1 1 0 1 1 1 0 1]
Zero cases best number of elite cases: 3
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 20
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (205 528 209 209 205 10 526 528 205 6)
Population mean number of elite cases: 2.63
Count of perfect (error zero) individuals by case: (205 528 209 209 205 10 526 528 205 6)
Population mean number of perfect (error zero) cases: 2.63
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_inc} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_stackdepth} {:close 1, :instruction exec_s} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*while (boolean_xor integer_lt exec_do*while (exec_stackdepth) exec_s () (integer_dup_items integer_inc exec_shove () integer_eq exec_do*while (boolean_xor integer_lt exec_do*while (exec_stackdepth) exec_s () (boolean_eq integer_max) (in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())) ()))
Errors: [0 1 1 1 0 1 1 1 0 1]
Total: 7
Mean: 0.7
Genome size: 23
Size: 37
Percent parens: 0.378
--- Population Statistics ---
Average total errors in population: 7.369
Median total errors in population: 7
Error averages by case: (0.795 0.472 0.791 0.791 0.795 0.99 0.474 0.472 0.795 0.994)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.6
Average program size in population (points): 17.092
Average percent parens in population: 0.321
Minimum age in population: 44.75757768750191
Maximum age in population: 49.28379419818521
Average age in population: 47.7276051535774
Median age in population: 47.82177917612717
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 434
Genome diversity (% unique genomes):	 0.289
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 434
Syntactic diversity (% unique Push programs):	 0.274
Total error diversity:				 0.004
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 7532829
--- Timings ---
Current time: 1559584027687 milliseconds
Total Time:          79.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.9 seconds, 76.3%
Fitness Testing:     11.6 seconds, 14.6%
Report:               7.2 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Smallest problem report - generation 32
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [0 0 1 0 1 0 0 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 10
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [0 0 1 0 1 0 0 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 10
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (945 197 256 194 256 197 195 541 688 195)
Population mean number of elite cases: 3.66
Count of perfect (error zero) individuals by case: (945 197 256 194 256 197 195 541 688 195)
Population mean number of perfect (error zero) cases: 3.66
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 boolean_frominteger integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [0 0 1 0 1 0 0 1 0 0]
Total: 3
Mean: 0.3
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.336
Median total errors in population: 7
Error averages by case: (0.055 0.803 0.744 0.806 0.744 0.803 0.805 0.459 0.312 0.805)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.658
Average program size in population (points): 17.247
Average percent parens in population: 0.326
Minimum age in population: 45.88783065974712
Maximum age in population: 50.8471063375473
Average age in population: 49.17579965698346
Median age in population: 49.26988884154707
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 186
Genome diversity (% unique genomes):	 0.332
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 186
Syntactic diversity (% unique Push programs):	 0.308
Total error diversity:				 0.007
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 7639747
--- Timings ---
Current time: 1559584030108 milliseconds
Total Time:          82.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        63.0 seconds, 76.6%
Fitness Testing:     11.8 seconds, 14.3%
Report:               7.4 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Smallest problem report - generation 33
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_s} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_s (exec_while (integer_eq integer_max) in1 exec_k_when_autoconstructing () (print_integer exec_while () tag_exec_999 ())) () ())
Lexicase best errors: [1 1 1 1 0 1 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 24
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_s} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_s (exec_while (integer_eq integer_max) in1 exec_k_when_autoconstructing () (print_integer exec_while () tag_exec_999 ())) () ())
Zero cases best errors: [1 1 1 1 0 1 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 24
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 284 1000 283 63 599 959 63 63 1000)
Population mean number of elite cases: 5.31
Count of perfect (error zero) individuals by case: (0 284 0 283 63 599 959 63 63 0)
Population mean number of perfect (error zero) cases: 2.31
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq) integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 exec_k_when_autoconstructing (print_integer exec_while () tag_exec_999 ()) ()))
Errors: [1 1 1 1 0 1 0 0 0 1]
Total: 6
Mean: 0.6
Genome size: 14
Size: 22
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 7.686
Median total errors in population: 8
Error averages by case: (1.0 0.716 1.0 0.717 0.937 0.401 0.041 0.937 0.937 1.0)
Error minima by case: (1 0 1 0 0 0 0 0 0 1)
Average genome size in population (length): 9.951
Average program size in population (points): 15.032
Average percent parens in population: 0.345
Minimum age in population: 48.12745033204556
Maximum age in population: 52.56333112251014
Average age in population: 50.65349271069746
Median age in population: 50.70836819603574
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 185
Genome diversity (% unique genomes):	 0.235
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 186
Syntactic diversity (% unique Push programs):	 0.228
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 7745205
--- Timings ---
Current time: 1559584032627 milliseconds
Total Time:          84.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.3 seconds, 76.9%
Fitness Testing:     11.9 seconds, 14.1%
Report:               7.5 seconds,  8.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Smallest problem report - generation 34
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (in3 exec_do*range () boolean_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [0 0 0 1 1 0 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 10
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (in3 exec_do*range () boolean_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [0 0 0 1 1 0 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 10
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (159 159 161 322 324 943 457 1000 324 159)
Population mean number of elite cases: 4.01
Count of perfect (error zero) individuals by case: (159 159 161 322 324 943 457 0 324 159)
Population mean number of perfect (error zero) cases: 3.01
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (in3 exec_do*range () boolean_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 0 0 1 1 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 6
Size: 10
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.992
Median total errors in population: 8
Error averages by case: (0.841 0.841 0.839 0.678 0.676 0.057 0.543 1.0 0.676 0.841)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 11.716
Average program size in population (points): 17.525
Average percent parens in population: 0.333
Minimum age in population: 49.5924611017108
Maximum age in population: 54.40815218328498
Average age in population: 52.1047712227233
Median age in population: 52.17175799357938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 186
Genome diversity (% unique genomes):	 0.318
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 188
Syntactic diversity (% unique Push programs):	 0.308
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 7843945
--- Timings ---
Current time: 1559584034776 milliseconds
Total Time:          87.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.2 seconds, 77.2%
Fitness Testing:     12.1 seconds, 13.9%
Report:               7.6 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Smallest problem report - generation 35
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_max) in1 boolean_not) (print_integer tag_exec_782 () tag_exec_999 ()))
Lexicase best errors: [1 0 1 0 0 1 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 21
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_max) in1 boolean_not) (print_integer tag_exec_782 () tag_exec_999 ()))
Zero cases best errors: [1 0 1 0 0 1 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 21
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 564 457 107 484 457 106 378 1000 379)
Population mean number of elite cases: 4.93
Count of perfect (error zero) individuals by case: (0 564 457 107 484 457 106 378 0 379)
Population mean number of perfect (error zero) cases: 2.93
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in2} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (in2 exec_eq integer_gt in2 integer_max in1 boolean_not print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 0 1 0 0 1 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 10
Size: 13
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 7.068
Median total errors in population: 7
Error averages by case: (1.0 0.436 0.543 0.893 0.516 0.543 0.894 0.622 1.0 0.621)
Error minima by case: (1 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 9.992
Average program size in population (points): 15.018
Average percent parens in population: 0.340
Minimum age in population: 50.96767513919622
Maximum age in population: 55.49243409617338
Average age in population: 53.55857840019476
Median age in population: 53.64787966190488
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 207
Genome diversity (% unique genomes):	 0.288
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 209
Syntactic diversity (% unique Push programs):	 0.278
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 7938807
--- Timings ---
Current time: 1559584037021 milliseconds
Total Time:          89.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.1 seconds, 77.5%
Fitness Testing:     12.2 seconds, 13.7%
Report:               7.7 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Smallest problem report - generation 36
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2 exec_eq integer_gt integer_eq exec_do*range () print_integer exec_while () tag_exec_999 ()))
Lexicase best errors: [0 0 1 1 1 1 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2 exec_eq integer_gt integer_eq exec_do*range () print_integer exec_while () tag_exec_999 ()))
Zero cases best errors: [0 0 1 1 1 1 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (273 273 285 384 1000 285 558 269 946 269)
Population mean number of elite cases: 4.54
Count of perfect (error zero) individuals by case: (273 273 285 384 0 285 558 269 946 269)
Population mean number of perfect (error zero) cases: 3.54
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_1040})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_1040 ()))
Errors: [0 0 1 1 1 1 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.458
Median total errors in population: 6
Error averages by case: (0.727 0.727 0.715 0.616 1.0 0.715 0.442 0.731 0.054 0.731)
Error minima by case: (0 0 0 0 1 0 0 0 0 0)
Average genome size in population (length): 11.115
Average program size in population (points): 16.633
Average percent parens in population: 0.335
Minimum age in population: 52.25348569639027
Maximum age in population: 56.87595955617144
Average age in population: 54.93768722843332
Median age in population: 55.01788381849474
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 121
Genome diversity (% unique genomes):	 0.32
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 123
Syntactic diversity (% unique Push programs):	 0.305
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 8036005
--- Timings ---
Current time: 1559584039560 milliseconds
Total Time:          91.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.4 seconds, 77.8%
Fitness Testing:     12.4 seconds, 13.5%
Report:               7.9 seconds,  8.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Smallest problem report - generation 37
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (in3 exec_do*range () boolean_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [1 0 1 1 1 1 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 10
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (in3 exec_do*range () boolean_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [1 0 1 1 1 1 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 10
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (127 419 535 1000 127 1000 283 1000 1000 283)
Population mean number of elite cases: 5.77
Count of perfect (error zero) individuals by case: (127 419 535 0 127 0 283 0 0 283)
Population mean number of perfect (error zero) cases: 1.77
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 boolean_frominteger integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [1 0 1 1 1 1 0 1 1 0]
Total: 7
Mean: 0.7
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 8.226
Median total errors in population: 9
Error averages by case: (0.873 0.581 0.465 1.0 0.873 1.0 0.717 1.0 1.0 0.717)
Error minima by case: (0 0 0 1 0 1 0 1 1 0)
Average genome size in population (length): 10.312
Average program size in population (points): 15.363
Average percent parens in population: 0.332
Minimum age in population: 53.25348569639027
Maximum age in population: 58.38125904338085
Average age in population: 56.4333412619099
Median age in population: 56.47225848917151
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 222
Genome diversity (% unique genomes):	 0.29
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 226
Syntactic diversity (% unique Push programs):	 0.28
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 8132356
--- Timings ---
Current time: 1559584042266 milliseconds
Total Time:          94.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.9 seconds, 78.2%
Fitness Testing:     12.5 seconds, 13.3%
Report:               8.0 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Smallest problem report - generation 38
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_shove} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_shove in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Lexicase best errors: [1 1 0 0 0 1 1 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_shove} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_shove in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Zero cases best errors: [1 1 0 0 0 1 1 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (411 410 146 145 145 1000 1000 389 410 1000)
Population mean number of elite cases: 5.06
Count of perfect (error zero) individuals by case: (411 410 146 145 145 0 0 389 410 0)
Population mean number of perfect (error zero) cases: 2.06
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 integer_dup_items integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [0 0 1 1 1 1 1 1 0 1]
Total: 7
Mean: 0.7
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.944
Median total errors in population: 7
Error averages by case: (0.589 0.59 0.854 0.855 0.855 1.0 1.0 0.611 0.59 1.0)
Error minima by case: (0 0 0 0 0 1 1 0 0 1)
Average genome size in population (length): 10.962
Average program size in population (points): 16.427
Average percent parens in population: 0.338
Minimum age in population: 54.52751566283405
Maximum age in population: 59.91056320192729
Average age in population: 57.91416182933881
Median age in population: 57.98882009035879
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 83
Genome diversity (% unique genomes):	 0.324
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 84
Syntactic diversity (% unique Push programs):	 0.311
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 8238629
--- Timings ---
Current time: 1559584044370 milliseconds
Total Time:          96.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.7 seconds, 78.4%
Fitness Testing:     12.7 seconds, 13.1%
Report:               8.1 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Smallest problem report - generation 39
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lt})
Lexicase best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () integer_lt))
Lexicase best errors: [0 0 0 1 0 1 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lt})
Zero cases best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () integer_lt))
Zero cases best errors: [0 0 0 1 0 1 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (418 417 556 138 417 405 404 1000 418 405)
Population mean number of elite cases: 4.58
Count of perfect (error zero) individuals by case: (418 417 556 138 417 405 404 0 418 405)
Population mean number of perfect (error zero) cases: 3.58
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq boolean_yank in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [0 0 0 1 0 1 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.422
Median total errors in population: 7
Error averages by case: (0.582 0.583 0.444 0.862 0.583 0.595 0.596 1.0 0.582 0.595)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 10.253
Average program size in population (points): 15.323
Average percent parens in population: 0.336
Minimum age in population: 56.62699316843646
Maximum age in population: 61.51012453607109
Average age in population: 59.46001920216922
Median age in population: 59.54859382515133
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 143
Genome diversity (% unique genomes):	 0.317
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 143
Syntactic diversity (% unique Push programs):	 0.307
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 8333900
--- Timings ---
Current time: 1559584046516 milliseconds
Total Time:          98.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.6 seconds, 78.6%
Fitness Testing:     12.8 seconds, 13.0%
Report:               8.2 seconds,  8.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Smallest problem report - generation 40
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 2, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [0 0 0 1 1 1 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 10
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 2, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [0 0 0 1 1 1 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 10
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (315 313 439 517 517 1 315 517 837 121)
Population mean number of elite cases: 3.89
Count of perfect (error zero) individuals by case: (315 313 439 517 517 1 315 517 837 121)
Population mean number of perfect (error zero) cases: 3.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (integer_gt in3 exec_do*range () print_integer exec_while (tag_exec_999 ()))
Errors: [0 0 0 1 1 1 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 6
Size: 10
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.108
Median total errors in population: 6
Error averages by case: (0.685 0.687 0.561 0.483 0.483 0.999 0.685 0.483 0.163 0.879)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.309
Average program size in population (points): 15.353
Average percent parens in population: 0.332
Minimum age in population: 57.799097873969
Maximum age in population: 63.06882297772972
Average age in population: 60.94319654068174
Median age in population: 61.01625429248452
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 169
Genome diversity (% unique genomes):	 0.325
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 169
Syntactic diversity (% unique Push programs):	 0.316
Total error diversity:				 0.006
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 8434204
--- Timings ---
Current time: 1559584048758 milliseconds
Total Time:         101.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.6 seconds, 78.8%
Fitness Testing:     13.0 seconds, 12.9%
Report:               8.3 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Smallest problem report - generation 41
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction integer_dup_times} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2 integer_dup_items integer_gt in3 exec_do*range () print_integer integer_dup_times) tag_exec_999 ())
Lexicase best errors: [0 1 1 1 0 1 0 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction integer_dup_times} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2 integer_dup_items integer_gt in3 exec_do*range () print_integer integer_dup_times) tag_exec_999 ())
Zero cases best errors: [0 1 1 1 0 1 0 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (426 103 298 302 426 299 428 430 114 430)
Population mean number of elite cases: 3.26
Count of perfect (error zero) individuals by case: (426 103 298 302 426 299 428 430 114 430)
Population mean number of perfect (error zero) cases: 3.26
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction in2} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_mult in2 boolean_frominteger in2 integer_dup_items integer_gt in3 exec_do*range () print_integer))
Errors: [0 1 1 1 0 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 10
Size: 13
Percent parens: 0.231
--- Population Statistics ---
Average total errors in population: 6.744
Median total errors in population: 7
Error averages by case: (0.574 0.897 0.702 0.698 0.574 0.701 0.572 0.57 0.886 0.57)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.874
Average program size in population (points): 14.815
Average percent parens in population: 0.339
Minimum age in population: 58.799097873969
Maximum age in population: 64.40105317341204
Average age in population: 62.44409276660221
Median age in population: 62.52690239312415
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 103
Genome diversity (% unique genomes):	 0.337
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.324
Total error diversity:				 0.005
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 8532839
--- Timings ---
Current time: 1559584050957 milliseconds
Total Time:         103.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.5 seconds, 79.0%
Fitness Testing:     13.1 seconds, 12.7%
Report:               8.4 seconds,  8.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Smallest problem report - generation 42
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [1 1 0 1 1 1 0 0 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 10
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [1 1 0 1 1 1 0 0 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 10
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (273 93 966 93 273 274 497 966 497 497)
Population mean number of elite cases: 4.43
Count of perfect (error zero) individuals by case: (273 93 966 93 273 274 497 966 497 497)
Population mean number of perfect (error zero) cases: 4.43
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (in3 exec_do*range () boolean_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 1 0 1 1 1 0 0 0 0]
Total: 5
Mean: 0.5
Genome size: 6
Size: 10
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 5.571
Median total errors in population: 5
Error averages by case: (0.727 0.907 0.034 0.907 0.727 0.726 0.503 0.034 0.503 0.503)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.768
Average program size in population (points): 14.694
Average percent parens in population: 0.341
Minimum age in population: 60.36303975082774
Maximum age in population: 65.8134599592272
Average age in population: 63.98190576728383
Median age in population: 64.06090619879751
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 90
Genome diversity (% unique genomes):	 0.333
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 97
Syntactic diversity (% unique Push programs):	 0.312
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 8626268
--- Timings ---
Current time: 1559584053256 milliseconds
Total Time:         105.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.6 seconds, 79.3%
Fitness Testing:     13.3 seconds, 12.6%
Report:               8.5 seconds,  8.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Smallest problem report - generation 43
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_fromboolean in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Lexicase best errors: [1 0 0 0 0 0 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_fromboolean in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Zero cases best errors: [1 0 0 0 0 0 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (242 956 960 362 959 361 244 349 362 349)
Population mean number of elite cases: 5.14
Count of perfect (error zero) individuals by case: (242 956 960 362 959 361 244 349 362 349)
Population mean number of perfect (error zero) cases: 5.14
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [1 0 0 0 0 0 1 1 0 1]
Total: 4
Mean: 0.4
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 4.856
Median total errors in population: 5
Error averages by case: (0.758 0.044 0.04 0.638 0.041 0.639 0.756 0.651 0.638 0.651)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.448
Average program size in population (points): 15.584
Average percent parens in population: 0.333
Minimum age in population: 61.36303975082774
Maximum age in population: 67.28173214352705
Average age in population: 65.46995381548625
Median age in population: 65.5717939914017
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 83
Genome diversity (% unique genomes):	 0.354
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.339
Total error diversity:				 0.007
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 8719619
--- Timings ---
Current time: 1559584055409 milliseconds
Total Time:         107.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        85.5 seconds, 79.4%
Fitness Testing:     13.4 seconds, 12.5%
Report:               8.6 seconds,  8.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Smallest problem report - generation 44
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 boolean_not) print_integer exec_while () tag_exec_999 ())
Lexicase best errors: [1 0 0 1 0 0 0 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 boolean_not) print_integer exec_while () tag_exec_999 ())
Zero cases best errors: [1 0 0 1 0 0 0 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (271 419 419 271 419 419 416 419 531 260)
Population mean number of elite cases: 3.84
Count of perfect (error zero) individuals by case: (271 419 419 271 419 419 416 419 531 260)
Population mean number of perfect (error zero) cases: 3.84
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer) exec_while () tag_exec_999 ())
Errors: [1 0 0 1 0 0 0 0 1 1]
Total: 4
Mean: 0.4
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.156
Median total errors in population: 7
Error averages by case: (0.729 0.581 0.581 0.729 0.581 0.581 0.584 0.581 0.469 0.74)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.491
Average program size in population (points): 15.645
Average percent parens in population: 0.331
Minimum age in population: 63.16879695129683
Maximum age in population: 68.9804711006957
Average age in population: 66.95180256680972
Median age in population: 67.01167594938113
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 93
Genome diversity (% unique genomes):	 0.357
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.343
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 8815800
--- Timings ---
Current time: 1559584057837 milliseconds
Total Time:         110.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.7 seconds, 79.7%
Fitness Testing:     13.6 seconds, 12.3%
Report:               8.7 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Smallest problem report - generation 45
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_lt} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_lt in2 boolean_frominteger integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Lexicase best errors: [1 0 0 1 1 0 0 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_lt} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_lt in2 boolean_frominteger integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Zero cases best errors: [1 0 0 1 1 0 0 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (136 951 254 551 550 256 254 253 551 550)
Population mean number of elite cases: 4.31
Count of perfect (error zero) individuals by case: (136 951 254 551 550 256 254 253 551 550)
Population mean number of perfect (error zero) cases: 4.31
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 boolean_frominteger boolean_dup) integer_dup_items integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ())
Errors: [1 0 0 1 1 0 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 12
Size: 17
Percent parens: 0.294
--- Population Statistics ---
Average total errors in population: 5.694
Median total errors in population: 5
Error averages by case: (0.864 0.049 0.746 0.449 0.45 0.744 0.746 0.747 0.449 0.45)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.106
Average program size in population (points): 15.014
Average percent parens in population: 0.330
Minimum age in population: 64.16879695129683
Maximum age in population: 70.36817415971001
Average age in population: 68.44035464972173
Median age in population: 68.48852797383094
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 99
Genome diversity (% unique genomes):	 0.379
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 100
Syntactic diversity (% unique Push programs):	 0.365
Total error diversity:				 0.005
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 8911350
--- Timings ---
Current time: 1559584060162 milliseconds
Total Time:         112.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.7 seconds, 79.9%
Fitness Testing:     13.7 seconds, 12.2%
Report:               8.8 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Smallest problem report - generation 46
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in1} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult integer_yankdup exec_eq integer_gt exec_do*count (integer_mult in1 exec_if () (print_integer exec_while () tag_exec_999 ()))))
Lexicase best errors: [0 1 0 1 1 1 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 19
Percent parens: 0.368
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in1} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult integer_yankdup exec_eq integer_gt exec_do*count (integer_mult in1 exec_if () (print_integer exec_while () tag_exec_999 ()))))
Zero cases best errors: [0 1 0 1 1 1 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 19
Percent parens: 0.368
--- Lexicase Population Statistics ---
Count of elite individuals by case: (111 403 111 1000 1000 1000 111 403 403 435)
Population mean number of elite cases: 4.98
Count of perfect (error zero) individuals by case: (111 403 111 0 0 0 111 403 403 435)
Population mean number of perfect (error zero) cases: 1.98
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 boolean_frominteger integer_gt in3 exec_do*range (print_integer exec_while () tag_exec_999 ())))
Errors: [1 0 1 1 1 1 1 0 0 1]
Total: 7
Mean: 0.7
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 8.023
Median total errors in population: 7
Error averages by case: (0.889 0.597 0.889 1.0 1.0 1.0 0.889 0.597 0.597 0.565)
Error minima by case: (0 0 0 1 1 1 0 0 0 0)
Average genome size in population (length): 9.832
Average program size in population (points): 14.731
Average percent parens in population: 0.337
Minimum age in population: 65.16879695129683
Maximum age in population: 71.8903634829532
Average age in population: 69.94162952098284
Median age in population: 70.0062878483503
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 74
Genome diversity (% unique genomes):	 0.358
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.345
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 9002353
--- Timings ---
Current time: 1559584062523 milliseconds
Total Time:         114.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        91.8 seconds, 80.1%
Fitness Testing:     13.8 seconds, 12.1%
Report:               9.0 seconds,  7.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Smallest problem report - generation 47
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Lexicase best errors: [1 0 1 1 1 1 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Zero cases best errors: [1 0 1 1 1 1 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (419 133 411 411 1000 1000 133 132 132 1000)
Population mean number of elite cases: 4.77
Count of perfect (error zero) individuals by case: (419 133 411 411 0 0 133 132 132 0)
Population mean number of perfect (error zero) cases: 1.77
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt integer_eq exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [1 0 1 1 1 1 0 0 0 1]
Total: 6
Mean: 0.6
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 8.229
Median total errors in population: 8
Error averages by case: (0.581 0.867 0.589 0.589 1.0 1.0 0.867 0.868 0.868 1.0)
Error minima by case: (0 0 0 0 1 1 0 0 0 1)
Average genome size in population (length): 10.76
Average program size in population (points): 16.069
Average percent parens in population: 0.335
Minimum age in population: 66.16879695129683
Maximum age in population: 73.31517699603116
Average age in population: 71.50126771832832
Median age in population: 71.60972088843523
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 39
Genome diversity (% unique genomes):	 0.348
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 44
Syntactic diversity (% unique Push programs):	 0.331
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.015
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 9102326
--- Timings ---
Current time: 1559584064851 milliseconds
Total Time:         117.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        93.9 seconds, 80.2%
Fitness Testing:     14.0 seconds, 11.9%
Report:               9.1 seconds,  7.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Smallest problem report - generation 48
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction tagged_432} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer tagged_432) tag_exec_999 ())
Lexicase best errors: [1 1 0 0 0 1 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction tagged_432} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer tagged_432) tag_exec_999 ())
Zero cases best errors: [1 1 0 0 0 1 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (155 1000 531 531 531 272 272 272 531 1000)
Population mean number of elite cases: 5.09
Count of perfect (error zero) individuals by case: (155 0 531 531 531 272 272 272 531 0)
Population mean number of perfect (error zero) cases: 3.10
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq exec_noop in3 exec_do*range () print_integer exec_while () tag_exec_999 ()))
Errors: [1 1 0 0 0 1 1 1 0 1]
Total: 6
Mean: 0.6
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.905
Median total errors in population: 6
Error averages by case: (0.845 1.0 0.469 0.469 0.469 0.728 0.728 0.728 0.469 1.0)
Error minima by case: (0 1 0 0 0 0 0 0 0 1)
Average genome size in population (length): 10.625
Average program size in population (points): 15.795
Average percent parens in population: 0.328
Minimum age in population: 70.13885281436615
Maximum age in population: 74.78416776571338
Average age in population: 72.89719531355506
Median age in population: 72.97704700221456
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 90
Genome diversity (% unique genomes):	 0.355
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 90
Syntactic diversity (% unique Push programs):	 0.341
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 9197640
--- Timings ---
Current time: 1559584066914 milliseconds
Total Time:         119.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.7 seconds, 80.3%
Fitness Testing:     14.1 seconds, 11.8%
Report:               9.2 seconds,  7.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Smallest problem report - generation 49
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_fromboolean in2 exec_eq integer_gt boolean_shove exec_do*range () print_integer exec_while () tag_exec_999 ()))
Lexicase best errors: [1 1 1 0 0 0 0 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 15
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_fromboolean in2 exec_eq integer_gt boolean_shove exec_do*range () print_integer exec_while () tag_exec_999 ()))
Zero cases best errors: [1 1 1 0 0 0 0 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 15
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (344 1000 344 473 471 952 951 1000 471 343)
Population mean number of elite cases: 6.35
Count of perfect (error zero) individuals by case: (344 0 344 473 471 952 951 0 471 343)
Population mean number of perfect (error zero) cases: 4.35
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction exec_do*count})
Best program: (exec_do*count (integer_mult in2 exec_eq) integer_gt in3 exec_do*range () print_integer exec_while () exec_do*count ())
Errors: [1 1 1 0 0 0 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.651
Median total errors in population: 5
Error averages by case: (0.656 1.0 0.656 0.527 0.529 0.048 0.049 1.0 0.529 0.657)
Error minima by case: (0 1 0 0 0 0 0 1 0 0)
Average genome size in population (length): 10.857
Average program size in population (points): 16.129
Average percent parens in population: 0.329
Minimum age in population: 71.13885281436615
Maximum age in population: 76.35415121478374
Average age in population: 74.37129331703446
Median age in population: 74.40604241519875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 60
Genome diversity (% unique genomes):	 0.398
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.384
Total error diversity:				 0.006
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 9295168
--- Timings ---
Current time: 1559584068983 milliseconds
Total Time:         121.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        97.5 seconds, 80.5%
Fitness Testing:     14.3 seconds, 11.8%
Report:               9.3 seconds,  7.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Smallest problem report - generation 50
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_lt} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_lt integer_mult in2 exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 exec_k_when_autoconstructing () (print_integer exec_while () tag_exec_782 () tag_exec_999 ())))
Lexicase best errors: [0 0 1 1 0 1 1 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 23
Percent parens: 0.348
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_lt} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_lt integer_mult in2 exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) in1 exec_k_when_autoconstructing () (print_integer exec_while () tag_exec_782 () tag_exec_999 ())))
Zero cases best errors: [0 0 1 1 0 1 1 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 23
Percent parens: 0.348
--- Lexicase Population Statistics ---
Count of elite individuals by case: (947 483 467 3 484 1000 467 1 466 483)
Population mean number of elite cases: 4.80
Count of perfect (error zero) individuals by case: (947 483 467 3 484 0 467 1 466 483)
Population mean number of perfect (error zero) cases: 3.80
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt in3 exec_do*range () print_integer exec_while (tag_exec_999 ())))
Errors: [0 1 0 1 1 1 0 1 0 1]
Total: 6
Mean: 0.6
Genome size: 10
Size: 15
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.199
Median total errors in population: 6
Error averages by case: (0.053 0.517 0.533 0.997 0.516 1.0 0.533 0.999 0.534 0.517)
Error minima by case: (0 0 0 0 0 1 0 0 0 0)
Average genome size in population (length): 11.454
Average program size in population (points): 16.935
Average percent parens in population: 0.323
Minimum age in population: 72.56200043766265
Maximum age in population: 77.77014847190043
Average age in population: 75.8695969624477
Median age in population: 75.9586123107566
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 51
Genome diversity (% unique genomes):	 0.388
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.367
Total error diversity:				 0.005
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 9400093
--- Timings ---
Current time: 1559584071144 milliseconds
Total Time:         123.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        99.4 seconds, 80.6%
Fitness Testing:     14.4 seconds, 11.7%
Report:               9.4 seconds,  7.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Smallest problem report - generation 51
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Lexicase best errors: [1 0 0 0 0 0 1 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 8
Percent parens: 0.375
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Zero cases best errors: [1 0 0 0 0 0 1 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 8
Percent parens: 0.375
--- Lexicase Population Statistics ---
Count of elite individuals by case: (363 108 472 108 481 108 363 854 108 108)
Population mean number of elite cases: 3.07
Count of perfect (error zero) individuals by case: (363 108 472 108 481 108 363 854 108 108)
Population mean number of perfect (error zero) cases: 3.07
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lt})
Best program: (exec_do*count (integer_mult in2) in3 integer_gt in3 exec_do*range () print_integer exec_while () integer_lt)
Errors: [1 0 0 0 0 0 1 0 0 0]
Total: 2
Mean: 0.2
Genome size: 10
Size: 14
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 6.927
Median total errors in population: 9
Error averages by case: (0.637 0.892 0.528 0.892 0.519 0.892 0.637 0.146 0.892 0.892)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.952
Average program size in population (points): 17.56
Average percent parens in population: 0.320
Minimum age in population: 74.60131778003995
Maximum age in population: 79.40245288929763
Average age in population: 77.33477790166484
Median age in population: 77.42561163183893
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 82
Genome diversity (% unique genomes):	 0.416
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 82
Syntactic diversity (% unique Push programs):	 0.398
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 9516205
--- Timings ---
Current time: 1559584073221 milliseconds
Total Time:         125.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       101.3 seconds, 80.7%
Fitness Testing:     14.6 seconds, 11.6%
Report:               9.5 seconds,  7.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Smallest problem report - generation 52
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lt})
Lexicase best program: (exec_do*count (integer_mult in2) in3 integer_gt in3 exec_do*range () print_integer exec_while () integer_lt)
Lexicase best errors: [1 0 1 0 0 1 0 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lt})
Zero cases best program: (exec_do*count (integer_mult in2) in3 integer_gt in3 exec_do*range () print_integer exec_while () integer_lt)
Zero cases best errors: [1 0 1 0 0 1 0 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 684 262 685 684 262 684 684 262 951)
Population mean number of elite cases: 5.16
Count of perfect (error zero) individuals by case: (5 684 262 685 684 262 684 684 262 951)
Population mean number of perfect (error zero) cases: 5.16
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Errors: [1 0 1 0 0 1 0 0 1 0]
Total: 4
Mean: 0.4
Genome size: 5
Size: 8
Percent parens: 0.375
--- Population Statistics ---
Average total errors in population: 4.837
Median total errors in population: 4
Error averages by case: (0.995 0.316 0.738 0.315 0.316 0.738 0.316 0.316 0.738 0.049)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.717
Average program size in population (points): 14.259
Average percent parens in population: 0.326
Minimum age in population: 75.60131778003995
Maximum age in population: 80.61851650577925
Average age in population: 78.7299107962031
Median age in population: 78.78184631775636
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 236
Genome diversity (% unique genomes):	 0.279
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 237
Syntactic diversity (% unique Push programs):	 0.261
Total error diversity:				 0.007
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 9616310
--- Timings ---
Current time: 1559584075439 milliseconds
Total Time:         127.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       103.2 seconds, 80.9%
Fitness Testing:     14.7 seconds, 11.5%
Report:               9.6 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Smallest problem report - generation 53
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lt})
Lexicase best program: (exec_do*count (integer_mult in2) in3 integer_gt in3 exec_do*range () print_integer exec_while () integer_lt)
Lexicase best errors: [1 0 0 1 0 1 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction integer_lt})
Zero cases best program: (exec_do*count (integer_mult in2) in3 integer_gt in3 exec_do*range () print_integer exec_while () integer_lt)
Zero cases best errors: [1 0 0 1 0 1 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (296 535 535 107 831 1000 944 1000 295 941)
Population mean number of elite cases: 6.48
Count of perfect (error zero) individuals by case: (296 535 535 107 831 0 944 0 295 941)
Population mean number of perfect (error zero) cases: 4.48
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction integer_lt})
Best program: (exec_do*count (integer_mult in2) in3 integer_gt in3 exec_do*range () print_integer exec_while (integer_lt))
Errors: [1 0 0 1 0 1 0 1 1 0]
Total: 5
Mean: 0.5
Genome size: 10
Size: 14
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 5.516
Median total errors in population: 5
Error averages by case: (0.704 0.465 0.465 0.893 0.169 1.0 0.056 1.0 0.705 0.059)
Error minima by case: (0 0 0 0 0 1 0 1 0 0)
Average genome size in population (length): 10.584
Average program size in population (points): 15.642
Average percent parens in population: 0.326
Minimum age in population: 76.60131778003995
Maximum age in population: 82.10944660632045
Average age in population: 80.19964390286141
Median age in population: 80.29933659462048
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 165
Genome diversity (% unique genomes):	 0.33
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 166
Syntactic diversity (% unique Push programs):	 0.31
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 9718237
--- Timings ---
Current time: 1559584077468 milliseconds
Total Time:         129.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       105.0 seconds, 81.0%
Fitness Testing:     14.9 seconds, 11.5%
Report:               9.7 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Smallest problem report - generation 54
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (exec_do*count () integer_mult in2 boolean_frominteger integer_gt exec_do*count () integer_mult in2 integer_mult in2 exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) integer_yankdup exec_k_when_autoconstructing () (print_integer))))
Lexicase best errors: [1 0 0 0 0 1 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 28
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (exec_do*count () integer_mult in2 boolean_frominteger integer_gt exec_do*count () integer_mult in2 integer_mult in2 exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) integer_yankdup exec_k_when_autoconstructing () (print_integer))))
Zero cases best errors: [1 0 0 0 0 1 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 28
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (377 163 163 163 163 1000 379 376 927 161)
Population mean number of elite cases: 3.87
Count of perfect (error zero) individuals by case: (377 163 163 163 163 0 379 376 927 161)
Population mean number of perfect (error zero) cases: 2.87
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_or})
Best program: (exec_do*count (exec_do*count (integer_mult in2 exec_do*range () print_integer exec_while () boolean_or)))
Errors: [1 0 0 0 0 1 1 1 0 0]
Total: 4
Mean: 0.4
Genome size: 8
Size: 13
Percent parens: 0.385
--- Population Statistics ---
Average total errors in population: 7.128
Median total errors in population: 6
Error averages by case: (0.623 0.837 0.837 0.837 0.837 1.0 0.621 0.624 0.073 0.839)
Error minima by case: (0 0 0 0 0 1 0 0 0 0)
Average genome size in population (length): 11.277
Average program size in population (points): 16.77
Average percent parens in population: 0.327
Minimum age in population: 78.917950463277
Maximum age in population: 83.73395087020933
Average age in population: 81.71269299281889
Median age in population: 81.77393946230667
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 119
Genome diversity (% unique genomes):	 0.368
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 120
Syntactic diversity (% unique Push programs):	 0.341
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 9824730
--- Timings ---
Current time: 1559584079569 milliseconds
Total Time:         131.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       106.9 seconds, 81.1%
Fitness Testing:     15.0 seconds, 11.4%
Report:               9.8 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Smallest problem report - generation 55
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_gt} {:close 1, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (integer_gt) in3 exec_do*range (print_integer))
Lexicase best errors: [0 1 1 1 0 0 0 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 8
Percent parens: 0.375
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_gt} {:close 1, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (integer_gt) in3 exec_do*range (print_integer))
Zero cases best errors: [0 1 1 1 0 0 0 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 8
Percent parens: 0.375
--- Lexicase Population Statistics ---
Count of elite individuals by case: (366 1000 1000 566 366 935 366 365 566 1000)
Population mean number of elite cases: 6.53
Count of perfect (error zero) individuals by case: (366 0 0 566 366 935 366 365 566 0)
Population mean number of perfect (error zero) cases: 3.53
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Errors: [0 1 1 1 0 0 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 5
Size: 8
Percent parens: 0.375
--- Population Statistics ---
Average total errors in population: 6.47
Median total errors in population: 7
Error averages by case: (0.634 1.0 1.0 0.434 0.634 0.065 0.634 0.635 0.434 1.0)
Error minima by case: (0 1 1 0 0 0 0 0 0 1)
Average genome size in population (length): 11.584
Average program size in population (points): 17.664
Average percent parens in population: 0.338
Minimum age in population: 80.3234537002985
Maximum age in population: 84.9613475376724
Average age in population: 83.14265233399948
Median age in population: 83.198242455248
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 131
Genome diversity (% unique genomes):	 0.255
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 135
Syntactic diversity (% unique Push programs):	 0.235
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 9925801
--- Timings ---
Current time: 1559584081756 milliseconds
Total Time:         134.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       108.9 seconds, 81.2%
Fitness Testing:     15.1 seconds, 11.3%
Report:               9.9 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Smallest problem report - generation 56
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction exec_k} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap) exec_while (integer_eq integer_max) exec_k (exec_k_when_autoconstructing () (print_integer exec_while () tag_exec_782 () tag_exec_999 ())) ()) ())
Lexicase best errors: [1 1 0 0 1 1 1 1 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 8
Lexicase best mean error: 0.8
Lexicase best size: 31
Percent parens: 0.419
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction exec_k} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap) exec_while (integer_eq integer_max) exec_k (exec_k_when_autoconstructing () (print_integer exec_while () tag_exec_782 () tag_exec_999 ())) ()) ())
Zero cases best errors: [1 1 0 0 1 1 1 1 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 2
Zero cases best total error: 8
Zero cases best mean error: 0.8
Zero cases best size: 31
Percent parens: 0.419
--- Lexicase Population Statistics ---
Count of elite individuals by case: (634 1000 311 313 1000 1000 634 1000 1000 1000)
Population mean number of elite cases: 7.89
Count of perfect (error zero) individuals by case: (634 0 311 313 0 0 634 0 0 0)
Population mean number of perfect (error zero) cases: 1.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction print_integer})
Best program: (exec_do*count (exec_do*count (integer_mult in2 boolean_frominteger integer_gt exec_do*count () integer_mult in2 integer_mult in2 exec_eq integer_gt exec_do*range (exec_while (integer_eq integer_max) integer_yankdup exec_k_when_autoconstructing () (print_integer)))))
Errors: [1 1 0 0 1 1 1 1 1 1]
Total: 8
Mean: 0.8
Genome size: 20
Size: 28
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 8.108
Median total errors in population: 8
Error averages by case: (0.366 1.0 0.689 0.687 1.0 1.0 0.366 1.0 1.0 1.0)
Error minima by case: (0 1 0 0 1 1 0 1 1 1)
Average genome size in population (length): 10.226
Average program size in population (points): 15.347
Average percent parens in population: 0.333
Minimum age in population: 81.3234537002985
Maximum age in population: 86.48727900206624
Average age in population: 84.60689650619517
Median age in population: 84.6927329183599
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 207
Genome diversity (% unique genomes):	 0.255
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 209
Syntactic diversity (% unique Push programs):	 0.23
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 10023158
--- Timings ---
Current time: 1559584083856 milliseconds
Total Time:         136.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       110.7 seconds, 81.4%
Fitness Testing:     15.3 seconds, 11.2%
Report:              10.0 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Smallest problem report - generation 57
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*range (print_integer))
Lexicase best errors: [0 0 0 0 1 0 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 10
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*range (print_integer))
Zero cases best errors: [0 0 0 0 1 0 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 10
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (440 438 441 938 1 938 496 490 440 1)
Population mean number of elite cases: 4.62
Count of perfect (error zero) individuals by case: (440 438 441 938 1 938 496 490 440 1)
Population mean number of perfect (error zero) cases: 4.62
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_or})
Best program: (integer_add exec_do*count (exec_do*count (integer_mult in2 exec_do*range () print_integer exec_while () boolean_or)))
Errors: [0 0 0 0 1 0 1 1 0 1]
Total: 4
Mean: 0.4
Genome size: 9
Size: 14
Percent parens: 0.357
--- Population Statistics ---
Average total errors in population: 5.377
Median total errors in population: 6
Error averages by case: (0.56 0.562 0.559 0.062 0.999 0.062 0.504 0.51 0.56 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.78
Average program size in population (points): 16.21
Average percent parens in population: 0.332
Minimum age in population: 83.15036240255249
Maximum age in population: 88.10050865247405
Average age in population: 86.09793006101297
Median age in population: 86.17615920574119
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 156
Genome diversity (% unique genomes):	 0.305
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 158
Syntactic diversity (% unique Push programs):	 0.283
Total error diversity:				 0.007
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 10122116
--- Timings ---
Current time: 1559584085914 milliseconds
Total Time:         138.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       112.5 seconds, 81.4%
Fitness Testing:     15.4 seconds, 11.2%
Report:              10.1 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Smallest problem report - generation 58
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction integer_lt})
Lexicase best program: (exec_do*count (integer_mult in2 in3 integer_gt in3 exec_do*range () print_integer exec_while (integer_lt)))
Lexicase best errors: [1 0 0 0 0 1 1 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 14
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction in3} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction integer_lt})
Zero cases best program: (exec_do*count (integer_mult in2 in3 integer_gt in3 exec_do*range () print_integer exec_while (integer_lt)))
Zero cases best errors: [1 0 0 0 0 1 1 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 14
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (83 197 197 717 510 433 228 197 433 85)
Population mean number of elite cases: 3.08
Count of perfect (error zero) individuals by case: (83 197 197 717 510 433 228 197 433 85)
Population mean number of perfect (error zero) cases: 3.08
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Errors: [1 0 0 0 0 1 1 0 1 1]
Total: 5
Mean: 0.5
Genome size: 5
Size: 8
Percent parens: 0.375
--- Population Statistics ---
Average total errors in population: 6.92
Median total errors in population: 7
Error averages by case: (0.917 0.803 0.803 0.283 0.49 0.567 0.772 0.803 0.567 0.915)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 12.33
Average program size in population (points): 18.143
Average percent parens in population: 0.315
Minimum age in population: 84.15036240255249
Maximum age in population: 89.30491485353389
Average age in population: 87.56776945527577
Median age in population: 87.70104033109374
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 190
Genome diversity (% unique genomes):	 0.305
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 202
Syntactic diversity (% unique Push programs):	 0.282
Total error diversity:				 0.006
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 10220195
--- Timings ---
Current time: 1559584088315 milliseconds
Total Time:         140.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       114.7 seconds, 81.6%
Fitness Testing:     15.6 seconds, 11.1%
Report:              10.2 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Smallest problem report - generation 59
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*range (print_integer))
Lexicase best errors: [0 0 1 0 1 1 0 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 10
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*range (print_integer))
Zero cases best errors: [0 0 1 0 1 1 0 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 10
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (212 932 393 212 208 117 537 391 212 212)
Population mean number of elite cases: 3.43
Count of perfect (error zero) individuals by case: (212 932 393 212 208 117 537 391 212 212)
Population mean number of perfect (error zero) cases: 3.43
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_mult in2 exec_eq integer_gt exec_do*range (print_integer)))
Errors: [0 0 1 0 1 1 0 1 0 0]
Total: 4
Mean: 0.4
Genome size: 7
Size: 10
Percent parens: 0.300
--- Population Statistics ---
Average total errors in population: 6.574
Median total errors in population: 7
Error averages by case: (0.788 0.068 0.607 0.788 0.792 0.883 0.463 0.609 0.788 0.788)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 12.179
Average program size in population (points): 17.938
Average percent parens in population: 0.324
Minimum age in population: 85.68245453691911
Maximum age in population: 91.06379765835115
Average age in population: 88.77452307027153
Median age in population: 88.85496140181735
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 129
Genome diversity (% unique genomes):	 0.32
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 135
Syntactic diversity (% unique Push programs):	 0.298
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 10321119
--- Timings ---
Current time: 1559584090809 milliseconds
Total Time:         143.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       116.9 seconds, 81.7%
Fitness Testing:     15.7 seconds, 11.0%
Report:              10.3 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Smallest problem report - generation 60
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Lexicase best errors: [0 1 0 1 1 1 0 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 8
Percent parens: 0.375
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Zero cases best errors: [0 1 0 1 1 1 0 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 8
Percent parens: 0.375
--- Lexicase Population Statistics ---
Count of elite individuals by case: (954 475 238 124 123 114 347 235 234 238)
Population mean number of elite cases: 3.08
Count of perfect (error zero) individuals by case: (954 475 238 124 123 114 347 235 234 238)
Population mean number of perfect (error zero) cases: 3.08
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_gt in3) exec_do*range (print_integer))
Errors: [0 1 0 1 1 1 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 5
Size: 8
Percent parens: 0.375
--- Population Statistics ---
Average total errors in population: 6.918
Median total errors in population: 8
Error averages by case: (0.046 0.525 0.762 0.876 0.877 0.886 0.653 0.765 0.766 0.762)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 12.502
Average program size in population (points): 18.595
Average percent parens in population: 0.324
Minimum age in population: 86.68245453691911
Maximum age in population: 92.66456006494462
Average age in population: 90.36428607280995
Median age in population: 90.43173913141877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 88
Genome diversity (% unique genomes):	 0.337
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 92
Syntactic diversity (% unique Push programs):	 0.308
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 10430807
--- Timings ---
Current time: 1559584093270 milliseconds
Total Time:         145.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       119.1 seconds, 81.9%
Fitness Testing:     15.8 seconds, 10.9%
Report:              10.4 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Smallest problem report - generation 61
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_when} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (exec_do*count (integer_mult in2 boolean_frominteger boolean_yankdup exec_do*count () integer_mult exec_when () in2 exec_eq) integer_gt exec_do*range (print_integer)))
Lexicase best errors: [1 1 1 0 0 1 0 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 20
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_when} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (exec_do*count (integer_mult in2 boolean_frominteger boolean_yankdup exec_do*count () integer_mult exec_when () in2 exec_eq) integer_gt exec_do*range (print_integer)))
Zero cases best errors: [1 1 1 0 0 1 0 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 20
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (503 502 116 756 133 195 133 133 116 133)
Population mean number of elite cases: 2.72
Count of perfect (error zero) individuals by case: (503 502 116 756 133 195 133 133 116 133)
Population mean number of perfect (error zero) cases: 2.72
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction exec_k} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap) exec_while (integer_eq integer_max) exec_k (exec_k_when_autoconstructing () (print_integer)) ()) ())
Errors: [1 1 1 0 0 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 15
Size: 25
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 7.28
Median total errors in population: 7
Error averages by case: (0.497 0.498 0.884 0.244 0.867 0.805 0.867 0.867 0.884 0.867)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 11.012
Average program size in population (points): 15.938
Average percent parens in population: 0.315
Minimum age in population: 88.29660305574559
Maximum age in population: 94.17193361827728
Average age in population: 91.9174399787461
Median age in population: 91.98461473373465
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 167
Genome diversity (% unique genomes):	 0.335
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 172
Syntactic diversity (% unique Push programs):	 0.312
Total error diversity:				 0.006
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 10528277
--- Timings ---
Current time: 1559584095478 milliseconds
Total Time:         147.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       121.1 seconds, 82.0%
Fitness Testing:     16.0 seconds, 10.8%
Report:              10.5 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Smallest problem report - generation 62
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (integer_mult in2) in3 in3 exec_do*range () print_integer)
Lexicase best errors: [0 0 1 0 1 0 1 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 10
Percent parens: 0.300
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction in3} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (integer_mult in2) in3 in3 exec_do*range () print_integer)
Zero cases best errors: [0 0 1 0 1 0 1 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 10
Percent parens: 0.300
--- Lexicase Population Statistics ---
Count of elite individuals by case: (936 232 95 232 185 232 185 233 95 420)
Population mean number of elite cases: 2.85
Count of perfect (error zero) individuals by case: (936 232 95 232 185 232 185 233 95 420)
Population mean number of perfect (error zero) cases: 2.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_gt} {:close 1, :instruction in3} {:close 1, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_gt in3) exec_do*range () print_integer)
Errors: [0 0 1 0 1 0 1 0 1 1]
Total: 5
Mean: 0.5
Genome size: 5
Size: 8
Percent parens: 0.375
--- Population Statistics ---
Average total errors in population: 7.155
Median total errors in population: 7
Error averages by case: (0.064 0.768 0.905 0.768 0.815 0.768 0.815 0.767 0.905 0.58)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.144
Average program size in population (points): 19.353
Average percent parens in population: 0.321
Minimum age in population: 89.29660305574559
Maximum age in population: 95.51980204956277
Average age in population: 93.32507847394206
Median age in population: 93.45533108226458
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 70
Genome diversity (% unique genomes):	 0.383
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 72
Syntactic diversity (% unique Push programs):	 0.358
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 10642438
--- Timings ---
Current time: 1559584097843 milliseconds
Total Time:         150.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       123.2 seconds, 82.1%
Fitness Testing:     16.1 seconds, 10.8%
Report:              10.6 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Smallest problem report - generation 63
Test total error for best: 644
Test mean error for best: 0.64400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: 2                  
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: 91                 
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 26                 
Correct output: -52                 | Program output: 40                 
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -58                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: 5                  
Correct output: -68                 | Program output: 62                 
Correct output: -90                 | Program output: 77                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 22                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: 85                 
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -44                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: 40                 
Correct output: -73                 | Program output: 31                 
Correct output: -76                 | Program output: 66                 
Correct output: -86                 | Program output: 55                 
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: 100                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_empty} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (integer_empty integer_mult in2 exec_eq integer_gt exec_do*range (print_integer))
Lexicase best errors: [0 0 1 1 0 1 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_empty} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (integer_empty integer_mult in2 exec_eq integer_gt exec_do*range (print_integer))
Zero cases best errors: [0 0 1 1 0 1 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (115 116 197 197 116 197 197 115 423 116)
Population mean number of elite cases: 1.79
Count of perfect (error zero) individuals by case: (115 116 197 197 116 197 197 115 423 116)
Population mean number of perfect (error zero) cases: 1.79
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*range (print_integer))
Errors: [0 0 1 1 0 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 10
Percent parens: 0.300
--- Population Statistics ---
Average total errors in population: 8.211
Median total errors in population: 8
Error averages by case: (0.885 0.884 0.803 0.803 0.884 0.803 0.803 0.885 0.577 0.884)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 12.451
Average program size in population (points): 17.913
Average percent parens in population: 0.309
Minimum age in population: 91.46274662772969
Maximum age in population: 97.05603298943377
Average age in population: 94.79026564145924
Median age in population: 94.86168356399708
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 112
Genome diversity (% unique genomes):	 0.39
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 114
Syntactic diversity (% unique Push programs):	 0.367
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 10748166
--- Timings ---
Current time: 1559584100444 milliseconds
Total Time:         152.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       125.6 seconds, 82.3%
Fitness Testing:     16.3 seconds, 10.7%
Report:              10.7 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Smallest problem report - generation 64
Test total error for best: 643
Test mean error for best: 0.64300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -7                 
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 43                 
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 74                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 44                 
Correct output: 32                  | Program output: 67                 
Correct output: 29                  | Program output: 95                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 63                 
Correct output: 8                   | Program output: 99                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 33                 
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 98                 
Correct output: 15                  | Program output: 25                 
Correct output: 12                  | Program output: 42                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 93                 
Correct output: -94                 | Program output: -66                
Correct output: -24                 | Program output: 4                  
Correct output: -100                | Program output: 93                 
Correct output: -23                 | Program output: 33                 
Correct output: -15                 | Program output: 87                 
Correct output: -86                 | Program output: 54                 
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -3                 
Correct output: -29                 | Program output: 77                 
Correct output: -20                 | Program output: 35                 
Correct output: -68                 | Program output: 56                 
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 18                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 62                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -5                 
Correct output: -52                 | Program output: -31                
Correct output: -85                 | Program output: -7                 
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: 93                 
Correct output: -60                 | Program output: -11                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: 58                 
Correct output: -68                 | Program output: -18                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -39                
Correct output: -39                 | Program output: 39                 
Correct output: -53                 | Program output: -23                
Correct output: -82                 | Program output: 61                 
Correct output: -94                 | Program output: 94                 
Correct output: -78                 | Program output: 73                 
Correct output: -53                 | Program output: 72                 
Correct output: -44                 | Program output: 25                 
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -15                
Correct output: -88                 | Program output: 43                 
Correct output: -57                 | Program output: 32                 
Correct output: -29                 | Program output: -5                 
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -8                 
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -26                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -46                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -37                
Correct output: -73                 | Program output: 85                 
Correct output: -76                 | Program output: -14                
Correct output: -86                 | Program output: 96                 
Correct output: -96                 | Program output: -17                
Correct output: -60                 | Program output: 4                  
Correct output: -74                 | Program output: -41                
Correct output: -44                 | Program output: 49                 
Correct output: -74                 | Program output: -36                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add integer_mult in2 exec_eq integer_dup boolean_or integer_mult exec_do*range (in4) print_integer exec_while (tag_exec_999 ()))
Lexicase best errors: [1 0 1 0 1 0 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 16
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_dup} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add integer_mult in2 exec_eq integer_dup boolean_or integer_mult exec_do*range (in4) print_integer exec_while (tag_exec_999 ()))
Zero cases best errors: [1 0 1 0 1 0 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 16
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (484 767 169 182 101 182 484 941 101 182)
Population mean number of elite cases: 3.59
Count of perfect (error zero) individuals by case: (484 767 169 182 101 182 484 941 101 182)
Population mean number of perfect (error zero) cases: 3.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (integer_add boolean_invert_first_then_and in2 exec_eq integer_gt boolean_or integer_mult exec_do*range (in4) print_integer exec_while (tag_exec_999 ()))
Errors: [1 0 1 0 1 0 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 12
Size: 16
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.407
Median total errors in population: 6
Error averages by case: (0.516 0.233 0.831 0.818 0.899 0.818 0.516 0.059 0.899 0.818)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.858
Average program size in population (points): 20.204
Average percent parens in population: 0.309
Minimum age in population: 93.46997992223365
Maximum age in population: 98.22044046111452
Average age in population: 96.29456998915931
Median age in population: 96.37961653571392
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 54
Genome diversity (% unique genomes):	 0.413
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 61
Syntactic diversity (% unique Push programs):	 0.393
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 10853836
--- Timings ---
Current time: 1559584103089 milliseconds
Total Time:         155.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       128.0 seconds, 82.4%
Fitness Testing:     16.4 seconds, 10.6%
Report:              10.8 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Smallest problem report - generation 65
Test total error for best: 643
Test mean error for best: 0.64300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -7                 
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 43                 
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 74                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 44                 
Correct output: 32                  | Program output: 67                 
Correct output: 29                  | Program output: 95                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 63                 
Correct output: 8                   | Program output: 99                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 33                 
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 98                 
Correct output: 15                  | Program output: 25                 
Correct output: 12                  | Program output: 42                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 93                 
Correct output: -94                 | Program output: -66                
Correct output: -24                 | Program output: 4                  
Correct output: -100                | Program output: 93                 
Correct output: -23                 | Program output: 33                 
Correct output: -15                 | Program output: 87                 
Correct output: -86                 | Program output: 54                 
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -3                 
Correct output: -29                 | Program output: 77                 
Correct output: -20                 | Program output: 35                 
Correct output: -68                 | Program output: 56                 
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 18                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 62                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -5                 
Correct output: -52                 | Program output: -31                
Correct output: -85                 | Program output: -7                 
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: 93                 
Correct output: -60                 | Program output: -11                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: 58                 
Correct output: -68                 | Program output: -18                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -39                
Correct output: -39                 | Program output: 39                 
Correct output: -53                 | Program output: -23                
Correct output: -82                 | Program output: 61                 
Correct output: -94                 | Program output: 94                 
Correct output: -78                 | Program output: 73                 
Correct output: -53                 | Program output: 72                 
Correct output: -44                 | Program output: 25                 
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -15                
Correct output: -88                 | Program output: 43                 
Correct output: -57                 | Program output: 32                 
Correct output: -29                 | Program output: -5                 
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -8                 
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -26                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -46                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -37                
Correct output: -73                 | Program output: 85                 
Correct output: -76                 | Program output: -14                
Correct output: -86                 | Program output: 96                 
Correct output: -96                 | Program output: -17                
Correct output: -60                 | Program output: 4                  
Correct output: -74                 | Program output: -41                
Correct output: -44                 | Program output: 49                 
Correct output: -74                 | Program output: -36                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add integer_mult in2 exec_eq integer_gt boolean_or integer_mult exec_do*range (in4) print_integer exec_while (tag_exec_999 ()))
Lexicase best errors: [1 1 1 0 1 1 0 0 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 16
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_or} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_do*range} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add integer_mult in2 exec_eq integer_gt boolean_or integer_mult exec_do*range (in4) print_integer exec_while (tag_exec_999 ()))
Zero cases best errors: [1 1 1 0 1 1 0 0 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 16
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (87 237 237 378 86 237 378 378 375 87)
Population mean number of elite cases: 2.48
Count of perfect (error zero) individuals by case: (87 237 237 378 86 237 378 378 375 87)
Population mean number of perfect (error zero) cases: 2.48
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 1, :instruction in2} {:close 0, :instruction exec_do*range} {:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (in2) (exec_do*range (in4) print_integer exec_while (tag_exec_999 ())))
Errors: [1 1 1 0 1 1 0 0 0 1]
Total: 6
Mean: 0.6
Genome size: 12
Size: 19
Percent parens: 0.368
--- Population Statistics ---
Average total errors in population: 7.52
Median total errors in population: 7
Error averages by case: (0.913 0.763 0.763 0.622 0.914 0.763 0.622 0.622 0.625 0.913)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 12.328
Average program size in population (points): 17.512
Average percent parens in population: 0.296
Minimum age in population: 94.5345032610735
Maximum age in population: 99.63783622194377
Average age in population: 97.81931128705384
Median age in population: 97.85778775116638
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 101
Genome diversity (% unique genomes):	 0.405
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 126
Syntactic diversity (% unique Push programs):	 0.383
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 10960537
--- Timings ---
Current time: 1559584105436 milliseconds
Total Time:         157.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       130.1 seconds, 82.5%
Fitness Testing:     16.6 seconds, 10.5%
Report:              10.9 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Smallest problem report - generation 66
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_911})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap) exec_while (integer_eq) tag_exec_129 (integer_eq integer_max) in1 boolean_not) (print_integer tag_exec_782 () tag_exec_911 ()))
Lexicase best errors: [0 1 1 1 0 1 0 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 28
Percent parens: 0.321
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_911})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap) exec_while (integer_eq) tag_exec_129 (integer_eq integer_max) in1 boolean_not) (print_integer tag_exec_782 () tag_exec_911 ()))
Zero cases best errors: [0 1 1 1 0 1 0 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 28
Percent parens: 0.321
--- Lexicase Population Statistics ---
Count of elite individuals by case: (936 383 3 275 273 382 273 273 3 548)
Population mean number of elite cases: 3.35
Count of perfect (error zero) individuals by case: (936 383 3 275 273 382 273 273 3 548)
Population mean number of perfect (error zero) cases: 3.35
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_dup} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction exec_if} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer})
Best program: (in3 integer_mult exec_dup () exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap)) (exec_while (integer_eq) exec_if (integer_eq integer_max) (in1 boolean_not) print_integer))
Errors: [0 1 1 1 0 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 17
Size: 25
Percent parens: 0.320
--- Population Statistics ---
Average total errors in population: 6.651
Median total errors in population: 7
Error averages by case: (0.064 0.617 0.997 0.725 0.727 0.618 0.727 0.727 0.997 0.452)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.487
Average program size in population (points): 20.561
Average percent parens in population: 0.290
Minimum age in population: 96.03136718678772
Maximum age in population: 101.1038733462842
Average age in population: 99.291518297825
Median age in population: 99.34782311161018
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 93
Genome diversity (% unique genomes):	 0.426
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 114
Syntactic diversity (% unique Push programs):	 0.397
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 11075300
--- Timings ---
Current time: 1559584107755 milliseconds
Total Time:         160.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       132.1 seconds, 82.6%
Fitness Testing:     16.7 seconds, 10.5%
Report:              11.0 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Smallest problem report - generation 67
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth) in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [1 1 0 1 0 0 1 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 31
Percent parens: 0.290
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth) in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [1 1 0 1 0 0 1 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 31
Percent parens: 0.290
--- Lexicase Population Statistics ---
Count of elite individuals by case: (372 213 189 213 933 557 154 372 190 188)
Population mean number of elite cases: 3.38
Count of perfect (error zero) individuals by case: (372 213 189 213 933 557 154 372 190 188)
Population mean number of perfect (error zero) cases: 3.38
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))
Errors: [1 1 0 1 0 0 1 1 0 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 13
Percent parens: 0.462
--- Population Statistics ---
Average total errors in population: 6.619
Median total errors in population: 7
Error averages by case: (0.628 0.787 0.811 0.787 0.067 0.443 0.846 0.628 0.81 0.812)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 15.181
Average program size in population (points): 21.788
Average percent parens in population: 0.304
Minimum age in population: 97.58971155765295
Maximum age in population: 102.9374755196798
Average age in population: 101.0121831606789
Median age in population: 101.0187608703533
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 61
Genome diversity (% unique genomes):	 0.452
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 65
Syntactic diversity (% unique Push programs):	 0.43
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 11186133
--- Timings ---
Current time: 1559584110023 milliseconds
Total Time:         162.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       134.1 seconds, 82.7%
Fitness Testing:     16.9 seconds, 10.4%
Report:              11.1 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Smallest problem report - generation 68
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer})
Lexicase best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap) exec_while (integer_eq) tag_exec_129 (integer_eq integer_max) in1 boolean_not) (print_integer))
Lexicase best errors: [1 0 0 0 1 0 0 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 24
Percent parens: 0.292
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer})
Zero cases best program: (exec_do*count (integer_mult in2) exec_eq integer_gt exec_k (exec_while (integer_eq integer_swap) exec_while (integer_eq) tag_exec_129 (integer_eq integer_max) in1 boolean_not) (print_integer))
Zero cases best errors: [1 0 0 0 1 0 0 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 24
Percent parens: 0.292
--- Lexicase Population Statistics ---
Count of elite individuals by case: (133 190 190 190 372 190 191 133 940 133)
Population mean number of elite cases: 2.66
Count of perfect (error zero) individuals by case: (133 190 190 190 372 190 191 133 940 133)
Population mean number of perfect (error zero) cases: 2.66
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction integer_flush} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (integer_flush integer_eq) tag_exec_129 (integer_eq integer_stackdepth) in1 boolean_not print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 0 0 0 1 0 0 1 0 1]
Total: 4
Mean: 0.4
Genome size: 22
Size: 30
Percent parens: 0.267
--- Population Statistics ---
Average total errors in population: 7.338
Median total errors in population: 8
Error averages by case: (0.867 0.81 0.81 0.81 0.628 0.81 0.809 0.867 0.06 0.867)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.316
Average program size in population (points): 19.273
Average percent parens in population: 0.314
Minimum age in population: 98.58971155765295
Maximum age in population: 104.7907849690193
Average age in population: 102.6825579116482
Median age in population: 102.7716059159686
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 122
Genome diversity (% unique genomes):	 0.42
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 125
Syntactic diversity (% unique Push programs):	 0.393
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 11297487
--- Timings ---
Current time: 1559584112687 milliseconds
Total Time:         164.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       136.5 seconds, 82.8%
Fitness Testing:     17.0 seconds, 10.3%
Report:              11.2 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Smallest problem report - generation 69
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))
Lexicase best errors: [0 1 0 1 0 0 0 1 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 13
Percent parens: 0.462
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))
Zero cases best errors: [0 1 0 1 0 0 0 1 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 13
Percent parens: 0.462
--- Lexicase Population Statistics ---
Count of elite individuals by case: (102 331 580 331 102 102 104 474 474 820)
Population mean number of elite cases: 3.42
Count of perfect (error zero) individuals by case: (102 331 580 331 102 102 104 474 474 820)
Population mean number of perfect (error zero) cases: 3.42
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))
Errors: [0 1 0 1 0 0 0 1 1 1]
Total: 5
Mean: 0.5
Genome size: 7
Size: 13
Percent parens: 0.462
--- Population Statistics ---
Average total errors in population: 6.58
Median total errors in population: 6
Error averages by case: (0.898 0.669 0.42 0.669 0.898 0.898 0.896 0.526 0.526 0.18)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 16.018
Average program size in population (points): 23.258
Average percent parens in population: 0.311
Minimum age in population: 101.4305616701179
Maximum age in population: 106.0584494425314
Average age in population: 104.1249324908034
Median age in population: 104.2080424176614
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 55
Genome diversity (% unique genomes):	 0.418
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 59
Syntactic diversity (% unique Push programs):	 0.407
Total error diversity:				 0.006
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 11444433
--- Timings ---
Current time: 1559584115250 milliseconds
Total Time:         167.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       138.8 seconds, 82.9%
Fitness Testing:     17.2 seconds, 10.3%
Report:              11.4 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Smallest problem report - generation 70
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Lexicase best errors: [1 1 0 1 0 1 0 1 1 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 7
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Zero cases best errors: [1 1 0 1 0 1 0 1 1 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 7
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (216 284 944 239 420 283 416 239 1 416)
Population mean number of elite cases: 3.46
Count of perfect (error zero) individuals by case: (216 284 944 239 420 283 416 239 1 416)
Population mean number of perfect (error zero) cases: 3.46
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction integer_max} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add integer_mult in2 integer_max integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth) in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 1 0 1 0 1 0 1 1 0]
Total: 6
Mean: 0.6
Genome size: 20
Size: 27
Percent parens: 0.259
--- Population Statistics ---
Average total errors in population: 6.542
Median total errors in population: 6
Error averages by case: (0.784 0.716 0.056 0.761 0.58 0.717 0.584 0.761 0.999 0.584)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.397
Average program size in population (points): 19.644
Average percent parens in population: 0.324
Minimum age in population: 103.0677719972562
Maximum age in population: 107.8418358281287
Average age in population: 105.6671178875304
Median age in population: 105.6639179597802
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 124
Genome diversity (% unique genomes):	 0.396
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 125
Syntactic diversity (% unique Push programs):	 0.385
Total error diversity:				 0.004
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.02
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 11558104
--- Timings ---
Current time: 1559584117460 milliseconds
Total Time:         169.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       140.7 seconds, 82.9%
Fitness Testing:     17.4 seconds, 10.2%
Report:              11.5 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Smallest problem report - generation 71
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Lexicase best errors: [1 0 0 0 0 0 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 7
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Zero cases best errors: [1 0 0 0 0 0 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 7
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (329 930 263 263 695 262 263 262 232 4)
Population mean number of elite cases: 3.50
Count of perfect (error zero) individuals by case: (329 930 263 263 695 262 263 262 232 4)
Population mean number of perfect (error zero) cases: 3.50
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Errors: [1 0 0 0 0 0 0 0 1 1]
Total: 3
Mean: 0.3
Genome size: 5
Size: 7
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 6.497
Median total errors in population: 7
Error averages by case: (0.671 0.07 0.737 0.737 0.305 0.738 0.737 0.738 0.768 0.996)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.647
Average program size in population (points): 19.912
Average percent parens in population: 0.318
Minimum age in population: 104.9557170414023
Maximum age in population: 108.9348592308192
Average age in population: 107.4602854766505
Median age in population: 107.4111728397624
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 183
Genome diversity (% unique genomes):	 0.292
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 187
Syntactic diversity (% unique Push programs):	 0.278
Total error diversity:				 0.007
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 11847903
--- Timings ---
Current time: 1559584119798 milliseconds
Total Time:         172.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       142.7 seconds, 82.9%
Fitness Testing:     17.6 seconds, 10.3%
Report:              11.6 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Smallest problem report - generation 72
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 25                 
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 81                 
Correct output: 23                  | Program output: 63                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 99                 
Correct output: 3                   | Program output: 95                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 91                 
Correct output: 3                   | Program output: 91                 
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 69                 
Correct output: 15                  | Program output: 53                 
Correct output: 12                  | Program output: 83                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: 15                 
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -26                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: 47                 
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 51                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 83                 
Correct output: -49                 | Program output: 75                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: 65                 
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: 11                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: 24                 
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: 14                 
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: 9                  
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -57                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -46                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -8                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (boolean_invert_second_then_and) in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) in1 integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [1 0 0 0 1 0 1 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 31
Percent parens: 0.290
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (boolean_invert_second_then_and) in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) in1 integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [1 0 0 0 1 0 1 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 31
Percent parens: 0.290
--- Lexicase Population Statistics ---
Count of elite individuals by case: (590 113 591 591 592 113 219 591 112 333)
Population mean number of elite cases: 3.85
Count of perfect (error zero) individuals by case: (590 113 591 591 592 113 219 591 112 333)
Population mean number of perfect (error zero) cases: 3.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (boolean_invert_second_then_and) in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) in1 integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 0 0 0 1 0 1 0 0 1]
Total: 4
Mean: 0.4
Genome size: 22
Size: 31
Percent parens: 0.290
--- Population Statistics ---
Average total errors in population: 6.155
Median total errors in population: 5
Error averages by case: (0.41 0.887 0.409 0.409 0.408 0.887 0.781 0.409 0.888 0.667)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 13.035
Average program size in population (points): 19.023
Average percent parens in population: 0.324
Minimum age in population: 106.0605995033945
Maximum age in population: 110.6809645406956
Average age in population: 108.7372507682066
Median age in population: 108.8067412810785
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 146
Genome diversity (% unique genomes):	 0.285
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 151
Syntactic diversity (% unique Push programs):	 0.268
Total error diversity:				 0.007
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 11977079
--- Timings ---
Current time: 1559584122571 milliseconds
Total Time:         174.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       145.1 seconds, 83.0%
Fitness Testing:     17.8 seconds, 10.2%
Report:              11.7 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Smallest problem report - generation 73
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Lexicase best errors: [1 1 0 0 0 1 1 0 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 7
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Zero cases best errors: [1 1 0 0 0 1 1 0 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 7
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (111 111 776 326 329 1000 475 326 111 326)
Population mean number of elite cases: 3.89
Count of perfect (error zero) individuals by case: (111 111 776 326 329 0 475 326 111 326)
Population mean number of perfect (error zero) cases: 2.89
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))
Errors: [1 1 0 0 0 1 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 13
Percent parens: 0.462
--- Population Statistics ---
Average total errors in population: 7.109
Median total errors in population: 8
Error averages by case: (0.889 0.889 0.224 0.674 0.671 1.0 0.525 0.674 0.889 0.674)
Error minima by case: (0 0 0 0 0 1 0 0 0 0)
Average genome size in population (length): 16.394
Average program size in population (points): 23.603
Average percent parens in population: 0.315
Minimum age in population: 107.9335057031694
Maximum age in population: 111.8922707691773
Average age in population: 110.1325450507935
Median age in population: 110.1906869708792
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 273
Genome diversity (% unique genomes):	 0.344
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 278
Syntactic diversity (% unique Push programs):	 0.332
Total error diversity:				 0.005
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 12120017
--- Timings ---
Current time: 1559584124717 milliseconds
Total Time:         176.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       147.0 seconds, 83.1%
Fitness Testing:     18.0 seconds, 10.2%
Report:              11.9 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Smallest problem report - generation 74
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (boolean_invert_second_then_and) exec_dup (exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) in1 integer_yank) print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [0 1 1 0 1 1 0 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 32
Percent parens: 0.313
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_dup} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (boolean_invert_second_then_and) exec_dup (exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) in1 integer_yank) print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [0 1 1 0 1 1 0 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 32
Percent parens: 0.313
--- Lexicase Population Statistics ---
Count of elite individuals by case: (569 1000 372 954 13 368 487 487 1000 954)
Population mean number of elite cases: 6.20
Count of perfect (error zero) individuals by case: (569 0 372 954 13 368 487 487 0 954)
Population mean number of perfect (error zero) cases: 4.20
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (integer_add in3 exec_do*range () boolean_dup_times print_integer exec_while (tag_exec_999 ()))
Errors: [0 1 1 0 1 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 7
Size: 11
Percent parens: 0.364
--- Population Statistics ---
Average total errors in population: 5.796
Median total errors in population: 6
Error averages by case: (0.431 1.0 0.628 0.046 0.987 0.632 0.513 0.513 1.0 0.046)
Error minima by case: (0 1 0 0 0 0 0 0 1 0)
Average genome size in population (length): 15.546
Average program size in population (points): 22.292
Average percent parens in population: 0.313
Minimum age in population: 108.9335057031694
Maximum age in population: 113.6469171822289
Average age in population: 111.6796885069265
Median age in population: 111.7745278744179
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 108
Genome diversity (% unique genomes):	 0.336
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 112
Syntactic diversity (% unique Push programs):	 0.315
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 12283707
--- Timings ---
Current time: 1559584127474 milliseconds
Total Time:         179.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       149.4 seconds, 83.1%
Fitness Testing:     18.2 seconds, 10.1%
Report:              12.0 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Smallest problem report - generation 75
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Lexicase best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Lexicase best errors: [0 1 1 1 0 1 0 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 7
Percent parens: 0.286
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Zero cases best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Zero cases best errors: [0 1 1 1 0 1 0 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 7
Percent parens: 0.286
--- Lexicase Population Statistics ---
Count of elite individuals by case: (466 160 283 283 471 1000 466 284 470 1000)
Population mean number of elite cases: 4.88
Count of perfect (error zero) individuals by case: (466 160 283 283 471 0 466 284 470 0)
Population mean number of perfect (error zero) cases: 2.88
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (in3 integer_mult integer_gt exec_do*range (print_integer))
Errors: [0 1 1 1 0 1 0 1 0 1]
Total: 6
Mean: 0.6
Genome size: 5
Size: 7
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 7.117
Median total errors in population: 7
Error averages by case: (0.534 0.84 0.717 0.717 0.529 1.0 0.534 0.716 0.53 1.0)
Error minima by case: (0 0 0 0 0 1 0 0 0 1)
Average genome size in population (length): 14.735
Average program size in population (points): 21.254
Average percent parens in population: 0.316
Minimum age in population: 109.9335057031694
Maximum age in population: 114.8492789054496
Average age in population: 113.1585232810299
Median age in population: 113.2506807949881
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 107
Genome diversity (% unique genomes):	 0.376
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 110
Syntactic diversity (% unique Push programs):	 0.356
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 12435627
--- Timings ---
Current time: 1559584129610 milliseconds
Total Time:         181.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       151.2 seconds, 83.2%
Fitness Testing:     18.4 seconds, 10.1%
Report:              12.1 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Smallest problem report - generation 76
Test total error for best: 657
Test mean error for best: 0.65700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: 34                 
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: 54                 
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 52                 
Correct output: 2                   | Program output: 92                 
Correct output: 8                   | Program output: 42                 
Correct output: 3                   | Program output: 61                 
Correct output: 11                  | Program output: 34                 
Correct output: 23                  | Program output: 78                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 32                 
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 81                 
Correct output: 4                   | Program output: 58                 
Correct output: 3                   | Program output: 95                 
Correct output: 29                  | Program output: 74                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 36                 
Correct output: 38                  | Program output: 58                 
Correct output: 7                   | Program output: 95                 
Correct output: -90                 | Program output: 27                 
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: 95                 
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -50                
Correct output: -85                 | Program output: 95                 
Correct output: -94                 | Program output: 20                 
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: 67                 
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 41                 
Correct output: 5                   | Program output: 57                 
Correct output: 13                  | Program output: 17                 
Correct output: -49                 | Program output: 92                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -10                
Correct output: -85                 | Program output: 97                 
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: 70                 
Correct output: -97                 | Program output: 67                 
Correct output: -83                 | Program output: 99                 
Correct output: -60                 | Program output: -12                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -51                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: 72                 
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: 80                 
Correct output: -78                 | Program output: 10                 
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: 87                 
Correct output: -94                 | Program output: 81                 
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: 70                 
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: 2                  
Correct output: -92                 | Program output: 44                 
Correct output: -74                 | Program output: 47                 
Correct output: -76                 | Program output: 52                 
Correct output: -80                 | Program output: -7                 
Correct output: -94                 | Program output: -85                
Correct output: -33                 | Program output: 58                 
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -6                 
Correct output: -96                 | Program output: 55                 
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: 100                
Correct output: -74                 | Program output: 26                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 1, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (integer_mult) in2 integer_stackdepth integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq) integer_stackdepth) in1 boolean_not print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [1 0 0 1 1 0 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 31
Percent parens: 0.290
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 1, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (integer_mult) in2 integer_stackdepth integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq) integer_stackdepth) in1 boolean_not print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [1 0 0 1 1 0 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 31
Percent parens: 0.290
--- Lexicase Population Statistics ---
Count of elite individuals by case: (474 929 322 118 473 797 118 330 118 330)
Population mean number of elite cases: 4.01
Count of perfect (error zero) individuals by case: (474 929 322 118 473 797 118 330 118 330)
Population mean number of perfect (error zero) cases: 4.01
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k () (boolean_invert_first_then_and integer_eq in3) exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth) in1 boolean_not print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 0 0 1 1 0 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 22
Size: 31
Percent parens: 0.290
--- Population Statistics ---
Average total errors in population: 5.991
Median total errors in population: 6
Error averages by case: (0.526 0.071 0.678 0.882 0.527 0.203 0.882 0.67 0.882 0.67)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.381
Average program size in population (points): 20.68
Average percent parens in population: 0.313
Minimum age in population: 110.9335057031694
Maximum age in population: 116.5066669346179
Average age in population: 114.637272233211
Median age in population: 114.7061617174826
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 129
Genome diversity (% unique genomes):	 0.422
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 132
Syntactic diversity (% unique Push programs):	 0.392
Total error diversity:				 0.006
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 12586346
--- Timings ---
Current time: 1559584131899 milliseconds
Total Time:         184.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       153.2 seconds, 83.2%
Fitness Testing:     18.6 seconds, 10.1%
Report:              12.2 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Smallest problem report - generation 77
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))
Lexicase best errors: [0 0 1 1 1 0 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 13
Percent parens: 0.462
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))
Zero cases best errors: [0 0 1 1 1 0 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 13
Percent parens: 0.462
--- Lexicase Population Statistics ---
Count of elite individuals by case: (924 924 1000 1000 699 223 602 223 320 315)
Population mean number of elite cases: 6.23
Count of perfect (error zero) individuals by case: (924 924 0 0 699 223 602 223 320 315)
Population mean number of perfect (error zero) cases: 4.23
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer})
Best program: (in3 boolean_eq integer_gt exec_do*range (print_integer))
Errors: [0 0 1 1 1 0 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 5
Size: 7
Percent parens: 0.286
--- Population Statistics ---
Average total errors in population: 5.77
Median total errors in population: 5
Error averages by case: (0.076 0.076 1.0 1.0 0.301 0.777 0.398 0.777 0.68 0.685)
Error minima by case: (0 0 1 1 0 0 0 0 0 0)
Average genome size in population (length): 16.457
Average program size in population (points): 23.437
Average percent parens in population: 0.302
Minimum age in population: 111.9335057031694
Maximum age in population: 118.1445734679886
Average age in population: 116.0373417048264
Median age in population: 116.1154411111782
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 61
Genome diversity (% unique genomes):	 0.434
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 61
Syntactic diversity (% unique Push programs):	 0.413
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 12751063
--- Timings ---
Current time: 1559584134162 milliseconds
Total Time:         186.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       155.1 seconds, 83.2%
Fitness Testing:     18.9 seconds, 10.1%
Report:              12.3 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Smallest problem report - generation 78
Test total error for best: 633
Test mean error for best: 0.63300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: 47                 
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 17                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 82                 
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 90                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 66                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 64                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 62                 
Correct output: 38                  | Program output: 96                 
Correct output: 7                   | Program output: 94                 
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 73                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 73                 
Correct output: -100                | Program output: -40                
Correct output: -23                 | Program output: 61                 
Correct output: -15                 | Program output: 71                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 77                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: 25                 
Correct output: -20                 | Program output: 66                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 23                 
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 94                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: 41                 
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -87                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 37                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: 59                 
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -27                
Correct output: -44                 | Program output: 89                 
Correct output: -92                 | Program output: 34                 
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 71                 
Correct output: -60                 | Program output: -6                 
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: 74                 
Correct output: -74                 | Program output: 22                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -3                 
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: 53                 
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: 52                 
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (exec_do*count (exec_k_when_autoconstructing () (in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth) in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())))
Lexicase best errors: [0 1 1 0 0 1 1 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 33
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 1, :instruction boolean_not} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (exec_do*count (exec_k_when_autoconstructing () (in2 exec_eq integer_gt exec_do*count () integer_mult integer_gt exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq) tag_exec_129 (integer_eq integer_stackdepth) in1 boolean_not) print_integer tag_exec_782 () tag_exec_999 ())))
Zero cases best errors: [0 1 1 0 0 1 1 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 33
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (363 85 1000 580 907 461 1000 364 461 1000)
Population mean number of elite cases: 6.22
Count of perfect (error zero) individuals by case: (363 85 0 580 907 461 0 364 461 0)
Population mean number of perfect (error zero) cases: 3.22
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_do*count} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_add} {:close 0, :instruction in3} {:close 1, :instruction exec_do*range} {:close 1, :instruction exec_if} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction tag_exec_999})
Best program: (exec_do*count (exec_k_when_autoconstructing () (integer_add in3 exec_do*range () exec_if () (print_integer exec_while (tag_exec_999 ())))))
Errors: [0 1 1 0 0 1 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 9
Size: 18
Percent parens: 0.500
--- Population Statistics ---
Average total errors in population: 6.779
Median total errors in population: 6
Error averages by case: (0.637 0.915 1.0 0.42 0.093 0.539 1.0 0.636 0.539 1.0)
Error minima by case: (0 0 1 0 0 0 1 0 0 1)
Average genome size in population (length): 16.995
Average program size in population (points): 24.182
Average percent parens in population: 0.305
Minimum age in population: 113.3261131109272
Maximum age in population: 119.5560232903626
Average age in population: 117.4428690635432
Median age in population: 117.5431927229074
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 173
Genome diversity (% unique genomes):	 0.414
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 175
Syntactic diversity (% unique Push programs):	 0.399
Total error diversity:				 0.005
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 12889472
--- Timings ---
Current time: 1559584136549 milliseconds
Total Time:         188.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       157.2 seconds, 83.3%
Fitness Testing:     19.0 seconds, 10.1%
Report:              12.4 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Smallest problem report - generation 79
Test total error for best: 407
Test mean error for best: 0.40700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (exec_do*count (integer_mult in2 exec_eq integer_gt exec_do*count () integer_swap) exec_while (integer_eq) tag_exec_129 (integer_eq integer_max) in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [1 0 1 0 1 1 1 0 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 23
Percent parens: 0.261
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_do*count} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_while} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (exec_do*count (integer_mult in2 exec_eq integer_gt exec_do*count () integer_swap) exec_while (integer_eq) tag_exec_129 (integer_eq integer_max) in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [1 0 1 0 1 1 1 0 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 23
Percent parens: 0.261
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 153 394 189 1000 1000 1000 151 35 392)
Population mean number of elite cases: 5.31
Count of perfect (error zero) individuals by case: (0 153 394 189 0 0 0 151 35 392)
Population mean number of perfect (error zero) cases: 1.31
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min) integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 1 0 0 1 1 1 1 0 0]
Total: 6
Mean: 0.6
Genome size: 26
Size: 36
Percent parens: 0.278
--- Population Statistics ---
Average total errors in population: 8.686
Median total errors in population: 8
Error averages by case: (1.0 0.847 0.606 0.811 1.0 1.0 1.0 0.849 0.965 0.608)
Error minima by case: (1 0 0 0 1 1 1 0 0 0)
Average genome size in population (length): 18.595
Average program size in population (points): 26.161
Average percent parens in population: 0.299
Minimum age in population: 114.8932548957486
Maximum age in population: 121.1243756125292
Average age in population: 118.8984675943927
Median age in population: 118.9618150355458
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 220
Genome diversity (% unique genomes):	 0.438
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 226
Syntactic diversity (% unique Push programs):	 0.427
Total error diversity:				 0.005
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 13059603
--- Timings ---
Current time: 1559584139001 milliseconds
Total Time:         191.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       159.3 seconds, 83.3%
Fitness Testing:     19.2 seconds, 10.1%
Report:              12.5 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Smallest problem report - generation 80
Test total error for best: 407
Test mean error for best: 0.40700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 45                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 47                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: 2                  
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: 9                  
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -22                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: 32                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: 58                 
Correct output: -90                 | Program output: 62                 
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 65                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: 55                 
Correct output: -60                 | Program output: -34                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -31                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: 19                 
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq exec_noop exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min) integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [1 0 0 0 0 1 1 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 36
Percent parens: 0.278
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq exec_noop exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min) integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [1 0 0 0 0 1 1 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 36
Percent parens: 0.278
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 897 897 405 405 477 1000 472 405 2)
Population mean number of elite cases: 5.96
Count of perfect (error zero) individuals by case: (0 897 897 405 405 477 0 472 405 2)
Population mean number of perfect (error zero) cases: 3.96
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min) integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [1 0 0 0 0 1 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 26
Size: 36
Percent parens: 0.278
--- Population Statistics ---
Average total errors in population: 6.04
Median total errors in population: 6
Error averages by case: (1.0 0.103 0.103 0.595 0.595 0.523 1.0 0.528 0.595 0.998)
Error minima by case: (1 0 0 0 0 0 1 0 0 0)
Average genome size in population (length): 21.301
Average program size in population (points): 29.204
Average percent parens in population: 0.269
Minimum age in population: 118.526784581649
Maximum age in population: 121.5345857358951
Average age in population: 120.0427202639662
Median age in population: 120.5306851587721
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 374
Genome diversity (% unique genomes):	 0.306
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 384
Syntactic diversity (% unique Push programs):	 0.295
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 13215557
--- Timings ---
Current time: 1559584141290 milliseconds
Total Time:         193.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       161.2 seconds, 83.3%
Fitness Testing:     19.4 seconds, 10.0%
Report:              12.7 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Smallest problem report - generation 81
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [0 0 0 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 38
Percent parens: 0.237
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [0 0 0 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 38
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (508 685 508 503 508 939 578 940 1000 474)
Population mean number of elite cases: 6.64
Count of perfect (error zero) individuals by case: (508 685 508 503 508 939 578 940 0 474)
Population mean number of perfect (error zero) cases: 5.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 0 0 0 0 0 0 0 1 0]
Total: 1
Mean: 0.1
Genome size: 35
Size: 46
Percent parens: 0.239
--- Population Statistics ---
Average total errors in population: 4.357
Median total errors in population: 4
Error averages by case: (0.492 0.315 0.492 0.497 0.492 0.061 0.422 0.06 1.0 0.526)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 23.768
Average program size in population (points): 32.199
Average percent parens in population: 0.261
Minimum age in population: 119.526784581649
Maximum age in population: 123.5345857358951
Average age in population: 121.429715865357
Median age in population: 121.5306851587721
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 199
Genome diversity (% unique genomes):	 0.376
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 202
Syntactic diversity (% unique Push programs):	 0.364
Total error diversity:				 0.01
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 13376870
--- Timings ---
Current time: 1559584143656 milliseconds
Total Time:         195.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       163.2 seconds, 83.4%
Fitness Testing:     19.6 seconds, 10.0%
Report:              12.9 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Smallest problem report - generation 82
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction exec_yank} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer exec_yank tag_exec_999 ())
Lexicase best errors: [0 0 0 0 0 0 0 0 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 45
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction exec_yank} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer exec_yank tag_exec_999 ())
Zero cases best errors: [0 0 0 0 0 0 0 0 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 45
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (854 810 794 807 795 894 859 797 1000 859)
Population mean number of elite cases: 8.47
Count of perfect (error zero) individuals by case: (854 810 794 807 795 894 859 797 0 859)
Population mean number of perfect (error zero) cases: 7.47
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 0 0 0 0 0 0 0 1 0]
Total: 1
Mean: 0.1
Genome size: 35
Size: 46
Percent parens: 0.239
--- Population Statistics ---
Average total errors in population: 2.531
Median total errors in population: 1
Error averages by case: (0.146 0.19 0.206 0.193 0.205 0.106 0.141 0.203 1.0 0.141)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 31.927
Average program size in population (points): 41.921
Average percent parens in population: 0.238
Minimum age in population: 122.5287348702105
Maximum age in population: 124.0306851587721
Average age in population: 123.2667061139142
Median age in population: 123.0306851587721
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 294
Genome diversity (% unique genomes):	 0.402
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 308
Syntactic diversity (% unique Push programs):	 0.381
Total error diversity:				 0.008
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 13608252
--- Timings ---
Current time: 1559584146080 milliseconds
Total Time:         198.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.1 seconds, 83.3%
Fitness Testing:     19.9 seconds, 10.0%
Report:              13.1 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Smallest problem report - generation 83
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (exec_do*while (integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min) integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 39
Percent parens: 0.256
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (exec_do*while (integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min) integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 39
Percent parens: 0.256
--- Lexicase Population Statistics ---
Count of elite individuals by case: (807 831 865 774 823 865 771 831 841 1000)
Population mean number of elite cases: 8.41
Count of perfect (error zero) individuals by case: (807 831 865 774 823 865 771 831 841 0)
Population mean number of perfect (error zero) cases: 7.41
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Errors: [0 0 0 0 0 0 0 0 0 1]
Total: 1
Mean: 0.1
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 2.592
Median total errors in population: 1
Error averages by case: (0.193 0.169 0.135 0.226 0.177 0.135 0.229 0.169 0.159 1.0)
Error minima by case: (0 0 0 0 0 0 0 0 0 1)
Average genome size in population (length): 31.832
Average program size in population (points): 41.753
Average percent parens in population: 0.237
Minimum age in population: 123.5287348702105
Maximum age in population: 126.0306851587721
Average age in population: 124.7071885613171
Median age in population: 124.7797100144913
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 235
Genome diversity (% unique genomes):	 0.468
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 260
Syntactic diversity (% unique Push programs):	 0.437
Total error diversity:				 0.009
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 13846809
--- Timings ---
Current time: 1559584148458 milliseconds
Total Time:         200.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.1 seconds, 83.3%
Fitness Testing:     20.2 seconds, 10.0%
Report:              13.3 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Smallest problem report - generation 84
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [1 0 0 1 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 38
Percent parens: 0.237
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [1 0 0 1 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 38
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 822 794 1000 877 766 790 831 779 779)
Population mean number of elite cases: 8.44
Count of perfect (error zero) individuals by case: (0 822 794 0 877 766 790 831 779 779)
Population mean number of perfect (error zero) cases: 6.44
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_empty} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_empty) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Errors: [1 0 0 1 0 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 3.562
Median total errors in population: 2
Error averages by case: (1.0 0.178 0.206 1.0 0.123 0.234 0.21 0.169 0.221 0.221)
Error minima by case: (1 0 0 1 0 0 0 0 0 0)
Average genome size in population (length): 31.731
Average program size in population (points): 41.61
Average percent parens in population: 0.237
Minimum age in population: 124.5287348702105
Maximum age in population: 127.8424538005615
Average age in population: 126.1892259513519
Median age in population: 126.2797100144913
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 191
Genome diversity (% unique genomes):	 0.527
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 214
Syntactic diversity (% unique Push programs):	 0.497
Total error diversity:				 0.008
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 14077740
--- Timings ---
Current time: 1559584150899 milliseconds
Total Time:         203.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.0 seconds, 83.3%
Fitness Testing:     20.4 seconds, 10.1%
Report:              13.5 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Smallest problem report - generation 85
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_swap integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [0 0 0 0 0 0 1 0 0 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 46
Percent parens: 0.239
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_swap integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [0 0 0 0 0 0 1 0 0 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 46
Percent parens: 0.239
--- Lexicase Population Statistics ---
Count of elite individuals by case: (866 865 798 804 866 816 1000 807 904 1000)
Population mean number of elite cases: 8.73
Count of perfect (error zero) individuals by case: (866 865 798 804 866 816 0 807 904 0)
Population mean number of perfect (error zero) cases: 6.73
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_shove} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_min} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Best program: (integer_add exec_do*count (integer_shove) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_min integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Errors: [0 0 0 0 0 0 1 0 0 1]
Total: 2
Mean: 0.2
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 3.274
Median total errors in population: 2
Error averages by case: (0.134 0.135 0.202 0.196 0.134 0.184 1.0 0.193 0.096 1.0)
Error minima by case: (0 0 0 0 0 0 1 0 0 1)
Average genome size in population (length): 31.593
Average program size in population (points): 41.431
Average percent parens in population: 0.237
Minimum age in population: 125.5287348702105
Maximum age in population: 129.4047100144913
Average age in population: 127.604396630113
Median age in population: 127.6551975866317
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 164
Genome diversity (% unique genomes):	 0.535
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 176
Syntactic diversity (% unique Push programs):	 0.497
Total error diversity:				 0.009
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.06
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 14309864
--- Timings ---
Current time: 1559584153283 milliseconds
Total Time:         205.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       171.0 seconds, 83.2%
Fitness Testing:     20.7 seconds, 10.1%
Report:              13.7 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Smallest problem report - generation 86
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [0 0 1 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 47
Percent parens: 0.234
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [0 0 1 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 47
Percent parens: 0.234
--- Lexicase Population Statistics ---
Count of elite individuals by case: (771 838 1 783 835 893 782 1000 798 787)
Population mean number of elite cases: 7.49
Count of perfect (error zero) individuals by case: (771 838 1 783 835 893 782 0 798 787)
Population mean number of perfect (error zero) cases: 6.49
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction exec_yank} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer exec_yank tag_exec_999 ())
Errors: [0 0 1 0 0 0 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 35
Size: 45
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 3.512
Median total errors in population: 2
Error averages by case: (0.229 0.162 0.999 0.217 0.165 0.107 0.218 1.0 0.202 0.213)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 31.526
Average program size in population (points): 41.372
Average percent parens in population: 0.238
Minimum age in population: 126.5287348702105
Maximum age in population: 131.123094335386
Average age in population: 129.1361731262847
Median age in population: 129.2169662284211
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 111
Genome diversity (% unique genomes):	 0.603
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 144
Syntactic diversity (% unique Push programs):	 0.57
Total error diversity:				 0.009
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 14544510
--- Timings ---
Current time: 1559584155666 milliseconds
Total Time:         207.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.9 seconds, 83.2%
Fitness Testing:     20.9 seconds, 10.1%
Report:              13.9 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Smallest problem report - generation 87
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq in3) exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth) integer_min) integer_yank) integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [0 0 0 0 0 1 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 42
Percent parens: 0.238
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_eq in3) exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth) integer_min) integer_yank) integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [0 0 0 0 0 1 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 42
Percent parens: 0.238
--- Lexicase Population Statistics ---
Count of elite individuals by case: (707 704 718 746 746 1000 705 716 719 719)
Population mean number of elite cases: 7.48
Count of perfect (error zero) individuals by case: (707 704 718 746 746 0 705 716 719 719)
Population mean number of perfect (error zero) cases: 6.48
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_inc} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_inc integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 0 0 0 0 1 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 35
Size: 46
Percent parens: 0.239
--- Population Statistics ---
Average total errors in population: 3.52
Median total errors in population: 1
Error averages by case: (0.293 0.296 0.282 0.254 0.254 1.0 0.295 0.284 0.281 0.281)
Error minima by case: (0 0 0 0 0 1 0 0 0 0)
Average genome size in population (length): 31.235
Average program size in population (points): 40.983
Average percent parens in population: 0.238
Minimum age in population: 127.5287348702105
Maximum age in population: 132.7015240679737
Average age in population: 130.5265533676852
Median age in population: 130.5610209610088
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 85
Genome diversity (% unique genomes):	 0.585
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 95
Syntactic diversity (% unique Push programs):	 0.554
Total error diversity:				 0.01
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 14767469
--- Timings ---
Current time: 1559584158023 milliseconds
Total Time:         210.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.8 seconds, 83.2%
Fitness Testing:     21.2 seconds, 10.1%
Report:              14.1 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Smallest problem report - generation 88
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [0 1 0 1 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 38
Percent parens: 0.237
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [0 1 0 1 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 38
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (868 1000 862 1000 823 823 823 819 816 868)
Population mean number of elite cases: 8.70
Count of perfect (error zero) individuals by case: (868 0 862 0 823 823 823 819 816 868)
Population mean number of perfect (error zero) cases: 6.70
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_add} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_add in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Errors: [0 1 0 1 0 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 3.298
Median total errors in population: 2
Error averages by case: (0.132 1.0 0.138 1.0 0.177 0.177 0.177 0.181 0.184 0.132)
Error minima by case: (0 1 0 1 0 0 0 0 0 0)
Average genome size in population (length): 31.34
Average program size in population (points): 41.055
Average percent parens in population: 0.236
Minimum age in population: 128.5287348702105
Maximum age in population: 133.9708877150505
Average age in population: 132.0632868129239
Median age in population: 132.1329285252182
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 76
Genome diversity (% unique genomes):	 0.629
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 105
Syntactic diversity (% unique Push programs):	 0.588
Total error diversity:				 0.009
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.05
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 14995284
--- Timings ---
Current time: 1559584160387 milliseconds
Total Time:         212.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.7 seconds, 83.1%
Fitness Testing:     21.4 seconds, 10.1%
Report:              14.3 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Smallest problem report - generation 89
Test total error for best: 213
Test mean error for best: 0.21300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in4} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add exec_do*count (integer_mult) in4 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 46
Percent parens: 0.239
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in4} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add exec_do*count (integer_mult) in4 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 46
Percent parens: 0.239
--- Lexicase Population Statistics ---
Count of elite individuals by case: (807 814 810 907 863 826 1 1 904 817)
Population mean number of elite cases: 6.75
Count of perfect (error zero) individuals by case: (807 814 810 907 863 826 1 1 904 817)
Population mean number of perfect (error zero) cases: 6.75
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in4} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in4 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 0 0 0 0 0 0 0 0 1]
Total: 1
Mean: 0.1
Genome size: 35
Size: 46
Percent parens: 0.239
--- Population Statistics ---
Average total errors in population: 3.25
Median total errors in population: 2
Error averages by case: (0.193 0.186 0.19 0.093 0.137 0.174 0.999 0.999 0.096 0.183)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 31.24
Average program size in population (points): 40.923
Average percent parens in population: 0.236
Minimum age in population: 129.5287348702105
Maximum age in population: 135.5492869743795
Average age in population: 133.4928396729194
Median age in population: 133.5606552819036
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 41
Genome diversity (% unique genomes):	 0.649
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.604
Total error diversity:				 0.009
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.053
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 15223878
--- Timings ---
Current time: 1559584162752 milliseconds
Total Time:         214.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       178.6 seconds, 83.1%
Fitness Testing:     21.7 seconds, 10.1%
Report:              14.5 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Smallest problem report - generation 90
Test total error for best: 213
Test mean error for best: 0.21300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction tag_integer_456} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (tag_integer_456 integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [0 0 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 38
Percent parens: 0.237
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction tag_integer_456} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (tag_integer_456 integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [0 0 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 38
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (784 768 272 757 778 763 784 503 769 778)
Population mean number of elite cases: 6.96
Count of perfect (error zero) individuals by case: (784 768 272 757 778 763 784 503 769 778)
Population mean number of perfect (error zero) cases: 6.96
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in4} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in4 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 0 1 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 35
Size: 46
Percent parens: 0.239
--- Population Statistics ---
Average total errors in population: 3.044
Median total errors in population: 1
Error averages by case: (0.216 0.232 0.728 0.243 0.222 0.237 0.216 0.497 0.231 0.222)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.677
Average program size in population (points): 44.221
Average percent parens in population: 0.238
Minimum age in population: 132.6976025813444
Maximum age in population: 136.7444471080856
Average age in population: 135.243424349641
Median age in population: 135.1408933915121
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 359
Genome diversity (% unique genomes):	 0.569
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 368
Syntactic diversity (% unique Push programs):	 0.539
Total error diversity:				 0.009
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.082
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 15468585
--- Timings ---
Current time: 1559584165175 milliseconds
Total Time:         217.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.6 seconds, 83.1%
Fitness Testing:     21.9 seconds, 10.1%
Report:              14.7 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Smallest problem report - generation 91
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction integer_dup_times} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank boolean_xor in1 integer_min print_integer integer_dup_times tag_exec_883 ())
Lexicase best errors: [0 0 0 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 38
Percent parens: 0.237
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction boolean_xor} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction integer_dup_times} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank boolean_xor in1 integer_min print_integer integer_dup_times tag_exec_883 ())
Zero cases best errors: [0 0 0 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 38
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (804 408 419 795 761 768 376 369 761 807)
Population mean number of elite cases: 6.27
Count of perfect (error zero) individuals by case: (804 408 419 795 761 768 376 369 761 807)
Population mean number of perfect (error zero) cases: 6.27
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 2, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 () integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Errors: [0 0 0 0 0 0 1 1 0 0]
Total: 2
Mean: 0.2
Genome size: 29
Size: 38
Percent parens: 0.237
--- Population Statistics ---
Average total errors in population: 3.732
Median total errors in population: 2
Error averages by case: (0.196 0.592 0.581 0.205 0.239 0.232 0.624 0.631 0.239 0.193)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.181
Average program size in population (points): 43.531
Average percent parens in population: 0.237
Minimum age in population: 134.2794662284211
Maximum age in population: 138.4769604028619
Average age in population: 136.7154264282231
Median age in population: 136.8450787554737
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 202
Genome diversity (% unique genomes):	 0.627
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 211
Syntactic diversity (% unique Push programs):	 0.589
Total error diversity:				 0.009
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 15720649
--- Timings ---
Current time: 1559584167634 milliseconds
Total Time:         219.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.5 seconds, 83.1%
Fitness Testing:     22.2 seconds, 10.1%
Report:              14.9 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Smallest problem report - generation 92
Test total error for best: 213
Test mean error for best: 0.21300
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: 42                 
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 14                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 51                 
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 37                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 35                 
Correct output: 8                   | Program output: 18                 
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 23                 
Correct output: 38                  | Program output: 48                 
Correct output: 7                   | Program output: 69                 
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: 1                  
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -11                
Correct output: -15                 | Program output: 12                 
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -2                 
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -91                
Correct output: -83                 | Program output: -32                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -57                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -40                
Correct output: -94                 | Program output: -69                
Correct output: -78                 | Program output: -34                
Correct output: -53                 | Program output: -37                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -57                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -46                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -8                 
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -29                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -37                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -8                 
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in4} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Lexicase best program: (integer_add exec_do*count (integer_mult) in4 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Lexicase best errors: [0 0 0 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 46
Percent parens: 0.239
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in4} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Zero cases best program: (integer_add exec_do*count (integer_mult) in4 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Zero cases best errors: [0 0 0 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 46
Percent parens: 0.239
--- Lexicase Population Statistics ---
Count of elite individuals by case: (849 845 778 404 401 777 814 777 404 861)
Population mean number of elite cases: 6.91
Count of perfect (error zero) individuals by case: (849 845 778 404 401 777 814 777 404 861)
Population mean number of perfect (error zero) cases: 6.91
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in4} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in4 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth)) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 0 0 0 1 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 35
Size: 46
Percent parens: 0.239
--- Population Statistics ---
Average total errors in population: 3.09
Median total errors in population: 2
Error averages by case: (0.151 0.155 0.222 0.596 0.599 0.223 0.186 0.223 0.596 0.139)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.259
Average program size in population (points): 43.657
Average percent parens in population: 0.238
Minimum age in population: 135.5297100144913
Maximum age in population: 139.9947645749895
Average age in population: 138.1593442439385
Median age in population: 138.1834760540884
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 175
Genome diversity (% unique genomes):	 0.64
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 186
Syntactic diversity (% unique Push programs):	 0.603
Total error diversity:				 0.01
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 15961903
--- Timings ---
Current time: 1559584170029 milliseconds
Total Time:         222.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       184.5 seconds, 83.0%
Fitness Testing:     22.5 seconds, 10.1%
Report:              15.1 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Smallest problem report - generation 93
Test total error for best: 207
Test mean error for best: 0.20700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: 68                 
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 27                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 18                 
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 43                 
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 58                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -50                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: 17                 
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -47                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 37                 
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: 20                 
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -35                
Correct output: -22                 | Program output: -9                 
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -4                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -89                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -51                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -87                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -24                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 2, :instruction in3} {:close 0, :instruction exec_while} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 2, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 2, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) () exec_while (integer_dec tag_exec_129 () integer_eq integer_eq)) tag_exec_129 (integer_eq tag_exec_129 () integer_eq integer_eq integer_stackdepth) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [0 1 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 44
Percent parens: 0.227
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 2, :instruction in3} {:close 0, :instruction exec_while} {:close 0, :instruction integer_dec} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 2, :instruction integer_min} {:close 0, :instruction integer_yank} {:close 2, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) () exec_while (integer_dec tag_exec_129 () integer_eq integer_eq)) tag_exec_129 (integer_eq tag_exec_129 () integer_eq integer_eq integer_stackdepth) integer_min integer_yank integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [0 1 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 44
Percent parens: 0.227
--- Lexicase Population Statistics ---
Count of elite individuals by case: (280 519 272 770 770 769 785 793 272 870)
Population mean number of elite cases: 6.10
Count of perfect (error zero) individuals by case: (280 519 272 770 770 769 785 793 272 870)
Population mean number of perfect (error zero) cases: 6.10
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 1, :instruction in2} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 0, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction print_integer} {:close 1, :instruction tag_exec_782} {:close 0, :instruction tag_exec_999})
Best program: (integer_add exec_do*count (integer_mult) in2 integer_add exec_k (boolean_invert_first_then_and integer_eq integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while (integer_dec) tag_exec_129 (integer_eq integer_eq) integer_eq integer_max) in1 integer_min) (print_integer integer_eq integer_stackdepth) integer_min integer_yank print_integer tag_exec_782 () tag_exec_999 ())
Errors: [0 1 0 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 31
Size: 41
Percent parens: 0.244
--- Population Statistics ---
Average total errors in population: 3.9
Median total errors in population: 3
Error averages by case: (0.72 0.481 0.728 0.23 0.23 0.231 0.215 0.207 0.728 0.13)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 33.828
Average program size in population (points): 44.391
Average percent parens in population: 0.238
Minimum age in population: 136.5297100144913
Maximum age in population: 141.5757417724984
Average age in population: 139.5702466773411
Median age in population: 139.6514517314826
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 195
Genome diversity (% unique genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 210
Syntactic diversity (% unique Push programs):	 0.599
Total error diversity:				 0.009
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.07
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 16208603
--- Timings ---
Current time: 1559584172452 milliseconds
Total Time:         224.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.4 seconds, 83.0%
Fitness Testing:     22.7 seconds, 10.1%
Report:              15.3 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Smallest problem report - generation 94
Test total error for best: 198
Test mean error for best: 0.19800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: 93                 
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: 88                 
Correct output: 40                  | Program output: 61                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 92                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 34                 
Correct output: 15                  | Program output: 25                 
Correct output: 12                  | Program output: 38                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 72                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -64                
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: 35                 
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -5                 
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -18                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: 20                 
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: 25                 
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -28                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -5                 
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -37                
Correct output: -73                 | Program output: -50                
Correct output: -76                 | Program output: -14                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -47                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 3, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_lte} {:close 2, :instruction integer_max} {:close 1, :instruction in4} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_sub})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_lte integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
Lexicase best errors: [0 0 0 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 37
Percent parens: 0.216
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 3, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_lte} {:close 2, :instruction integer_max} {:close 1, :instruction in4} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_sub})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_lte integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
Zero cases best errors: [0 0 0 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 37
Percent parens: 0.216
--- Lexicase Population Statistics ---
Count of elite individuals by case: (897 187 817 634 852 183 187 634 648 878)
Population mean number of elite cases: 5.92
Count of perfect (error zero) individuals by case: (897 187 817 634 852 183 187 634 648 878)
Population mean number of perfect (error zero) cases: 5.92
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 3, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_lte} {:close 2, :instruction integer_max} {:close 1, :instruction in4} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_sub})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_lte integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
Errors: [0 0 0 0 1 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 29
Size: 37
Percent parens: 0.216
--- Population Statistics ---
Average total errors in population: 4.083
Median total errors in population: 3
Error averages by case: (0.103 0.813 0.183 0.366 0.148 0.817 0.813 0.366 0.352 0.122)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 32.012
Average program size in population (points): 42.052
Average percent parens in population: 0.239
Minimum age in population: 137.5297100144913
Maximum age in population: 142.9808685574406
Average age in population: 141.0241853917847
Median age in population: 141.1126613152094
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 53
Genome diversity (% unique genomes):	 0.611
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 57
Syntactic diversity (% unique Push programs):	 0.577
Total error diversity:				 0.009
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 16441046
--- Timings ---
Current time: 1559584174849 milliseconds
Total Time:         227.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.4 seconds, 83.0%
Fitness Testing:     23.0 seconds, 10.1%
Report:              15.5 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Smallest problem report - generation 95
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 3, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_lte} {:close 2, :instruction integer_max} {:close 1, :instruction in4} {:close 2, :instruction integer_min} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction integer_min} {:close 1, :instruction integer_dup} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Lexicase best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_fromboolean exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_lte integer_max in4 integer_min tag_exec_129 () integer_eq integer_eq tag_exec_129 (integer_eq integer_stackdepth) integer_min integer_dup integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 51
Percent parens: 0.216
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 3, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_lte} {:close 2, :instruction integer_max} {:close 1, :instruction in4} {:close 2, :instruction integer_min} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 0, :instruction integer_min} {:close 1, :instruction integer_dup} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction tag_exec_883})
Zero cases best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_fromboolean exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_lte integer_max in4 integer_min tag_exec_129 () integer_eq integer_eq tag_exec_129 (integer_eq integer_stackdepth) integer_min integer_dup integer_max in1 integer_min print_integer boolean_invert_first_then_and tag_exec_883 ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 51
Percent parens: 0.216
--- Lexicase Population Statistics ---
Count of elite individuals by case: (721 796 721 676 795 296 687 675 795 688)
Population mean number of elite cases: 6.85
Count of perfect (error zero) individuals by case: (721 796 721 676 795 296 687 675 795 688)
Population mean number of perfect (error zero) cases: 6.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_do*count} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_add} {:close 0, :instruction exec_k} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_eq} {:close 1, :instruction in3} {:close 1, :instruction exec_while} {:close 1, :instruction integer_dec} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 1, :instruction tag_exec_129} {:close 0, :instruction integer_lt} {:close 1, :instruction integer_eq} {:close 0, :instruction tag_exec_129} {:close 0, :instruction integer_eq} {:close 2, :instruction integer_stackdepth} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 1, :instruction integer_max} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 2, :instruction integer_max} {:close 1, :instruction in4} {:close 2, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_sub})
Best program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 36
Size: 46
Percent parens: 0.217
--- Population Statistics ---
Average total errors in population: 3.15
Median total errors in population: 2
Error averages by case: (0.279 0.204 0.279 0.324 0.205 0.704 0.313 0.325 0.205 0.312)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 30.559
Average program size in population (points): 39.477
Average percent parens in population: 0.225
Minimum age in population: 138.5297100144913
Maximum age in population: 144.0780931874061
Average age in population: 142.0390230587201
Median age in population: 142.2595012626087
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 382
Genome diversity (% unique genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 398
Syntactic diversity (% unique Push programs):	 0.499
Total error diversity:				 0.011
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 16681031
--- Timings ---
Current time: 1559584177306 milliseconds
Total Time:         229.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.3 seconds, 83.0%
Fitness Testing:     23.3 seconds, 10.1%
Report:              15.7 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 95
Successful program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 46


Auto-simplifying with starting size: 46
step: 0
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 500
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 1000
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 1500
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 2000
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 2500
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 3000
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 3500
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 4000
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 4500
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

step: 5000
program: (integer_add exec_do*count (integer_mult) in2 exec_eq integer_gt exec_do*count (integer_mult integer_add exec_k (boolean_invert_first_then_and integer_eq in3) (exec_while () integer_dec) tag_exec_129 (integer_eq integer_eq) tag_exec_129 (tag_exec_129 () integer_lt integer_eq) tag_exec_129 (integer_eq integer_stackdepth)) integer_min integer_yank integer_max in1 integer_min integer_max in4 integer_min print_integer boolean_invert_first_then_and integer_sub)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 46

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 95
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -67                 | Program output: -67                
Correct output: -50                 | Program output: -50                
Correct output: -79                 | Program output: -79                
Correct output: -50                 | Program output: -50                
Correct output: -40                 | Program output: -40                
Correct output: 40                  | Program output: 40                 
Correct output: -95                 | Program output: -95                
Correct output: -77                 | Program output: -77                
Correct output: -16                 | Program output: -16                
Correct output: -24                 | Program output: -24                
Correct output: 67                  | Program output: 67                 
Correct output: -10                 | Program output: -10                
Correct output: 21                  | Program output: 21                 
Correct output: -9                  | Program output: -9                 
Correct output: -18                 | Program output: -18                
Correct output: 12                  | Program output: 12                 
Correct output: 2                   | Program output: 2                  
Correct output: 8                   | Program output: 8                  
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 23                  | Program output: 23                 
Correct output: 32                  | Program output: 32                 
Correct output: 29                  | Program output: 29                 
Correct output: 3                   | Program output: 3                  
Correct output: 11                  | Program output: 11                 
Correct output: 8                   | Program output: 8                  
Correct output: 4                   | Program output: 4                  
Correct output: 3                   | Program output: 3                  
Correct output: 29                  | Program output: 29                 
Correct output: 25                  | Program output: 25                 
Correct output: 15                  | Program output: 15                 
Correct output: 12                  | Program output: 12                 
Correct output: 21                  | Program output: 21                 
Correct output: 38                  | Program output: 38                 
Correct output: 7                   | Program output: 7                  
Correct output: -90                 | Program output: -90                
Correct output: 12                  | Program output: 12                 
Correct output: -94                 | Program output: -94                
Correct output: -24                 | Program output: -24                
Correct output: -100                | Program output: -100               
Correct output: -23                 | Program output: -23                
Correct output: -15                 | Program output: -15                
Correct output: -86                 | Program output: -86                
Correct output: -85                 | Program output: -85                
Correct output: -94                 | Program output: -94                
Correct output: -29                 | Program output: -29                
Correct output: -20                 | Program output: -20                
Correct output: -68                 | Program output: -68                
Correct output: -94                 | Program output: -94                
Correct output: 16                  | Program output: 16                 
Correct output: 5                   | Program output: 5                  
Correct output: 13                  | Program output: 13                 
Correct output: -49                 | Program output: -49                
Correct output: -44                 | Program output: -44                
Correct output: -52                 | Program output: -52                
Correct output: -85                 | Program output: -85                
Correct output: -58                 | Program output: -58                
Correct output: -22                 | Program output: -22                
Correct output: -97                 | Program output: -97                
Correct output: -83                 | Program output: -83                
Correct output: -60                 | Program output: -60                
Correct output: -5                  | Program output: -5                 
Correct output: -94                 | Program output: -94                
Correct output: -68                 | Program output: -68                
Correct output: -90                 | Program output: -90                
Correct output: -93                 | Program output: -93                
Correct output: -39                 | Program output: -39                
Correct output: -53                 | Program output: -53                
Correct output: -82                 | Program output: -82                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -53                 | Program output: -53                
Correct output: -44                 | Program output: -44                
Correct output: -92                 | Program output: -92                
Correct output: -94                 | Program output: -94                
Correct output: -88                 | Program output: -88                
Correct output: -57                 | Program output: -57                
Correct output: -29                 | Program output: -29                
Correct output: -60                 | Program output: -60                
Correct output: -80                 | Program output: -80                
Correct output: -92                 | Program output: -92                
Correct output: -74                 | Program output: -74                
Correct output: -76                 | Program output: -76                
Correct output: -80                 | Program output: -80                
Correct output: -94                 | Program output: -94                
Correct output: -33                 | Program output: -33                
Correct output: -59                 | Program output: -59                
Correct output: -73                 | Program output: -73                
Correct output: -76                 | Program output: -76                
Correct output: -86                 | Program output: -86                
Correct output: -96                 | Program output: -96                
Correct output: -60                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -44                 | Program output: -44                
Correct output: -74                 | Program output: -74                
;;******************************
