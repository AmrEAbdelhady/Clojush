Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 2000
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-9 -9 -43 -9] -43] [[3 -20 3 3] -20] [[-58 -65 -58 -58] -65] [[52 52 44 52] 44] [[34 34 -52 34] -52] [[7 61 61 61] 7] [[11 -13 11 11] -13] [[43 43 43 35] 35] [[-41 -36 -36 -36] -41] [[48 48 48 85] 48] [(64 64 64 64) 64] [(-23 -23 -23 -23) -23] [(-19 -19 -19 -19) -19] [(30 30 30 30) 30] [(-91 -91 -91 -91) -91] [(65 9 85 74) 9] [(10 22 86 72) 10] [(13 91 85 75) 13] [(21 54 63 37) 21] [(39 98 91 42) 39] [(44 51 24 57) 24] [(40 82 31 62) 31] [(2 43 85 6) 2] [(44 4 66 89) 4] [(20 88 66 43) 20] [(73 96 58 61) 58] [(97 23 73 25) 23] [(87 22 95 57) 22] [(5 28 29 46) 5] [(49 94 32 69) 32] [(63 48 3 99) 3] [(29 32 18 47) 18] [(11 12 10 28) 10] [(41 98 61 49) 41] [(64 37 52 60) 37] [(73 55 56 0) 0] [(16 93 -23 25) -23] [(-35 -90 -57 4) -90] [(76 52 24 -44) -44] [(73 31 15 84) 15] [(-62 -30 -19 6) -62] [(-27 75 48 -44) -44] [(22 -55 96 19) -55] [(-21 52 -70 -21) -70] [(-69 49 -89 -36) -89] [(7 44 -51 15) -51] [(-46 79 5 -69) -69] [(-99 -73 -28 9) -99] [(80 -29 -60 -96) -96] [(23 6 -74 69) -74] [(58 65 -31 26) -31] [(-60 -2 0 -71) -71] [(-49 -31 -80 -13) -80] [(-12 -52 -55 -96) -96] [(33 50 61 -57) -57] [(4 8 24 -63) -63] [(-90 -26 2 -83) -90] [(6 82 73 -56) -56] [(96 -25 -37 -53) -53] [(-60 -25 -9 -8) -60] [(23 -10 -94 -15) -94] [(94 -46 -78 -35) -78] [(-58 -32 81 72) -58] [(-15 -34 20 66) -34] [(-51 55 -69 74) -69] [(3 -30 54 -100) -100] [(-78 -64 -42 98) -78] [(99 -63 -56 -48) -63] [(-56 -87 -74 -11) -87] [(30 35 -64 91) -64] [(38 -39 95 57) -39] [(-25 -19 -69 61) -69] [(52 -2 -1 -29) -29] [(24 -92 14 -1) -92] [(-44 64 20 -17) -44] [(-83 -98 -22 83) -98] [(0 21 -32 47) -32] [(80 -31 68 27) -31] [(96 -7 54 -75) -75] [(72 -67 80 4) -67] [(-11 0 -57 -33) -57] [(94 79 82 -69) -69] [(-50 -26 -9 16) -50] [(22 -92 -64 87) -92] [(-92 -53 -81 -89) -92] [(32 51 -17 10) -17] [(-76 26 1 -94) -94] [(-24 -78 -79 -80) -80] [(-90 -43 -51 -18) -90] [(-14 74 40 -99) -99] [(75 -6 -43 -42) -43] [(99 -51 -43 31) -51] [(45 -86 54 90) -86] [(-25 -93 12 29) -93] [(66 6 -76 -1) -76])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-9 -9 -43 -9] -43]
Train Case:   6 | Input/Output: [[3 -20 3 3] -20]
Train Case:   7 | Input/Output: [[-58 -65 -58 -58] -65]
Train Case:   8 | Input/Output: [[52 52 44 52] 44]
Train Case:   9 | Input/Output: [[34 34 -52 34] -52]
Train Case:  10 | Input/Output: [[7 61 61 61] 7]
Train Case:  11 | Input/Output: [[11 -13 11 11] -13]
Train Case:  12 | Input/Output: [[43 43 43 35] 35]
Train Case:  13 | Input/Output: [[-41 -36 -36 -36] -41]
Train Case:  14 | Input/Output: [[48 48 48 85] 48]
Train Case:  15 | Input/Output: [(64 64 64 64) 64]
Train Case:  16 | Input/Output: [(-23 -23 -23 -23) -23]
Train Case:  17 | Input/Output: [(-19 -19 -19 -19) -19]
Train Case:  18 | Input/Output: [(30 30 30 30) 30]
Train Case:  19 | Input/Output: [(-91 -91 -91 -91) -91]
Train Case:  20 | Input/Output: [(65 9 85 74) 9]
Train Case:  21 | Input/Output: [(10 22 86 72) 10]
Train Case:  22 | Input/Output: [(13 91 85 75) 13]
Train Case:  23 | Input/Output: [(21 54 63 37) 21]
Train Case:  24 | Input/Output: [(39 98 91 42) 39]
Train Case:  25 | Input/Output: [(44 51 24 57) 24]
Train Case:  26 | Input/Output: [(40 82 31 62) 31]
Train Case:  27 | Input/Output: [(2 43 85 6) 2]
Train Case:  28 | Input/Output: [(44 4 66 89) 4]
Train Case:  29 | Input/Output: [(20 88 66 43) 20]
Train Case:  30 | Input/Output: [(73 96 58 61) 58]
Train Case:  31 | Input/Output: [(97 23 73 25) 23]
Train Case:  32 | Input/Output: [(87 22 95 57) 22]
Train Case:  33 | Input/Output: [(5 28 29 46) 5]
Train Case:  34 | Input/Output: [(49 94 32 69) 32]
Train Case:  35 | Input/Output: [(63 48 3 99) 3]
Train Case:  36 | Input/Output: [(29 32 18 47) 18]
Train Case:  37 | Input/Output: [(11 12 10 28) 10]
Train Case:  38 | Input/Output: [(41 98 61 49) 41]
Train Case:  39 | Input/Output: [(64 37 52 60) 37]
Train Case:  40 | Input/Output: [(73 55 56 0) 0]
Train Case:  41 | Input/Output: [(16 93 -23 25) -23]
Train Case:  42 | Input/Output: [(-35 -90 -57 4) -90]
Train Case:  43 | Input/Output: [(76 52 24 -44) -44]
Train Case:  44 | Input/Output: [(73 31 15 84) 15]
Train Case:  45 | Input/Output: [(-62 -30 -19 6) -62]
Train Case:  46 | Input/Output: [(-27 75 48 -44) -44]
Train Case:  47 | Input/Output: [(22 -55 96 19) -55]
Train Case:  48 | Input/Output: [(-21 52 -70 -21) -70]
Train Case:  49 | Input/Output: [(-69 49 -89 -36) -89]
Train Case:  50 | Input/Output: [(7 44 -51 15) -51]
Train Case:  51 | Input/Output: [(-46 79 5 -69) -69]
Train Case:  52 | Input/Output: [(-99 -73 -28 9) -99]
Train Case:  53 | Input/Output: [(80 -29 -60 -96) -96]
Train Case:  54 | Input/Output: [(23 6 -74 69) -74]
Train Case:  55 | Input/Output: [(58 65 -31 26) -31]
Train Case:  56 | Input/Output: [(-60 -2 0 -71) -71]
Train Case:  57 | Input/Output: [(-49 -31 -80 -13) -80]
Train Case:  58 | Input/Output: [(-12 -52 -55 -96) -96]
Train Case:  59 | Input/Output: [(33 50 61 -57) -57]
Train Case:  60 | Input/Output: [(4 8 24 -63) -63]
Train Case:  61 | Input/Output: [(-90 -26 2 -83) -90]
Train Case:  62 | Input/Output: [(6 82 73 -56) -56]
Train Case:  63 | Input/Output: [(96 -25 -37 -53) -53]
Train Case:  64 | Input/Output: [(-60 -25 -9 -8) -60]
Train Case:  65 | Input/Output: [(23 -10 -94 -15) -94]
Train Case:  66 | Input/Output: [(94 -46 -78 -35) -78]
Train Case:  67 | Input/Output: [(-58 -32 81 72) -58]
Train Case:  68 | Input/Output: [(-15 -34 20 66) -34]
Train Case:  69 | Input/Output: [(-51 55 -69 74) -69]
Train Case:  70 | Input/Output: [(3 -30 54 -100) -100]
Train Case:  71 | Input/Output: [(-78 -64 -42 98) -78]
Train Case:  72 | Input/Output: [(99 -63 -56 -48) -63]
Train Case:  73 | Input/Output: [(-56 -87 -74 -11) -87]
Train Case:  74 | Input/Output: [(30 35 -64 91) -64]
Train Case:  75 | Input/Output: [(38 -39 95 57) -39]
Train Case:  76 | Input/Output: [(-25 -19 -69 61) -69]
Train Case:  77 | Input/Output: [(52 -2 -1 -29) -29]
Train Case:  78 | Input/Output: [(24 -92 14 -1) -92]
Train Case:  79 | Input/Output: [(-44 64 20 -17) -44]
Train Case:  80 | Input/Output: [(-83 -98 -22 83) -98]
Train Case:  81 | Input/Output: [(0 21 -32 47) -32]
Train Case:  82 | Input/Output: [(80 -31 68 27) -31]
Train Case:  83 | Input/Output: [(96 -7 54 -75) -75]
Train Case:  84 | Input/Output: [(72 -67 80 4) -67]
Train Case:  85 | Input/Output: [(-11 0 -57 -33) -57]
Train Case:  86 | Input/Output: [(94 79 82 -69) -69]
Train Case:  87 | Input/Output: [(-50 -26 -9 16) -50]
Train Case:  88 | Input/Output: [(22 -92 -64 87) -92]
Train Case:  89 | Input/Output: [(-92 -53 -81 -89) -92]
Train Case:  90 | Input/Output: [(32 51 -17 10) -17]
Train Case:  91 | Input/Output: [(-76 26 1 -94) -94]
Train Case:  92 | Input/Output: [(-24 -78 -79 -80) -80]
Train Case:  93 | Input/Output: [(-90 -43 -51 -18) -90]
Train Case:  94 | Input/Output: [(-14 74 40 -99) -99]
Train Case:  95 | Input/Output: [(75 -6 -43 -42) -43]
Train Case:  96 | Input/Output: [(99 -51 -43 31) -51]
Train Case:  97 | Input/Output: [(45 -86 54 90) -86]
Train Case:  98 | Input/Output: [(-25 -93 12 29) -93]
Train Case:  99 | Input/Output: [(66 6 -76 -1) -76]
Test Case:   0 | Input/Output: [[2 36 2 2] 2]
Test Case:   1 | Input/Output: [[5 5 -93 5] -93]
Test Case:   2 | Input/Output: [[-71 -71 -87 -71] -87]
Test Case:   3 | Input/Output: [[41 41 41 -11] -11]
Test Case:   4 | Input/Output: [[31 31 100 31] 31]
Test Case:   5 | Input/Output: [[34 80 80 80] 34]
Test Case:   6 | Input/Output: [[92 92 92 19] 19]
Test Case:   7 | Input/Output: [[19 46 19 19] 19]
Test Case:   8 | Input/Output: [[-31 70 -31 -31] -31]
Test Case:   9 | Input/Output: [[-46 -46 71 -46] -46]
Test Case:  10 | Input/Output: [[-98 -98 45 -98] -98]
Test Case:  11 | Input/Output: [[-87 -21 -21 -21] -87]
Test Case:  12 | Input/Output: [[9 9 85 9] 9]
Test Case:  13 | Input/Output: [[72 72 68 72] 68]
Test Case:  14 | Input/Output: [[0 0 -93 0] -93]
Test Case:  15 | Input/Output: [[-35 -35 -35 92] -35]
Test Case:  16 | Input/Output: [[-55 -100 -100 -100] -100]
Test Case:  17 | Input/Output: [[61 -5 61 61] -5]
Test Case:  18 | Input/Output: [[-94 -94 45 -94] -94]
Test Case:  19 | Input/Output: [[77 77 77 -54] -54]
Test Case:  20 | Input/Output: [[54 -86 -86 -86] -86]
Test Case:  21 | Input/Output: [[-51 -51 -17 -51] -51]
Test Case:  22 | Input/Output: [[70 70 70 -6] -6]
Test Case:  23 | Input/Output: [[-69 -69 -44 -69] -69]
Test Case:  24 | Input/Output: [[-44 -46 -46 -46] -46]
Test Case:  25 | Input/Output: [[37 -57 -57 -57] -57]
Test Case:  26 | Input/Output: [[-79 44 -79 -79] -79]
Test Case:  27 | Input/Output: [[-56 62 -56 -56] -56]
Test Case:  28 | Input/Output: [[-32 -32 -82 -32] -82]
Test Case:  29 | Input/Output: [[89 89 89 22] 22]
Test Case:  30 | Input/Output: [[-35 91 91 91] -35]
Test Case:  31 | Input/Output: [[32 87 87 87] 32]
Test Case:  32 | Input/Output: [[-54 -49 -54 -54] -54]
Test Case:  33 | Input/Output: [[-36 -61 -36 -36] -61]
Test Case:  34 | Input/Output: [[-2 80 80 80] -2]
Test Case:  35 | Input/Output: [[4 4 -11 4] -11]
Test Case:  36 | Input/Output: [[-34 79 -34 -34] -34]
Test Case:  37 | Input/Output: [[36 45 45 45] 36]
Test Case:  38 | Input/Output: [[-22 -96 -96 -96] -96]
Test Case:  39 | Input/Output: [[59 35 59 59] 35]
Test Case:  40 | Input/Output: [[57 57 57 -73] -73]
Test Case:  41 | Input/Output: [[-82 99 99 99] -82]
Test Case:  42 | Input/Output: [[94 86 94 94] 86]
Test Case:  43 | Input/Output: [[17 50 17 17] 17]
Test Case:  44 | Input/Output: [[46 -91 -91 -91] -91]
Test Case:  45 | Input/Output: [[-11 -46 -46 -46] -46]
Test Case:  46 | Input/Output: [[86 86 86 36] 36]
Test Case:  47 | Input/Output: [[-84 -84 33 -84] -84]
Test Case:  48 | Input/Output: [[-32 17 -32 -32] -32]
Test Case:  49 | Input/Output: [[-50 -50 37 -50] -50]
Test Case:  50 | Input/Output: [[96 96 10 96] 10]
Test Case:  51 | Input/Output: [[29 23 23 23] 23]
Test Case:  52 | Input/Output: [[13 -48 13 13] -48]
Test Case:  53 | Input/Output: [[6 6 6 -8] -8]
Test Case:  54 | Input/Output: [[52 52 52 60] 52]
Test Case:  55 | Input/Output: [[2 10 10 10] 2]
Test Case:  56 | Input/Output: [[63 -80 63 63] -80]
Test Case:  57 | Input/Output: [[-37 -37 -37 52] -37]
Test Case:  58 | Input/Output: [[79 79 -51 79] -51]
Test Case:  59 | Input/Output: [[-52 -52 -46 -52] -52]
Test Case:  60 | Input/Output: [[-86 -86 -99 -86] -99]
Test Case:  61 | Input/Output: [[48 -34 -34 -34] -34]
Test Case:  62 | Input/Output: [[-56 -56 -57 -56] -57]
Test Case:  63 | Input/Output: [[-98 -35 -35 -35] -98]
Test Case:  64 | Input/Output: [[67 62 62 62] 62]
Test Case:  65 | Input/Output: [[53 69 69 69] 53]
Test Case:  66 | Input/Output: [[34 34 34 -59] -59]
Test Case:  67 | Input/Output: [[-86 -26 -86 -86] -86]
Test Case:  68 | Input/Output: [[-16 49 49 49] -16]
Test Case:  69 | Input/Output: [[50 -92 -92 -92] -92]
Test Case:  70 | Input/Output: [[27 -49 -49 -49] -49]
Test Case:  71 | Input/Output: [[-70 -15 -70 -70] -70]
Test Case:  72 | Input/Output: [[-14 13 13 13] -14]
Test Case:  73 | Input/Output: [[-18 36 36 36] -18]
Test Case:  74 | Input/Output: [[-77 -77 -77 -86] -86]
Test Case:  75 | Input/Output: [[-62 -62 -93 -62] -93]
Test Case:  76 | Input/Output: [[20 20 20 -21] -21]
Test Case:  77 | Input/Output: [[-6 -6 54 -6] -6]
Test Case:  78 | Input/Output: [[2 59 59 59] 2]
Test Case:  79 | Input/Output: [[-24 14 14 14] -24]
Test Case:  80 | Input/Output: [[-5 -5 -5 -26] -26]
Test Case:  81 | Input/Output: [[21 -92 -92 -92] -92]
Test Case:  82 | Input/Output: [[-69 24 -69 -69] -69]
Test Case:  83 | Input/Output: [[-92 -82 -92 -92] -92]
Test Case:  84 | Input/Output: [[-43 -35 -35 -35] -43]
Test Case:  85 | Input/Output: [[-70 86 86 86] -70]
Test Case:  86 | Input/Output: [[16 -19 16 16] -19]
Test Case:  87 | Input/Output: [[32 32 51 32] 32]
Test Case:  88 | Input/Output: [[75 75 75 -77] -77]
Test Case:  89 | Input/Output: [[-18 -18 -40 -18] -40]
Test Case:  90 | Input/Output: [[2 -8 2 2] -8]
Test Case:  91 | Input/Output: [[91 91 91 13] 13]
Test Case:  92 | Input/Output: [[-7 -7 -7 -54] -54]
Test Case:  93 | Input/Output: [[-80 -80 -57 -80] -80]
Test Case:  94 | Input/Output: [[88 -70 88 88] -70]
Test Case:  95 | Input/Output: [[54 54 54 60] 54]
Test Case:  96 | Input/Output: [[19 46 19 19] 19]
Test Case:  97 | Input/Output: [[-14 76 76 76] -14]
Test Case:  98 | Input/Output: [[26 26 26 -57] -57]
Test Case:  99 | Input/Output: [[-14 -14 98 -14] -14]
Test Case: 100 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 101 | Input/Output: [(61 61 61 61) 61]
Test Case: 102 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 103 | Input/Output: [(55 55 55 55) 55]
Test Case: 104 | Input/Output: [(77 77 77 77) 77]
Test Case: 105 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 106 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 107 | Input/Output: [(31 31 31 31) 31]
Test Case: 108 | Input/Output: [(56 56 56 56) 56]
Test Case: 109 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 110 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 111 | Input/Output: [(-80 -80 -80 -80) -80]
Test Case: 112 | Input/Output: [(17 17 17 17) 17]
Test Case: 113 | Input/Output: [(-91 -91 -91 -91) -91]
Test Case: 114 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 115 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 116 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 117 | Input/Output: [(78 78 78 78) 78]
Test Case: 118 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 119 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 120 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 121 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 122 | Input/Output: [(99 99 99 99) 99]
Test Case: 123 | Input/Output: [(91 91 91 91) 91]
Test Case: 124 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 125 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 126 | Input/Output: [(69 69 69 69) 69]
Test Case: 127 | Input/Output: [(17 17 17 17) 17]
Test Case: 128 | Input/Output: [(70 70 70 70) 70]
Test Case: 129 | Input/Output: [(36 36 36 36) 36]
Test Case: 130 | Input/Output: [(26 26 26 26) 26]
Test Case: 131 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 132 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 133 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 134 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 135 | Input/Output: [(99 99 99 99) 99]
Test Case: 136 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 137 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 138 | Input/Output: [(19 19 19 19) 19]
Test Case: 139 | Input/Output: [(-49 -49 -49 -49) -49]
Test Case: 140 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 141 | Input/Output: [(30 30 30 30) 30]
Test Case: 142 | Input/Output: [(16 16 16 16) 16]
Test Case: 143 | Input/Output: [(26 26 26 26) 26]
Test Case: 144 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 145 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 146 | Input/Output: [(46 46 46 46) 46]
Test Case: 147 | Input/Output: [(-98 -98 -98 -98) -98]
Test Case: 148 | Input/Output: [(25 25 25 25) 25]
Test Case: 149 | Input/Output: [(-18 -18 -18 -18) -18]
Test Case: 150 | Input/Output: [(59 59 59 59) 59]
Test Case: 151 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 152 | Input/Output: [(-28 -28 -28 -28) -28]
Test Case: 153 | Input/Output: [(73 73 73 73) 73]
Test Case: 154 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 155 | Input/Output: [(36 36 36 36) 36]
Test Case: 156 | Input/Output: [(72 72 72 72) 72]
Test Case: 157 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 158 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 159 | Input/Output: [(80 80 80 80) 80]
Test Case: 160 | Input/Output: [(94 94 94 94) 94]
Test Case: 161 | Input/Output: [(72 72 72 72) 72]
Test Case: 162 | Input/Output: [(82 82 82 82) 82]
Test Case: 163 | Input/Output: [(21 21 21 21) 21]
Test Case: 164 | Input/Output: [(87 87 87 87) 87]
Test Case: 165 | Input/Output: [(53 53 53 53) 53]
Test Case: 166 | Input/Output: [(84 84 84 84) 84]
Test Case: 167 | Input/Output: [(30 30 30 30) 30]
Test Case: 168 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 169 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 170 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 171 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 172 | Input/Output: [(40 40 40 40) 40]
Test Case: 173 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 174 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 175 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 176 | Input/Output: [(71 71 71 71) 71]
Test Case: 177 | Input/Output: [(59 59 59 59) 59]
Test Case: 178 | Input/Output: [(79 79 79 79) 79]
Test Case: 179 | Input/Output: [(21 21 21 21) 21]
Test Case: 180 | Input/Output: [(17 17 17 17) 17]
Test Case: 181 | Input/Output: [(-54 -54 -54 -54) -54]
Test Case: 182 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 183 | Input/Output: [(63 63 63 63) 63]
Test Case: 184 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 185 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 186 | Input/Output: [(26 26 26 26) 26]
Test Case: 187 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 188 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 189 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 190 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 191 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 192 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 193 | Input/Output: [(5 5 5 5) 5]
Test Case: 194 | Input/Output: [(39 39 39 39) 39]
Test Case: 195 | Input/Output: [(-78 -78 -78 -78) -78]
Test Case: 196 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 197 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 198 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 199 | Input/Output: [(76 76 76 76) 76]
Test Case: 200 | Input/Output: [(8 2 6 16) 2]
Test Case: 201 | Input/Output: [(18 41 91 39) 18]
Test Case: 202 | Input/Output: [(100 14 16 79) 14]
Test Case: 203 | Input/Output: [(71 100 70 94) 70]
Test Case: 204 | Input/Output: [(49 45 97 55) 45]
Test Case: 205 | Input/Output: [(16 22 55 38) 16]
Test Case: 206 | Input/Output: [(61 21 58 20) 20]
Test Case: 207 | Input/Output: [(98 18 44 80) 18]
Test Case: 208 | Input/Output: [(44 30 26 34) 26]
Test Case: 209 | Input/Output: [(72 6 84 72) 6]
Test Case: 210 | Input/Output: [(16 72 20 73) 16]
Test Case: 211 | Input/Output: [(69 31 70 82) 31]
Test Case: 212 | Input/Output: [(90 67 34 70) 34]
Test Case: 213 | Input/Output: [(87 97 30 96) 30]
Test Case: 214 | Input/Output: [(32 82 43 42) 32]
Test Case: 215 | Input/Output: [(37 27 83 73) 27]
Test Case: 216 | Input/Output: [(97 14 46 34) 14]
Test Case: 217 | Input/Output: [(87 26 90 73) 26]
Test Case: 218 | Input/Output: [(12 84 97 91) 12]
Test Case: 219 | Input/Output: [(16 77 34 37) 16]
Test Case: 220 | Input/Output: [(91 21 95 89) 21]
Test Case: 221 | Input/Output: [(71 14 87 7) 7]
Test Case: 222 | Input/Output: [(71 28 94 10) 10]
Test Case: 223 | Input/Output: [(1 48 95 10) 1]
Test Case: 224 | Input/Output: [(84 87 10 54) 10]
Test Case: 225 | Input/Output: [(96 21 79 0) 0]
Test Case: 226 | Input/Output: [(91 16 35 34) 16]
Test Case: 227 | Input/Output: [(85 27 71 43) 27]
Test Case: 228 | Input/Output: [(49 82 48 77) 48]
Test Case: 229 | Input/Output: [(90 3 35 39) 3]
Test Case: 230 | Input/Output: [(92 88 57 36) 36]
Test Case: 231 | Input/Output: [(52 10 36 65) 10]
Test Case: 232 | Input/Output: [(25 51 85 11) 11]
Test Case: 233 | Input/Output: [(81 26 15 95) 15]
Test Case: 234 | Input/Output: [(55 69 25 24) 24]
Test Case: 235 | Input/Output: [(96 46 3 26) 3]
Test Case: 236 | Input/Output: [(58 73 15 11) 11]
Test Case: 237 | Input/Output: [(33 53 55 10) 10]
Test Case: 238 | Input/Output: [(64 13 100 34) 13]
Test Case: 239 | Input/Output: [(52 84 39 20) 20]
Test Case: 240 | Input/Output: [(2 66 25 68) 2]
Test Case: 241 | Input/Output: [(53 92 67 25) 25]
Test Case: 242 | Input/Output: [(72 90 84 75) 72]
Test Case: 243 | Input/Output: [(97 49 64 21) 21]
Test Case: 244 | Input/Output: [(65 12 94 9) 9]
Test Case: 245 | Input/Output: [(8 59 76 44) 8]
Test Case: 246 | Input/Output: [(45 17 15 64) 15]
Test Case: 247 | Input/Output: [(96 11 53 81) 11]
Test Case: 248 | Input/Output: [(87 91 36 23) 23]
Test Case: 249 | Input/Output: [(97 67 10 73) 10]
Test Case: 250 | Input/Output: [(44 92 37 50) 37]
Test Case: 251 | Input/Output: [(18 38 46 14) 14]
Test Case: 252 | Input/Output: [(86 73 38 61) 38]
Test Case: 253 | Input/Output: [(56 62 81 15) 15]
Test Case: 254 | Input/Output: [(94 16 4 85) 4]
Test Case: 255 | Input/Output: [(100 56 68 13) 13]
Test Case: 256 | Input/Output: [(4 64 12 28) 4]
Test Case: 257 | Input/Output: [(70 18 7 44) 7]
Test Case: 258 | Input/Output: [(47 42 20 63) 20]
Test Case: 259 | Input/Output: [(63 7 0 52) 0]
Test Case: 260 | Input/Output: [(17 7 20 98) 7]
Test Case: 261 | Input/Output: [(49 3 52 89) 3]
Test Case: 262 | Input/Output: [(73 87 94 19) 19]
Test Case: 263 | Input/Output: [(34 72 61 41) 34]
Test Case: 264 | Input/Output: [(25 17 86 62) 17]
Test Case: 265 | Input/Output: [(100 35 27 63) 27]
Test Case: 266 | Input/Output: [(36 55 37 69) 36]
Test Case: 267 | Input/Output: [(92 94 31 28) 28]
Test Case: 268 | Input/Output: [(34 95 52 68) 34]
Test Case: 269 | Input/Output: [(32 69 97 1) 1]
Test Case: 270 | Input/Output: [(33 96 7 98) 7]
Test Case: 271 | Input/Output: [(49 48 53 75) 48]
Test Case: 272 | Input/Output: [(86 70 54 91) 54]
Test Case: 273 | Input/Output: [(43 9 41 88) 9]
Test Case: 274 | Input/Output: [(69 6 18 13) 6]
Test Case: 275 | Input/Output: [(67 82 17 78) 17]
Test Case: 276 | Input/Output: [(67 59 1 68) 1]
Test Case: 277 | Input/Output: [(43 86 11 67) 11]
Test Case: 278 | Input/Output: [(60 51 30 82) 30]
Test Case: 279 | Input/Output: [(81 62 13 80) 13]
Test Case: 280 | Input/Output: [(68 69 76 39) 39]
Test Case: 281 | Input/Output: [(57 26 5 39) 5]
Test Case: 282 | Input/Output: [(8 49 8 17) 8]
Test Case: 283 | Input/Output: [(37 18 91 51) 18]
Test Case: 284 | Input/Output: [(48 57 35 76) 35]
Test Case: 285 | Input/Output: [(3 60 28 16) 3]
Test Case: 286 | Input/Output: [(68 11 31 56) 11]
Test Case: 287 | Input/Output: [(68 58 44 53) 44]
Test Case: 288 | Input/Output: [(12 63 91 34) 12]
Test Case: 289 | Input/Output: [(21 68 59 65) 21]
Test Case: 290 | Input/Output: [(46 0 22 89) 0]
Test Case: 291 | Input/Output: [(2 73 41 59) 2]
Test Case: 292 | Input/Output: [(37 10 45 81) 10]
Test Case: 293 | Input/Output: [(33 27 52 11) 11]
Test Case: 294 | Input/Output: [(92 17 49 41) 17]
Test Case: 295 | Input/Output: [(32 84 16 10) 10]
Test Case: 296 | Input/Output: [(64 3 47 42) 3]
Test Case: 297 | Input/Output: [(45 4 94 80) 4]
Test Case: 298 | Input/Output: [(37 62 42 44) 37]
Test Case: 299 | Input/Output: [(41 20 24 30) 20]
Test Case: 300 | Input/Output: [(42 22 60 69) 22]
Test Case: 301 | Input/Output: [(42 45 16 8) 8]
Test Case: 302 | Input/Output: [(30 10 75 45) 10]
Test Case: 303 | Input/Output: [(34 83 42 8) 8]
Test Case: 304 | Input/Output: [(43 98 80 24) 24]
Test Case: 305 | Input/Output: [(78 100 20 24) 20]
Test Case: 306 | Input/Output: [(67 22 13 52) 13]
Test Case: 307 | Input/Output: [(96 87 97 73) 73]
Test Case: 308 | Input/Output: [(90 87 86 49) 49]
Test Case: 309 | Input/Output: [(95 63 83 15) 15]
Test Case: 310 | Input/Output: [(3 69 39 2) 2]
Test Case: 311 | Input/Output: [(24 5 50 15) 5]
Test Case: 312 | Input/Output: [(30 76 93 68) 30]
Test Case: 313 | Input/Output: [(7 56 76 37) 7]
Test Case: 314 | Input/Output: [(96 67 33 47) 33]
Test Case: 315 | Input/Output: [(86 11 28 76) 11]
Test Case: 316 | Input/Output: [(62 63 83 65) 62]
Test Case: 317 | Input/Output: [(65 80 76 48) 48]
Test Case: 318 | Input/Output: [(19 72 66 60) 19]
Test Case: 319 | Input/Output: [(95 8 39 98) 8]
Test Case: 320 | Input/Output: [(80 91 11 8) 8]
Test Case: 321 | Input/Output: [(71 97 59 86) 59]
Test Case: 322 | Input/Output: [(94 95 25 40) 25]
Test Case: 323 | Input/Output: [(41 2 62 13) 2]
Test Case: 324 | Input/Output: [(68 13 94 33) 13]
Test Case: 325 | Input/Output: [(79 91 28 73) 28]
Test Case: 326 | Input/Output: [(97 72 24 57) 24]
Test Case: 327 | Input/Output: [(95 19 50 21) 19]
Test Case: 328 | Input/Output: [(49 43 84 54) 43]
Test Case: 329 | Input/Output: [(57 31 87 98) 31]
Test Case: 330 | Input/Output: [(37 47 27 66) 27]
Test Case: 331 | Input/Output: [(6 5 99 77) 5]
Test Case: 332 | Input/Output: [(5 11 32 37) 5]
Test Case: 333 | Input/Output: [(28 82 59 75) 28]
Test Case: 334 | Input/Output: [(42 54 6 39) 6]
Test Case: 335 | Input/Output: [(46 14 19 35) 14]
Test Case: 336 | Input/Output: [(98 67 96 44) 44]
Test Case: 337 | Input/Output: [(98 99 83 64) 64]
Test Case: 338 | Input/Output: [(29 47 58 96) 29]
Test Case: 339 | Input/Output: [(65 35 63 30) 30]
Test Case: 340 | Input/Output: [(50 37 84 86) 37]
Test Case: 341 | Input/Output: [(20 37 97 81) 20]
Test Case: 342 | Input/Output: [(4 12 35 92) 4]
Test Case: 343 | Input/Output: [(71 28 41 72) 28]
Test Case: 344 | Input/Output: [(79 79 45 83) 45]
Test Case: 345 | Input/Output: [(46 37 95 22) 22]
Test Case: 346 | Input/Output: [(2 82 28 98) 2]
Test Case: 347 | Input/Output: [(43 21 68 1) 1]
Test Case: 348 | Input/Output: [(63 63 75 33) 33]
Test Case: 349 | Input/Output: [(44 78 75 55) 44]
Test Case: 350 | Input/Output: [(99 43 77 73) 43]
Test Case: 351 | Input/Output: [(99 54 91 62) 54]
Test Case: 352 | Input/Output: [(51 65 13 66) 13]
Test Case: 353 | Input/Output: [(29 3 99 27) 3]
Test Case: 354 | Input/Output: [(17 60 10 77) 10]
Test Case: 355 | Input/Output: [(27 52 72 98) 27]
Test Case: 356 | Input/Output: [(96 7 23 79) 7]
Test Case: 357 | Input/Output: [(56 79 18 37) 18]
Test Case: 358 | Input/Output: [(100 100 98 8) 8]
Test Case: 359 | Input/Output: [(94 65 63 58) 58]
Test Case: 360 | Input/Output: [(76 55 30 47) 30]
Test Case: 361 | Input/Output: [(24 21 24 87) 21]
Test Case: 362 | Input/Output: [(7 89 42 84) 7]
Test Case: 363 | Input/Output: [(12 97 13 10) 10]
Test Case: 364 | Input/Output: [(33 69 65 8) 8]
Test Case: 365 | Input/Output: [(52 97 26 52) 26]
Test Case: 366 | Input/Output: [(26 40 12 41) 12]
Test Case: 367 | Input/Output: [(8 72 50 43) 8]
Test Case: 368 | Input/Output: [(30 35 21 31) 21]
Test Case: 369 | Input/Output: [(32 41 69 38) 32]
Test Case: 370 | Input/Output: [(13 59 69 35) 13]
Test Case: 371 | Input/Output: [(54 2 85 8) 2]
Test Case: 372 | Input/Output: [(19 35 83 17) 17]
Test Case: 373 | Input/Output: [(92 51 81 51) 51]
Test Case: 374 | Input/Output: [(48 97 56 22) 22]
Test Case: 375 | Input/Output: [(67 38 78 64) 38]
Test Case: 376 | Input/Output: [(14 43 69 9) 9]
Test Case: 377 | Input/Output: [(56 11 15 24) 11]
Test Case: 378 | Input/Output: [(11 18 97 78) 11]
Test Case: 379 | Input/Output: [(2 67 43 43) 2]
Test Case: 380 | Input/Output: [(28 89 40 90) 28]
Test Case: 381 | Input/Output: [(41 73 38 80) 38]
Test Case: 382 | Input/Output: [(79 69 80 20) 20]
Test Case: 383 | Input/Output: [(97 90 47 38) 38]
Test Case: 384 | Input/Output: [(21 64 43 91) 21]
Test Case: 385 | Input/Output: [(57 22 76 25) 22]
Test Case: 386 | Input/Output: [(39 17 62 19) 17]
Test Case: 387 | Input/Output: [(9 88 66 32) 9]
Test Case: 388 | Input/Output: [(100 16 60 9) 9]
Test Case: 389 | Input/Output: [(5 56 87 23) 5]
Test Case: 390 | Input/Output: [(80 58 14 97) 14]
Test Case: 391 | Input/Output: [(81 13 67 69) 13]
Test Case: 392 | Input/Output: [(97 46 1 61) 1]
Test Case: 393 | Input/Output: [(90 62 41 56) 41]
Test Case: 394 | Input/Output: [(74 2 30 94) 2]
Test Case: 395 | Input/Output: [(86 73 62 21) 21]
Test Case: 396 | Input/Output: [(10 34 87 61) 10]
Test Case: 397 | Input/Output: [(17 20 75 76) 17]
Test Case: 398 | Input/Output: [(27 28 77 14) 14]
Test Case: 399 | Input/Output: [(98 96 84 65) 65]
Test Case: 400 | Input/Output: [(68 -17 77 94) -17]
Test Case: 401 | Input/Output: [(-70 45 -1 66) -70]
Test Case: 402 | Input/Output: [(84 -8 -59 -14) -59]
Test Case: 403 | Input/Output: [(-68 4 -25 -25) -68]
Test Case: 404 | Input/Output: [(24 -94 -14 67) -94]
Test Case: 405 | Input/Output: [(-25 44 8 -23) -25]
Test Case: 406 | Input/Output: [(52 -61 79 56) -61]
Test Case: 407 | Input/Output: [(49 -43 -55 97) -55]
Test Case: 408 | Input/Output: [(56 -16 -8 78) -16]
Test Case: 409 | Input/Output: [(-40 -81 -59 79) -81]
Test Case: 410 | Input/Output: [(92 7 70 81) 7]
Test Case: 411 | Input/Output: [(-14 94 36 48) -14]
Test Case: 412 | Input/Output: [(-50 65 77 14) -50]
Test Case: 413 | Input/Output: [(60 30 -44 -47) -47]
Test Case: 414 | Input/Output: [(84 -15 9 19) -15]
Test Case: 415 | Input/Output: [(28 0 96 93) 0]
Test Case: 416 | Input/Output: [(26 -41 22 42) -41]
Test Case: 417 | Input/Output: [(-6 -71 21 -48) -71]
Test Case: 418 | Input/Output: [(-31 -71 -82 -57) -82]
Test Case: 419 | Input/Output: [(-22 -48 -54 83) -54]
Test Case: 420 | Input/Output: [(-95 53 28 57) -95]
Test Case: 421 | Input/Output: [(33 -25 29 36) -25]
Test Case: 422 | Input/Output: [(-84 83 38 33) -84]
Test Case: 423 | Input/Output: [(15 -5 3 -99) -99]
Test Case: 424 | Input/Output: [(-45 -35 62 64) -45]
Test Case: 425 | Input/Output: [(-38 -18 2 -61) -61]
Test Case: 426 | Input/Output: [(-14 70 -63 -7) -63]
Test Case: 427 | Input/Output: [(-85 -96 61 5) -96]
Test Case: 428 | Input/Output: [(68 67 -94 9) -94]
Test Case: 429 | Input/Output: [(44 -95 -46 46) -95]
Test Case: 430 | Input/Output: [(87 -65 -37 25) -65]
Test Case: 431 | Input/Output: [(-65 3 16 -69) -69]
Test Case: 432 | Input/Output: [(-78 3 -92 -47) -92]
Test Case: 433 | Input/Output: [(97 -3 100 -13) -13]
Test Case: 434 | Input/Output: [(-27 68 -78 99) -78]
Test Case: 435 | Input/Output: [(91 81 50 -98) -98]
Test Case: 436 | Input/Output: [(-52 71 -40 -29) -52]
Test Case: 437 | Input/Output: [(-80 58 75 1) -80]
Test Case: 438 | Input/Output: [(-92 -95 76 24) -95]
Test Case: 439 | Input/Output: [(-97 35 70 -9) -97]
Test Case: 440 | Input/Output: [(23 22 86 -27) -27]
Test Case: 441 | Input/Output: [(39 -76 27 -30) -76]
Test Case: 442 | Input/Output: [(-16 -6 19 -29) -29]
Test Case: 443 | Input/Output: [(63 77 59 70) 59]
Test Case: 444 | Input/Output: [(-87 80 88 -6) -87]
Test Case: 445 | Input/Output: [(-8 -59 36 -85) -85]
Test Case: 446 | Input/Output: [(-1 -75 21 -22) -75]
Test Case: 447 | Input/Output: [(34 -1 38 -37) -37]
Test Case: 448 | Input/Output: [(88 7 -95 -78) -95]
Test Case: 449 | Input/Output: [(-84 -74 13 -90) -90]
Test Case: 450 | Input/Output: [(-31 -9 -32 -21) -32]
Test Case: 451 | Input/Output: [(99 -40 -23 -51) -51]
Test Case: 452 | Input/Output: [(-3 42 41 -29) -29]
Test Case: 453 | Input/Output: [(67 77 90 -74) -74]
Test Case: 454 | Input/Output: [(-63 -45 -83 17) -83]
Test Case: 455 | Input/Output: [(-53 35 -75 24) -75]
Test Case: 456 | Input/Output: [(78 -45 -87 20) -87]
Test Case: 457 | Input/Output: [(-18 62 -10 -31) -31]
Test Case: 458 | Input/Output: [(51 -41 83 -31) -41]
Test Case: 459 | Input/Output: [(-76 -8 -11 -67) -76]
Test Case: 460 | Input/Output: [(-37 -82 -15 -97) -97]
Test Case: 461 | Input/Output: [(61 -5 55 -37) -37]
Test Case: 462 | Input/Output: [(-77 -65 70 24) -77]
Test Case: 463 | Input/Output: [(73 -73 -63 34) -73]
Test Case: 464 | Input/Output: [(78 -10 4 -70) -70]
Test Case: 465 | Input/Output: [(-64 -17 71 -66) -66]
Test Case: 466 | Input/Output: [(-94 -79 15 -71) -94]
Test Case: 467 | Input/Output: [(-10 62 8 66) -10]
Test Case: 468 | Input/Output: [(4 89 30 82) 4]
Test Case: 469 | Input/Output: [(99 -28 -58 -69) -69]
Test Case: 470 | Input/Output: [(-35 92 15 42) -35]
Test Case: 471 | Input/Output: [(-44 -24 -85 -12) -85]
Test Case: 472 | Input/Output: [(-9 -84 14 48) -84]
Test Case: 473 | Input/Output: [(45 -46 12 27) -46]
Test Case: 474 | Input/Output: [(11 65 -52 -14) -52]
Test Case: 475 | Input/Output: [(40 17 57 6) 6]
Test Case: 476 | Input/Output: [(21 9 -15 -78) -78]
Test Case: 477 | Input/Output: [(-51 51 -89 82) -89]
Test Case: 478 | Input/Output: [(22 1 63 -67) -67]
Test Case: 479 | Input/Output: [(67 29 -54 52) -54]
Test Case: 480 | Input/Output: [(54 67 -5 57) -5]
Test Case: 481 | Input/Output: [(-74 -96 21 82) -96]
Test Case: 482 | Input/Output: [(94 73 59 -1) -1]
Test Case: 483 | Input/Output: [(76 99 -63 -4) -63]
Test Case: 484 | Input/Output: [(91 39 0 -37) -37]
Test Case: 485 | Input/Output: [(-49 7 -74 -100) -100]
Test Case: 486 | Input/Output: [(-66 32 93 -64) -66]
Test Case: 487 | Input/Output: [(-58 16 -30 -47) -58]
Test Case: 488 | Input/Output: [(59 -67 32 -61) -67]
Test Case: 489 | Input/Output: [(-44 53 -6 9) -44]
Test Case: 490 | Input/Output: [(-35 14 34 -36) -36]
Test Case: 491 | Input/Output: [(99 -98 -70 3) -98]
Test Case: 492 | Input/Output: [(-44 61 -48 6) -48]
Test Case: 493 | Input/Output: [(36 58 62 87) 36]
Test Case: 494 | Input/Output: [(54 -46 43 -88) -88]
Test Case: 495 | Input/Output: [(-86 -78 -5 -15) -86]
Test Case: 496 | Input/Output: [(48 -93 0 23) -93]
Test Case: 497 | Input/Output: [(86 15 17 -7) -7]
Test Case: 498 | Input/Output: [(-17 -27 -7 -30) -30]
Test Case: 499 | Input/Output: [(63 -61 -4 61) -61]
Test Case: 500 | Input/Output: [(21 -79 -24 87) -79]
Test Case: 501 | Input/Output: [(-89 -5 -2 61) -89]
Test Case: 502 | Input/Output: [(34 -97 99 -17) -97]
Test Case: 503 | Input/Output: [(-16 4 -62 -68) -68]
Test Case: 504 | Input/Output: [(-13 -40 20 -48) -48]
Test Case: 505 | Input/Output: [(23 88 -26 25) -26]
Test Case: 506 | Input/Output: [(74 68 71 -98) -98]
Test Case: 507 | Input/Output: [(-72 83 6 -78) -78]
Test Case: 508 | Input/Output: [(-100 -83 93 -46) -100]
Test Case: 509 | Input/Output: [(-26 99 -36 -1) -36]
Test Case: 510 | Input/Output: [(-17 57 51 -82) -82]
Test Case: 511 | Input/Output: [(-20 -17 82 94) -20]
Test Case: 512 | Input/Output: [(-28 94 9 -92) -92]
Test Case: 513 | Input/Output: [(-31 24 9 -25) -31]
Test Case: 514 | Input/Output: [(93 -16 28 33) -16]
Test Case: 515 | Input/Output: [(-35 -88 -72 40) -88]
Test Case: 516 | Input/Output: [(21 -17 35 -42) -42]
Test Case: 517 | Input/Output: [(-67 54 46 -100) -100]
Test Case: 518 | Input/Output: [(-20 64 -57 -85) -85]
Test Case: 519 | Input/Output: [(0 22 56 97) 0]
Test Case: 520 | Input/Output: [(-90 62 -7 30) -90]
Test Case: 521 | Input/Output: [(58 -42 -83 8) -83]
Test Case: 522 | Input/Output: [(87 -15 85 -26) -26]
Test Case: 523 | Input/Output: [(-71 65 -25 -29) -71]
Test Case: 524 | Input/Output: [(98 -77 72 -13) -77]
Test Case: 525 | Input/Output: [(-10 91 -29 7) -29]
Test Case: 526 | Input/Output: [(45 -20 -67 9) -67]
Test Case: 527 | Input/Output: [(81 28 83 24) 24]
Test Case: 528 | Input/Output: [(-23 80 -4 -18) -23]
Test Case: 529 | Input/Output: [(30 23 -47 7) -47]
Test Case: 530 | Input/Output: [(-5 30 78 99) -5]
Test Case: 531 | Input/Output: [(5 60 58 25) 5]
Test Case: 532 | Input/Output: [(-27 -100 73 20) -100]
Test Case: 533 | Input/Output: [(63 74 59 -95) -95]
Test Case: 534 | Input/Output: [(14 -42 -90 77) -90]
Test Case: 535 | Input/Output: [(-84 85 -4 74) -84]
Test Case: 536 | Input/Output: [(-4 -34 -1 -26) -34]
Test Case: 537 | Input/Output: [(97 41 -91 -43) -91]
Test Case: 538 | Input/Output: [(-64 -21 10 -90) -90]
Test Case: 539 | Input/Output: [(-19 -12 61 -48) -48]
Test Case: 540 | Input/Output: [(54 -87 86 -81) -87]
Test Case: 541 | Input/Output: [(-2 40 -79 -49) -79]
Test Case: 542 | Input/Output: [(67 -19 11 -16) -19]
Test Case: 543 | Input/Output: [(91 -45 -47 39) -47]
Test Case: 544 | Input/Output: [(-68 -7 99 -79) -79]
Test Case: 545 | Input/Output: [(7 -13 -77 -43) -77]
Test Case: 546 | Input/Output: [(-40 -42 14 -44) -44]
Test Case: 547 | Input/Output: [(26 94 76 -34) -34]
Test Case: 548 | Input/Output: [(-100 -83 26 -51) -100]
Test Case: 549 | Input/Output: [(-64 -17 -32 39) -64]
Test Case: 550 | Input/Output: [(38 60 -39 68) -39]
Test Case: 551 | Input/Output: [(9 -30 -86 -1) -86]
Test Case: 552 | Input/Output: [(-67 37 4 -3) -67]
Test Case: 553 | Input/Output: [(-75 -7 90 -2) -75]
Test Case: 554 | Input/Output: [(60 -79 27 -20) -79]
Test Case: 555 | Input/Output: [(56 71 -4 31) -4]
Test Case: 556 | Input/Output: [(-82 64 -17 -98) -98]
Test Case: 557 | Input/Output: [(60 80 -13 -72) -72]
Test Case: 558 | Input/Output: [(73 -4 -59 -1) -59]
Test Case: 559 | Input/Output: [(5 44 91 12) 5]
Test Case: 560 | Input/Output: [(6 45 100 35) 6]
Test Case: 561 | Input/Output: [(-11 36 -91 -99) -99]
Test Case: 562 | Input/Output: [(64 47 38 -19) -19]
Test Case: 563 | Input/Output: [(29 -71 91 94) -71]
Test Case: 564 | Input/Output: [(11 -29 51 -60) -60]
Test Case: 565 | Input/Output: [(38 -56 -65 -60) -65]
Test Case: 566 | Input/Output: [(82 15 -26 -93) -93]
Test Case: 567 | Input/Output: [(8 -41 51 40) -41]
Test Case: 568 | Input/Output: [(13 34 -66 19) -66]
Test Case: 569 | Input/Output: [(80 2 11 72) 2]
Test Case: 570 | Input/Output: [(-96 89 -26 10) -96]
Test Case: 571 | Input/Output: [(-22 58 36 15) -22]
Test Case: 572 | Input/Output: [(-18 76 29 -73) -73]
Test Case: 573 | Input/Output: [(13 -50 48 92) -50]
Test Case: 574 | Input/Output: [(36 -28 -56 -40) -56]
Test Case: 575 | Input/Output: [(86 -73 99 58) -73]
Test Case: 576 | Input/Output: [(65 84 76 7) 7]
Test Case: 577 | Input/Output: [(59 -83 93 17) -83]
Test Case: 578 | Input/Output: [(-16 -48 76 -41) -48]
Test Case: 579 | Input/Output: [(51 -56 77 0) -56]
Test Case: 580 | Input/Output: [(8 -21 5 92) -21]
Test Case: 581 | Input/Output: [(9 -91 -23 56) -91]
Test Case: 582 | Input/Output: [(-63 -65 64 -9) -65]
Test Case: 583 | Input/Output: [(-12 85 -94 -15) -94]
Test Case: 584 | Input/Output: [(-64 -82 -89 38) -89]
Test Case: 585 | Input/Output: [(-49 59 19 37) -49]
Test Case: 586 | Input/Output: [(40 8 95 90) 8]
Test Case: 587 | Input/Output: [(89 82 -7 0) -7]
Test Case: 588 | Input/Output: [(-79 8 41 93) -79]
Test Case: 589 | Input/Output: [(26 -87 71 76) -87]
Test Case: 590 | Input/Output: [(99 15 92 50) 15]
Test Case: 591 | Input/Output: [(-24 -42 -44 -21) -44]
Test Case: 592 | Input/Output: [(-16 -80 -56 -100) -100]
Test Case: 593 | Input/Output: [(-23 -2 -25 -60) -60]
Test Case: 594 | Input/Output: [(58 70 -89 -48) -89]
Test Case: 595 | Input/Output: [(52 -18 96 28) -18]
Test Case: 596 | Input/Output: [(66 13 14 -91) -91]
Test Case: 597 | Input/Output: [(-86 51 44 -100) -100]
Test Case: 598 | Input/Output: [(-55 -71 -30 98) -71]
Test Case: 599 | Input/Output: [(19 -42 -56 74) -56]
Test Case: 600 | Input/Output: [(5 7 -77 47) -77]
Test Case: 601 | Input/Output: [(-78 64 -28 -62) -78]
Test Case: 602 | Input/Output: [(74 -39 20 -40) -40]
Test Case: 603 | Input/Output: [(-93 8 71 -9) -93]
Test Case: 604 | Input/Output: [(18 62 60 -13) -13]
Test Case: 605 | Input/Output: [(-40 -44 -39 -28) -44]
Test Case: 606 | Input/Output: [(48 78 10 34) 10]
Test Case: 607 | Input/Output: [(-1 78 40 -7) -7]
Test Case: 608 | Input/Output: [(90 -9 -18 -23) -23]
Test Case: 609 | Input/Output: [(-45 89 29 29) -45]
Test Case: 610 | Input/Output: [(-3 -88 -59 63) -88]
Test Case: 611 | Input/Output: [(-18 -63 -13 -9) -63]
Test Case: 612 | Input/Output: [(80 -13 -9 -50) -50]
Test Case: 613 | Input/Output: [(-42 -91 88 17) -91]
Test Case: 614 | Input/Output: [(96 21 46 -61) -61]
Test Case: 615 | Input/Output: [(-19 71 -87 56) -87]
Test Case: 616 | Input/Output: [(32 -87 54 -46) -87]
Test Case: 617 | Input/Output: [(58 96 85 -59) -59]
Test Case: 618 | Input/Output: [(47 39 -83 -64) -83]
Test Case: 619 | Input/Output: [(-100 40 84 45) -100]
Test Case: 620 | Input/Output: [(72 -71 -42 -42) -71]
Test Case: 621 | Input/Output: [(69 26 71 75) 26]
Test Case: 622 | Input/Output: [(27 -44 90 -53) -53]
Test Case: 623 | Input/Output: [(76 -52 49 21) -52]
Test Case: 624 | Input/Output: [(-19 17 66 -32) -32]
Test Case: 625 | Input/Output: [(67 -25 53 9) -25]
Test Case: 626 | Input/Output: [(-24 33 44 -68) -68]
Test Case: 627 | Input/Output: [(-44 -81 93 -96) -96]
Test Case: 628 | Input/Output: [(37 57 40 -58) -58]
Test Case: 629 | Input/Output: [(-62 61 -18 76) -62]
Test Case: 630 | Input/Output: [(51 -38 57 -26) -38]
Test Case: 631 | Input/Output: [(-70 -62 -40 64) -70]
Test Case: 632 | Input/Output: [(20 -54 -69 95) -69]
Test Case: 633 | Input/Output: [(-82 100 -65 -94) -94]
Test Case: 634 | Input/Output: [(96 30 71 68) 30]
Test Case: 635 | Input/Output: [(-99 -41 30 -15) -99]
Test Case: 636 | Input/Output: [(-62 28 5 -22) -62]
Test Case: 637 | Input/Output: [(65 14 34 50) 14]
Test Case: 638 | Input/Output: [(97 -6 -46 -26) -46]
Test Case: 639 | Input/Output: [(68 -42 49 11) -42]
Test Case: 640 | Input/Output: [(94 -92 73 87) -92]
Test Case: 641 | Input/Output: [(15 -52 69 -58) -58]
Test Case: 642 | Input/Output: [(-15 -75 -56 36) -75]
Test Case: 643 | Input/Output: [(7 -61 -50 -90) -90]
Test Case: 644 | Input/Output: [(-35 84 3 -62) -62]
Test Case: 645 | Input/Output: [(48 -73 96 -7) -73]
Test Case: 646 | Input/Output: [(38 -24 60 40) -24]
Test Case: 647 | Input/Output: [(9 -23 -7 -17) -23]
Test Case: 648 | Input/Output: [(-17 -73 -5 100) -73]
Test Case: 649 | Input/Output: [(-93 -68 90 -96) -96]
Test Case: 650 | Input/Output: [(19 -67 33 -69) -69]
Test Case: 651 | Input/Output: [(38 71 52 16) 16]
Test Case: 652 | Input/Output: [(-25 -46 -10 70) -46]
Test Case: 653 | Input/Output: [(-78 47 -74 4) -78]
Test Case: 654 | Input/Output: [(-16 -19 50 92) -19]
Test Case: 655 | Input/Output: [(45 -15 22 -57) -57]
Test Case: 656 | Input/Output: [(-98 -1 80 -39) -98]
Test Case: 657 | Input/Output: [(2 4 -14 92) -14]
Test Case: 658 | Input/Output: [(-33 -25 76 -86) -86]
Test Case: 659 | Input/Output: [(51 75 -12 97) -12]
Test Case: 660 | Input/Output: [(-52 10 57 -54) -54]
Test Case: 661 | Input/Output: [(-46 95 -29 40) -46]
Test Case: 662 | Input/Output: [(-25 -45 -81 33) -81]
Test Case: 663 | Input/Output: [(-67 18 67 93) -67]
Test Case: 664 | Input/Output: [(1 37 78 48) 1]
Test Case: 665 | Input/Output: [(99 67 -62 60) -62]
Test Case: 666 | Input/Output: [(-67 63 -31 72) -67]
Test Case: 667 | Input/Output: [(-84 26 -23 -67) -84]
Test Case: 668 | Input/Output: [(28 88 -53 53) -53]
Test Case: 669 | Input/Output: [(99 -95 21 -55) -95]
Test Case: 670 | Input/Output: [(81 54 78 -16) -16]
Test Case: 671 | Input/Output: [(84 -34 59 70) -34]
Test Case: 672 | Input/Output: [(-27 27 -78 69) -78]
Test Case: 673 | Input/Output: [(-14 60 -91 78) -91]
Test Case: 674 | Input/Output: [(-52 -61 -72 91) -72]
Test Case: 675 | Input/Output: [(-68 26 -73 36) -73]
Test Case: 676 | Input/Output: [(-63 -9 -94 -43) -94]
Test Case: 677 | Input/Output: [(-75 -70 -34 -8) -75]
Test Case: 678 | Input/Output: [(18 -85 -32 -93) -93]
Test Case: 679 | Input/Output: [(-31 -100 95 -26) -100]
Test Case: 680 | Input/Output: [(-30 -42 -77 -45) -77]
Test Case: 681 | Input/Output: [(25 -11 15 6) -11]
Test Case: 682 | Input/Output: [(-88 -89 43 63) -89]
Test Case: 683 | Input/Output: [(-68 -17 16 -10) -68]
Test Case: 684 | Input/Output: [(81 13 -61 -35) -61]
Test Case: 685 | Input/Output: [(-94 -8 -27 -65) -94]
Test Case: 686 | Input/Output: [(42 -79 -26 86) -79]
Test Case: 687 | Input/Output: [(-55 -62 50 58) -62]
Test Case: 688 | Input/Output: [(54 -85 2 -11) -85]
Test Case: 689 | Input/Output: [(-8 -54 -76 -85) -85]
Test Case: 690 | Input/Output: [(-48 78 84 98) -48]
Test Case: 691 | Input/Output: [(-36 -88 -81 -16) -88]
Test Case: 692 | Input/Output: [(-90 -86 23 -65) -90]
Test Case: 693 | Input/Output: [(-12 -99 37 56) -99]
Test Case: 694 | Input/Output: [(93 -46 -71 -6) -71]
Test Case: 695 | Input/Output: [(3 -39 13 42) -39]
Test Case: 696 | Input/Output: [(-59 -92 -10 53) -92]
Test Case: 697 | Input/Output: [(-23 -24 -61 -61) -61]
Test Case: 698 | Input/Output: [(57 39 4 -19) -19]
Test Case: 699 | Input/Output: [(-27 10 -85 60) -85]
Test Case: 700 | Input/Output: [(-32 -60 16 -25) -60]
Test Case: 701 | Input/Output: [(95 89 -59 11) -59]
Test Case: 702 | Input/Output: [(44 -68 62 55) -68]
Test Case: 703 | Input/Output: [(-7 -31 -90 82) -90]
Test Case: 704 | Input/Output: [(30 -51 -36 88) -51]
Test Case: 705 | Input/Output: [(-47 65 67 -71) -71]
Test Case: 706 | Input/Output: [(18 -34 12 -65) -65]
Test Case: 707 | Input/Output: [(-1 -38 -57 92) -57]
Test Case: 708 | Input/Output: [(82 36 34 8) 8]
Test Case: 709 | Input/Output: [(-30 -42 90 -94) -94]
Test Case: 710 | Input/Output: [(-17 85 -15 -49) -49]
Test Case: 711 | Input/Output: [(37 -23 -14 97) -23]
Test Case: 712 | Input/Output: [(-28 4 -62 -1) -62]
Test Case: 713 | Input/Output: [(86 97 -75 20) -75]
Test Case: 714 | Input/Output: [(-45 10 70 76) -45]
Test Case: 715 | Input/Output: [(-79 16 84 63) -79]
Test Case: 716 | Input/Output: [(65 -57 -25 87) -57]
Test Case: 717 | Input/Output: [(-98 9 46 -89) -98]
Test Case: 718 | Input/Output: [(89 72 -70 50) -70]
Test Case: 719 | Input/Output: [(-99 -62 43 51) -99]
Test Case: 720 | Input/Output: [(-20 77 -81 -24) -81]
Test Case: 721 | Input/Output: [(-72 -4 16 41) -72]
Test Case: 722 | Input/Output: [(12 2 29 13) 2]
Test Case: 723 | Input/Output: [(20 -62 78 75) -62]
Test Case: 724 | Input/Output: [(-9 99 -30 77) -30]
Test Case: 725 | Input/Output: [(-6 71 -55 29) -55]
Test Case: 726 | Input/Output: [(8 -27 -80 -22) -80]
Test Case: 727 | Input/Output: [(-31 46 -35 38) -35]
Test Case: 728 | Input/Output: [(1 -66 -10 -42) -66]
Test Case: 729 | Input/Output: [(53 31 56 -10) -10]
Test Case: 730 | Input/Output: [(-84 -34 18 70) -84]
Test Case: 731 | Input/Output: [(60 -1 13 35) -1]
Test Case: 732 | Input/Output: [(-58 -78 -95 -50) -95]
Test Case: 733 | Input/Output: [(-57 37 -14 -78) -78]
Test Case: 734 | Input/Output: [(-61 21 -65 -65) -65]
Test Case: 735 | Input/Output: [(-8 -16 -4 -86) -86]
Test Case: 736 | Input/Output: [(86 12 -75 -79) -79]
Test Case: 737 | Input/Output: [(-86 70 -36 -18) -86]
Test Case: 738 | Input/Output: [(-22 -99 -87 25) -99]
Test Case: 739 | Input/Output: [(23 -3 82 -18) -18]
Test Case: 740 | Input/Output: [(27 84 55 -77) -77]
Test Case: 741 | Input/Output: [(-14 -54 -69 12) -69]
Test Case: 742 | Input/Output: [(-47 21 -20 20) -47]
Test Case: 743 | Input/Output: [(94 -52 -22 -49) -52]
Test Case: 744 | Input/Output: [(15 72 -44 32) -44]
Test Case: 745 | Input/Output: [(-15 -51 53 33) -51]
Test Case: 746 | Input/Output: [(-19 -68 -26 -7) -68]
Test Case: 747 | Input/Output: [(41 79 69 89) 41]
Test Case: 748 | Input/Output: [(5 43 22 70) 5]
Test Case: 749 | Input/Output: [(-62 47 62 -33) -62]
Test Case: 750 | Input/Output: [(9 -50 -7 57) -50]
Test Case: 751 | Input/Output: [(-45 -42 -51 -66) -66]
Test Case: 752 | Input/Output: [(52 63 -81 86) -81]
Test Case: 753 | Input/Output: [(72 74 29 -15) -15]
Test Case: 754 | Input/Output: [(22 -36 -78 14) -78]
Test Case: 755 | Input/Output: [(31 -31 92 -98) -98]
Test Case: 756 | Input/Output: [(53 67 -76 82) -76]
Test Case: 757 | Input/Output: [(23 -41 -75 64) -75]
Test Case: 758 | Input/Output: [(23 -33 25 -13) -33]
Test Case: 759 | Input/Output: [(-37 30 -41 10) -41]
Test Case: 760 | Input/Output: [(-88 36 3 -97) -97]
Test Case: 761 | Input/Output: [(-90 -38 -33 36) -90]
Test Case: 762 | Input/Output: [(-65 -4 -9 45) -65]
Test Case: 763 | Input/Output: [(-57 56 -61 96) -61]
Test Case: 764 | Input/Output: [(-12 -78 79 -93) -93]
Test Case: 765 | Input/Output: [(12 -64 -46 -97) -97]
Test Case: 766 | Input/Output: [(-41 82 25 98) -41]
Test Case: 767 | Input/Output: [(-29 -23 51 -85) -85]
Test Case: 768 | Input/Output: [(-45 18 -14 51) -45]
Test Case: 769 | Input/Output: [(75 -90 64 -83) -90]
Test Case: 770 | Input/Output: [(-73 19 92 17) -73]
Test Case: 771 | Input/Output: [(-14 -25 -94 -46) -94]
Test Case: 772 | Input/Output: [(-35 -79 41 -75) -79]
Test Case: 773 | Input/Output: [(-40 -50 -15 59) -50]
Test Case: 774 | Input/Output: [(2 -76 -2 66) -76]
Test Case: 775 | Input/Output: [(46 80 92 93) 46]
Test Case: 776 | Input/Output: [(-98 -84 -51 -25) -98]
Test Case: 777 | Input/Output: [(-24 98 -89 27) -89]
Test Case: 778 | Input/Output: [(-65 3 -20 1) -65]
Test Case: 779 | Input/Output: [(-42 40 -82 62) -82]
Test Case: 780 | Input/Output: [(-62 -70 -40 18) -70]
Test Case: 781 | Input/Output: [(35 -65 35 79) -65]
Test Case: 782 | Input/Output: [(7 56 89 -14) -14]
Test Case: 783 | Input/Output: [(87 11 4 -53) -53]
Test Case: 784 | Input/Output: [(-2 74 -78 38) -78]
Test Case: 785 | Input/Output: [(-41 98 -84 70) -84]
Test Case: 786 | Input/Output: [(-41 -77 43 -68) -77]
Test Case: 787 | Input/Output: [(49 46 64 -82) -82]
Test Case: 788 | Input/Output: [(-57 45 -71 -15) -71]
Test Case: 789 | Input/Output: [(55 -62 -70 -34) -70]
Test Case: 790 | Input/Output: [(8 -2 -46 29) -46]
Test Case: 791 | Input/Output: [(-81 99 45 62) -81]
Test Case: 792 | Input/Output: [(-97 52 -87 56) -97]
Test Case: 793 | Input/Output: [(-76 45 -28 68) -76]
Test Case: 794 | Input/Output: [(76 24 54 -25) -25]
Test Case: 795 | Input/Output: [(22 3 13 88) 3]
Test Case: 796 | Input/Output: [(-41 28 -93 -64) -93]
Test Case: 797 | Input/Output: [(-25 84 19 -72) -72]
Test Case: 798 | Input/Output: [(-66 -99 26 -21) -99]
Test Case: 799 | Input/Output: [(93 78 63 -3) -3]
Test Case: 800 | Input/Output: [(-20 44 29 76) -20]
Test Case: 801 | Input/Output: [(53 -6 90 2) -6]
Test Case: 802 | Input/Output: [(-84 -60 -99 46) -99]
Test Case: 803 | Input/Output: [(4 22 -93 10) -93]
Test Case: 804 | Input/Output: [(73 -25 -27 -75) -75]
Test Case: 805 | Input/Output: [(11 24 50 -64) -64]
Test Case: 806 | Input/Output: [(-68 90 -97 88) -97]
Test Case: 807 | Input/Output: [(-47 95 -83 55) -83]
Test Case: 808 | Input/Output: [(-8 56 -48 -95) -95]
Test Case: 809 | Input/Output: [(86 -68 -5 2) -68]
Test Case: 810 | Input/Output: [(83 24 69 -49) -49]
Test Case: 811 | Input/Output: [(-11 18 -58 86) -58]
Test Case: 812 | Input/Output: [(-68 -100 20 -50) -100]
Test Case: 813 | Input/Output: [(48 -75 97 -58) -75]
Test Case: 814 | Input/Output: [(57 70 63 79) 57]
Test Case: 815 | Input/Output: [(-7 -56 38 -53) -56]
Test Case: 816 | Input/Output: [(85 -55 65 12) -55]
Test Case: 817 | Input/Output: [(-48 62 90 -98) -98]
Test Case: 818 | Input/Output: [(81 -46 -44 90) -46]
Test Case: 819 | Input/Output: [(50 -100 -11 33) -100]
Test Case: 820 | Input/Output: [(12 -57 21 17) -57]
Test Case: 821 | Input/Output: [(-78 -15 30 -19) -78]
Test Case: 822 | Input/Output: [(3 73 99 -32) -32]
Test Case: 823 | Input/Output: [(19 -53 -86 49) -86]
Test Case: 824 | Input/Output: [(-68 -21 -53 8) -68]
Test Case: 825 | Input/Output: [(-69 -33 -1 48) -69]
Test Case: 826 | Input/Output: [(-49 -50 12 -34) -50]
Test Case: 827 | Input/Output: [(-100 73 -68 -89) -100]
Test Case: 828 | Input/Output: [(-10 22 -91 -47) -91]
Test Case: 829 | Input/Output: [(68 2 -58 55) -58]
Test Case: 830 | Input/Output: [(0 -30 -94 91) -94]
Test Case: 831 | Input/Output: [(-16 -95 79 13) -95]
Test Case: 832 | Input/Output: [(-84 28 71 -1) -84]
Test Case: 833 | Input/Output: [(-92 -30 13 0) -92]
Test Case: 834 | Input/Output: [(3 83 -27 42) -27]
Test Case: 835 | Input/Output: [(-45 64 15 -89) -89]
Test Case: 836 | Input/Output: [(71 -87 44 -100) -100]
Test Case: 837 | Input/Output: [(6 23 -56 44) -56]
Test Case: 838 | Input/Output: [(-51 40 5 -2) -51]
Test Case: 839 | Input/Output: [(1 -88 -99 -99) -99]
Test Case: 840 | Input/Output: [(73 -2 75 -95) -95]
Test Case: 841 | Input/Output: [(-8 59 45 71) -8]
Test Case: 842 | Input/Output: [(-85 35 22 47) -85]
Test Case: 843 | Input/Output: [(64 65 98 17) 17]
Test Case: 844 | Input/Output: [(13 62 16 -16) -16]
Test Case: 845 | Input/Output: [(-57 -98 -22 17) -98]
Test Case: 846 | Input/Output: [(-52 95 -64 33) -64]
Test Case: 847 | Input/Output: [(-33 54 91 13) -33]
Test Case: 848 | Input/Output: [(50 -63 53 100) -63]
Test Case: 849 | Input/Output: [(-15 -37 -7 10) -37]
Test Case: 850 | Input/Output: [(59 73 -41 61) -41]
Test Case: 851 | Input/Output: [(-35 -6 -32 -65) -65]
Test Case: 852 | Input/Output: [(48 42 -66 72) -66]
Test Case: 853 | Input/Output: [(49 -20 81 -19) -20]
Test Case: 854 | Input/Output: [(38 92 -78 99) -78]
Test Case: 855 | Input/Output: [(-58 10 -23 -28) -58]
Test Case: 856 | Input/Output: [(4 -90 -26 -47) -90]
Test Case: 857 | Input/Output: [(15 -99 -92 32) -99]
Test Case: 858 | Input/Output: [(73 -29 -63 90) -63]
Test Case: 859 | Input/Output: [(56 7 84 -30) -30]
Test Case: 860 | Input/Output: [(-27 78 -21 73) -27]
Test Case: 861 | Input/Output: [(20 82 -12 -74) -74]
Test Case: 862 | Input/Output: [(-59 95 -33 -33) -59]
Test Case: 863 | Input/Output: [(-73 -32 58 -39) -73]
Test Case: 864 | Input/Output: [(-79 23 -36 -57) -79]
Test Case: 865 | Input/Output: [(41 49 35 97) 35]
Test Case: 866 | Input/Output: [(67 100 -90 73) -90]
Test Case: 867 | Input/Output: [(53 73 -62 -49) -62]
Test Case: 868 | Input/Output: [(2 89 91 68) 2]
Test Case: 869 | Input/Output: [(43 -9 64 33) -9]
Test Case: 870 | Input/Output: [(46 -31 20 48) -31]
Test Case: 871 | Input/Output: [(54 -46 96 -89) -89]
Test Case: 872 | Input/Output: [(45 25 49 56) 25]
Test Case: 873 | Input/Output: [(97 53 6 -32) -32]
Test Case: 874 | Input/Output: [(-62 -86 100 71) -86]
Test Case: 875 | Input/Output: [(-46 42 47 -34) -46]
Test Case: 876 | Input/Output: [(24 -13 -96 -66) -96]
Test Case: 877 | Input/Output: [(-35 -62 57 0) -62]
Test Case: 878 | Input/Output: [(69 -40 -63 -51) -63]
Test Case: 879 | Input/Output: [(-56 16 -9 13) -56]
Test Case: 880 | Input/Output: [(-38 -59 -25 82) -59]
Test Case: 881 | Input/Output: [(2 98 14 54) 2]
Test Case: 882 | Input/Output: [(22 -63 -80 -91) -91]
Test Case: 883 | Input/Output: [(59 -34 -90 -67) -90]
Test Case: 884 | Input/Output: [(37 -31 44 -33) -33]
Test Case: 885 | Input/Output: [(11 48 -4 -54) -54]
Test Case: 886 | Input/Output: [(-94 15 -18 29) -94]
Test Case: 887 | Input/Output: [(-58 -84 -84 -12) -84]
Test Case: 888 | Input/Output: [(-98 43 -70 59) -98]
Test Case: 889 | Input/Output: [(28 -94 -57 -21) -94]
Test Case: 890 | Input/Output: [(15 -64 40 49) -64]
Test Case: 891 | Input/Output: [(-12 18 -59 -53) -59]
Test Case: 892 | Input/Output: [(-27 -67 38 41) -67]
Test Case: 893 | Input/Output: [(60 85 12 21) 12]
Test Case: 894 | Input/Output: [(37 -56 100 66) -56]
Test Case: 895 | Input/Output: [(55 29 -45 33) -45]
Test Case: 896 | Input/Output: [(71 54 87 18) 18]
Test Case: 897 | Input/Output: [(13 -87 -93 93) -93]
Test Case: 898 | Input/Output: [(74 51 78 -51) -51]
Test Case: 899 | Input/Output: [(92 -35 -3 73) -35]
Test Case: 900 | Input/Output: [(-49 91 68 -71) -71]
Test Case: 901 | Input/Output: [(46 -31 -26 32) -31]
Test Case: 902 | Input/Output: [(90 -93 -77 75) -93]
Test Case: 903 | Input/Output: [(-62 0 -75 40) -75]
Test Case: 904 | Input/Output: [(27 35 -73 5) -73]
Test Case: 905 | Input/Output: [(-80 36 32 -41) -80]
Test Case: 906 | Input/Output: [(-37 55 -11 26) -37]
Test Case: 907 | Input/Output: [(-73 81 83 -67) -73]
Test Case: 908 | Input/Output: [(43 16 46 -31) -31]
Test Case: 909 | Input/Output: [(82 -70 14 72) -70]
Test Case: 910 | Input/Output: [(-53 -21 -92 -49) -92]
Test Case: 911 | Input/Output: [(-61 -56 42 -93) -93]
Test Case: 912 | Input/Output: [(-31 39 -100 87) -100]
Test Case: 913 | Input/Output: [(60 26 15 36) 15]
Test Case: 914 | Input/Output: [(44 -49 -87 40) -87]
Test Case: 915 | Input/Output: [(42 40 -20 -48) -48]
Test Case: 916 | Input/Output: [(-34 -23 46 -29) -34]
Test Case: 917 | Input/Output: [(52 -71 80 56) -71]
Test Case: 918 | Input/Output: [(53 -93 -33 85) -93]
Test Case: 919 | Input/Output: [(-44 -33 19 -41) -44]
Test Case: 920 | Input/Output: [(93 96 98 -90) -90]
Test Case: 921 | Input/Output: [(50 42 12 -19) -19]
Test Case: 922 | Input/Output: [(68 63 88 -86) -86]
Test Case: 923 | Input/Output: [(74 97 30 80) 30]
Test Case: 924 | Input/Output: [(-82 93 78 77) -82]
Test Case: 925 | Input/Output: [(-69 -11 -16 92) -69]
Test Case: 926 | Input/Output: [(86 -93 46 6) -93]
Test Case: 927 | Input/Output: [(2 51 35 1) 1]
Test Case: 928 | Input/Output: [(-41 -66 75 -59) -66]
Test Case: 929 | Input/Output: [(36 -8 4 2) -8]
Test Case: 930 | Input/Output: [(55 1 6 -6) -6]
Test Case: 931 | Input/Output: [(-76 -1 96 47) -76]
Test Case: 932 | Input/Output: [(-79 -80 1 -23) -80]
Test Case: 933 | Input/Output: [(3 -38 -35 6) -38]
Test Case: 934 | Input/Output: [(-54 4 -70 34) -70]
Test Case: 935 | Input/Output: [(-46 92 89 -81) -81]
Test Case: 936 | Input/Output: [(-33 28 88 -46) -46]
Test Case: 937 | Input/Output: [(-55 32 23 -56) -56]
Test Case: 938 | Input/Output: [(94 -18 16 -11) -18]
Test Case: 939 | Input/Output: [(-58 -72 -79 45) -79]
Test Case: 940 | Input/Output: [(86 -82 -76 -100) -100]
Test Case: 941 | Input/Output: [(11 0 82 -55) -55]
Test Case: 942 | Input/Output: [(-98 73 -49 -1) -98]
Test Case: 943 | Input/Output: [(13 -27 -43 -84) -84]
Test Case: 944 | Input/Output: [(9 27 33 51) 9]
Test Case: 945 | Input/Output: [(-49 -35 0 -58) -58]
Test Case: 946 | Input/Output: [(35 -10 51 37) -10]
Test Case: 947 | Input/Output: [(68 42 98 -11) -11]
Test Case: 948 | Input/Output: [(87 3 -95 -12) -95]
Test Case: 949 | Input/Output: [(-88 -72 -44 35) -88]
Test Case: 950 | Input/Output: [(-41 83 -8 -51) -51]
Test Case: 951 | Input/Output: [(41 47 24 19) 19]
Test Case: 952 | Input/Output: [(27 -44 25 4) -44]
Test Case: 953 | Input/Output: [(67 -69 -14 -40) -69]
Test Case: 954 | Input/Output: [(-60 -81 -4 -88) -88]
Test Case: 955 | Input/Output: [(-50 -73 -86 86) -86]
Test Case: 956 | Input/Output: [(48 20 7 80) 7]
Test Case: 957 | Input/Output: [(52 91 -66 14) -66]
Test Case: 958 | Input/Output: [(-24 -23 7 65) -24]
Test Case: 959 | Input/Output: [(-61 34 -100 -99) -100]
Test Case: 960 | Input/Output: [(95 -28 -75 71) -75]
Test Case: 961 | Input/Output: [(17 -43 -93 -75) -93]
Test Case: 962 | Input/Output: [(-67 -56 33 98) -67]
Test Case: 963 | Input/Output: [(39 30 79 -97) -97]
Test Case: 964 | Input/Output: [(60 12 66 -25) -25]
Test Case: 965 | Input/Output: [(96 -40 -64 -15) -64]
Test Case: 966 | Input/Output: [(-55 -87 27 49) -87]
Test Case: 967 | Input/Output: [(-7 -30 21 50) -30]
Test Case: 968 | Input/Output: [(-27 -32 -85 -39) -85]
Test Case: 969 | Input/Output: [(-87 -91 -68 37) -91]
Test Case: 970 | Input/Output: [(96 -99 -29 -94) -99]
Test Case: 971 | Input/Output: [(20 -12 80 86) -12]
Test Case: 972 | Input/Output: [(-78 38 68 86) -78]
Test Case: 973 | Input/Output: [(-33 -69 47 -17) -69]
Test Case: 974 | Input/Output: [(26 -20 -29 55) -29]
Test Case: 975 | Input/Output: [(32 70 78 70) 32]
Test Case: 976 | Input/Output: [(-34 -88 -85 56) -88]
Test Case: 977 | Input/Output: [(79 97 84 -72) -72]
Test Case: 978 | Input/Output: [(28 71 -59 -96) -96]
Test Case: 979 | Input/Output: [(82 31 89 44) 31]
Test Case: 980 | Input/Output: [(65 4 -88 80) -88]
Test Case: 981 | Input/Output: [(55 31 -81 -51) -81]
Test Case: 982 | Input/Output: [(-27 59 62 -44) -44]
Test Case: 983 | Input/Output: [(-64 25 63 -92) -92]
Test Case: 984 | Input/Output: [(88 -87 -47 21) -87]
Test Case: 985 | Input/Output: [(79 -92 -66 -50) -92]
Test Case: 986 | Input/Output: [(28 7 29 -36) -36]
Test Case: 987 | Input/Output: [(40 -43 -94 29) -94]
Test Case: 988 | Input/Output: [(-28 -33 66 -38) -38]
Test Case: 989 | Input/Output: [(-72 -81 -76 -28) -81]
Test Case: 990 | Input/Output: [(55 -46 38 -2) -46]
Test Case: 991 | Input/Output: [(9 22 -19 74) -19]
Test Case: 992 | Input/Output: [(65 -73 45 -53) -73]
Test Case: 993 | Input/Output: [(-44 -21 -58 -93) -93]
Test Case: 994 | Input/Output: [(-27 -4 -76 28) -76]
Test Case: 995 | Input/Output: [(-82 89 90 -6) -82]
Test Case: 996 | Input/Output: [(-61 89 0 -81) -81]
Test Case: 997 | Input/Output: [(-39 78 -94 -18) -94]
Test Case: 998 | Input/Output: [(32 -77 91 86) -77]
Test Case: 999 | Input/Output: [(-24 -97 84 26) -97]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = -107 -64 -125 81 80 50 -33 -73 -85 98 -116 -76 95 -68 -62 45
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-9 -9 -43 -9] -43] [[3 -20 3 3] -20] [[-58 -65 -58 -58] -65] [[52 52 44 52] 44] [[34 34 -52 34] -52] [[7 61 61 61] 7] [[11 -13 11 11] -13] [[43 43 43 35] 35] [[-41 -36 -36 -36] -41] [[48 48 48 85] 48] [(64 64 64 64) 64] [(-23 -23 -23 -23) -23] [(-19 -19 -19 -19) -19] [(30 30 30 30) 30] [(-91 -91 -91 -91) -91] [(65 9 85 74) 9] [(10 22 86 72) 10] [(13 91 85 75) 13] [(21 54 63 37) 21] [(39 98 91 42) 39] [(44 51 24 57) 24] [(40 82 31 62) 31] [(2 43 85 6) 2] [(44 4 66 89) 4] [(20 88 66 43) 20] [(73 96 58 61) 58] [(97 23 73 25) 23] [(87 22 95 57) 22] [(5 28 29 46) 5] [(49 94 32 69) 32] [(63 48 3 99) 3] [(29 32 18 47) 18] [(11 12 10 28) 10] [(41 98 61 49) 41] [(64 37 52 60) 37] [(73 55 56 0) 0] [(16 93 -23 25) -23] [(-35 -90 -57 4) -90] [(76 52 24 -44) -44] [(73 31 15 84) 15] [(-62 -30 -19 6) -62] [(-27 75 48 -44) -44] [(22 -55 96 19) -55] [(-21 52 -70 -21) -70] [(-69 49 -89 -36) -89] [(7 44 -51 15) -51] [(-46 79 5 -69) -69] [(-99 -73 -28 9) -99] [(80 -29 -60 -96) -96] [(23 6 -74 69) -74] [(58 65 -31 26) -31] [(-60 -2 0 -71) -71] [(-49 -31 -80 -13) -80] [(-12 -52 -55 -96) -96] [(33 50 61 -57) -57] [(4 8 24 -63) -63] [(-90 -26 2 -83) -90] [(6 82 73 -56) -56] [(96 -25 -37 -53) -53] [(-60 -25 -9 -8) -60] [(23 -10 -94 -15) -94] [(94 -46 -78 -35) -78] [(-58 -32 81 72) -58] [(-15 -34 20 66) -34] [(-51 55 -69 74) -69] [(3 -30 54 -100) -100] [(-78 -64 -42 98) -78] [(99 -63 -56 -48) -63] [(-56 -87 -74 -11) -87] [(30 35 -64 91) -64] [(38 -39 95 57) -39] [(-25 -19 -69 61) -69] [(52 -2 -1 -29) -29] [(24 -92 14 -1) -92] [(-44 64 20 -17) -44] [(-83 -98 -22 83) -98] [(0 21 -32 47) -32] [(80 -31 68 27) -31] [(96 -7 54 -75) -75] [(72 -67 80 4) -67] [(-11 0 -57 -33) -57] [(94 79 82 -69) -69] [(-50 -26 -9 16) -50] [(22 -92 -64 87) -92] [(-92 -53 -81 -89) -92] [(32 51 -17 10) -17] [(-76 26 1 -94) -94] [(-24 -78 -79 -80) -80] [(-90 -43 -51 -18) -90] [(-14 74 40 -99) -99] [(75 -6 -43 -42) -43] [(99 -51 -43 31) -51] [(45 -86 54 90) -86] [(-25 -93 12 29) -93] [(66 6 -76 -1) -76])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 681
Test mean error for best: 0.68100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -43                 | Program output: -9                 
Correct output: -20                 | Program output: 3                  
Correct output: -65                 | Program output: -58                
Correct output: 44                  | Program output: 52                 
Correct output: -52                 | Program output: 34                 
Correct output: 7                   | Program output: 7                  
Correct output: -13                 | Program output: 11                 
Correct output: 35                  | Program output: 43                 
Correct output: -41                 | Program output: -41                
Correct output: 48                  | Program output: 48                 
Correct output: 64                  | Program output: 64                 
Correct output: -23                 | Program output: -23                
Correct output: -19                 | Program output: -19                
Correct output: 30                  | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: 9                   | Program output: 65                 
Correct output: 10                  | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: 21                  | Program output: 21                 
Correct output: 39                  | Program output: 39                 
Correct output: 24                  | Program output: 44                 
Correct output: 31                  | Program output: 40                 
Correct output: 2                   | Program output: 2                  
Correct output: 4                   | Program output: 44                 
Correct output: 20                  | Program output: 20                 
Correct output: 58                  | Program output: 73                 
Correct output: 23                  | Program output: 97                 
Correct output: 22                  | Program output: 87                 
Correct output: 5                   | Program output: 5                  
Correct output: 32                  | Program output: 49                 
Correct output: 3                   | Program output: 63                 
Correct output: 18                  | Program output: 29                 
Correct output: 10                  | Program output: 11                 
Correct output: 41                  | Program output: 41                 
Correct output: 37                  | Program output: 64                 
Correct output: 0                   | Program output: 73                 
Correct output: -23                 | Program output: 16                 
Correct output: -90                 | Program output: -35                
Correct output: -44                 | Program output: 76                 
Correct output: 15                  | Program output: 73                 
Correct output: -62                 | Program output: -62                
Correct output: -44                 | Program output: -27                
Correct output: -55                 | Program output: 22                 
Correct output: -70                 | Program output: -21                
Correct output: -89                 | Program output: -69                
Correct output: -51                 | Program output: 7                  
Correct output: -69                 | Program output: -46                
Correct output: -99                 | Program output: -99                
Correct output: -96                 | Program output: 80                 
Correct output: -74                 | Program output: 23                 
Correct output: -31                 | Program output: 58                 
Correct output: -71                 | Program output: -60                
Correct output: -80                 | Program output: -49                
Correct output: -96                 | Program output: -12                
Correct output: -57                 | Program output: 33                 
Correct output: -63                 | Program output: 4                  
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: 6                  
Correct output: -53                 | Program output: 96                 
Correct output: -60                 | Program output: -60                
Correct output: -94                 | Program output: 23                 
Correct output: -78                 | Program output: 94                 
Correct output: -58                 | Program output: -58                
Correct output: -34                 | Program output: -15                
Correct output: -69                 | Program output: -51                
Correct output: -100                | Program output: 3                  
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 99                 
Correct output: -87                 | Program output: -56                
Correct output: -64                 | Program output: 30                 
Correct output: -39                 | Program output: 38                 
Correct output: -69                 | Program output: -25                
Correct output: -29                 | Program output: 52                 
Correct output: -92                 | Program output: 24                 
Correct output: -44                 | Program output: -44                
Correct output: -98                 | Program output: -83                
Correct output: -32                 | Program output: 0                  
Correct output: -31                 | Program output: 80                 
Correct output: -75                 | Program output: 96                 
Correct output: -67                 | Program output: 72                 
Correct output: -57                 | Program output: -11                
Correct output: -69                 | Program output: 94                 
Correct output: -50                 | Program output: -50                
Correct output: -92                 | Program output: 22                 
Correct output: -92                 | Program output: -92                
Correct output: -17                 | Program output: 32                 
Correct output: -94                 | Program output: -76                
Correct output: -80                 | Program output: -24                
Correct output: -90                 | Program output: -90                
Correct output: -99                 | Program output: -14                
Correct output: -43                 | Program output: 75                 
Correct output: -51                 | Program output: 99                 
Correct output: -86                 | Program output: 45                 
Correct output: -93                 | Program output: -25                
Correct output: -76                 | Program output: 66                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in1} {:close 1, :instruction exec_rot} {:close 1, :instruction print_integer} {:close 1, :instruction exec_k} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_div} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_newline} {:close 0, :instruction tagged_778} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_y} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction in4} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_if} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction boolean_pop} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_times})
Lexicase best program: (integer_dup_times integer_gt exec_dup_items in1 exec_rot () (print_integer) (exec_k () (exec_stackdepth exec_y_when_autoconstructing (integer_inc exec_empty boolean_empty print_integer exec_s_when_autoconstructing (integer_div) (integer_gte integer_flush exec_do*range (print_newline tagged_778 print_boolean exec_pop () exec_dup_times (boolean_flush exec_y () exec_dup (boolean_dup_times in4) integer_gt boolean_not) exec_flush exec_if (integer_fromboolean) (boolean_pop) boolean_swap exec_dup_times ())) ()))))
Lexicase best errors: [0 1 1 0 1 1 1 0 1 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 54
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_gt} {:close 0, :instruction exec_dup_items} {:close 0, :instruction in1} {:close 1, :instruction exec_rot} {:close 1, :instruction print_integer} {:close 1, :instruction exec_k} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_div} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_newline} {:close 0, :instruction tagged_778} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_y} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction in4} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_if} {:close 1, :instruction integer_fromboolean} {:close 1, :instruction boolean_pop} {:close 0, :instruction boolean_swap} {:close 1, :instruction exec_dup_times})
Zero cases best program: (integer_dup_times integer_gt exec_dup_items in1 exec_rot () (print_integer) (exec_k () (exec_stackdepth exec_y_when_autoconstructing (integer_inc exec_empty boolean_empty print_integer exec_s_when_autoconstructing (integer_div) (integer_gte integer_flush exec_do*range (print_newline tagged_778 print_boolean exec_pop () exec_dup_times (boolean_flush exec_y () exec_dup (boolean_dup_times in4) integer_gt boolean_not) exec_flush exec_if (integer_fromboolean) (boolean_pop) boolean_swap exec_dup_times ())) ()))))
Zero cases best errors: [0 1 1 0 1 1 1 0 1 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 54
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (5 5 1 4 2 2 5 5 2 9)
Population mean number of elite cases: 0.04
Count of perfect (error zero) individuals by case: (5 5 1 4 2 2 5 5 2 9)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction exec_rot} {:close 0, :instruction integer_sub} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_flush} {:close 0, :instruction in2} {:close 0, :instruction exec_s} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction in1} {:close 2, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction integer_pop} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_do*count} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_sub} {:close 0, :instruction exec_dup} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_dup} {:close 1, :instruction tagged_447} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_gt})
Best program: (integer_shove exec_rot (integer_sub exec_dup_times () integer_flush in2 exec_s (exec_y_when_autoconstructing (integer_fromboolean) in1 print_integer) () (boolean_invert_first_then_and boolean_pop boolean_yankdup integer_pop) integer_gte exec_do*count (exec_dup_items) integer_sub) (exec_dup (boolean_frominteger exec_dup (tagged_447) integer_empty) exec_eq exec_yankdup integer_gt) ())
Errors: [0 1 1 0 1 1 1 0 1 0]
Total: 6
Mean: 0.6
Genome size: 27
Size: 39
Percent parens: 0.308
--- Population Statistics ---
Average total errors in population: 9.96
Median total errors in population: 10
Error averages by case: (0.995 0.995 0.999 0.996 0.998 0.998 0.995 0.995 0.998 0.991)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 50.756
Average program size in population (points): 69.857
Average percent parens in population: 0.279
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 2
Genome diversity (% unique genomes):	 0.999
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 2
Syntactic diversity (% unique Push programs):	 0.999
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.282
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 459192
--- Timings ---
Current time: 1559584286700 milliseconds
Total Time:           2.6 seconds
Initialization:       0.1 seconds,  3.6%
Reproduction:         0.8 seconds, 32.2%
Fitness Testing:      1.7 seconds, 64.2%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 659
Test mean error for best: 0.65900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -43                 | Program output: -43                
Correct output: -20                 | Program output: 3                  
Correct output: -65                 | Program output: -58                
Correct output: 44                  | Program output: 44                 
Correct output: -52                 | Program output: -52                
Correct output: 7                   | Program output: 61                 
Correct output: -13                 | Program output: 11                 
Correct output: 35                  | Program output: 43                 
Correct output: -41                 | Program output: -36                
Correct output: 48                  | Program output: 48                 
Correct output: 64                  | Program output: 64                 
Correct output: -23                 | Program output: -23                
Correct output: -19                 | Program output: -19                
Correct output: 30                  | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: 9                   | Program output: 85                 
Correct output: 10                  | Program output: 86                 
Correct output: 13                  | Program output: 85                 
Correct output: 21                  | Program output: 63                 
Correct output: 39                  | Program output: 91                 
Correct output: 24                  | Program output: 24                 
Correct output: 31                  | Program output: 31                 
Correct output: 2                   | Program output: 85                 
Correct output: 4                   | Program output: 66                 
Correct output: 20                  | Program output: 66                 
Correct output: 58                  | Program output: 58                 
Correct output: 23                  | Program output: 73                 
Correct output: 22                  | Program output: 95                 
Correct output: 5                   | Program output: 29                 
Correct output: 32                  | Program output: 32                 
Correct output: 3                   | Program output: 3                  
Correct output: 18                  | Program output: 18                 
Correct output: 10                  | Program output: 10                 
Correct output: 41                  | Program output: 61                 
Correct output: 37                  | Program output: 52                 
Correct output: 0                   | Program output: 56                 
Correct output: -23                 | Program output: -23                
Correct output: -90                 | Program output: -57                
Correct output: -44                 | Program output: 24                 
Correct output: 15                  | Program output: 15                 
Correct output: -62                 | Program output: -19                
Correct output: -44                 | Program output: 48                 
Correct output: -55                 | Program output: 96                 
Correct output: -70                 | Program output: -70                
Correct output: -89                 | Program output: -89                
Correct output: -51                 | Program output: -51                
Correct output: -69                 | Program output: 5                  
Correct output: -99                 | Program output: -28                
Correct output: -96                 | Program output: -60                
Correct output: -74                 | Program output: -74                
Correct output: -31                 | Program output: -31                
Correct output: -71                 | Program output: 0                  
Correct output: -80                 | Program output: -80                
Correct output: -96                 | Program output: -55                
Correct output: -57                 | Program output: 61                 
Correct output: -63                 | Program output: 24                 
Correct output: -90                 | Program output: 2                  
Correct output: -56                 | Program output: 73                 
Correct output: -53                 | Program output: -37                
Correct output: -60                 | Program output: -9                 
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -58                 | Program output: 81                 
Correct output: -34                 | Program output: 20                 
Correct output: -69                 | Program output: -69                
Correct output: -100                | Program output: 54                 
Correct output: -78                 | Program output: -42                
Correct output: -63                 | Program output: -56                
Correct output: -87                 | Program output: -74                
Correct output: -64                 | Program output: -64                
Correct output: -39                 | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -29                 | Program output: -1                 
Correct output: -92                 | Program output: 14                 
Correct output: -44                 | Program output: 20                 
Correct output: -98                 | Program output: -22                
Correct output: -32                 | Program output: -32                
Correct output: -31                 | Program output: 68                 
Correct output: -75                 | Program output: 54                 
Correct output: -67                 | Program output: 80                 
Correct output: -57                 | Program output: -57                
Correct output: -69                 | Program output: 82                 
Correct output: -50                 | Program output: -9                 
Correct output: -92                 | Program output: -64                
Correct output: -92                 | Program output: -81                
Correct output: -17                 | Program output: -17                
Correct output: -94                 | Program output: 1                  
Correct output: -80                 | Program output: -79                
Correct output: -90                 | Program output: -51                
Correct output: -99                 | Program output: 40                 
Correct output: -43                 | Program output: -43                
Correct output: -51                 | Program output: -43                
Correct output: -86                 | Program output: 54                 
Correct output: -93                 | Program output: 12                 
Correct output: -76                 | Program output: -76                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction tagged_173} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 1, :instruction in3} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_while} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction integer_dup_items} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction integer_dup_items} {:close 0, :instruction tag_integer_457} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_xor} {:close 1, :instruction print_newline} {:close 0, :instruction print_exec} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_pop} {:close 1, :instruction in2} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_invert_second_then_and} {:close 1, :instruction tagged_745} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_eq} {:close 0, :instruction exec_k} {:close 0, :instruction exec_when} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 1, :instruction in4} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction integer_inc} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_empty} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_div} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 1, :instruction integer_yankdup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_while} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_exec} {:close 0, :instruction boolean_rot} {:close 1, :instruction exec_s} {:close 1, :instruction exec_empty} {:close 0, :instruction -19} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in4} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_and})
Lexicase best program: (tagged_173 boolean_rot boolean_swap in3 integer_empty boolean_and print_integer exec_while (integer_mult exec_yank exec_while (exec_y_when_autoconstructing (integer_dup_items) exec_stackdepth) integer_dup_items tag_integer_457 boolean_not exec_when (boolean_xor print_newline) print_exec (exec_do*times (integer_pop in2) exec_yankdup boolean_invert_second_then_and exec_k_when_autoconstructing (boolean_invert_second_then_and) (tagged_745) exec_flush integer_mult exec_noop) boolean_shove exec_pop (boolean_dup_items exec_swap (exec_rot (integer_eq) (exec_k (exec_when (integer_fromboolean) exec_do*while (boolean_invert_first_then_and integer_add in4) boolean_flush) (exec_k_when_autoconstructing (integer_stackdepth exec_if (integer_inc) (integer_shove boolean_empty integer_yankdup) integer_div integer_yank exec_do*while (integer_yankdup) integer_dup_items) (exec_while (boolean_dup_times boolean_or exec_while (integer_gte integer_dup_items boolean_invert_first_then_and print_exec (boolean_rot exec_s () (exec_empty) (-19 in3 boolean_dup_times in4 exec_k_when_autoconstructing (boolean_and) ()))))))) ()) ())))
Lexicase best errors: [1 1 0 1 0 0 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 107
Percent parens: 0.299
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction tagged_173} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 1, :instruction in3} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction exec_while} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_while} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction integer_dup_items} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction integer_dup_items} {:close 0, :instruction tag_integer_457} {:close 0, :instruction boolean_not} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_xor} {:close 1, :instruction print_newline} {:close 0, :instruction print_exec} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_pop} {:close 1, :instruction in2} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction boolean_invert_second_then_and} {:close 1, :instruction tagged_745} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_mult} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_eq} {:close 0, :instruction exec_k} {:close 0, :instruction exec_when} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_add} {:close 1, :instruction in4} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_if} {:close 1, :instruction integer_inc} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_empty} {:close 1, :instruction integer_yankdup} {:close 0, :instruction integer_div} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_do*while} {:close 1, :instruction integer_yankdup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_while} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_exec} {:close 0, :instruction boolean_rot} {:close 1, :instruction exec_s} {:close 1, :instruction exec_empty} {:close 0, :instruction -19} {:close 0, :instruction in3} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in4} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_and})
Zero cases best program: (tagged_173 boolean_rot boolean_swap in3 integer_empty boolean_and print_integer exec_while (integer_mult exec_yank exec_while (exec_y_when_autoconstructing (integer_dup_items) exec_stackdepth) integer_dup_items tag_integer_457 boolean_not exec_when (boolean_xor print_newline) print_exec (exec_do*times (integer_pop in2) exec_yankdup boolean_invert_second_then_and exec_k_when_autoconstructing (boolean_invert_second_then_and) (tagged_745) exec_flush integer_mult exec_noop) boolean_shove exec_pop (boolean_dup_items exec_swap (exec_rot (integer_eq) (exec_k (exec_when (integer_fromboolean) exec_do*while (boolean_invert_first_then_and integer_add in4) boolean_flush) (exec_k_when_autoconstructing (integer_stackdepth exec_if (integer_inc) (integer_shove boolean_empty integer_yankdup) integer_div integer_yank exec_do*while (integer_yankdup) integer_dup_items) (exec_while (boolean_dup_times boolean_or exec_while (integer_gte integer_dup_items boolean_invert_first_then_and print_exec (boolean_rot exec_s () (exec_empty) (-19 in3 boolean_dup_times in4 exec_k_when_autoconstructing (boolean_and) ()))))))) ()) ())))
Zero cases best errors: [1 1 0 1 0 0 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 107
Percent parens: 0.299
--- Lexicase Population Statistics ---
Count of elite individuals by case: (65 65 179 236 179 835 64 181 234 180)
Population mean number of elite cases: 2.22
Count of perfect (error zero) individuals by case: (65 65 179 236 179 835 64 181 234 180)
Population mean number of perfect (error zero) cases: 2.22
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_shove} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_yankdup} {:close 2, :instruction exec_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dec} {:close 2, :instruction exec_do*while} {:close 0, :instruction integer_rot} {:close 2, :instruction in3} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_dup_times} {:close 1, :instruction integer_lt} {:close 0, :instruction integer_dec} {:close 0, :instruction in3} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_rot} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_pop} {:close 0, :instruction in4} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_flush} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_pop} {:close 1, :instruction exec_dup} {:close 1, :instruction tag_integer_737} {:close 0, :instruction print_integer} {:close 1, :instruction -38} {:close 0, :instruction tag_exec_370} {:close 0, :instruction tag_integer_405} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_s} {:close 0, :instruction exec_if} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_rot} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction print_integer} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction exec_eq} {:close 1, :instruction boolean_not} {:close 0, :instruction exec_when} {:close 0, :instruction boolean_flush} {:close 1, :instruction exec_while} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction in3} {:close 1, :instruction boolean_or} {:close 2, :instruction in3} {:close 0, :instruction boolean_flush} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_do*range} {:close 1, :instruction exec_do*range} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_yank} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_do*range} {:close 1, :instruction boolean_dup} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_add} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_s_when_autoconstructing})
Best program: (integer_shove boolean_invert_second_then_and boolean_yankdup exec_pop () boolean_rot integer_dec exec_do*while () integer_rot in3 boolean_shove integer_dup_times integer_flush boolean_yank boolean_stackdepth integer_dup_times exec_dup_times (integer_lt) integer_dec in3 exec_rot (exec_rot (exec_pop () exec_pop (in4 integer_flush integer_div boolean_flush) integer_dup exec_pop (boolean_not boolean_frominteger boolean_pop) exec_dup () tag_integer_737) (print_integer -38) (tag_exec_370 (tag_integer_405 exec_do*range (boolean_yank exec_s (exec_if (exec_do*count (exec_noop exec_rot (boolean_eq boolean_yank boolean_pop print_integer integer_inc integer_lt exec_flush integer_rot boolean_invert_first_then_and exec_eq) (boolean_not) (exec_when (boolean_flush exec_while () exec_s_when_autoconstructing (exec_y_when_autoconstructing (in3) boolean_or) (in3) () boolean_flush boolean_invert_first_then_and integer_fromboolean exec_do*range () exec_eq exec_do*range (exec_do*range () boolean_pop) integer_yank boolean_yankdup) boolean_stackdepth exec_shove (exec_do*range (boolean_dup) integer_shove integer_dec exec_flush exec_dup_times (integer_sub integer_dup integer_add exec_dup (exec_s_when_autoconstructing () () ())))))) ()) () ())))) () ())
Errors: [1 1 0 1 0 0 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 87
Size: 128
Percent parens: 0.320
--- Population Statistics ---
Average total errors in population: 7.782
Median total errors in population: 9
Error averages by case: (0.935 0.935 0.821 0.764 0.821 0.165 0.936 0.819 0.766 0.82)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 69.446
Average program size in population (points): 97.377
Average percent parens in population: 0.287
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.495
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 97
Genome diversity (% unique genomes):	 0.671
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 99
Syntactic diversity (% unique Push programs):	 0.664
Total error diversity:				 0.006
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1133628
--- Timings ---
Current time: 1559584289775 milliseconds
Total Time:           5.7 seconds
Initialization:       0.1 seconds,  1.6%
Reproduction:         2.5 seconds, 43.7%
Fitness Testing:      2.7 seconds, 47.1%
Report:               0.4 seconds,  7.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 628
Test mean error for best: 0.62800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -43                 | Program output: -9                 
Correct output: -20                 | Program output: 3                  
Correct output: -65                 | Program output: -58                
Correct output: 44                  | Program output: 52                 
Correct output: -52                 | Program output: 34                 
Correct output: 7                   | Program output: 61                 
Correct output: -13                 | Program output: 11                 
Correct output: 35                  | Program output: 35                 
Correct output: -41                 | Program output: -36                
Correct output: 48                  | Program output: 85                 
Correct output: 64                  | Program output: 64                 
Correct output: -23                 | Program output: -23                
Correct output: -19                 | Program output: -19                
Correct output: 30                  | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: 9                   | Program output: 74                 
Correct output: 10                  | Program output: 72                 
Correct output: 13                  | Program output: 75                 
Correct output: 21                  | Program output: 37                 
Correct output: 39                  | Program output: 42                 
Correct output: 24                  | Program output: 57                 
Correct output: 31                  | Program output: 62                 
Correct output: 2                   | Program output: 6                  
Correct output: 4                   | Program output: 89                 
Correct output: 20                  | Program output: 43                 
Correct output: 58                  | Program output: 61                 
Correct output: 23                  | Program output: 25                 
Correct output: 22                  | Program output: 57                 
Correct output: 5                   | Program output: 46                 
Correct output: 32                  | Program output: 69                 
Correct output: 3                   | Program output: 99                 
Correct output: 18                  | Program output: 47                 
Correct output: 10                  | Program output: 28                 
Correct output: 41                  | Program output: 49                 
Correct output: 37                  | Program output: 60                 
Correct output: 0                   | Program output: 0                  
Correct output: -23                 | Program output: 25                 
Correct output: -90                 | Program output: 4                  
Correct output: -44                 | Program output: -44                
Correct output: 15                  | Program output: 84                 
Correct output: -62                 | Program output: 6                  
Correct output: -44                 | Program output: -44                
Correct output: -55                 | Program output: 19                 
Correct output: -70                 | Program output: -21                
Correct output: -89                 | Program output: -36                
Correct output: -51                 | Program output: 15                 
Correct output: -69                 | Program output: -69                
Correct output: -99                 | Program output: 9                  
Correct output: -96                 | Program output: -96                
Correct output: -74                 | Program output: 69                 
Correct output: -31                 | Program output: 26                 
Correct output: -71                 | Program output: -71                
Correct output: -80                 | Program output: -13                
Correct output: -96                 | Program output: -96                
Correct output: -57                 | Program output: -57                
Correct output: -63                 | Program output: -63                
Correct output: -90                 | Program output: -83                
Correct output: -56                 | Program output: -56                
Correct output: -53                 | Program output: -53                
Correct output: -60                 | Program output: -8                 
Correct output: -94                 | Program output: -15                
Correct output: -78                 | Program output: -35                
Correct output: -58                 | Program output: 72                 
Correct output: -34                 | Program output: 66                 
Correct output: -69                 | Program output: 74                 
Correct output: -100                | Program output: -100               
Correct output: -78                 | Program output: 98                 
Correct output: -63                 | Program output: -48                
Correct output: -87                 | Program output: -11                
Correct output: -64                 | Program output: 91                 
Correct output: -39                 | Program output: 57                 
Correct output: -69                 | Program output: 61                 
Correct output: -29                 | Program output: -29                
Correct output: -92                 | Program output: -1                 
Correct output: -44                 | Program output: -17                
Correct output: -98                 | Program output: 83                 
Correct output: -32                 | Program output: 47                 
Correct output: -31                 | Program output: 27                 
Correct output: -75                 | Program output: -75                
Correct output: -67                 | Program output: 4                  
Correct output: -57                 | Program output: -33                
Correct output: -69                 | Program output: -69                
Correct output: -50                 | Program output: 16                 
Correct output: -92                 | Program output: 87                 
Correct output: -92                 | Program output: -89                
Correct output: -17                 | Program output: 10                 
Correct output: -94                 | Program output: -94                
Correct output: -80                 | Program output: -80                
Correct output: -90                 | Program output: -18                
Correct output: -99                 | Program output: -99                
Correct output: -43                 | Program output: -42                
Correct output: -51                 | Program output: 31                 
Correct output: -86                 | Program output: 90                 
Correct output: -93                 | Program output: 29                 
Correct output: -76                 | Program output: -1                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in4} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction tagged_616} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_mult} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_empty} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction tag_exec_786} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_y} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction in4} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_when} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_shove} {:close 1, :instruction tag_integer_163} {:close 2, :instruction integer_dup_items} {:close 0, :instruction in3} {:close 1, :instruction integer_lt} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction tagged_74} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_inc} {:close 0, :instruction in2} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty} {:close 1, :instruction exec_do*while})
Lexicase best program: (in4 integer_sub boolean_yank integer_gte print_integer integer_mult integer_dec exec_swap (exec_do*times () integer_gt integer_swap integer_min tagged_616 boolean_rot boolean_swap in1 integer_gte boolean_xor boolean_stackdepth boolean_eq exec_do*while (boolean_frominteger boolean_invert_first_then_and in3 integer_rot integer_swap boolean_shove boolean_dup_items integer_mult) integer_mod) (integer_empty integer_gt) exec_s_when_autoconstructing (integer_lt exec_yankdup integer_dup_items tag_exec_786 (exec_k_when_autoconstructing () (boolean_swap boolean_dup_items boolean_dup exec_pop () exec_y (integer_fromboolean)) integer_dec integer_lte exec_if (in3) (in4) integer_stackdepth exec_when (integer_swap boolean_swap exec_do*count (exec_yank integer_gt integer_dup integer_mult exec_if (boolean_xor exec_do*range () boolean_not boolean_shove tag_integer_163) (integer_dup_items)) in3 integer_lt) boolean_yankdup print_boolean boolean_swap) exec_yank integer_dec exec_pop (integer_eq tagged_74 integer_div boolean_not boolean_xor boolean_invert_first_then_and) exec_when (integer_shove boolean_rot boolean_dup integer_dec integer_inc in2 exec_dup (integer_empty exec_pop (boolean_swap exec_noop integer_fromboolean boolean_empty exec_do*while ())))) () ())
Lexicase best errors: [0 1 1 1 0 1 0 0 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 119
Percent parens: 0.210
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in4} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_swap} {:close 1, :instruction exec_do*times} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction tagged_616} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_mult} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_empty} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction tag_exec_786} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_y} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction in4} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_when} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_shove} {:close 1, :instruction tag_integer_163} {:close 2, :instruction integer_dup_items} {:close 0, :instruction in3} {:close 1, :instruction integer_lt} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction tagged_74} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_inc} {:close 0, :instruction in2} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty} {:close 1, :instruction exec_do*while})
Zero cases best program: (in4 integer_sub boolean_yank integer_gte print_integer integer_mult integer_dec exec_swap (exec_do*times () integer_gt integer_swap integer_min tagged_616 boolean_rot boolean_swap in1 integer_gte boolean_xor boolean_stackdepth boolean_eq exec_do*while (boolean_frominteger boolean_invert_first_then_and in3 integer_rot integer_swap boolean_shove boolean_dup_items integer_mult) integer_mod) (integer_empty integer_gt) exec_s_when_autoconstructing (integer_lt exec_yankdup integer_dup_items tag_exec_786 (exec_k_when_autoconstructing () (boolean_swap boolean_dup_items boolean_dup exec_pop () exec_y (integer_fromboolean)) integer_dec integer_lte exec_if (in3) (in4) integer_stackdepth exec_when (integer_swap boolean_swap exec_do*count (exec_yank integer_gt integer_dup integer_mult exec_if (boolean_xor exec_do*range () boolean_not boolean_shove tag_integer_163) (integer_dup_items)) in3 integer_lt) boolean_yankdup print_boolean boolean_swap) exec_yank integer_dec exec_pop (integer_eq tagged_74 integer_div boolean_not boolean_xor boolean_invert_first_then_and) exec_when (integer_shove boolean_rot boolean_dup integer_dec integer_inc in2 exec_dup (integer_empty exec_pop (boolean_swap exec_noop integer_fromboolean boolean_empty exec_do*while ())))) () ())
Zero cases best errors: [0 1 1 1 0 1 0 0 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 119
Percent parens: 0.210
--- Lexicase Population Statistics ---
Count of elite individuals by case: (267 17 375 375 267 177 267 836 267 178)
Population mean number of elite cases: 3.03
Count of perfect (error zero) individuals by case: (267 17 375 375 267 177 267 836 267 178)
Population mean number of perfect (error zero) cases: 3.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in4} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_gte} {:close 0, :instruction print_integer} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_swap} {:close 0, :instruction integer_min} {:close 0, :instruction tagged_616} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction integer_gte} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_mult} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_empty} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction tag_exec_786} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_dup} {:close 1, :instruction exec_pop} {:close 0, :instruction exec_y} {:close 2, :instruction integer_fromboolean} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_if} {:close 1, :instruction in3} {:close 1, :instruction in4} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_when} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_shove} {:close 1, :instruction tag_integer_163} {:close 2, :instruction integer_dup_items} {:close 0, :instruction in3} {:close 1, :instruction integer_lt} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_eq} {:close 0, :instruction tagged_74} {:close 0, :instruction integer_div} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_when} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_inc} {:close 0, :instruction in2} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_empty} {:close 1, :instruction exec_do*while})
Best program: (in4 integer_sub boolean_yank integer_gte print_integer integer_mult integer_dec exec_swap (exec_do*times (integer_gt integer_swap integer_min tagged_616 boolean_rot boolean_swap in1 integer_gte boolean_xor boolean_stackdepth integer_shove exec_do*while (boolean_frominteger boolean_invert_first_then_and) in3 integer_rot integer_swap boolean_shove boolean_dup_items integer_mult) integer_mod) (integer_empty exec_yankdup) exec_s_when_autoconstructing (integer_lt exec_yankdup integer_dup_items tag_exec_786 (exec_k_when_autoconstructing () (boolean_swap boolean_stackdepth boolean_dup exec_pop () exec_y (integer_fromboolean)) integer_dec integer_lte exec_if (in3) (in4) integer_stackdepth exec_when (integer_swap boolean_swap exec_do*count (exec_yank integer_gt integer_dup integer_mult exec_if (boolean_xor exec_do*range (boolean_not boolean_shove tag_integer_163) integer_dup_items) () in3 integer_lt) boolean_yankdup print_boolean boolean_swap exec_yank integer_dec exec_pop (integer_eq tagged_74 integer_div boolean_not boolean_xor boolean_invert_first_then_and) exec_when (integer_shove boolean_rot exec_do*range (integer_dec integer_inc in2 exec_dup (integer_empty exec_pop (boolean_swap exec_noop integer_fromboolean boolean_empty exec_do*while ()))))))) () ())
Errors: [0 1 1 1 0 1 0 0 0 1]
Total: 5
Mean: 0.5
Genome size: 94
Size: 120
Percent parens: 0.217
--- Population Statistics ---
Average total errors in population: 6.974
Median total errors in population: 7
Error averages by case: (0.733 0.983 0.625 0.625 0.733 0.823 0.733 0.164 0.733 0.822)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 77.961
Average program size in population (points): 106.257
Average percent parens in population: 0.262
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.9785
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 24
Genome diversity (% unique genomes):	 0.857
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.846
Total error diversity:				 0.006
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.09
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1739663
--- Timings ---
Current time: 1559584293293 milliseconds
Total Time:           9.2 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.9 seconds, 53.5%
Fitness Testing:      3.4 seconds, 36.8%
Report:               0.8 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 447
Test mean error for best: 0.44700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -43                 | Program output: -9                 
Correct output: -20                 | Program output: -20                
Correct output: -65                 | Program output: -65                
Correct output: 44                  | Program output: 52                 
Correct output: -52                 | Program output: 34                 
Correct output: 7                   | Program output: 7                  
Correct output: -13                 | Program output: -13                
Correct output: 35                  | Program output: 43                 
Correct output: -41                 | Program output: -41                
Correct output: 48                  | Program output: 48                 
Correct output: 64                  | Program output: 64                 
Correct output: -23                 | Program output: -23                
Correct output: -19                 | Program output: -19                
Correct output: 30                  | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: 9                   | Program output: 9                  
Correct output: 10                  | Program output: 10                 
Correct output: 13                  | Program output: 13                 
Correct output: 21                  | Program output: 21                 
Correct output: 39                  | Program output: 39                 
Correct output: 24                  | Program output: 44                 
Correct output: 31                  | Program output: 40                 
Correct output: 2                   | Program output: 2                  
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 20                 
Correct output: 58                  | Program output: 73                 
Correct output: 23                  | Program output: 23                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 5                  
Correct output: 32                  | Program output: 49                 
Correct output: 3                   | Program output: 48                 
Correct output: 18                  | Program output: 29                 
Correct output: 10                  | Program output: 11                 
Correct output: 41                  | Program output: 41                 
Correct output: 37                  | Program output: 37                 
Correct output: 0                   | Program output: 55                 
Correct output: -23                 | Program output: 16                 
Correct output: -90                 | Program output: -90                
Correct output: -44                 | Program output: 52                 
Correct output: 15                  | Program output: 31                 
Correct output: -62                 | Program output: -62                
Correct output: -44                 | Program output: -27                
Correct output: -55                 | Program output: -55                
Correct output: -70                 | Program output: -21                
Correct output: -89                 | Program output: -69                
Correct output: -51                 | Program output: 7                  
Correct output: -69                 | Program output: -46                
Correct output: -99                 | Program output: -99                
Correct output: -96                 | Program output: -29                
Correct output: -74                 | Program output: 16                 
Correct output: -31                 | Program output: 58                 
Correct output: -71                 | Program output: -60                
Correct output: -80                 | Program output: -49                
Correct output: -96                 | Program output: -52                
Correct output: -57                 | Program output: 33                 
Correct output: -63                 | Program output: 48                 
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: 6                  
Correct output: -53                 | Program output: -25                
Correct output: -60                 | Program output: -60                
Correct output: -94                 | Program output: -10                
Correct output: -78                 | Program output: -46                
Correct output: -58                 | Program output: -58                
Correct output: -34                 | Program output: -34                
Correct output: -69                 | Program output: -51                
Correct output: -100                | Program output: -30                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: 30                 
Correct output: -39                 | Program output: -39                
Correct output: -69                 | Program output: -25                
Correct output: -29                 | Program output: -2                 
Correct output: -92                 | Program output: -92                
Correct output: -44                 | Program output: -44                
Correct output: -98                 | Program output: -98                
Correct output: -32                 | Program output: 0                  
Correct output: -31                 | Program output: -31                
Correct output: -75                 | Program output: -7                 
Correct output: -67                 | Program output: -67                
Correct output: -57                 | Program output: -11                
Correct output: -69                 | Program output: 79                 
Correct output: -50                 | Program output: -50                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -92                
Correct output: -17                 | Program output: 32                 
Correct output: -94                 | Program output: -76                
Correct output: -80                 | Program output: -78                
Correct output: -90                 | Program output: -90                
Correct output: -99                 | Program output: -14                
Correct output: -43                 | Program output: -6                 
Correct output: -51                 | Program output: -51                
Correct output: -86                 | Program output: -86                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: 16                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_swap} {:close 1, :instruction in1} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dup_items} {:close 2, :instruction in1} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_mult} {:close 0, :instruction tagged_157} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_gt} {:close 1, :instruction in2} {:close 1, :instruction exec_yankdup} {:close 1, :instruction integer_pop})
Lexicase best program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot integer_gt in2) exec_yankdup) integer_pop)) ())) ()))
Lexicase best errors: [0 1 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 82
Percent parens: 0.293
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_swap} {:close 1, :instruction in1} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dup_items} {:close 2, :instruction in1} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_mult} {:close 0, :instruction tagged_157} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_gt} {:close 1, :instruction in2} {:close 1, :instruction exec_yankdup} {:close 1, :instruction integer_pop})
Zero cases best program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot integer_gt in2) exec_yankdup) integer_pop)) ())) ()))
Zero cases best errors: [0 1 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 82
Percent parens: 0.293
--- Lexicase Population Statistics ---
Count of elite individuals by case: (248 389 261 263 263 266 257 386 440 261)
Population mean number of elite cases: 3.03
Count of perfect (error zero) individuals by case: (248 389 261 263 263 266 257 386 440 261)
Population mean number of perfect (error zero) cases: 3.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_swap} {:close 1, :instruction in1} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dup_items} {:close 2, :instruction in1} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_mult} {:close 0, :instruction tagged_157} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_gt} {:close 1, :instruction in2} {:close 1, :instruction exec_yankdup} {:close 1, :instruction integer_pop})
Best program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot integer_gt in2) exec_yankdup) integer_pop)) ())) ()))
Errors: [0 1 0 0 0 0 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 58
Size: 82
Percent parens: 0.293
--- Population Statistics ---
Average total errors in population: 6.966
Median total errors in population: 8
Error averages by case: (0.752 0.611 0.739 0.737 0.737 0.734 0.743 0.614 0.56 0.739)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 69.747
Average program size in population (points): 94.432
Average percent parens in population: 0.261
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.79975
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 97
Genome diversity (% unique genomes):	 0.836
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 101
Syntactic diversity (% unique Push programs):	 0.823
Total error diversity:				 0.009
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2114222
--- Timings ---
Current time: 1559584295869 milliseconds
Total Time:          11.9 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         6.8 seconds, 57.2%
Fitness Testing:      3.8 seconds, 31.9%
Report:               1.2 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 427
Test mean error for best: 0.42700
Test Case    0 | Error: 0
Test Case    1 | Error: 1
Test Case    2 | Error: 0
Test Case    3 | Error: 1
Test Case    4 | Error: 0
Test Case    5 | Error: 1
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 1
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 1
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 1
Test Case   30 | Error: 1
Test Case   31 | Error: 1
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 1
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 1
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 1
Test Case   41 | Error: 1
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 1
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 1
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 1
Test Case   73 | Error: 1
Test Case   74 | Error: 1
Test Case   75 | Error: 0
Test Case   76 | Error: 1
Test Case   77 | Error: 0
Test Case   78 | Error: 1
Test Case   79 | Error: 1
Test Case   80 | Error: 1
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 1
Test Case   85 | Error: 1
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 1
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 1
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 1
Test Case  210 | Error: 1
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 1
Test Case  223 | Error: 1
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 1
Test Case  241 | Error: 1
Test Case  242 | Error: 1
Test Case  243 | Error: 1
Test Case  244 | Error: 1
Test Case  245 | Error: 1
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 1
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 1
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 1
Test Case  267 | Error: 1
Test Case  268 | Error: 1
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 1
Test Case  304 | Error: 1
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 1
Test Case  313 | Error: 1
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 1
Test Case  318 | Error: 1
Test Case  319 | Error: 1
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 1
Test Case  332 | Error: 1
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 1
Test Case  337 | Error: 1
Test Case  338 | Error: 1
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 1
Test Case  347 | Error: 1
Test Case  348 | Error: 1
Test Case  349 | Error: 1
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 1
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 1
Test Case  370 | Error: 1
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 1
Test Case  379 | Error: 1
Test Case  380 | Error: 1
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 1
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 1
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 1
Test Case  397 | Error: 1
Test Case  398 | Error: 1
Test Case  399 | Error: 1
Test Case  400 | Error: 0
Test Case  401 | Error: 1
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 1
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 1
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 1
Test Case  424 | Error: 1
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 1
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 1
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 1
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 1
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 1
Test Case  466 | Error: 1
Test Case  467 | Error: 1
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 1
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 1
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 1
Test Case  486 | Error: 1
Test Case  487 | Error: 1
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 1
Test Case  494 | Error: 1
Test Case  495 | Error: 1
Test Case  496 | Error: 0
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 0
Test Case  503 | Error: 1
Test Case  504 | Error: 1
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 1
Test Case  508 | Error: 1
Test Case  509 | Error: 0
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 1
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 1
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 1
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 1
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 1
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 1
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 1
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 1
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 1
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 1
Test Case  604 | Error: 1
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 1
Test Case  608 | Error: 1
Test Case  609 | Error: 1
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 1
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 1
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 1
Test Case  627 | Error: 1
Test Case  628 | Error: 1
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 0
Test Case  635 | Error: 1
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 1
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 1
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 1
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 1
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 1
Test Case  678 | Error: 1
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 1
Test Case  706 | Error: 1
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 1
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 1
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 1
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 1
Test Case  748 | Error: 1
Test Case  749 | Error: 1
Test Case  750 | Error: 0
Test Case  751 | Error: 1
Test Case  752 | Error: 0
Test Case  753 | Error: 1
Test Case  754 | Error: 0
Test Case  755 | Error: 1
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 1
Test Case  761 | Error: 1
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 1
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 1
Test Case  769 | Error: 0
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 1
Test Case  776 | Error: 1
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 1
Test Case  792 | Error: 1
Test Case  793 | Error: 1
Test Case  794 | Error: 1
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 1
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 1
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 1
Test Case  839 | Error: 0
Test Case  840 | Error: 1
Test Case  841 | Error: 1
Test Case  842 | Error: 1
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 1
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 1
Test Case  861 | Error: 1
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 1
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 1
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 1
Test Case  907 | Error: 1
Test Case  908 | Error: 1
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 1
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 1
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 1
Test Case  936 | Error: 1
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 1
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 1
Test Case  944 | Error: 1
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 1
Test Case  963 | Error: 1
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 1
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 1
Test Case  983 | Error: 1
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 1
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -43                 | Program output: -43                
Correct output: -20                 | Program output: -20                
Correct output: -65                 | Program output: -65                
Correct output: 44                  | Program output: 44                 
Correct output: -52                 | Program output: -52                
Correct output: 7                   | Program output: 61                 
Correct output: -13                 | Program output: -13                
Correct output: 35                  | Program output: 43                 
Correct output: -41                 | Program output: -36                
Correct output: 48                  | Program output: 48                 
Correct output: 64                  | Program output: 64                 
Correct output: -23                 | Program output: -23                
Correct output: -19                 | Program output: -19                
Correct output: 30                  | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: 9                   | Program output: 9                  
Correct output: 10                  | Program output: 22                 
Correct output: 13                  | Program output: 85                 
Correct output: 21                  | Program output: 54                 
Correct output: 39                  | Program output: 91                 
Correct output: 24                  | Program output: 24                 
Correct output: 31                  | Program output: 31                 
Correct output: 2                   | Program output: 43                 
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 66                 
Correct output: 58                  | Program output: 58                 
Correct output: 23                  | Program output: 23                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 28                 
Correct output: 32                  | Program output: 32                 
Correct output: 3                   | Program output: 3                  
Correct output: 18                  | Program output: 18                 
Correct output: 10                  | Program output: 10                 
Correct output: 41                  | Program output: 61                 
Correct output: 37                  | Program output: 37                 
Correct output: 0                   | Program output: 55                 
Correct output: -23                 | Program output: -23                
Correct output: -90                 | Program output: -90                
Correct output: -44                 | Program output: 24                 
Correct output: 15                  | Program output: 15                 
Correct output: -62                 | Program output: -30                
Correct output: -44                 | Program output: 48                 
Correct output: -55                 | Program output: -55                
Correct output: -70                 | Program output: -70                
Correct output: -89                 | Program output: -89                
Correct output: -51                 | Program output: -51                
Correct output: -69                 | Program output: 5                  
Correct output: -99                 | Program output: -73                
Correct output: -96                 | Program output: -60                
Correct output: -74                 | Program output: 1-74               
Correct output: -31                 | Program output: -31                
Correct output: -71                 | Program output: -2                 
Correct output: -80                 | Program output: -80                
Correct output: -96                 | Program output: -55                
Correct output: -57                 | Program output: 50                 
Correct output: -63                 | Program output: 48                 
Correct output: -90                 | Program output: -26                
Correct output: -56                 | Program output: 73                 
Correct output: -53                 | Program output: -37                
Correct output: -60                 | Program output: -25                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -58                 | Program output: -32                
Correct output: -34                 | Program output: -34                
Correct output: -69                 | Program output: -69                
Correct output: -100                | Program output: -30                
Correct output: -78                 | Program output: -64                
Correct output: -63                 | Program output: -63                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: -64                
Correct output: -39                 | Program output: -39                
Correct output: -69                 | Program output: -69                
Correct output: -29                 | Program output: -2                 
Correct output: -92                 | Program output: -92                
Correct output: -44                 | Program output: 20                 
Correct output: -98                 | Program output: -98                
Correct output: -32                 | Program output: -32                
Correct output: -31                 | Program output: -31                
Correct output: -75                 | Program output: -7                 
Correct output: -67                 | Program output: -67                
Correct output: -57                 | Program output: -57                
Correct output: -69                 | Program output: 79                 
Correct output: -50                 | Program output: -26                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -81                
Correct output: -17                 | Program output: -17                
Correct output: -94                 | Program output: 1                  
Correct output: -80                 | Program output: -79                
Correct output: -90                 | Program output: -51                
Correct output: -99                 | Program output: 40                 
Correct output: -43                 | Program output: -43                
Correct output: -51                 | Program output: -51                
Correct output: -86                 | Program output: -86                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: 1-76               
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in4} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_gte} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dup_items} {:close 2, :instruction in1} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_k} {:close 0, :instruction tagged_157} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_gt} {:close 1, :instruction in2} {:close 1, :instruction exec_yankdup} {:close 1, :instruction integer_pop})
Lexicase best program: (in4 integer_sub boolean_yank integer_gte exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2 in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (exec_k (tagged_157 integer_fromboolean) (integer_rot integer_gt in2) exec_yankdup) integer_pop)))) ())) ()))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 85
Percent parens: 0.318
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in4} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_gte} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dup_items} {:close 2, :instruction in1} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_k} {:close 0, :instruction tagged_157} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_gt} {:close 1, :instruction in2} {:close 1, :instruction exec_yankdup} {:close 1, :instruction integer_pop})
Zero cases best program: (in4 integer_sub boolean_yank integer_gte exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2 in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (exec_k (tagged_157 integer_fromboolean) (integer_rot integer_gt in2) exec_yankdup) integer_pop)))) ())) ()))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 85
Percent parens: 0.318
--- Lexicase Population Statistics ---
Count of elite individuals by case: (74 571 866 769 764 767 866 572 73 76)
Population mean number of elite cases: 5.40
Count of perfect (error zero) individuals by case: (74 571 866 769 764 767 866 572 73 76)
Population mean number of perfect (error zero) cases: 5.40
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_swap} {:close 1, :instruction in1} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_s} {:close 0, :instruction in2} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 1, :instruction in2} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction in3} {:close 0, :instruction boolean_rot} {:close 1, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 0, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove} {:close 1, :instruction exec_flush} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_dup_items} {:close 2, :instruction in1} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_max} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_empty} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_stackdepth} {:close 2, :instruction exec_dup} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_eq} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_mult} {:close 0, :instruction tagged_157} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_rot})
Best program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 60
Size: 86
Percent parens: 0.302
--- Population Statistics ---
Average total errors in population: 4.602
Median total errors in population: 3
Error averages by case: (0.926 0.429 0.134 0.231 0.236 0.233 0.134 0.428 0.927 0.924)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 57.388
Average program size in population (points): 80.96
Average percent parens in population: 0.291
Minimum age in population: 5.0
Maximum age in population: 8.0
Average age in population: 6.768875
Median age in population: 6.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 118
Genome diversity (% unique genomes):	 0.684
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 125
Syntactic diversity (% unique Push programs):	 0.673
Total error diversity:				 0.01
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2356870
--- Timings ---
Current time: 1559584298512 milliseconds
Total Time:          14.5 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.8 seconds, 60.7%
Fitness Testing:      4.1 seconds, 28.2%
Report:               1.5 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 4
Successful program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 86


Auto-simplifying with starting size: 86
step: 0
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 500
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 1000
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 1500
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 2000
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 2500
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 3000
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 3500
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 4000
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 4500
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

step: 5000
program: (in2 exec_shove (boolean_flush print_integer) integer_min boolean_pop boolean_not boolean_swap in1 integer_stackdepth exec_yankdup exec_do*count (exec_s (in2 in2) (boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (in2) boolean_frominteger exec_k_when_autoconstructing (in3 boolean_rot boolean_swap) (integer_pop integer_min print_integer boolean_shove exec_flush) exec_y_when_autoconstructing () boolean_frominteger integer_shove integer_dup_items in1) () exec_flush integer_max boolean_dup_items) exec_if (boolean_stackdepth boolean_empty boolean_dup_times) (exec_k_when_autoconstructing (exec_pop (exec_if (exec_dup_times (exec_s_when_autoconstructing (integer_eq integer_stackdepth exec_dup ()) (integer_empty) (exec_eq exec_do*range () exec_y_when_autoconstructing (exec_do*times (integer_mult tagged_157 integer_fromboolean) integer_rot)))) ())) ()))
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 86

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 427
Test mean error for best: 0.42700
Test Case    0 | Error: 0
Test Case    1 | Error: 1
Test Case    2 | Error: 0
Test Case    3 | Error: 1
Test Case    4 | Error: 0
Test Case    5 | Error: 1
Test Case    6 | Error: 1
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 1
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 1
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 1
Test Case   30 | Error: 1
Test Case   31 | Error: 1
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 1
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 1
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 1
Test Case   41 | Error: 1
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 1
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 1
Test Case   54 | Error: 0
Test Case   55 | Error: 1
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 1
Test Case   64 | Error: 0
Test Case   65 | Error: 1
Test Case   66 | Error: 1
Test Case   67 | Error: 0
Test Case   68 | Error: 1
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 1
Test Case   73 | Error: 1
Test Case   74 | Error: 1
Test Case   75 | Error: 0
Test Case   76 | Error: 1
Test Case   77 | Error: 0
Test Case   78 | Error: 1
Test Case   79 | Error: 1
Test Case   80 | Error: 1
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 1
Test Case   85 | Error: 1
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 1
Test Case   92 | Error: 1
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 1
Test Case   98 | Error: 1
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 1
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 1
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 1
Test Case  210 | Error: 1
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 1
Test Case  219 | Error: 1
Test Case  220 | Error: 0
Test Case  221 | Error: 1
Test Case  222 | Error: 1
Test Case  223 | Error: 1
Test Case  224 | Error: 0
Test Case  225 | Error: 1
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 1
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 0
Test Case  236 | Error: 1
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 1
Test Case  241 | Error: 1
Test Case  242 | Error: 1
Test Case  243 | Error: 1
Test Case  244 | Error: 1
Test Case  245 | Error: 1
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 1
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 0
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 1
Test Case  261 | Error: 0
Test Case  262 | Error: 1
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 1
Test Case  267 | Error: 1
Test Case  268 | Error: 1
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 1
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 0
Test Case  293 | Error: 1
Test Case  294 | Error: 0
Test Case  295 | Error: 1
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 1
Test Case  302 | Error: 0
Test Case  303 | Error: 1
Test Case  304 | Error: 1
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 1
Test Case  311 | Error: 1
Test Case  312 | Error: 1
Test Case  313 | Error: 1
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 1
Test Case  317 | Error: 1
Test Case  318 | Error: 1
Test Case  319 | Error: 1
Test Case  320 | Error: 1
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 1
Test Case  332 | Error: 1
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 1
Test Case  337 | Error: 1
Test Case  338 | Error: 1
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 1
Test Case  342 | Error: 1
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 1
Test Case  346 | Error: 1
Test Case  347 | Error: 1
Test Case  348 | Error: 1
Test Case  349 | Error: 1
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 1
Test Case  356 | Error: 1
Test Case  357 | Error: 0
Test Case  358 | Error: 1
Test Case  359 | Error: 1
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 0
Test Case  369 | Error: 1
Test Case  370 | Error: 1
Test Case  371 | Error: 0
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 1
Test Case  375 | Error: 0
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 1
Test Case  379 | Error: 1
Test Case  380 | Error: 1
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 1
Test Case  384 | Error: 1
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 1
Test Case  388 | Error: 1
Test Case  389 | Error: 1
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 1
Test Case  396 | Error: 1
Test Case  397 | Error: 1
Test Case  398 | Error: 1
Test Case  399 | Error: 1
Test Case  400 | Error: 0
Test Case  401 | Error: 1
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 0
Test Case  405 | Error: 1
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 1
Test Case  411 | Error: 1
Test Case  412 | Error: 1
Test Case  413 | Error: 1
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 1
Test Case  423 | Error: 1
Test Case  424 | Error: 1
Test Case  425 | Error: 1
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 0
Test Case  435 | Error: 1
Test Case  436 | Error: 1
Test Case  437 | Error: 1
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 0
Test Case  444 | Error: 1
Test Case  445 | Error: 1
Test Case  446 | Error: 0
Test Case  447 | Error: 1
Test Case  448 | Error: 1
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 1
Test Case  453 | Error: 1
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 1
Test Case  458 | Error: 0
Test Case  459 | Error: 1
Test Case  460 | Error: 1
Test Case  461 | Error: 1
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 1
Test Case  465 | Error: 1
Test Case  466 | Error: 1
Test Case  467 | Error: 1
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 1
Test Case  476 | Error: 1
Test Case  477 | Error: 0
Test Case  478 | Error: 1
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 1
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 1
Test Case  486 | Error: 1
Test Case  487 | Error: 1
Test Case  488 | Error: 0
Test Case  489 | Error: 1
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 1
Test Case  494 | Error: 1
Test Case  495 | Error: 1
Test Case  496 | Error: 0
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 0
Test Case  503 | Error: 1
Test Case  504 | Error: 1
Test Case  505 | Error: 0
Test Case  506 | Error: 1
Test Case  507 | Error: 1
Test Case  508 | Error: 1
Test Case  509 | Error: 0
Test Case  510 | Error: 1
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 1
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 1
Test Case  518 | Error: 1
Test Case  519 | Error: 1
Test Case  520 | Error: 1
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 1
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 1
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 0
Test Case  533 | Error: 1
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 1
Test Case  545 | Error: 0
Test Case  546 | Error: 1
Test Case  547 | Error: 1
Test Case  548 | Error: 1
Test Case  549 | Error: 1
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 1
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 1
Test Case  557 | Error: 1
Test Case  558 | Error: 0
Test Case  559 | Error: 1
Test Case  560 | Error: 1
Test Case  561 | Error: 1
Test Case  562 | Error: 1
Test Case  563 | Error: 0
Test Case  564 | Error: 1
Test Case  565 | Error: 0
Test Case  566 | Error: 1
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 1
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 1
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 1
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 1
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 1
Test Case  604 | Error: 1
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 1
Test Case  608 | Error: 1
Test Case  609 | Error: 1
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 1
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 1
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 1
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 0
Test Case  626 | Error: 1
Test Case  627 | Error: 1
Test Case  628 | Error: 1
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 1
Test Case  632 | Error: 0
Test Case  633 | Error: 1
Test Case  634 | Error: 0
Test Case  635 | Error: 1
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 1
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 1
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 1
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 0
Test Case  655 | Error: 1
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 1
Test Case  659 | Error: 0
Test Case  660 | Error: 1
Test Case  661 | Error: 1
Test Case  662 | Error: 0
Test Case  663 | Error: 1
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 1
Test Case  667 | Error: 1
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 1
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 1
Test Case  678 | Error: 1
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 1
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 1
Test Case  706 | Error: 1
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 1
Test Case  710 | Error: 1
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 1
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 1
Test Case  720 | Error: 0
Test Case  721 | Error: 1
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 1
Test Case  730 | Error: 1
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 1
Test Case  734 | Error: 0
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 1
Test Case  738 | Error: 0
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 1
Test Case  748 | Error: 1
Test Case  749 | Error: 1
Test Case  750 | Error: 0
Test Case  751 | Error: 1
Test Case  752 | Error: 0
Test Case  753 | Error: 1
Test Case  754 | Error: 0
Test Case  755 | Error: 1
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 1
Test Case  761 | Error: 1
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 1
Test Case  766 | Error: 1
Test Case  767 | Error: 1
Test Case  768 | Error: 1
Test Case  769 | Error: 0
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 1
Test Case  776 | Error: 1
Test Case  777 | Error: 0
Test Case  778 | Error: 1
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 1
Test Case  783 | Error: 1
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 1
Test Case  792 | Error: 1
Test Case  793 | Error: 1
Test Case  794 | Error: 1
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 1
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 1
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 1
Test Case  822 | Error: 1
Test Case  823 | Error: 0
Test Case  824 | Error: 1
Test Case  825 | Error: 1
Test Case  826 | Error: 0
Test Case  827 | Error: 1
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 1
Test Case  833 | Error: 1
Test Case  834 | Error: 0
Test Case  835 | Error: 1
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 1
Test Case  839 | Error: 0
Test Case  840 | Error: 1
Test Case  841 | Error: 1
Test Case  842 | Error: 1
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 1
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 1
Test Case  860 | Error: 1
Test Case  861 | Error: 1
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 1
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 1
Test Case  872 | Error: 0
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 1
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 1
Test Case  886 | Error: 1
Test Case  887 | Error: 0
Test Case  888 | Error: 1
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 1
Test Case  897 | Error: 0
Test Case  898 | Error: 1
Test Case  899 | Error: 0
Test Case  900 | Error: 1
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 1
Test Case  906 | Error: 1
Test Case  907 | Error: 1
Test Case  908 | Error: 1
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 1
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 1
Test Case  916 | Error: 1
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 1
Test Case  921 | Error: 1
Test Case  922 | Error: 1
Test Case  923 | Error: 0
Test Case  924 | Error: 1
Test Case  925 | Error: 1
Test Case  926 | Error: 0
Test Case  927 | Error: 1
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 1
Test Case  931 | Error: 1
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 1
Test Case  936 | Error: 1
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 1
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 1
Test Case  944 | Error: 1
Test Case  945 | Error: 1
Test Case  946 | Error: 0
Test Case  947 | Error: 1
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 1
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 1
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 1
Test Case  963 | Error: 1
Test Case  964 | Error: 1
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 1
Test Case  976 | Error: 0
Test Case  977 | Error: 1
Test Case  978 | Error: 1
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 1
Test Case  983 | Error: 1
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 1
Test Case  987 | Error: 0
Test Case  988 | Error: 1
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 1
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -43                 | Program output: -43                
Correct output: -20                 | Program output: -20                
Correct output: -65                 | Program output: -65                
Correct output: 44                  | Program output: 44                 
Correct output: -52                 | Program output: -52                
Correct output: 7                   | Program output: 61                 
Correct output: -13                 | Program output: -13                
Correct output: 35                  | Program output: 43                 
Correct output: -41                 | Program output: -36                
Correct output: 48                  | Program output: 48                 
Correct output: 64                  | Program output: 64                 
Correct output: -23                 | Program output: -23                
Correct output: -19                 | Program output: -19                
Correct output: 30                  | Program output: 30                 
Correct output: -91                 | Program output: -91                
Correct output: 9                   | Program output: 9                  
Correct output: 10                  | Program output: 22                 
Correct output: 13                  | Program output: 85                 
Correct output: 21                  | Program output: 54                 
Correct output: 39                  | Program output: 91                 
Correct output: 24                  | Program output: 24                 
Correct output: 31                  | Program output: 31                 
Correct output: 2                   | Program output: 43                 
Correct output: 4                   | Program output: 4                  
Correct output: 20                  | Program output: 66                 
Correct output: 58                  | Program output: 58                 
Correct output: 23                  | Program output: 23                 
Correct output: 22                  | Program output: 22                 
Correct output: 5                   | Program output: 28                 
Correct output: 32                  | Program output: 32                 
Correct output: 3                   | Program output: 3                  
Correct output: 18                  | Program output: 18                 
Correct output: 10                  | Program output: 10                 
Correct output: 41                  | Program output: 61                 
Correct output: 37                  | Program output: 37                 
Correct output: 0                   | Program output: 55                 
Correct output: -23                 | Program output: -23                
Correct output: -90                 | Program output: -90                
Correct output: -44                 | Program output: 24                 
Correct output: 15                  | Program output: 15                 
Correct output: -62                 | Program output: -30                
Correct output: -44                 | Program output: 48                 
Correct output: -55                 | Program output: -55                
Correct output: -70                 | Program output: -70                
Correct output: -89                 | Program output: -89                
Correct output: -51                 | Program output: -51                
Correct output: -69                 | Program output: 5                  
Correct output: -99                 | Program output: -73                
Correct output: -96                 | Program output: -60                
Correct output: -74                 | Program output: 1-74               
Correct output: -31                 | Program output: -31                
Correct output: -71                 | Program output: -2                 
Correct output: -80                 | Program output: -80                
Correct output: -96                 | Program output: -55                
Correct output: -57                 | Program output: 50                 
Correct output: -63                 | Program output: 48                 
Correct output: -90                 | Program output: -26                
Correct output: -56                 | Program output: 73                 
Correct output: -53                 | Program output: -37                
Correct output: -60                 | Program output: -25                
Correct output: -94                 | Program output: -94                
Correct output: -78                 | Program output: -78                
Correct output: -58                 | Program output: -32                
Correct output: -34                 | Program output: -34                
Correct output: -69                 | Program output: -69                
Correct output: -100                | Program output: -30                
Correct output: -78                 | Program output: -64                
Correct output: -63                 | Program output: -63                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: -64                
Correct output: -39                 | Program output: -39                
Correct output: -69                 | Program output: -69                
Correct output: -29                 | Program output: -2                 
Correct output: -92                 | Program output: -92                
Correct output: -44                 | Program output: 20                 
Correct output: -98                 | Program output: -98                
Correct output: -32                 | Program output: -32                
Correct output: -31                 | Program output: -31                
Correct output: -75                 | Program output: -7                 
Correct output: -67                 | Program output: -67                
Correct output: -57                 | Program output: -57                
Correct output: -69                 | Program output: 79                 
Correct output: -50                 | Program output: -26                
Correct output: -92                 | Program output: -92                
Correct output: -92                 | Program output: -81                
Correct output: -17                 | Program output: -17                
Correct output: -94                 | Program output: 1                  
Correct output: -80                 | Program output: -79                
Correct output: -90                 | Program output: -51                
Correct output: -99                 | Program output: 40                 
Correct output: -43                 | Program output: -43                
Correct output: -51                 | Program output: -51                
Correct output: -86                 | Program output: -86                
Correct output: -93                 | Program output: -93                
Correct output: -76                 | Program output: 1-76               
;;******************************
