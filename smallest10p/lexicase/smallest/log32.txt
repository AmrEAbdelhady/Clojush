Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 2000
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-63 -56 -56 -56] -63] [[20 20 20 43] 20] [[99 99 99 -70] -70] [[-87 68 -87 -87] -87] [[62 62 62 -28] -28] [[20 60 60 60] 20] [[100 73 100 100] 73] [[-1 76 -1 -1] -1] [[69 33 33 33] 33] [[-29 -29 31 -29] -29] [(69 69 69 69) 69] [(-93 -93 -93 -93) -93] [(-73 -73 -73 -73) -73] [(-11 -11 -11 -11) -11] [(38 38 38 38) 38] [(53 42 63 14) 14] [(77 14 58 87) 14] [(49 49 96 8) 8] [(57 66 60 32) 32] [(22 83 25 96) 22] [(17 76 43 32) 17] [(82 21 72 13) 13] [(57 83 77 71) 57] [(95 12 84 54) 12] [(35 57 62 95) 35] [(64 60 65 61) 60] [(31 85 59 59) 31] [(91 53 24 62) 24] [(80 59 92 3) 3] [(46 49 69 48) 46] [(98 58 56 81) 56] [(29 82 97 95) 29] [(53 0 93 2) 0] [(17 39 100 61) 17] [(3 61 74 59) 3] [(1 81 58 -39) -39] [(40 2 5 -44) -44] [(-44 -12 -64 -97) -97] [(-47 11 -13 -76) -76] [(-11 74 -3 66) -11] [(-95 91 -15 -84) -95] [(74 31 -78 -56) -78] [(-24 -97 -75 69) -97] [(-40 26 6 -8) -40] [(-92 67 43 -49) -92] [(55 12 48 7) 7] [(-1 8 46 9) -1] [(40 -71 26 87) -71] [(21 -27 69 91) -27] [(-82 29 -19 -51) -82] [(46 13 9 -73) -73] [(-9 76 -88 58) -88] [(-52 88 66 41) -52] [(-59 -79 82 -14) -79] [(-71 70 -17 82) -71] [(-53 96 51 43) -53] [(-64 -40 16 25) -64] [(-68 -10 68 60) -68] [(-65 14 28 39) -65] [(1 12 44 -76) -76] [(-13 -55 10 9) -55] [(-50 22 -87 -84) -87] [(6 -39 -40 -4) -40] [(-95 -27 19 65) -95] [(-55 -66 -68 28) -68] [(-28 74 -13 -7) -28] [(-80 -84 100 -83) -84] [(-40 -2 -92 -55) -92] [(-27 -18 73 -67) -67] [(-61 -67 -56 88) -67] [(-47 -65 -9 -16) -65] [(10 -76 -28 66) -76] [(-41 57 -87 -15) -87] [(18 3 -64 41) -64] [(70 73 73 -24) -24] [(98 -35 -6 66) -35] [(-33 7 79 63) -33] [(22 -17 -4 24) -17] [(16 -91 -27 -58) -91] [(-74 42 4 84) -74] [(-31 -40 -43 42) -43] [(-90 -35 -18 35) -90] [(83 -40 -33 -89) -89] [(60 74 23 6) 6] [(-49 -5 -22 94) -49] [(-8 25 -91 -66) -91] [(-61 -82 -34 27) -82] [(22 -36 -39 49) -39] [(-4 90 -83 -58) -83] [(47 -37 76 89) -37] [(30 -76 -70 68) -76] [(8 -11 36 -19) -19] [(-6 78 39 -73) -73] [(-87 -87 48 18) -87] [(-39 91 11 -13) -39])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[-63 -56 -56 -56] -63]
Train Case:   6 | Input/Output: [[20 20 20 43] 20]
Train Case:   7 | Input/Output: [[99 99 99 -70] -70]
Train Case:   8 | Input/Output: [[-87 68 -87 -87] -87]
Train Case:   9 | Input/Output: [[62 62 62 -28] -28]
Train Case:  10 | Input/Output: [[20 60 60 60] 20]
Train Case:  11 | Input/Output: [[100 73 100 100] 73]
Train Case:  12 | Input/Output: [[-1 76 -1 -1] -1]
Train Case:  13 | Input/Output: [[69 33 33 33] 33]
Train Case:  14 | Input/Output: [[-29 -29 31 -29] -29]
Train Case:  15 | Input/Output: [(69 69 69 69) 69]
Train Case:  16 | Input/Output: [(-93 -93 -93 -93) -93]
Train Case:  17 | Input/Output: [(-73 -73 -73 -73) -73]
Train Case:  18 | Input/Output: [(-11 -11 -11 -11) -11]
Train Case:  19 | Input/Output: [(38 38 38 38) 38]
Train Case:  20 | Input/Output: [(53 42 63 14) 14]
Train Case:  21 | Input/Output: [(77 14 58 87) 14]
Train Case:  22 | Input/Output: [(49 49 96 8) 8]
Train Case:  23 | Input/Output: [(57 66 60 32) 32]
Train Case:  24 | Input/Output: [(22 83 25 96) 22]
Train Case:  25 | Input/Output: [(17 76 43 32) 17]
Train Case:  26 | Input/Output: [(82 21 72 13) 13]
Train Case:  27 | Input/Output: [(57 83 77 71) 57]
Train Case:  28 | Input/Output: [(95 12 84 54) 12]
Train Case:  29 | Input/Output: [(35 57 62 95) 35]
Train Case:  30 | Input/Output: [(64 60 65 61) 60]
Train Case:  31 | Input/Output: [(31 85 59 59) 31]
Train Case:  32 | Input/Output: [(91 53 24 62) 24]
Train Case:  33 | Input/Output: [(80 59 92 3) 3]
Train Case:  34 | Input/Output: [(46 49 69 48) 46]
Train Case:  35 | Input/Output: [(98 58 56 81) 56]
Train Case:  36 | Input/Output: [(29 82 97 95) 29]
Train Case:  37 | Input/Output: [(53 0 93 2) 0]
Train Case:  38 | Input/Output: [(17 39 100 61) 17]
Train Case:  39 | Input/Output: [(3 61 74 59) 3]
Train Case:  40 | Input/Output: [(1 81 58 -39) -39]
Train Case:  41 | Input/Output: [(40 2 5 -44) -44]
Train Case:  42 | Input/Output: [(-44 -12 -64 -97) -97]
Train Case:  43 | Input/Output: [(-47 11 -13 -76) -76]
Train Case:  44 | Input/Output: [(-11 74 -3 66) -11]
Train Case:  45 | Input/Output: [(-95 91 -15 -84) -95]
Train Case:  46 | Input/Output: [(74 31 -78 -56) -78]
Train Case:  47 | Input/Output: [(-24 -97 -75 69) -97]
Train Case:  48 | Input/Output: [(-40 26 6 -8) -40]
Train Case:  49 | Input/Output: [(-92 67 43 -49) -92]
Train Case:  50 | Input/Output: [(55 12 48 7) 7]
Train Case:  51 | Input/Output: [(-1 8 46 9) -1]
Train Case:  52 | Input/Output: [(40 -71 26 87) -71]
Train Case:  53 | Input/Output: [(21 -27 69 91) -27]
Train Case:  54 | Input/Output: [(-82 29 -19 -51) -82]
Train Case:  55 | Input/Output: [(46 13 9 -73) -73]
Train Case:  56 | Input/Output: [(-9 76 -88 58) -88]
Train Case:  57 | Input/Output: [(-52 88 66 41) -52]
Train Case:  58 | Input/Output: [(-59 -79 82 -14) -79]
Train Case:  59 | Input/Output: [(-71 70 -17 82) -71]
Train Case:  60 | Input/Output: [(-53 96 51 43) -53]
Train Case:  61 | Input/Output: [(-64 -40 16 25) -64]
Train Case:  62 | Input/Output: [(-68 -10 68 60) -68]
Train Case:  63 | Input/Output: [(-65 14 28 39) -65]
Train Case:  64 | Input/Output: [(1 12 44 -76) -76]
Train Case:  65 | Input/Output: [(-13 -55 10 9) -55]
Train Case:  66 | Input/Output: [(-50 22 -87 -84) -87]
Train Case:  67 | Input/Output: [(6 -39 -40 -4) -40]
Train Case:  68 | Input/Output: [(-95 -27 19 65) -95]
Train Case:  69 | Input/Output: [(-55 -66 -68 28) -68]
Train Case:  70 | Input/Output: [(-28 74 -13 -7) -28]
Train Case:  71 | Input/Output: [(-80 -84 100 -83) -84]
Train Case:  72 | Input/Output: [(-40 -2 -92 -55) -92]
Train Case:  73 | Input/Output: [(-27 -18 73 -67) -67]
Train Case:  74 | Input/Output: [(-61 -67 -56 88) -67]
Train Case:  75 | Input/Output: [(-47 -65 -9 -16) -65]
Train Case:  76 | Input/Output: [(10 -76 -28 66) -76]
Train Case:  77 | Input/Output: [(-41 57 -87 -15) -87]
Train Case:  78 | Input/Output: [(18 3 -64 41) -64]
Train Case:  79 | Input/Output: [(70 73 73 -24) -24]
Train Case:  80 | Input/Output: [(98 -35 -6 66) -35]
Train Case:  81 | Input/Output: [(-33 7 79 63) -33]
Train Case:  82 | Input/Output: [(22 -17 -4 24) -17]
Train Case:  83 | Input/Output: [(16 -91 -27 -58) -91]
Train Case:  84 | Input/Output: [(-74 42 4 84) -74]
Train Case:  85 | Input/Output: [(-31 -40 -43 42) -43]
Train Case:  86 | Input/Output: [(-90 -35 -18 35) -90]
Train Case:  87 | Input/Output: [(83 -40 -33 -89) -89]
Train Case:  88 | Input/Output: [(60 74 23 6) 6]
Train Case:  89 | Input/Output: [(-49 -5 -22 94) -49]
Train Case:  90 | Input/Output: [(-8 25 -91 -66) -91]
Train Case:  91 | Input/Output: [(-61 -82 -34 27) -82]
Train Case:  92 | Input/Output: [(22 -36 -39 49) -39]
Train Case:  93 | Input/Output: [(-4 90 -83 -58) -83]
Train Case:  94 | Input/Output: [(47 -37 76 89) -37]
Train Case:  95 | Input/Output: [(30 -76 -70 68) -76]
Train Case:  96 | Input/Output: [(8 -11 36 -19) -19]
Train Case:  97 | Input/Output: [(-6 78 39 -73) -73]
Train Case:  98 | Input/Output: [(-87 -87 48 18) -87]
Train Case:  99 | Input/Output: [(-39 91 11 -13) -39]
Test Case:   0 | Input/Output: [[54 54 14 54] 14]
Test Case:   1 | Input/Output: [[-34 -34 -2 -34] -34]
Test Case:   2 | Input/Output: [[-17 -17 -17 -65] -65]
Test Case:   3 | Input/Output: [[27 -43 27 27] -43]
Test Case:   4 | Input/Output: [[-69 -69 -69 71] -69]
Test Case:   5 | Input/Output: [[49 49 49 24] 24]
Test Case:   6 | Input/Output: [[100 100 38 100] 38]
Test Case:   7 | Input/Output: [[-34 -34 -88 -34] -88]
Test Case:   8 | Input/Output: [[-58 -66 -66 -66] -66]
Test Case:   9 | Input/Output: [[69 68 68 68] 68]
Test Case:  10 | Input/Output: [[-8 -75 -8 -8] -75]
Test Case:  11 | Input/Output: [[98 76 76 76] 76]
Test Case:  12 | Input/Output: [[90 90 23 90] 23]
Test Case:  13 | Input/Output: [[-40 -40 -21 -40] -40]
Test Case:  14 | Input/Output: [[50 50 50 -57] -57]
Test Case:  15 | Input/Output: [[-77 12 -77 -77] -77]
Test Case:  16 | Input/Output: [[27 39 39 39] 27]
Test Case:  17 | Input/Output: [[80 80 80 -85] -85]
Test Case:  18 | Input/Output: [[19 -21 -21 -21] -21]
Test Case:  19 | Input/Output: [[-30 -30 67 -30] -30]
Test Case:  20 | Input/Output: [[64 -74 64 64] -74]
Test Case:  21 | Input/Output: [[-87 -80 -87 -87] -87]
Test Case:  22 | Input/Output: [[76 76 -43 76] -43]
Test Case:  23 | Input/Output: [[100 79 79 79] 79]
Test Case:  24 | Input/Output: [[-2 97 97 97] -2]
Test Case:  25 | Input/Output: [[36 -33 36 36] -33]
Test Case:  26 | Input/Output: [[58 34 58 58] 34]
Test Case:  27 | Input/Output: [[89 0 89 89] 0]
Test Case:  28 | Input/Output: [[-67 -67 -67 30] -67]
Test Case:  29 | Input/Output: [[56 56 56 51] 51]
Test Case:  30 | Input/Output: [[79 -52 -52 -52] -52]
Test Case:  31 | Input/Output: [[4 4 4 57] 4]
Test Case:  32 | Input/Output: [[-9 -70 -9 -9] -70]
Test Case:  33 | Input/Output: [[-52 39 39 39] -52]
Test Case:  34 | Input/Output: [[-20 -20 71 -20] -20]
Test Case:  35 | Input/Output: [[-71 -17 -17 -17] -71]
Test Case:  36 | Input/Output: [[-39 92 -39 -39] -39]
Test Case:  37 | Input/Output: [[-10 -20 -10 -10] -20]
Test Case:  38 | Input/Output: [[-84 -84 -84 -32] -84]
Test Case:  39 | Input/Output: [[78 78 78 96] 78]
Test Case:  40 | Input/Output: [[-72 -32 -72 -72] -72]
Test Case:  41 | Input/Output: [[-63 -63 -56 -63] -63]
Test Case:  42 | Input/Output: [[-85 -21 -21 -21] -85]
Test Case:  43 | Input/Output: [[97 97 97 -4] -4]
Test Case:  44 | Input/Output: [[-36 -54 -54 -54] -54]
Test Case:  45 | Input/Output: [[-66 10 10 10] -66]
Test Case:  46 | Input/Output: [[91 41 91 91] 41]
Test Case:  47 | Input/Output: [[6 -45 6 6] -45]
Test Case:  48 | Input/Output: [[-21 -87 -21 -21] -87]
Test Case:  49 | Input/Output: [[-70 -70 86 -70] -70]
Test Case:  50 | Input/Output: [[15 15 15 74] 15]
Test Case:  51 | Input/Output: [[-64 15 -64 -64] -64]
Test Case:  52 | Input/Output: [[-20 -20 31 -20] -20]
Test Case:  53 | Input/Output: [[-46 -46 38 -46] -46]
Test Case:  54 | Input/Output: [[-82 -14 -14 -14] -82]
Test Case:  55 | Input/Output: [[93 -55 -55 -55] -55]
Test Case:  56 | Input/Output: [[34 34 34 68] 34]
Test Case:  57 | Input/Output: [[-43 56 -43 -43] -43]
Test Case:  58 | Input/Output: [[66 66 -18 66] -18]
Test Case:  59 | Input/Output: [[92 92 92 92] 92]
Test Case:  60 | Input/Output: [[81 81 81 -93] -93]
Test Case:  61 | Input/Output: [[27 27 83 27] 27]
Test Case:  62 | Input/Output: [[78 29 78 78] 29]
Test Case:  63 | Input/Output: [[-94 72 72 72] -94]
Test Case:  64 | Input/Output: [[-31 17 17 17] -31]
Test Case:  65 | Input/Output: [[-48 33 -48 -48] -48]
Test Case:  66 | Input/Output: [[-47 -47 54 -47] -47]
Test Case:  67 | Input/Output: [[-90 -81 -90 -90] -90]
Test Case:  68 | Input/Output: [[-60 -60 -10 -60] -60]
Test Case:  69 | Input/Output: [[-35 -35 -77 -35] -77]
Test Case:  70 | Input/Output: [[4 39 39 39] 4]
Test Case:  71 | Input/Output: [[67 -43 67 67] -43]
Test Case:  72 | Input/Output: [[-43 -69 -69 -69] -69]
Test Case:  73 | Input/Output: [[62 -47 -47 -47] -47]
Test Case:  74 | Input/Output: [[-73 -11 -11 -11] -73]
Test Case:  75 | Input/Output: [[-65 -65 88 -65] -65]
Test Case:  76 | Input/Output: [[-44 -44 75 -44] -44]
Test Case:  77 | Input/Output: [[-62 -71 -62 -62] -71]
Test Case:  78 | Input/Output: [[-84 -84 -36 -84] -84]
Test Case:  79 | Input/Output: [[19 -60 19 19] -60]
Test Case:  80 | Input/Output: [[12 -13 12 12] -13]
Test Case:  81 | Input/Output: [[87 87 69 87] 69]
Test Case:  82 | Input/Output: [[-58 -58 -59 -58] -59]
Test Case:  83 | Input/Output: [[33 77 33 33] 33]
Test Case:  84 | Input/Output: [[-59 -59 -59 -78] -78]
Test Case:  85 | Input/Output: [[-87 -87 -98 -87] -98]
Test Case:  86 | Input/Output: [[-64 -64 1 -64] -64]
Test Case:  87 | Input/Output: [[26 26 -74 26] -74]
Test Case:  88 | Input/Output: [[88 88 88 57] 57]
Test Case:  89 | Input/Output: [[29 29 46 29] 29]
Test Case:  90 | Input/Output: [[90 90 63 90] 63]
Test Case:  91 | Input/Output: [[-64 -53 -53 -53] -64]
Test Case:  92 | Input/Output: [[-29 -29 58 -29] -29]
Test Case:  93 | Input/Output: [[41 41 41 -90] -90]
Test Case:  94 | Input/Output: [[-99 -99 -74 -99] -99]
Test Case:  95 | Input/Output: [[-39 94 -39 -39] -39]
Test Case:  96 | Input/Output: [[-88 -88 -16 -88] -88]
Test Case:  97 | Input/Output: [[-5 -99 -5 -5] -99]
Test Case:  98 | Input/Output: [[-87 -87 -87 74] -87]
Test Case:  99 | Input/Output: [[55 55 55 8] 8]
Test Case: 100 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 101 | Input/Output: [(38 38 38 38) 38]
Test Case: 102 | Input/Output: [(84 84 84 84) 84]
Test Case: 103 | Input/Output: [(9 9 9 9) 9]
Test Case: 104 | Input/Output: [(0 0 0 0) 0]
Test Case: 105 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 106 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 107 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 108 | Input/Output: [(88 88 88 88) 88]
Test Case: 109 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 110 | Input/Output: [(-35 -35 -35 -35) -35]
Test Case: 111 | Input/Output: [(76 76 76 76) 76]
Test Case: 112 | Input/Output: [(-26 -26 -26 -26) -26]
Test Case: 113 | Input/Output: [(77 77 77 77) 77]
Test Case: 114 | Input/Output: [(93 93 93 93) 93]
Test Case: 115 | Input/Output: [(57 57 57 57) 57]
Test Case: 116 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 117 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 118 | Input/Output: [(74 74 74 74) 74]
Test Case: 119 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 120 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 121 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 122 | Input/Output: [(88 88 88 88) 88]
Test Case: 123 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 124 | Input/Output: [(74 74 74 74) 74]
Test Case: 125 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 126 | Input/Output: [(71 71 71 71) 71]
Test Case: 127 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 128 | Input/Output: [(14 14 14 14) 14]
Test Case: 129 | Input/Output: [(71 71 71 71) 71]
Test Case: 130 | Input/Output: [(-97 -97 -97 -97) -97]
Test Case: 131 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 132 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 133 | Input/Output: [(-86 -86 -86 -86) -86]
Test Case: 134 | Input/Output: [(78 78 78 78) 78]
Test Case: 135 | Input/Output: [(-64 -64 -64 -64) -64]
Test Case: 136 | Input/Output: [(34 34 34 34) 34]
Test Case: 137 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 138 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 139 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 140 | Input/Output: [(-44 -44 -44 -44) -44]
Test Case: 141 | Input/Output: [(61 61 61 61) 61]
Test Case: 142 | Input/Output: [(79 79 79 79) 79]
Test Case: 143 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 144 | Input/Output: [(93 93 93 93) 93]
Test Case: 145 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 146 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 147 | Input/Output: [(63 63 63 63) 63]
Test Case: 148 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 149 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 150 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 151 | Input/Output: [(42 42 42 42) 42]
Test Case: 152 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 153 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 154 | Input/Output: [(75 75 75 75) 75]
Test Case: 155 | Input/Output: [(-17 -17 -17 -17) -17]
Test Case: 156 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 157 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 158 | Input/Output: [(28 28 28 28) 28]
Test Case: 159 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 160 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 161 | Input/Output: [(68 68 68 68) 68]
Test Case: 162 | Input/Output: [(17 17 17 17) 17]
Test Case: 163 | Input/Output: [(-99 -99 -99 -99) -99]
Test Case: 164 | Input/Output: [(-48 -48 -48 -48) -48]
Test Case: 165 | Input/Output: [(76 76 76 76) 76]
Test Case: 166 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 167 | Input/Output: [(29 29 29 29) 29]
Test Case: 168 | Input/Output: [(27 27 27 27) 27]
Test Case: 169 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 170 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 171 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 172 | Input/Output: [(93 93 93 93) 93]
Test Case: 173 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 174 | Input/Output: [(44 44 44 44) 44]
Test Case: 175 | Input/Output: [(78 78 78 78) 78]
Test Case: 176 | Input/Output: [(93 93 93 93) 93]
Test Case: 177 | Input/Output: [(14 14 14 14) 14]
Test Case: 178 | Input/Output: [(-57 -57 -57 -57) -57]
Test Case: 179 | Input/Output: [(39 39 39 39) 39]
Test Case: 180 | Input/Output: [(52 52 52 52) 52]
Test Case: 181 | Input/Output: [(61 61 61 61) 61]
Test Case: 182 | Input/Output: [(-1 -1 -1 -1) -1]
Test Case: 183 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 184 | Input/Output: [(67 67 67 67) 67]
Test Case: 185 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 186 | Input/Output: [(-25 -25 -25 -25) -25]
Test Case: 187 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 188 | Input/Output: [(-29 -29 -29 -29) -29]
Test Case: 189 | Input/Output: [(33 33 33 33) 33]
Test Case: 190 | Input/Output: [(46 46 46 46) 46]
Test Case: 191 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 192 | Input/Output: [(11 11 11 11) 11]
Test Case: 193 | Input/Output: [(68 68 68 68) 68]
Test Case: 194 | Input/Output: [(60 60 60 60) 60]
Test Case: 195 | Input/Output: [(50 50 50 50) 50]
Test Case: 196 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 197 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 198 | Input/Output: [(-42 -42 -42 -42) -42]
Test Case: 199 | Input/Output: [(60 60 60 60) 60]
Test Case: 200 | Input/Output: [(78 20 6 18) 6]
Test Case: 201 | Input/Output: [(80 31 16 94) 16]
Test Case: 202 | Input/Output: [(4 90 25 34) 4]
Test Case: 203 | Input/Output: [(15 65 75 91) 15]
Test Case: 204 | Input/Output: [(97 11 63 5) 5]
Test Case: 205 | Input/Output: [(95 75 60 62) 60]
Test Case: 206 | Input/Output: [(63 78 95 25) 25]
Test Case: 207 | Input/Output: [(20 52 44 74) 20]
Test Case: 208 | Input/Output: [(86 92 48 100) 48]
Test Case: 209 | Input/Output: [(62 91 2 60) 2]
Test Case: 210 | Input/Output: [(2 21 73 71) 2]
Test Case: 211 | Input/Output: [(5 0 25 73) 0]
Test Case: 212 | Input/Output: [(2 34 47 40) 2]
Test Case: 213 | Input/Output: [(94 60 60 57) 57]
Test Case: 214 | Input/Output: [(78 59 39 82) 39]
Test Case: 215 | Input/Output: [(93 0 11 72) 0]
Test Case: 216 | Input/Output: [(33 98 27 0) 0]
Test Case: 217 | Input/Output: [(84 40 23 12) 12]
Test Case: 218 | Input/Output: [(12 83 19 91) 12]
Test Case: 219 | Input/Output: [(45 77 82 79) 45]
Test Case: 220 | Input/Output: [(15 71 58 43) 15]
Test Case: 221 | Input/Output: [(70 64 79 48) 48]
Test Case: 222 | Input/Output: [(32 98 20 9) 9]
Test Case: 223 | Input/Output: [(35 57 84 46) 35]
Test Case: 224 | Input/Output: [(3 63 32 14) 3]
Test Case: 225 | Input/Output: [(25 36 57 15) 15]
Test Case: 226 | Input/Output: [(40 4 81 89) 4]
Test Case: 227 | Input/Output: [(33 78 37 74) 33]
Test Case: 228 | Input/Output: [(46 1 19 90) 1]
Test Case: 229 | Input/Output: [(18 99 86 95) 18]
Test Case: 230 | Input/Output: [(53 16 36 17) 16]
Test Case: 231 | Input/Output: [(36 91 32 6) 6]
Test Case: 232 | Input/Output: [(90 36 55 90) 36]
Test Case: 233 | Input/Output: [(0 87 1 32) 0]
Test Case: 234 | Input/Output: [(77 55 76 16) 16]
Test Case: 235 | Input/Output: [(45 15 89 43) 15]
Test Case: 236 | Input/Output: [(77 53 98 76) 53]
Test Case: 237 | Input/Output: [(63 54 32 59) 32]
Test Case: 238 | Input/Output: [(89 56 68 12) 12]
Test Case: 239 | Input/Output: [(43 9 7 15) 7]
Test Case: 240 | Input/Output: [(93 73 93 19) 19]
Test Case: 241 | Input/Output: [(28 42 23 62) 23]
Test Case: 242 | Input/Output: [(29 73 49 66) 29]
Test Case: 243 | Input/Output: [(45 67 50 63) 45]
Test Case: 244 | Input/Output: [(70 100 15 36) 15]
Test Case: 245 | Input/Output: [(58 76 95 85) 58]
Test Case: 246 | Input/Output: [(46 6 20 39) 6]
Test Case: 247 | Input/Output: [(8 54 91 69) 8]
Test Case: 248 | Input/Output: [(37 71 11 40) 11]
Test Case: 249 | Input/Output: [(59 19 70 92) 19]
Test Case: 250 | Input/Output: [(35 92 82 19) 19]
Test Case: 251 | Input/Output: [(68 71 40 45) 40]
Test Case: 252 | Input/Output: [(11 73 86 57) 11]
Test Case: 253 | Input/Output: [(13 94 84 90) 13]
Test Case: 254 | Input/Output: [(44 50 45 99) 44]
Test Case: 255 | Input/Output: [(92 12 44 33) 12]
Test Case: 256 | Input/Output: [(50 48 64 38) 38]
Test Case: 257 | Input/Output: [(11 31 85 80) 11]
Test Case: 258 | Input/Output: [(48 96 78 43) 43]
Test Case: 259 | Input/Output: [(67 84 10 27) 10]
Test Case: 260 | Input/Output: [(1 16 48 100) 1]
Test Case: 261 | Input/Output: [(46 21 60 14) 14]
Test Case: 262 | Input/Output: [(33 16 33 40) 16]
Test Case: 263 | Input/Output: [(100 4 99 22) 4]
Test Case: 264 | Input/Output: [(75 66 11 87) 11]
Test Case: 265 | Input/Output: [(99 48 2 62) 2]
Test Case: 266 | Input/Output: [(13 19 22 43) 13]
Test Case: 267 | Input/Output: [(91 17 69 72) 17]
Test Case: 268 | Input/Output: [(55 88 81 6) 6]
Test Case: 269 | Input/Output: [(49 65 26 48) 26]
Test Case: 270 | Input/Output: [(49 32 77 25) 25]
Test Case: 271 | Input/Output: [(49 94 93 9) 9]
Test Case: 272 | Input/Output: [(28 11 47 48) 11]
Test Case: 273 | Input/Output: [(53 8 44 85) 8]
Test Case: 274 | Input/Output: [(41 44 58 7) 7]
Test Case: 275 | Input/Output: [(95 81 62 92) 62]
Test Case: 276 | Input/Output: [(21 34 44 17) 17]
Test Case: 277 | Input/Output: [(80 0 40 1) 0]
Test Case: 278 | Input/Output: [(80 77 23 62) 23]
Test Case: 279 | Input/Output: [(95 98 86 33) 33]
Test Case: 280 | Input/Output: [(35 33 22 77) 22]
Test Case: 281 | Input/Output: [(94 17 41 99) 17]
Test Case: 282 | Input/Output: [(58 65 84 76) 58]
Test Case: 283 | Input/Output: [(57 48 7 38) 7]
Test Case: 284 | Input/Output: [(63 65 64 31) 31]
Test Case: 285 | Input/Output: [(33 12 95 48) 12]
Test Case: 286 | Input/Output: [(76 86 59 20) 20]
Test Case: 287 | Input/Output: [(7 35 92 78) 7]
Test Case: 288 | Input/Output: [(27 49 16 21) 16]
Test Case: 289 | Input/Output: [(29 49 71 5) 5]
Test Case: 290 | Input/Output: [(43 1 41 93) 1]
Test Case: 291 | Input/Output: [(44 12 87 19) 12]
Test Case: 292 | Input/Output: [(74 3 8 85) 3]
Test Case: 293 | Input/Output: [(32 50 34 6) 6]
Test Case: 294 | Input/Output: [(35 2 85 58) 2]
Test Case: 295 | Input/Output: [(46 13 67 95) 13]
Test Case: 296 | Input/Output: [(55 21 13 91) 13]
Test Case: 297 | Input/Output: [(18 69 36 46) 18]
Test Case: 298 | Input/Output: [(53 96 70 22) 22]
Test Case: 299 | Input/Output: [(60 47 80 100) 47]
Test Case: 300 | Input/Output: [(56 33 72 12) 12]
Test Case: 301 | Input/Output: [(27 84 64 95) 27]
Test Case: 302 | Input/Output: [(28 58 90 83) 28]
Test Case: 303 | Input/Output: [(53 20 21 14) 14]
Test Case: 304 | Input/Output: [(41 96 51 87) 41]
Test Case: 305 | Input/Output: [(23 78 76 49) 23]
Test Case: 306 | Input/Output: [(3 3 90 94) 3]
Test Case: 307 | Input/Output: [(32 47 59 91) 32]
Test Case: 308 | Input/Output: [(62 84 28 67) 28]
Test Case: 309 | Input/Output: [(7 62 99 81) 7]
Test Case: 310 | Input/Output: [(3 6 20 62) 3]
Test Case: 311 | Input/Output: [(74 89 61 100) 61]
Test Case: 312 | Input/Output: [(66 66 87 23) 23]
Test Case: 313 | Input/Output: [(19 27 53 60) 19]
Test Case: 314 | Input/Output: [(73 75 81 100) 73]
Test Case: 315 | Input/Output: [(69 4 83 30) 4]
Test Case: 316 | Input/Output: [(35 46 32 28) 28]
Test Case: 317 | Input/Output: [(70 99 98 8) 8]
Test Case: 318 | Input/Output: [(14 33 22 32) 14]
Test Case: 319 | Input/Output: [(46 98 100 54) 46]
Test Case: 320 | Input/Output: [(39 66 95 97) 39]
Test Case: 321 | Input/Output: [(30 22 21 74) 21]
Test Case: 322 | Input/Output: [(68 40 58 68) 40]
Test Case: 323 | Input/Output: [(10 93 70 6) 6]
Test Case: 324 | Input/Output: [(6 68 16 30) 6]
Test Case: 325 | Input/Output: [(69 80 41 80) 41]
Test Case: 326 | Input/Output: [(69 20 31 73) 20]
Test Case: 327 | Input/Output: [(49 19 4 82) 4]
Test Case: 328 | Input/Output: [(52 99 85 76) 52]
Test Case: 329 | Input/Output: [(63 44 69 53) 44]
Test Case: 330 | Input/Output: [(81 3 76 57) 3]
Test Case: 331 | Input/Output: [(58 26 69 98) 26]
Test Case: 332 | Input/Output: [(48 99 67 59) 48]
Test Case: 333 | Input/Output: [(81 77 19 60) 19]
Test Case: 334 | Input/Output: [(10 81 26 66) 10]
Test Case: 335 | Input/Output: [(1 55 72 18) 1]
Test Case: 336 | Input/Output: [(33 45 81 13) 13]
Test Case: 337 | Input/Output: [(63 33 37 75) 33]
Test Case: 338 | Input/Output: [(51 1 96 4) 1]
Test Case: 339 | Input/Output: [(53 16 92 94) 16]
Test Case: 340 | Input/Output: [(32 16 31 6) 6]
Test Case: 341 | Input/Output: [(97 28 100 59) 28]
Test Case: 342 | Input/Output: [(64 96 89 49) 49]
Test Case: 343 | Input/Output: [(17 25 60 61) 17]
Test Case: 344 | Input/Output: [(30 12 8 80) 8]
Test Case: 345 | Input/Output: [(64 56 77 47) 47]
Test Case: 346 | Input/Output: [(70 97 55 86) 55]
Test Case: 347 | Input/Output: [(2 22 43 8) 2]
Test Case: 348 | Input/Output: [(21 59 70 95) 21]
Test Case: 349 | Input/Output: [(22 60 1 39) 1]
Test Case: 350 | Input/Output: [(59 86 58 28) 28]
Test Case: 351 | Input/Output: [(5 13 54 87) 5]
Test Case: 352 | Input/Output: [(34 14 92 84) 14]
Test Case: 353 | Input/Output: [(50 37 81 9) 9]
Test Case: 354 | Input/Output: [(22 25 65 26) 22]
Test Case: 355 | Input/Output: [(0 50 84 57) 0]
Test Case: 356 | Input/Output: [(84 15 98 25) 15]
Test Case: 357 | Input/Output: [(22 5 2 78) 2]
Test Case: 358 | Input/Output: [(67 39 68 17) 17]
Test Case: 359 | Input/Output: [(23 21 80 33) 21]
Test Case: 360 | Input/Output: [(25 21 63 11) 11]
Test Case: 361 | Input/Output: [(9 98 61 9) 9]
Test Case: 362 | Input/Output: [(62 65 8 33) 8]
Test Case: 363 | Input/Output: [(72 87 83 80) 72]
Test Case: 364 | Input/Output: [(56 17 91 13) 13]
Test Case: 365 | Input/Output: [(74 53 76 49) 49]
Test Case: 366 | Input/Output: [(61 79 47 44) 44]
Test Case: 367 | Input/Output: [(18 12 28 9) 9]
Test Case: 368 | Input/Output: [(91 24 4 48) 4]
Test Case: 369 | Input/Output: [(21 24 17 82) 17]
Test Case: 370 | Input/Output: [(19 8 27 18) 8]
Test Case: 371 | Input/Output: [(20 81 86 55) 20]
Test Case: 372 | Input/Output: [(50 9 86 57) 9]
Test Case: 373 | Input/Output: [(65 4 62 35) 4]
Test Case: 374 | Input/Output: [(65 64 81 98) 64]
Test Case: 375 | Input/Output: [(93 29 31 80) 29]
Test Case: 376 | Input/Output: [(54 82 7 64) 7]
Test Case: 377 | Input/Output: [(34 24 44 21) 21]
Test Case: 378 | Input/Output: [(12 13 25 40) 12]
Test Case: 379 | Input/Output: [(33 4 31 47) 4]
Test Case: 380 | Input/Output: [(86 29 0 57) 0]
Test Case: 381 | Input/Output: [(55 52 2 43) 2]
Test Case: 382 | Input/Output: [(36 59 78 26) 26]
Test Case: 383 | Input/Output: [(69 10 26 8) 8]
Test Case: 384 | Input/Output: [(68 14 96 17) 14]
Test Case: 385 | Input/Output: [(8 18 85 31) 8]
Test Case: 386 | Input/Output: [(2 70 38 23) 2]
Test Case: 387 | Input/Output: [(52 84 53 10) 10]
Test Case: 388 | Input/Output: [(9 85 10 11) 9]
Test Case: 389 | Input/Output: [(32 54 41 21) 21]
Test Case: 390 | Input/Output: [(54 26 46 86) 26]
Test Case: 391 | Input/Output: [(87 29 39 99) 29]
Test Case: 392 | Input/Output: [(19 93 77 26) 19]
Test Case: 393 | Input/Output: [(7 79 44 46) 7]
Test Case: 394 | Input/Output: [(63 38 30 77) 30]
Test Case: 395 | Input/Output: [(70 59 28 67) 28]
Test Case: 396 | Input/Output: [(62 48 96 36) 36]
Test Case: 397 | Input/Output: [(78 50 91 58) 50]
Test Case: 398 | Input/Output: [(40 70 38 75) 38]
Test Case: 399 | Input/Output: [(56 83 8 7) 7]
Test Case: 400 | Input/Output: [(70 -10 -34 93) -34]
Test Case: 401 | Input/Output: [(-80 -95 62 -92) -95]
Test Case: 402 | Input/Output: [(-97 -61 -67 50) -97]
Test Case: 403 | Input/Output: [(91 -42 -85 33) -85]
Test Case: 404 | Input/Output: [(10 -54 -68 26) -68]
Test Case: 405 | Input/Output: [(10 47 -9 -30) -30]
Test Case: 406 | Input/Output: [(-94 -59 -84 45) -94]
Test Case: 407 | Input/Output: [(-49 -13 -77 100) -77]
Test Case: 408 | Input/Output: [(55 -13 -97 -12) -97]
Test Case: 409 | Input/Output: [(-45 98 -80 -86) -86]
Test Case: 410 | Input/Output: [(-61 -78 23 80) -78]
Test Case: 411 | Input/Output: [(-17 -59 -88 -24) -88]
Test Case: 412 | Input/Output: [(-65 -70 10 69) -70]
Test Case: 413 | Input/Output: [(7 -62 69 -57) -62]
Test Case: 414 | Input/Output: [(-40 -74 26 -25) -74]
Test Case: 415 | Input/Output: [(42 3 -9 -44) -44]
Test Case: 416 | Input/Output: [(25 -58 67 26) -58]
Test Case: 417 | Input/Output: [(78 -87 16 36) -87]
Test Case: 418 | Input/Output: [(-42 95 -47 94) -47]
Test Case: 419 | Input/Output: [(76 -80 39 -11) -80]
Test Case: 420 | Input/Output: [(71 -24 61 71) -24]
Test Case: 421 | Input/Output: [(57 -49 -11 -3) -49]
Test Case: 422 | Input/Output: [(-79 69 5 -44) -79]
Test Case: 423 | Input/Output: [(-29 14 40 58) -29]
Test Case: 424 | Input/Output: [(-66 14 24 -18) -66]
Test Case: 425 | Input/Output: [(-92 91 -69 -41) -92]
Test Case: 426 | Input/Output: [(-55 -59 74 64) -59]
Test Case: 427 | Input/Output: [(-73 -34 -45 -78) -78]
Test Case: 428 | Input/Output: [(-57 46 -98 13) -98]
Test Case: 429 | Input/Output: [(42 -78 88 -59) -78]
Test Case: 430 | Input/Output: [(14 -49 68 -76) -76]
Test Case: 431 | Input/Output: [(39 -51 -11 51) -51]
Test Case: 432 | Input/Output: [(-90 85 22 91) -90]
Test Case: 433 | Input/Output: [(-40 -9 -33 43) -40]
Test Case: 434 | Input/Output: [(-1 -43 27 -2) -43]
Test Case: 435 | Input/Output: [(-13 -19 -7 79) -19]
Test Case: 436 | Input/Output: [(73 15 -47 -62) -62]
Test Case: 437 | Input/Output: [(-33 95 -81 13) -81]
Test Case: 438 | Input/Output: [(21 -45 -87 78) -87]
Test Case: 439 | Input/Output: [(-85 -90 3 97) -90]
Test Case: 440 | Input/Output: [(-57 31 -61 -44) -61]
Test Case: 441 | Input/Output: [(-60 -44 87 -13) -60]
Test Case: 442 | Input/Output: [(-39 -94 18 -26) -94]
Test Case: 443 | Input/Output: [(26 56 -95 -19) -95]
Test Case: 444 | Input/Output: [(40 -89 67 2) -89]
Test Case: 445 | Input/Output: [(0 -77 -31 -85) -85]
Test Case: 446 | Input/Output: [(64 44 50 -18) -18]
Test Case: 447 | Input/Output: [(24 39 33 -96) -96]
Test Case: 448 | Input/Output: [(-54 10 -84 27) -84]
Test Case: 449 | Input/Output: [(79 -22 46 -4) -22]
Test Case: 450 | Input/Output: [(-80 98 59 -49) -80]
Test Case: 451 | Input/Output: [(20 62 -20 -91) -91]
Test Case: 452 | Input/Output: [(-30 94 71 -63) -63]
Test Case: 453 | Input/Output: [(43 -92 9 -5) -92]
Test Case: 454 | Input/Output: [(-48 -24 66 35) -48]
Test Case: 455 | Input/Output: [(-22 2 74 -77) -77]
Test Case: 456 | Input/Output: [(20 55 -47 -26) -47]
Test Case: 457 | Input/Output: [(81 -79 -62 77) -79]
Test Case: 458 | Input/Output: [(51 -94 -71 -66) -94]
Test Case: 459 | Input/Output: [(-96 -12 -46 63) -96]
Test Case: 460 | Input/Output: [(68 -77 -25 20) -77]
Test Case: 461 | Input/Output: [(-92 -15 89 -22) -92]
Test Case: 462 | Input/Output: [(-100 91 24 48) -100]
Test Case: 463 | Input/Output: [(-50 23 -94 73) -94]
Test Case: 464 | Input/Output: [(-69 -74 43 37) -74]
Test Case: 465 | Input/Output: [(-86 -87 16 -16) -87]
Test Case: 466 | Input/Output: [(-82 55 -62 -70) -82]
Test Case: 467 | Input/Output: [(75 -56 -78 78) -78]
Test Case: 468 | Input/Output: [(22 41 98 1) 1]
Test Case: 469 | Input/Output: [(81 -2 -39 64) -39]
Test Case: 470 | Input/Output: [(-94 -70 53 -61) -94]
Test Case: 471 | Input/Output: [(-91 -37 53 -55) -91]
Test Case: 472 | Input/Output: [(47 -18 -4 7) -18]
Test Case: 473 | Input/Output: [(-74 -57 -44 -2) -74]
Test Case: 474 | Input/Output: [(-41 83 54 69) -41]
Test Case: 475 | Input/Output: [(-32 79 -95 56) -95]
Test Case: 476 | Input/Output: [(-17 54 12 11) -17]
Test Case: 477 | Input/Output: [(-40 81 41 24) -40]
Test Case: 478 | Input/Output: [(-34 57 76 -49) -49]
Test Case: 479 | Input/Output: [(-10 -50 -98 -94) -98]
Test Case: 480 | Input/Output: [(-57 84 -92 -54) -92]
Test Case: 481 | Input/Output: [(-14 13 -65 15) -65]
Test Case: 482 | Input/Output: [(0 -34 -30 3) -34]
Test Case: 483 | Input/Output: [(-83 -87 -37 -31) -87]
Test Case: 484 | Input/Output: [(-22 30 40 43) -22]
Test Case: 485 | Input/Output: [(96 -2 -57 -88) -88]
Test Case: 486 | Input/Output: [(61 15 26 -93) -93]
Test Case: 487 | Input/Output: [(-72 4 72 -80) -80]
Test Case: 488 | Input/Output: [(-2 38 -92 -64) -92]
Test Case: 489 | Input/Output: [(-6 -31 -33 -72) -72]
Test Case: 490 | Input/Output: [(3 -52 -74 87) -74]
Test Case: 491 | Input/Output: [(-84 -5 -50 64) -84]
Test Case: 492 | Input/Output: [(-51 36 -39 69) -51]
Test Case: 493 | Input/Output: [(-72 53 36 9) -72]
Test Case: 494 | Input/Output: [(-64 -3 -82 -2) -82]
Test Case: 495 | Input/Output: [(87 61 37 13) 13]
Test Case: 496 | Input/Output: [(84 77 -82 85) -82]
Test Case: 497 | Input/Output: [(-93 69 -22 -83) -93]
Test Case: 498 | Input/Output: [(53 77 85 -29) -29]
Test Case: 499 | Input/Output: [(12 42 -29 -41) -41]
Test Case: 500 | Input/Output: [(78 -90 -93 -100) -100]
Test Case: 501 | Input/Output: [(28 93 100 7) 7]
Test Case: 502 | Input/Output: [(-100 -5 62 37) -100]
Test Case: 503 | Input/Output: [(-41 57 58 31) -41]
Test Case: 504 | Input/Output: [(37 -61 92 74) -61]
Test Case: 505 | Input/Output: [(-29 26 84 30) -29]
Test Case: 506 | Input/Output: [(-92 12 -74 -55) -92]
Test Case: 507 | Input/Output: [(30 79 73 -17) -17]
Test Case: 508 | Input/Output: [(-75 60 -13 89) -75]
Test Case: 509 | Input/Output: [(36 -94 -37 94) -94]
Test Case: 510 | Input/Output: [(91 -44 73 66) -44]
Test Case: 511 | Input/Output: [(-35 -9 -79 92) -79]
Test Case: 512 | Input/Output: [(43 21 -4 -21) -21]
Test Case: 513 | Input/Output: [(43 42 97 73) 42]
Test Case: 514 | Input/Output: [(-39 82 -72 -9) -72]
Test Case: 515 | Input/Output: [(-5 -88 -73 72) -88]
Test Case: 516 | Input/Output: [(-100 -79 38 -14) -100]
Test Case: 517 | Input/Output: [(52 -82 -25 -64) -82]
Test Case: 518 | Input/Output: [(-99 84 73 24) -99]
Test Case: 519 | Input/Output: [(53 11 26 84) 11]
Test Case: 520 | Input/Output: [(91 -8 44 95) -8]
Test Case: 521 | Input/Output: [(-69 -61 3 19) -69]
Test Case: 522 | Input/Output: [(-2 -53 -63 19) -63]
Test Case: 523 | Input/Output: [(95 26 38 -81) -81]
Test Case: 524 | Input/Output: [(28 100 64 -45) -45]
Test Case: 525 | Input/Output: [(-28 -46 50 -81) -81]
Test Case: 526 | Input/Output: [(-16 93 17 48) -16]
Test Case: 527 | Input/Output: [(2 35 19 -24) -24]
Test Case: 528 | Input/Output: [(-3 83 65 63) -3]
Test Case: 529 | Input/Output: [(18 48 78 -8) -8]
Test Case: 530 | Input/Output: [(-92 28 -22 -18) -92]
Test Case: 531 | Input/Output: [(-25 -41 54 94) -41]
Test Case: 532 | Input/Output: [(-43 84 -79 38) -79]
Test Case: 533 | Input/Output: [(-18 79 -100 58) -100]
Test Case: 534 | Input/Output: [(81 68 -97 -15) -97]
Test Case: 535 | Input/Output: [(-96 -89 -20 77) -96]
Test Case: 536 | Input/Output: [(-67 -8 38 41) -67]
Test Case: 537 | Input/Output: [(-94 -46 5 82) -94]
Test Case: 538 | Input/Output: [(44 -50 -89 -67) -89]
Test Case: 539 | Input/Output: [(10 -66 -39 4) -66]
Test Case: 540 | Input/Output: [(-48 70 -23 -35) -48]
Test Case: 541 | Input/Output: [(-45 -87 -75 44) -87]
Test Case: 542 | Input/Output: [(74 -23 -15 98) -23]
Test Case: 543 | Input/Output: [(74 -51 -16 -48) -51]
Test Case: 544 | Input/Output: [(-47 79 73 54) -47]
Test Case: 545 | Input/Output: [(-15 76 -5 33) -15]
Test Case: 546 | Input/Output: [(-48 -53 38 -44) -53]
Test Case: 547 | Input/Output: [(-5 18 -85 44) -85]
Test Case: 548 | Input/Output: [(-55 68 54 -77) -77]
Test Case: 549 | Input/Output: [(26 -62 67 -3) -62]
Test Case: 550 | Input/Output: [(-17 83 35 38) -17]
Test Case: 551 | Input/Output: [(49 28 67 22) 22]
Test Case: 552 | Input/Output: [(33 21 -71 -78) -78]
Test Case: 553 | Input/Output: [(-1 37 -26 -25) -26]
Test Case: 554 | Input/Output: [(-59 -78 45 21) -78]
Test Case: 555 | Input/Output: [(-21 52 -38 -22) -38]
Test Case: 556 | Input/Output: [(67 8 66 -48) -48]
Test Case: 557 | Input/Output: [(-89 -23 -47 18) -89]
Test Case: 558 | Input/Output: [(100 -47 75 -7) -47]
Test Case: 559 | Input/Output: [(-23 -60 10 -24) -60]
Test Case: 560 | Input/Output: [(-74 86 -47 -23) -74]
Test Case: 561 | Input/Output: [(-23 -100 43 22) -100]
Test Case: 562 | Input/Output: [(-21 -58 -35 -40) -58]
Test Case: 563 | Input/Output: [(-21 -52 -74 -94) -94]
Test Case: 564 | Input/Output: [(-17 -68 -21 38) -68]
Test Case: 565 | Input/Output: [(-97 -31 0 -49) -97]
Test Case: 566 | Input/Output: [(-99 -98 -20 -31) -99]
Test Case: 567 | Input/Output: [(59 -75 84 -19) -75]
Test Case: 568 | Input/Output: [(-2 21 37 -13) -13]
Test Case: 569 | Input/Output: [(-67 82 -77 -30) -77]
Test Case: 570 | Input/Output: [(31 88 -62 -91) -91]
Test Case: 571 | Input/Output: [(13 -67 48 34) -67]
Test Case: 572 | Input/Output: [(15 90 66 -31) -31]
Test Case: 573 | Input/Output: [(50 -50 -75 -89) -89]
Test Case: 574 | Input/Output: [(68 -29 -85 12) -85]
Test Case: 575 | Input/Output: [(-94 42 -82 51) -94]
Test Case: 576 | Input/Output: [(-27 -84 -33 -57) -84]
Test Case: 577 | Input/Output: [(-81 -5 100 -18) -81]
Test Case: 578 | Input/Output: [(-30 -94 -95 -52) -95]
Test Case: 579 | Input/Output: [(26 64 -69 92) -69]
Test Case: 580 | Input/Output: [(86 64 81 55) 55]
Test Case: 581 | Input/Output: [(-66 -45 -85 42) -85]
Test Case: 582 | Input/Output: [(-11 63 -46 62) -46]
Test Case: 583 | Input/Output: [(23 -38 -78 -84) -84]
Test Case: 584 | Input/Output: [(-54 51 74 56) -54]
Test Case: 585 | Input/Output: [(43 78 55 41) 41]
Test Case: 586 | Input/Output: [(-52 -45 -72 -11) -72]
Test Case: 587 | Input/Output: [(-13 -10 -62 15) -62]
Test Case: 588 | Input/Output: [(-85 26 -29 95) -85]
Test Case: 589 | Input/Output: [(70 0 -23 60) -23]
Test Case: 590 | Input/Output: [(75 3 -99 -81) -99]
Test Case: 591 | Input/Output: [(41 -66 85 -62) -66]
Test Case: 592 | Input/Output: [(-33 -17 65 44) -33]
Test Case: 593 | Input/Output: [(-71 -38 45 12) -71]
Test Case: 594 | Input/Output: [(-87 10 -39 6) -87]
Test Case: 595 | Input/Output: [(35 37 -2 82) -2]
Test Case: 596 | Input/Output: [(-9 -22 39 -27) -27]
Test Case: 597 | Input/Output: [(-3 8 40 21) -3]
Test Case: 598 | Input/Output: [(-6 20 -27 82) -27]
Test Case: 599 | Input/Output: [(-68 -68 -92 83) -92]
Test Case: 600 | Input/Output: [(60 -82 89 -10) -82]
Test Case: 601 | Input/Output: [(94 44 -74 -21) -74]
Test Case: 602 | Input/Output: [(46 36 -25 43) -25]
Test Case: 603 | Input/Output: [(-39 -41 -95 99) -95]
Test Case: 604 | Input/Output: [(-59 -19 -10 29) -59]
Test Case: 605 | Input/Output: [(-31 -7 81 93) -31]
Test Case: 606 | Input/Output: [(-81 84 36 -96) -96]
Test Case: 607 | Input/Output: [(4 93 53 84) 4]
Test Case: 608 | Input/Output: [(51 -3 65 87) -3]
Test Case: 609 | Input/Output: [(-20 75 3 81) -20]
Test Case: 610 | Input/Output: [(14 -5 80 -9) -9]
Test Case: 611 | Input/Output: [(-19 83 -93 94) -93]
Test Case: 612 | Input/Output: [(100 10 -73 -87) -87]
Test Case: 613 | Input/Output: [(9 35 82 -72) -72]
Test Case: 614 | Input/Output: [(54 97 -56 -26) -56]
Test Case: 615 | Input/Output: [(86 81 65 -85) -85]
Test Case: 616 | Input/Output: [(100 -51 8 58) -51]
Test Case: 617 | Input/Output: [(-8 6 26 48) -8]
Test Case: 618 | Input/Output: [(-19 -21 -93 84) -93]
Test Case: 619 | Input/Output: [(-11 90 -72 5) -72]
Test Case: 620 | Input/Output: [(-45 93 36 67) -45]
Test Case: 621 | Input/Output: [(6 -91 69 -89) -91]
Test Case: 622 | Input/Output: [(-84 -98 35 36) -98]
Test Case: 623 | Input/Output: [(-2 71 24 -44) -44]
Test Case: 624 | Input/Output: [(14 36 38 73) 14]
Test Case: 625 | Input/Output: [(-53 -98 27 87) -98]
Test Case: 626 | Input/Output: [(59 -79 22 41) -79]
Test Case: 627 | Input/Output: [(-12 -79 9 48) -79]
Test Case: 628 | Input/Output: [(88 -85 63 -17) -85]
Test Case: 629 | Input/Output: [(-12 -6 -93 -16) -93]
Test Case: 630 | Input/Output: [(-57 46 53 -48) -57]
Test Case: 631 | Input/Output: [(24 92 81 76) 24]
Test Case: 632 | Input/Output: [(51 11 -77 83) -77]
Test Case: 633 | Input/Output: [(18 -32 -57 71) -57]
Test Case: 634 | Input/Output: [(59 60 -19 33) -19]
Test Case: 635 | Input/Output: [(22 -87 -35 62) -87]
Test Case: 636 | Input/Output: [(0 63 79 -33) -33]
Test Case: 637 | Input/Output: [(98 -31 -57 55) -57]
Test Case: 638 | Input/Output: [(84 65 46 -64) -64]
Test Case: 639 | Input/Output: [(70 -28 74 -46) -46]
Test Case: 640 | Input/Output: [(96 85 36 75) 36]
Test Case: 641 | Input/Output: [(-35 -21 -51 -55) -55]
Test Case: 642 | Input/Output: [(-33 -49 8 -37) -49]
Test Case: 643 | Input/Output: [(-46 90 -49 81) -49]
Test Case: 644 | Input/Output: [(5 -27 15 -79) -79]
Test Case: 645 | Input/Output: [(-56 51 47 51) -56]
Test Case: 646 | Input/Output: [(37 -61 -10 -24) -61]
Test Case: 647 | Input/Output: [(57 51 14 11) 11]
Test Case: 648 | Input/Output: [(-11 49 -67 3) -67]
Test Case: 649 | Input/Output: [(-18 35 91 55) -18]
Test Case: 650 | Input/Output: [(-75 -54 67 -14) -75]
Test Case: 651 | Input/Output: [(-33 40 77 1) -33]
Test Case: 652 | Input/Output: [(100 -16 -96 -9) -96]
Test Case: 653 | Input/Output: [(-75 43 22 -60) -75]
Test Case: 654 | Input/Output: [(59 88 36 -75) -75]
Test Case: 655 | Input/Output: [(-47 -70 65 21) -70]
Test Case: 656 | Input/Output: [(-19 -42 -87 -96) -96]
Test Case: 657 | Input/Output: [(-19 60 93 13) -19]
Test Case: 658 | Input/Output: [(-87 95 -42 -16) -87]
Test Case: 659 | Input/Output: [(76 69 56 -77) -77]
Test Case: 660 | Input/Output: [(99 -13 71 20) -13]
Test Case: 661 | Input/Output: [(-56 76 -7 1) -56]
Test Case: 662 | Input/Output: [(-46 35 -37 50) -46]
Test Case: 663 | Input/Output: [(75 55 14 -19) -19]
Test Case: 664 | Input/Output: [(47 55 6 79) 6]
Test Case: 665 | Input/Output: [(-28 14 6 14) -28]
Test Case: 666 | Input/Output: [(-88 -93 32 -53) -93]
Test Case: 667 | Input/Output: [(-90 85 -33 87) -90]
Test Case: 668 | Input/Output: [(-8 -15 -46 35) -46]
Test Case: 669 | Input/Output: [(-25 38 50 75) -25]
Test Case: 670 | Input/Output: [(47 30 16 -90) -90]
Test Case: 671 | Input/Output: [(-56 21 -58 82) -58]
Test Case: 672 | Input/Output: [(-29 62 4 -20) -29]
Test Case: 673 | Input/Output: [(73 -9 -20 16) -20]
Test Case: 674 | Input/Output: [(41 79 -60 9) -60]
Test Case: 675 | Input/Output: [(86 -17 98 61) -17]
Test Case: 676 | Input/Output: [(23 -11 15 41) -11]
Test Case: 677 | Input/Output: [(-3 39 56 -16) -16]
Test Case: 678 | Input/Output: [(-53 -77 -8 33) -77]
Test Case: 679 | Input/Output: [(-27 -10 -75 30) -75]
Test Case: 680 | Input/Output: [(58 67 69 48) 48]
Test Case: 681 | Input/Output: [(96 -48 -14 -83) -83]
Test Case: 682 | Input/Output: [(-45 -9 -85 4) -85]
Test Case: 683 | Input/Output: [(97 -39 1 20) -39]
Test Case: 684 | Input/Output: [(25 -59 -44 52) -59]
Test Case: 685 | Input/Output: [(-5 60 -63 17) -63]
Test Case: 686 | Input/Output: [(58 -26 65 16) -26]
Test Case: 687 | Input/Output: [(-69 6 49 64) -69]
Test Case: 688 | Input/Output: [(-66 -19 6 -90) -90]
Test Case: 689 | Input/Output: [(41 92 72 0) 0]
Test Case: 690 | Input/Output: [(-72 23 -44 -20) -72]
Test Case: 691 | Input/Output: [(-46 15 -53 8) -53]
Test Case: 692 | Input/Output: [(63 18 30 -7) -7]
Test Case: 693 | Input/Output: [(18 23 77 30) 18]
Test Case: 694 | Input/Output: [(80 -17 80 48) -17]
Test Case: 695 | Input/Output: [(-93 65 -39 -73) -93]
Test Case: 696 | Input/Output: [(14 -3 -31 -50) -50]
Test Case: 697 | Input/Output: [(10 -81 21 -11) -81]
Test Case: 698 | Input/Output: [(-95 67 4 -64) -95]
Test Case: 699 | Input/Output: [(-17 74 100 -15) -17]
Test Case: 700 | Input/Output: [(91 94 72 77) 72]
Test Case: 701 | Input/Output: [(32 -37 37 93) -37]
Test Case: 702 | Input/Output: [(-14 -22 -90 82) -90]
Test Case: 703 | Input/Output: [(10 32 11 -57) -57]
Test Case: 704 | Input/Output: [(39 -9 -1 12) -9]
Test Case: 705 | Input/Output: [(88 -57 -40 -100) -100]
Test Case: 706 | Input/Output: [(2 -42 -52 60) -52]
Test Case: 707 | Input/Output: [(93 48 1 32) 1]
Test Case: 708 | Input/Output: [(-39 26 -43 60) -43]
Test Case: 709 | Input/Output: [(72 -62 -50 88) -62]
Test Case: 710 | Input/Output: [(-55 8 -57 -95) -95]
Test Case: 711 | Input/Output: [(-31 -64 -1 -70) -70]
Test Case: 712 | Input/Output: [(-60 20 87 56) -60]
Test Case: 713 | Input/Output: [(-60 -84 -2 -78) -84]
Test Case: 714 | Input/Output: [(84 82 14 -70) -70]
Test Case: 715 | Input/Output: [(-80 -17 25 20) -80]
Test Case: 716 | Input/Output: [(-73 67 -3 -10) -73]
Test Case: 717 | Input/Output: [(-47 38 -100 70) -100]
Test Case: 718 | Input/Output: [(-48 -87 93 34) -87]
Test Case: 719 | Input/Output: [(88 -68 -42 77) -68]
Test Case: 720 | Input/Output: [(-78 60 80 -33) -78]
Test Case: 721 | Input/Output: [(-90 74 -51 -15) -90]
Test Case: 722 | Input/Output: [(-61 69 -41 24) -61]
Test Case: 723 | Input/Output: [(-34 -57 83 -9) -57]
Test Case: 724 | Input/Output: [(-23 -47 -63 -32) -63]
Test Case: 725 | Input/Output: [(24 -15 -80 61) -80]
Test Case: 726 | Input/Output: [(-47 -46 -31 12) -47]
Test Case: 727 | Input/Output: [(-40 23 95 80) -40]
Test Case: 728 | Input/Output: [(-85 67 -55 -24) -85]
Test Case: 729 | Input/Output: [(-81 -51 -20 -93) -93]
Test Case: 730 | Input/Output: [(46 -45 9 -78) -78]
Test Case: 731 | Input/Output: [(82 -45 88 77) -45]
Test Case: 732 | Input/Output: [(3 -39 -5 54) -39]
Test Case: 733 | Input/Output: [(27 5 28 100) 5]
Test Case: 734 | Input/Output: [(-41 -64 -73 -100) -100]
Test Case: 735 | Input/Output: [(-18 24 80 1) -18]
Test Case: 736 | Input/Output: [(-97 78 -13 46) -97]
Test Case: 737 | Input/Output: [(-80 33 18 -13) -80]
Test Case: 738 | Input/Output: [(46 90 -34 -59) -59]
Test Case: 739 | Input/Output: [(-87 65 42 61) -87]
Test Case: 740 | Input/Output: [(-17 -85 -19 -63) -85]
Test Case: 741 | Input/Output: [(-82 15 -28 75) -82]
Test Case: 742 | Input/Output: [(23 27 6 41) 6]
Test Case: 743 | Input/Output: [(27 92 -69 -8) -69]
Test Case: 744 | Input/Output: [(100 77 -100 -51) -100]
Test Case: 745 | Input/Output: [(-28 -97 16 33) -97]
Test Case: 746 | Input/Output: [(-46 -35 -61 9) -61]
Test Case: 747 | Input/Output: [(54 -64 54 -35) -64]
Test Case: 748 | Input/Output: [(53 -79 -39 -80) -80]
Test Case: 749 | Input/Output: [(-30 18 50 94) -30]
Test Case: 750 | Input/Output: [(-28 -24 39 32) -28]
Test Case: 751 | Input/Output: [(-98 50 82 -18) -98]
Test Case: 752 | Input/Output: [(22 -93 -56 50) -93]
Test Case: 753 | Input/Output: [(59 -49 -53 -78) -78]
Test Case: 754 | Input/Output: [(-1 -64 71 86) -64]
Test Case: 755 | Input/Output: [(-2 -71 89 17) -71]
Test Case: 756 | Input/Output: [(0 76 -94 33) -94]
Test Case: 757 | Input/Output: [(0 -92 33 -77) -92]
Test Case: 758 | Input/Output: [(42 -88 -60 -56) -88]
Test Case: 759 | Input/Output: [(-90 64 50 55) -90]
Test Case: 760 | Input/Output: [(34 19 11 89) 11]
Test Case: 761 | Input/Output: [(-48 44 13 98) -48]
Test Case: 762 | Input/Output: [(63 -64 31 16) -64]
Test Case: 763 | Input/Output: [(-59 -6 17 73) -59]
Test Case: 764 | Input/Output: [(-15 16 -84 -14) -84]
Test Case: 765 | Input/Output: [(-4 46 2 -35) -35]
Test Case: 766 | Input/Output: [(-50 2 -44 -2) -50]
Test Case: 767 | Input/Output: [(52 36 20 -69) -69]
Test Case: 768 | Input/Output: [(-52 80 16 -65) -65]
Test Case: 769 | Input/Output: [(2 -69 41 51) -69]
Test Case: 770 | Input/Output: [(-68 58 2 60) -68]
Test Case: 771 | Input/Output: [(-68 59 75 -17) -68]
Test Case: 772 | Input/Output: [(-69 45 65 65) -69]
Test Case: 773 | Input/Output: [(-60 -97 8 46) -97]
Test Case: 774 | Input/Output: [(-63 28 71 72) -63]
Test Case: 775 | Input/Output: [(27 84 44 -59) -59]
Test Case: 776 | Input/Output: [(-60 -31 -33 -83) -83]
Test Case: 777 | Input/Output: [(-42 26 -76 -63) -76]
Test Case: 778 | Input/Output: [(21 -99 -50 -19) -99]
Test Case: 779 | Input/Output: [(-41 -51 100 -11) -51]
Test Case: 780 | Input/Output: [(60 -35 -9 -61) -61]
Test Case: 781 | Input/Output: [(77 21 84 -45) -45]
Test Case: 782 | Input/Output: [(74 1 -28 -96) -96]
Test Case: 783 | Input/Output: [(18 -81 -8 93) -81]
Test Case: 784 | Input/Output: [(53 31 -69 20) -69]
Test Case: 785 | Input/Output: [(2 100 3 3) 2]
Test Case: 786 | Input/Output: [(48 73 -4 -39) -39]
Test Case: 787 | Input/Output: [(80 46 24 57) 24]
Test Case: 788 | Input/Output: [(98 -25 29 -5) -25]
Test Case: 789 | Input/Output: [(-53 23 26 20) -53]
Test Case: 790 | Input/Output: [(-91 -76 97 55) -91]
Test Case: 791 | Input/Output: [(10 62 50 -21) -21]
Test Case: 792 | Input/Output: [(-26 -37 -6 -90) -90]
Test Case: 793 | Input/Output: [(-75 -8 46 55) -75]
Test Case: 794 | Input/Output: [(-29 86 -61 -13) -61]
Test Case: 795 | Input/Output: [(6 -81 75 -4) -81]
Test Case: 796 | Input/Output: [(74 28 31 -18) -18]
Test Case: 797 | Input/Output: [(-68 -82 91 82) -82]
Test Case: 798 | Input/Output: [(44 -96 -3 -32) -96]
Test Case: 799 | Input/Output: [(-18 -44 -28 79) -44]
Test Case: 800 | Input/Output: [(81 -63 75 8) -63]
Test Case: 801 | Input/Output: [(-83 89 -49 86) -83]
Test Case: 802 | Input/Output: [(62 -35 1 -54) -54]
Test Case: 803 | Input/Output: [(-75 39 -49 5) -75]
Test Case: 804 | Input/Output: [(-38 76 95 -8) -38]
Test Case: 805 | Input/Output: [(-38 -35 9 -21) -38]
Test Case: 806 | Input/Output: [(21 69 -82 -92) -92]
Test Case: 807 | Input/Output: [(-35 -42 66 50) -42]
Test Case: 808 | Input/Output: [(10 -47 -98 70) -98]
Test Case: 809 | Input/Output: [(-63 -92 19 -91) -92]
Test Case: 810 | Input/Output: [(84 7 1 76) 1]
Test Case: 811 | Input/Output: [(-87 28 -92 35) -92]
Test Case: 812 | Input/Output: [(48 76 71 29) 29]
Test Case: 813 | Input/Output: [(94 43 95 77) 43]
Test Case: 814 | Input/Output: [(-35 46 -97 58) -97]
Test Case: 815 | Input/Output: [(-72 11 -84 68) -84]
Test Case: 816 | Input/Output: [(-55 -77 30 -38) -77]
Test Case: 817 | Input/Output: [(1 -20 -23 27) -23]
Test Case: 818 | Input/Output: [(1 75 -55 -89) -89]
Test Case: 819 | Input/Output: [(-34 35 1 -80) -80]
Test Case: 820 | Input/Output: [(27 75 85 79) 27]
Test Case: 821 | Input/Output: [(-92 -96 1 58) -96]
Test Case: 822 | Input/Output: [(45 -60 -18 -48) -60]
Test Case: 823 | Input/Output: [(95 86 -43 27) -43]
Test Case: 824 | Input/Output: [(30 -70 -20 54) -70]
Test Case: 825 | Input/Output: [(38 71 3 -96) -96]
Test Case: 826 | Input/Output: [(-13 -10 61 77) -13]
Test Case: 827 | Input/Output: [(-78 66 -36 28) -78]
Test Case: 828 | Input/Output: [(-23 55 -59 -62) -62]
Test Case: 829 | Input/Output: [(52 -57 -62 78) -62]
Test Case: 830 | Input/Output: [(-18 45 -66 -96) -96]
Test Case: 831 | Input/Output: [(76 89 -41 -50) -50]
Test Case: 832 | Input/Output: [(67 -51 -45 52) -51]
Test Case: 833 | Input/Output: [(-40 -78 20 9) -78]
Test Case: 834 | Input/Output: [(29 66 96 81) 29]
Test Case: 835 | Input/Output: [(-96 -71 53 -67) -96]
Test Case: 836 | Input/Output: [(19 -20 -48 13) -48]
Test Case: 837 | Input/Output: [(35 -21 -21 -82) -82]
Test Case: 838 | Input/Output: [(18 -55 17 6) -55]
Test Case: 839 | Input/Output: [(-41 12 22 -42) -42]
Test Case: 840 | Input/Output: [(98 19 -87 -81) -87]
Test Case: 841 | Input/Output: [(-61 -54 -55 -66) -66]
Test Case: 842 | Input/Output: [(-84 -21 79 -76) -84]
Test Case: 843 | Input/Output: [(91 84 -51 -41) -51]
Test Case: 844 | Input/Output: [(-20 -16 -35 77) -35]
Test Case: 845 | Input/Output: [(3 21 24 -95) -95]
Test Case: 846 | Input/Output: [(95 -27 -4 13) -27]
Test Case: 847 | Input/Output: [(60 -66 65 12) -66]
Test Case: 848 | Input/Output: [(-87 73 61 -30) -87]
Test Case: 849 | Input/Output: [(23 -86 35 -9) -86]
Test Case: 850 | Input/Output: [(26 -15 -96 -82) -96]
Test Case: 851 | Input/Output: [(-63 -67 -37 70) -67]
Test Case: 852 | Input/Output: [(36 35 -98 -92) -98]
Test Case: 853 | Input/Output: [(-31 -61 52 -62) -62]
Test Case: 854 | Input/Output: [(-49 -34 -8 -85) -85]
Test Case: 855 | Input/Output: [(12 -83 81 57) -83]
Test Case: 856 | Input/Output: [(-17 -21 -9 -39) -39]
Test Case: 857 | Input/Output: [(49 6 -1 -14) -14]
Test Case: 858 | Input/Output: [(-10 12 28 -1) -10]
Test Case: 859 | Input/Output: [(16 1 55 -59) -59]
Test Case: 860 | Input/Output: [(-100 64 7 12) -100]
Test Case: 861 | Input/Output: [(86 -34 -52 85) -52]
Test Case: 862 | Input/Output: [(-65 76 -14 -8) -65]
Test Case: 863 | Input/Output: [(-31 -67 98 -47) -67]
Test Case: 864 | Input/Output: [(-54 -16 85 -30) -54]
Test Case: 865 | Input/Output: [(-80 21 92 -99) -99]
Test Case: 866 | Input/Output: [(-50 -5 57 -44) -50]
Test Case: 867 | Input/Output: [(-45 28 -72 -38) -72]
Test Case: 868 | Input/Output: [(-28 -10 9 20) -28]
Test Case: 869 | Input/Output: [(54 71 -40 -50) -50]
Test Case: 870 | Input/Output: [(42 6 -50 -18) -50]
Test Case: 871 | Input/Output: [(73 98 41 -37) -37]
Test Case: 872 | Input/Output: [(-4 -76 88 53) -76]
Test Case: 873 | Input/Output: [(-32 -33 66 -77) -77]
Test Case: 874 | Input/Output: [(-47 42 50 82) -47]
Test Case: 875 | Input/Output: [(84 48 -5 44) -5]
Test Case: 876 | Input/Output: [(-73 -6 7 90) -73]
Test Case: 877 | Input/Output: [(73 -94 82 -8) -94]
Test Case: 878 | Input/Output: [(26 99 4 -1) -1]
Test Case: 879 | Input/Output: [(-4 74 -3 -93) -93]
Test Case: 880 | Input/Output: [(-35 -99 66 -2) -99]
Test Case: 881 | Input/Output: [(85 -6 11 -19) -19]
Test Case: 882 | Input/Output: [(-55 13 16 45) -55]
Test Case: 883 | Input/Output: [(100 -31 -66 80) -66]
Test Case: 884 | Input/Output: [(-56 12 31 17) -56]
Test Case: 885 | Input/Output: [(-83 69 22 -83) -83]
Test Case: 886 | Input/Output: [(80 27 -69 79) -69]
Test Case: 887 | Input/Output: [(-12 84 -47 63) -47]
Test Case: 888 | Input/Output: [(84 -14 61 -64) -64]
Test Case: 889 | Input/Output: [(-100 53 -68 49) -100]
Test Case: 890 | Input/Output: [(-10 96 60 -73) -73]
Test Case: 891 | Input/Output: [(10 -76 30 -89) -89]
Test Case: 892 | Input/Output: [(-55 68 -72 -83) -83]
Test Case: 893 | Input/Output: [(96 -52 -74 70) -74]
Test Case: 894 | Input/Output: [(88 -93 33 46) -93]
Test Case: 895 | Input/Output: [(1 -84 -76 11) -84]
Test Case: 896 | Input/Output: [(-82 87 -46 -77) -82]
Test Case: 897 | Input/Output: [(68 -70 -40 92) -70]
Test Case: 898 | Input/Output: [(-59 75 71 0) -59]
Test Case: 899 | Input/Output: [(64 0 10 -18) -18]
Test Case: 900 | Input/Output: [(-65 -20 90 -51) -65]
Test Case: 901 | Input/Output: [(-30 -53 22 85) -53]
Test Case: 902 | Input/Output: [(-56 -35 81 -51) -56]
Test Case: 903 | Input/Output: [(99 -11 -72 16) -72]
Test Case: 904 | Input/Output: [(-17 -26 96 21) -26]
Test Case: 905 | Input/Output: [(-19 -100 -36 94) -100]
Test Case: 906 | Input/Output: [(-25 42 83 51) -25]
Test Case: 907 | Input/Output: [(100 -54 53 6) -54]
Test Case: 908 | Input/Output: [(27 8 6 -65) -65]
Test Case: 909 | Input/Output: [(86 99 -79 21) -79]
Test Case: 910 | Input/Output: [(-21 -37 -2 -37) -37]
Test Case: 911 | Input/Output: [(-71 49 -22 67) -71]
Test Case: 912 | Input/Output: [(-93 54 -81 85) -93]
Test Case: 913 | Input/Output: [(15 -44 -80 -3) -80]
Test Case: 914 | Input/Output: [(35 85 -82 77) -82]
Test Case: 915 | Input/Output: [(-2 41 2 54) -2]
Test Case: 916 | Input/Output: [(45 6 21 36) 6]
Test Case: 917 | Input/Output: [(-69 -9 85 51) -69]
Test Case: 918 | Input/Output: [(72 43 39 3) 3]
Test Case: 919 | Input/Output: [(-96 -13 6 -22) -96]
Test Case: 920 | Input/Output: [(-35 -51 -98 -56) -98]
Test Case: 921 | Input/Output: [(60 -73 85 37) -73]
Test Case: 922 | Input/Output: [(71 -58 -42 33) -58]
Test Case: 923 | Input/Output: [(-15 35 -11 77) -15]
Test Case: 924 | Input/Output: [(-32 55 -70 -78) -78]
Test Case: 925 | Input/Output: [(-66 -20 -63 100) -66]
Test Case: 926 | Input/Output: [(-27 -18 -78 -20) -78]
Test Case: 927 | Input/Output: [(41 74 -51 24) -51]
Test Case: 928 | Input/Output: [(99 36 -31 96) -31]
Test Case: 929 | Input/Output: [(-74 93 -50 59) -74]
Test Case: 930 | Input/Output: [(59 55 58 5) 5]
Test Case: 931 | Input/Output: [(12 -49 -47 42) -49]
Test Case: 932 | Input/Output: [(65 18 -86 -54) -86]
Test Case: 933 | Input/Output: [(88 -87 -94 15) -94]
Test Case: 934 | Input/Output: [(96 70 -51 -38) -51]
Test Case: 935 | Input/Output: [(12 32 69 -87) -87]
Test Case: 936 | Input/Output: [(-48 -17 -34 53) -48]
Test Case: 937 | Input/Output: [(95 98 69 5) 5]
Test Case: 938 | Input/Output: [(-60 46 -73 97) -73]
Test Case: 939 | Input/Output: [(-56 -16 29 60) -56]
Test Case: 940 | Input/Output: [(92 -63 30 76) -63]
Test Case: 941 | Input/Output: [(70 -46 84 -36) -46]
Test Case: 942 | Input/Output: [(-37 85 -1 19) -37]
Test Case: 943 | Input/Output: [(-87 -61 -59 -20) -87]
Test Case: 944 | Input/Output: [(-62 28 -18 87) -62]
Test Case: 945 | Input/Output: [(69 -53 -51 -93) -93]
Test Case: 946 | Input/Output: [(-55 58 44 -76) -76]
Test Case: 947 | Input/Output: [(-97 -6 -74 -75) -97]
Test Case: 948 | Input/Output: [(84 -18 -34 -98) -98]
Test Case: 949 | Input/Output: [(-35 0 -35 67) -35]
Test Case: 950 | Input/Output: [(70 45 -62 95) -62]
Test Case: 951 | Input/Output: [(-27 -14 -61 -61) -61]
Test Case: 952 | Input/Output: [(-84 0 -85 -52) -85]
Test Case: 953 | Input/Output: [(-34 39 -49 -44) -49]
Test Case: 954 | Input/Output: [(-26 18 83 -50) -50]
Test Case: 955 | Input/Output: [(66 -28 54 -48) -48]
Test Case: 956 | Input/Output: [(10 -5 32 80) -5]
Test Case: 957 | Input/Output: [(67 -58 -40 57) -58]
Test Case: 958 | Input/Output: [(46 -43 -59 40) -59]
Test Case: 959 | Input/Output: [(-86 28 33 -43) -86]
Test Case: 960 | Input/Output: [(44 -20 -30 -47) -47]
Test Case: 961 | Input/Output: [(23 6 -76 51) -76]
Test Case: 962 | Input/Output: [(-97 -43 -91 57) -97]
Test Case: 963 | Input/Output: [(24 77 -91 36) -91]
Test Case: 964 | Input/Output: [(77 -88 84 -66) -88]
Test Case: 965 | Input/Output: [(-75 -15 4 44) -75]
Test Case: 966 | Input/Output: [(66 42 64 87) 42]
Test Case: 967 | Input/Output: [(-16 47 -3 -89) -89]
Test Case: 968 | Input/Output: [(-16 -15 21 -100) -100]
Test Case: 969 | Input/Output: [(0 -81 -48 -99) -99]
Test Case: 970 | Input/Output: [(-67 66 -69 37) -69]
Test Case: 971 | Input/Output: [(-81 45 94 -100) -100]
Test Case: 972 | Input/Output: [(59 74 -20 72) -20]
Test Case: 973 | Input/Output: [(46 95 54 78) 46]
Test Case: 974 | Input/Output: [(-43 26 41 47) -43]
Test Case: 975 | Input/Output: [(-77 22 -77 72) -77]
Test Case: 976 | Input/Output: [(20 -50 -80 9) -80]
Test Case: 977 | Input/Output: [(-77 83 -38 93) -77]
Test Case: 978 | Input/Output: [(-74 53 -79 59) -79]
Test Case: 979 | Input/Output: [(69 70 -44 -56) -56]
Test Case: 980 | Input/Output: [(76 -33 92 -41) -41]
Test Case: 981 | Input/Output: [(97 -85 -58 72) -85]
Test Case: 982 | Input/Output: [(-94 -16 -64 68) -94]
Test Case: 983 | Input/Output: [(45 -79 -11 67) -79]
Test Case: 984 | Input/Output: [(-15 -22 84 5) -22]
Test Case: 985 | Input/Output: [(-51 85 -16 -25) -51]
Test Case: 986 | Input/Output: [(-38 78 88 2) -38]
Test Case: 987 | Input/Output: [(34 82 13 -47) -47]
Test Case: 988 | Input/Output: [(-50 63 53 90) -50]
Test Case: 989 | Input/Output: [(36 -99 -35 -44) -99]
Test Case: 990 | Input/Output: [(11 -41 -97 -33) -97]
Test Case: 991 | Input/Output: [(17 67 18 -56) -56]
Test Case: 992 | Input/Output: [(64 28 99 -15) -15]
Test Case: 993 | Input/Output: [(-75 67 -72 39) -75]
Test Case: 994 | Input/Output: [(-56 93 91 78) -56]
Test Case: 995 | Input/Output: [(-82 -42 2 -65) -82]
Test Case: 996 | Input/Output: [(-77 52 21 -35) -77]
Test Case: 997 | Input/Output: [(-28 13 68 -45) -45]
Test Case: 998 | Input/Output: [(-78 42 56 -24) -78]
Test Case: 999 | Input/Output: [(61 36 -72 16) -72]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x6b899971 clojush.problems.software.smallest$fn__7461@6b899971] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x7cec3975 clojush.instructions.tag$tag_instruction_erc$fn__2160@7cec3975] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x205f52ea clojush.instructions.tag$tagged_instruction_erc$fn__2166@205f52ea] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x20155dae clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@20155dae]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_initial_report@2a4cb8ae]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x17e6b7e4 clojush.problems.software.smallest$smallest_report@17e6b7e4]
random-screen = false
random-seed = 103 -84 113 -96 -57 36 39 -94 -56 -20 -82 82 63 -112 121 -70
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[-63 -56 -56 -56] -63] [[20 20 20 43] 20] [[99 99 99 -70] -70] [[-87 68 -87 -87] -87] [[62 62 62 -28] -28] [[20 60 60 60] 20] [[100 73 100 100] 73] [[-1 76 -1 -1] -1] [[69 33 33 33] 33] [[-29 -29 31 -29] -29] [(69 69 69 69) 69] [(-93 -93 -93 -93) -93] [(-73 -73 -73 -73) -73] [(-11 -11 -11 -11) -11] [(38 38 38 38) 38] [(53 42 63 14) 14] [(77 14 58 87) 14] [(49 49 96 8) 8] [(57 66 60 32) 32] [(22 83 25 96) 22] [(17 76 43 32) 17] [(82 21 72 13) 13] [(57 83 77 71) 57] [(95 12 84 54) 12] [(35 57 62 95) 35] [(64 60 65 61) 60] [(31 85 59 59) 31] [(91 53 24 62) 24] [(80 59 92 3) 3] [(46 49 69 48) 46] [(98 58 56 81) 56] [(29 82 97 95) 29] [(53 0 93 2) 0] [(17 39 100 61) 17] [(3 61 74 59) 3] [(1 81 58 -39) -39] [(40 2 5 -44) -44] [(-44 -12 -64 -97) -97] [(-47 11 -13 -76) -76] [(-11 74 -3 66) -11] [(-95 91 -15 -84) -95] [(74 31 -78 -56) -78] [(-24 -97 -75 69) -97] [(-40 26 6 -8) -40] [(-92 67 43 -49) -92] [(55 12 48 7) 7] [(-1 8 46 9) -1] [(40 -71 26 87) -71] [(21 -27 69 91) -27] [(-82 29 -19 -51) -82] [(46 13 9 -73) -73] [(-9 76 -88 58) -88] [(-52 88 66 41) -52] [(-59 -79 82 -14) -79] [(-71 70 -17 82) -71] [(-53 96 51 43) -53] [(-64 -40 16 25) -64] [(-68 -10 68 60) -68] [(-65 14 28 39) -65] [(1 12 44 -76) -76] [(-13 -55 10 9) -55] [(-50 22 -87 -84) -87] [(6 -39 -40 -4) -40] [(-95 -27 19 65) -95] [(-55 -66 -68 28) -68] [(-28 74 -13 -7) -28] [(-80 -84 100 -83) -84] [(-40 -2 -92 -55) -92] [(-27 -18 73 -67) -67] [(-61 -67 -56 88) -67] [(-47 -65 -9 -16) -65] [(10 -76 -28 66) -76] [(-41 57 -87 -15) -87] [(18 3 -64 41) -64] [(70 73 73 -24) -24] [(98 -35 -6 66) -35] [(-33 7 79 63) -33] [(22 -17 -4 24) -17] [(16 -91 -27 -58) -91] [(-74 42 4 84) -74] [(-31 -40 -43 42) -43] [(-90 -35 -18 35) -90] [(83 -40 -33 -89) -89] [(60 74 23 6) 6] [(-49 -5 -22 94) -49] [(-8 25 -91 -66) -91] [(-61 -82 -34 27) -82] [(22 -36 -39 49) -39] [(-4 90 -83 -58) -83] [(47 -37 76 89) -37] [(30 -76 -70 68) -76] [(8 -11 36 -19) -19] [(-6 78 39 -73) -73] [(-87 -87 48 18) -87] [(-39 91 11 -13) -39])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 677
Test mean error for best: 0.67700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: 31                 
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 63                 
Correct output: 14                  | Program output: 58                 
Correct output: 8                   | Program output: 96                 
Correct output: 32                  | Program output: 60                 
Correct output: 22                  | Program output: 25                 
Correct output: 17                  | Program output: 43                 
Correct output: 13                  | Program output: 72                 
Correct output: 57                  | Program output: 77                 
Correct output: 12                  | Program output: 84                 
Correct output: 35                  | Program output: 62                 
Correct output: 60                  | Program output: 65                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 24                 
Correct output: 3                   | Program output: 92                 
Correct output: 46                  | Program output: 69                 
Correct output: 56                  | Program output: 56                 
Correct output: 29                  | Program output: 97                 
Correct output: 0                   | Program output: 93                 
Correct output: 17                  | Program output: 100                
Correct output: 3                   | Program output: 74                 
Correct output: -39                 | Program output: 58                 
Correct output: -44                 | Program output: 5                  
Correct output: -97                 | Program output: -64                
Correct output: -76                 | Program output: -13                
Correct output: -11                 | Program output: -3                 
Correct output: -95                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -97                 | Program output: -75                
Correct output: -40                 | Program output: 6                  
Correct output: -92                 | Program output: 43                 
Correct output: 7                   | Program output: 48                 
Correct output: -1                  | Program output: 46                 
Correct output: -71                 | Program output: 26                 
Correct output: -27                 | Program output: 69                 
Correct output: -82                 | Program output: -19                
Correct output: -73                 | Program output: 9                  
Correct output: -88                 | Program output: -88                
Correct output: -52                 | Program output: 66                 
Correct output: -79                 | Program output: 82                 
Correct output: -71                 | Program output: -17                
Correct output: -53                 | Program output: 51                 
Correct output: -64                 | Program output: 16                 
Correct output: -68                 | Program output: 68                 
Correct output: -65                 | Program output: 28                 
Correct output: -76                 | Program output: 44                 
Correct output: -55                 | Program output: 10                 
Correct output: -87                 | Program output: -87                
Correct output: -40                 | Program output: -40                
Correct output: -95                 | Program output: 19                 
Correct output: -68                 | Program output: -68                
Correct output: -28                 | Program output: -13                
Correct output: -84                 | Program output: 100                
Correct output: -92                 | Program output: -92                
Correct output: -67                 | Program output: 73                 
Correct output: -67                 | Program output: -56                
Correct output: -65                 | Program output: -9                 
Correct output: -76                 | Program output: -28                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: -64                
Correct output: -24                 | Program output: 73                 
Correct output: -35                 | Program output: -6                 
Correct output: -33                 | Program output: 79                 
Correct output: -17                 | Program output: -4                 
Correct output: -91                 | Program output: -27                
Correct output: -74                 | Program output: 4                  
Correct output: -43                 | Program output: -43                
Correct output: -90                 | Program output: -18                
Correct output: -89                 | Program output: -33                
Correct output: 6                   | Program output: 23                 
Correct output: -49                 | Program output: -22                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -83                 | Program output: -83                
Correct output: -37                 | Program output: 76                 
Correct output: -76                 | Program output: -70                
Correct output: -19                 | Program output: 36                 
Correct output: -73                 | Program output: 39                 
Correct output: -87                 | Program output: 48                 
Correct output: -39                 | Program output: 11                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 in3 print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [1 0 1 0 0 1 0 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 in3 print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [1 0 1 0 0 1 0 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 3 1000 3 9 4 3 2 1000 3)
Population mean number of elite cases: 3.03
Count of perfect (error zero) individuals by case: (0 3 0 3 9 4 3 2 0 3)
Population mean number of perfect (error zero) cases: 0.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction boolean_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_swap} {:close 1, :instruction exec_if} {:close 0, :instruction exec_dup} {:close 0, :instruction tagged_267} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_div} {:close 0, :instruction integer_yank} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction in3} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_s} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_and} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yank} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_y} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_eq} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction boolean_xor} {:close 1, :instruction integer_gt} {:close 0, :instruction integer_inc} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction integer_dup_times} {:close 0, :instruction print_exec} {:close 2, :instruction boolean_xor} {:close 1, :instruction exec_eq} {:close 0, :instruction exec_do*times} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_do*range} {:close 0, :instruction integer_dup} {:close 1, :instruction in2} {:close 0, :instruction integer_lt} {:close 1, :instruction boolean_yank})
Best program: (boolean_dup_times boolean_invert_first_then_and boolean_shove integer_stackdepth in1 integer_shove exec_swap () (exec_if () (exec_dup (tagged_267 exec_rot (exec_do*while (exec_yankdup integer_fromboolean integer_div integer_yank integer_pop) boolean_invert_first_then_and in3 exec_noop boolean_empty exec_s (exec_eq integer_sub boolean_and print_integer exec_y_when_autoconstructing (integer_yank integer_pop) exec_y (exec_swap (integer_mult boolean_dup_times integer_eq) (integer_gt integer_yankdup exec_shove () exec_stackdepth boolean_xor) integer_gt) integer_inc boolean_yankdup in3 integer_min integer_dup_times print_exec (boolean_xor)) (exec_eq) (exec_do*times (boolean_eq integer_dup_times exec_s (boolean_dup_items exec_do*range (integer_dup in2) integer_lt boolean_yank) () ()))) () ()))))
Errors: [1 0 1 0 0 1 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 58
Size: 82
Percent parens: 0.293
--- Population Statistics ---
Average total errors in population: 9.973
Median total errors in population: 10
Error averages by case: (1.0 0.997 1.0 0.997 0.991 0.996 0.997 0.998 1.0 0.997)
Error minima by case: (1 0 1 0 0 0 0 0 1 0)
Average genome size in population (length): 50.468
Average program size in population (points): 69.587
Average percent parens in population: 0.280
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.006
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.275
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 488577
--- Timings ---
Current time: 1559583106549 milliseconds
Total Time:           2.5 seconds
Initialization:       0.1 seconds,  4.0%
Reproduction:         0.8 seconds, 31.3%
Fitness Testing:      1.6 seconds, 64.7%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 0 1 0 0 1 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 0 1 0 0 1 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1 252 1 252 252 1 1000 251 596)
Population mean number of elite cases: 2.61
Count of perfect (error zero) individuals by case: (1 1 252 1 252 252 1 0 251 596)
Population mean number of perfect (error zero) cases: 1.61
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 0 1 0 0 1 0 1 1 1]
Total: 5
Mean: 0.5
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 8.393
Median total errors in population: 9
Error averages by case: (0.999 0.999 0.748 0.999 0.748 0.748 0.999 1.0 0.749 0.404)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 41.881
Average program size in population (points): 55.826
Average percent parens in population: 0.233
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.49
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 283
Genome diversity (% unique genomes):	 0.451
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 292
Syntactic diversity (% unique Push programs):	 0.434
Total error diversity:				 0.004
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1444039
--- Timings ---
Current time: 1559583109529 milliseconds
Total Time:           6.2 seconds
Initialization:       0.1 seconds,  1.6%
Reproduction:         2.3 seconds, 37.8%
Fitness Testing:      2.7 seconds, 43.8%
Report:               1.0 seconds, 16.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [1 1 1 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [1 1 1 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (309 88 1000 88 479 481 481 1000 1000 481)
Population mean number of elite cases: 5.41
Count of perfect (error zero) individuals by case: (309 88 0 88 479 481 481 0 0 481)
Population mean number of perfect (error zero) cases: 2.41
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [1 1 1 1 0 0 0 1 1 0]
Total: 6
Mean: 0.6
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 7.593
Median total errors in population: 8
Error averages by case: (0.691 0.912 1.0 0.912 0.521 0.519 0.519 1.0 1.0 0.519)
Error minima by case: (0 0 1 0 0 0 0 1 1 0)
Average genome size in population (length): 29.877
Average program size in population (points): 38.189
Average percent parens in population: 0.206
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 3.211
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 391
Genome diversity (% unique genomes):	 0.439
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 413
Syntactic diversity (% unique Push programs):	 0.414
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 2096578
--- Timings ---
Current time: 1559583112121 milliseconds
Total Time:           8.8 seconds
Initialization:       0.1 seconds,  1.1%
Reproduction:         4.0 seconds, 45.9%
Fitness Testing:      3.3 seconds, 37.4%
Report:               1.4 seconds, 15.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [1 0 1 1 1 1 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [1 0 1 1 1 1 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 532 135 237 1000 135 532 532 901 531)
Population mean number of elite cases: 5.53
Count of perfect (error zero) individuals by case: (0 532 135 237 0 135 532 532 901 531)
Population mean number of perfect (error zero) cases: 3.54
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [1 0 1 1 1 1 0 0 0 0]
Total: 5
Mean: 0.5
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 6.465
Median total errors in population: 5
Error averages by case: (1.0 0.468 0.865 0.763 1.0 0.865 0.468 0.468 0.099 0.469)
Error minima by case: (1 0 0 0 1 0 0 0 0 0)
Average genome size in population (length): 23.778
Average program size in population (points): 30.543
Average percent parens in population: 0.197
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.75775
Median age in population: 5.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 332
Genome diversity (% unique genomes):	 0.43
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 383
Syntactic diversity (% unique Push programs):	 0.395
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2900357
--- Timings ---
Current time: 1559583114872 milliseconds
Total Time:          11.6 seconds
Initialization:       0.1 seconds,  0.9%
Reproduction:         5.9 seconds, 50.6%
Fitness Testing:      4.0 seconds, 34.2%
Report:               1.7 seconds, 14.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 0 1 1 0 1 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 0 1 1 0 1 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (548 548 1000 1 548 112 1000 113 255 549)
Population mean number of elite cases: 4.67
Count of perfect (error zero) individuals by case: (548 548 0 1 548 112 0 113 255 549)
Population mean number of perfect (error zero) cases: 2.67
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 0 1 1 0 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 7.326
Median total errors in population: 6
Error averages by case: (0.452 0.452 1.0 0.999 0.452 0.888 1.0 0.887 0.745 0.451)
Error minima by case: (0 0 1 0 0 0 1 0 0 0)
Average genome size in population (length): 23.723
Average program size in population (points): 30.24
Average percent parens in population: 0.200
Minimum age in population: 4.0
Maximum age in population: 8.0
Average age in population: 6.204
Median age in population: 6.25
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 276
Genome diversity (% unique genomes):	 0.471
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 329
Syntactic diversity (% unique Push programs):	 0.437
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 3552164
--- Timings ---
Current time: 1559583117537 milliseconds
Total Time:          14.2 seconds
Initialization:       0.1 seconds,  0.7%
Reproduction:         7.7 seconds, 54.0%
Fitness Testing:      4.5 seconds, 31.7%
Report:               1.9 seconds, 13.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 0 1 0 0 0 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 0 1 0 0 0 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (455 454 1 816 452 452 454 1 1 111)
Population mean number of elite cases: 3.20
Count of perfect (error zero) individuals by case: (455 454 1 816 452 452 454 1 1 111)
Population mean number of perfect (error zero) cases: 3.20
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 0 1 0 0 0 0 1 1 1]
Total: 4
Mean: 0.4
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 6.803
Median total errors in population: 8
Error averages by case: (0.545 0.546 0.999 0.184 0.548 0.548 0.546 0.999 0.999 0.889)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 22.762
Average program size in population (points): 29.756
Average percent parens in population: 0.209
Minimum age in population: 5.0
Maximum age in population: 9.625
Average age in population: 7.6221875
Median age in population: 7.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 192
Genome diversity (% unique genomes):	 0.476
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 230
Syntactic diversity (% unique Push programs):	 0.436
Total error diversity:				 0.006
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 4341143
--- Timings ---
Current time: 1559583120551 milliseconds
Total Time:          17.3 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         9.8 seconds, 56.8%
Fitness Testing:      5.2 seconds, 29.8%
Report:               2.2 seconds, 12.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction boolean_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (boolean_dup_times boolean_invert_first_then_and boolean_shove integer_stackdepth boolean_and in1 boolean_swap print_boolean print_integer -82 integer_dec boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 0 0 0 1 1 1 1 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 19
Percent parens: 0.105
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction boolean_dup_times} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_dec} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (boolean_dup_times boolean_invert_first_then_and boolean_shove integer_stackdepth boolean_and in1 boolean_swap print_boolean print_integer -82 integer_dec boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 0 0 0 1 1 1 1 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 19
Percent parens: 0.105
--- Lexicase Population Statistics ---
Count of elite individuals by case: (468 467 563 467 95 367 1 367 367 369)
Population mean number of elite cases: 3.53
Count of perfect (error zero) individuals by case: (468 467 563 467 95 367 1 367 367 369)
Population mean number of perfect (error zero) cases: 3.53
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 0 0 0 1 1 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 6.469
Median total errors in population: 6
Error averages by case: (0.532 0.533 0.437 0.533 0.905 0.633 0.999 0.633 0.633 0.631)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 17.065
Average program size in population (points): 20.663
Average percent parens in population: 0.163
Minimum age in population: 6.75
Maximum age in population: 11.125
Average age in population: 9.6794375
Median age in population: 9.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 303
Genome diversity (% unique genomes):	 0.387
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 317
Syntactic diversity (% unique Push programs):	 0.351
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 4598680
--- Timings ---
Current time: 1559583123117 milliseconds
Total Time:          19.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        11.8 seconds, 59.7%
Fitness Testing:      5.4 seconds, 27.3%
Report:               2.5 seconds, 12.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 1 0 1 1 1 1 0 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 1 0 1 1 1 1 0 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (363 91 929 91 113 362 91 363 363 362)
Population mean number of elite cases: 3.13
Count of perfect (error zero) individuals by case: (363 91 929 91 113 362 91 363 363 362)
Population mean number of perfect (error zero) cases: 3.13
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 1 0 1 1 1 1 0 0 1]
Total: 6
Mean: 0.6
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 6.872
Median total errors in population: 7
Error averages by case: (0.637 0.909 0.071 0.909 0.887 0.638 0.909 0.637 0.637 0.638)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 17.041
Average program size in population (points): 20.493
Average percent parens in population: 0.157
Minimum age in population: 7.875
Maximum age in population: 12.921875
Average age in population: 11.129640625
Median age in population: 11.203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 242
Genome diversity (% unique genomes):	 0.413
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 262
Syntactic diversity (% unique Push programs):	 0.37
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 4997546
--- Timings ---
Current time: 1559583125519 milliseconds
Total Time:          22.2 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.6 seconds, 61.3%
Fitness Testing:      5.8 seconds, 25.9%
Report:               2.7 seconds, 12.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_eq} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_eq print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [1 0 0 0 1 1 1 0 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_eq} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_eq print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [1 0 0 0 1 1 1 0 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (104 344 344 344 280 281 215 727 104 215)
Population mean number of elite cases: 2.96
Count of perfect (error zero) individuals by case: (104 344 344 344 280 281 215 727 104 215)
Population mean number of perfect (error zero) cases: 2.96
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction exec_s} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and boolean_and in1 exec_s (print_boolean print_integer) (-82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3) (integer_rot exec_do*count ()))
Errors: [1 0 0 0 1 1 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 22
Size: 28
Percent parens: 0.214
--- Population Statistics ---
Average total errors in population: 7.042
Median total errors in population: 7
Error averages by case: (0.896 0.656 0.656 0.656 0.72 0.719 0.785 0.273 0.896 0.785)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 20.342
Average program size in population (points): 25.372
Average percent parens in population: 0.181
Minimum age in population: 8.875
Maximum age in population: 14.390625
Average age in population: 12.4983515625
Median age in population: 12.578125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 119
Genome diversity (% unique genomes):	 0.496
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 136
Syntactic diversity (% unique Push programs):	 0.447
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 5399581
--- Timings ---
Current time: 1559583128489 milliseconds
Total Time:          25.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        15.9 seconds, 63.3%
Fitness Testing:      6.1 seconds, 24.4%
Report:               3.0 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction integer_swap} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_do*count})
Lexicase best program: (integer_swap boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_mod exec_do*count ())
Lexicase best errors: [1 0 1 0 1 0 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 17
Percent parens: 0.118
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction integer_swap} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_do*count})
Zero cases best program: (integer_swap boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_mod exec_do*count ())
Zero cases best errors: [1 0 1 0 1 0 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 17
Percent parens: 0.118
--- Lexicase Population Statistics ---
Count of elite individuals by case: (189 345 195 934 197 534 344 189 345 199)
Population mean number of elite cases: 3.47
Count of perfect (error zero) individuals by case: (189 345 195 934 197 534 344 189 345 199)
Population mean number of perfect (error zero) cases: 3.47
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction exec_do*while} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_mult} {:close 1, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction integer_mod} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_eq})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer exec_do*while (integer_eq boolean_and boolean_invert_second_then_and integer_empty) boolean_yankdup exec_y_when_autoconstructing (exec_if (boolean_xor integer_min) (boolean_swap integer_gt integer_inc integer_mult in3) integer_sub) integer_add integer_mod in4 print_integer exec_eq)
Errors: [1 0 1 0 1 0 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 28
Size: 34
Percent parens: 0.176
--- Population Statistics ---
Average total errors in population: 6.529
Median total errors in population: 6
Error averages by case: (0.811 0.655 0.805 0.066 0.803 0.466 0.656 0.811 0.655 0.801)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 18.997
Average program size in population (points): 23.275
Average percent parens in population: 0.169
Minimum age in population: 10.25
Maximum age in population: 16.08203125
Average age in population: 14.00505859375
Median age in population: 14.05078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 120
Genome diversity (% unique genomes):	 0.516
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 130
Syntactic diversity (% unique Push programs):	 0.471
Total error diversity:				 0.006
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 5824874
--- Timings ---
Current time: 1559583131690 milliseconds
Total Time:          28.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        18.1 seconds, 64.6%
Fitness Testing:      6.5 seconds, 23.2%
Report:               3.3 seconds, 11.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Smallest problem report - generation 10
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap integer_pop print_integer -82)
Lexicase best errors: [0 0 1 0 0 1 0 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 18
Percent parens: 0.111
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap integer_pop print_integer -82)
Zero cases best errors: [0 0 1 0 0 1 0 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 18
Percent parens: 0.111
--- Lexicase Population Statistics ---
Count of elite individuals by case: (941 941 1 389 389 246 389 389 246 304)
Population mean number of elite cases: 4.24
Count of perfect (error zero) individuals by case: (941 941 1 389 389 246 389 389 246 304)
Population mean number of perfect (error zero) cases: 4.24
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction integer_mod} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times (boolean_dup boolean_and in1 integer_mod print_integer) boolean_eq integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 0 1 0 0 1 0 0 1 1]
Total: 4
Mean: 0.4
Genome size: 14
Size: 17
Percent parens: 0.176
--- Population Statistics ---
Average total errors in population: 5.765
Median total errors in population: 6
Error averages by case: (0.059 0.059 0.999 0.611 0.611 0.754 0.611 0.611 0.754 0.696)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.468
Average program size in population (points): 24.556
Average percent parens in population: 0.190
Minimum age in population: 11.5
Maximum age in population: 17.453125
Average age in population: 15.489548828125
Median age in population: 15.580078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 98
Genome diversity (% unique genomes):	 0.519
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 115
Syntactic diversity (% unique Push programs):	 0.47
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 6208209
--- Timings ---
Current time: 1559583134563 milliseconds
Total Time:          31.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        20.4 seconds, 65.2%
Fitness Testing:      6.8 seconds, 21.9%
Report:               3.9 seconds, 12.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_while} {:close 2, :instruction exec_do*count} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_mult} {:close 1, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction integer_mod} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_eq} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if})
Lexicase best program: (exec_while (exec_do*count ()) boolean_invert_second_then_and integer_max boolean_yankdup exec_y_when_autoconstructing (exec_if (boolean_xor integer_min) (boolean_swap integer_gt print_boolean integer_mult in3) integer_sub) integer_add integer_mod in4 print_integer exec_eq boolean_dup_times exec_swap (exec_k_when_autoconstructing (exec_do*range (boolean_yank exec_if () ())) ()) ())
Lexicase best errors: [1 1 0 1 0 0 1 0 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 39
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_while} {:close 2, :instruction exec_do*count} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction print_boolean} {:close 0, :instruction integer_mult} {:close 1, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction integer_mod} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_eq} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if})
Zero cases best program: (exec_while (exec_do*count ()) boolean_invert_second_then_and integer_max boolean_yankdup exec_y_when_autoconstructing (exec_if (boolean_xor integer_min) (boolean_swap integer_gt print_boolean integer_mult in3) integer_sub) integer_add integer_mod in4 print_integer exec_eq boolean_dup_times exec_swap (exec_k_when_autoconstructing (exec_do*range (boolean_yank exec_if () ())) ()) ())
Zero cases best errors: [1 1 0 1 0 0 1 0 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 39
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (237 485 118 94 933 118 237 118 118 487)
Population mean number of elite cases: 2.94
Count of perfect (error zero) individuals by case: (237 485 118 94 933 118 237 118 118 487)
Population mean number of perfect (error zero) cases: 2.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_while} {:close 2, :instruction exec_do*count} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction tagged_805} {:close 0, :instruction integer_mult} {:close 1, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction integer_mod} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if})
Best program: (exec_while (exec_do*count ()) boolean_invert_second_then_and integer_max boolean_yankdup exec_y_when_autoconstructing (boolean_dup_items boolean_xor integer_min) boolean_swap integer_gt tagged_805 integer_mult in3 integer_sub integer_add integer_mod in4 print_integer exec_eq integer_mod exec_swap (exec_k_when_autoconstructing (exec_do*range (boolean_yank exec_if () ())) ()) ())
Errors: [1 1 0 1 0 0 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 26
Size: 37
Percent parens: 0.297
--- Population Statistics ---
Average total errors in population: 7.055
Median total errors in population: 7
Error averages by case: (0.763 0.515 0.882 0.906 0.067 0.882 0.763 0.882 0.882 0.513)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 17.799
Average program size in population (points): 22.64
Average percent parens in population: 0.193
Minimum age in population: 12.5
Maximum age in population: 18.974609375
Average age in population: 17.0353583984375
Median age in population: 17.111328125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 88
Genome diversity (% unique genomes):	 0.475
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 130
Syntactic diversity (% unique Push programs):	 0.429
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 6512269
--- Timings ---
Current time: 1559583136892 milliseconds
Total Time:          33.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        22.3 seconds, 66.1%
Fitness Testing:      7.1 seconds, 21.1%
Report:               4.2 seconds, 12.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Smallest problem report - generation 12
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [1 1 1 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [1 1 1 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (116 402 195 116 735 215 930 197 195 215)
Population mean number of elite cases: 3.32
Count of perfect (error zero) individuals by case: (116 402 195 116 735 215 930 197 195 215)
Population mean number of perfect (error zero) cases: 3.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [1 1 1 1 0 0 0 1 1 0]
Total: 6
Mean: 0.6
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 6.684
Median total errors in population: 6
Error averages by case: (0.884 0.598 0.805 0.884 0.265 0.785 0.07 0.803 0.805 0.785)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 21.697
Average program size in population (points): 28.562
Average percent parens in population: 0.219
Minimum age in population: 15.671875
Maximum age in population: 20.5458984375
Average age in population: 18.535439453125
Median age in population: 18.666259765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 72
Genome diversity (% unique genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 91
Syntactic diversity (% unique Push programs):	 0.512
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 6829256
--- Timings ---
Current time: 1559583140068 milliseconds
Total Time:          36.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        24.9 seconds, 67.7%
Fitness Testing:      7.4 seconds, 20.2%
Report:               4.4 seconds, 11.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Smallest problem report - generation 13
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot)
Lexicase best errors: [1 0 0 0 0 1 1 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 15
Percent parens: 0.133
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot)
Zero cases best errors: [1 0 0 0 0 1 1 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 15
Percent parens: 0.133
--- Lexicase Population Statistics ---
Count of elite individuals by case: (128 253 254 253 926 665 296 255 296 242)
Population mean number of elite cases: 3.57
Count of perfect (error zero) individuals by case: (128 253 254 253 926 665 296 255 296 242)
Population mean number of perfect (error zero) cases: 3.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [1 0 0 0 0 1 1 0 1 1]
Total: 5
Mean: 0.5
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 6.432
Median total errors in population: 6
Error averages by case: (0.872 0.747 0.746 0.747 0.074 0.335 0.704 0.745 0.704 0.758)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.541
Average program size in population (points): 25.993
Average percent parens in population: 0.219
Minimum age in population: 16.923828125
Maximum age in population: 21.96533203125
Average age in population: 20.02812255859375
Median age in population: 20.14111328125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 100
Genome diversity (% unique genomes):	 0.536
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 121
Syntactic diversity (% unique Push programs):	 0.495
Total error diversity:				 0.006
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 7134584
--- Timings ---
Current time: 1559583142795 milliseconds
Total Time:          39.5 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        27.1 seconds, 68.5%
Fitness Testing:      7.7 seconds, 19.5%
Report:               4.6 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Smallest problem report - generation 14
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () integer_dup_items boolean_and in1 boolean_swap print_boolean print_integer boolean_eq integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [1 1 0 0 0 0 1 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () integer_dup_items boolean_and in1 boolean_swap print_boolean print_integer boolean_eq integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [1 1 0 0 0 0 1 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (130 285 915 382 382 382 118 287 118 382)
Population mean number of elite cases: 3.38
Count of perfect (error zero) individuals by case: (130 285 915 382 382 382 118 287 118 382)
Population mean number of perfect (error zero) cases: 3.38
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_yankdup} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_yankdup boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [1 1 0 0 0 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 15
Size: 17
Percent parens: 0.118
--- Population Statistics ---
Average total errors in population: 6.619
Median total errors in population: 7
Error averages by case: (0.87 0.715 0.085 0.618 0.618 0.618 0.882 0.713 0.882 0.618)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 17.802
Average program size in population (points): 22.904
Average percent parens in population: 0.198
Minimum age in population: 18.16796875
Maximum age in population: 23.316162109375
Average age in population: 21.51478295898438
Median age in population: 21.5860595703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 85
Genome diversity (% unique genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 113
Syntactic diversity (% unique Push programs):	 0.479
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 7474351
--- Timings ---
Current time: 1559583145364 milliseconds
Total Time:          42.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.1 seconds, 69.1%
Fitness Testing:      8.0 seconds, 19.0%
Report:               4.9 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Smallest problem report - generation 15
Test total error for best: 677
Test mean error for best: 0.67700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: 31                 
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 63                 
Correct output: 14                  | Program output: 58                 
Correct output: 8                   | Program output: 96                 
Correct output: 32                  | Program output: 60                 
Correct output: 22                  | Program output: 25                 
Correct output: 17                  | Program output: 43                 
Correct output: 13                  | Program output: 72                 
Correct output: 57                  | Program output: 77                 
Correct output: 12                  | Program output: 84                 
Correct output: 35                  | Program output: 62                 
Correct output: 60                  | Program output: 65                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 24                 
Correct output: 3                   | Program output: 92                 
Correct output: 46                  | Program output: 69                 
Correct output: 56                  | Program output: 56                 
Correct output: 29                  | Program output: 97                 
Correct output: 0                   | Program output: 93                 
Correct output: 17                  | Program output: 100                
Correct output: 3                   | Program output: 74                 
Correct output: -39                 | Program output: 58                 
Correct output: -44                 | Program output: 5                  
Correct output: -97                 | Program output: -64                
Correct output: -76                 | Program output: -13                
Correct output: -11                 | Program output: -3                 
Correct output: -95                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -97                 | Program output: -75                
Correct output: -40                 | Program output: 6                  
Correct output: -92                 | Program output: 43                 
Correct output: 7                   | Program output: 48                 
Correct output: -1                  | Program output: 46                 
Correct output: -71                 | Program output: 26                 
Correct output: -27                 | Program output: 69                 
Correct output: -82                 | Program output: -19                
Correct output: -73                 | Program output: 9                  
Correct output: -88                 | Program output: -88                
Correct output: -52                 | Program output: 66                 
Correct output: -79                 | Program output: 82                 
Correct output: -71                 | Program output: -17                
Correct output: -53                 | Program output: 51                 
Correct output: -64                 | Program output: 16                 
Correct output: -68                 | Program output: 68                 
Correct output: -65                 | Program output: 28                 
Correct output: -76                 | Program output: 44                 
Correct output: -55                 | Program output: 10                 
Correct output: -87                 | Program output: -87                
Correct output: -40                 | Program output: -40                
Correct output: -95                 | Program output: 19                 
Correct output: -68                 | Program output: -68                
Correct output: -28                 | Program output: -13                
Correct output: -84                 | Program output: 100                
Correct output: -92                 | Program output: -92                
Correct output: -67                 | Program output: 73                 
Correct output: -67                 | Program output: -56                
Correct output: -65                 | Program output: -9                 
Correct output: -76                 | Program output: -28                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: -64                
Correct output: -24                 | Program output: 73                 
Correct output: -35                 | Program output: -6                 
Correct output: -33                 | Program output: 79                 
Correct output: -17                 | Program output: -4                 
Correct output: -91                 | Program output: -27                
Correct output: -74                 | Program output: 4                  
Correct output: -43                 | Program output: -43                
Correct output: -90                 | Program output: -18                
Correct output: -89                 | Program output: -33                
Correct output: 6                   | Program output: 23                 
Correct output: -49                 | Program output: -22                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -83                 | Program output: -83                
Correct output: -37                 | Program output: 76                 
Correct output: -76                 | Program output: -70                
Correct output: -19                 | Program output: 36                 
Correct output: -73                 | Program output: 39                 
Correct output: -87                 | Program output: 48                 
Correct output: -39                 | Program output: 11                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction exec_while} {:close 3, :instruction exec_do*count} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_if} {:close 0, :instruction exec_if} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_mult} {:close 1, :instruction in3} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction -82})
Lexicase best program: (exec_while (exec_while (exec_do*count ())) exec_dup_items integer_max boolean_yankdup exec_y_when_autoconstructing (exec_if (exec_if (integer_min) (boolean_swap integer_gt integer_inc integer_mult in3) boolean_swap in3 boolean_xor boolean_dup_times print_integer exec_y (-82)) ()))
Lexicase best errors: [1 0 0 1 0 1 0 1 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 32
Percent parens: 0.313
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction exec_while} {:close 3, :instruction exec_do*count} {:close 0, :instruction exec_dup_items} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_if} {:close 0, :instruction exec_if} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_mult} {:close 1, :instruction in3} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction print_integer} {:close 0, :instruction exec_y} {:close 0, :instruction -82})
Zero cases best program: (exec_while (exec_while (exec_do*count ())) exec_dup_items integer_max boolean_yankdup exec_y_when_autoconstructing (exec_if (exec_if (integer_min) (boolean_swap integer_gt integer_inc integer_mult in3) boolean_swap in3 boolean_xor boolean_dup_times print_integer exec_y (-82)) ()))
Zero cases best errors: [1 0 0 1 0 1 0 1 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 32
Percent parens: 0.313
--- Lexicase Population Statistics ---
Count of elite individuals by case: (405 191 915 226 191 91 191 91 226 91)
Population mean number of elite cases: 2.62
Count of perfect (error zero) individuals by case: (405 191 915 226 191 91 191 91 226 91)
Population mean number of perfect (error zero) cases: 2.62
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction exec_while} {:close 3, :instruction exec_do*count} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_max} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_inc} {:close 1, :instruction integer_mult} {:close 1, :instruction in3} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_add} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 1, :instruction exec_eq} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_if})
Best program: (exec_while (exec_while (exec_do*count ())) boolean_invert_second_then_and integer_max boolean_yankdup exec_y_when_autoconstructing (exec_if (boolean_xor integer_min) (boolean_swap integer_gt integer_inc integer_mult) in3) integer_sub integer_add integer_mod integer_rot print_integer exec_eq boolean_dup_times exec_swap (exec_k_when_autoconstructing (exec_do*range (boolean_yank exec_if () ())) ()) ())
Errors: [1 0 0 1 0 1 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 27
Size: 41
Percent parens: 0.341
--- Population Statistics ---
Average total errors in population: 7.382
Median total errors in population: 7
Error averages by case: (0.595 0.809 0.085 0.774 0.809 0.909 0.809 0.909 0.774 0.909)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 18.137
Average program size in population (points): 23.762
Average percent parens in population: 0.210
Minimum age in population: 20.09619140625
Maximum age in population: 25.02899169921875
Average age in population: 23.03194226074219
Median age in population: 23.14166259765625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 63
Genome diversity (% unique genomes):	 0.539
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.49
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 7808656
--- Timings ---
Current time: 1559583147889 milliseconds
Total Time:          44.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.1 seconds, 69.6%
Fitness Testing:      8.3 seconds, 18.6%
Report:               5.2 seconds, 11.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Smallest problem report - generation 16
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: 68                 
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 73                 
Correct output: -1                  | Program output: 76                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 42                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 66                 
Correct output: 22                  | Program output: 83                 
Correct output: 17                  | Program output: 76                 
Correct output: 13                  | Program output: 21                 
Correct output: 57                  | Program output: 83                 
Correct output: 12                  | Program output: 12                 
Correct output: 35                  | Program output: 57                 
Correct output: 60                  | Program output: 60                 
Correct output: 31                  | Program output: 85                 
Correct output: 24                  | Program output: 53                 
Correct output: 3                   | Program output: 59                 
Correct output: 46                  | Program output: 49                 
Correct output: 56                  | Program output: 58                 
Correct output: 29                  | Program output: 82                 
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 39                 
Correct output: 3                   | Program output: 61                 
Correct output: -39                 | Program output: 81                 
Correct output: -44                 | Program output: 2                  
Correct output: -97                 | Program output: -12                
Correct output: -76                 | Program output: 11                 
Correct output: -11                 | Program output: 74                 
Correct output: -95                 | Program output: 91                 
Correct output: -78                 | Program output: 31                 
Correct output: -97                 | Program output: -97                
Correct output: -40                 | Program output: 26                 
Correct output: -92                 | Program output: 67                 
Correct output: 7                   | Program output: 12                 
Correct output: -1                  | Program output: 8                  
Correct output: -71                 | Program output: -71                
Correct output: -27                 | Program output: -27                
Correct output: -82                 | Program output: 29                 
Correct output: -73                 | Program output: 13                 
Correct output: -88                 | Program output: 76                 
Correct output: -52                 | Program output: 88                 
Correct output: -79                 | Program output: -79                
Correct output: -71                 | Program output: 70                 
Correct output: -53                 | Program output: 96                 
Correct output: -64                 | Program output: -40                
Correct output: -68                 | Program output: -10                
Correct output: -65                 | Program output: 14                 
Correct output: -76                 | Program output: 12                 
Correct output: -55                 | Program output: -55                
Correct output: -87                 | Program output: 22                 
Correct output: -40                 | Program output: -39                
Correct output: -95                 | Program output: -27                
Correct output: -68                 | Program output: -66                
Correct output: -28                 | Program output: 74                 
Correct output: -84                 | Program output: -84                
Correct output: -92                 | Program output: -2                 
Correct output: -67                 | Program output: -18                
Correct output: -67                 | Program output: -67                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -87                 | Program output: 57                 
Correct output: -64                 | Program output: 3                  
Correct output: -24                 | Program output: 73                 
Correct output: -35                 | Program output: -35                
Correct output: -33                 | Program output: 7                  
Correct output: -17                 | Program output: -17                
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: 42                 
Correct output: -43                 | Program output: -40                
Correct output: -90                 | Program output: -35                
Correct output: -89                 | Program output: -40                
Correct output: 6                   | Program output: 74                 
Correct output: -49                 | Program output: -5                 
Correct output: -91                 | Program output: 25                 
Correct output: -82                 | Program output: -82                
Correct output: -39                 | Program output: -36                
Correct output: -83                 | Program output: 90                 
Correct output: -37                 | Program output: -37                
Correct output: -76                 | Program output: -76                
Correct output: -19                 | Program output: -11                
Correct output: -73                 | Program output: 78                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: 91                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction exec_while} {:close 3, :instruction exec_do*count} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in2} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Lexicase best program: (exec_while (exec_while (exec_do*count ())) boolean_and in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap in2 print_integer -82)
Lexicase best errors: [0 1 1 1 1 1 0 0 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 19
Percent parens: 0.211
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_while} {:close 0, :instruction exec_while} {:close 3, :instruction exec_do*count} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in2} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Zero cases best program: (exec_while (exec_while (exec_do*count ())) boolean_and in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap in2 print_integer -82)
Zero cases best errors: [0 1 1 1 1 1 0 0 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 19
Percent parens: 0.211
--- Lexicase Population Statistics ---
Count of elite individuals by case: (192 310 300 310 300 114 192 916 192 192)
Population mean number of elite cases: 3.02
Count of perfect (error zero) individuals by case: (192 310 300 310 300 114 192 916 192 192)
Population mean number of perfect (error zero) cases: 3.02
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in2} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap in2 print_integer -82)
Errors: [0 1 1 1 1 1 0 0 0 0]
Total: 5
Mean: 0.5
Genome size: 14
Size: 16
Percent parens: 0.125
--- Population Statistics ---
Average total errors in population: 6.982
Median total errors in population: 7
Error averages by case: (0.808 0.69 0.7 0.69 0.7 0.886 0.808 0.084 0.808 0.808)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 21.602
Average program size in population (points): 29.753
Average percent parens in population: 0.251
Minimum age in population: 21.705078125
Maximum age in population: 26.4801025390625
Average age in population: 24.48117443847656
Median age in population: 24.57560729980469
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 47
Genome diversity (% unique genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 60
Syntactic diversity (% unique Push programs):	 0.527
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 8076383
--- Timings ---
Current time: 1559583150409 milliseconds
Total Time:          47.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        33.3 seconds, 70.4%
Fitness Testing:      8.6 seconds, 18.1%
Report:               5.3 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Smallest problem report - generation 17
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction boolean_dup_items} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in2} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Lexicase best program: (boolean_dup_items exec_dup_times () integer_flush boolean_and in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap in2 print_integer -82)
Lexicase best errors: [1 0 1 1 1 0 0 0 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 17
Percent parens: 0.118
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction boolean_dup_items} {:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in2} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Zero cases best program: (boolean_dup_items exec_dup_times () integer_flush boolean_and in1 boolean_swap print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap in2 print_integer -82)
Zero cases best errors: [1 0 1 1 1 0 0 0 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 17
Percent parens: 0.118
--- Lexicase Population Statistics ---
Count of elite individuals by case: (115 725 208 208 115 932 932 432 431 178)
Population mean number of elite cases: 4.28
Count of perfect (error zero) individuals by case: (115 725 208 208 115 932 932 432 431 178)
Population mean number of perfect (error zero) cases: 4.28
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 1, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times (boolean_dup) boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [0 0 1 1 0 0 0 1 1 1]
Total: 5
Mean: 0.5
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 5.724
Median total errors in population: 5
Error averages by case: (0.885 0.275 0.792 0.792 0.885 0.068 0.068 0.568 0.569 0.822)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 18.468
Average program size in population (points): 24.398
Average percent parens in population: 0.216
Minimum age in population: 22.820068359375
Maximum age in population: 28.26905822753906
Average age in population: 25.92200073242188
Median age in population: 25.97908020019531
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 74
Genome diversity (% unique genomes):	 0.542
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 128
Syntactic diversity (% unique Push programs):	 0.494
Total error diversity:				 0.004
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 8331126
--- Timings ---
Current time: 1559583152880 milliseconds
Total Time:          49.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        35.4 seconds, 71.1%
Fitness Testing:      8.8 seconds, 17.7%
Report:               5.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Smallest problem report - generation 18
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction integer_mod} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times (boolean_dup boolean_and in1 integer_mod print_integer) boolean_eq integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 exec_do*count (exec_do*count ()))
Lexicase best errors: [0 0 0 1 1 0 1 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction integer_mod} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times (boolean_dup boolean_and in1 integer_mod print_integer) boolean_eq integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 exec_do*count (exec_do*count ()))
Zero cases best errors: [0 0 0 1 1 0 1 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (939 279 278 232 277 279 277 232 277 279)
Population mean number of elite cases: 3.35
Count of perfect (error zero) individuals by case: (939 279 278 232 277 279 277 232 277 279)
Population mean number of perfect (error zero) cases: 3.35
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction print_boolean} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_while})
Best program: (exec_dup_times () boolean_dup print_boolean in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq exec_while ())
Errors: [0 0 0 1 1 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 12
Size: 15
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 6.651
Median total errors in population: 6
Error averages by case: (0.061 0.721 0.722 0.768 0.723 0.721 0.723 0.768 0.723 0.721)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 18.572
Average program size in population (points): 24.439
Average percent parens in population: 0.218
Minimum age in population: 24.5491943359375
Maximum age in population: 29.67135620117188
Average age in population: 27.35681742095947
Median age in population: 27.39519119262695
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 45
Genome diversity (% unique genomes):	 0.555
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.512
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 8643851
--- Timings ---
Current time: 1559583155962 milliseconds
Total Time:          52.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        38.0 seconds, 72.0%
Fitness Testing:      9.1 seconds, 17.2%
Report:               5.6 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Smallest problem report - generation 19
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction tagged_642} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () integer_dup_items boolean_and in1 boolean_swap print_boolean print_integer boolean_eq tagged_642 boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 1 0 1 1 1 0 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_eq} {:close 0, :instruction tagged_642} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () integer_dup_items boolean_and in1 boolean_swap print_boolean print_integer boolean_eq tagged_642 boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 1 0 1 1 1 0 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (433 176 434 176 336 176 947 611 1 434)
Population mean number of elite cases: 3.72
Count of perfect (error zero) individuals by case: (433 176 434 176 336 176 947 611 1 434)
Population mean number of perfect (error zero) cases: 3.72
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction print_boolean} {:close 1, :instruction print_integer})
Best program: (exec_dup_times (exec_dup_times () boolean_dup boolean_and in1 exec_s_when_autoconstructing (print_boolean) (print_integer) ()))
Errors: [0 1 0 1 1 1 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 8
Size: 14
Percent parens: 0.429
--- Population Statistics ---
Average total errors in population: 6.276
Median total errors in population: 5
Error averages by case: (0.567 0.824 0.566 0.824 0.664 0.824 0.053 0.389 0.999 0.566)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 16.073
Average program size in population (points): 20.136
Average percent parens in population: 0.192
Minimum age in population: 26.0462646484375
Maximum age in population: 31.02275848388672
Average age in population: 28.84706351852417
Median age in population: 28.92428588867188
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 34
Genome diversity (% unique genomes):	 0.482
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 64
Syntactic diversity (% unique Push programs):	 0.432
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 8968296
--- Timings ---
Current time: 1559583158608 milliseconds
Total Time:          55.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        40.3 seconds, 72.6%
Fitness Testing:      9.4 seconds, 16.9%
Report:               5.7 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Smallest problem report - generation 20
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [0 1 1 0 0 0 0 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [0 1 1 0 0 0 0 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (349 91 91 349 349 928 349 349 91 367)
Population mean number of elite cases: 3.31
Count of perfect (error zero) individuals by case: (349 91 91 349 349 928 349 349 91 367)
Population mean number of perfect (error zero) cases: 3.31
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_yankdup} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_empty} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_yankdup boolean_dup boolean_and in1 boolean_swap integer_empty print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 1 1 0 0 0 0 0 1 1]
Total: 4
Mean: 0.4
Genome size: 15
Size: 17
Percent parens: 0.118
--- Population Statistics ---
Average total errors in population: 6.687
Median total errors in population: 8
Error averages by case: (0.651 0.909 0.909 0.651 0.651 0.072 0.651 0.651 0.909 0.633)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.826
Average program size in population (points): 25.639
Average percent parens in population: 0.217
Minimum age in population: 27.67846298217773
Maximum age in population: 32.48064231872559
Average age in population: 30.2499053401947
Median age in population: 30.26215171813965
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 90
Genome diversity (% unique genomes):	 0.526
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 94
Syntactic diversity (% unique Push programs):	 0.482
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 9373819
--- Timings ---
Current time: 1559583161178 milliseconds
Total Time:          57.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        42.3 seconds, 73.0%
Fitness Testing:      9.7 seconds, 16.8%
Report:               5.8 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Smallest problem report - generation 21
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_dup_items} {:close 1, :instruction in3} {:close 0, :instruction integer_rot})
Lexicase best program: (exec_dup_times (boolean_dup boolean_and in1 boolean_swap print_boolean print_integer) -82 integer_eq boolean_and integer_eq integer_dup_items in3 integer_rot)
Lexicase best errors: [0 1 0 0 0 0 1 0 0 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 16
Percent parens: 0.125
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_dup_items} {:close 1, :instruction in3} {:close 0, :instruction integer_rot})
Zero cases best program: (exec_dup_times (boolean_dup boolean_and in1 boolean_swap print_boolean print_integer) -82 integer_eq boolean_and integer_eq integer_dup_items in3 integer_rot)
Zero cases best errors: [0 1 0 0 0 0 1 0 0 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 16
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (939 1000 830 498 498 605 1000 498 939 1000)
Population mean number of elite cases: 7.81
Count of perfect (error zero) individuals by case: (939 0 830 498 498 605 0 498 939 0)
Population mean number of perfect (error zero) cases: 4.81
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction tagged_740} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean print_integer boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_gt boolean_invert_first_then_and tagged_740 integer_rot exec_do*count ())
Errors: [0 1 0 0 0 0 1 0 0 1]
Total: 3
Mean: 0.3
Genome size: 18
Size: 21
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 5.193
Median total errors in population: 7
Error averages by case: (0.061 1.0 0.17 0.502 0.502 0.395 1.0 0.502 0.061 1.0)
Error minima by case: (0 1 0 0 0 0 1 0 0 1)
Average genome size in population (length): 15.633
Average program size in population (points): 19.401
Average percent parens in population: 0.188
Minimum age in population: 29.26615142822266
Maximum age in population: 34.08486175537109
Average age in population: 31.8054636592865
Median age in population: 31.89703178405762
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 25
Genome diversity (% unique genomes):	 0.457
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 53
Syntactic diversity (% unique Push programs):	 0.413
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 9638245
--- Timings ---
Current time: 1559583163833 milliseconds
Total Time:          60.7 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        44.5 seconds, 73.4%
Fitness Testing:     10.0 seconds, 16.4%
Report:               6.1 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Smallest problem report - generation 22
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_while} {:close 2, :instruction exec_do*count} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_or} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Lexicase best program: (exec_dup_times (exec_while (exec_do*count ()) exec_dup_times () boolean_dup boolean_or) exec_dup_times () boolean_dup boolean_and in1 boolean_swap in1 boolean_yank print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap integer_pop print_integer -82)
Lexicase best errors: [1 0 1 1 1 0 0 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 28
Percent parens: 0.214
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_while} {:close 2, :instruction exec_do*count} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_or} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_yank} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_or} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_pop} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Zero cases best program: (exec_dup_times (exec_while (exec_do*count ()) exec_dup_times () boolean_dup boolean_or) exec_dup_times () boolean_dup boolean_and in1 boolean_swap in1 boolean_yank print_boolean boolean_or boolean_dup boolean_and in1 boolean_swap integer_pop print_integer -82)
Zero cases best errors: [1 0 1 1 1 0 0 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 28
Percent parens: 0.214
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 945 1 1000 1000 943 943 946 2 943)
Population mean number of elite cases: 6.72
Count of perfect (error zero) individuals by case: (1 945 1 0 0 943 943 946 2 943)
Population mean number of perfect (error zero) cases: 4.72
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction exec_if} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_flush} {:close 0, :instruction print_integer} {:close 0, :instruction -82})
Best program: (exec_dup_times () in2 boolean_swap print_boolean exec_if () (boolean_dup boolean_and in1 boolean_swap boolean_flush print_integer -82))
Errors: [1 0 1 1 1 0 0 0 1 0]
Total: 5
Mean: 0.5
Genome size: 12
Size: 16
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 5.276
Median total errors in population: 5
Error averages by case: (0.999 0.055 0.999 1.0 1.0 0.057 0.057 0.054 0.998 0.057)
Error minima by case: (0 0 0 1 1 0 0 0 0 0)
Average genome size in population (length): 14.886
Average program size in population (points): 18.302
Average percent parens in population: 0.186
Minimum age in population: 30.65378570556641
Maximum age in population: 35.09805631637573
Average age in population: 33.3307309961319
Median age in population: 33.40825939178467
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 36
Genome diversity (% unique genomes):	 0.405
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 73
Syntactic diversity (% unique Push programs):	 0.349
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 10022019
--- Timings ---
Current time: 1559583166396 milliseconds
Total Time:          63.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        46.7 seconds, 73.8%
Fitness Testing:     10.3 seconds, 16.3%
Report:               6.2 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Smallest problem report - generation 23
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 1, :instruction exec_do*count})
Lexicase best program: (exec_dup_times (boolean_dup boolean_and in1 boolean_swap print_boolean print_integer) -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 1 0 1 0 0 1 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 1, :instruction exec_do*count})
Zero cases best program: (exec_dup_times (boolean_dup boolean_and in1 boolean_swap print_boolean print_integer) -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 1 0 1 0 0 1 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (458 1000 459 1000 954 458 1 495 1 459)
Population mean number of elite cases: 5.28
Count of perfect (error zero) individuals by case: (458 0 459 0 954 458 1 495 1 459)
Population mean number of perfect (error zero) cases: 3.29
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_yankdup} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_yankdup boolean_dup boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 1 0 1 0 0 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 15
Size: 17
Percent parens: 0.118
--- Population Statistics ---
Average total errors in population: 6.715
Median total errors in population: 8
Error averages by case: (0.542 1.0 0.541 1.0 0.046 0.542 0.999 0.505 0.999 0.541)
Error minima by case: (0 1 0 1 0 0 0 0 0 0)
Average genome size in population (length): 11.376
Average program size in population (points): 16.032
Average percent parens in population: 0.307
Minimum age in population: 31.65378570556641
Maximum age in population: 36.55466437339783
Average age in population: 34.87194399762154
Median age in population: 34.87547957897186
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 448
Genome diversity (% unique genomes):	 0.344
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 450
Syntactic diversity (% unique Push programs):	 0.306
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 10265083
--- Timings ---
Current time: 1559583168259 milliseconds
Total Time:          65.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        48.1 seconds, 74.0%
Fitness Testing:     10.5 seconds, 16.2%
Report:               6.3 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Smallest problem report - generation 24
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_empty} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap integer_min boolean_empty print_integer -82)
Lexicase best errors: [0 0 1 1 1 0 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 1, :instruction boolean_empty} {:close 1, :instruction print_integer} {:close 0, :instruction -82})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap integer_min boolean_empty print_integer -82)
Zero cases best errors: [0 0 1 1 1 0 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (556 557 1000 233 233 556 556 1000 156 156)
Population mean number of elite cases: 5.00
Count of perfect (error zero) individuals by case: (556 557 0 233 233 556 556 0 156 156)
Population mean number of perfect (error zero) cases: 3.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_while} {:close 2, :instruction exec_do*count} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction exec_k} {:close 0, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction in3} {:close 1, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_while () exec_do*count () boolean_invert_second_then_and boolean_and in1 exec_k (print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3) () integer_rot exec_do*count ())
Errors: [0 0 1 1 1 0 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 16
Size: 22
Percent parens: 0.273
--- Population Statistics ---
Average total errors in population: 6.997
Median total errors in population: 6
Error averages by case: (0.444 0.443 1.0 0.767 0.767 0.444 0.444 1.0 0.844 0.844)
Error minima by case: (0 0 1 0 0 0 0 1 0 0)
Average genome size in population (length): 13.874
Average program size in population (points): 17.527
Average percent parens in population: 0.216
Minimum age in population: 32.65378570556641
Maximum age in population: 38.00617110729218
Average age in population: 36.42049358999729
Median age in population: 36.47709393501282
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 192
Genome diversity (% unique genomes):	 0.394
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 201
Syntactic diversity (% unique Push programs):	 0.349
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 10602278
--- Timings ---
Current time: 1559583170453 milliseconds
Total Time:          67.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.7 seconds, 74.0%
Fitness Testing:     10.8 seconds, 16.1%
Report:               6.6 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Smallest problem report - generation 25
Test total error for best: 677
Test mean error for best: 0.67700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: 31                 
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 63                 
Correct output: 14                  | Program output: 58                 
Correct output: 8                   | Program output: 96                 
Correct output: 32                  | Program output: 60                 
Correct output: 22                  | Program output: 25                 
Correct output: 17                  | Program output: 43                 
Correct output: 13                  | Program output: 72                 
Correct output: 57                  | Program output: 77                 
Correct output: 12                  | Program output: 84                 
Correct output: 35                  | Program output: 62                 
Correct output: 60                  | Program output: 65                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 24                 
Correct output: 3                   | Program output: 92                 
Correct output: 46                  | Program output: 69                 
Correct output: 56                  | Program output: 56                 
Correct output: 29                  | Program output: 97                 
Correct output: 0                   | Program output: 93                 
Correct output: 17                  | Program output: 100                
Correct output: 3                   | Program output: 74                 
Correct output: -39                 | Program output: 58                 
Correct output: -44                 | Program output: 5                  
Correct output: -97                 | Program output: -64                
Correct output: -76                 | Program output: -13                
Correct output: -11                 | Program output: -3                 
Correct output: -95                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -97                 | Program output: -75                
Correct output: -40                 | Program output: 6                  
Correct output: -92                 | Program output: 43                 
Correct output: 7                   | Program output: 48                 
Correct output: -1                  | Program output: 46                 
Correct output: -71                 | Program output: 26                 
Correct output: -27                 | Program output: 69                 
Correct output: -82                 | Program output: -19                
Correct output: -73                 | Program output: 9                  
Correct output: -88                 | Program output: -88                
Correct output: -52                 | Program output: 66                 
Correct output: -79                 | Program output: 82                 
Correct output: -71                 | Program output: -17                
Correct output: -53                 | Program output: 51                 
Correct output: -64                 | Program output: 16                 
Correct output: -68                 | Program output: 68                 
Correct output: -65                 | Program output: 28                 
Correct output: -76                 | Program output: 44                 
Correct output: -55                 | Program output: 10                 
Correct output: -87                 | Program output: -87                
Correct output: -40                 | Program output: -40                
Correct output: -95                 | Program output: 19                 
Correct output: -68                 | Program output: -68                
Correct output: -28                 | Program output: -13                
Correct output: -84                 | Program output: 100                
Correct output: -92                 | Program output: -92                
Correct output: -67                 | Program output: 73                 
Correct output: -67                 | Program output: -56                
Correct output: -65                 | Program output: -9                 
Correct output: -76                 | Program output: -28                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: -64                
Correct output: -24                 | Program output: 73                 
Correct output: -35                 | Program output: -6                 
Correct output: -33                 | Program output: 79                 
Correct output: -17                 | Program output: -4                 
Correct output: -91                 | Program output: -27                
Correct output: -74                 | Program output: 4                  
Correct output: -43                 | Program output: -43                
Correct output: -90                 | Program output: -18                
Correct output: -89                 | Program output: -33                
Correct output: 6                   | Program output: 23                 
Correct output: -49                 | Program output: -22                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -83                 | Program output: -83                
Correct output: -37                 | Program output: 76                 
Correct output: -76                 | Program output: -70                
Correct output: -19                 | Program output: 36                 
Correct output: -73                 | Program output: 39                 
Correct output: -87                 | Program output: 48                 
Correct output: -39                 | Program output: 11                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () exec_yankdup boolean_and in1 in3 print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Lexicase best errors: [0 0 1 1 1 0 1 1 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 18
Percent parens: 0.167
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_yankdup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () exec_yankdup boolean_and in1 in3 print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Zero cases best errors: [0 0 1 1 1 0 1 1 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 18
Percent parens: 0.167
--- Lexicase Population Statistics ---
Count of elite individuals by case: (947 238 468 239 1000 237 1000 1000 705 1000)
Population mean number of elite cases: 6.83
Count of perfect (error zero) individuals by case: (947 238 468 239 0 237 0 0 705 0)
Population mean number of perfect (error zero) cases: 2.83
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction in3} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction in3} {:close 0, :instruction integer_rot} {:close 1, :instruction exec_do*count})
Best program: (exec_dup_times () boolean_dup boolean_and in1 in3 print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [0 0 1 1 1 0 1 1 0 1]
Total: 6
Mean: 0.6
Genome size: 15
Size: 18
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 7.166
Median total errors in population: 7
Error averages by case: (0.053 0.762 0.532 0.761 1.0 0.763 1.0 1.0 0.295 1.0)
Error minima by case: (0 0 0 0 1 0 1 1 0 1)
Average genome size in population (length): 13.188
Average program size in population (points): 17.021
Average percent parens in population: 0.236
Minimum age in population: 34.93825721740723
Maximum age in population: 39.62034958600998
Average age in population: 37.94638219541311
Median age in population: 38.02920317649841
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 171
Genome diversity (% unique genomes):	 0.407
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 186
Syntactic diversity (% unique Push programs):	 0.359
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 11032090
--- Timings ---
Current time: 1559583172871 milliseconds
Total Time:          69.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.5 seconds, 74.0%
Fitness Testing:     11.2 seconds, 16.0%
Report:               6.8 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Smallest problem report - generation 26
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 2, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_yank} {:close 0, :instruction in2} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_flush} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean boolean_yank in2 boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq integer_flush in3 integer_rot exec_do*count ())
Lexicase best errors: [0 1 1 1 0 1 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 24
Percent parens: 0.125
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 2, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction boolean_yank} {:close 0, :instruction in2} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_flush} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 boolean_swap print_boolean boolean_yank in2 boolean_and in1 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq integer_flush in3 integer_rot exec_do*count ())
Zero cases best errors: [0 1 1 1 0 1 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 24
Percent parens: 0.125
--- Lexicase Population Statistics ---
Count of elite individuals by case: (235 1000 1000 1000 236 1000 235 766 236 952)
Population mean number of elite cases: 6.66
Count of perfect (error zero) individuals by case: (235 0 0 0 236 0 235 766 236 952)
Population mean number of perfect (error zero) cases: 2.66
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_gte} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_dup_items} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_swap})
Best program: (exec_dup_times (boolean_dup boolean_and in1 boolean_swap integer_gte print_integer) -82 integer_eq boolean_and integer_eq integer_dup_items in3 integer_rot exec_swap () ())
Errors: [0 1 1 1 0 1 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 15
Size: 19
Percent parens: 0.211
--- Population Statistics ---
Average total errors in population: 7.34
Median total errors in population: 8
Error averages by case: (0.765 1.0 1.0 1.0 0.764 1.0 0.765 0.234 0.764 0.048)
Error minima by case: (0 1 1 1 0 1 0 0 0 0)
Average genome size in population (length): 13.558
Average program size in population (points): 17.189
Average percent parens in population: 0.220
Minimum age in population: 35.93825721740723
Maximum age in population: 41.19904235005379
Average age in population: 39.4464519174993
Median age in population: 39.52819058299065
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 318
Genome diversity (% unique genomes):	 0.368
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 371
Syntactic diversity (% unique Push programs):	 0.32
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 11570173
--- Timings ---
Current time: 1559583175260 milliseconds
Total Time:          72.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.4 seconds, 74.0%
Fitness Testing:     11.6 seconds, 16.0%
Report:               7.1 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Smallest problem report - generation 27
Test total error for best: 619
Test mean error for best: 0.61900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 69                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 53                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 49                 
Correct output: 32                  | Program output: 57                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 82                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 95                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 64                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 91                 
Correct output: 3                   | Program output: 80                 
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 98                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 53                 
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: 1                  
Correct output: -44                 | Program output: 40                 
Correct output: -97                 | Program output: -44                
Correct output: -76                 | Program output: -47                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: 74                 
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 55                 
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: 46                 
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: 1                  
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -50                
Correct output: -40                 | Program output: 6                  
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -80                
Correct output: -92                 | Program output: -40                
Correct output: -67                 | Program output: -27                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: 70                 
Correct output: -35                 | Program output: 98                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: 16                 
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: 83                 
Correct output: 6                   | Program output: 60                 
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -8                 
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -4                 
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: 8                  
Correct output: -73                 | Program output: -6                 
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction print_boolean} {:close 1, :instruction print_integer})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in1 exec_s_when_autoconstructing (print_boolean) (print_integer) ())
Lexicase best errors: [1 0 0 1 1 1 1 0 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 12
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction print_boolean} {:close 1, :instruction print_integer})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in1 exec_s_when_autoconstructing (print_boolean) (print_integer) ())
Zero cases best errors: [1 0 0 1 1 1 1 0 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 12
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 955 954 1000 1000 1 1000 954 1000 954)
Population mean number of elite cases: 7.82
Count of perfect (error zero) individuals by case: (1 955 954 0 0 1 0 954 0 954)
Population mean number of perfect (error zero) cases: 3.82
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 1, :instruction exec_dup_times} {:close 0, :instruction in2} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction in3} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count})
Best program: (exec_dup_times (exec_dup_times () in2 boolean_and in1 boolean_swap print_boolean print_integer) -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and in3 integer_rot exec_do*count ())
Errors: [1 0 0 1 1 1 1 0 1 0]
Total: 6
Mean: 0.6
Genome size: 16
Size: 20
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 6.181
Median total errors in population: 6
Error averages by case: (0.999 0.045 0.046 1.0 1.0 0.999 1.0 0.046 1.0 0.046)
Error minima by case: (0 0 0 1 1 0 1 0 1 0)
Average genome size in population (length): 14.386
Average program size in population (points): 17.682
Average percent parens in population: 0.187
Minimum age in population: 36.93825721740723
Maximum age in population: 42.71343392133713
Average age in population: 40.78525401341915
Median age in population: 40.84506338834763
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 29
Genome diversity (% unique genomes):	 0.368
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 46
Syntactic diversity (% unique Push programs):	 0.321
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 11929912
--- Timings ---
Current time: 1559583177756 milliseconds
Total Time:          74.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.3 seconds, 74.3%
Fitness Testing:     11.9 seconds, 15.9%
Report:               7.2 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Smallest problem report - generation 28
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [1 1 0 0 1 0 0 0 1 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [1 1 0 0 1 0 0 0 1 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 387 948 1000 387 387 948 1000 1000)
Population mean number of elite cases: 8.06
Count of perfect (error zero) individuals by case: (0 0 387 948 0 387 387 948 0 0)
Population mean number of perfect (error zero) cases: 3.06
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [1 1 0 0 1 0 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 6.943
Median total errors in population: 8
Error averages by case: (1.0 1.0 0.613 0.052 1.0 0.613 0.613 0.052 1.0 1.0)
Error minima by case: (1 1 0 0 1 0 0 0 1 1)
Average genome size in population (length): 13.491
Average program size in population (points): 16.26
Average percent parens in population: 0.169
Minimum age in population: 39.25926756858826
Maximum age in population: 44.05733731389046
Average age in population: 42.44383554086834
Median age in population: 42.37164104357362
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 330
Genome diversity (% unique genomes):	 0.381
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 346
Syntactic diversity (% unique Push programs):	 0.333
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 12161858
--- Timings ---
Current time: 1559583179428 milliseconds
Total Time:          76.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.7 seconds, 74.3%
Fitness Testing:     12.1 seconds, 15.8%
Report:               7.4 seconds,  9.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Smallest problem report - generation 29
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [0 0 1 1 1 1 1 0 1 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [0 0 1 1 1 1 1 0 1 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (948 948 1000 1000 1000 1000 1000 948 1000 1000)
Population mean number of elite cases: 9.84
Count of perfect (error zero) individuals by case: (948 948 0 0 0 0 0 948 0 0)
Population mean number of perfect (error zero) cases: 2.84
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [0 0 1 1 1 1 1 0 1 1]
Total: 7
Mean: 0.7
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 7.156
Median total errors in population: 7
Error averages by case: (0.052 0.052 1.0 1.0 1.0 1.0 1.0 0.052 1.0 1.0)
Error minima by case: (0 0 1 1 1 1 1 0 1 1)
Average genome size in population (length): 12.096
Average program size in population (points): 14.17
Average percent parens in population: 0.147
Minimum age in population: 41.7066151201725
Maximum age in population: 45.75369011610746
Average age in population: 44.05519974387065
Median age in population: 44.15396267175674
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 687
Genome diversity (% unique genomes):	 0.195
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 740
Syntactic diversity (% unique Push programs):	 0.167
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 12287651
--- Timings ---
Current time: 1559583181286 milliseconds
Total Time:          78.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.3 seconds, 74.6%
Fitness Testing:     12.2 seconds, 15.6%
Report:               7.5 seconds,  9.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Smallest problem report - generation 30
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [1 1 1 1 1 0 1 1 1 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 9
Lexicase best mean error: 0.9
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [1 1 1 1 1 0 1 1 1 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 1
Zero cases best total error: 9
Zero cases best mean error: 0.9
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 1000 1000 1000 949 1000 1000 1000 1000)
Population mean number of elite cases: 9.95
Count of perfect (error zero) individuals by case: (0 0 0 0 0 949 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.95
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [1 1 1 1 1 0 1 1 1 1]
Total: 9
Mean: 0.9
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 9.051
Median total errors in population: 9
Error averages by case: (1.0 1.0 1.0 1.0 1.0 0.051 1.0 1.0 1.0 1.0)
Error minima by case: (1 1 1 1 1 0 1 1 1 1)
Average genome size in population (length): 12.069
Average program size in population (points): 14.175
Average percent parens in population: 0.149
Minimum age in population: 43.00300213694572
Maximum age in population: 47.14035309664905
Average age in population: 45.55152831155434
Median age in population: 45.65396267175674
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 624
Genome diversity (% unique genomes):	 0.248
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 693
Syntactic diversity (% unique Push programs):	 0.215
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 12410936
--- Timings ---
Current time: 1559583182875 milliseconds
Total Time:          79.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.6 seconds, 74.8%
Fitness Testing:     12.4 seconds, 15.5%
Report:               7.6 seconds,  9.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Smallest problem report - generation 31
Test total error for best: 994
Test mean error for best: 0.99400
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: -1                 
Correct output: -44                 | Program output: -14                
Correct output: -99                 | Program output: -34                
Correct output: -22                 | Program output: -23                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -57                
Correct output: 20                  | Program output: 42                 
Correct output: -70                 | Program output: -71                
Correct output: -87                 | Program output: -88                
Correct output: -28                 | Program output: -29                
Correct output: 20                  | Program output: 59                 
Correct output: 73                  | Program output: 99                 
Correct output: -1                  | Program output: -2                 
Correct output: 33                  | Program output: 32                 
Correct output: -29                 | Program output: -30                
Correct output: 69                  | Program output: 68                 
Correct output: -93                 | Program output: -94                
Correct output: -73                 | Program output: -74                
Correct output: -11                 | Program output: -12                
Correct output: 38                  | Program output: 37                 
Correct output: 14                  | Program output: 13                 
Correct output: 14                  | Program output: 86                 
Correct output: 8                   | Program output: 7                  
Correct output: 32                  | Program output: 31                 
Correct output: 22                  | Program output: 95                 
Correct output: 17                  | Program output: 31                 
Correct output: 13                  | Program output: 12                 
Correct output: 57                  | Program output: 70                 
Correct output: 12                  | Program output: 53                 
Correct output: 35                  | Program output: 94                 
Correct output: 60                  | Program output: 60                 
Correct output: 31                  | Program output: 58                 
Correct output: 24                  | Program output: 61                 
Correct output: 3                   | Program output: 2                  
Correct output: 46                  | Program output: 47                 
Correct output: 56                  | Program output: 80                 
Correct output: 29                  | Program output: 94                 
Correct output: 0                   | Program output: 1                  
Correct output: 17                  | Program output: 60                 
Correct output: 3                   | Program output: 58                 
Correct output: -39                 | Program output: -40                
Correct output: -44                 | Program output: -45                
Correct output: -97                 | Program output: -98                
Correct output: -76                 | Program output: -77                
Correct output: -11                 | Program output: 65                 
Correct output: -95                 | Program output: -85                
Correct output: -78                 | Program output: -57                
Correct output: -97                 | Program output: 68                 
Correct output: -40                 | Program output: -9                 
Correct output: -92                 | Program output: -50                
Correct output: 7                   | Program output: 6                  
Correct output: -1                  | Program output: 8                  
Correct output: -71                 | Program output: 86                 
Correct output: -27                 | Program output: 90                 
Correct output: -82                 | Program output: -52                
Correct output: -73                 | Program output: -74                
Correct output: -88                 | Program output: 57                 
Correct output: -52                 | Program output: 40                 
Correct output: -79                 | Program output: -15                
Correct output: -71                 | Program output: 81                 
Correct output: -53                 | Program output: 42                 
Correct output: -64                 | Program output: 24                 
Correct output: -68                 | Program output: 59                 
Correct output: -65                 | Program output: 38                 
Correct output: -76                 | Program output: -77                
Correct output: -55                 | Program output: 8                  
Correct output: -87                 | Program output: -85                
Correct output: -40                 | Program output: -5                 
Correct output: -95                 | Program output: 64                 
Correct output: -68                 | Program output: 27                 
Correct output: -28                 | Program output: -8                 
Correct output: -84                 | Program output: -84                
Correct output: -92                 | Program output: -56                
Correct output: -67                 | Program output: -68                
Correct output: -67                 | Program output: 87                 
Correct output: -65                 | Program output: -17                
Correct output: -76                 | Program output: 65                 
Correct output: -87                 | Program output: -16                
Correct output: -64                 | Program output: 40                 
Correct output: -24                 | Program output: -25                
Correct output: -35                 | Program output: 65                 
Correct output: -33                 | Program output: 62                 
Correct output: -17                 | Program output: 23                 
Correct output: -91                 | Program output: -59                
Correct output: -74                 | Program output: 83                 
Correct output: -43                 | Program output: 41                 
Correct output: -90                 | Program output: 34                 
Correct output: -89                 | Program output: -90                
Correct output: 6                   | Program output: 5                  
Correct output: -49                 | Program output: 93                 
Correct output: -91                 | Program output: -67                
Correct output: -82                 | Program output: 26                 
Correct output: -39                 | Program output: 48                 
Correct output: -83                 | Program output: -59                
Correct output: -37                 | Program output: 88                 
Correct output: -76                 | Program output: 67                 
Correct output: -19                 | Program output: -20                
Correct output: -73                 | Program output: -74                
Correct output: -87                 | Program output: 17                 
Correct output: -39                 | Program output: -14                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_dec} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap integer_dec print_integer -82 integer_eq boolean_and integer_eq integer_eq boolean_invert_first_then_and)
Lexicase best errors: [1 1 1 0 0 1 1 1 1 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 8
Lexicase best mean error: 0.8
Lexicase best size: 15
Percent parens: 0.133
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_dec} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap integer_dec print_integer -82 integer_eq boolean_and integer_eq integer_eq boolean_invert_first_then_and)
Zero cases best errors: [1 1 1 0 0 1 1 1 1 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 2
Zero cases best total error: 8
Zero cases best mean error: 0.8
Zero cases best size: 15
Percent parens: 0.133
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 953 1 1 1000 1000 1000 1000 1000)
Population mean number of elite cases: 7.95
Count of perfect (error zero) individuals by case: (0 0 953 1 1 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.95
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_dec} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap integer_dec print_integer -82 integer_eq boolean_and integer_eq integer_eq boolean_invert_first_then_and)
Errors: [1 1 1 0 0 1 1 1 1 1]
Total: 8
Mean: 0.8
Genome size: 13
Size: 15
Percent parens: 0.133
--- Population Statistics ---
Average total errors in population: 9.045
Median total errors in population: 9
Error averages by case: (1.0 1.0 0.047 0.999 0.999 1.0 1.0 1.0 1.0 1.0)
Error minima by case: (1 1 0 0 0 1 1 1 1 1)
Average genome size in population (length): 12.103
Average program size in population (points): 14.244
Average percent parens in population: 0.150
Minimum age in population: 44.43028889596462
Maximum age in population: 48.79276390466839
Average age in population: 47.02277044719644
Median age in population: 47.09763910062611
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 518
Genome diversity (% unique genomes):	 0.293
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 596
Syntactic diversity (% unique Push programs):	 0.246
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 12532649
--- Timings ---
Current time: 1559583184488 milliseconds
Total Time:          81.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.0 seconds, 75.0%
Fitness Testing:     12.5 seconds, 15.4%
Report:               7.7 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Smallest problem report - generation 32
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [0 1 1 1 1 0 1 1 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [0 1 1 1 1 0 1 1 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (326 1000 1000 1000 1000 326 1000 1000 1000 326)
Population mean number of elite cases: 7.98
Count of perfect (error zero) individuals by case: (326 0 0 0 0 326 0 0 0 326)
Population mean number of perfect (error zero) cases: 0.98
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction 98} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (98 boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [0 1 1 1 1 0 1 1 1 0]
Total: 7
Mean: 0.7
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 9.022
Median total errors in population: 10
Error averages by case: (0.674 1.0 1.0 1.0 1.0 0.674 1.0 1.0 1.0 0.674)
Error minima by case: (0 1 1 1 1 0 1 1 1 0)
Average genome size in population (length): 12.664
Average program size in population (points): 14.753
Average percent parens in population: 0.142
Minimum age in population: 46.15075527876616
Maximum age in population: 50.20888419542462
Average age in population: 48.13099898828287
Median age in population: 48.37768777250312
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 506
Genome diversity (% unique genomes):	 0.27
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 534
Syntactic diversity (% unique Push programs):	 0.239
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 12660216
--- Timings ---
Current time: 1559583186118 milliseconds
Total Time:          83.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.4 seconds, 75.2%
Fitness Testing:     12.7 seconds, 15.2%
Report:               7.8 seconds,  9.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Smallest problem report - generation 33
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [1 1 0 1 0 1 1 0 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [1 1 0 1 0 1 1 0 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 952 1000 952 1000 1000 952 1000 952)
Population mean number of elite cases: 9.81
Count of perfect (error zero) individuals by case: (0 0 952 0 952 0 0 952 0 952)
Population mean number of perfect (error zero) cases: 3.81
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [1 1 0 1 0 1 1 0 1 0]
Total: 6
Mean: 0.6
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 6.192
Median total errors in population: 6
Error averages by case: (1.0 1.0 0.048 1.0 0.048 1.0 1.0 0.048 1.0 0.048)
Error minima by case: (1 1 0 1 0 1 1 0 1 0)
Average genome size in population (length): 11.991
Average program size in population (points): 14.141
Average percent parens in population: 0.152
Minimum age in population: 47.15075527876616
Maximum age in population: 51.97076948476024
Average age in population: 49.87951128106331
Median age in population: 49.96375584381167
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 392
Genome diversity (% unique genomes):	 0.268
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 470
Syntactic diversity (% unique Push programs):	 0.238
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 12781499
--- Timings ---
Current time: 1559583188090 milliseconds
Total Time:          85.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.1 seconds, 75.5%
Fitness Testing:     12.8 seconds, 15.1%
Report:               7.9 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Smallest problem report - generation 34
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction print_boolean} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 print_boolean print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [1 1 0 0 0 1 1 1 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction print_boolean} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 print_boolean print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [1 1 0 0 0 1 1 1 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 959 959 959 1000 1000 1000 1000 959)
Population mean number of elite cases: 9.84
Count of perfect (error zero) individuals by case: (0 0 959 959 959 0 0 0 0 959)
Population mean number of perfect (error zero) cases: 3.84
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [1 1 0 0 0 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 6.164
Median total errors in population: 6
Error averages by case: (1.0 1.0 0.041 0.041 0.041 1.0 1.0 1.0 1.0 0.041)
Error minima by case: (1 1 0 0 0 1 1 1 1 0)
Average genome size in population (length): 12.023
Average program size in population (points): 14.193
Average percent parens in population: 0.153
Minimum age in population: 48.15396267175674
Maximum age in population: 53.15222800837364
Average age in population: 51.32560675051482
Median age in population: 51.39769975678064
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 327
Genome diversity (% unique genomes):	 0.336
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 407
Syntactic diversity (% unique Push programs):	 0.299
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 12902689
--- Timings ---
Current time: 1559583189700 milliseconds
Total Time:          86.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.5 seconds, 75.7%
Fitness Testing:     12.9 seconds, 14.9%
Report:               8.0 seconds,  9.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Smallest problem report - generation 35
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [1 0 1 1 1 0 1 1 1 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 8
Lexicase best mean error: 0.8
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [1 0 1 1 1 0 1 1 1 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 2
Zero cases best total error: 8
Zero cases best mean error: 0.8
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 951 1000 1000 1000 951 1000 1000 1000 1000)
Population mean number of elite cases: 9.90
Count of perfect (error zero) individuals by case: (0 951 0 0 0 951 0 0 0 0)
Population mean number of perfect (error zero) cases: 1.90
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_yankdup} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup integer_yankdup in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [1 0 1 1 1 0 1 1 1 1]
Total: 8
Mean: 0.8
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 8.098
Median total errors in population: 8
Error averages by case: (1.0 0.049 1.0 1.0 1.0 0.049 1.0 1.0 1.0 1.0)
Error minima by case: (1 0 1 1 1 0 1 1 1 1)
Average genome size in population (length): 12.116
Average program size in population (points): 14.311
Average percent parens in population: 0.153
Minimum age in population: 49.47842616122216
Maximum age in population: 54.64382605091669
Average age in population: 52.77847305053298
Median age in population: 52.82855500973528
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 317
Genome diversity (% unique genomes):	 0.369
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 387
Syntactic diversity (% unique Push programs):	 0.32
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 13025381
--- Timings ---
Current time: 1559583191302 milliseconds
Total Time:          88.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.9 seconds, 75.8%
Fitness Testing:     13.1 seconds, 14.8%
Report:               8.2 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Smallest problem report - generation 36
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer boolean_and integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [0 1 1 1 1 0 1 1 0 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer boolean_and integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [0 1 1 1 1 0 1 1 0 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (957 1000 1000 1000 1000 957 1000 1000 957 1000)
Population mean number of elite cases: 9.87
Count of perfect (error zero) individuals by case: (957 0 0 0 0 957 0 0 957 0)
Population mean number of perfect (error zero) cases: 2.87
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq integer_eq boolean_invert_first_then_and)
Errors: [0 1 1 1 1 0 1 1 0 1]
Total: 7
Mean: 0.7
Genome size: 11
Size: 13
Percent parens: 0.154
--- Population Statistics ---
Average total errors in population: 7.129
Median total errors in population: 7
Error averages by case: (0.043 1.0 1.0 1.0 1.0 0.043 1.0 1.0 0.043 1.0)
Error minima by case: (0 1 1 1 1 0 1 1 0 1)
Average genome size in population (length): 12.044
Average program size in population (points): 14.223
Average percent parens in population: 0.153
Minimum age in population: 50.84530936181545
Maximum age in population: 56.29808124573901
Average age in population: 54.26107589940348
Median age in population: 54.3011659191543
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 276
Genome diversity (% unique genomes):	 0.371
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 352
Syntactic diversity (% unique Push programs):	 0.317
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 13147963
--- Timings ---
Current time: 1559583192886 milliseconds
Total Time:          89.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.2 seconds, 76.0%
Fitness Testing:     13.2 seconds, 14.7%
Report:               8.3 seconds,  9.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Smallest problem report - generation 37
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup boolean_and in4 exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 exec_y_when_autoconstructing (boolean_and) integer_eq integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [1 0 1 1 0 1 0 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 23
Percent parens: 0.174
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction exec_y_when_autoconstructing} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup boolean_and in4 exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 exec_y_when_autoconstructing (boolean_and) integer_eq integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [1 0 1 1 0 1 0 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 23
Percent parens: 0.174
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 951 1 2 951 1000 951 1000 952 952)
Population mean number of elite cases: 6.76
Count of perfect (error zero) individuals by case: (1 951 1 2 951 0 951 0 952 952)
Population mean number of perfect (error zero) cases: 4.76
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_dup_times () boolean_dup boolean_and in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Errors: [1 0 1 1 0 1 0 1 0 0]
Total: 5
Mean: 0.5
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 5.239
Median total errors in population: 5
Error averages by case: (0.999 0.049 0.999 0.998 0.049 1.0 0.049 1.0 0.048 0.048)
Error minima by case: (0 0 0 0 0 1 0 1 0 0)
Average genome size in population (length): 12.148
Average program size in population (points): 14.354
Average percent parens in population: 0.153
Minimum age in population: 51.84530936181545
Maximum age in population: 57.68170615841518
Average age in population: 55.74328851841587
Median age in population: 55.82117706511781
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 253
Genome diversity (% unique genomes):	 0.368
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 336
Syntactic diversity (% unique Push programs):	 0.314
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 13269981
--- Timings ---
Current time: 1559583194489 milliseconds
Total Time:          91.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.6 seconds, 76.1%
Fitness Testing:     13.3 seconds, 14.6%
Report:               8.3 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Smallest problem report - generation 38
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_yankdup} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (exec_dup_times () boolean_dup exec_yankdup in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Lexicase best errors: [0 1 1 0 1 1 1 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_yankdup} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (exec_dup_times () boolean_dup exec_yankdup in4 boolean_swap print_boolean print_integer -82 integer_eq boolean_and integer_eq boolean_invert_first_then_and)
Zero cases best errors: [0 1 1 0 1 1 1 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (507 1000 1000 509 1 300 299 807 506 1000)
Population mean number of elite cases: 5.93
Count of perfect (error zero) individuals by case: (507 0 0 509 1 300 299 807 506 0)
Population mean number of perfect (error zero) cases: 2.93
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction exec_while} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (exec_while () boolean_dup exec_swap (boolean_and in4 boolean_swap print_boolean print_integer) (-82 integer_eq boolean_and) integer_eq boolean_invert_first_then_and)
Errors: [0 1 1 0 1 1 1 0 0 1]
Total: 6
Mean: 0.6
Genome size: 13
Size: 17
Percent parens: 0.235
--- Population Statistics ---
Average total errors in population: 7.071
Median total errors in population: 6
Error averages by case: (0.493 1.0 1.0 0.491 0.999 0.7 0.701 0.193 0.494 1.0)
Error minima by case: (0 1 1 0 0 0 0 0 0 1)
Average genome size in population (length): 12.996
Average program size in population (points): 15.361
Average percent parens in population: 0.154
Minimum age in population: 54.39375664456747
Maximum age in population: 59.00836708876159
Average age in population: 56.86939094728744
Median age in population: 56.86955516820308
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 258
Genome diversity (% unique genomes):	 0.376
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 264
Syntactic diversity (% unique Push programs):	 0.336
Total error diversity:				 0.005
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 13409353
--- Timings ---
Current time: 1559583196123 milliseconds
Total Time:          93.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.0 seconds, 76.3%
Fitness Testing:     13.5 seconds, 14.5%
Report:               8.4 seconds,  9.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Smallest problem report - generation 39
Test total error for best: 677
Test mean error for best: 0.67700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: 31                 
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 63                 
Correct output: 14                  | Program output: 58                 
Correct output: 8                   | Program output: 96                 
Correct output: 32                  | Program output: 60                 
Correct output: 22                  | Program output: 25                 
Correct output: 17                  | Program output: 43                 
Correct output: 13                  | Program output: 72                 
Correct output: 57                  | Program output: 77                 
Correct output: 12                  | Program output: 84                 
Correct output: 35                  | Program output: 62                 
Correct output: 60                  | Program output: 65                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 24                 
Correct output: 3                   | Program output: 92                 
Correct output: 46                  | Program output: 69                 
Correct output: 56                  | Program output: 56                 
Correct output: 29                  | Program output: 97                 
Correct output: 0                   | Program output: 93                 
Correct output: 17                  | Program output: 100                
Correct output: 3                   | Program output: 74                 
Correct output: -39                 | Program output: 58                 
Correct output: -44                 | Program output: 5                  
Correct output: -97                 | Program output: -64                
Correct output: -76                 | Program output: -13                
Correct output: -11                 | Program output: -3                 
Correct output: -95                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -97                 | Program output: -75                
Correct output: -40                 | Program output: 6                  
Correct output: -92                 | Program output: 43                 
Correct output: 7                   | Program output: 48                 
Correct output: -1                  | Program output: 46                 
Correct output: -71                 | Program output: 26                 
Correct output: -27                 | Program output: 69                 
Correct output: -82                 | Program output: -19                
Correct output: -73                 | Program output: 9                  
Correct output: -88                 | Program output: -88                
Correct output: -52                 | Program output: 66                 
Correct output: -79                 | Program output: 82                 
Correct output: -71                 | Program output: -17                
Correct output: -53                 | Program output: 51                 
Correct output: -64                 | Program output: 16                 
Correct output: -68                 | Program output: 68                 
Correct output: -65                 | Program output: 28                 
Correct output: -76                 | Program output: 44                 
Correct output: -55                 | Program output: 10                 
Correct output: -87                 | Program output: -87                
Correct output: -40                 | Program output: -40                
Correct output: -95                 | Program output: 19                 
Correct output: -68                 | Program output: -68                
Correct output: -28                 | Program output: -13                
Correct output: -84                 | Program output: 100                
Correct output: -92                 | Program output: -92                
Correct output: -67                 | Program output: 73                 
Correct output: -67                 | Program output: -56                
Correct output: -65                 | Program output: -9                 
Correct output: -76                 | Program output: -28                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: -64                
Correct output: -24                 | Program output: 73                 
Correct output: -35                 | Program output: -6                 
Correct output: -33                 | Program output: 79                 
Correct output: -17                 | Program output: -4                 
Correct output: -91                 | Program output: -27                
Correct output: -74                 | Program output: 4                  
Correct output: -43                 | Program output: -43                
Correct output: -90                 | Program output: -18                
Correct output: -89                 | Program output: -33                
Correct output: 6                   | Program output: 23                 
Correct output: -49                 | Program output: -22                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -83                 | Program output: -83                
Correct output: -37                 | Program output: 76                 
Correct output: -76                 | Program output: -70                
Correct output: -19                 | Program output: 36                 
Correct output: -73                 | Program output: 39                 
Correct output: -87                 | Program output: 48                 
Correct output: -39                 | Program output: 11                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Lexicase best program: (exec_rot (boolean_dup boolean_and in1 boolean_swap integer_min boolean_swap in3 print_integer) (-82 integer_eq boolean_and) (integer_eq boolean_eq))
Lexicase best errors: [1 0 1 1 0 0 1 0 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Zero cases best program: (exec_rot (boolean_dup boolean_and in1 boolean_swap integer_min boolean_swap in3 print_integer) (-82 integer_eq boolean_and) (integer_eq boolean_eq))
Zero cases best errors: [1 0 1 1 0 0 1 0 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 954 317 1000 150 637 1000 954 150 317)
Population mean number of elite cases: 6.48
Count of perfect (error zero) individuals by case: (0 954 317 0 150 637 0 954 150 317)
Population mean number of perfect (error zero) cases: 3.48
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Best program: (exec_rot (boolean_dup boolean_and in1 boolean_swap integer_min boolean_swap in3 print_integer) (-82 integer_eq boolean_and) (integer_eq boolean_eq))
Errors: [1 0 1 1 0 0 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 14
Size: 18
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 6.521
Median total errors in population: 7
Error averages by case: (1.0 0.046 0.683 1.0 0.85 0.363 1.0 0.046 0.85 0.683)
Error minima by case: (1 0 0 1 0 0 1 0 0 0)
Average genome size in population (length): 12.929
Average program size in population (points): 15.416
Average percent parens in population: 0.161
Minimum age in population: 56.05860816407949
Maximum age in population: 60.50348425249467
Average age in population: 58.2199172622716
Median age in population: 58.30101801332967
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 224
Genome diversity (% unique genomes):	 0.34
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 239
Syntactic diversity (% unique Push programs):	 0.298
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 13539704
--- Timings ---
Current time: 1559583198364 milliseconds
Total Time:          95.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.9 seconds, 76.6%
Fitness Testing:     13.6 seconds, 14.3%
Report:               8.5 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Smallest problem report - generation 40
Test total error for best: 651
Test mean error for best: 0.65100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 43                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 87                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 96                 
Correct output: 17                  | Program output: 32                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 71                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 95                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 48                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 95                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 61                 
Correct output: 3                   | Program output: 59                 
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: 66                 
Correct output: -95                 | Program output: -84                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: 69                 
Correct output: -40                 | Program output: -8                 
Correct output: -92                 | Program output: -49                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: 9                  
Correct output: -71                 | Program output: 87                 
Correct output: -27                 | Program output: 91                 
Correct output: -82                 | Program output: -51                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: 58                 
Correct output: -52                 | Program output: 41                 
Correct output: -79                 | Program output: -14                
Correct output: -71                 | Program output: 82                 
Correct output: -53                 | Program output: 43                 
Correct output: -64                 | Program output: 25                 
Correct output: -68                 | Program output: 60                 
Correct output: -65                 | Program output: 39                 
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: 9                  
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: 65                 
Correct output: -68                 | Program output: 28                 
Correct output: -28                 | Program output: -7                 
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: 88                 
Correct output: -65                 | Program output: -16                
Correct output: -76                 | Program output: 66                 
Correct output: -87                 | Program output: -15                
Correct output: -64                 | Program output: 41                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: 63                 
Correct output: -17                 | Program output: 24                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: 84                 
Correct output: -43                 | Program output: 42                 
Correct output: -90                 | Program output: 35                 
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: 94                 
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: 27                 
Correct output: -39                 | Program output: 49                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 89                 
Correct output: -76                 | Program output: 68                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: 18                 
Correct output: -39                 | Program output: -13                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_shove})
Lexicase best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup boolean_and in4 boolean_swap integer_min boolean_swap print_boolean print_integer) -82 integer_eq boolean_and) (integer_eq integer_shove) ())
Lexicase best errors: [0 1 1 1 0 0 0 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 21
Percent parens: 0.238
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_shove})
Zero cases best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup boolean_and in4 boolean_swap integer_min boolean_swap print_boolean print_integer) -82 integer_eq boolean_and) (integer_eq integer_shove) ())
Zero cases best errors: [0 1 1 1 0 0 0 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 21
Percent parens: 0.238
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 1000 563 1000 947 1 1 1 1000 383)
Population mean number of elite cases: 4.90
Count of perfect (error zero) individuals by case: (1 0 563 0 947 1 1 1 0 383)
Population mean number of perfect (error zero) cases: 1.90
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_shove})
Best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup boolean_and in4 boolean_swap integer_min boolean_swap print_boolean print_integer) -82 integer_eq boolean_and) (integer_eq integer_shove) ())
Errors: [0 1 1 1 0 0 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 16
Size: 21
Percent parens: 0.238
--- Population Statistics ---
Average total errors in population: 8.103
Median total errors in population: 8
Error averages by case: (0.999 1.0 0.437 1.0 0.053 0.999 0.999 0.999 1.0 0.617)
Error minima by case: (0 1 0 1 0 0 0 0 1 0)
Average genome size in population (length): 13.961
Average program size in population (points): 17.19
Average percent parens in population: 0.185
Minimum age in population: 57.7346610812674
Maximum age in population: 61.55890872860073
Average age in population: 59.34389062884385
Median age in population: 59.37991653222343
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 403
Genome diversity (% unique genomes):	 0.247
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 403
Syntactic diversity (% unique Push programs):	 0.232
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 13682930
--- Timings ---
Current time: 1559583200410 milliseconds
Total Time:          97.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.7 seconds, 76.8%
Fitness Testing:     13.8 seconds, 14.2%
Report:               8.7 seconds,  8.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Smallest problem report - generation 41
Test total error for best: 677
Test mean error for best: 0.67700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -56                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: 99                 
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: 62                 
Correct output: 20                  | Program output: 60                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: 31                 
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 63                 
Correct output: 14                  | Program output: 58                 
Correct output: 8                   | Program output: 96                 
Correct output: 32                  | Program output: 60                 
Correct output: 22                  | Program output: 25                 
Correct output: 17                  | Program output: 43                 
Correct output: 13                  | Program output: 72                 
Correct output: 57                  | Program output: 77                 
Correct output: 12                  | Program output: 84                 
Correct output: 35                  | Program output: 62                 
Correct output: 60                  | Program output: 65                 
Correct output: 31                  | Program output: 59                 
Correct output: 24                  | Program output: 24                 
Correct output: 3                   | Program output: 92                 
Correct output: 46                  | Program output: 69                 
Correct output: 56                  | Program output: 56                 
Correct output: 29                  | Program output: 97                 
Correct output: 0                   | Program output: 93                 
Correct output: 17                  | Program output: 100                
Correct output: 3                   | Program output: 74                 
Correct output: -39                 | Program output: 58                 
Correct output: -44                 | Program output: 5                  
Correct output: -97                 | Program output: -64                
Correct output: -76                 | Program output: -13                
Correct output: -11                 | Program output: -3                 
Correct output: -95                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -97                 | Program output: -75                
Correct output: -40                 | Program output: 6                  
Correct output: -92                 | Program output: 43                 
Correct output: 7                   | Program output: 48                 
Correct output: -1                  | Program output: 46                 
Correct output: -71                 | Program output: 26                 
Correct output: -27                 | Program output: 69                 
Correct output: -82                 | Program output: -19                
Correct output: -73                 | Program output: 9                  
Correct output: -88                 | Program output: -88                
Correct output: -52                 | Program output: 66                 
Correct output: -79                 | Program output: 82                 
Correct output: -71                 | Program output: -17                
Correct output: -53                 | Program output: 51                 
Correct output: -64                 | Program output: 16                 
Correct output: -68                 | Program output: 68                 
Correct output: -65                 | Program output: 28                 
Correct output: -76                 | Program output: 44                 
Correct output: -55                 | Program output: 10                 
Correct output: -87                 | Program output: -87                
Correct output: -40                 | Program output: -40                
Correct output: -95                 | Program output: 19                 
Correct output: -68                 | Program output: -68                
Correct output: -28                 | Program output: -13                
Correct output: -84                 | Program output: 100                
Correct output: -92                 | Program output: -92                
Correct output: -67                 | Program output: 73                 
Correct output: -67                 | Program output: -56                
Correct output: -65                 | Program output: -9                 
Correct output: -76                 | Program output: -28                
Correct output: -87                 | Program output: -87                
Correct output: -64                 | Program output: -64                
Correct output: -24                 | Program output: 73                 
Correct output: -35                 | Program output: -6                 
Correct output: -33                 | Program output: 79                 
Correct output: -17                 | Program output: -4                 
Correct output: -91                 | Program output: -27                
Correct output: -74                 | Program output: 4                  
Correct output: -43                 | Program output: -43                
Correct output: -90                 | Program output: -18                
Correct output: -89                 | Program output: -33                
Correct output: 6                   | Program output: 23                 
Correct output: -49                 | Program output: -22                
Correct output: -91                 | Program output: -91                
Correct output: -82                 | Program output: -34                
Correct output: -39                 | Program output: -39                
Correct output: -83                 | Program output: -83                
Correct output: -37                 | Program output: 76                 
Correct output: -76                 | Program output: -70                
Correct output: -19                 | Program output: 36                 
Correct output: -73                 | Program output: 39                 
Correct output: -87                 | Program output: 48                 
Correct output: -39                 | Program output: 11                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_shove})
Lexicase best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup boolean_and in4 boolean_swap integer_min boolean_swap print_boolean print_integer) -82 integer_eq boolean_and) (integer_eq integer_shove) ())
Lexicase best errors: [1 0 0 1 0 1 1 1 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 21
Percent parens: 0.238
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction integer_shove})
Zero cases best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup boolean_and in4 boolean_swap integer_min boolean_swap print_boolean print_integer) -82 integer_eq boolean_and) (integer_eq integer_shove) ())
Zero cases best errors: [1 0 0 1 0 1 1 1 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 21
Percent parens: 0.238
--- Lexicase Population Statistics ---
Count of elite individuals by case: (162 641 641 140 780 163 138 1000 162 1000)
Population mean number of elite cases: 4.83
Count of perfect (error zero) individuals by case: (162 641 641 140 780 163 138 0 162 0)
Population mean number of perfect (error zero) cases: 2.83
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction in3} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Best program: (exec_dup_times (boolean_dup boolean_and in1 boolean_swap integer_min boolean_swap in1 boolean_swap integer_min boolean_swap in3 print_integer) -82 integer_eq boolean_and integer_eq boolean_eq)
Errors: [0 1 1 1 1 0 1 1 0 1]
Total: 7
Mean: 0.7
Genome size: 18
Size: 20
Percent parens: 0.100
--- Population Statistics ---
Average total errors in population: 7.173
Median total errors in population: 7
Error averages by case: (0.838 0.359 0.359 0.86 0.22 0.837 0.862 1.0 0.838 1.0)
Error minima by case: (0 0 0 0 0 0 0 1 0 1)
Average genome size in population (length): 15.353
Average program size in population (points): 19.785
Average percent parens in population: 0.222
Minimum age in population: 58.84118996614416
Maximum age in population: 62.7235101792794
Average age in population: 61.56150251907976
Median age in population: 61.35558105181917
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 543
Genome diversity (% unique genomes):	 0.258
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 546
Syntactic diversity (% unique Push programs):	 0.25
Total error diversity:				 0.003
Error (vector) diversity:			 0.007
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 13841932
--- Timings ---
Current time: 1559583202444 milliseconds
Total Time:          99.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        76.4 seconds, 77.0%
Fitness Testing:     14.0 seconds, 14.1%
Report:               8.8 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Smallest problem report - generation 42
Test total error for best: 402
Test mean error for best: 0.40200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 100                
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 77                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 54                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 61                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 62                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 81                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 2                  
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: -24                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: 40                 
Correct output: -27                 | Program output: 21                 
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -59                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: -13                
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -4                 
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -55                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -83                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -61                
Correct output: -65                 | Program output: -47                
Correct output: -76                 | Program output: 10                 
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 18                 
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: 66                 
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: 22                 
Correct output: -91                 | Program output: -58                
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -31                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: -61                
Correct output: -39                 | Program output: 22                 
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: 47                 
Correct output: -76                 | Program output: 30                 
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Lexicase best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup boolean_and in4 boolean_swap integer_min boolean_swap print_boolean boolean_and in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Lexicase best errors: [0 1 0 0 0 1 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 27
Percent parens: 0.185
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Zero cases best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup boolean_and in4 boolean_swap integer_min boolean_swap print_boolean boolean_and in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Zero cases best errors: [0 1 0 0 0 1 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 27
Percent parens: 0.185
--- Lexicase Population Statistics ---
Count of elite individuals by case: (681 2 321 266 266 363 320 266 320 363)
Population mean number of elite cases: 3.17
Count of perfect (error zero) individuals by case: (681 2 321 266 266 363 320 266 320 363)
Population mean number of perfect (error zero) cases: 3.17
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction in1} {:close 0, :instruction boolean_and} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq})
Best program: (exec_rot (boolean_dup exec_dup_times (in1 boolean_and in4 boolean_swap integer_min boolean_swap print_boolean print_integer) -82 integer_eq boolean_and) (integer_eq) ())
Errors: [0 1 0 0 0 1 0 0 0 1]
Total: 3
Mean: 0.3
Genome size: 15
Size: 20
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.832
Median total errors in population: 7
Error averages by case: (0.319 0.998 0.679 0.734 0.734 0.637 0.68 0.734 0.68 0.637)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 14.644
Average program size in population (points): 18.388
Average percent parens in population: 0.199
Minimum age in population: 59.84118996614416
Maximum age in population: 64.47807721772915
Average age in population: 62.75904030973645
Median age in population: 62.82789577281073
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 189
Genome diversity (% unique genomes):	 0.316
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 189
Syntactic diversity (% unique Push programs):	 0.308
Total error diversity:				 0.007
Error (vector) diversity:			 0.009
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 13992126
--- Timings ---
Current time: 1559583204697 milliseconds
Total Time:         101.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        78.4 seconds, 77.2%
Fitness Testing:     14.1 seconds, 13.9%
Report:               8.9 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Smallest problem report - generation 43
Test total error for best: 191
Test mean error for best: 0.19100
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 73                 
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 12                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 60                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 53                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 58                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: -97                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -27                 | Program output: -27                
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -79                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: -55                
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -39                
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -66                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -84                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -67                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 3                  
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: -35                
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: -17                
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -40                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: -82                
Correct output: -39                 | Program output: -36                
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: -37                
Correct output: -76                 | Program output: -76                
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Lexicase best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min boolean_swap print_boolean boolean_and in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Lexicase best errors: [0 0 0 0 0 0 0 1 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 27
Percent parens: 0.185
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_and} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Zero cases best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min boolean_swap print_boolean boolean_and in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Zero cases best errors: [0 0 0 0 0 0 0 1 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 27
Percent parens: 0.185
--- Lexicase Population Statistics ---
Count of elite individuals by case: (896 585 941 898 125 462 462 307 460 125)
Population mean number of elite cases: 5.26
Count of perfect (error zero) individuals by case: (896 585 941 898 125 462 462 307 460 125)
Population mean number of perfect (error zero) cases: 5.26
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Errors: [0 0 0 0 0 0 0 1 0 0]
Total: 1
Mean: 0.1
Genome size: 19
Size: 24
Percent parens: 0.208
--- Population Statistics ---
Average total errors in population: 4.739
Median total errors in population: 4
Error averages by case: (0.104 0.415 0.059 0.102 0.875 0.538 0.538 0.693 0.54 0.875)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 17.691
Average program size in population (points): 22.741
Average percent parens in population: 0.226
Minimum age in population: 63.61064562033607
Maximum age in population: 65.73407458091515
Average age in population: 64.75854948540906
Median age in population: 64.73407458091515
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 261
Genome diversity (% unique genomes):	 0.232
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 261
Syntactic diversity (% unique Push programs):	 0.232
Total error diversity:				 0.009
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 14170397
--- Timings ---
Current time: 1559583207029 milliseconds
Total Time:         103.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        80.4 seconds, 77.4%
Fitness Testing:     14.3 seconds, 13.8%
Report:               9.0 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Smallest problem report - generation 44
Test total error for best: 191
Test mean error for best: 0.19100
Test Case    0 | Error: 1
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 1
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 1
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 1
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 1
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 1
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 1
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 1
Test Case   86 | Error: 0
Test Case   87 | Error: 1
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 1
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 1
Test Case  209 | Error: 1
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 0
Test Case  241 | Error: 1
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 1
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 1
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 0
Test Case  346 | Error: 1
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 1
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 1
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 1
Test Case  438 | Error: 1
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 1
Test Case  468 | Error: 0
Test Case  469 | Error: 1
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 1
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 1
Test Case  480 | Error: 1
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 1
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 1
Test Case  533 | Error: 1
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 1
Test Case  582 | Error: 1
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 1
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 1
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 1
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 1
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 1
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 1
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 1
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 1
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 1
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 1
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 1
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 1
Test Case  851 | Error: 0
Test Case  852 | Error: 1
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 1
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 1
Test Case  934 | Error: 1
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 1
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 73                 
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 12                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 60                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 53                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 58                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: -97                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -27                 | Program output: -27                
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -79                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: -55                
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -39                
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -66                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -84                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -67                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 3                  
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: -35                
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: -17                
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -40                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: -82                
Correct output: -39                 | Program output: -36                
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: -37                
Correct output: -76                 | Program output: -76                
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Lexicase best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 23
Percent parens: 0.217
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Zero cases best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 23
Percent parens: 0.217
--- Lexicase Population Statistics ---
Count of elite individuals by case: (936 905 942 910 913 714 905 940 715 714)
Population mean number of elite cases: 8.59
Count of perfect (error zero) individuals by case: (936 905 942 910 913 714 905 940 715 714)
Population mean number of perfect (error zero) cases: 8.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_rot} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction in4} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction in1} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_flush} {:close 1, :instruction print_integer} {:close 0, :instruction -82} {:close 0, :instruction integer_eq} {:close 1, :instruction boolean_and} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_eq})
Best program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 19
Size: 24
Percent parens: 0.208
--- Population Statistics ---
Average total errors in population: 1.406
Median total errors in population: 0
Error averages by case: (0.064 0.095 0.058 0.09 0.087 0.286 0.095 0.06 0.285 0.286)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 19.798
Average program size in population (points): 24.827
Average percent parens in population: 0.204
Minimum age in population: 65.17236010062561
Maximum age in population: 67.17236010062561
Average age in population: 66.21719558406431
Median age in population: 66.17236010062561
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 285
Genome diversity (% unique genomes):	 0.262
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 286
Syntactic diversity (% unique Push programs):	 0.259
Total error diversity:				 0.011
Error (vector) diversity:			 0.015
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 14376802
--- Timings ---
Current time: 1559583209274 milliseconds
Total Time:         106.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        82.3 seconds, 77.5%
Fitness Testing:     14.6 seconds, 13.7%
Report:               9.2 seconds,  8.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 44
Successful program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 24


Auto-simplifying with starting size: 24
step: 0
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 500
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 1000
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 1500
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 2000
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 2500
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 3000
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 3500
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 4000
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 4500
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

step: 5000
program: (exec_rot (boolean_dup exec_dup_times (boolean_dup in2 in4 boolean_swap integer_min in1 boolean_swap integer_min boolean_swap boolean_flush print_integer) -82 integer_eq boolean_and) (integer_eq boolean_eq) ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 24

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 44
Test total error for best: 191
Test mean error for best: 0.19100
Test Case    0 | Error: 1
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 1
Test Case    7 | Error: 1
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 1
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 1
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 1
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 1
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 1
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 1
Test Case   86 | Error: 0
Test Case   87 | Error: 1
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 1
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 1
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 1
Test Case  209 | Error: 1
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 1
Test Case  238 | Error: 0
Test Case  239 | Error: 1
Test Case  240 | Error: 0
Test Case  241 | Error: 1
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 1
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 1
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 1
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 1
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 1
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 1
Test Case  279 | Error: 0
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 1
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 1
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 1
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 1
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 1
Test Case  326 | Error: 0
Test Case  327 | Error: 1
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 1
Test Case  345 | Error: 0
Test Case  346 | Error: 1
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 1
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 1
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 1
Test Case  369 | Error: 1
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 1
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 1
Test Case  381 | Error: 1
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 1
Test Case  399 | Error: 0
Test Case  400 | Error: 1
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 1
Test Case  408 | Error: 1
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 1
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 1
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 1
Test Case  438 | Error: 1
Test Case  439 | Error: 0
Test Case  440 | Error: 1
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 1
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 1
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 1
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 1
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 1
Test Case  468 | Error: 0
Test Case  469 | Error: 1
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 1
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 1
Test Case  480 | Error: 1
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 1
Test Case  489 | Error: 0
Test Case  490 | Error: 1
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 1
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 1
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 1
Test Case  533 | Error: 1
Test Case  534 | Error: 1
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 1
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 1
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 1
Test Case  554 | Error: 0
Test Case  555 | Error: 1
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 1
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 1
Test Case  579 | Error: 1
Test Case  580 | Error: 0
Test Case  581 | Error: 1
Test Case  582 | Error: 1
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 1
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 1
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 1
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 1
Test Case  599 | Error: 1
Test Case  600 | Error: 0
Test Case  601 | Error: 1
Test Case  602 | Error: 1
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 1
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 1
Test Case  619 | Error: 1
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 1
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 1
Test Case  633 | Error: 1
Test Case  634 | Error: 1
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 1
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 1
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 1
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 1
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 1
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 1
Test Case  674 | Error: 1
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 1
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 1
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 1
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 1
Test Case  701 | Error: 0
Test Case  702 | Error: 1
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 1
Test Case  707 | Error: 1
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 1
Test Case  725 | Error: 1
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 1
Test Case  745 | Error: 0
Test Case  746 | Error: 1
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 1
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 1
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 1
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 1
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 1
Test Case  809 | Error: 0
Test Case  810 | Error: 1
Test Case  811 | Error: 1
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 1
Test Case  816 | Error: 0
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 1
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 1
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 1
Test Case  844 | Error: 1
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 1
Test Case  851 | Error: 0
Test Case  852 | Error: 1
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 1
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 1
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 1
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 1
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 1
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 1
Test Case  914 | Error: 1
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 1
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 1
Test Case  927 | Error: 1
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 1
Test Case  934 | Error: 1
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 1
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 1
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 1
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 1
Test Case  971 | Error: 0
Test Case  972 | Error: 1
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 1
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: -63                 | Program output: -63                
Correct output: 20                  | Program output: 20                 
Correct output: -70                 | Program output: -70                
Correct output: -87                 | Program output: -87                
Correct output: -28                 | Program output: -28                
Correct output: 20                  | Program output: 20                 
Correct output: 73                  | Program output: 73                 
Correct output: -1                  | Program output: -1                 
Correct output: 33                  | Program output: 33                 
Correct output: -29                 | Program output: -29                
Correct output: 69                  | Program output: 69                 
Correct output: -93                 | Program output: -93                
Correct output: -73                 | Program output: -73                
Correct output: -11                 | Program output: -11                
Correct output: 38                  | Program output: 38                 
Correct output: 14                  | Program output: 14                 
Correct output: 14                  | Program output: 14                 
Correct output: 8                   | Program output: 8                  
Correct output: 32                  | Program output: 32                 
Correct output: 22                  | Program output: 22                 
Correct output: 17                  | Program output: 17                 
Correct output: 13                  | Program output: 13                 
Correct output: 57                  | Program output: 57                 
Correct output: 12                  | Program output: 12                 
Correct output: 35                  | Program output: 35                 
Correct output: 60                  | Program output: 60                 
Correct output: 31                  | Program output: 31                 
Correct output: 24                  | Program output: 53                 
Correct output: 3                   | Program output: 3                  
Correct output: 46                  | Program output: 46                 
Correct output: 56                  | Program output: 58                 
Correct output: 29                  | Program output: 29                 
Correct output: 0                   | Program output: 0                  
Correct output: 17                  | Program output: 17                 
Correct output: 3                   | Program output: 3                  
Correct output: -39                 | Program output: -39                
Correct output: -44                 | Program output: -44                
Correct output: -97                 | Program output: -97                
Correct output: -76                 | Program output: -76                
Correct output: -11                 | Program output: -11                
Correct output: -95                 | Program output: -95                
Correct output: -78                 | Program output: -56                
Correct output: -97                 | Program output: -97                
Correct output: -40                 | Program output: -40                
Correct output: -92                 | Program output: -92                
Correct output: 7                   | Program output: 7                  
Correct output: -1                  | Program output: -1                 
Correct output: -71                 | Program output: -71                
Correct output: -27                 | Program output: -27                
Correct output: -82                 | Program output: -82                
Correct output: -73                 | Program output: -73                
Correct output: -88                 | Program output: -9                 
Correct output: -52                 | Program output: -52                
Correct output: -79                 | Program output: -79                
Correct output: -71                 | Program output: -71                
Correct output: -53                 | Program output: -53                
Correct output: -64                 | Program output: -64                
Correct output: -68                 | Program output: -68                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -55                 | Program output: -55                
Correct output: -87                 | Program output: -84                
Correct output: -40                 | Program output: -39                
Correct output: -95                 | Program output: -95                
Correct output: -68                 | Program output: -66                
Correct output: -28                 | Program output: -28                
Correct output: -84                 | Program output: -84                
Correct output: -92                 | Program output: -55                
Correct output: -67                 | Program output: -67                
Correct output: -67                 | Program output: -67                
Correct output: -65                 | Program output: -65                
Correct output: -76                 | Program output: -76                
Correct output: -87                 | Program output: -41                
Correct output: -64                 | Program output: 3                  
Correct output: -24                 | Program output: -24                
Correct output: -35                 | Program output: -35                
Correct output: -33                 | Program output: -33                
Correct output: -17                 | Program output: -17                
Correct output: -91                 | Program output: -91                
Correct output: -74                 | Program output: -74                
Correct output: -43                 | Program output: -40                
Correct output: -90                 | Program output: -90                
Correct output: -89                 | Program output: -89                
Correct output: 6                   | Program output: 6                  
Correct output: -49                 | Program output: -49                
Correct output: -91                 | Program output: -66                
Correct output: -82                 | Program output: -82                
Correct output: -39                 | Program output: -36                
Correct output: -83                 | Program output: -58                
Correct output: -37                 | Program output: -37                
Correct output: -76                 | Program output: -76                
Correct output: -19                 | Program output: -19                
Correct output: -73                 | Program output: -73                
Correct output: -87                 | Program output: -87                
Correct output: -39                 | Program output: -39                
;;******************************
